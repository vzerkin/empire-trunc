#! /bin/sh -
#script to reconstruct all redundant reactions and make elastic
#equal original total minus nonelastic (MT=3)
#input: root_file_name and MAT  
if [ -z $EMPIREDIR ]; then
    echo "Please set the 'EMPIREDIR' environment variable."
    echo "See Empire v3 documentation for more information."
    exit
fi

file=$1
MATid=$2
work=`pwd`
if [ "$2" = "" ]; then
  MATid='1111'
fi

if [ "$1" = "" ]
   then
echo 'Inputs ready to run'
echo ' '
ls *.endf
echo ' '
echo -n 'Choose one of the above (without .endf extention!): '
read file
fi

# STORE TOTAL TO PRESERVE IT WHEN FIRST RUN OF FIXUP OVERWRITES IT
rm -f MERGER.INP TOTAL.ENDF 2>/dev/null
cat >MERGER.INP <<EOF
TOTAL.ENDF
                                                                        
$file.endf
END
  $2 3  1  $2 3  1

EOF
$EMPIREDIR/util/prepro/merger < MERGER.INP
mv MERGER.LST $work/$file-log1.merger

#read dum

# RECONSTRUCT REDUNDANT REACTIONS AND TOTAL WITH FIXUP (Out: FIXUP1.ENDF)
rm -f FIXUP1.ENDF 2>/dev/null
cat >FIXUP.INP <<EOF
10002011111001                                                              
$file.endf
FIXUP1.ENDF
 7.71810+ 3 0.00000+00          0          0${2}  3
 0.00000+ 0 0.00000+ 0          0          0           
 7.11810+ 3 0.00000+00          0          0${2}  4
 0.00000+ 0 0.00000+ 0          0          0           
 7.11810+ 3 0.00000+00          0          0${2}103
 0.00000+ 0 0.00000+ 0          0          0           



EOF
$EMPIREDIR/util/prepro/fixup < FIXUP.INP
mv FIXUP.LST $work/$file-log1.fixup
if [ ! -f FIXUP1.ENDF ]; then
    echo " FATAL ERROR:"
    echo " FIXUP output file (FIXUP1.ENDF) with reconstructed  redundant x-sec was not created."
    echo " Hit any button to exit "
    read a
    exit
fi

#read dum

# RECOVER ORIGINAL TOTAL i.e. COPY TOTAL.ENDF back to the FIXUP1.ENDF (Out: MERGER.ENDF)
rm -f MERGER.INP MERGER.ENDF 2>/dev/null
cat >MERGER.INP <<EOF
MERGER.ENDF
                                                                        
TOTAL.ENDF
FIXUP1.ENDF
END
  $2               

EOF
$EMPIREDIR/util/prepro/merger < MERGER.INP
mv MERGER.LST $work/$file-log2.merger
mv -f MERGER.ENDF FIXUP1.ENDF
rm TOTAL.ENDF

#read dum

# RECONSTRUCT ELASTIC WITH FIXUP (Out:FIXUP2.ENDF)
rm -f FIXUP.INP FIXUP2.ENDF 2>/dev/null
cat >FIXUP.INP <<EOF
10001011110001                                                              
FIXUP1.ENDF
FIXUP2.ENDF
  2=(  1,  1)-(  3,  3)


EOF
$EMPIREDIR/util/prepro/fixup < FIXUP.INP
mv FIXUP.LST $work/$file-log2.fixup
if [ ! -f FIXUP2.ENDF ]; then
    echo " FATAL ERROR:"
    echo " FIXUP output file (FIXUP2.ENDF) with reconstructed  elastic x-sec was not created."
    echo " Hit any button to exit "
    read a
    exit
fi

# CHECK THAT THE testfile CONTAINS FEND RECORD AT THE END AND IS OF NON-TRIVIAL LENGTH (>5 LINES)
# IF IT IS SAFE OVERWRITE $file.endf
testfile=FIXUP2.ENDF
if [ ! -f $testfile ]; then
    echo " FATAL ERROR:"
    echo " Output file " $testfile " has not been created."
    echo " Hit any button to exit "
    read a
    exit
fi
fend=`tail -1 $testfile | cut -c 69-70`
nlines=`cat $testfile | wc -l`
echo ' '
echo $testfile ' ends with:' `tail -1 $testfile`
if [ $fend = -1 ]; then
   echo 'ENDF file has ' $nlines ' lines and ends with the FEND record' 
   if [ $nlines > 5 ]; then
      echo $testfile ' assumed correct and will overwrite' $file.endf
      mv $testfile $file.endf
   else
      echo 'Not enough lines in ' $testfile
      echo 'Processing has failed - EXIT without overwritting ' $file.end
      read a
      exit
   fi
else 
   echo 'Not a legal FEND record at the end of ' $testfile
   echo 'Processing has failed - EXIT without overwritting ' $file.endf
   read a
fi

# RUN STAN
echo "Running STAN"
$EMPIREDIR/scripts/stanef $file 

rm MERGER.INP FIXUP.INP FIXUP1.ENDF

exit

