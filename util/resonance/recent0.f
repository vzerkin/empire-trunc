C=======================================================================
C
C     PROGRAM THERMX (REVISED RECENT)
C
C     MODIFIED TO WRITE THE CROSS SECTION AT SOME DESIRED ENERGIES ONLY
C     THIS PROGRAM :
C      1. DOES NOT WRITE ENDF FILE FOR SPEED-UP
C      2. PRINTS CROSS SECTIONS AT SOME CHOSEN ENERGIES AND THE FIRST FEW RESONANCE ENERGIES
C      3. SUPPORTS BREIT-WIGNER LEVEL DATA ONLY
C     
C
C
C     VERSION 79-1 (OCTOBER 1979)  CDC-7600
C     VERSION 80-1 (MAY 1980)      IBM, CDC AND CRAY VERSION
C     VERSION 80-2 (DECEMBER 1980) IMPROVED TREATMENT OF UNRESOLVED
C                                  REGION TO COMPUTE ALL REACTIONS AT
C                                  THE SAME TIME.
C     VERSION 81-1 (MARCH 1981)  IMPROVED BASED ON USER COMMENTS.
C     VERSION 81-2 (AUGUST 1981) ADDED MONITOR MODE. ADDED SPEED OPTION
C                                TO BYPASS BACKWARDS THINNING IF FILE 3
C                                ALLOWABLE ERROR = 0.0 (NOTE THIS OPTION
C                                WILL RESULT IN ALL TABULATED POINTS
C                                FROM THE EVALUATION BEING KEPT IN THE
C                                OUTPUT FROM THIS PROGRAM).
C     VERSION 82-1 (JANUARY 1982) IMPROVED COMPUTER COMPATIBILITY.
C     VERSION 83-1 (JANUARY 1983)*MAJOR RE-DESIGN.
C                                *PAGE SIZES INCREASED.
C                                *ELIMINATED COMPUTER DEPENDENT CODING.
C                                *NEW, MORE COMPATIBLE I/O UNIT NUMBERS.
C                                *ADDED OPTION TO KEEP ALL RECONSTRUCTED
C                                 AND BACKGROUND ENERGY POINTS.
C                                *ADDED STANDARD ALLOWABLE ERROR OPTIONS
C                                 (CURRENTLY 0.1 PER-CENT RECONSTRUCTION
C                                 AND 0.0 PER-CENT THINNING).
C     VERSION 83-2 (OCTOBER 1983) IMPROVED BASED ON USER COMMENTS.
C     VERSION 84-1 (JANUARY 1984) IMPROVED INTERVAL HALFING CONVERGENCE.
C     VERSION 85-1 (APRIL 1985)  *A BRAND NEW PROGRAM WHICH COMPLETELY
C                                 SUPERCEDES ALL PREVIOUS VERSIONS OF
C                                 THIS PROGRAM.
C                                *UPDATED FOR ENDF/B-VI FORMATS.
C                                *ADDED GENERAL REICH-MOORE FORMALISM
C                                 (WITH TWO FISSION CHANNELS).
C                                *DECREASED RUNNING TIME.
C                                *SPECIAL I/O ROUTINES TO GUARANTEE
C                                 ACCURACY OF ENERGY.
C                                *DOUBLE PRECISION TREATMENT OF ENERGY
C                                 (REQUIRED FOR NARROW RESONANCES).
C     VERSION 85-2 (AUGUST 1985) *FORTRAN-77/H VERSION
C     VERSION 86-1 (JANUARY 1986)*ENERGY DEPENDENT SCATTERING RADIUS
C     VERSION 86-2 (JUNE 1986)   *IF FIRST CHANCE FISSION (MT=19)
C                                 BACKGROUND IS PRESENT ADD RESONANCE
C                                 CONTRIBUTION OF FISSION TO IT.
C     VERSION 86-3 (OCTOBER 1986)*MULTI-LEVEL OR REICH-MOORE..CORRECT
C                                 POTENTIAL SCATTERING CROSS SECTION FOR
C                                 MISSING AND/OR FICTICIOUS (L,J)
C                                 SEQUENCES.
C     VERSION 87-1 (JANUARY 1987)*IMPROVED COMBINING FILE 2+3
C     VERSION 87-2 (MARCH 1987)  *CORRECTED ADLER-ADLER CALCULATIONS.
C     VERSION 88-1 (JULY 1988)   *UPDATED REICH-MOORE ENDF/B-VI FORMAT
C                                 TO BE THE SAME AS REICH-MOORE FORMAT
C                                 IN EARLIER VERSIONS OF ENDF/B FORMAT.
C                                *CHECK FOR PRELIMINARY ENDF/B-VI
C                                 REICH-MOORE FORMAT (NOW ABANDONED)
C                                 AND TERMINATE EXECUTION IF DATA IS
C                                 IN THIS FORMAT.
C                                *CALCULATE CHANNEL RADIUS OR SET IT
C                                 EQUAL TO THE SCATTERING RADIUS.
C                                *IMPLEMENTED HYBRID R-FUNCTION WITH THE
C                                 FOLLOWING RESTRICTIONS
C                                 - ONLY INELASTIC COMPETITION (NO
C                                   CHARGED PARTICLES)
C                                 - NO TABULATED FILE 2 BACKGROUND
C                                 - NO TABULATED OPTICAL MODEL PHASE
C                                   SHIFT
C                                *PROGRAM EXIT IF GENERAL R-MATRIX IN
C                                 THE EVALUATION (THIS FORMALISM WILL
C                                 BE IMPLEMENTED ONLY AFTER THE AUTHOR
C                                 RECEIVES REAL EVALUATIONS WHICH USE
C                                 THIS FORMALISM...UNTIL THEN IT IS
C                                 IMPOSSIBLE TO ADEQUATELY TEST THAT
C                                 THE CODING FOR THIS FORMALISM IS
C                                 CORRECT).
C                                *INCREASED MAXIMUM NUMBER OF RESONANCES
C                                 FROM 1002 TO 4008.
C                                *DOUBLE PRECISION RESONANCE REGION
C                                 LIMITS.
C                                *FILE 2 AND FILE 3 ENERGIES WHICH ARE
C                                 NEARLY EQUAL ARE TREATED AS EQUAL
C                                 (I.E., SAME TO ABOUT 9 DIGITS).
C                                *CHECK FILE 3 BACKGROUND CROSS SECTIONS
C                                 IN EDIT MODE.
C                                *OPTION...INTERNALLY DEFINE FILENAMES
C                                 (SEE SUBROUTINE FILEIO FOR DETAILS).
C     VERSION 89-1 (JANUARY 1989)*PSYCHOANALYZED BY PROGRAM FREUD TO
C                                 INSURE PROGRAM WILL NOT DO ANYTHING
C                                 CRAZY.
C                                *UPDATED TO USE NEW PROGRAM CONVERT
C                                 KEYWORDS.
C                                *CORRECTED MULTILEVEL, REICH-MOORE AND
C                                 HYBRID R-FUNCTION POTENTIAL SCATTER
C                                 TO ACCOUNT FOR REPEATED J-VALUES FOR
C                                 THE SAME TARGET SPIN AND L-VALUE.
C                                *ADDED LIVERMORE CIVIC COMPILER
C                                 CONVENTIONS.
C                                *UPDATED TO USE NEW ENDF/B-VI
C                                 CONVENTION TO ALLOW UNRESOLVED
C                                 RESONANCE CONTRIBUTION TO ALREADY
C                                 BE INCLUDED IN THE FILE 3 CROSS
C                                 SECTIONS (INFINITELY DIULUTE
C                                 CONTRIBUTION).
C     VERSION 90-1 (JUNE 1990)   *UPDATED BASED ON USER COMMENTS
C                                *ADDED FORTRAN SAVE OPTION
C                                *NEW MORE CONSISTENT ENERGY OUTPUT
C                                 ROUTINE
C     VERSION 91-1 (JULY 1991)   *NEW UNIFORM TREATMENT OF ALL RESONANCE
C                                 FORMALISMS (SEE, COMMENTS BELOW)
C                                *NEW REICH-MOORE ALGORITHM
C                                *MORE EXTENSIVE ERROR CHECKING AND
C                                 ERROR MESSAGE EXPLANATIONS
C     VERSION 92-1 (JANUARY 1992)*MAJOR RESTRUCTING TO IMPROVE ACCURACY
C                                 AND COMPUTER INDEPENDENCE.
C                                *INCREASED ENERGY POINT PAGE SIZE FROM
C                                 1002 TO 4008.
C                                *NO MORE THAN 2 ENERGY POINTS WHERE
C                                 CROSS SECTION IS ZERO AT BEGINNING
C                                 OF A SECTION FOR EACH REACTION,E.G.,
C                                 THRESHOLD FISSION.
C                                *PROCESS ONLY A PORTION OF RESONANCE
C                                 REGION - SEE EXPLANATION BELOW
C                                *ALL ENERGIES INTERNALLY ROUNDED PRIOR
C                                 TO CALCULATIONS.
C                                *COMPLETELY CONSISTENT I/O AND ROUNDING
C                                 ROUTINES - TO MINIMIZE COMPUTER
C                                 DEPENDENCE.
C     VERSION 93-1 (MARCH 1993)  *UPDATED REICH-MOORE TREATMENT TO USE
C                                 L DEPENDENT SCATTERING RADIUS (APL)
C                                 RATHER THAN SCATTERING RADIUS (AP)
C                                 (SEE, ENDF/B-VI FORMATS AND
C                                  PROCEDURES MANUAL, PAGE 2.6)
C                                *INCREASED PAGE SIZE FROM 4008 TO
C                                 20040 DATA POINTS.
C                                *INCREASED MAXIMUM NUMBER OF RESONANCES
C                                 FROM 4008 TO 20040.
C     VERSION 94-1 (JANUARY 1994)*VARIABLE ENDF/B DATA FILENAMES
C                                 TO ALLOW ACCESS TO FILE STRUCTURES
C                                 (WARNING - INPUT PARAMETER FORMAT
C                                 HAS BEEN CHANGED).
C                                *CLOSE ALL FILES BEFORE TERMINATING
C                                 (SEE, SUBROUTINE ENDIT)
C     VERSION 94-2 (AUGUST 1994) *CORRECTED ADDJ FOR ENERGY DEPENDENT
C                                 (TABULATED) SCATTERING RADIUS CASE.
C     VERSION 96-1 (JANUARY 1996) *COMPLETE RE-WRITE
C                                 *IMPROVED COMPUTER INDEPENDENCE
C                                 *ALL DOUBLE PRECISION
C                                 *ON SCREEN OUTPUT
C                                 *UNIFORM TREATMENT OF ENDF/B I/O
C                                 *IMPROVED OUTPUT PRECISION
C                                 *ALWAYS INCLUDE THERMAL VALUE
C                                 *DEFINED SCRATCH FILE NAMES
C     VERSION 97-1 (APRIL 1997)   *OPTIONAL MAKE NEGATIVE CROSS
C                                  SECTION = 0 FOR OUTPUT
C                                *INCREASED PAGE SIZE FROM 20040 TO
C                                 120000 DATA POINTS.
C                                *INCREASED MAXIMUM NUMBER OF RESONANCES
C                                 FROM 20040 TO 120000.
C     VERSION 99-1 (MARCH 1999)   *CORRECTED CHARACTER TO FLOATING
C                                  POINT READ FOR MORE DIGITS
C                                 *UPDATED TEST FOR ENDF/B FORMAT
C                                  VERSION BASED ON RECENT FORMAT CHANGE
C                                 *UPDATED CONSTANTS BASED ON CSEWG
C                                  SUBCOMMITTEE RECOMMENDATIONS
C                                 *GENERAL IMPROVEMENTS BASED ON
C                                  USER FEEDBACK
C     VERSION 99-2 (JUNE 1999)    *IMPLEMENTED NEW REICH-MOORE FORMALISM
C                                  TO ALLOW DEFINITION OF (L,J,S) FOR
C                                  EACH SEQUENCE.
C                                 *ASSUME ENDF/B-VI, NOT V, IF MISSING
C                                  MF=1, MT-451.
C     VERS. 2000-1 (FEBRUARY 2000)*GENERAL IMPROVEMENTS BASED ON
C                                  USER FEEDBACK
C
C     OWNED, MAINTAINED AND DISTRIBUTED BY
C     ------------------------------------
C     THE NUCLEAR DATA SECTION
C     INTERNATIONAL ATOMIC ENERGY AGENCY
C     P.O. BOX 100
C     A-1400, VIENNA, AUSTRIA
C     EUROPE
C
C     ORIGINALLY WRITTEN BY
C     ------------------------------------
C     DERMOTT E. CULLEN
C     CURRENT ADDRESS
C     UNIVERSITY OF CALIFORNIA
C     LAWRENCE LIVERMORE NATIONAL LABORATORY
C     L-86
C     P.O. BOX 808
C     LIVERMORE, CA 94550
C     U.S.A.
C     TELEPHONE  925-423-7359
C     E. MAIL    CULLEN1@LLNL.GOV
C     WEBSITE    HTTP://REDDOG1.LLNL.GOV
C
C     ACKNOWLEDGEMENT (VERSION 92-1)
C     ==================================================================
C     THE AUTHOR THANKS SOL PEARLSTEIN (BROOKHAVEN NATIONAL LAB) FOR
C     SIGNIFICANTLY CONTRIBUTING TOWARD IMPROVING THE ACCURACY AND
C     COMPUTER INDEPENDENCE OF THIS CODE - THANKS, SOL
C     ==================================================================
C
C     REPORT UCRL-50400, VOL. 17, PART C (1979)
C            LAWRENCE LIVERMORE LABORATORY
C
C     AUTHORS MESSAGE
C     ==================================================================
C     THE REPORT DESCRIBED ABOVE IS THE LATEST PUBLISHED DOCUMENTATION
C     FOR THIS PROGRAM. HOWEVER, THE COMMENTS BELOW SHOULD BE CONSIDERED
C     THE LATEST DOCUMENTATION INCLUDING ALL RECENT IMPROVEMENTS. PLEASE
C     READ ALL OF THESE COMMENTS BEFORE IMPLEMENTATION, PARTICULARLY
C     THE COMMENTS CONCERNING MACHINE DEPENDENT CODING.
C
C     AT THE PRESENT TIME WE ARE ATTEMPTING TO DEVELOP A SET OF COMPUTER
C     INDEPENDENT PROGRAMS THAT CAN EASILY BE IMPLEMENTED ON ANY ONE
C     OF A WIDE VARIETY OF COMPUTERS. IN ORDER TO ASSIST IN THIS PROJECT
C     IT WOULD BE APPECIATED IF YOU WOULD NOTIFY THE AUTHOR OF ANY
C     COMPILER DIAGNOSTICS, OPERATING PROBLEMS OR SUGGESTIONS ON HOW TO
C     IMPROVE THIS PROGRAM. HOPEFULLY, IN THIS WAY FUTURE VERSIONS OF
C     THIS PROGRAM WILL BE COMPLETELY COMPATIBLE FOR USE ON YOUR
C     COMPUTER.
C
C     PURPOSE
C     ==================================================================
C     THIS PROGRAM IS DESIGNED TO RECONSTRUCT THE RESONANCE CONTRIBUTION
C     TO THE CROSS SECTION IN LINEARLY INTERPOLABLE FORM, ADD IN ANY
C     LINEARLY INTERPOLABLE BACKGROUND CROSS SECTION AND OUTPUT THE
C     RESULT IN THE ENDF/B FORMAT. THE CROSS SECTIONS OUTPUT BY THIS
C     PROGRAM WILL BE LINEARLY INTERPOLABLE OVER THE ENTIRE ENERGY RANGE
C
C     THE RESONANCE CONTRIBUTION IS CALCULATED FOR TOTAL (MT=1),
C     ELASTIC (MT=2), CAPTURE (MT=102) AND FISSION (MT=18), ADDED
C     TO THE BACKGROUND (IF ANY) AND OUTPUT. IN ADDITION, IF THERE
C     IS A FIRST CHANCE FISSION (MT=19) BACKGROUND PRESENT THE RESONANCE
C     CONTRIBUTION OF FISSION WILL BE ADDED TO THE BACKGROUND AND
C     OUTPUT. IF THERE IS NO FIRST CHANCE FISSION (MT=19) BACKGROUND
C     PRESENT THE PROGRAM WILL NOT OUTPUT MT=19.
C
C     IN THE FOLLOWING FOR SIMPLICITY THE ENDF/B TERMINOLOGY--ENDF/B
C     TAPE--WILL BE USED. IN FACT THE ACTUAL MEDIUM MAY BE TAPE, CARDS,
C     DISK OR ANY OTHER MEDIUM.
C
C     PROCESSING DATA IN THE ENDF/B-VI FORMAT
C     ==================================================================
C     IT HAS NOW BEEN CONFIRMED (PRIVATE COMMUNICATION, CHARLES DUNFORD,
C     APRIL, 1991) THAT THE PROPER PROCEDURE TO FOLLOW WHEN THERE ARE
C     MISSING OR DUPLICATE J VALUES IS TO IN ALL CASES ADD A SEQUENCE
C     WITH NO RESONANCES TO ACCOUNT FOR THE CONTRIBUTION OF THE SEQUENCE
C     TO THE POTENTIAL SCATTERING CROSS SECTION.
C
C     THIS IS THE PROCEDURE WHICH WAS FOLLOWED BY ALL VERSIONS OF RECENT
C     SINCE 86-3 AND WILL CONTINUE TO BE THE PROCEDURE.
C
C     INPUT ENDF/B FORMAT AND CONVENTIONS
C     ==================================================================
C     ENDF/B FORMAT
C     -------------
C     THIS PROGRAM ONLY USES THE ENDF/B BCD OR LINE IMAGE FORMAT (AS
C     OPPOSED TO THE BINARY FORMAT) AND CAN HANDLE DATA IN ANY VERSION
C     OF THE ENDF/B FORMAT (I.E., ENDF/B-I, II,III, IV, V OR VI FORMAT).
C
C     IT IS ASSUMED THAT THE DATA IS CORRECTLY CODED IN THE ENDF/B
C     FORMAT AND NO ERROR CHECKING IS PERFORMED. IN PARTICULAR IT IS
C     ASSUMED THAT THE MAT, MF AND MT ON EACH LINE IS CORRECT. SEQUENCE
C     NUMBERS (COLUMNS 76-80) ARE IGNORED ON INPUT, BUT WILL BE
C     CORRECTLY OUTPUT ON ALL CARDS. THE FORMAT OF SECTION MF=1, MT=451
C     AND ALL SECTIONS OF MF=2 AND 3 MUST BE CORRECT. THE PROGRAM COPIES
C     ALL OTHER SECTION OF DATA AS HOLLERITH AND AS SUCH IS INSENSITIVE
C     TO THE CORRECTNESS OR INCORRECTNESS OF ALL OTHER SECTIONS.
C
C     ENDF/B FORMAT VERSION
C     ---------------------
C     THE FORMATS AND CONVENTIONS FOR READING AND INTERPRETING THE DATA
C     VARIES FROM ONE VERSION OF ENDF/B TO THE NEXT. HOWEVER, IF THE
C     HOLLERITH SECTION (MF=1, MT=451) IS PRESENT IT IS POSSIBLE FOR
C     THIS PROGRAM TO DISTINGUISH BETWEEN DATA IN THE ENDF/B-IV, V AND
C     VI FORMATS AND TO USE THE APPROPRIATE CONVENTIONS FOR EACH
C     ENDF/B VERSION (SEE, SUBROUTINE FILE1 FOR A DESCRIPTION OF HOW
C     THIS IS DONE). IF THE HOLLERITH SECTION IS NOT PRESENT THE
C     PROGRAM WILL ASSUME THE DATA IS IN THE ENDF/B-VI FORMAT AND USE
C     ALL CONVENTIONS APPROPRIATE TO ENDF/B-V. USERS ARE ENCOURAGED TO
C     INSURE THAT THE HOLLERITH SECTION (MF=1, MT=451) IS PRESENT IN
C     ALL EVALUATIONS.
C
C     INPUT OF ENERGIES
C     -----------------
C     ALL ENERGIES ARE READ IN DOUBLE PRECISION (BY SPECIAL FORTRAN I/O
C     ROUTINES) AND ARE TREATED IN DOUBLE PRECISION IN ALL CALCULATIONS.
C
C     OUTPUT ENDF/B FORMAT AND CONVENTIONS
C     ==================================================================
C     CONTENTS OF OUTPUT
C     ------------------
C     ENTIRE EVALUATIONS ARE OUTPUT, NOT JUST THE RECONSTRUCTED FILE
C     3 CROSS SECTIONS, E.G. ANGULAR AND ENERGY DISTRIBUTIONS ARE
C     ALSO INCLUDED.
C
C     DOCUMENTATION
C     -------------
C     THE FACT THAT THIS PROGRAM HAS OPERATED ON THE DATA IS DOCUMENTED
C     BY THE ADDITION OF COMMENT CARDS AT THE END OF EACH HOLLERITH
C     SECTION IN THE FORM
C
C     ***************** RECENT (VERSION 2000-1) ***************
C     RESONANCE CONTRIBUTION RECONSTRUCTED TO WITHIN   0.100 PER-CENT
C     COMBINED DATA NOT THINNED (ALL RESONANCE + BACKGROUND DATA KEPT)
C
C     THE ORDER OF ALL SIMILAR COMMENTS (FROM LINEAR, SIGMA1 AND GROUPY)
C     REPRESENTS A COMPLETE HISTORY OF ALL OPERATIONS PERFORMED ON
C     THE DATA, INCLUDING WHICH VERSION OF EACH PROGRAM WAS USED.
C
C     THESE COMMENT CARDS ARE ONLY ADDED TO EXISTING HOLLERITH SECTIONS,
C     I.E., THIS PROGRAM WILL NOT CREATE A HOLLERITH SECTION. THE FORMAT
C     OF THE HOLLERITH SECTION IN ENDF/B-V DIFFERS FROM THE THAT OF
C     EARLIER VERSIONS OF ENDF/B. BY READING AN EXISTING MF=1, MT=451
C     IT IS POSSIBLE FOR THIS PROGRAM TO DETERMINE WHICH VERSION OF
C     THE ENDF/B FORMAT THE DATA IS IN. WITHOUT HAVING A SECTION OF
C     MF=1, MT=451 PRESENT IT IS IMPOSSIBLE FOR THIS PROGRAM TO
C     DETERMINE WHICH VERSION OF THE ENDF/B FORMAT THE DATA IS IN, AND
C     AS SUCH IT IS IMPOSSIBLE FOR THE PROGRAM TO DETERMINE WHAT FORMAT
C     SHOULD BE USED TO CREATE A HOLLERITH SECTION.
C
C     REACTION INDEX
C     --------------
C     THIS PROGRAM DOES NOT USE THE REACTION INDEX WHICH IS GIVEN IN
C     SECTION MF=1, MT=451 OF EACH EVALUATION.
C
C     THIS PROGRAM DOES NOT UPDATE THE REACTION INDEX IN MF=1, MT=451.
C     THIS CONVENTION HAS BEEN ADOPTED BECAUSE MOST USERS DO NOT
C     REQUIRE A CORRECT REACTION INDEX FOR THEIR APPLICATIONS AND IT WAS
C     NOT CONSIDERED WORTHWHILE TO INCLUDE THE OVERHEAD OF CONSTRUCTING
C     A CORRECT REACTION INDEX IN THIS PROGRAM. HOWEVER, IF YOU REQUIRE
C     A REACTION INDEX FOR YOUR APPLICATIONS, AFTER RUNNING THIS PROGRAM
C     YOU MAY USE PROGRAM DICTION TO CREATE A CORRECT REACTION INDEX.
C
C     OUTPUT FORMAT OF ENERGIES
C     -------------------------
C     IN THIS VERSION OF RECENT ALL FILE 3 ENERGIES WILL BE OUTPUT IN
C     F (INSTEAD OF E) FORMAT IN ORDER TO ALLOW ENERGIES TO BE WRITTEN
C     WITH UP TO 9 DIGITS OF ACCURACY. IN PREVIOUS VERSIONS THIS WAS AN
C     OUTPUT OPTION. HOWEVER USE OF THIS OPTION TO COMPARE THE RESULTS
C     OF ENERGIES WRITTEN IN THE NORMAL ENDF/B CONVENTION OF 6 DIGITS
C     TO THE 9 DIGIT OUTPUT FROM THIS PROGRAM DEMONSTRATED THAT FAILURE
C     TO USE THE 9 DIGIT OUTPUT CAN LEAD TO LARGE ERRORS IN THE DATA
C     JUST DUE TO TRANSLATION OF ENERGIES FROM THEIR INTERNAL (BINARY)
C     REPRESENTATION TO THE ENDF/B FORMAT.
C
C     ACCURACY OF ENERGY
C     ------------------
C     IN ORDER TO ALLOW ENERGIES TO BE ACCURATELY OUTPUT TO 9 DIGITS
C     ON SHORT WORD LENGTH COMPUTERS (E.G. IBM) ALL ENERGIES AND
C     ENERGY DEPENDENT TERMS ARE READ AND TREATED IN DOUBLE PRECISION.
C
C     OUTPUT OF RESONANCE PARAMETERS
C     ------------------------------
C     A SPECIAL CONVENTION HAS BEEN INTRODUCED REGARDING RESONANCE
C     PARAMETERS. IN ORDER TO ALLOW THE USER TO DOPPLER BROADEN AND/OR
C     SELF-SHIELD CROSS SECTIONS THE RESONANCE PARAMETERS ARE ALSO
C     INCLUDED IN THE OUTPUT WITH THE EVALUATION. IN ORDER TO AVOID THE
C     POSSIBILITY OF ADDING THE RESONANCE CONTRIBUTION A SECOND TIME
C     TWO CONVENTIONS HAVE BEEN ADOPTED TO INDICATE THAT THE RESONANCE
C     CONTRIBUTION HAS ALREADY BEEN ADDED TO THE FILE 3 CROSS SECTIONS,
C
C     (1) WHEN THE DATA IS PROCESSED BY THIS PROGRAM LRP (IN MF=1,
C     MT=451) IS SET EQUAL TO 2. THIS IS A CONVENTION WHICH HAS BEEN
C     ADOPTED AS A STANDARD CONVENTION IN ENDF/B-VI, BUT IS ONLY TO BE
C     USED FOR PROCESSED DATA, AS OPPOSED TO THE ORIGINAL EVALUATIONS.
C     IN EVALUATIONS WHICH CONTAIN MF=1, MT=451 LRP CAN BE USED TO
C     DETERMINE IF THE MATERIAL HAS BEEN PROCESSED.
C
C     (2) THE LRU FLAG IN EACH SECTION OF FILE 2 DATA IS CHANGED TO
C     LRU=LRU+3. FOR EXAMPLE WHEN READING AN ENDF/B EVALUATION LRU=0
C     (NO RESONANCES), =1 (RESOLVED) OR =2 (UNRESOLVED) INDICATES THAT
C     THE DATA IS IN THE ORIGINAL ENDF/B FORM. LRU=3 (NO RESONANCES),
C     =4 (RESOLVED) OR =5 (UNRESOLVED) INDICATES THAT THE RESONANCE
C     CONTRIBUTION HAS ALREADY BEEN ADDED TO THE FILE 3 DATA. THIS
C     SECOND CONVENTION HAS BEEN ADOPTED AS INSURANCE THAT THE RESONANCE
C     CONTRIBUTION WILL NOT BE ADDED TWICE, EVEN FOR EVALUATIONS WHICH
C     DO NOT CONTAIN MF=1, MT=451 (EVALUATIONS WHICH CONTAIN MF=1,
C     MT=451 ARE COVERED BY CONVENTION (1), DESCRIBED ABOVE).
C
C     UNIFORM TREATMENT OF RESONANCE FORMALISMS
C     ==================================================================
C     NORMALIZATION
C     =============
C     ALL OF THE RESONANCE FORMALISMS INCLUDE A FACTOR OF,
C
C     PI*(FRACTIONAL ABUNDANCE)/(K**2)
C
C     THIS FACTOR HAS BEEN REMOVED FROM THE CALCULATION OF EACH TYPE
C     OF RESONANCE FORMALISM AND IS APPLIED AS A FINAL NORMALIZATION
C     AFTER THE CALCULATION, ONLY ONE PLACE IN THIS PROGRAM.
C
C     FOR SIMPLICITY THIS TERM IS NOT INCLUDED IN THE FOLLOWING
C     DERIVATIONS - IN ALL CASES THE ACTUAL CROSS SECTION IS A PRODUCT
C     OF THE ABOVE FACTOR TIMES THE RESULTS PRESENTED BELOW.
C
C     SIMILARITIES
C     ============
C     FOR THE RESOLVED RESONANCE REGION, EXCEPT FOR SINGLE LEVEL BREIT
C     WIGNER, PARAMETERS ALL OF THE FORMALISMS DEFINE THE CROSS SECTIONS
C     IN AN EQUIVALENT FORM,
C
C     TOTAL    = 2*GJ*REAL(1 - U)
C              = 2*GJ*(1 - REAL(U))
C     ELASTIC  =   GJ*(1 - U)**2
C              =   GJ*((1 - 2*REAL(U)) + (REAL(U)**2 + IM(U)**2))
C              = 2*GJ*(1 - REAL(U)) - GJ*(1 - (REAL(U)**2 + IM(U)**2))
C
C     SINCE THE FIRST TERM IS THE TOTAL, THE SECOND TERM MUST BE
C     ABSORPTION. SO WE FIND,
C
C     ABSORPTION = GJ*(1 - (REAL(U)**2 + IM(U)**2))
C
C     IN ALL CASES U IS DEFINED IN THE FORM,
C
C     U        = EXP(-I*2*PS)*((1-X) - I*Y)
C
C     WHERE (X) AND (Y) ARE RELATED TO THE SYMMETRIC AND ANTI-SYMMETRIC
C     CONTRIBUTIONS OF THE RESONANCES, RESPECTIVELY. ONLY THE DEFINITION
C     OF (X) AND (Y) WILL BE DIFFERENT FOR EACH RESONANCE FORMALISM.
C     BELOW WE WILL SHOW THAT WHAT MIGHT APPEAR TO BE A STRANGE CHOICE
C     OF DEFINITION OF THE SIGN OF (X) AND(Y) HAS BEEN SELECTED SO THAT
C     FOR BREIT-WIGNER PARAMETERS (X) AND (Y) CORRESPOND EXACTLY TO THE
C     SYMMETRIC AND ANTI-SYMMETRIC CONTRIBUTION OF THE RESONANCES.
C
C     U        = (COS(2*PS) - I*SIN(2*PS))*((1-X) - I*Y)
C              =   ((1-X)*COS(2*PS) - Y*SIN(2*PS))
C              =-I*((1-X)*SIN(2*PS) + Y*COS(2*PS))
C
C     REAL(U)  = ((1-X)*COS(2*PS) - Y*SIN(2*PS))
C     IM(U)    =-((1-X)*SIN(2*PS) + Y*COS(2*PS))
C
C     R(U)**2  =((1-X)*COS(2*PS))**2 + (Y*SIN(2*PS))**2
C               -2*(1-X)*Y*COS(2*PS)*SIN(2*PS)
C     I(U)**2  =((1-X)*SIN(2*PS))**2 + (Y*COS(2*PS))**2
C               +2*(1-X)*Y*COS(2*PS)*SIN(2*PS)
C
C     THE TERMS 2*(1-X)*Y*COS(2*PS)*SIN(2*PS) CANCEL AND UPON USING
C     THE IDENTITY COS(2*PS)**2 + SIN(2*PS)**2 = 1,
C
C     SUM      = (1-X)**2 + (Y)**2
C
C     WE NOW HAVE ALL THE QUANTITIES THAT WE NEED TO DEFINE THE CROSS
C     SECTIONS,
C
C     ELASTIC
C     =======
C     ELASTIC  =GJ*(1 - 2*REAL(U) + (REAL(U)**2 + IM(U)**2))
C              =GJ*(1 - 2*((1-X)*COS(2*PS)-Y*SIN(2*PS))+(1-X)**2+(Y)**2)
C
C     THIS CAN BE WRITTEN AS A SUM OF 2 SQUARES,
C
C     ELASTIC  =GJ*(COS(2*PS) - (1-X))**2 + (SIN(2*PS) + Y)**2)
C
C              =GJ*((COS(2*PS))**2 - 2*(1-X)*COS(2*PS) + (1-X)**2) +
C                   (SIN(2*PS))**2 + 2*Y*SIN(2*PS)    + (Y)**2)
C
C     AGAIN USING THE IDENTITY COS(2*PS)**2 + SIN(2*PS)**2 = 1, WE CAN
C     SEE THAT THE DEFINITION AS THE SUM OF 2 SQUARES IS IDENTICAL TO
C     THE PRECEDING DEFINITION OF THE ELASTIC.
C
C     ELASTIC  =GJ*(COS(2*PS) - (1-X))**2 + (SIN(2*PS) + Y)**2)
C              =GJ*((COS(2*PS)-1) + X)**2 + (SIN(2*PS) + Y)**2)
C
C     USING THE IDENTITY (1 - COS(2*PS))) = 2*SIN(PS)**2, WE OBTAIN
C     THE FINAL FORM FOR THE ELASTIC,
C
C     ELASTIC =GJ*(2*SIN(PS)**2 - X)**2 + (SIN(2*PS) + Y)**2)
C
C     ABSORPTION
C     ==========
C     ABSORPTION = GJ*(1 - (REAL(U)**2 + IM(U)**2))
C                = GJ*(1 - ((1-X)**2   + (Y)**2)
C                = GJ*(1 - (1 - 2*X + (X)**2 + (Y)**2)
C                = GJ*(2*X - (X)**2 + (Y)**2)
C
C     SINCE PHYSICALLY THE ABSORPTION CANNOT BE NEGATIVE WE CAN SEE
C     THAT (X) MUST BE POSITIVE AND 2*X MUST BE GREATER THAN
C     (X)**2 + (Y)**2, FOR ALL OF THE FORMALISMS.
C
C     TOTAL
C     =====
C     IN THIS PROGRAM THE TOTAL CROSS SECTION IS ALWAYS DEFINED TO BE
C     THE SUM OF ITS PARTS - SO THE ABOVE DEFINITION IS NEVER EXPLICITLY
C     USED. HOWEVER, WE CAN LEARN SOMETHING BY EXAMINING THE DEFINITION,
C
C     TOTAL    = 2*GJ*REAL(1 - U)
C              = 2*GJ*(1 - (((1-X)*COS(2*PS) - Y*SIN(2*PS)))
C              = 2*GJ*((1 - COS(2*PS))*(1-X) - (1-X) + Y*SIN(2*PS))
C              = 2*GJ*(2*SIN(PS)**2*(1-X)    - (1-X) + Y*SIN(2*PS))
C
C              = 4*GJ*SIN(PS)**2 +
C                2*GJ*((X-1) - 2*X*SIN(PS)**2 +  Y*SIN(2*PS))
C
C     THE IMPORTANT POINT TO NOTE IS THAT THE DEFINITION OF THE TOTAL
C     DOES NOT EXPLICITLY CONTAIN ANY DEPENDENCE ON X**2 AND Y**2 -
C     THE LEVEL-LEVEL INTERFERENCE TERMS.
C
C     THIS IMPLIES THAT IF A GIVEN SET OF RESONANCE PARAMETERS ARE USED
C     WITH THIS DEFINITION THEY WILL PRODUCE EXACTLY THE SAME TOTAL
C     CROSS SECTION - WHETHER WE CLAIM THE PARAMETERS HAVE BEEN
C     PRODUCED USING A SINGLE OR MULTI-LEVEL FIT. THIS RESULT COULD
C     BE VERY MISLEADING, IF THIS RESULT FOR THE TOTAL IS IMPLIED TO
C     MEAN THAT ONE INTERPRETATION OR THE OTHER WILL NOT HAVE ANY
C     EFFECT ON THE INDIVIDUAL CROSS SECTIONS.
C
C     STARTING FROM EXACTLY THE SAME RESONANCE PARAMETERS, RELATIVE TO
C     THE RESULTS OBTAINED USING THE SINGLE LEVEL FORMULA, MULTI-LEVEL
C     RESULTS WILL TEND TO ALWAYS DECREASE THE ABSORPTION AND INCREASE
C     THE ELASTIC. THIS CAN BE IMMEDIATELY SEEN FROM OUR GENERAL
C     MULTI-LEVEL DEFINITION OF ABSORPTION,
C
C     ABSORPTION =GJ*(2*X - ((X)**2 + (Y)**2))
C
C     THE SINGLE LEVEL ABSORPTION IS,
C
C     ABSORPTION =GJ*(2*X)
C
C     THE DIFFERENCE BETWEEN THE TWO IS -2*GJ*(X**2 + Y**2), SO THAT
C     REGARDLESS OF HOW WE DEFINE (X) AND (Y) THE INCLUSION OF THIS
C     TERM WILL ALWAYS DECREASE ABSORPTION. SINCE THE TOTAL CROSS
C     SECTION IS THE SAME IN BOTH CASE, THIS MEANS THAT THE ELASTIC
C     HAS BEEN INCREASED BY THIS AMOUNT.
C
C     AGAIN, THESE RESULTS ARE BASED ON STARTING FROM EXACTLY THE SAME
C     PARAMETERS - IN ANY ACTUAL CASE THE PARAMETERS BASED ON A SINGLE
C     OR MULTI-LEVEL FIT WILL BE QUITE DIFFERENT - THE POINT THAT WE
C     WANT TO STRESS HERE IS THAT YOU SHOULD NEVER USE PARAMETERS
C     WHICH HAVE BEEN DEFINED BY A FIT USING ONE FORMALISM - IN THE
C     EQUATIONS FOR A DIFFERENT FORMALISM - AND ASSUME THAT THE RESULTS
C     WILL BE CONSISTENT - AND NEVER USE THE TOTAL CROSS SECTION TO
C     SEE WHETHER OR NOT A SET OF SINGLE LEVEL PARAMETERS CAN BE USED
C     WITH A MULTI-LEVEL FORMALISM.
C
C     POTENTIAL CROSS SECTION
C     =======================
C     FAR FROM RESONANCES (X) AND (Y) WILL BE SMALL AND THE ELASTIC
C     CROSS SECTION REDUCES TO,
C
C     ELASTIC =GJ*(2*SIN(PS)**2)**2     + (SIN(2*PS))**2
C             =GJ*4*(SIN(PS)**4         + SIN(2*PS)**2
C
C     USING THE IDENTITY SIN(2*PS) = 2*SIN(PS)*COS(PS)
C
C             =4*GJ*(SIN(PS)**4         + (SIN(PS)*COS(PS))**2)
C             =4*GJ*SIN(PS)**2*(SIN(PS)**2 + COS(PS)**2)
C             =4*GJ*SIN(PS)**2
C
C     WHICH IS THE POTENTIAL CROSS SECTION. NOTE THAT THIS RESULT IS
C     INDEPENDENT OF THE FORMALISM USED, AS IT MUST PHYSICALLY BE,
C     AND AS SUCH ALTHOUGH AS YET WE HAVE NOT DEFINED IT, WE CAN
C     NOW SEE THAT IN ALL CASES (PS) MUST BE THE PHASE SHIFT AND FOR
C     CONSISTENCY IT MUST BE DEFINED USING EXACTLY THE SAME DEFINITION
C     IN ALL CASES.
C
C     IN ADDITION SINCE PHYSICALLY FOR EACH L VALUE WE EXPECT TO OBTAIN
C     A POTENTIAL CROSS SECTION,
C
C     4*(2*L+1)*SIN(PS)**2
C
C     OBVIOUSLY FOR CONSISTENCY WE MUST HAVE,
C
C     (2*L+1) = (SUM OVER J) GJ
C
C     ONLY IN THIS CASE WILL THE RESULTS BE CONSISTENT - THIS POINT WILL
C     BE DISCUSSED IN DETAIL BELOW.
C
C     WHAT ARE THIS TERMS (X) AND (Y)
C     ===============================
C     (X) AND (Y) CAN BE EASILY IDENTIFIED BY CONSIDERING THE SINGLE
C     AND MULTI-LEVEL BREIT WIGNER FORMALISMS. IN THESE CASES WE WILL
C     FIND THAT,
C
C     X        = GAM(N)*GAM(T)/2/DEN
C     Y        = GAM(N)*(E-ER)/DEN
C     DEN      = ((E-ER)**2 + (GAM(T)/2)**2)
C
C     EXTREME CARE HAS TO BE USED TO PROPERLY DEFINE (Y) SUCH THAT IT
C     IS NEGATIVE FOR E LESS THAN ER AND POSITIVE FOR E GREATER THAN
C     ER. I WILL MERELY MENTION THAT THE EQUATIONS FOR ALL FORMALISMS
C     IN ENDF-102 DO NOT CONSISTENTLY USE (E - ER) - IN SOME CASES
C     THIS IS WRITTEN AS (ER - E), WHICH CAN LEAD TO AN INCORRECT
C     SIGN IN THE DEFINITION OF THE (Y) THAT WE REQUIRE.
C
C     THE INTERFERENCE TERMS CAN BE WRITTEN IN TERMS OF,
C     1) LEVEL-SELF INTERFERENCE  = THE CONTRIBUTION OF EACH LEVEL
C                                   INTERFERRING WITH ITSELF
C     2) LEVEL-LEVEL INTERFERENCE = THE CONTRIBUTION OF EACH LEVEL
C                                   INTERFERRRING WITH ALL OTHER LEVELS
C
C     WE WILL REFER TO THESE TWO AS (L-S) AND (L-L),
C
C     X**2     = (GAM(N)*(GAM(T)/2)**2/(DEN)**2      + (L-L)
C              = (GAM(N)**2*((GAM(T)/2)**2)/(DEN)**2 + (L-L)
C     Y**2     = (GAM(N))**2*((E-ER))**2/(DEN)**2    + (L-L)
C
C     X**2+Y**2= GAM(N)**2*DEN/(DEN)**2 = GAM(N)**2/DEN + (L-L)
C
C     TO SEE THE EFFECT OF INCLUDING MULTI-LEVEL INTERFERENCE WE CAN
C     CONSIDER OUR GENERAL EXPRESSION FOR ABSORPTION,
C
C     ABSORPTION =GJ*(2*X - ((X)**2 + (Y)**2))
C
C     AND NOTE THAT FOR BOTH SINGLE AND MULTI-LEVEL BREIT WIGNER THE
C     ENDF-102 SAYS TO TREAT ABSORPTION IN A SINGLE LEVEL APPROXIMATION
C     I.E., IGNORE LEVEL-LEVEL INTERFERENCE. IF ALL INTERFERENCE IS
C     IGNORED THIS IS EQUIVALENT TO COMPLETELY IGNORING X**2 + Y**2 AND
C     DEFINING,
C
C     ABSORPTION =GJ*2*X
C                =2*GJ*GAM(N)*GAM(T)/DEN
C
C     WHICH IS INCORRECT - SINCE THIS SEEMS TO INDICATE EVERYTHING IS
C     ABSORBED. IN ORDER TO OBTAIN THE CORRECT EXPRESSION WE CANNOT
C     COMPLETELY IGNORE INTERFERENCE - WE CAN IGNORE LEVEL-LEVEL
C     INTERFERENCE, BUT WE MUST INCLUDE LEVEL-SELF INTERFERENCE,
C
C     X**2+Y**2= GAM(N)**2/DEN
C
C     ABSORPTION =GJ*(2*X - ((X)**2 + (Y)**2))
C                =GJ*GAM(N)*(GAM(T)-GAM(N))/DEN
C                =GJ*GAM(N)*GAM(A)/DEN
C
C     SUMMARY
C     =======
C     AN IMPORTANT POINT TO NOTE IS THE DEFINITION OF (X) AND (Y)
C     WHICH IN ALL CASES WILL CORRESPOND TO THE SYMMETRIC AND
C     ANTI-SYMMETRIC CONTRIBUTION OF THE RESONANCES. IN PARTICULAR
C     DEFINING (U) IN TERMS OF (1-X) INSTEAD OF (X) IS EXTREMELY
C     IMPORTANT. NOTE, THAT THE DEFINITION OF THE ELASTIC AND
C     ABSORPTION ONLY INVOLVE (X), NOT (1-X). FAR FROM RESONANCES
C     (X) CAN BE EXTREMELY SMALL, THEREFORE (1-X) WILL BE VERY CLOSE
C     TO (1). IF THE CALCULATION PROCEEDS BY FIRST CALCULATING (1-X)
C     AND THEN DEFINING (X) BY SUBTRACTING (1), EXTREME ROUND-OFF
C     PROBLEMS CAN RESULT. THESE PROBLEMS CAN BE AVOIDED BY IN ALL
C     CASES DEFINING (X) DIRECTLY, WITHOUT ANY DIFFERENCES.
C
C     IN EACH FORMALISM THE DEFINITION OF (X) AND (Y) MAY BE DIFFERENT
C     BUT ONCE WE HAVE DEFINED (X) AND (Y) WE CAN IMMEDIATELY WRITE
C     THE CROSS SECTIONS USING A UNIFORM DEFINITION,
C
C     ELASTIC =GJ*(2*SIN(PS)**2 - X)**2 + (SIN(2*PS) + Y)**2)
C
C     ABSORPTION =-GJ*(2*X + (X)**2 + (Y)**2)
C
C     AND DEFINE THE TOTAL AS THE SUM OF THESE 2 PARTS.
C
C     RELATIONSHIP TO SINGLE LEVEL
C     ============================
C     HOW DO THE SINGLE AND MULTI-LEVEL FORMALISMS COMPARE. TO SEE,
C     STARTING FROM OUR GENERAL DEFINITION OF THE ELASTIC IN THE FORM,
C
C     ELASTIC =GJ*(2*SIN(PS)**2 + X)**2 + (SIN(2*PS) + Y)**2)
C             =GJ*(4*SIN(PS)**4 - 4*X*SIN(PS)**2 + X**2
C                + SIN(2*PS)**2 + 2*Y*SIN(2*PS)  + Y**2)
C
C             =4*GJ*SIN(PS)**2 +
C                GJ*(X**2 + Y**2
C                   -4*X*SIN(PS)**2
C                   +2*Y*SIN(2*PS))
C
C     AND OUR SPECIFIC DEFINITIONS OF (X) AND (Y) FOR MULTI-LEVEL BREIT-
C     WIGNER PARAMETERS,
C
C     X        = GAM(N)*GAM(T)/2/DEN
C     Y        = GAM(N)*(E-ER)/DEN
C     DEN      = ((E-ER)**2 + (GAM(T)/2)**2)
C
C     X**2+Y**2= GAM(N)**2/DEN + (L-L)
C
C     WE CAN RECOGNIZE X**2 AND Y**2 AS THE INTERFERENCE - (L-S) + (L-L)
C     TERMS IN THE MULTI-LEVEL FORMALISM. IN ORDER TO OBTAIN THE SINGLE
C     LEVEL EQUATION WE CAN ASSUME THAT EACH LEVEL DOES NOT INTERFERE
C     WITH ANY OTHER LEVEL - THEREFORE THE (L-L) CONTRIBUTION IS ZERO.
C
C     ELASTIC =4*GJ*SIN(PS)**2 +
C                GJ*GAM(N)*(GAM(N)
C                           -2*GAM(T)*SIN(PS)**2
C                           +2*(E-ER)*SIN(2*PS))/DEN
C
C     WHICH IS THE FORM THAT IT APPEARS IN ENDF-102, EXCEPT FOR TWO
C     TYPOGRAPHICAL ERRORS IN THE SECOND TERM,
C
C     -2*GAM(T)*SIN(PS)**2
C
C     WHICH IN ENDF-102 IS WRITTEN,
C
C     -2*(GAM(T)-GAM(N))*SIN(2*PS)**2
C
C     PROGRAM CONVENTIONS
C     ==================================================================
C     MINIMUM INPUT DATA
C     ------------------
C     FOR EACH MATERIAL TO BE PROCESSED THE MINIMUM INPUT DATA ARE THE
C     RESONANCE PARAMETERS IN FILE 2. IF THERE ARE NO FILE 2 PARAMETERS
C     IN A GIVEN MATERIAL THE ENTIRE MATERIAL WILL SIMPLY BE COPIED.
C     NEITHER THE HOLLERITH SECTION (MF=1, MT=451) NOR THE BACKGROUND
C     CROSS SECTION (SECTIONS OF MF=3) NEED BE PRESENT FOR THIS PROGRAM
C     TO EXECUTE PROPERLY. HOWEVER, SINCE THE CONVENTIONS USED IN
C     INTERPRETING THE RESONANCE PARAMETERS DEPENDS ON ENDF/B VERSION
C     USERS ARE STRONGLY RECOMMENDED TO INSURE THAT MF=1, MT=451 IS
C     PRESENT IN EACH MATERIAL TO ALLOW THE PROGRAM TO DETERMINE THE
C     ENDF/B FORMAT VERSION.
C
C     RESONANCE PARAMETERS
C     --------------------
C     RESONANCE PARAMETERS MAY BE REPRESENTED USING ANY COMBINATION
C     OF THE REPRESENTATIONS ALLOWED IN ENDF/B,
C     (1) RESOLVED DATA
C         (A) SINGLE LEVEL BREIT-WIGNER
C         (B) MULTI-LEVEL BREIT-WIGNER
C         (C) ADLER-ADLER
C         (D) REICH-MOORE
C         (E) HYBRID R-FUNCTION
C     (2) UNRESOLVED DATA
C         (A) ALL PARAMETERS ENERGY INDEPENDENT
C         (B) FISSION PARAMETERS ENERGY DEPENDENT
C         (C) ALL PARAMETERS ENERGY DEPENDENT
C
C     THE FOLLOWING RESOLVED DATA FORMALISMS ARE NOT TREATED BY THIS
C     VERSION OF THE CODE AND WILL ONLY BE IMPLEMENTED AFTER EVALUATIONS
C     USING THESE FORMALISMS ARE AVAILABLE TO THE AUTHOR OF THIS CODE
C     FOR TESTING IN ORDER TO INSURE THAT THEY CAN BE HANDLED PROPERLY
C         (A) GENERAL R-MATRIX
C
C     CALCULATED CROSS SECTIONS
C     -------------------------
C     THIS PROGRAM WILL USE THE RESONANCE PARAMETERS TO CALCULATE THE
C     TOTAL, ELASTIC, CAPTURE AND POSSIBLY FISSION CROSS SECTIONS. THE
C     COMPETITIVE WIDTH WILL BE USED IN THESE CALCULATIONS, BUT THE
C     COMPETITIVE CROSS SECTION ITSELF WILL NOT BE CALCULATED. THE
C     ENDF/B CONVENTION IS THAT ALTHOUGH A COMPETITIVE WIDTH MAY BE
C     GIVEN, THE COMPETITIVE CROSS SECTION MUST BE SEPARATELY TABULATED
C     AS A SECTION OF FILE 3 DATA.
C
C     RESOLVED REGION
C     ---------------
C     IN THE RESOLVED REGION THE RESOLVED PARAMETERS ARE USED TO
C     CALCULATE COLD (0 KELVIN), LINEARLY INTERPOLABLE, ENERGY DEPENDENT
C     CROSS SECTIONS.
C
C     SCATTERING RADIUS
C     -----------------
C     FOR SINGLE OR MULTI LEVEL BREIT-WIGNER PARAMETERS THE SCATTERING
C     RADIUS MAY BE SPECIFIED IN EITHER ENERGY INDEPENDENT (CONSTANT)
C     OR ENERGY DEPENDENT FORM (A TABLE OF ENERGY VS. RADIUS AND AN
C     ASSOCIATED INTERPOLATION LAW). IN ALL OTHER CASE ONLY AN ENERGY
C     INDEPENDENT SCATTERING RADIUS IS ALLOWED.
C
C     FOR ANY ONE MATERIAL (I.E. MAT) IF ENERGY DEPENDENT SCATTERING
C     RADII ARE GIVEN THE TOTAL NUMBER OF INTERPOLATION REGIONS AND
C     TABULATED VALUES FOR THE ENTIRE MATERIAL CANNOT EXCEED,
C     200 - INTERPOLATION REGIONS
C     500 - TABULATED VALUES
C     IF THESE LIMITS ARE EXCEEDED THE PROGRAM WILL PRINT AN ERROR
C     MESSAGE AND TERMINATE.
C
C     IF YOU REQUIRE A LARGER NUMBER OF INTERPOLATION REGION AND/OR
C     TABULATED VALUES,
C     (1) INTERPOLATION REGIONS - INCREASE THE DIMENSION OF NBTRHO AND
C     INTRHO IN COMMON/TABRHO/ THROUGHOUT THE PROGRAM AND CHANGE MAXINT
C     IN SUBROUTINE RDAP (MAXINT = MAXIMUM NUMBER OF INTERPOLATION
C     REGIONS).
C     (2) TABULATED VALUES - INCREASE THE DIMENSION OF ERHOTB, RHOTAB
C     AND APTAB IN COMMON/TABRHO/ THROUGHOUT THE PROGRAM AND CHANGE
C     MAXTAB IN SUBROUTINE RDAP (MAXTAB = MAXIMUM NUMBER OF TABULATED
C     VALUES).
C
C     RESOLVED REICH-MOORE AND MULTI-LEVEL BREIT-WIGNER PARAMETERS
C     ------------------------------------------------------------
C     CROSS SECTIONS FOR REICH-MOORE PARAMETERS ARE CALCULATED ACCORDING
C     TO THE EQUATION (1) - (8) OF SECTION D.1.3 OF ENDF-102. IN ORDER
C     TO CALCULATE CROSS SECTIONS FROM MULTI-LEVEL PARAMETERS IN A
C     REASONABLE AMOUNT OF TIME THIS PROGRAM EXPRESSES THE CROSS SECTION
C     IN TERMS OF A SINGLE SUM OVER RESONANCES (SEE, ENDF-102, SECTION
C     D.1.2, EQUATIONS 6-7), RATHER THAN AS A DOUBLE SUM (SEE, ENDF-102
C     SECTION D.1.2, EQUATION 1-2). IN ORDER FOR THE ENDF-102 EQUATIONS
C     TO BE CORRECT THE PARAMETERS MUST MEET THE FOLLOWING CONDITIONS,
C
C     (1) FOR EACH L STATE ALL PHYSICALLY POSSIBLE J SEQUENCES MUST BE
C         PRESENT. ONLY IN THIS CASE WILL THE CONTRIBUTIONS OF THE
C         INDIVIDUAL J SEQUENCES ADD UP TO PRODUCE THE CORRECT POTENTIAL
C         SCATTERING CONTRIBUTION FOR THE L STATE (SEE, ENDF-102,
C         SECTION D.1.2, EQUATIONS 6-7). IF ANY J SEQUENCE IS MISSING
C         THE PROGRAM WILL PRINT A WARNING AND ADD THE J SEQUENCE WITH
C         NO RESONANCE PARAMETERS IN ORDER TO ALLOW THE POTENTIAL
C         SCATTERING TO BE CALCULATED CORRECTLY (THIS IS EQUIVALENT TO
C         ASSUMING THAT THE EVALUATOR REALIZES THAT ALL J SEQUENCES MUST
C         BE AND ARE PRESENT AND THAT THE EVALUATION STATES THAT THERE
C         ARE NO RESONANCES WITH CERTAIN PHYSICALLY POSSIBLE J VALUES...
C         IN THIS CASE POTENTIAL CONTRIBUTION MUST STILL BE CONSIDERED).
C
C         EXAMPLE
C         =======
C         AN EXAMPLE OF WHERE THIS OCCURS AND IS IMPORTANT TO CONSIDER
C         IS U-238 IN ENDF/B-IV AND V LIBRARIES WHERE FOR L=1 THERE IS
C         ONLY A J=1/2 SEQUENCE. NOT INCLUDING THE J=3/2 SEQUENCE LEADS
C         TO UNDERESTIMATING THE POTENTIAL SCATTERING AND PRODUCES
C         MINIMA IN THE ELASTIC CROSS SECTION WHICH ARE AN ORDER OF
C         MAGNITUDE LOWER THAN THE CROSS SECTIONS OBTAINED BE INCLUDING
C         THE J=3/2 SEQUENCE.
C
C     (2) FOR A GIVEN TARGET SPIN AND L VALUE THERE MAY BE 2 POSSIBLE
C         MEANS OF OBTAINING THE SAME J VALUE. WHEN THIS OCCURS IN
C         ORDER TO CALCULATE THE CORRECT POTENTIAL SCATTERING CROSS
C         SECTION IT IS IMPORTANT TO INCLUDE THE EFFECT OF BOTH
C         POSSIBLE J SEQUENCES, EVEN THOUGH FROM THE ENDF/B DATA IT IS
C         NOT POSSIBLE TO DETERMINE WHICH OF THE 2 POSSIBLE SEQUENCES
C         ANY GIVEN RESONANCE BELONGS TO. IN THIS CASE THIS PROGRAM
C         TREAT ALL RESONANCES WITH THE SAME J VALUE AS BELONGING TO
C         THE SAME J SEQUENCE (TO ALLOW INTERFERENCE) AND WILL ADD AN
C         ADDITIONAL J SEQUENCE WITH NO RESONANCES IN ORDER TO ALLOW
C         THE POTENTIAL CROSS SECTION TO BE CALCULATED CORRECTLY. WHEN
C         THIS OCCURS A WARNING MESSAGE IS PRINTED, BUT BASED ON THE
C         ENDF/B DATA THERE IS NOTHING WRONG WITH THE DATA AND THERE IS
C         NOTHING THAT THE USER CAN DO TO CORRECT OR IN ANY WAY MODIFY
C         THE DATA TO ELIMINATE THE PROBLEM.
C
C         EXAMPLE
C         =======
C         FOR A TARGET SPIN =1 AND L=1 THE 2 RANGES OF PHYSICALLY
C         POSSIBLE J ARE 1/2, 3/2, 5/2 AND 1/2, 3/2. BY CHECKING THE
C         ENDF/B DATA IT IS POSSIBLE TO INSURE THAT THE 3 POSSIBLE
C         J VALUES (1/2, 3/2, 5/2) ARE PRESENT AND TO INCLUDE ALL 3
C         J SEQUENCES IN THE CALCULATIONS. HOWEVER, UNLESS ALL 5
C         POSSIBLE J SEQUENCES ARE INCLUDED THE STATISTICAL WEIGHTS
C         OF THE J SEQUENCES WILL NOT SUM UP TO 2*L+1 AND THE
C         POTENTIAL CROSS SECTION WILL BE UNDERESTIMATED. IN THIS
C         EXAMPLE THE SUM OF THE 3 J SEQUENCES 1/2, 3/2, 5/2 IS 2,
C         RATHER THAN 3 AS IT SHOULD BE FOR L=1, AND THE CONTRIBUTION
C         OF THE L=1 RESONANCES TO THE POTENTIAL SCATTERING CROSS
C         SECTION WILL ONLY BE 2/3 OF WHAT IT SHOULD BE, UNLESS THE
C         OTHER 2 J SEQUENCES (WITH DUPLICATE J VALUES) ARE INCLUDED
C         IN THE CALCULATION.
C
C     (3) EACH RESONANCE MUST HAVE AN ASSIGNED, PHYSICALLY POSSIBLE
C         J VALUE. PHYSICALLY IMPOSSIBLE OR AVERAGE J VALUES CANNOT BE
C         UNIQUELY INTERPRETED USING THE EQUATIONS IN ENDF-102 AND
C         THEIR USE WILL USUALLY RESULT IN PHYSICALLY UNRELIABLE CROSS
C         SECTIONS. THIS PROGRAM WILL CHECK ALL J VALUES AND IF ANY ARE
C         ARE FOUND TO BE PHYSICALLY IMPOSSIBLE (BASED ON TARGET SPIN
C         AND L VALUE) AN ERROR MESSAGE WILL BE PRINTED TO INDICATE THAT
C         THE RECONSTRUCTED CROSS SECTIONS WILL BE UNRELIABLE AND THE
C         PROGRAM WILL CONTINUE. IN AN ATTEMPT TO CALCULATE THE CORRECT
C         POTENTIAL SCATTERING CROSS SECTION THIS PROGRAM WILL SUBTRACT
C         THE POTENTIAL SCATTERING CONTRIBUTION DUE TO ALL FICTICIOUS J
C         SEQUENCES AND ADD THE CONTRIBUTION OF ALL PHYSICALLY POSSIBLE
C         J SEQUENCES (AS DESCRIBED ABOVE).
C
C         WARNING (LET THE USER BEWARE)
C         =============================
C         (A) IT CANNOT BE STRESSED ENOUGH THAT CROSS SECTIONS OBTAINED
C             USING PHYSICALLY IMPOSSIBLE J VALUES FOR REICH-MOORE AND
C             MULTI-LEVEL BREIT-WIGNER RESONANCE PARAMETERS WILL RESULT
C             IN UNRELIABLE CROSS SECTIONS. THE DECISION TO HAVE THIS
C             PROGRAM CONTINUE TO PROCESS WHEN THIS CONDITION IS FOUND
C             IS BASED ON AN ATTEMPT TO ALLOW THE USER TO AT LEAST HAVE
C             SOME RESULTS (HOWEVER BAD THEY MAY BE) IF THERE IS NO
C             OTHER EVALUATED DATA AVAILABLE.
C         (B) EVEN THOUGH THE REICH-MOORE AND MULTI-LEVEL EQUATIONS ARE
C             DEFINED AS ABSOLUTE OR SQUARED CONTRIBUTIONS WHICH MUST
C             ALL BE PHYSICALLY POSSIBLE, ATTEMPTING TO CORRECT THE
C             POTENTIAL CROSS SECTION (AS DESCRIBED ABOVE) CAN LEAD TO
C             NEGATIVE ELASTIC CROSS SECTIONS. THIS IS BECAUSE BASED ON
C             THE INFORMATION AVAILABLE IN THE EVALUATION IT IS NOT
C             NOT POSSIBLE TO CORRECTLY ACCOUNT FOR THE INTERFERENCE
C             BETWEEN THE RESONANCE AND POTENTIAL CONTRIBUTIONS FOR EACH
C             J SEQUENCE.
C
C     UNRESOLVED RESONANCE REGION
C     ---------------------------
C     IN THE UNRESOLVED RESONANCE REGION THE UNRESOLVED PARAMETERS
C     ARE USED TO CALCULATE INFINITELY DILUTE AVERAGE CROSS SECTIONS.
C     NOTE, IT IS IMPORTANT TO UNDERSTAND THAT FROM THE DEFINITION OF
C     THE UNRESOLVED PARAMETERS IT IS NOT POSSIBLE TO UNIQUELY CALCULATE
C     ENERGY DEPENDENT CROSS SECTIONS. ONLY AVERAGES OR DISTRIBUTIONS
C     MAY BE CALCULATED.
C
C     UNRESOLVED INTERPOLATION
C     ------------------------
C     IN THE UNRESOLVED RESONANCE REGION CROSS SECTIONS AT EACH ENERGY
C     ARE CALCULATED BY INTERPOLATING PARAMETERS. THIS IS THE CONVENTION
C     USED IN ENDF/B-IV AND EARLIER VERSIONS OF ENDF/B. THE ENDF/B-V
C     CONVENTION OF INTERPOLATING CROSS SECTIONS, NOT PARAMETERS, HAS
C     BEEN ABANDONED AS IMPRACTICAL SINCE IT CAN LEAD TO THE SITUATION
C     WHERE EXACTLY THE SAME PHYSICAL DATA CAN LEAD TO DIFFERENT RESULTS
C     DEPENDING ON WHICH OF THE THREE ENDF/B UNRESOLVED PARAMTER FORMATS
C     IS USED. FOR EXAMPLE, GIVEN A SET OF ENERGY INDEPENDENT UNRESOLVED
C     PARAMETERS IT IS POSSIBLE TO CODE THESE PARAMETERS IN EACH OF THE
C     THREE ENDF/B UNRESOLVED PARAMETER FORMATS. SINCE PHYSICALLY WE
C     ONLY HAVE ONE SET OF PARAMETERS WE WOULD EXPECT THE RESULTS TO BE
C     INDEPENDENT OF HOW THEY ARE REPRESENTED IN ENDF/B. UNFORTUNATELY
C     USING THE ENDF/B-V CONVENTION TO INTERPOLATE CROSS SECTIONS CAN
C     LEAD TO THREE COMPLETELY DIFFERENT RESULTS. IN CONTRAST USING THE
C     ENDF/B-IV AND EARLIER CONVENTION OF INTERPOLATING PARAMETERS LEADS
C     TO COMPLETELY CONSISTENT RESULTS.
C
C     INTERNAL REPRESENTATION OF UNRESOLVED PARAMETERS
C     ------------------------------------------------
C     ANY OF THE THREE POSSIBLE REPRESENTATIONS OF UNRESOLVED PARAMETERS
C     CAN BE UNIQUELY REPRESENTED IN THE ALL PARAMETERS ENERGY DEPENDENT
C     REPRESENTATIONS WITH THE APPROPRIATE (ENDF/B VERSION DEPENDENT)
C     INTERPOLATION LAW. THIS IS DONE BY THE PROGRAM WHILE READING THE
C     UNRESOLVED PARAMETERS AND ALL SUBSEQUENT CALCULATIONS NEED ONLY
C     CONSIDER THE ALL PARAMETERS ENERGY DEPENDENT REPRESENTATION.
C
C     RESONANCE RECONSTRUCTION STARTING ENERGY GRID
C     ---------------------------------------------
C     AS IN ANY ITERATIVE METHOD THE WAY TO SPEED CONVERGENCE IS TO TRY
C     TO START CLOSE TO THE ANSWER. THIS PROGRAM ATTEMPTS TO DO THIS BY
C     STARTING FROM AN ENERGY GRID WHICH IS A GOOD APPROXIMATION TO A
C     SIMPLE BREIT-WIGNER LINE SHAPE,
C
C     SIGMA(X)=1.0/(1.0+X*X)
C
C     WHERE X IS THE DISTANCE FROM THE PEAK IN HALF-WIDTHS
C
C     SUBROUTINE SUBINT HAS A BUILT-IN TABLE OF NODES WHICH ARE THE
C     HALF-WIDTH MULTIPLES TO APPROXIMATE THE SIMPLE BREIT-LINE SHAPE
C     TO WITHIN 1 PER-CENT OVER THE ENTIRE INTERVAL 0 TO 500 HALF-WIDTHS
C
C     BETWEEN ANY TWO RESOLVED RESONANCES THE STARTING GRID IS BASED ON
C     THE HALF-WIDTHS OF THE TWO RESONANCES. FROM THE LOWER ENERGY
C     RESONANCE UP TO THE MID-POINT BETWEEN THE RESONANCES (MID-POINT
C     IS DEFINED HERE AS AN EQUAL NUMBER OF HALF-WIDTHS FROM EACH
C     RESONANCE) THE HALF-WIDTH OF THE LOWER ENERGY RESONANCE IS USED.
C     FROM THE MID-POINT UP TO THE HIGHER ENERGY RESONANCE THE HALF-
C     WIDTH OF THE UPPER ENERGY RESONANCE IS USED.
C
C     WITH THIS ALOGORITHM CLOSELY SPACED RESONANCES WILL HAVE ONLY
C     A FEW STARTING NODES PER RESONANCE (E.G. U-235). WIDELY SPACED
C     RESONANCES WILL HAVE MORE NODES PER RESONANCE (E.G. U-238). FOR
C     A MIX OF S, P, D ETC. RESONANCES THIS ALOGORITHM GUARANTEES AN
C     ADEQUTE DESCRIPTION OF THE PROFILE OF EVEN EXTREMELY NARROW
C     RESONANCES (WHICH MAY IMMEDIATELY CONVERGENCE TO THE ACCURACY
C     REQUESTED, THUS MINIMIZING ITERATION).
C
C     BACKGROUND CROSS SECTIONS
C     -------------------------
C     THE PROGRAM WILL SEARCH FOR BACKGROUND CROSS SECTIONS FOR TOTAL
C     (MT=1), ELASTIC (MT=2), FISSION (MT=18), FIRST CHANCE FISSION
C     (MT=19) AND CAPTURE (MT=102).
C
C     (1) THE BACKGROUND CROSS SECTIONS (FILE 3) CAN BE PRESENT OR NOT
C         PRESENT FOR EACH REACTION.
C     (2) IF FOR A GIVEN REACTION THE BACKGROUND CROSS SECTION IS
C         PRESENT, IT WILL BE ADDED TO THE RESONANCE CONTRIBUTION AND
C         THE RESULT WILL BE OUTPUT.
C     (3) IF FOR A GIVEN REACTION THE BACKGROUND IS NOT PRESENT THE
C         PROGRAM WILL,
C         (A) IF THE INPUT TO THE PROGRAM SPECIFIES NO OUTPUT FOR
C             REACTIONS WITH NO BACKGROUND THERE WILL BE NO OUTPUT.
C         (B) IF THE INPUT TO THE PROGRAM SPECIFIES OUTPUT FOR REACTIONS
C             WITH NO BACKGROUND,
C             (I) THE RESONANCE CONTRIBUTION TO TOTAL, ELASTIC OR
C                 CAPTURE WILL BE OUTPUT.
C             (II) IF ALL FISSION RESONANCE PARAMETERS ARE ZERO THE
C                  FISSION CROSS SECTION (MT=18) WILL NOT BE OUTPUT.
C                  OTHERWISE THE RESONANCE CONTRIBUTION OF THE FISSION
C                  (MT=18) WILL BE OUTPUT.
C             (III) THERE WILL BE NO OUTPUT FOR FIRST CHANCE FISSION
C                   (MT=19).
C
C     COMBINING RESONANCES AND BACKGROUND CROSS SECTIONS
C     --------------------------------------------------
C     IN ORDER TO BE COMBINED WITH THE RESONANCE CONTRIBUTION THE
C     BACKGROUND CROSS SECTIONS MUST BE GIVEN AT 0 KELVIN TEMPERATURE
C     AND MUST BE LINEARLY INTERPOLABLE. IF THESE CONDITIONS ARE MET
C     THE RESONANCE AND BACKGROUND CONTRIBUTIONS WILL BE ADDED TOGETHER
C     AND OUTPUT. IF THESE CONDITIONS ARE NOT MET THE BACKGROUND CROSS
C     SECTION WILL BE IGNORED AND ONLY THE RESONANCE CONTRIBUTION WILL
C     BE OUTPUT. IF THE BACKGROUND HAS NOT BEEN ADDED TO THE RESONANCE
C     CONTRIBUTION AFTER THIS PROGRAM FINISHES THE USER CAN MAKE THE
C     RESONANCE AND BACKGROUND CONTRIBUTIONS COMPATIBLE BY,
C
C     (1) IF THE BACKGROUND IS NOT LINEARLY INTERPOABLE, LINEARIZE THE
C         BACKGROUND (E.G., USE PROGRAM LINEAR).
C     (2) IF THE BACKGROUND IS NOT GIVEN AT 0 KELVIN, DOPPLER BROADEN
C         THE RESONANCE (NOT BACKGROUND) CONTRIBUTION TO THE SAME
C         TEMPERATURE AS THE BACKGROUND (E.G., USE PROGRAM SIGMA1).
C
C     ONCE THE RESONANCE AND BACKGROUND CONTRIBUTIONS HAVE BEEN MADE
C     COMPATIBLE THEY CAN BE ADDED TOGETHER (E.G., USE PROGRAM MIXER).
C
C     THE RECONSTRUCTION OF THE RESONANCE CONTRIBUTION TO THE CROSS
C     SECTION CAN BE QUITE EXPENSIVE (IN TERMS OF COMPUTER TIME). SINCE
C     THE RECONSTRUCTION IS PERFORMED BEFORE THE BACKGROUND CROSS
C     SECTIONS ARE READ, THE ABOVE CONVENTIONS HAVE BEEN ADOPTED IN
C     ORDER TO AVOID LOSE OF COMPUTER TIME INVOLVED IN RECONSTRUCTING
C     THE RESONANCE CONTRIBUTION.
C
C     COMMON ENERGY GRID
C     ------------------
C     THIS PROGRAM WILL RECONSTRUCT THE RESONANCE CONTRIBUTION TO THE
C     TOTAL, ELASTIC, FISSION AND CAPTURE CROSS SECTIONS ALL ON THE
C     SAME ENERGY GRID. EACH REACTION WILL THEN BE COMBINED WITH ITS
C     BACKGROUND CROSS SECTION (IF ANY) AND OUTPUT WITHOUT ANY FURTHER
C     THINNING. IF THERE ARE NO BACKGROUND CROSS SECTIONS, OR IF THE
C     BACKGROUND CROSS SECTION FOR ALL FOUR REACTIONS ARE GIVEN ON A
C     COMMON ENERGY GRID, THE OUTPUT FROM THIS PROGRAM WILL BE ON A
C     COMMON ENERGY GRID FOR ALL FOUR REACTIONS.
C
C     THERMAL ENERGY
C     --------------
C     IF THE RESONANCE REGION SPANS THERMAL ENERGY (0.0253 EV) THIS
C     POINT IS ALWAYS INCLUDED IN THE COMMON ENERGY GRID USED FOR ALL
C     REACTIONS AND WILL ALWAYS APPEAR IN THE OUTPUT DATA.
C
C     SECTION SIZE
C     ------------
C     SINCE THIS PROGRAM USES A LOGICAL PAGING SYSTEM THERE IS NO LIMIT
C     TO THE NUMBER OF POINTS IN ANY SECTION, E.G., THE TOTAL CROSS
C     SECTION MAY BE REPRESENTED BY 200,000 DATA POINTS.
C
C     SELECTION OF DATA
C     -----------------
C     THE PROGRAM SELECTS MATERIALS TO BE PROCESSED BASED EITHER ON
C     MAT (ENDF/B MAT NO.) OR ZA. THE PROGRAM ALLOWS UP TO 100 MAT OR
C     ZA RANGES TO BE SPECIFIED. THE PROGRAM WILL ASSUME THAT THE
C     ENDF/B TAPE IS IN EITHER MAT OR ZA ORDER, WHICHEVER CRITERIA IS
C     USED TO SELECT MATERIALS, AND WILL TERMINATE WHEN A MAT OR ZA
C     IS FOUND THAT IS ABOVE THE RANGE OF ALL REQUESTS.
C
C     ALLOWABLE ERROR
C     ---------------
C     THE RECONSTRUCTION OF LINEARLY INTERPOLABLE CROSS SECTIONS FROM
C     RESONANCE PARAMETERS CANNOT BE PERFORMED EXACTLY. HOWEVER IT CAN
C     BE PERFORMED TO VIRTUALLY ANY REQUIRED ACCURACY AND MOST
C     IMPORTANTLY CAN BE PERFORMED TO A TOLERANCE THAT IS SMALL COMPARED
C     TO THE UNCERTAINTY IN THE CROSS SECTIONS THEMSELVES. AS SUCH THE
C     CONVERSION OF CROSS SECTIONS TO LINEARLY INTERPOLABLE FORM CAN BE
C     PERFORMED WITH ESSENTIALLY NO LOSS OF INFORMATION.
C
C     THE ALLOWABLE ERROR MAY BE ENERGY INDEPENDENT (CONSTANT) OR ENERGY
C     DEPENDENT. THE ALLOWABLE ERROR IS DESCRIBED BY A TABULATED
C     FUNCTION OF UP TO 20 (ENERGY,ERROR) PAIRS AND LINEAR INTERPOLATION
C     BETWEEN TABULATED POINTS. IF ONLY ONE TABULATED POINT IS GIVEN THE
C     ERROR WILL BE CONSIDERED CONSTANT OVER THE ENTIRE ENERGY RANGE.
C     WITH THIS ENERGY DEPENDENT ERROR ONE MAY OPTIMIZE THE OUTPUT FOR
C     ANY GIVEN APPLICATION BY USING A SMALL ERROR IN THE ENERGY RANGE
C     OF INTEREST AND A LESS STRINGENT ERROR IN OTHER ENERGY RANGES,
C     E.G., 0.1 PER-CENT FROM 0 UP TO THE LOW EV RANGE AND A LESS
C     STRINGENT TOLERANCE AT HIGHER ENERGIES.
C
C     DEFAULT ALLOWABLE ERROR
C     -----------------------
C     IN ORDER TO INSURE CONVERENCE OF THE RESONANCE RECONSTRUCTION THE
C     ALLOWABLE ERROR MUST BE POSITIVE. IF THE USER INPUTS AN ERROR FOR
C     RESONANCE RECONSTRUCTION THAT IS NOT POSITIVE IT WILL BE SET TO
C     THE DEFAULT VALUE (CURRENTLY 0.1 PER-CENT) AND INDICATED AS SUCH
C     IN THE OUTPUT LISTING.
C
C     INTERVAL HALVING ALGORITHM
C     -------------------------
C     THIS PROGRAM WILL START BY CALCULATING THE CROSS SECTIONS AT THE
C     ENERGIES CORRESPONDING TO THE PEAK OF EACH RESONANCE, AS WELL AS
C     A FIXED NUMBER OF HALF-WIDTHS ON EACH SIDE OF EACH RESONANCE.
C     STARTING FROM THIS BASIC GRID OF POINTS THE PROGRAM WILL CONTINUE
C     TO HALF EACH INTERVAL UNTIL THE CROSS SECTIONS FOR ALL REACTIONS
C     AT THE CENTER OF THE INTERVAL CAN BE DEFINED BY LINEAR
C     INTERPOLATION FROM THE ENDS OF THE INTERVAL TO WITHIN THE USER
C     SPECIFIED ACCURACY CRITERIA.
C
C     DISTANT RESONANCE TREATMENT
C     ---------------------------
C     THE OPTION TO TREAT DISTANT RESONANCES, WHICH WAS AVAILABLE IN
C     EARLIER VERSIONS OF THIS PROGRAM, IS NO LONGER AVAILABLE, BECAUSE
C     IT WAS FOUND TO PRODUCE UNRELIABLE RESULTS. IN THIS VERSION OF
C     THE PROGRAM ALL RESONANCES ARE TREATED EXACTLY.
C
C     PROGRAM OPERATION
C     ==================================================================
C     EDIT MODE
C     ---------
C     IT IS SUGGESTED THAT BEFORE RUNNING THIS PROGRAM TO RECONSTRUCT
C     CROSS SECTIONS FROM RESONANCE PARAMETERS (WHICH CAN BE QUITE
C     EXPENSIVE) THE USER FIRST RUN THE PROGRAM IN THE EDIT MODE (SEE,
C     DESCRIPTION OF INPUT PARAMETERS BELOW). IN THE EDIT MODE THE
C     PROGRAM WILL READ, LIST AND EXTENSIVELY CHECK THE CONSISTENCY OF
C     ALL RESONANCE PARAMETERS AND ENDF/B DEFINED RESONANCE FLAGS. THIS
C     IS A VERY INEXPENSIVE MEANS OF CHECKING ALL DATA BEFORE INVESTING
C     A LARGE AMOUNT OF MONEY IN RECONSTRUCTING CROSS SECTIONS. ANY AND
C     ALL DIGNOSTICS RECEIVED FROM THE EDIT WILL SUGGEST HOW TO CORRECT
C     THE EVALUATED DATA TO MAKE IT CONSISTENT BEFORE RECONSTRUCTING
C     CROSS SECTIONS. IN ORDER TO OBTAIN MEANINGFUL RESULTS FROM THE
C     RECONSTRUCTION ALL SUGGESTED CHANGES TO THE EVALUATION SHOULD BE
C     PERFORMED BEFORE TRYING RECONSTRUCTION (OTHERWISE THE RESULT OF
C     RECONSTRUCTION WILL NOT BE RELIABLE).
C
C     RECONSTRUCTION MODE
C     -------------------
C     FOR EACH REQUESTED MATERIAL
C     ---------------------------
C     IF SECTION MF=1, MT=451 IS PRESENT COMMENTS WILL BE ADD TO
C     DOCUMENT THAT THE MATERIAL HAS BEEN PROCESSED. MF=1, MT=451 WILL
C     ALSO BE USED TO DETERMINE THE VERSION OF THE ENDF/B FORMAT WHICH
C     WILL ALLOW THE PROGRAM TO USE THE APPROPRIATE CONVENTIONS.
C
C     ALL OF THE FILE 2 RESONANCE PARAMETERS ARE FIRST READ AND THE
C     LINEARLY INTERPOLABLE CONTRIBUTION OF THE RESONANCE PARAMETERS
C     TO THE TOTAL, ELASTIC, CAPTURE AND FISSION CROSS SECTIONS IS
C     CALCULATED SIMULTANEOUSLY USING A COMMON ENERGY GRID FOR ALL
C     FOUR REACTIONS.
C
C     AFTER THE RESONANCE CONTRIBUTION HAS BEEN RECONSTRUCTED EACH OF
C     THE FIVE REACTIONS (MT=1, 2, 18, 19, 102) IS CONSIDERED SEPARATELY
C     FOR COMBINATION WILL THE BACKGROUND CROSS SECTION, IF ANY, AS
C     DESCRIBED ABOVE.
C
C     OUTPUT WILL INCLUDE THE ENTIRE EVALUATION, INCLUDING RESONANCES
C     PARAMETERS WITH LRU MODIFIED (AS DESCRIBED ABOVE) TO INDICATE
C     THAT THE RESONANCE CONTRIBUTION HAS ALREADY BEEN ADDED TO THE
C     FILE 3 CROSS SECTIONS.
C
C     THE CYCLE OF RECONSTRUCTING THE RESONANCE CONTRIBUTION AND ADDING
C     THE BACKGROUND WILL BE REPEATED FOR EACH MATERIAL REQUESTED.
C
C     PROCESS ONLY A PORTION OF RESONANCE REGION
C     ==================================================================
C     MODERN EVALUATIONS MAY BE EXTREMELY LARGE AND IT MAY NOT BE
C     POSSIBLE TO PROCESS AN ENTIRE EVALUATION (I.E., ADD THE RESONANCE
C     CONTRIBUTION) DURING A SINGLE COMPUTER RUN.
C
C     ALSO IN THE CASE WHERE YOU ARE ONLY INTERESTED IN THE CROSS
C     SECTIONS OVER A SMALL ENERGY RANGE, YOU MAY NOT WANT TO PROCESS
C     AN ENTIRE EVALUATION, E.G., IF YOU ONLY WANT TO KNOW WHAT THE
C     CROSS SECTIONS ARE NEAR THERMAL ENERGY, 0.0253 EV.
C
C     IN ORDER TO ALLOW AN EVALUATION TO BE PROCESSED USING A NUMBER OF
C     SHORTER COMPUTER RUNS AN OPTION HAS BEEN ADDED TO THIS PROGRAM TO
C     ALLOW THE USER TO SPECIFY THE ENERGY RANGE TO BE PROCESSED.
C
C     USING THIS OPTION YOU MAY START AT THE LOWEST ENERGY (ZERO UP TO
C     SOME ENERGY) AND USE THE RESULTS OF THIS RUN AS INPUT TO THE
C     NEXT RUN, WHERE YOU CAN SPECIFY THE NEXT ENERGY RANGE. THIS
C     CYCLE CAN BE REPEATED UNTIL YOU HAVE PROCESSED THE ENTIRE
C     EVALUATION.
C
C     WARNING - THIS OPTION SHOULD BE USED WITH EXTREME CARE - THIS
C     OPTION HAS BEEN RELUCTANTLY ADDED - RELUCTANTLY BECAUSE IT CAN
C     BE EXTREMELY DANGEROUS TO USE THIS OPTION UNLESS YOU CAREFULLY
C     CHECKED WHAT YOU ARE DOING.
C
C     THE OPTION SHOULD ONLY BE USED AS FOLLOWS,
C     1) YOU MUST PROCESS USING ENERGY RANGES STARTING AT LOW ENERGY
C        AND WORKING YOUR WAY TOWARD HIGH ENERGY, E.G.,
C         0.0   TO  3.0+3
C         3.0+3 TO 10.0+3
C        10.0+3 TO 80.0+3, ETC.
C     2) FOR THE LAST ENERGY RANGE THE LOWER ENERGY LIMIT MUST BE
C        NON-ZERO (WHERE TO START) AND THE UPPER ENERGY LIMIT MUST
C        BE ZERO (NO LIMIT)
C        80.0+3 TO  0.0
C
C     IF YOU ARE ONLY INTERESTED IN THE CROSS SECTION OVER A NARROW
C     ENERGY INTERVAL AND DO NOT INTENT TO MAKE ANY OTHER USE OF THE
C     RESULTS, YOU CAN IGNORE THESE WARNINGS AND MERELY SPECIFY ANY
C     ENERGY INTERVAL OVER WHICH YOU WISH CALCULATIONS TO BE
C     PERFORMED.
C
C     NORMALLY WHEN THIS PROGRAM PROCESSES AN EVALUATION IT WILL SET
C     FLAGS IN THE EVALUATION TO PREVENT THE SAME RESONANCE
C     CONTRIBUTION FROM BEING ADDED TO THE CROSS SECTION MORE THAN
C     ONCE, SHOULD YOU USE THE OUTPUT FROM THIS PROGRAM AS INPUT TO
C     THE PROGRAM.
C
C     WHEN PROCESSING ONLY PORTIONS OF THE RESONANCE REGION THIS
C     PROGRAM CANNOT SET THESE FLAGS TO PROTECT AGAINST ADDING THE
C     RESONANCE CONTRIBUTION MORE THAN ONCE - WHICH MAKES USE OF
C     THIS OPTION EXTREMELY DANGEROUS.
C
C     ONLY YOU CAN CHECK TO MAKE SURE THAT YOU HAVE CORRECTLY
C     INCLUDED EACH ENERGY RANGE ONLY ONCE - SEE THE COMMENT LINES
C     AT THE END OF SECTION, MF=1, MT=451, FOR A COMPLETE RECORD
C     OF EACH RUN USING THIS PROGRAM. THIS SECTION WILL CONTAIN
C     LINES OF THE FORM
C
C     ***************** PROGRAM RECENT (VERSION 2000-1) *************
C     ONLY PROCESS  0.00000+ 0 TO  3.00000+ 3 EV
C     ***************** PROGRAM RECENT (VERSION 2000-1) *************
C     ONLY PROCESS  3.00000+ 3 TO  1.00000+ 4 EV
C     ***************** PROGRAM RECENT (VERSION 2000-1) *************
C     ONLY PROCESS  1.00000+ 4 TO  8.00000+ 4 EV
C     ***************** PROGRAM RECENT (VERSION 2000-1) *************
C     ONLY PROCESS  8.00000+ 4 TO  2.00000+ 7 EV
C
C     YOU SHOULD CHECK TO INSURE THAT THERE ARE NO OVERLAPPING ENERGY
C     RANGES OR MISSING ENERGY RANGES.
C
C     WHEN YOU INDICATE BY INPUT THAT YOU ARE ABOUT TO PROCESS THE
C     LAST ENERGY RANGE (SEE ABOVE, LOWER ENERGY LIMIT = NON-ZERO,
C     UPPER ENERGY LIMIT = ZERO), THIS PROGRAM WILL ASSUME THAT
C     YOU HAVE NOW COMPLETED ALL PROCESSING - AND ONLY THEN WILL
C     IT SET FLAGS IN THE EVALUATION TO PREVENT THE RESONANCE
C     CONTRIBUTION FROM BEING ADDED MORE THAN ONCE. FOR THIS REASON
C     YOU CANNOT PROCESS STARTING WITH ENERGY INTERVALS AT HIGH
C     ENERGY AND WORKING TOWARD LOW ENERGY - YOU MUST START AT LOW
C     ENERGY AND WORK TOWARD HIGH ENERGY.
C
C     I/O FILES
C     ==================================================================
C     INPUT FILES
C     -----------
C     UNIT  DESCRIPTION
C     ----  -----------
C       2   INPUT LINE (BCD - 80 CHARACTERS/RECORD)
C      10   ORIGINAL ENDF/B DATA (BCD - 80 CHARACTERS/RECORD)
C
C     OUTPUT FILES
C     ------------
C     UNIT  DESCRIPTION
C     ----  -----------
C       3   OUTPUT REPORT (BCD - 120 CHARACTERS/RECORD)
C      11   FINAL ENDF/B DATA (BCD - 80 CHARACTERS/RECORD)
C
C     SCRATCH FILES
C     -------------
C     UNIT  DESCRIPTION
C     ----  -----------
C      12   SCRATCH FILE FOR DATA RECONSTRUCTED FROM RESONANCE
C           PARAMETERS (BINARY - 100200 WORDS/RECORD)
C      14   SCRATCH FILE FOR COMBINED FILE 2 AND 3 DATA
C           (BINARY - 40080 WORDS/RECORD)
C
C     OPTIONAL STANDARD FILE NAMES (SEE SUBROUTINE FILEIO)
C     ==================================================================
C     UNIT  FILE NAME
C     ----  ----------
C       2   THERMX.INP
C       3   THERMX.LST
C      10   ENDFB.IN
C      11   ENDFB.OUT
C      12   (SCRATCH)
C      14   (SCRATCH)
C
C     INPUT CARDS
C     ==================================================================
C     LINE  COLS.  FORMAT  DESCRIPTION
C     ----  -----  ------  -----------
C       1    1-11    I11   RETRIEVAL CRITERIA (0=MAT, 1=ZA)
C                          THIS OPTION DEFINED WHETHER COLUMNS 1-22 OF
C                          SUBSEQUENT INPUT CARDS SHOULD BE INTERPRETED
C                          TO BE MAT OR ZA RANGES.
C           12-22   E11.4  FILE 2 MINIMUM ABSOLUTE CROSS SECTION
C                          (IF 1.0E-10 OR LESS IS INPUT THE PROGRAM
C                          WILL USE 1.0E-10)
C           23-33    I11   TREATMENT OF REACTIONS FOR WHICH BACKGROUND
C                          CROSS SECTION IS NOT GIVEN.
C                          = 0 - IGNOR (I.E. NO OUTPUT)
C                          = 1 - OUTPUT RESONANCE CONTRIBUTION.
C                          THIS OPTION IS USEFUL WITH PARTIAL EVALUATION
C                          (E.G. ENDF/B-V DOSIMETRY LIBRARY) WHERE ONLY
C                          ONE OR MORE OF THE REACTIONS ARE OF ACTUAL
C                          INTEREST.
C                          WARNING...THE USE OF THIS FIELD HAS BEEN
C                          CHANGED. THIS FIELD WAS PREVIOUSLY USED TO
C                          DEFINE THE PRECISION OF THE CALCULATION AND
C                          OUTPUT. THE FORMER DEFINITION OF THIS FIELD
C                          WAS...
C                          MINIMUM ENERGY SPACING FLAG
C                          = 0 - 6 DIGIT MINIMUM ENERGY SPACING.
C                                STANDARD 6 DIGIT E11.4 OUTPUT.
C                          = 1 - 9 DIGIT MINIMUM ENERGY SPACING.
C                                STANDARD 6 DIGIT E11.4 OUTPUT.
C                          = 2 - 9 DIGIT MINIMUM ENERGY SPACING.
C                                VARIABLE 9 DIGIT F FORMAT OUTPUT.
C                          FROM EXPERIENCE IT HAS BEEN FOUND THAT
C                          FAILURE TO SET THIS OPTION TO 2 CAN RESULT
C                          IN LARGE ERRORS IN THE FINAL DATA. THEREFORE
C                          INTERNALLY THIS OPTION IS SET TO 2.
C           34-44    I11   OPERATING MODE
C                          = 0 - CACULATE. MINIMUM OUTPUT LISTING
C                          = 1 - CACULATE. LIST ALL RESONANCE PARAMETERS
C                          = 2 - EDIT MODE. NO CALCULATION. LIST ALL
C                                RESONANCE PARAMETERS.
C                          NOTE, THE EDIT MODE (=2) IS THE SUGGESTED
C                          MODE TO FIRST TEST THE CONSISTENCY OF THE
C                          EVALUATED DATA, BEFORE RECONSTRUCTING CROSS
C                          SECTIONS (SEE, COMMENTS ABOVE).
C           45-55    I11   THIS OPTION IS NO LONGER USED. THE PREVIOUS
C                          DEFINITION OF THIS OPTION WAS---DISTANT
C                          RESONANCE TREATMENT.
C                          = 0 - EXACT
C                          = 1 - LINEAR RATIO OVER SUBINTERVAL
C                          = 2 - LINEAR RATIO OVER INTERVAL
C                          ALL RESONANCES ARE TREATED EXACTLY IN THIS
C                          VERSION OF THE CODE.
C           56-66    I11   MONITOR MODE SELECTOR
C                          = 0 - NORMAL OPERATION
C                          = 1 - MONITOR PROGRESS OF RECONSTRUCTION OF
C                                FILE 2 DATA AND COMBINING FILE 2 AND
C                                FILE 3 DATA. EACH TIME A PAGE OF DATA
C                                POINTS IS WRITTEN TO A SCRATCH FILE
C                                PRINT OUT THE TOTAL NUMBER OF POINTS
C                                ON SCRATCH AND THE LOWER AND UPPER
C                                ENERGY LIMITS OF THE PAGE (THIS OPTION
C                                MAY BE USED IN ORDER TO MONITOR THE
C                                EXECUTION SPEED OF LONG RUNNING JOBS).
C       2    1-60    A60   ENDF/B INPUT DATA FILENAME
C                          (STANDARD OPTION = ENDFB.IN)
C       3    1-60    A60   ENDF/B OUTPUT DATA FILENAME
C                          (STANDARD OPTION = ENDFB.OUT)
C     4-N    1-11    I11   MINIMUM MAT OR ZA (SEE COLS. 1-11, LINE 1)
C           12-22    I11   MAXIMUM MAT OR ZA (SEE COLS. 1-11, LINE 1)
C                          UP TO 100 MAT OR ZA RANGES MAY BE SPECIFIED,
C                          ONE RANGE PER LINE. THE LIST IS TERMINATED
C                          BY A BLANK LINE. IF THE THE UPPER LIMIT OF
C                          ANY REQUEST IS LESS THAN THE LOWER LIMIT THE
C                          UPPER LIMIT WILL BE SET EQUAL TO THE LOWER
C                          LIMIT. IF THE FIRST REQUEST LINE IS BLANK IT
C                          WILL TERMINATE THE REQUEST LIST AND CAUSE ALL
C                          DATA TO BE RETRIEVED (SEE EXAMPLE INPUT).
C           23-33   E11.4  LOWER ENERGY LIMIT FOR PROCESSING.
C           34-44   E11.4  UPPER ENERGY LIMIT FOR PROCESSING.
C                         *THE LOWER AND UPPER ENERGY LIMITS MUST BE
C                          ZERO, OR BLANK, UNLESS YOU WISH TO ONLY
C                          PROCESS A PORTION OF RESONANCE REGIONS.
C                         *THESE ENERGY LIMITS ARE ONLY READ FROM THE
C                          FIRST MAT/ZA REQUEST LINE
C                         *IF BOTH ARE ZERO (OR BLANK) THE ENTIRE
C                          RESONANCE REGION FOR EACH MATERIAL WILL BE
C                          PROCESSED
C                         *IF LIMITS ARE INPUT ONLY THAT PORTION OF THE
C                          RESONANCE REGION FOR EACH MATERIAL WHICH
C                          LIES BETWEEN THESE LIMITS WILL BE PROCESSED
C                         *SEE INSTRUCTIONS ABOVE BEFORE USING THIS
C                          OPTION.
C     VARY   1-11   E11.4  ENERGY FOR FILE 2 ERROR LAW     (  SEE   )
C           12-22   E11.4  ERROR FOR FILE 2 ERROR LAW      (COMMENTS)
C                                                          ( BELOW  )
C
C     NOTE, THIS VERSION OF THE PROGRAM DOES NOT THIN THE COMBINED FILE
C     FILE 2 + 3 DATA. AS SUCH THE ERROR LAW FOR COMBINING FILE 2 + 3
C     WHICH WAS REQUIRED IN EARLIER VERSIONS OF THIS CODE ARE NO LONGER
C     REQUIRED.
C
C     THE FILE 2 ERROR LAW MAY BE ENERGY INDEPENDENT (DEFINED BY A
C     SINGLE ERROR) OR ENERGY DEPENDENT (DEFINED BY UP TO 20 ENERGY,
C     ERROR PAIRS). FOR THE ENERGY DEPENDENT CASE LINEAR INTERPOLATION
C     WILL BE USED TO DEFINE THE ERROR AT ENERGIES BETWEEN THOSE AT
C     WHICH THE ERROR IS TABULATED. THE ERROR LAW IS TERMINATED BY A
C     BLANK LINE. IF ONLY ONE ENERGY, ERROR PAIR IS GIVEN THE LAW WILL
C     BE CONSIDERED TO BE ENERGY INDEPENDENT. IF MORE THAN ONE PAIR
C     IS GIVEN IT BE CONSIDERED TO BE ENERGY DEPENDENT (NOTE, THAT
C     FOR A CONSTANT ERROR THE ENERGY INDEPENDENT FORM WILL RUN FASTER.
C     HOWEVER, FOR SPECIFIC APPLICATIONS AN ENERGY DEPENDENT ERROR MAY
C     BY USED TO MAKE THE PROGRAM RUN CONSIDERABLE FASTER).
C
C     ALL ENERGIES MUST BE IN ASCENDING ENERGY ORDER. FOR CONVERGENCE
C     OF THE FILE 2 RECONSTRUCTION ALGORITHM ALL THE ERRORS MUST BE
C     POSITIVE. IF ERROR IS NOT POSITIVE IT WILL BE SET EQUAL TO THE
C     STANDARD OPTION (CURRENTLY 0.001, CORRRESPONDING TO 0.1 PER-CENT).
C     IF THE FIRST LINE OF THE ERROR LAW IS BLANK IT WILL TERMINATE THE
C     ERROR LAW AND THE ERROR WILL BE TREATED AS ENERGY INDEPENDENT,
C     EQUAL TO THE STANDARD OPTION (CURRENTLY, 0.1 PER-CENT). SEE,
C     EXAMPLE INPUT 4.
C
C     EXAMPLE INPUT NO. 1
C     -------------------
C     CONSIDER ALL URANIUM ISOTOPES AND TH-232. CONSIDER CROSS SECTIONS
C     WHICH ARE LARGER THAN 1.0E-8 BARNS IN ABSOLUTE VALUE. ONLY OUTPUT
C     REACTIONS FOR WHICH A BACKGROUND IS GIVEN. LIST ALL PARAMETERS AND
C     CALCULATE CROSS SECTIONS. MONITOR THE EXECUTION PROGRESS OF THE
C     PROGRAM. BETWEEN 0 AND 100 EV USE 0.1 PER-CENT ACCURACY. BETWEEN
C     100 EV AND 1 KEV VARY THE ACCURACY FROM 0.1 TO 1 PER-CENT. ABOVE
C     1 KEV USE 1 PER-CENT ACCURACY.
C
C     EXPLICITLY SPECIFY THE STANDARD FILENAMES.
C
C     THE FOLLOWING 11 INPUT CARDS ARE REQUIRED.
C
C          1 1.00000-08          0          1          0         1
C ENDFB.IN
C ENDFB.OUT
C      92000      92999
C      90232                  (UPPER LIMIT AUTOMATICALLY SET TO 90232)
C                             (END REQUEST LIST)
C 0.00000+ 0 1.00000-03
C 1.00000+02 1.00000-03
C 1.00000+03 1.00000-02
C 1.00000+09 1.00000-02
C                             (END FILE 2 ERROR LAW)
C
C     EXAMPLE INPUT NO. 2
C     -------------------
C     CONSIDER ALL URANIUM ISOTOPES AND TH-232. CONSIDER CROSS SECTIONS
C     WHICH ARE LARGER THAN 1.0E-8 BARNS IN ABSOLUTE VALUE. ONLY OUTPUT
C     REACTIONS FOR WHICH A BACKGROUND IS GIVEN. CROSS SECTIONS WILL BE
C     CALCULATED, BUT PARAMETERS WILL NOT BE LISTED. THE PROGRESS OF THE
C     PROGRAM WILL NOT BE MONITORED. USE 0.1 PER-CENT ACCURACY FOR ALL
C     ENERGIES. SINCE 0.1 PER-CENT IS THE STANDARD OPTION FOR THE ERROR
C     LAW THE FIRST ERROR LAW LINE MAY BE LEFT BLANK.
C
C     LEAVE THE DEFINITION OF THE FILENAMES BLANK - THE PROGRAM WILL
C     THEN USE THE STANDARD FILENAMES.
C
C     THE FOLLOWING 7 INPUT CARDS ARE REQUIRED.
C
C          1 1.00000-08          0          0          0         0
C
C
C      92000      92999
C      90232                  (UPPER LIMIT AUTOMATICALLY SET TO 90232)
C                             (END REQUEST LIST)
C                             (USE STANDARD OPTION FOR ERROR LAW)
C
C     EXAMPLE INPUT NO. 3
C     -------------------
C     THE SAME AS EXAMPLE INPUT NO. 2, ONLY IN THIS CASE ONLY CALCULATE
C     CROSS SECTIONS OVER THE ENERGY RANGE 0.01 TO 0.1 EV - ACROSS THE
C     THERMAL ENERGY RANGE. NOTE, THE ONLY DIFFERENCE BETWEEN THE INPUT
C     PARAMETERS IN THIS CASE AND IN EXAMPLE NO. 2, IS THAT ON THE
C     SECOND INPUT LINE WE HAVE ADDED THE ENERGY RANGE 0.01 TO 0.1 EV.
C     USE \PREPRO94\LINEAR\ENDFB.OUT AS INPUT AND ENDFB.OUT AS OUTPUT -
C     SINCE ENDFB.OUT IS THE STANDARD OUTPUT FILENAME THE NAME CAN BE
C     EITHER INCLUDED IN THE INPUT OR LEFT BLANK.
C
C     THE FOLLOWING 7 INPUT CARDS ARE REQUIRED.
C
C          1 1.00000-08          0          0          0         0
C \PREPRO94\LINEAR\ENDFB.OUT
C ENDFB.OUT
C      92000      92999 1.00000- 2 1.00000- 1
C      90232                  (UPPER LIMIT AUTOMATICALLY SET TO 90232)
C                             (END REQUEST LIST)
C                             (USE STANDARD OPTION FOR ERROR LAW)
C
C     EXAMPLE INPUT NO. 4
C     -------------------
C     RECONSTRUCT ALL DATA. OUTPUT ALL REACTIONS, REGARDING OF WHETHER
C     OR NOT THERE IS A BACKGROUND CROSS SECTION. DO NOT MONITOR THE
C     PROGRESS OF THE PROGRAM. RECONSTRUCT CROSS SECTIONS TO 1 PER-CENT
C     ACCURACY. USE \ENDFB6\LINEAR\ZA092238 AS INPUT AND
C     \ENDFB6\RECENT\ZA092238 AS OUTPUT.
C
C     THE FOLLOWING 6 INPUT CARDS ARE REQUIRED.
C
C          0 0.0                 1          0          0         0
C \ENDFB6\ZA092238
C \ENDFB6\RECENT\ZA092238
C                       (RETRIEVE ALL DATA, END REQUEST LIST)
C            1.00000- 2
C                       (END FILE 2 ERROR LAW)
C
C     EXAMPLE INPUT NO. 5
C     -------------------
C     RECONSTRUCT ALL DATA. ONLY OUTPUT REACTIONS FOR WHICH A BACKGROUND
C     CROSS SECTION IS GIVEN. DO NOT MONITOR THE PROGRESS OF THE PROGRAM
C     RECONSTRUCT CROSS SECTIONS TO 0.1 PER-CENT ACCURACY. USE ENDFB.IN
C     AS INPUT AND ENDFB.OUT AS OUTPUT.
C
C     THIS CORRESPONDS TO USING ALL OF THE STANDARD OPTONS BUILT-IN TO
C     THE PROGRAM AND ALL INPUT CARDS MAY BE BLANK.
C
C     IN THIS CASE THE FOLLOWING 5 INPUT CARDS ARE REQUIRED.
C     (ZEROES ARE INDICATED ON THE FIRST LINE, BELOW, ONLY TO INDICATE
C     WHERE THE LINE IS. THE ACTUAL INPUT LINE CAN BE COMPLETELY BLANK).
C
C          0 0.0                 0          0          0         0
C                       (USE STANDARD INPUT FILENAME = ENDFB.IN)
C                       (USE STANDARD OUTPUT FILENAME = ENDFB.OUT)
C                       (RETRIEVE ALL DATA, END REQUEST LIST)
C                       (0.1 ERROR, END FILE 2 ERROR LAW)
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*4 LINE
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/HEADER/C1H,C2H,L1H,L2H,N1H,N2H,MATH,MFH,MTH,NOSEQ
      COMMON/MAXIE/MAXSEC,MAXRES,MAXNOD,NEDSEC,NEDRES,NEDNOD
      COMMON/PAGER/NPAGE,NPAGP1,NPAGM1
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/COPC/LINE(17)
      COMMON/COPI/MFIELD(3)
      COMMON/FISSY/LFWX,LFI,MT451
      COMMON/MINNIE/EMIN,EMAX,DEMIN
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
C-----INITIALIZE TIMER
      CALL TIMER
C
C     DEFINE ALL I/O UNITS.
C
      CALL FILEIO
C-----DEFINE THE NUMBER OF POINTS IN EACH PAGE OF DATA.
      NPAGE=120000
      NPAGP1=NPAGE+1
      NPAGM1=NPAGE-1
C-----DEFINE MAXIMUM ALLOWABLE NUMBER OF SECTIONS, RESONANCES AND NODES.
C-----AND INITIALIZE NEEDED VALUES.
      MAXSEC=200
      MAXRES=120000
      MAXNOD=120000
      NEDSEC=0
      NEDRES=0
      NEDNOD=0
C-----DEFINE MINIMUM AND MAXIMUM ENERGIES OF INTEREST AND MINIMUM
C-----ALLOWABLE ENERGY INTERVAL FOR ANY ONE RESONANCE REGION.
      EMIN=1.0D-05
      EMAX=1.0D+10
      DEMIN=1.0D-05
C-----DEFINE COMMONLY USED CONSTANTS.
      ZERO=0.0D+00
      HALF=5.0D-01
      ONE=1.0D+00
      TWO=2.0D+00
      THREE=3.0D+00
      FOUR=4.0D+00
      EIGHT=8.0D+00
      PI = DACOS(-1.0D+00)
      PI2=TWO*PI
C-----OUTPUT PROGRAM IDENTIFICATION.
      WRITE(OUTP,150)
      WRITE(*   ,150)
C-----READ AND CHECK ALL INPUT PARAMETERS.
      CALL READIN
C
C     READ, LIST AND OUTPUT ENDF/B TAPE LABEL.
C
      CALL COPYL
      WRITE(OUTP,160) LINE,MFIELD(1)
      WRITE(*   ,160) LINE,MFIELD(1)
C-----INITIALIZE FISSILE FLAG OFF AND MF=1, MT=451 SECTION PRESENT FLAG
C-----TO OFF.
   10 LFI=0
      MT451=0
C-----FIND NEXT REQUESTED MAT AND TERMINATE IF RETURNED MAT IS NOT
C-----POSITIVE.
      CALL NXTMAT
      IF(MATH.GT.0) GO TO 50
C-----END OF RUN. TEND LINE HAS ALREADY BEEN OUTPUT.
   20 CONTINUE
      WRITE(OUTP,180) MAXSEC,MAXNOD,MAXRES,NEDSEC,NEDNOD,NEDRES
      IF(NEDSEC.GT.MAXSEC.OR.NEDNOD.GT.MAXNOD.OR.NEDRES.GT.MAXRES)
     1 WRITE(OUTP,190)
      WRITE(OUTP,200)
      WRITE(*   ,180) MAXSEC,MAXNOD,MAXRES,NEDSEC,NEDNOD,NEDRES
      IF(NEDSEC.GT.MAXSEC.OR.NEDNOD.GT.MAXNOD.OR.NEDRES.GT.MAXRES)
     1 WRITE(*   ,190)
      WRITE(*   ,200)
      CALL ENDIT
C
C     FIND FILE 1 OR 2.
C
   30 CALL CONTI
      IF(MTH) 40,40,50
   40 CALL CONTO
      IF(MATH) 20,10,30
   50 IF(MFH-1) 90,60,70
   60 IF(MTH-451) 80,130,90
   70 IF(MFH-2) 90,140,110
C-----COPY SECTION.
   80 CALL CONTO
      CALL COPYS
      GO TO 30
C-----COPY FILE.
   90 CALL CONTO
  100 CALL COPYF
      GO TO 30
C-----COPY MAT
  110 CALL CONTO
  120 CALL COPYM
      GO TO 10
C-----MF=1, MT=451 FOUND. ADD COMMENT CARDS AND DEFINE ENDF/B FORMAT
C-----VERSION - TO USE ALL CONVENTIONS ASSOICATED WITH CORRECT FORMAT
C-----VERSION).
  130 MT451=1
      CALL FILE1(IMDONE)
C-----COPY REMAINDER OF MAT IF NO RESONANCE PARAMETERS OR MAT HAS
C-----ALREADY BEEN PROCESSED. OTHERWISE COPY TO END OF FILE 1 (MF=1).
      IF(IMEDIT.EQ.2) GO TO 100
      IF(IMDONE) 120,120,100
C-----FILE 2 FOUND. PRINT WARNING MESSAGE IF NO MF=1, MT=451.
  140 IF(MT451.LE.0) WRITE(OUTP,170)
C-----PROCESS ALL OF FILE 2 (LIST ALL PARAMETERS AND/OR PROCESS INTO
C-----POINTWISE FORM).
      CALL CONTO
      CALL FILE2
C-----EDIT FILE 3 OR COMBINE FILE 2 AND 3 CONTRIBUTIONS AND OUTPUT.
C-----COPY REMAINDER OF MAT.
      CALL FILE3
C-----ENTIRE MATERIAL HAS PROCESSED. PROCEED TO NEXT MAT.
      GO TO 10
  150 FORMAT(' Calculate Cross Sections from Resonance Parameters',
     1 ' (RECENT 2000-1)'/1X,78('='))
  160 FORMAT(1X,78('=')/' ENDF/B Tape Label'/1X,78('=')/1X,16A4,A2,I4)
  170 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 ' No Section MF=1, MT=451.'/
     2 ' (1) Cannot Determine ENDF/B Format Version. Will'/
     3 '     Assume and Use ALL ENDF/B-VI Conventions.'/
     4 ' (2) Cannot Determine if there are Resonance Parameters(LRP).'/
     6 ' (3) Cannot Determine if Material is Fissile (LFI).'/
     7 ' Will Read Data to Answer Points (2) AND (3).')
  180 FORMAT(
     1 ' Core Allocation and Requirements'/1X,78('=')/
     2 9X,'Sections   Nodes Parameter'/28X,'Storage'/1X,78('=')/
     3 ' Allocated',I7,I8,I10/
     4 ' Required ',I7,I8,I10/1X,78('='))
  190 FORMAT(1X,7('WARNING...'),'WARNING'/
     1       ' WARNING...Before Using this Program to Calculate'/
     2       '           Cross Sections the Core Allocation MUST'/
     3       '           be Increased to at Least the Requirements'/
     4       '           Described Above. Failure to do this Will'/
     5       '           Cause the Program to Abort During Eexecution'/
     6 1X,78('='))
  200 FORMAT(' End of Run'/1X,78('='))
      END
      SUBROUTINE READIN
C=======================================================================
C
C     READ AND CHECK ALL INPUT PARAMETERS.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 FIELD,NAME1,NAME2,NAME3,NAME4,BLANK
      CHARACTER*4 MESS1,MESS2,MESS3,MESS4,MESS5,MESS6
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/MATZA/MODGET,NMATZA,MATMIN(101),MATMAX(101)
      COMMON/OKERR2/ERRXC2,ERXC20,ENER2(21),ER2(21),MAXER2
      COMMON/FIXPOT/MYPOT
      COMMON/MINSIG/SIGMIN
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/FIELDC/FIELD(11,12)
      COMMON/PARTN/EPART1,EPART2,NPART
      COMMON/NAMEX/NAME1(60),NAME2(60)
      DIMENSION MESS1(2),MESS2(9,2),MESS3(10,3),MESS4(9,2),
     1 MESS5(5,2),MESS6(2),NAME3(8),NAME4(12)
      DATA EPMAX/2.0D+07/
C-----DEFINE STANDARD FILENAMES
      DATA NAME3/'E','N','D','F','B','.','I','N'/
      DATA NAME4/'E','N','D','F','B','.','O','U','T',' ',' ',' '/
      DATA BLANK/' '/
C-----DEFINE STANDARD MINIMUM ALLOWABLE ERROR (PRESENTLY 0.1 PER-CENT).
      DATA ERRMIN/1.0D-03/
C-----DEFINE MINIMUM ABSOLUTE CROSS SECTION OF INTEREST (CROSS SECTION
C-----MAY BE POSITIVE OR NEGATIVE, BUT IF BOTH ENDS OF ANY INTERVAL ARE
C-----CLOSER TO ZERO THAN SIGLOW THE INTERVAL WILL NOT BE FURTHER
C-----SUB-DIVIDED).
      DATA SIGLOW/1.0D-10/
C-----DEFINE ALL OUTPUT MESSAGES.
      DATA MESS1/' MAT','  ZA'/
      DATA MESS2/
     1 '  No',' Out','put ','    ','    ','    ','    ','    ','    ',
     2 '    ',' Out','put ','(Res','onan','ce C','ontr','ibut','ion)'/
      DATA MESS3/
     1 ' Cal','cula','te. ','Mini','mum ','Outp','ut L','isti','ng. ',
     2 '    ',
     3 ' Cal','cula','te. ','List',' Res','onan','ce P','aram','eter',
     4 'S.  ',
     5 ' Edi','t Mo','de. ','List',' Res','onan','ce P','aram','eter',
     6 'S.  '/
      DATA MESS4/
     1 '  No',' Cha','nge ','(All','ow N','egat','ive ','Outp','ut) ',
     2 '  Ma','ke =',' 0 (','No N','egat','ive ','Outp','ut) ','    '/
      DATA MESS5/'(Sta','ndar','d Op','tion',')   ',
     1 '    ','    ','    ','    ','    '/
      DATA MESS6/' Off','  On'/
C-----READ AND PRINT INTERPRETATION OF FIRST LINE OF INPUT PARAMETERS.
      READ(INP,230) MODGET,SIGMIN,IMBACK,IMEDIT,MAKEPLUS,MONITR
      IF(MODGET.NE.0) MODGET=1
      IF(IMBACK.NE.0) IMBACK=1
      IF(MAKEPLUS.NE.0) MAKEPLUS=1
C-----INITIALIZE TO ADD MISSING OR DUPLICATE (L,S,J) SEQUENCES.
      MYPOT=1
      IF(IMEDIT.LT.10) GO TO 10
C-----AS REQUESTED, TURN ON OVERRIDE NOT TO ADD MISSING OR DUPLICATE
C-----(L,S,J) SEQUENCES.
      MYPOT=0
      IMEDIT=IMEDIT-10*(IMEDIT/10)
   10 IF(IMEDIT.LT.0.OR.IMEDIT.GT.2) IMEDIT=2
C-----IF IN EDIT MODE SET OTAPE = 0 TO INDICATE NO ENDF/B OUTPUT.
      IF(IMEDIT.EQ.2) OTAPE=0
      IF(MONITR.LE.0) MONITR=0
      IF(MONITR.GT.0) MONITR=1
      MIN=2
C***** DEBUG
C     IF(SIGMIN.GE.SIGLOW) GO TO 20
      IF(SIGMIN.GT.0.0D+0) GO TO 20
C***** DEBUG
      SIGMIN=SIGLOW
      MIN=1
   20 CALL OUT9(SIGMIN,FIELD(1,1),0)
      WRITE(OUTP,270) MESS1(MODGET+1),(FIELD(M,1),M=1,11),
     1 (MESS5(J,MIN),J=1,5),(MESS2(J,IMBACK+1),J=1,9)
      WRITE(OUTP,280) (MESS3(J,IMEDIT+1),J=1,10),
     1                (MESS4(J,MAKEPLUS+1),J=1,9),
     2 MESS6(MONITR+1)
      WRITE(*   ,270) MESS1(MODGET+1),(FIELD(M,1),M=1,11),
     1 (MESS5(J,MIN),J=1,5),(MESS2(J,IMBACK+1),J=1,9)
      WRITE(*   ,280) (MESS3(J,IMEDIT+1),J=1,10),
     1                (MESS4(J,MAKEPLUS+1),J=1,9),
     2 MESS6(MONITR+1)
C-----PRINT WARNING MESSAGE IF OVERRIDE NOT TO ADD MISSING OR DUPLICATE
C-----(L,S,J) SEQUENCES HAS BEEN TURNED ON.
      IF(MYPOT.EQ.0) WRITE(OUTP,410)
C
C     READ FILENAMES - IF BLANK USE STANDARD FILENAMES
C
C-----INPUT DATA.
      READ(INP,240) NAME1
      DO 30 I=1,60
      IF(NAME1(I).NE.BLANK) GO TO 50
   30 CONTINUE
      DO 40 I=1,8
   40 NAME1(I)=NAME3(I)
C-----OUTPUT DATA.
   50 READ(INP,240) NAME2
      DO 60 I=1,60
      IF(NAME2(I).NE.BLANK) GO TO 80
   60 CONTINUE
      DO 70 I=1,12
   70 NAME2(I)=NAME4(I)
   80 WRITE(OUTP,290) NAME1,NAME2
      WRITE(*   ,290) NAME1,NAME2
C
C     OPEN ENDF/B DATA FILES
C
      CALL FILIO2
C-----READ SELECTION RANGES (EITHER MAT OR ZA). IF MAXIMUM IS LESS
C-----THAN MINIMUM SET IT EQUAL TO MINIMUM.
      IF(MODGET.EQ.0) WRITE(OUTP,300)
      IF(MODGET.EQ.1) WRITE(OUTP,310)
      IF(MODGET.EQ.0) WRITE(*   ,300)
      IF(MODGET.EQ.1) WRITE(*   ,310)
      READ(INP,250) MATMIN(1),MATMAX(1),((FIELD(KK,KKK),KK=1,11),
     1 KKK=1,2)
C-----CONVERT ENERGY RANGE TO PROCESS FROM CHARACTERS TO FLOATING POINT.
      CALL IN9(EPART1,FIELD(1,1))
      CALL IN9(EPART2,FIELD(1,2))
C-----DEFINE WHETHER ALL OR A PORTION OF THE RESONANCE REGION WILL BE
C-----PROCESSED.
      NPART=0
      IF(EPART1.GT.0.0) NPART=1
      IF(EPART2.GT.0.0) NPART=2
      IF(EPART2.LE.0.0) EPART2=EPMAX
C-----IF NO MAT/ZA RANGE USE STANDARD OPTION = ALL.
      IF(MATMIN(1).GT.0.OR.MATMAX(1).GT.0) GO TO 90
      MATMAX(1)=9999
      MODGET=0
      NMATZA=2
      WRITE(OUTP,330) MATMIN(1),MATMAX(1)
      WRITE(*   ,330) MATMIN(1),MATMAX(1)
C-----PRINT WARNING IF ONLY A PORTION OF RESONANCE REGION WILL BE
C-----PROCESSED.
      IF(NPART.LE.0) GO TO 120
      CALL OUT9(EPART1,FIELD(1,1),3)
      CALL OUT9(EPART2,FIELD(1,2),3)
      WRITE(OUTP,420) ((FIELD(M,KK),M=1,11),KK=1,2)
      WRITE(*   ,420) ((FIELD(M,KK),M=1,11),KK=1,2)
      GO TO 120
   90 IF(MATMAX(1).LT.MATMIN(1)) MATMAX(1)=MATMIN(1)
      WRITE(OUTP,320) MATMIN(1),MATMAX(1)
      WRITE(*   ,320) MATMIN(1),MATMAX(1)
C-----PRINT WARNING IF ONLY A PORTION OF RESONANCE REGION WILL BE
C-----PROCESSED.
      IF(NPART.LE.0) GO TO 100
      CALL OUT9(EPART1,FIELD(1,1),3)
      CALL OUT9(EPART2,FIELD(1,2),3)
      WRITE(OUTP,420) ((FIELD(M,KK),M=1,11),KK=1,2)
      WRITE(*   ,420) ((FIELD(M,KK),M=1,11),KK=1,2)
C-----PROCESS REMAINING DATA REQUESTS.
  100 DO 110 NMATZA=2,101
      READ(INP,250) MATMIN(NMATZA),MATMAX(NMATZA)
      IF(MATMIN(NMATZA).LE.0.AND.MATMAX(NMATZA).LE.0) GO TO 120
      IF(MATMAX(NMATZA).LT.MATMIN(NMATZA)) MATMAX(NMATZA)=MATMIN(NMATZA)
      WRITE(OUTP,320) MATMIN(NMATZA),MATMAX(NMATZA)
      WRITE(*   ,320) MATMIN(NMATZA),MATMAX(NMATZA)
  110 CONTINUE
      GO TO 190
C
C     READ AND PRINT FILE 2 ERROR LAW. ERROR MUST BE POSITIVE AND
C     ENERGIES MUST BE IN ASCENDING ORDER. IF ERROR IS ZERO SET TO
C     STANDARD OPTION. ERROR LAW IS TERMINATED BY BLANK LINE. IF
C     FIRST LINE IS BLANK TERMINATE ERROR LAW AND SET ERROR TO
C     ENERGY INDEPENDENT STANDARD OPTION (CURRENTLY 0.1 PER-CENT).
C
  120 NMATZA=NMATZA-1
      READ(INP,260) ENER2(1),ER2(1)
      IF(ENER2(1).LT.0.0) ENER2(1)=0.0
      CALL OUT9(ENER2(1),FIELD(1,1),3)
      IF(ER2(1).GT.0.0) GO TO 130
      ER2(1)=ERRMIN
      PERCNT=100.0*ERRMIN
      CALL OUT9(ER2(1),FIELD(1,2),0)
      WRITE(OUTP,360) ((FIELD(M,I),M=1,11),I=1,2),PERCNT
      WRITE(*   ,360) ((FIELD(M,I),M=1,11),I=1,2),PERCNT
      IF(ENER2(1).GT.0.0) GO TO 140
      MAXER2=2
      GO TO 180
  130 PERCNT=100.0*ER2(1)
      CALL OUT9(ER2(1),FIELD(1,2),0)
      WRITE(OUTP,350) ((FIELD(M,I),M=1,11),I=1,2),PERCNT
      WRITE(*   ,350) ((FIELD(M,I),M=1,11),I=1,2),PERCNT
  140 DO 170 MAXER2=2,21
      READ(INP,260) ENER2(MAXER2),ER2(MAXER2)
      IF(ENER2(MAXER2).LE.0.0.AND.ER2(MAXER2).LE.0.0) GO TO 180
      CALL OUT9(ENER2(MAXER2),FIELD(1,1),3)
      IF(ER2(MAXER2).LE.0.0) GO TO 150
      PERCNT=100.0*ER2(MAXER2)
      CALL OUT9(ER2(MAXER2),FIELD(1,2),0)
      WRITE(OUTP,370) ((FIELD(M,I),M=1,11),I=1,2),PERCNT
      WRITE(*   ,370) ((FIELD(M,I),M=1,11),I=1,2),PERCNT
      GO TO 160
  150 ER2(MAXER2)=ERRMIN
      PERCNT=100.0*ERRMIN
      CALL OUT9(ER2(MAXER2),FIELD(1,2),0)
      WRITE(OUTP,380) ((FIELD(M,I),M=1,11),I=1,2),PERCNT
      WRITE(*   ,380) ((FIELD(M,I),M=1,11),I=1,2),PERCNT
  160 IF(ENER2(MAXER2).LT.ENER2(MAXER2-1)) GO TO 220
  170 CONTINUE
      GO TO 210
C-----INITIALIZE FILE 2 RECONSTRUCTION LAW INDICES AND ALLOWABLE ERROR.
  180 MAXER2=MAXER2-1
      ERRXC2=ER2(1)
      ERXC20=0.10*ERRXC2
      RETURN
C
C     ERROR MESSAGE SECTION. PRINT ERROR MESSAGE AND TERMINATE.
C
C-----OVER 100 MAT OR ZA RANGES.
  190 WRITE(OUTP,340)
      WRITE(*   ,340)
  200 CALL ENDIT
C-----OVER 20 ENTRIES IN ERROR LAW.
  210 WRITE(OUTP,390)
      WRITE(*   ,390)
      GO TO 200
C-----ERROR LAW ENERGIES NOT IN ASCENDING ORDER.
  220 WRITE(OUTP,400)
      WRITE(*   ,400)
      GO TO 200
  230 FORMAT(I11,E11.4,2I11,I11,I11)
  240 FORMAT(60A1)
  250 FORMAT(2I11,22A1)
  260 FORMAT(2E11.4)
  270 FORMAT(
     1 ' Retrieval Criteria-----------',7X,A4/
     2 ' File 2 Mimimum Cross Section-',11A1,1X,5A4/
     3 ' Reactions with No Background-',9A4)
  280 FORMAT(
     1 ' Calculate/Edit Mode----------',1X,10A4/
     2 ' Negative Cross Sections------',1X,9A4/
     3 ' Monitor Mode-----------------',7X,A4)
  290 FORMAT(1X,78('=')/
     1 ' ENDF/B Input and Output Data Filenames'/1X,60A1/
     2 1X,60A1)
  300 FORMAT(1X,78('=')/' Requested MAT Ranges'/1X,78('=')/
     1 4X,'Mimimum',4X,'Maximum'/1X,78('='))
  310 FORMAT(1X,78('=')/' Requested ZA Ranges'/1X,78('=')/
     1 4X,'Mimimum',4X,'Maximum'/1X,78('='))
  320 FORMAT(2I11)
  330 FORMAT(2I11,' (Default Option)')
  340 FORMAT(' Over 100 Ranges----Execution Terminated')
  350 FORMAT(1X,78('=')/' Allowable Uncertainty'/1X,78('=')/
     1 6X,'Energy',' Uncertainty',3X,'per-cent'/1X,78('=')/
     2 1X,11A1,1X,11A1,F11.3)
  360 FORMAT(1X,78('=')/' File 2 Reconstruction Error'/1X,78('=')/
     1 6X,'Energy',6X,'Error',3X,'per-cent'/1X,78('=')/
     3 1X,11A1,1X,11A1,F11.3,' (Default Option)')
  370 FORMAT(1X,11A1,1X,11A1,F11.3)
  380 FORMAT(1X,11A1,1X,11A1,F11.3,' (Default Option)')
  390 FORMAT(' Over 20 Ranges----Execution Terminated')
  400 FORMAT(' Energies MUST be in Ascending Order----',
     1 'Execution Terminated')
  410 FORMAT(1X,78('=')/
     1 ' WARNING - You Have Turned on the Override NOT to Add Missing'/
     2 ' or Duplicate (L,S,J) Sequences to Account for their Potential'/
     3 ' Contribution. This is NOT Recommended, Based on the Decision'/
     4 ' of the National Nuclear Data Center, Brookhaven National Lab,'/
     5 ' Private Communication, Charles Dunford, (April 1991)'/
     6  1X,78('='))
  420 FORMAT(1X,78('=')/
     1 ' WARNING - You Have Turned on the Override to ONLY Process a'/
     2 ' Portion of the Resonance Region ',11A1,' to ',11A1,' eV.'/
     6  1X,78('='))
      END
      SUBROUTINE NXTMAT
C=======================================================================
C
C     FIND NEXT REQUESTED MATERIAL BASED EITHER ON ZA OR MAT.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 ZABCD
      CHARACTER*4 FMT5,FMTHOL
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/MATZA/MODGET,NMATZA,MATMIN(101),MATMAX(101)
      COMMON/HEADER/C1H,C2H,L1H,L2H,N1H,N2H,MATH,MFH,MTH,NOSEQ
      COMMON/WHATZA/IZANOW,MATNOW,TEMP3,IVERSE,INT45
      COMMON/HOLFMT/FMTHOL,ZABCD(10)
      DIMENSION IZAMIN(101),IZAMAX(101)
      EQUIVALENCE (MATMIN(1),IZAMIN(1)),(MATMAX(1),IZAMAX(1))
      DATA FMT5/' V'/
C-----READ NEXT LINE AND CHECK FOR END OF ENDF/B TAPE.
   10 CALL CONTI
      IF(MTH) 20,20,30
   20 IF(MATH) 90,10,10
C-----DEFINE FIXED POINT ZA.
   30 IZANOW=C1H
C-----COMPARE MAT OR ZA TO SELECTION CRITERIA.
      IMHIGH=0
      DO 80 IMATZA=1,NMATZA
      IF(MODGET.NE.0) GO TO 50
      IF(MATH-MATMIN(IMATZA)) 70,100,40
   40 IF(MATH-MATMAX(IMATZA)) 100,100,80
   50 IF(IZANOW-IZAMIN(IMATZA)) 70,100,60
   60 IF(IZANOW-IZAMAX(IMATZA)) 100,100,70
   70 IMHIGH=1
   80 CONTINUE
C-----THIS MATERIAL HAS NOT BEEN REQUESTED. IF BEYOND RANGE OF ALL
C-----REQUESTS RUN IF COMPLETED. IF NOT SKIP TO NEXT MATERIAL.
      IF(IMHIGH.LE.0) GO TO 90
C-----SKIP TO MATERIAL END (MEND) LINE.
      CALL SKIPM
      GO TO 10
C-----END OF RUN. RETURN NEGATIVE MATH AS INDICATOR. OUTPUT TAPE END
C-----(TEND) RECORD.
   90 MATH=-1
      MFH=0
      MTH=0
      CALL OUTT
      WRITE(OUTP,120)
      WRITE(*   ,120)
      RETURN
C-----THIS MATERIAL REQUESTED. INITIALIZE OUTPUT SEQUENCE NUMBER,
C-----ENDF/B FORMAT VERSION NUMBER, ASSUME ENDF/B-VI FORMAT AND
C-----INITIALIZE FILE 3 TEMPERATURE TO ZERO (IF MF=1, MT-451 IS
C-----PRESENT THE ENDF/B VERSION NUMBER WILL BE RE-DEFINED BASED
C-----ON THE FORMAT OF MF=1, MT=451).
  100 NOSEQ=1
      MATNOW=MATH
      FMTHOL=FMT5
      IVERSE=6
      TEMP3=0.0
      INT45=2
C-----DEFINE BCD EQUIVALENT OF ZA.
      CALL ZAHOL(IZANOW,ZABCD)
C-----IDENTIFY MAT BEING PROCESSED.
      WRITE(OUTP,110) ZABCD,MATNOW
      WRITE(*   ,110) ZABCD,MATNOW
      RETURN
  110 FORMAT(1X,78('*')/' Processing ',10A1,' MAT=',I5/
     1 1X,78('*'))
  120 FORMAT(1X,78('*')/' End of ENDF/B Input Data'/1X,78('*'))
      END
      SUBROUTINE FILE1(IMDONE)
C=======================================================================
C
C     ADD COMMENTS AT THE END OF FILE 1, SECTION 451 TO INDICATE
C     THAT THIS MATERIAL HAS BEEN PROCESSED BY PROGRAM RECENT AND
C     TO SPECIFY THE MAXIMUM ALLOWABLE ERROR.
C
C     DEFINE FORMAT TO BE ENDF/B-IV, V OR VI.
C
C     THE ENDF/B FORMAT CAN BE DETERMINED FROM THE SECOND LINE.
C     ENDF/B-IV = N1 > 0, N2 = 0,LINE COUNT (POSITIVE)
C     ENDF/B-V  = N1 = N2 =0
C     ENDF/B-VI =      N2 = VERSION NUMBER (6 OR MORE)
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 ZABCD,FIELD,PROGDOC1
      CHARACTER*4 FMTHOL,FMTTAB
      CHARACTER*66 PROGDOC
      COMMON/HEADER/C1H,C2H,L1H,L2H,N1H,N2H,MATH,MFH,MTH,NOSEQ
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/MINSIG/SIGMIN
      COMMON/OKERR2/ERRXC2,ERXC20,ENER2(21),ER2(21),MAXER2
      COMMON/WHATZA/IZANOW,MATNOW,TEMP3,IVERSE,INT45
      COMMON/HOLFMT/FMTHOL,ZABCD(10)
      COMMON/FISSY/LFWX,LFI,MT451
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/PARTN/EPART1,EPART2,NPART
      COMMON/FIELDC/FIELD(11,12)
      DIMENSION FMTTAB(3),PROGDOC(9),PROGDOC1(66,9)
      EQUIVALENCE (PROGDOC(1),PROGDOC1(1,1))
      DATA FMTTAB/'IV',' V','VI'/
C-----DOCUMENTATION TO ADD TO ENDF/B OUTPUT - EACH LINE IS 66
C-----CHARACTERS LONG - FIELDS 12345678901 ARE FILLED IN WITH
C-----11 CHARACTERS DURING EXECUTION.
C               1         2         3         4         5         6
C       12345678901234567890123456789012345678901234567890123456789012
C       3456
      DATA PROGDOC/
     1 ' ***************** Program RECENT (VERSION 2000-1) ***********',
     2 ' Only Process12345678901 to12345678901 eV                     ',
     3 ' for All Data Greater than12345678901 barns in Absolute Value ',
     4 ' Data Linearized to within an Accuracy of12345678901 per-cent ',
     5 ' Data Linearized Using Energy Dependent Uncertainty           ',
     6 '      Energy    Accuracy                                      ',
     7 '        (eV)  (per-cent)                                      ',
     8 ' ----------- -----------                                      ',
     9 ' 12345678901 12345678901                                      '/
C-----FILL IN REMAINDER OF FIRST LINE
      PROGDOC1(63,1) = '*'
      PROGDOC1(64,1) = '*'
      PROGDOC1(65,1) = '*'
      PROGDOC1(66,1) = '*'
C-----INITIALIZE MAT ALREADY PROCESSED FLAG TO OFF.
      IMDONE=1
C-----SAVE FLAGS WHICH INDICATES WHETHER OR NOT MAT IS FISSIONABLE AND
C-----IF RESONANCE PARAMETERS ARE PRESENT.
      LRP=L1H
      LFI=L2H
C-----HEAD LINE OF SECTION HAS BEEN READ. READ SECOND LINE AND TEST
C-----FOR ENDF/B-IV FORMAT.
      CALL CARDI(C1A,C2A,L1A,L2A,N1A,N2A)
C-----IV N1 > 0, N2 = 0
      IF(N1A.LE.0.OR.N2A.NE.0) GO TO 40
C
C     ENDF/B-IV FORMAT. UPDATE NUMBER OF COMMENT CARDS AND OUTPUT
C     TWO CARDS SET FLAGS FOR ENDF/B-IV FORMAT.
C
C-----IF THERE ARE RESONANCE PARAMETERS AND THEIR CONTRIBUTION HAS NOT
C-----BEEN ADDED TO THE BACKGROUND SET LRP TO INDICATE THAT IT HAS NOW
C-----BEEN ADDED. ONLY ADD COMMENT CARDS IF MAT WILL BE PROCESSED.
      IF(LRP.NE.1) GO TO 20
C-----DO NOT SET LRP IF ONLY PROCESSING A PORTION OF THE RESONANCE
C-----REGION = ASSUME THAT THIS DATA WILL BE PROCESSED AGAIN.
      IF(NPART.NE.2) GO TO 10
C-----ONLY ADD PROGRAM I.D. AND ENERGY RANGE PROCESSED.
      N1OUT=N1A+2
      GO TO 30
   10 L1H=2
      N1OUT=N1A+3
      IF(NPART.NE.0) N1OUT=N1OUT+1
      IF(MAXER2.GT.1) N1OUT=N1OUT+MAXER2+3
      GO TO 30
   20 N1OUT=N1A
   30 CALL CONTO
      CALL CARDO(C1A,C2A,L1A,L2A,N1OUT,N2A)
      N1X=N1A
      FMTHOL=FMTTAB(1)
      IVERSE=4
      INT45=5
      GO TO 120
C-----NOT ENDF/B-IV. READ THIRD LINE AND TEST FOR ENDF/B-V FORMAT.
   40 CALL CARDI(C1B,C2B,L1B,L2B,N1B,N2B)
      IF(N2A.GT.0) GO TO 80
C
C     ENDF/B-V FORMAT. UPDATE NUMBER OF COMMENT CARDS AND OUTPUT
C     THREE CARDS AND SET FLAGS FOR ENDF/B=V FORMAT.
C
C-----IF THERE ARE RESONANCE PARAMETERS AND THEIR CONTRIBUTION HAS NOT
C-----BEEN ADDED TO THE BACKGROUND SET LRP TO INDICATE THAT IT HAS NOW
C-----BEEN ADDED. ONLY ADD COMMENT CARDS IF MAT WILL BE PROCESSED.
      IF(LRP.NE.1) GO TO 60
C-----DO NOT SET LRP IF ONLY PROCESSING A PORTION OF THE RESONANCE
C-----REGION = ASSUME THAT THIS DATA WILL BE PROCESSED AGAIN.
      IF(NPART.NE.2) GO TO 50
C-----ONLY ADD PROGRAM I.D. AND ENERGY RANGE PROCESSED.
      N1OUT=N1B+2
      GO TO 70
   50 L1H=2
      N1OUT=N1B+3
      IF(NPART.NE.0) N1OUT=N1OUT+1
      IF(MAXER2.GT.1) N1OUT=N1OUT+MAXER2+3
      GO TO 70
   60 N1OUT=N1B
   70 CALL CONTO
      CALL CARDO(C1A,C2A,L1A,L2A,N1A,N2A)
      CALL CARDO(C1B,C2B,L1B,L2B,N1OUT,N2B)
      N1X=N1B
      FMTHOL=FMTTAB(2)
      IVERSE=5
      INT45=2
      GO TO 120
C
C     ENDF/B-VI FORMAT. UPDATE NUMBER OF COMMENT CARDS AND OUTPUT
C     THREE CARDS AND SET FLAGS FOR ENDF/B=VI FORMAT.
C
C-----READ FOURTH LINE.
   80 CALL CARDI(C1C,C2C,L1C,L2C,N1C,N2C)
C-----IF THERE ARE RESONANCE PARAMETERS AND THEIR CONTRIBUTION HAS NOT
C-----BEEN ADDED TO THE BACKGROUND SET LRP TO INDICATE THAT IT HAS NOW
C-----BEEN ADDED. ONLY ADD COMMENT CARDS IF MAT WILL BE PROCESSED.
      IF(LRP.NE.1) GO TO 100
C-----DO NOT SET LRP IF ONLY PROCESSING A PORTION OF THE RESONANCE
C-----REGION = ASSUME THAT THIS DATA WILL BE PROCESSED AGAIN.
      IF(NPART.NE.2) GO TO 90
C-----ONLY ADD PROGRAM I.D. AND ENERGY RANGE PROCESSED.
      N1OUT=N1C+2
      GO TO 110
   90 L1H=2
      N1OUT=N1C+3
      IF(NPART.NE.0) N1OUT=N1OUT+1
      IF(MAXER2.GT.1) N1OUT=N1OUT+MAXER2+3
      GO TO 110
  100 N1OUT=N1C
  110 CALL CONTO
      CALL CARDO(C1A,C2A,L1A,L2A,N1A,N2A)
      CALL CARDO(C1B,C2B,L1B,L2B,N1B,N2B)
      N1X=N1C
      FMTHOL=FMTTAB(3)
      IVERSE=6
      INT45=2
      TEMP3=C1C
      INPART=N1B/10
C-----SET DERIVED MATERIAL FLAG.
      IF(NPART.NE.2) L1C=1
      CALL CARDO(C1C,C2C,L1C,L2C,N1OUT,N2C)
C-----IF NO RESONANCE PARAMETERS OR THERE CONTRIBUTION HAS ALREADY BEEN
C-----ADDED TO THE BACKGROUND COPY MAT. OTHERWISE INSERT COMMENTS.
  120 IF(LRP.NE.1) GO TO 170
C
C     SKIP OUTPUT IF IN EDIT (I.E. NO OUTPUT) MODE.
C
      IF(OTAPE.LE.0) GO TO 180
C-----COPY TO END OF HOLLERITH.
      DO 130 N=1,N1X
  130 CALL COPY1
C
C     ADD COMMENTS TO DOCUMENT WHAT WAS DONE TO DATA
C
C-----OUTPUT PROGRAM VERSION I.D.
      CALL HOLLYO(PROGDOC1(1,1))
C-----IF ONLY PROCESSING A PORTION OF THE ENERGY RANGE, DEFINE IT.
      IF(NPART.LE.0) GO TO 140
      CALL OUT9(EPART1,PROGDOC1(14,2),3)
      CALL OUT9(EPART2,PROGDOC1(28,2),3)
      CALL HOLLYO(PROGDOC1(1,2))
C-----IF NOT THE END OF THE RESONANCE REGION CALCULATIONS SKIP
C-----REMAINDER = ASSUME DATA WILL BE PROCESSED AGAIN.
      IF(NPART.EQ.2) GO TO 180
C
C     DESCRIBE RESONANCE RECONSTRUCTION CRITERIA.
C
C-----OUTPUT MINIMUM CROSS SECTION
  140 CALL OUT9(SIGMIN,PROGDOC1(27,3),0)
      CALL HOLLYO(PROGDOC1(1,3))
      IF(MAXER2.GT.1) GO TO 150
C-----OUTPUT ENERGY INDEPENDENT ERROR USED FOR RECONSTRCUTION.
      PERCNT=100.0*ER2(1)
      CALL OUT9(PERCNT,PROGDOC1(42,4),3)
      CALL HOLLYO(PROGDOC1(1,4))
      GO TO 180
C-----OUTPUT 4 LINE TITLE
  150 CALL HOLLYO(PROGDOC1(1,5))
      CALL HOLLYO(PROGDOC1(1,6))
      CALL HOLLYO(PROGDOC1(1,7))
      CALL HOLLYO(PROGDOC1(1,8))
      DO 160 I=1,MAXER2
      PERCNT=100.0*ER2(I)
      CALL OUT9(ENER2(I),PROGDOC1( 2,9),3)
      CALL OUT9(PERCNT  ,PROGDOC1(14,9),3)
  160 CALL HOLLYO(PROGDOC1(1,9))
      GO TO 180
C
C     END OF HOLLERITH OUTPUT TO FILE1
C
C-----INDICATE THAT MAT NEED NOT BE PROCESSED (EITHER NO PARAMETERS OR
C-----THEIR CONTRIBUTION HAS ALREADY BEEN ADDED TO THE BACKGROUND).
  170 IMDONE=0
C-----IDENTIFY ENDF/B FORMAT.
  180 WRITE(OUTP,200) FMTHOL
      WRITE(*   ,200) FMTHOL
C-----DEFINE WHETHER OR NOT MATERIAL IS FISSILE.
      IF(LFI.EQ.0) WRITE(OUTP,210)
      IF(LFI.GT.0) WRITE(OUTP,220)
      IF(LFI.EQ.0) WRITE(*   ,210)
      IF(LFI.GT.0) WRITE(*   ,220)
C-----DEFINE WHETHER OR NOT THERE ARE RESONANCE PARAMETERS AND WHETHER
C-----THERE CONTRIBUTION HAS ALREADY BEEN ADDED TO THE BACKGROUND CROSS
C-----SECTION.
      IF(LRP.EQ.0) WRITE(OUTP,230)
      IF(LRP.EQ.1) WRITE(OUTP,240)
      IF(LRP.EQ.2.AND.IMEDIT.NE.2) WRITE(OUTP,250)
      IF(LRP.EQ.2.AND.IMEDIT.EQ.2) WRITE(OUTP,260)
      IF(LRP.EQ.0) WRITE(*   ,230)
      IF(LRP.EQ.1) WRITE(*   ,240)
      IF(LRP.EQ.2.AND.IMEDIT.NE.2) WRITE(*   ,250)
      IF(LRP.EQ.2.AND.IMEDIT.EQ.2) WRITE(*   ,260)
C-----FOR ENDF/B-VI FORMATTED DATA DEFINE PROJECTILE AND BACKGROUND
C-----TEMPERATURE.
      IF(IVERSE.NE.6) GO TO 190
      IF(INPART.EQ.1) WRITE(OUTP,270) INPART
      IF(INPART.NE.1) WRITE(OUTP,280) INPART
      CALL OUT9(TEMP3,FIELD(1,1),0)
      WRITE(OUTP,290) (FIELD(M,1),M=1,11)
  190 RETURN
  200 FORMAT(' Based on the Format and Contents of MF=1, MT=451'/
     1 ' (1) ENDF/B-',A2,' Format.')
  210 FORMAT(' (2) Material is NOT Fissile (LFI=0).')
  220 FORMAT(' (2) Material is Fissile (LFI=1).')
  230 FORMAT(' (3) No Resonance Parameters Given (LRP=0).',
     1 ' MAT Copied.')
  240 FORMAT(' (3) Resonance Parameters are Given (LRP=1).')
  250 FORMAT(' (3) Resonance Data Already Added to Background Cross'/
     1       '     Section (LRP=2). MAT Copied.')
  260 FORMAT(' (3) Resonance Data Already Added to Background Cross'/
     1       '     Section (LRP=2).')
  270 FORMAT(' (4) Projectile ZA =',I7,' (Neutron).')
  280 FORMAT(' (4) Projectile ZA =',I7,' (Expect Neutron = 1).')
  290 FORMAT(' (5) Temperature of Background ',11A1,' Kelvin.')
      END
      SUBROUTINE FILE2
C=======================================================================
C
C     READ ALL FILE2 DATA AND PROCESS INTO POINTWISE FORM.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      CHARACTER*1 FIELD
      INTEGER OUTP,OTAPE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/UNITS/ISCR2,ISCR23
      COMMON/SUBS/ESUB(217),ENODP,ENODM,WIDP,WIDM,ISUB,NSUB
      COMMON/PAGER/NPAGE,NPAGP1,NPAGM1
      COMMON/POINTN/NPOINT,KPOINT
      COMMON/OKERR2/ERRXC2,ERXC20,ENER2(21),ER2(21),MAXER2
      COMMON/MINSIG/SIGMIN
      COMMON/MINNIE/EMIN,EMAX,DEMIN
      COMMON/EDGES/ERANGE(50),NODLOW(50),NODHI(50),NRANGE,IRANGE
      COMMON/FISSY/LFWX,LFI,MT451
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/COM5/ESAVE(200),SIGSAV(4,200)
      COMMON/FIELDC/FIELD(11,12)
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION SIGMID(4),ETAB2X(120000),SIG2X(4,120000)
      EQUIVALENCE (ETAB2(1),ETAB2X(1)),(SIG2(1,1),SIG2X(1,1))
      DATA IUSE2/0/
      DATA TINY/1.0D-09/
      PARAMETER (NEGRID = 14)
      DIMENSION EGRID(NEGRID)
CCHO
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      DATA EGRID/
     1 1.0D-5,1.0D-4,1.0D-3,1.0D-2,2.53D-2,1.0D-1,1.0D+0,1.0D+1,1.0D+2,
     1 1.0D+3,1.0D+4,1.0D+5,1.0D+6,1.0D+7/
      DIMENSION ENERES(120000),TWIDTH(120000)
CCHO
C-----READ ALL FILE 2 PARAMETERS.
      CALL READ2
C-----INITIALIZE POINT COUNTS
C-----NPOINT = NUMBER OF POINTS ON SCRATCH. POINT TOTAL AT END.
C-----KPOINT = NUMBER OF POINTS IN CORE (0 TO 120000).
C-----KPTP1  = INDEX TO POSITION INTO WHICH NEXT POINT WILL BE STORED.
C-----NBASE  = NUMBER OF POINTS GENERATED UP TO END OF LAST ENERGY.
C-----RANGE).
      NPOINT=0
      KPOINT=0
      KPTP1=1
      NBASE=0
C-----IF THERE ARE NO SECTIONS WHOSE RESONANCE CONTRIBUTION MUST BE
C-----ADDED TO BACKGROUND CROSS SECTION THERE IS NOTHING ELSE TO DO.
      IF(NSECT.GT.0) GO TO 10
      WRITE(OUTP,390)
      WRITE(*   ,390)
      GO TO 320
C-----IF IN EDIT MODE RETURN AFTER READING ALL FILE 2 DATA.
   10 IF(IMEDIT.EQ.2) GO TO 320
C
C     CALCULATE RESONANCE CONTRIBUTION TO CROSS SECTION.
C
      WRITE(OUTP,380)
      WRITE(*   ,380)
C-----DEFINE THE NUMBER OF REACTIONS TO CONSIDER (3 IF NO FISSION,
C-----4 IF FISSION - BASED ON READING FISSION WIDTHS).
      NREACT=3
      IF(LFWX.GT.0) NREACT=4
C-----INITIALIZE SAVED POINT COUNT.
      NSAVE=0
C
C     SET UP LOOP OVER ENERGY RANGES (E.G. RESOLVED AND UNRESOLVED)
C
      DO 310 IRANGE=2,NRANGE
      IRM1=IRANGE-1
C-----INITIALIZE FLAG TO DEFINE TYPE OF RANGE (RESOLVED, UNRESOLVED
C-----OR BOTH).
      IR=0
      IU=0
C-----DEFINE WHICH SECTIONS CONTRIBUTE TO THIS ENERGY RANGE.
      DO 30 I=1,NSECT
      IF(EL(I).LT.ERANGE(IRANGE).AND.EH(I).GT.ERANGE(IRM1)) GO TO 20
C-----TURN OFF SECTION.
      MODE(I)=-IABS(MODE(I))
      GO TO 30
C-----TURN ON SECTION.
   20 MODE(I)=IABS(MODE(I))
C-----DETERMINE TYPE OF RESONANCE REGION (I.E. RESOLVED, UNRESOLVED,
C-----BOTH OR NONE).
      IF(MODE(I).LT.8) IR=1
      IF(MODE(I).GE.8) IU=1
   30 CONTINUE
C-----IDENTIFY TYPE OF ENERGY REGION.
      NREG=1+IR+2*IU
CCHO
C      DEFINE OUR OWN ENERGY GRID
       GO TO 7000
CCHO
C
C     SET UP LOOP OVER ENERGY NODES IN CURRENT ENERGY RANGE.
C
C-----DEFINE WHICH NODES LIE IN THIS ENERGY RANGE AND SET UP LOOP OVER
C-----NODES.
      NODE1=NODLOW(IRANGE)+1
      NODE2=NODHI(IRANGE)
      DO 250 KNODE=NODE1,NODE2
C-----DEFINE INTERVAL END POINTS.
      ENODM=ENODE(KNODE-1)
      WIDM=WIDNOD(KNODE-1)
      ENODP=ENODE(KNODE)
      WIDP=WIDNOD(KNODE)
C-----DEFINE SUB-INTERVALS.
      CALL SUBINT
C
C     SPECIAL TREATMENT FOR FIRST ENERGY POINT. IF FIRST RESONANCE
C     REGION STARTS ABOVE 1.0E-5 EV START TABLE AT LOWER LIMIT OF
C     RESONANCE REGION WITH ONE POINT WITH ZERO CROSS SECTION FOLLOWED
C     BY A POINT WITH THE SAME ENERGY AND THE CROSS SECTION CALCULATED
C     AT THE LOWER LIMIT OF THE RESONANCE REGION. IF FIRST RESONANCE
C     STARTS AT 1.0E-5 START TABLE WITH CROSS SECTION CALCULATED AT
C     LOWER ENERGY LIMIT OF RESONANCE REGION.
C
      IF(KPOINT.LE.0) GO TO 40
C-----CALCULATE CROSS SECTION AT FIRST POINT OF EACH ENERGY REGION.
      IF(KNODE-NODE1) 60,60,70
C-----INITIALIZE CROSS SECTION TABLE TO ONE POINT WITH ZERO CROSS
C-----SECTION AT THE BEGINNING OF THE TABLE UNLESS THE TABLE STARTS
C-----AT 1.0-5 EV OR LESS (IN WHICH CASE TABLE WILL START WITH NON-ZERO
C-----CROSS SECTIONS).
   40 IF(ERANGE(1).LE.1.001*EMIN) GO TO 60
      KPOINT=1
      KPTP1=2
      ETAB2(1)=ERANGE(1)
      DO 50 IR=1,NREACT
   50 SIG2(IR,1)=0.0
C-----INITIALIZE INDEX TO FIRST SUB-INTERVAL AND INDICATE THAT THE
C-----THE SUB-INTERVAL HAS NOT YET BEEN SUB-DIVIDED.
   60 ISUB=1
C-----CALCULATE CROSS SECTION AT NEXT ENERGY (EITHER FIRST OR SECOND
C-----ENERGY).
      ETAB2(KPTP1)=ESUB(1)
      CALL SIGMA(ETAB2(KPTP1),SIG2(1,KPTP1))
C-----SAVE STARTING POINT (NO CONVERGENCE TESTS UNTIL SECOND POINT IS
C-----GENERATED).
      GO TO 160
C
C     INTERNAL SUB-INTERVAL. SET UP LOOP OVER SUB-INTERVALS REMAINING
C     SUB-INTERVALS (NOTE, AT THIS POINT THE ENERGY INTERVAL UP TO AND
C     INCLUDING THE ENERGY OF THE FIRST SUB-INTERVAL (ISUB=1) HAS
C     ALREADY BEEN CALCULATED, EITHER BY CALCULATING THE FIRST POINT
C     OR AS THE LAST POINT OF THE PRECEDING ENERGY INTERVAL).
C
C-----INITIALIZE INDEX TO SECOND SUB-INTERVAL AND INDICATE THAT THE
C-----SUB-INTERVAL HAS NOT YET BEEN SUB-DIVIDED.
   70 ISUB=2
C-----CALCULATE CROSS SECTION AT END OF SUB-INTERVAL.
   80 ETAB2(KPTP1)=ESUB(ISUB)
      CALL SIGMA(ETAB2(KPTP1),SIG2(1,KPTP1))
C
C     ITERATION AND CONVERGENCE TESTS.
C
C-----DEFINE ENERGY AT MIDPOINT AND TEST FOR CONVERGENCE BASED ON SHORT
C-----ENERGY INTERVAL.
   90 EA=ETAB2(KPOINT)
      EB=ETAB2(KPTP1)
      EMID=HALF*(EA+EB)
      CALL CORE9(EMID,3)
      IF(EMID.LE.EA.OR.EMID.GE.EB) GO TO 160
      IF((EMID-EA).LE.EA*TINY) GO TO 160
C-----DEFINE CROSS SECTION AT MIDPOINT.
      CALL SIGMA(EMID,SIGMID)
C-----IF AN ENERGY DEPENDENT ERROR LAW IS USED DEFINE ERROR AT EMID.
  100 IF(MAXER2.GT.1) CALL ERROK2(EMID)
C-----DEFINE CONTRIBUTION OF EACH ENDPOINT TO MIDPOINT.
      DE=EB-EA
      WTA=(EB-EMID)/DE
      WTB=(EMID-EA)/DE
C-----TEST EACH REACTION FOR CONVERGENCE. TO BE ACCEPTABLE ALL REACTIONS
C-----MUST CONVERGE (I.E., IF EVEN ONE REACTION FAIL ONE CONVEREGENCE
C-----TEST CONTINUE SUB-DIVIDING AND INTERATING TO CONVERGENCE).
      DO 130 IR=1,NREACT
C-----DEFINE EXACT END POINT CROSS SECTIONS.
      SIGA=SIG2(IR,KPOINT)
      SIGB=SIG2(IR,KPTP1)
C-----CONVERGENCE IF CROSS SECTION AT BOTH ENDS OF INTERVAL ARE LESS
C-----THAN MINIMUM CROSS SECTION OF INTEREST.
      IF(DABS(SIGA).LE.SIGMIN.AND.DABS(SIGB).LE.SIGMIN) GO TO 130
C-----TO PREVENT INFINITE ITERATION TOWARD ZERO ONLY APPLY CHANGE TEST
C-----IF CROSS SECTION AT BOTH ENDS OF INTERVAL ARE POSITIVE.
      IF(SIGA.LE.0.0.OR.SIGB.LE.0.0) GO TO 110
C-----TEST FOR CROSS SECTION CHANGE.
      IF(SIGA.GT.1.4*SIGB.OR.SIGB.GT.1.4*SIGA) GO TO 140
C-----DEFINE EXACT AND LINEARLY INTERPOLATED MID-POINT CROSS SECTIONS.
  110 SIGM=SIGMID(IR)
      SIGLIN=WTA*SIGA+WTB*SIGB
C-----TEST FOR ITERATION TOWARD MINIMUM (MINIMUM IS INDICATED IF
C-----THE EXACT CROSS SECTION AT THE MID-POINT IS LESS THAN THE
C-----EXACT CROSS SECTION AT BOTH ENDS OF THE INTERVAL).
      IF(SIGM.GE.SIGA.OR.SIGM.GE.SIGB) GO TO 120
C-----ITERATING TOWARD MINIMUM. USE MORE STRINGENT CONVERGENCE TEST.
      IF(DABS(SIGM-SIGLIN)-DABS(ERXC20*SIGM)) 130,130,140
C-----NORMAL CONVERGENCE TEST.
  120 IF(DABS(SIGM-SIGLIN)-DABS(ERRXC2*SIGM)) 130,130,140
C-----END OF CONVERGENCE TEST LOOP. REACTION HAS PASSED ALL TESTS AND
C-----FOR THIS REACTION MID-POINT IS NOT REQUIRED.
  130 CONTINUE
C-----CONVERGENCE FOR ALL REACTIONS. KEEP END POINT.
      GO TO 160
C
C     NO CONVERGENCE. SAVE VALUE FROM END OF INTERVAL AND SHORTEN
C     INTERVAL.
C
  140 IF(NSAVE.LT.200) NSAVE=NSAVE+1
      ESAVE(NSAVE)=ETAB2(KPTP1)
      ETAB2(KPTP1)=EMID
      DO 150 IR=1,NREACT
      SIGSAV(IR,NSAVE)=SIG2(IR,KPTP1)
  150 SIG2(IR,KPTP1)=SIGMID(IR)
      GO TO 90
C
C     CONVERGENCE.
C
C-----SAVE END OF INTERVAL BY INCREASING KPOINT BY ONE. IF IN CORE PAGE
C-----IS FULL UNLOAD IT TO SCRATCH, MOVE LAST POINT TO TABLE BEGINNING
C-----AND RE-INITIALIZE IN CORE POINT INDICES.
  160 IF(KPOINT.LT.NPAGE) GO TO 190
      IF(NPOINT.EQ.0.AND.IUSE2.GT.0) REWIND ISCR2
      WRITE(ISCR2) ETAB2X,SIG2X
      NPOINT=NPOINT+NPAGE
C-----IF REQUESTED PRINT MESSAGE EVERYTIME A PAGE IS OUTPUT TO SCRATCH.
      IF(MONITR.EQ.0) GO TO 170
      CALL OUT9(ETAB2(    1),FIELD(1,1),3)
      CALL OUT9(ETAB2(NPAGE),FIELD(1,2),3)
      WRITE(OUTP,400) NPOINT,((FIELD(M,I),M=1,11),I=1,2)
      WRITE(*   ,400) NPOINT,((FIELD(M,I),M=1,11),I=1,2)
  170 ETAB2(1)=ETAB2(NPAGP1)
      DO 180 IR=1,NREACT
  180 SIG2(IR,1)=SIG2(IR,NPAGP1)
      KPTP1=1
  190 KPOINT=KPTP1
      KPTP1=KPOINT+1
C
C     IF THERE ARE NO REMAINING SAVED POINTS THE CURRENT SUB-INTERVAL
C     IS NOW FINISHED. IF THERE ARE REMAINING SAVED POINTS USE THEM
C     TO DEFINE NEXT ITERATION INTERVAL.
C
      IF(NSAVE-1) 240,200,220
C-----ONLY 1 POINT SAVED...USE IT TO DEFINE ENDPOINT AND BRANCH BACK
C-----TO DEFINE MIDPOINT...THEN ITERATE.
  200 ETAB2(KPTP1)=ESAVE(1)
      DO 210 IR=1,NREACT
  210 SIG2(IR,KPTP1)=SIGSAV(IR,1)
      NSAVE=0
      GO TO 90
C-----MORE THAN 1 POINT SAVED...USE LAST 2 SAVED POINTS TO DEFINE
C-----MIDPOINT AND ENDPOINT...THEN ITERATE.
  220 NSAVM1=NSAVE-1
      ETAB2(KPTP1)=ESAVE(NSAVM1)
      EMID=ESAVE(NSAVE)
      DO 230 IR=1,NREACT
      SIG2(IR,KPTP1)=SIGSAV(IR,NSAVM1)
  230 SIGMID(IR)=SIGSAV(IR,NSAVE)
      NSAVE=NSAVE-2
C-----CONVERGENCE IF ENERGY INTERVAL IS TOO SMALL.
      EA=ETAB2(KPOINT)
      EB=ETAB2(KPTP1)
      IF((EMID-EA).LE.EA*TINY) GO TO 160
C-----USE 3 CURRENTLY KNOWN POINTS TO TEST FOR CONVERGENCE.
      GO TO 100
C
C     END OF SUB-INTERVAL LOOP. CONTINUE UNTIL ALL SUB-INTERVALS HAVE
C     BEEN USED.
C
  240 ISUB=ISUB+1
      IF(ISUB.LE.NSUB) GO TO 80
C
C     END OF NODE LOOP.
C
  250 CONTINUE
C
C     END OF 1 RESONANCE REGION. IS THIS THE END OF THE ENTIRE RESONANCE
C     REGION (E.G., RESOLVED AND UNRESOLVED).
C
      IF(IRANGE.LT.NRANGE) GO TO 300
C
C     END OF ENTIRE RESONANCE REGION. ADD LAST POINT WITH ZERO CROSS
C     SECTION AND LEAVE DATA IN CORE OR MOVE TO SCRATCH.
C
C-----IF IN CORE PAGE IS FULL UNLOAD IT TO SCRATCH.
      IF(KPOINT.LT.NPAGE) GO TO 270
      IF(NPOINT.LE.0.AND.IUSE2.GT.0) REWIND ISCR2
      WRITE(ISCR2) ETAB2X,SIG2X
      NPOINT=NPOINT+NPAGE
C-----IF REQUESTED PRINT MESSAGE EVERYTIME A PAGE IS OUTPUT TO SCRATCH.
      IF(MONITR.EQ.0) GO TO 260
      CALL OUT9(ETAB2(    1),FIELD(1,1),3)
      CALL OUT9(ETAB2(NPAGE),FIELD(1,2),3)
      WRITE(OUTP,400) NPOINT,((FIELD(M,I),M=1,11),I=1,2)
      WRITE(*   ,400) NPOINT,((FIELD(M,I),M=1,11),I=1,2)
  260 KPTP1=1
  270 KPOINT=KPTP1
      KPTP1=KPOINT+1
      ETAB2(KPOINT)=ERANGE(IRANGE)
      DO 280 IR=1,NREACT
  280 SIG2(IR,KPOINT)=0.0
C-----DEFINE TOTAL POINT COUNT.
      NPOINT=NPOINT+KPOINT
C-----ALL POINTS HAVE BEEN CALCULATED. LEAVE IN CORE OR SAVE ON SCRATCH.
      IF(NPOINT.LE.NPAGE) GO TO 290
      WRITE(ISCR2) ETAB2X,SIG2X
      END FILE ISCR2
      REWIND ISCR2
      IUSE2=1
C-----IF REQUESTED PRINT MESSAGE EVERYTIME A PAGE IS OUTPUT TO SCRATCH.
      IF(MONITR.EQ.0) GO TO 290
      CALL OUT9(ETAB2(     1),FIELD(1,1),3)
      CALL OUT9(ETAB2(KPOINT),FIELD(1,2),3)
      WRITE(OUTP,400) NPOINT,((FIELD(M,I),M=1,11),I=1,2)
      WRITE(*   ,400) NPOINT,((FIELD(M,I),M=1,11),I=1,2)
C-----SET IN CORE POINT COUNT TO ZERO (NCOUNT IS NOW THE TOTAL POINT
C-----COUNT).
  290 KPOINT=0
C-----PRINT SUMMARY OF ENERGY RANGE.
  300 NKPONT=NPOINT+KPOINT
      NBASE=NKPONT-NBASE
CCHO
 7000 CONTINUE
      OPEN(8,FILE='ptanal.res',STATUS='UNKNOWN')
      DO 8001 K=1,120000
        READ(8,'(E14.6,E14.6)',END=8101) ENERES(K),TWIDTH(K)
 8001 CONTINUE
 8101 CLOSE(8)
      NNNRES=K-1
C     ADD PREDEFINED ENERGY VALUES INTO ENERGY GRID
      DO 9101 K=1,NEGRID
       IF (EGRID(K).GT.ERANGE(2)) GO TO 9102
       ETAB2(K) = EGRID(K)
 9101 CONTINUE
 9102 KPOINT = K - 1
      IF (KPOINT.EQ.0) THEN
       PRINT *, 'STOP **ERROR** UPPER ENERGY LIMIT TOO SMALL'
       STOP
      ENDIF
C     ADD THE UPPER ENERGY VALUE INTO ENERGY GRID
      IF (ETAB2(KPOINT).NE.ERANGE(2)) THEN
        ETAB2(KPOINT+1) = ERANGE(2)
        KPOINT=KPOINT+1
      ENDIF
C     ADD RESONACE ENERGY POINTS INTO ENERGY GRID
      DO 9201 N=1,NNNRES
       IF (ENERES(N).GE.ERANGE(2)) THEN
         IF (ENERES(N).EQ.ERANGE(2)) THEN
          ETAB2(KPOINT+1)=ENERES(N)-TWIDTH(N)
          KPOINT=KPOINT+1
         ENDIF
         GO TO 9301
       ENDIF
       IF (ENERES(N).LT.0) GO TO 9201
       DO 9202 K=1,KPOINT
        IF (ENERES(N).EQ.ETAB2(K)) GO TO 9201
 9202  CONTINUE
C     ADD RESONANCE PEAK ENERGY AND TWO ADDITIONAL POINTS
      ETAB2(KPOINT+1)=ENERES(N)
      KPOINT=KPOINT+1
      ETAB2(KPOINT+1)=ENERES(N)-TWIDTH(N)
      KPOINT=KPOINT+1
      ETAB2(KPOINT+1)=ENERES(N)+TWIDTH(N)
      KPOINT=KPOINT+1
 9201 CONTINUE
C     SORT FINAL ENERGY GRID
 9301 CALL SORTD(ETAB2,KPOINT)
C     IF THE DUPLICATE ENERGY POINTS EXIST, DELETE ONE OF THEM
C     GO TO 9501
      K=1
 9401 IF (K.EQ.KPOINT) GO TO 9501
      IF (ETAB2(K).EQ.ETAB2(K+1)) THEN
        DO 9402 N=K,KPOINT-1
         ETAB2(N)=ETAB2(N+1)
 9402   CONTINUE
        KPOINT=KPOINT-1
      ELSE
        K=K+1
      ENDIF
      GO TO 9401
 9501 CONTINUE
      DO 9801 K=1,KPOINT
C      SIGMA SHOULD BE CALLED FOR EACH ENERGY
       CALL SIGMA(ETAB2(K),SIG2(1,K))
 9801 CONTINUE
      NPOINT=KPOINT
      NBASE=KPOINT
      NKPONT=KPOINT
CCHO
      CALL OUT9(ERANGE(IRM1  ),FIELD(1,1),3)
      CALL OUT9(ERANGE(IRANGE),FIELD(1,2),3)
      IF(NREG.EQ.1) WRITE(OUTP,330)
     1 ((FIELD(M,I),M=1,11),I=1,2),NBASE
      IF(NREG.EQ.2) WRITE(OUTP,340)
     1 ((FIELD(M,I),M=1,11),I=1,2),NBASE
      IF(NREG.EQ.3) WRITE(OUTP,350)
     1 ((FIELD(M,I),M=1,11),I=1,2),NBASE
      IF(NREG.EQ.4) WRITE(OUTP,360)
     1 ((FIELD(M,I),M=1,11),I=1,2),NBASE
      IF(NREG.EQ.1) WRITE(*   ,330)
     1 ((FIELD(M,I),M=1,11),I=1,2),NBASE
      IF(NREG.EQ.2) WRITE(*   ,340)
     1 ((FIELD(M,I),M=1,11),I=1,2),NBASE
      IF(NREG.EQ.3) WRITE(*   ,350)
     1 ((FIELD(M,I),M=1,11),I=1,2),NBASE
      IF(NREG.EQ.4) WRITE(*   ,360)
     1 ((FIELD(M,I),M=1,11),I=1,2),NBASE
      NBASE=NKPONT
C-----END OF ENERGY RANGE LOOP.
  310 CONTINUE
C
C     ALL CROSS SECTION POINTS HAVE NOW BEEN CALCULATED. PRINT SUMMARY
C     OF ENTIRE RESONANCE REGION.
C
C-----OUTPUT SUMMARY OF TOTAL NUMBER OF POINTS GENERATED.
      WRITE(OUTP,370) NPOINT
      WRITE(*   ,370) NPOINT
  320 RETURN
  330 FORMAT(2X,22A1,I11,' Not in Any Resonance Region'/
     1 35X,' (WARNING - Not Expected - Check Data)')
  340 FORMAT(2X,22A1,I11,' Resolved')
  350 FORMAT(2X,22A1,I11,' Unresolved')
  360 FORMAT(2X,22A1,I11,' Overlapping Resolved/Unresolved'/
     1 35X,' (WARNING - This is Illegal in ENDF/B)')
  370 FORMAT(1X,78('=')/' Entire Resonance Region',I11,' Points'/
     1 1X,78('='))
  380 FORMAT(1X,78('=')/' Reconstructing Cross Sections from',
     1 ' Resonance Parameters'/1X,78('=')/
     2 '        E-Low     E-High   Points  ',
     3 ' Type of Resonance Region'/
     3 '        (eV)       (eV)   Generated',
     4 ' Messages'/1X,78('='))
  390 FORMAT(1X,78('=')/' No Resonance Contribution to Add to',
     1 ' Background Cross Section. MAT Copied.')
  400 FORMAT(25X,I10,11A1,' to',11A1,' eV Finished')
      END
      SUBROUTINE ERROK2(E)
C=======================================================================
C
C     DEFINE ALLOWABLE ERROR FOR RECONSTRUCTION OF ENERGY DEPENDENT
C     CROSS SECTIONS FROM FILE 2 RESONANCE PARAMETERS. THE ERROR LAW
C     CAN BE ENERGY INDEPENDENT (CONSTANT) OR ENERGY DEPENDENT
C     (GIVEN BY A LINEARLY INTERPOLABLE TABLE IN ENERGY VS. ERROR).
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/OKERR2/ERRXC2,ERXC20,ENER2(21),ER2(21),MAXER2
C-----INITIALIZE INDEX TO INTERPOLATION TABLE.
      DATA MINER2/2/
C-----INTERPOLATE TO FIND FIRST TABULATED ENERGY ABOVE E.
      IF(E-ENER2(1)) 100,100,10
   10 DO 20 NOWER2=MINER2,MAXER2
      IF(E-ENER2(NOWER2)) 30,90,20
   20 CONTINUE
C-----EXTEND ERROR AS CONSTANT ABOVE TABULATED RANGE.
      GO TO 110
   30 NOWER1=NOWER2-1
      IF(E-ENER2(NOWER1)) 40,80,70
   40 DO 50 NOWER2=2,MAXER2
      IF(E-ENER2(NOWER2)) 60,90,50
   50 CONTINUE
      GO TO 110
C-----DEFINE INDEX AND INTERPOLATE ERROR.
   60 NOWER1=NOWER2-1
   70 ERRXC2=((ENER2(NOWER2)-E)*ER2(NOWER1)+
     1 (E-ENER2(NOWER1))*ER2(NOWER2))/(ENER2(NOWER2)-ENER2(NOWER1))
      ERXC20=0.10*ERRXC2
      MINER2=NOWER2
      RETURN
C-----EXACT MATCH TO TABULATED ENERGY. DEFINE INDEX AND ERROR.
   80 ERRXC2=ER2(NOWER1)
      ERXC20=0.10*ERRXC2
      MINER2=NOWER1
      IF(MINER2.LE.1) MINER2=2
      RETURN
C-----EXACT MATCH TO TABULATED ENERGY. DEFINE INDEX AND ERROR.
   90 ERRXC2=ER2(NOWER2)
      ERXC20=0.10*ERRXC2
      MINER2=NOWER2
      RETURN
C-----EXTEND ERROR AS CONSTANT BELOW TABULATED RANGE.
  100 ERRXC2=ER2(1)
      ERXC20=0.10*ERRXC2
      MINER2=2
      RETURN
C-----EXTEND ERROR AS CONSTANT ABOVE TABULATED RANGE.
  110 ERRXC2=ER2(MAXER2)
      ERXC20=0.10*ERRXC2
      MINER2=MAXER2
      RETURN
      END
      SUBROUTINE READ2
C=======================================================================
C
C     READ ALL FILE2 DATA. DEFINE ENERGY RANGES AND ENERGY NODES WITHIN
C     EACH ENERGY RANGE.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 ZABCDI,FIELD
      CHARACTER*4 FISLST,REGLST,RTYPE,UTYPE,HOLNRO,HOLNAP
      COMMON/WHATZA/IZANOW,MATNOW,TEMP3,IVERSE,INT45
      COMMON/HEADER/C1H,C2H,L1H,L2H,N1H,N2H,MATH,MFH,MTH,NOSEQ
      COMMON/LEADER/C1,C2,L1,L2,N1,N2,MAT,MF,MT
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/TABRHO/ERHOTB(500),RHOTAB(500),APTAB(500),NRHO(200),
     1 NBTRHO(200),INTRHO(200),INXRHO(4,200),NUMRHO
      COMMON/NAPNRO/NRO,NAPS
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/ETABS/NODES
      COMMON/RANGER/LOW,LHI
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/INDATD/ELX,EHX
      COMMON/MINNIE/EMIN,EMAX,DEMIN
      COMMON/EDGES/ERANGE(50),NODLOW(50),NODHI(50),NRANGE,IRANGE
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/FISSY/LFWX,LFI,MT451
      COMMON/LRUNOW/LRUIN
      COMMON/PARTN/EPART1,EPART2,NPART
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/FIELDC/FIELD(11,12)
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION ZABCDI(10),FISLST(6,3),REGLST(6,4),RTYPE(7,7),
     1 UTYPE(7,4),HOLNRO(6,3),HOLNAP(6,3)
      DATA FISLST/
     1 ' (No',' Fis','sion',' Wid','ths)','    ',
     2 ' (Fi','ssio','n Wi','dths',' Giv','en) ',
     3 ' (ER','ROR-','MUST',' be ','0 or','1)  ' /
      DATA REGLST/
     1 ' (No',' Par','amet','ers)','    ','    ',
     2 ' (Re','solv','ed R','egio','n)  ','    ',
     3 ' (Un','reso','lved',' Reg','ion)','    ',
     4 ' (ER','ROR-','See ','Belo','w)  ','    '/
      DATA RTYPE/
     1 ' (Si','ngle',' Lev','el B','reit','-Wig','ner)',
     2 ' (Mu','lti-','Leve','l Br','eit-','Wign','er) ',
     3 ' (Re','ich-','Moor','e)  ','    ','    ','    ',
     4 ' (Ad','ler-','Adle','r)  ','    ','    ','    ',
     5 ' (Ge','nera','l R-','Matr','ix) ','    ','    ',
     6 ' (Hy','brid',' R-F','unct','ion)','    ','    ',
     7 ' (ER','ROR-','see ','Belo','w)  ','    ','    '/
      DATA UTYPE/
     1 ' (Al','l En','ergy',' Ind','epen','dent',')   ',
     2 ' (Fi','ssio','n En','ergy',' Dep','ende','nt) ',
     3 ' (Al','l En','ergy',' Dep','ende','nt) ','    ',
     4 ' (ER','ROR-','see ','Belo','w)  ','    ','    '/
      DATA HOLNRO/
     1 '(Ene','rgy ','Inde','pend','ent)','    ',
     2 '(Ene','rgy ','Depe','nden','t)  ','    ',
     4 '(ERR','OR-M','UST ','be 0',' or ','1)  '/
      DATA HOLNAP/
     1 '(Cal','cula','te) ','    ','    ','    ',
     2 '(= S','catt','erin','g Ra','dius',')   ',
     3 '(ERR','OR-M','UST ','be 0',' to ','2)  '/
C-----DEFINE THERMAL ENERGY FOR INCLUSION AS A NODE IF THE RESONANCE
C-----REGION SPANS THERMAL ENERGY.
      DATA ETHERM/2.53D-02/
C-----DEFINE MINIMUM ENERGY OF RESONANCE REGION (ALLOWING FOR ROUNDOFF).
      EMINL=0.999*EMIN
C-----FILE 2 FOUND. DEFINE ZA, AWR AND NIS (NUMBER OF ISOTOPES).
      ZA=C1H
      AWR=C2H
      NIS=N1H
C-----INITIALIZE FISSILE FLAG OFF (INDICATES ALL FISSION WIDTHS READ SO
C-----FAR ARE ZERO - IF THIS FLAG IS NOT RESET WHILE READING PARAMETERS
C-----THE MAT WILL BE CONSIDERED TO BE NON-FISSILE AND FISSION CROSS
C-----SECTIONS WILL NOT BE OUTPUT).
      LFWX=0
C-----PRINT ZA, ATOMIC WEIGHT AND NUMBER OF ISOTOPES.
      IZA=ZA
      CALL ZAHOL(IZA,ZABCDI)
      IF(IMEDIT.EQ.0) GO TO 10
      CALL OUT9(AWR,FIELD(1,1),0)
      WRITE(OUTP,410) ZABCDI,(FIELD(M,1),M=1,11),NIS
      WRITE(*   ,410) ZABCDI,(FIELD(M,1),M=1,11),NIS
C
C     INITIALIZE RESONANCE PARAMETER TABLE INDICES.
C
C-----INITIALIZE SECTION COUNT (A SECTION IS DATA FOR ONE ISOTOPE,
C-----ENERGY RANGE AND L VALUE) AND THE NUMBER OF ENERGY RANGES WITH
C-----ENERGY DEPENDENT SCATTERING RADIUS. INITIALIZE ALL SECTION
C-----INDICES TO INDICATE NO ENERGY DEPENDENT SCATTERING RADIUS.
   10 NSECT=0
      NUMRHO=0
      DO 20 I=1,200
   20 NRHO(I)=0
C-----INITIALIZE COUNT OF ENERGY NODES.
      NODES=0
C-----INITIALIZE INDEX TO NEXT RESONANCE TO READ.
      LHI=0
C
C     READ DATA FOR EACH ISOTOPE.
C
C-----INITIALIZE SUM OF FRACTIONAL ABUNDANCES.
      ABNSUM=0.0
      DO 320 IS=1,NIS
C-----SAVE CURRENT LFWX FLAG AND SET LFWX=0 FOR EACH ISOTOPE.
      LFWK=LFWX
      LFWX=0
C-----DEFINE ISOTOPE ZA, ABUNDANCE, FLAG DEFINING WHETHER OR NOT FISSION
C-----WIDTHS ARE GIVEN AND NUMBER OF ENERGY RANGES.
      CALL CARDIO(ZAI,ABN,L1,LFW,NER,N2)
C-----INCREMENT SUM OF FRACTONAL ABUNDANCE.
      ABNSUM=ABNSUM+ABN
      IF(IMEDIT.EQ.0) GO TO 30
      IZAI=ZAI
      CALL ZAHOL(IZAI,ZABCDI)
      LFWO=LFW+1
      IF(LFW.NE.0.AND.LFW.NE.1) LFWO=3
      CALL OUT9(ABN,FIELD(1,1),0)
      WRITE(OUTP,460) IS,ZABCDI,(FIELD(M,1),M=1,11),LFW,
     1 (FISLST(I,LFWO),I=1,6),NER
      WRITE(*   ,460) IS,ZABCDI,(FIELD(M,1),M=1,11),LFW,
     1 (FISLST(I,LFWO),I=1,6),NER
C
C     PRINT WARNING IF SUM OF FRACTIONAL ABUNDANCES IS NOT CLOSE TO
C     1.0
C
   30 IF(IS.NE.NIS) GO TO 40
      IF(DABS(ABNSUM-1.0D+00).LE.0.001) GO TO 40
      WRITE(OUTP,420)
      IF(NIS.EQ.1) WRITE(OUTP,430) ABNSUM
      IF(NIS.GT.1) WRITE(OUTP,440) ABNSUM
      WRITE(OUTP,450)
      WRITE(*   ,420)
      IF(NIS.EQ.1) WRITE(*   ,430) ABNSUM
      IF(NIS.GT.1) WRITE(*   ,440) ABNSUM
      WRITE(*   ,450)
C
C     READ DATA FOR EACH ENERGY RANGE.
C
   40 DO 300 IE=1,NER
C-----DEFINE ENERGY RANGE, TYPE OF RESONANCE RANGE (NO PARAMETERS/
C-----RESOLVED/UNRESOLVED) AND TYPE OF PARAMETER.
      CALL CARDI(ELX,EHX,LRUIN,LRF,N1,N2)
C
C     IF ENDS OF RESONANCE REGION ARE VERY CLOSE TO THE ENDS OF ANY
C     OTHER RESONANCE REGION INSURE THEY ARE EXACTLY THE SAME (THIS
C     PROCEDURE WILL AVOID MICRO OVERLAPS OR HOLES BETWEEN RESONANCE
C     REGIONS).
C
      IF(NSECT.LE.0) GO TO 60
      DO 50 MSECT=1,NSECT
C-----FIRST CHECK FOR SAME ENERGY REGION (COMPARE LOWER TO LOWER AND
C-----UPPER TO UPPER ENERGY LIMITS).
      IF(DABS(ELX-EL(MSECT)).LE.DEMIN*EL(MSECT)) ELX=EL(MSECT)
      IF(DABS(EHX-EH(MSECT)).LE.DEMIN*EH(MSECT)) EHX=EH(MSECT)
C-----NEXT CHECK FOR ADJOINING ENERGY REGIONS (COMPARE LOWER TO UPPER
C-----AND UPPER TO LOWER ENERGY LIMITS).
      IF(DABS(ELX-EH(MSECT)).LE.DEMIN*EH(MSECT)) ELX=EH(MSECT)
      IF(DABS(EHX-EL(MSECT)).LE.DEMIN*EL(MSECT)) EHX=EL(MSECT)
   50 CONTINUE
C-----SAVE FLAG TO DETERMINE WHETHER OR NOT SCATTERING RADIUS IS
C-----ENERGY DEPENDENT (ONLY LEGAL FOR BREIT-WIGNER PARAMETERS).
   60 NRO=N1
C-----SAVE FLAG TO DETERMINE HOW TO USE THE CHANNEL AND SCATTERING RADII
      NAPS=N2
C
C     DEFINE LRU FOR INTERNAL USE
C     LRUIN=0 -     NO RESONANCE PARAMETERS
C          =1 -     RESOLVED PARAMETERS.
C          =2 -     UNRESOLVED PARAMETERS.
C          =3 - 5 - SAME AS 0 - 2, ONLY THE RESONANCE CONTRIBUTION HAS
C                   ALREADY BEEN ADDED TO THE FILE 3 CROSS SECTIONS
C                   (USUALLY INDICATING THAT THIS MAT HAS ALREADY BEEN
C                   PROCESSED BY THIS OR A SIMILAR PROGRAM).
C     IF LRUIN IS 3 TO 5 THE PARAMETERS WILL BE READ BUT IGNORED IN ALL
C     SUBSEQUENT RESONANCE REGION CALCULATIONS.
C     SAVE LRU AS INPUT (LRUIN), DEFINE LRU FOR OUTPUT INDICATING THAT
C     THE RESONANCE CONTRIBUTION HAS ALREADY BEEN ADDED TO CROSS SECTION
C     (LRUOUT) AND DEFINE LRU FOR READING (LRU= 0, 1 OR 2).
C
C     PRINT ENERGY LIMITS AND TYPE OF RESONANCE REGION (UNRESOLVED OR
C     UNRESOLVED).
C
      LRUOUT=LRUIN
C-----DO NOT CHANGE PARAMETER TYPE FOR ENDF/B-VI DATA (FILE 1 IS USED
C-----TO DEFINE THAT MATERIAL HAS BEEN PROCESSED).
      IF(IVERSE.EQ.6) GO TO 70
C-----DO NOT CHANGE PARAMETER TYPE IF ONLY PROCESSING A PORTION OF THE
C-----RESONANCE REGION.
      IF(NPART.EQ.2) GO TO 70
      IF(LRUOUT.GE.0.AND.LRUOUT.LE.2) LRUOUT=LRUOUT+3
   70 LRU=LRUIN
      IF(LRU.GT.2) LRU=LRU-3
      IF(IMEDIT.EQ.0) GO TO 100
C-----DEFINE AND PRINT INTERPRETATION OF TYPE OF RESONANCE REGION.
      LRULST=LRUIN+1
      IF(LRUIN.GE.3.AND.LRUIN.LE.5) LRULST=LRULST-3
      IF(LRUIN.LT.0.OR.LRUIN.GT.5) LRUIN=4
      CALL OUT9(ELX,FIELD(1,1),3)
      CALL OUT9(EHX,FIELD(1,2),3)
      WRITE(OUTP,470) ((FIELD(M,I),M=1,11),I=1,2),LRUIN,
     1 (REGLST(I,LRULST),I=1,6)
      WRITE(*   ,470) ((FIELD(M,I),M=1,11),I=1,2),LRUIN,
     1 (REGLST(I,LRULST),I=1,6)
C
C     DEFINE AND PRINT INTERPRETATION OF TYPE OF RESOLVED PARAMETERS.
C
      IF(LRU.NE.1) GO TO 80
      LRFLST=LRF
      IF(LRF.LT.1.OR.LRF.GT.6) LRFLST=7
      WRITE(OUTP,480) LRF,(RTYPE(I,LRFLST),I=1,7)
      WRITE(*   ,480) LRF,(RTYPE(I,LRFLST),I=1,7)
      GO TO 90
C
C     DEFINE AND PRINT INTERPRETATION OF TYPE OF UNRESOLVED PARAMETERS.
C
   80 IF(LRU.NE.2) GO TO 90
      LRFLST=4
      IF(LRF.EQ.1.AND.LFW.EQ.0) LRFLST=1
      IF(LRF.EQ.1.AND.LFW.EQ.1) LRFLST=2
      IF(LRF.EQ.2) LRFLST=3
      WRITE(OUTP,490) LRF,(UTYPE(I,LRFLST),I=1,7)
      WRITE(*   ,490) LRF,(UTYPE(I,LRFLST),I=1,7)
C
C     PRINT INTERPRETATION OF NRO (ENERGY INDEPENDENT OR DEPENDENT
C     SCATTERING RADIUS) AND NAPS (CALCULATE CHANNEL RADIUS OR DEFINE
C     IT AS EQUAL TO THE SCATTERING RADIUS).
C
C-----DEFINE WHETHER OR SCATTERING RADIUS IS ENERGY DEPENDENT.
   90 KNRO=NRO+1
      IF(NRO.LT.0.OR.NRO.GT.1) KNRO=3
      WRITE(OUTP,500) NRO,(HOLNRO(I,KNRO),I=1,6)
      WRITE(*   ,500) NRO,(HOLNRO(I,KNRO),I=1,6)
C-----DEFINE WHETHER CHANNEL RADIUS WILL BE CALCULATED OR SET EQUAL TO
C-----THE SCATTERING RADIUS.
      KNAPS=NAPS+1
      IF(KNAPS.EQ.3) KNAPS=2
      IF(NAPS.LT.0.OR.NAPS.GT.2) KNAPS=3
      WRITE(OUTP,510) NAPS,(HOLNAP(I,KNAPS),I=1,6)
      WRITE(*   ,510) NAPS,(HOLNAP(I,KNAPS),I=1,6)
C-----IF NECESSARY READ ENERGY DEPENDENT SCATTERING RADIUS.
      IF(NRO.EQ.1) CALL RDAP
C
C     PRINT WARNING IF RESONANCE CONTRIBUTION HAS ALREADY BEEN ADDED TO
C     BACKGROUND CROSS SECTIONS.
C
  100 IF(LRUIN.GE.3.AND.LRUIN.LE.5) WRITE(OUTP,520) LRUIN
      IF(LRUIN.GE.3.AND.LRUIN.LE.5) WRITE(*   ,520) LRUIN
C
C     ERROR IF RESONANCE REGION BOUNDARIES ARE NOT IN ASCENDING ENERGY
C     ORDER OR NOT IN EXPECTED ENERGY RANGE.
C
C-----IF RESONANCE REGION BOUNDARIES ARE NOT IN ASCENDING ENERGY ORDER
C-----PRINT MESSAGE AND TERMINATE.
      IF(ELX.GE.EHX) GO TO 110
C-----IF RESONANCE REGION BOUNDARIES ARE NOT IN EXPECTED ENERGY RANGE
C-----PRINT MESSAGE AND TRUNCATE RANGE TO EXPECTED RANGE.
      IF(ELX.GE.EMINL.AND.ELX.LE.EMAX.AND.EHX.GE.EMINL.AND.EHX.LE.EMAX)
     1 GO TO 120
      IF(ELX.LT.EMIN) ELX=EMIN
      IF(ELX.GT.EMAX) ELX=EMAX
      IF(EHX.LT.EMIN) EHX=EMIN
      IF(EHX.GT.EMAX) EHX=EMAX
      CALL OUT9(EMIN,FIELD(1,1),3)
      CALL OUT9(EMAX,FIELD(1,2),3)
      WRITE(OUTP,630) ((FIELD(M,I),M=1,11),I=1,2)
      WRITE(*   ,630) ((FIELD(M,I),M=1,11),I=1,2)
      CALL OUT9(ELX,FIELD(1,1),3)
      CALL OUT9(EHX,FIELD(1,2),3)
      WRITE(OUTP,640) ((FIELD(M,I),M=1,11),I=1,2)
      WRITE(*   ,640) ((FIELD(M,I),M=1,11),I=1,2)
      IF(ELX.LT.EHX) GO TO 120
  110 WRITE(OUTP,650)
      WRITE(*   ,650)
      CALL ENDIT
C
C     ERROR STOP IF LRU, LRF OR LRF, LFW COMBINATION IS ILLEGAL.
C     UNLESS THESE PARAMETERS ARE CORRECT THE PROGRAM CANNOT DETERMINE
C     THE FORMAT OF THE ENDF/B DATA.
C
  120 CALL CARDO(ELX,EHX,LRUOUT,LRF,N1,N2)
C-----TERMINATE IF ILLEGAL LRU.
      IF(LRUIN.GE.0.AND.LRUIN.LE.5) GO TO 130
      WRITE(OUTP,540) LRUIN
      WRITE(*   ,540) LRUIN
      CALL ENDIT
C-----COPY SECTION WITH NO PARAMETERS.
  130 IF(LRU.EQ.0) GO TO 170
C-----TERMINATE IF ILLEGAL RESOLVED REGION LRF.
      IF(LRU.NE.1) GO TO 140
      IF(LRF.GE.1.AND.LRF.LE.6) GO TO 150
      WRITE(OUTP,550) LRF
      WRITE(*   ,550) LRF
      CALL ENDIT
C-----TERMINATE IF ILLEGAL UNRESOLVED LRF, LFW COMBINATION.
  140 IF(LRU.NE.2) GO TO 150
      LRFLST=4
      IF(LRF.EQ.1.AND.LFW.EQ.0) LRFLST=1
      IF(LRF.EQ.1.AND.LFW.EQ.1) LRFLST=2
      IF(LRF.EQ.2) LRFLST=3
      IF(LRFLST.NE.4) GO TO 150
      WRITE(OUTP,560) LRF,LFW
      WRITE(*   ,560) LRF,LFW
      CALL ENDIT
C
C     ERROR IF ILLEGAL VALUE FOR NRO (ENERGY INDEPENDENT OR DEPENDENT
C     SCATTERING RADIUS) AND/OR NAPS (CALCULATE CHANNEL RADIUS OR SET
C     IT EQUAL TO THE SCATTERING RADIUS).
C
  150 IF(KNRO.NE.3) GO TO 160
C-----ILLEGAL NRO VALUE.
      WRITE(OUTP,610) NRO
      WRITE(*   ,610) NRO
      NRO=0
  160 IF(KNAPS.NE.3) GO TO 180
C-----ILLEGAL NAPS VALUE.
      WRITE(OUTP,620) NAPS
      WRITE(*   ,620) NAPS
      NAPS=0
      GO TO 180
C
C     READ AND SAVE ALL PARAMETERS.
C
C-----COPY SECTION WITH NO PARAMETERS.
  170 CALL CARDIO(SPI,AP,L1,L2,N1,N2)
      CALL OUT9(SPI,FIELD(1,1),0)
      CALL OUT9(AP ,FIELD(1,2),0)
      WRITE(OUTP,530) ((FIELD(M,I),M=1,2),I=1,2)
      WRITE(*   ,530) ((FIELD(M,I),M=1,2),I=1,2)
      GO TO 300
C-----SAVE INITIAL RESONANCE TABLE PARAMETERS. IF RESONANCE CONTRIBUTION
C-----FOR THIS SECTION HAS ALREADY BEEN ADDED TO THE FILE 3 CROSS
C-----SECTION THEY WILL BE RESTORED AFTER THE DATA HAS BEEN READ
C-----(THIS WILL EFFECTIVELY IGNORE THE SECTION).
  180 NSECTI=NSECT
      NODESI=NODES
      LHII=LHI
C
C     IF ONLY PROCESSING A PORTION OF THE RESONANCE REGION DEFINE
C     RANGE TO PROCESS.
C
C-----SAVE RESONANCE REGION BOUNDARIES AS READ.
      ELXIN=ELX
      EHXIN=EHX
C-----TRUNCATE TO REQUESTED ENERGY RANGE.
      IF(NPART.LE.0) GO TO 190
      IF(ELX.LT.EPART1) ELX=EPART1
      IF(EHX.GT.EPART2) EHX=EPART2
C-----ARE PARAMETERS RESOLVED OR UNRESOLVED.
  190 IF(LRU.EQ.2) GO TO 250
C-----READ ALL RESOLVED RESONANCE PARAMETERS.
      GO TO (200,200,210,220,230,240),LRF
  200 CALL RDBW
      GO TO 260
C-----FOR ALL VERSIONS OF ENDF/B FORMAT ASSUME GENERAL REICH-MOORE
C-----TREATMENT WITH TWO FISSION CHANNELS (NOTE, ENDF/B-VI REICH-MOORE
C-----FORMAT HAS BEEN UPDATED TO BE EXACTLY THE SAME AS THE FORMAT IN
C-----EARLIER VERSIONS OF ENDF/B).
  210 CALL RDRM
      GO TO 260
  220 CALL RDAA
      GO TO 260
  230 CALL RDGRM
      GO TO 260
  240 CALL RDHRF
      GO TO 260
C-----READ UNRESOLVED PARAMETERS (ANY OF THE 3 REPRESENTATIONS).
  250 CALL RDUR
C
C     IF RESONANCE CONTRIBUTION OF CURRENT SECTION ALREADY BEEN ADDED
C     TO CROSS SECTIONS, SKIP THIS SECTION.
C
  260 IF(LRUIN.NE.1.AND.LRUIN.NE.2) GO TO 280
C
C     IF ONLY PROCESSING A PORTION OF RESONANCE REGION EITHER
C     1) IGNORE THE REGION IF IT IS COMPLETELY OUTSIDE THE RANGE
C     2) USE ALL OR THE PORTION WITHIN THE REQUESTED RANGE
C
      IF(NPART.LE.0) GO TO 290
      IF(ELXIN.LT.EPART2.OR.EHXIN.GT.EPART1) GO TO 270
C-----IGNORE RANGE = COMPLETELY OUTSIDE REQUESTED ENERGY RANGE.
      WRITE(OUTP,660)
      WRITE(*   ,660)
      GO TO 280
C-----USE ENTIRE RANGE OR TRUNCATE RANGE.
  270 IF(ELXIN.GE.EPART1.AND.EHXIN.LE.EPART2) GO TO 290
      WRITE(OUTP,670)
      WRITE(*   ,670)
      GO TO 290
C-----RESTORE INITIAL RESONANCE TABLE PARAMETERS (I.E., IGNOR CURRENT
C-----SECTION).
  280 NSECT=NSECTI
      NODES=NODESI
      LHI=LHII
      GO TO 300
C-----NO. USE LOWER AND UPPER ENERGY LIMIT AS NODES (USE ZERO WIDTH).
  290 CALL NOODLE(ELX,ZERO,EMIN,EMAX)
      CALL NOODLE(EHX,ZERO,EMIN,EMAX)
C-----END OF ENERGY RANGE LOOP.
  300 CONTINUE
C-----END OF ISOTOPE LOOP. TEST CONSISTENCY OF LFW AND LFI FLAGS AND
C-----FISSION DATA READ.
      IF(LFW.EQ.0.AND.LFWX.GT.0) WRITE(OUTP,570) LFW
      IF(LFW.GT.0.AND.LFWX.EQ.0) WRITE(OUTP,580) LFW
      IF(LFW.EQ.0.AND.LFWX.GT.0) WRITE(*   ,570) LFW
      IF(LFW.GT.0.AND.LFWX.EQ.0) WRITE(*   ,580) LFW
C-----ONLY CHECK LFI IF SECTION MF=1, MT-451 IS PRESENT (SINCE LFI IS
C-----DEFINED IN MF=1, MT=451).
      IF(MT451.LE.0) GO TO 310
      IF(LFI.EQ.0.AND.LFWX.GT.0) WRITE(OUTP,590) LFI
      IF(LFI.GT.0.AND.LFWX.EQ.0) WRITE(OUTP,600) LFI
      IF(LFI.EQ.0.AND.LFWX.GT.0) WRITE(*   ,590) LFI
      IF(LFI.GT.0.AND.LFWX.EQ.0) WRITE(*   ,600) LFI
C-----DEFINE CUMULATIVE LFWX FLAG.
  310 IF(LFWK.GT.0.OR.LFWX.GT.0) LFWX=1
  320 CONTINUE
C-----ALL PARAMETERS READ. COPY TO END OF FILE 2.
      CALL COPYF
C
C     ALL RESONANCE PARAMETERS HAVE BEEN READ. IF THERE ARE NO SECTIONS
C     WHOSE RESONANCE CONTRIBUTION MUST BE ADDED TO THE CROSS SECTIONS
C     THERE IS NOTHING TO DO. OTHERWISE, (1) DEFINE TABLE OF ENERGY
C     RANGES (USUALLY 1 OR 2, I.E. RESOLVED AND/OR UNRESOLVED), (2)
C     DEFINE WHICH NODES ARE WITHIN EACH ENERGY RANGE.
C
      IF(NSECT.LE.0) GO TO 400
C
C     DEFINE ENERGY RANGES.
C
C-----DEFINE TABLE OF ENDS OF ALL RESONANCE REGIONS.
      IRANGE=0
      DO 350 IS=1,NSECT
      ELTNOW=EL(IS)
      EHTNOW=EH(IS)
      IF(ELTNOW.LT.EMIN) ELTNOW=EMIN
      IF(EHTNOW.GT.EMAX) EHTNOW=EMAX
      IF(ELTNOW.GE.EHTNOW) GO TO 350
C-----IGNOR REPEATED ENERGY RANGES.
      IF(IRANGE.LT.2) GO TO 340
      DO 330 I=1,IRANGE,2
      IF(ELTNOW.EQ.ERANGE(I).AND.EHTNOW.EQ.ERANGE(I+1)) GO TO 350
  330 CONTINUE
C-----SAVE BOTH ENDS OF ENERGY REGION.
  340 IRANGE=IRANGE+1
      ERANGE(IRANGE)=ELTNOW
      IRANGE=IRANGE+1
      ERANGE(IRANGE)=EHTNOW
  350 CONTINUE
C-----SORT RESONANCE REGION BOUNDARIES INTO ASCENDING SORTS.
      CALL SORTD(ERANGE,IRANGE)
C-----ELIMINATE DUPLICATE ENERGY LIMITS.
      NRANGE=1
      DO 360 IS=2,IRANGE
      IF(DABS(ERANGE(IS)-ERANGE(NRANGE)).LE.DABS(DEMIN*ERANGE(NRANGE)))
     1 GO TO 360
      NRANGE=NRANGE+1
      ERANGE(NRANGE)=ERANGE(IS)
  360 CONTINUE
C-----ADD THERMAL ENERGY (0.0253 EV) IF RESONANCE REGION SPANS THERMAL
C-----ENERGY.
      CALL NOODLE(ETHERM,ZERO,ERANGE(1),ERANGE(NRANGE))
C
C     DEFINE WHICH NODES CONTRIBUTE TO EACH RESONANCE REGION.
C
      IN1=1
      IN2=1
      DO 390 IRANGE=2,NRANGE
      IF(IN1.GE.NODES) GO TO 380
      DO 370 IN2=IN1,NODES
      IF(ENODE(IN2)-ERANGE(IRANGE)) 370,380,380
  370 CONTINUE
      IN2=NODES
  380 NODLOW(IRANGE)=IN1
      NODHI(IRANGE)=IN2
  390 IN1=IN2
  400 RETURN
  410 FORMAT(1X,78('=')/' Listing of All Resonance Parameters'/
     1 1X,78('=')/
     1       ' Element or Material------------------',10A1/
     2       ' Atomic Weight Ratio------------------',11A1/
     3       ' Number of Isotopes-------------------',I11)
  420 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' For ENDF/B Evaluations the Fractional Abundance is Defined'/
     2 ' to be the Fraction of Each Isotope in the Evaluation.'/
     3 ' It is NOT the Naturally Occurring Isotopic Abundance'/
     4 ' Unless the Evaluation Contains Data for ALL Isotopes of'/
     5 ' an Element. For Any Evaluation the Sum of the Fractional'/
     6 ' Abundances for All Isotopes Included in the Evaluation'/
     7 ' Should be 1.0.')
  430 FORMAT(' For this Evaluation there is Only One Isotope'/
     1 ' and the Fractional Abundance is',F10.5,' Rather Than 1.0.')
  440 FORMAT(' For this Evaluation the Sum of the Fractional'/
     1 ' Abundances is',F10.5,' Rather than 1.0.')
  450 FORMAT(
     1 ' Either You are Doing this on Purpose for Some Special'/
     2 ' Application or Else the ENDF/B Data is Incorrect.'/
     3 ' This Program will Continue with the Calculations Asuuming'/
     4 ' that the Abundances Read from the Evaluation are Correct.'/
     5 ' Check ENDF/B Data and Correct the Fractional Abundances.')
  460 FORMAT(1X,78('=')/
     1       ' Isotope Number-----------------------',I11/
     2       ' Isotope------------------------------',10A1/
     3       ' Fractional Abundance-----------------',11A1/
     4       ' LFW (Fission Widths)-----------------',I11,6A4/
     4       ' Number of Energy Ranges--------------',I11)
  470 FORMAT(1X,78('=')/
     1 ' Lower Limit of the Energy Range------',11A1,' eV'/
     2 ' Upper Limit of the Energy Range------',11A1,' eV'/
     3 ' LRU (Type of Region)-----------------',I11,6A4)
  480 FORMAT(' LRF (Type of Resolved Parameters)----',I11,7A4)
  490 FORMAT(' LRF (Energy Dependence of Widths)----',I11,7A4)
  500 FORMAT(' NRO (Scattering Radius)--------------',I11,1X,6A4)
  510 FORMAT(' NAPS (Channel Radius)----------------',I11,1X,6A4)
  520 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' Note, LRU=',I2,' Indicates that the Resonance Contribution'/
     2 ' has Already been Added to the Cross Sections. This Section'/
     3 ' will be Read, but Ignored in All Resonance Calculations.')
  530 FORMAT(1X,78('=')/' No Parameters'/1X,78('=')/
     1       ' Nuclear Spin of Target---------------',11A1/
     2       ' Effective Scattering Radius (A+)-----',11A1)
  540 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 23H WARNING - Illegal LRU=,I5,' (Expect 0 to 5)'/
     2 10X,' Cannot Determine Format of ENDF/B Data'/
     3 10X,' Execution Terminated'/1X,78('='))
  550 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' WARNING - Illegal LRF=',I5,' (Expect 1 to 4)'/
     2 10X,' Caanot Determine Format of ENDF/B Data'/
     3 10X,' Execution Terminated'/1X,78('='))
  560 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' WARNING - Illegal LRF=',I5,' LFW=',I5,' Combination'/
     2 10X,' (Expect LRF=1, LFW=0 OR LRF=1, LFW=1 OR LRF=2)'/
     3 10X,' Cannot Determine Format of ENDF/B Data'/
     4 10X,' Execution Terminated'/1X,78('='))
  570 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' WARNING - LFW=',I2,' (Indicates NO Fission Widths Given).'/
     1 '           but Fission Data Read are NOT Zero. Will Ignor'/
     2 '           LFW and Assume Data Read is Correct.'/1X,78('='))
  580 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' WARNING - LFW=',I2,' (Indicates Fission Widths Given).'/
     1 '           but Fission Data Read are ALL Zero. Will Ignor'/
     2 '           LFW and Assume Data Read is Correct.'/1X,78('='))
  590 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' WARNING - LFI=',I2,' from MF=1, MT=451 (Indicates Material',
     2 ' is NOT Fissile)'/
     1 '           but Fission Data Read are NOT Zero. Will Ignor',
     2 ' LFI and Assume'/
     2 '           Data Read is Correct.'/1X,78('='))
  600 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' WARNING - LFI=',I2,' from MF=1, MT=451 (Indicates Material',
     2 ' is Fissile)'/
     1 '           but Fission Data Read are ALL Zero. Will Ignor',
     2 ' LFI and Assume'/
     2 '           Data Read is Correct.'/1X,78('='))
  610 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' WARNING - NRO=',I5,' (Illegal Value)'/
     2 10X,' in Order to Continue this Program will Set NRO=0'/
     3 ' WARNING - This May Result in Errors - Check ENDF/B Data.')
  620 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' WARNING - NAPS=',I5,' (Illegal Value)'/
     2 10X,' In Order to Continue this Program will Set NAPS=0'/
     3 ' WARNING - This May Result in Errors - Check ENDF/B Data.')
  630 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 ' Program Expects Resonance Region Between ',11A1,' and',
     2 11A1,' eV.')
  640 FORMAT(
     3 ' Program Will Truncate Resonance Region to',11A1,' and',
     2 11A1,' eV.'/
     4 ' Check Evaluated Data.'/1X,78('='))
  650 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 ' Resonance Region Limits MUST be in Ascending Energy Order.'/
     2 10X,' Execution Terminated'/1X,78('='))
  660 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' The Above Resonance Region is Completely Outside Requested'/
     2 ' Energy Range to be Processed - This Region will be Ignored.')
  670 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' The Above Resonance Region Will be Truncated to Requested'/
     2 ' Energy Range to be Processed.')
      END
      SUBROUTINE FILE3
C=======================================================================
C
C     OUTPUT DATA IN ENDF/B FORMAT. ALL SECTIONS OF FILE 3 DATA WILL BE
C     PROCESSED BY THIS SUBROUTINE. ALL SECTIONS EXCEPT TOTAL, ELASTIC,
C     FISSION AND CAPTURE WILL BE COPIED BY THIS ROUTINE. FOR TOTAL,
C     ELASTIC, FISSION AND CAPTURE IF THERE ARE BACKGROUND CROSS SECTION
C     THE RESONANCE AND BACKGROUND CROSS SECTIONS WILL BE COMBINED AND
C     OUTPUT. IF THERE IS NO BACKGROUND CROSS SECTION ONLY THE RESONANCE
C     CONTRIBUTION WILL BE OUTPUT. IN EITHER CASE THE DATA (RESONANCE OR
C     RESONANCE PLUS BACKGROUND CONTRIBUTIONS) WILL NOT BE THINNED, I.E.
C     THE OUTPUT ENERGY GRID WILL BE THE UNION OF THE RESONANCE AND
C     BACKGROUND ENERGY GRIDS.
C
C     AFTER ALL OF FILE 3 HAS BEEN PROCESSED THE REMAINDER OF THE MAT
C     WILL BE COPIED.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 FIELD
      CHARACTER*4 REACTS
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/UNITS/ISCR2,ISCR23
      COMMON/HEADER/C1H,C2H,L1H,L2H,N1H,N2H,MATH,MFH,MTH,NOSEQ
      COMMON/LEADER/C1,C2,L1,L2,N1,N2,MAT,MF,MT
      COMMON/POINTN/NPOINT,KPOINT
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/EDGES/ERANGE(50),NODLOW(50),NODHI(50),NRANGE,IRANGE
      COMMON/PAGER/NPAGE,NPAGP1,NPAGM1
      COMMON/FISSY/LFWX,LFI,MT451
      COMMON/LASTE/ELAST
      COMMON/FLAGS/MINUS3,IMPLUS
      COMMON/WHATZA/IZANOW,MATNOW,TEMP3,IVERSE,INT45
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/FIELDC/FIELD(11,12)
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION MREACT(5),MTADD(5),NBTO(1),INTO(1),IHEAD(7),ISAVE1(7),
     1 ETAB3(120000),SIG3(120000),ETAB23(120000),SIG23(120000),
     1 INT(1002),NBT(1002),REACTS(2,5),ETAB2X(120000),SIG2X(4,120000),
     2 SAVE1(2)
      EQUIVALENCE (ENRES(1),ETAB3(1)),(SHIFT2(1),ETAB23(1)),
     1 (RESTAB(1,1),SIG3(1)),(ENODE(1),SIG23(1)),
     2 (ETAB2(1),ETAB2X(1)),(SIG2(1,1),SIG2X(1,1)),(IHEAD(1),L1H),
     3 (INT(1),RESTAB(1,1)),(NBT(1),RESTAB(1,335))
      DATA MREACT/1,2,4,4,3/
      DATA MTADD/1,2,18,19,102/
      DATA REACTS/
     1 '   T','otal',
     2 ' Ela','stic',
     3 ' Fis','sion',
     4 ' (n,','f) 1',
     4 ' Cap','ture'/
      DATA INTO/2/
      DATA IZERO/0/
      DATA IUSE23/0/
      DATA ISAVE1/0,0,0,0,0,0,0/
      DATA SAVE1/0.0D+00,0.0D+00/
      DATA OKDIFF/1.0D-09/
      DATA IONE/1/
      DATA ZEROD/0.0D+00/
      DATA ETHERM/2.53D-02/
CCHO
      DIMENSION SEN(10000),STOTAL(10000),SELAST(10000),SCAPTR(10000)
CCHO
C-----IF NO POINTS WERE GENERATED IN THE RESONANCE CALCULATION MERELY
C-----COPY REMAINDER OF MAT UNLESS IN EDIT MODE.
      IF(IMEDIT.EQ.2) GO TO 10
      IF(NPOINT.LE.0) GO TO 790
      WRITE(OUTP,810)
      WRITE(*   ,810)
      GO TO 20
   10 WRITE(OUTP,820)
      WRITE(*   ,820)
C-----INITIALIZE END OF FILE 3 FLAG OFF.
   20 MF3END=0
C-----LOOP OVER 5 RESONANCE REACTIONS.
      DO 710 IREACT=1,5
C-----DEFINE INDEX TO CURRENT REACTION.
      INDEX=MREACT(IREACT)
      IMESS=1
C-----INITIALIZE NEGATIVE CROSS SECTION POINT COUNT.
      MINUS3=0
      IMPLUS=0
C-----INITIALIZE LAST ENERGY READ FROM FILE 3 FOR ASCENDING ENERGY TEST.
      ELAST=0.0
C-----TEST FOR CURRENT STATUS
C-----MF3END=-1 - STILL IN FILE 3. RESTORE LAST LINE READ.
C-----      = 0 - STILL IN FILE 3. READ NEXT LINE.
C-----      = 1 - END OF FILE 3 READ (NO BACKGROUND)
C-----      = 2 - PAST END OF FILE 3 READ (NO BACKGROUND)
      IF(MF3END) 30,50,600
C-----RESTORE LAST LINE READ.
   30 C1H=SAVE1(1)
      C2H=SAVE1(2)
      DO 40 I=1,7
   40 IHEAD(I)=ISAVE1(I)
      MF3END=0
      GO TO 90
C-----READ FIRST LINE OF NEXT SECTION OF FILE 3, FEND OR MEND LINE.
   50 CALL CONTI
      IF(MFH-3) 60,90,70
C-----END OF FILE 3. SET FLAG. IF MEND LINE TREAT AS PAST END OF FILE 3.
   60 IF(MATH.LE.0) GO TO 70
      MF3END=1
      GO TO 600
C-----PAST THE END OF FILE 3. SET FLAG AND SAVE LINE.
   70 MF3END=2
      SAVE1(1)=C1H
      SAVE1(2)=C2H
      DO 80 I=1,7
   80 ISAVE1(I)=IHEAD(I)
      GO TO 600
C
C     STILL IN FILE 3. SEE IF RESONANCE CONTRIBUTION MUST BE ADDED TO
C     CURRENT CROSS SECTION. DEPENDING ON CURRENT MT FROM FILE 3
C     EITHER,
C     (1) COPY SECTION - NOT UP TO REQUIRED SECTION YET.
C     (2) COMBINE RESONANCE AND BACKGROUND CONTRBUTION -SECTION MATCH.
C     (3) OUTPUT RESONANCE CONTRIBUTION - NO BACKGROUND.
C
   90 CONTINUE
      IF(MTH-MTADD(IREACT)) 100,110,580
C-----COPY SECTION.
  100 CALL CONTO
      CALL COPYS
      GO TO 50
C
C     BACKGROUND DATA PRESENT.
C
C-----READ SECTION LEADER LINE AND INTERPOLATION LAW.
  110 CALL CARDI(C1,C2,L1,L2,N1,N2)
      CALL TERPI(NBT,INT,N1)
C-----DEFINE BACKGROUND TEMPERATURE.
      IF(IVERSE.NE.6) GO TO 120
      TEMP=TEMP3
      GO TO 130
  120 TEMP=C1
      IF(MTH.EQ.1) TEMP1=TEMP
      IF(L2.NE.0) TEMP=TEMP1
C-----IF BACKGROUND TEMPERATURE IS NOT 0 KELVIN PRINT WARNING MESSAGE
C-----AND DO NOT COMBINE RESONANCE AND BACKGROUND CONTRIBUTIONS (SKIP
C-----BACKGROUND AND OUTPUT ONLY THE RESONANCE CONTRIBUTION).
  130 IF(TEMP.LE.0.0) GO TO 140
      IMESS=2
      CALL SKIPS
      GO TO 620
C-----CHECK INTERPOLATION LAW.
  140 DO 150 I=1,N1
      IF(INT(I).NE.2) GO TO 160
  150 CONTINUE
      GO TO 170
C-----INTERPLATION LAW IS NOT LINEAR-LINEAR. PRINT WARNING MESSAGE
C-----AND DO NOT COMBINE RESONANCE AND BACKGROUND CONTRIBUTIONS (SKIP
C-----BACKGROUND AND OUTPUT ONLY THE RESONANCE CONTRIBUTION).
  160 IMESS=3
      CALL SKIPS
      GO TO 620
C-----SECTION HEADER AND LEADER CARDS HAVE BEEN READ. TEMPERATURE AND
C-----INTERPOLATION LAW CHECKED. IF IN EDIT MOODE SKIP SECTION AND
C-----CONTINUE.
  170 IF(IMEDIT.NE.2) GO TO 180
      WRITE(OUTP,850) REACTS(1,IREACT),REACTS(2,IREACT),N2
      WRITE(*   ,850) REACTS(1,IREACT),REACTS(2,IREACT),N2
      CALL SKIPS
      GO TO 710
C-----IF ALL FISSION WIDTHS ARE ZERO COPY BACKGROUND (NO RESONANCE
C-----CONTRIBUTION...BOTH FISSION AND FIRST CHANCE FISSION).
  180 IF(LFWX.NE.0) GO TO 190
      IF(MTH.NE.18.AND.MTH.NE.19) GO TO 190
      WRITE(OUTP,930) REACTS(1,IREACT),REACTS(2,IREACT),IZERO,N2,N2
      WRITE(*   ,930) REACTS(1,IREACT),REACTS(2,IREACT),IZERO,N2,N2
C-----OUTPUT SECTION HEADER AND LEADER CARDS AND INTERPOLATION LAW.
      CALL CONTO
      CALL CARDO(C1,C2,L1,L2,IONE,N2)
      NBTO(1)=N2
      CALL TERPO(NBTO,INTO,1)
C-----COPY REMAINDER OF SECTION.
      CALL COPYS
      GO TO 710
C
C     COMBINE RESONANCE AND BACKGROUND CONTRIBUTIONS.
C
C-----DEFINE RESONANCE AND TABULATED POINT COUNTS.
  190 NPT2=NPOINT
      NPT3=N2
      LEFT2=NPOINT
      LEFT3=N2
C-----INITIALIZE COMBINED POINT COUNTS.
      IPT23=0
      NPT23=0
C-----INITIALIZE NON-ZERO CROSS SECTION FLAG.
      KMPLUS=0
C-----INITIALIZE RESONANCE AND TABULATED POINT INDICES.
      IPT2=1
      IPT3=1
      KPT2=IPT2
      KPT3=IPT3
C-----IF REQUIRED POSITION FILE 2 SCRATCH FILE FOR READING.
      IF(NPOINT.GT.NPAGE) REWIND ISCR2
C-----READ FIRST PAGE OF TABULATED DATA.
      IF(NPT3.GT.NPAGE) NPT3=NPAGE
      CALL POINTI(ETAB3,SIG3,NPT3)
      LEFT3=LEFT3-NPT3
C-----IF ENTIRE BACKGROUND FITS IN CORE AND IT IS ZERO AT ALL ENERGIES
C-----SIMPLY ADD END POINT ENERGIES AND OUTPUT (NO NEED TO PERFORM
C-----ADDITION).
      IF(LEFT3.GT.0) GO TO 270
      DO 200 I=1,NPT3
      IF(DABS(SIG3(I)).NE.0.0D+00) GO TO 270
  200 CONTINUE
C
C     BACKGROUND IS ZERO. ADDITION NOT REQUIRED.
C
C-----IF REQUIRED ADD END POINTS.
      NPT23=NPOINT
      E3LST=ETAB3(1)
      E3=ETAB3(NPT3)
      IF(E3LST.LT.ERANGE(1)) NPT23=NPT23+1
      IF(E3.GT.ERANGE(NRANGE)) NPT23=NPT23+1
      WRITE(OUTP,860) REACTS(1,IREACT),REACTS(2,IREACT),NPOINT,N2,
     1 NPT23
      WRITE(*   ,860) REACTS(1,IREACT),REACTS(2,IREACT),NPOINT,N2,
     1 NPT23
C-----OUTPUT SECTION HEAD AND LEADER CARDS AND INTERPOLATION LAW.
      CALL CONTO
      CALL CARDO(C1,C2,L1,L2,IONE,NPT23)
      NBTO(1)=NPT23
      CALL TERPO(NBTO,INTO,1)
C-----IF NO ADDITIONAL BACKGROUND POINTS OUTPUT RESONANCE CONTRIBUTION.
      IF(NPT23.LE.NPOINT) GO TO 670
C-----IF REQUIRED INSERT FIRST BACKGROUND POINT.
      IPT23=0
      IF(E3LST.GE.ERANGE(1)) GO TO 210
      IPT23=1
      ETAB23(1)=E3LST
      SIG23(1)=0.0
C-----COPY FILE 2 POINTS TO FILE 3 ARRAYS AND OUTPUT A PAGE AT A TIME.
  210 NPT2=1
  220 IPT2=NPT2+NPAGM1
      IF(IPT2.GT.NPOINT) IPT2=NPOINT
      IF(NPOINT.GT.NPAGE) READ(ISCR2) ETAB2X,SIG2X
      JPT2=(IPT2-NPT2)+1
      DO 240 I=1,JPT2
      IPT23=IPT23+1
      IF(IPT23.LE.NPAGE) GO TO 230
C-----IF REQUEST MAKE ALL NEGATIVE CROSS SECTIONS = 0
      IF(MAKEPLUS.EQ.1) THEN
      DO KP=1,NPAGE
      IF(SIG23(KP).LT.0.0D+00) THEN
      MINUS3=MINUS3+1
      SIG23(KP)=0.0
      ENDIF
      ENDDO
      ENDIF
      CALL POINTO(ETAB23,SIG23,NPAGE)
      IPT23=1
  230 ETAB23(IPT23)=ETAB2(I)
      SIG23(IPT23)=SIG2(INDEX,I)
  240 NPT2=NPT2+NPAGE
      IF(NPT2.LE.NPOINT) GO TO 220
C-----IF REQUIRED INSERT LAST BACKGROUND POINT.
      IF(E3.LE.ERANGE(NRANGE)) GO TO 260
      IPT23=IPT23+1
      IF(IPT23.LE.NPAGE) GO TO 250
C-----IF REQUEST MAKE ALL NEGATIVE CROSS SECTIONS = 0
      IF(MAKEPLUS.EQ.1) THEN
      DO KP=1,NPAGE
      IF(SIG23(KP).LT.0.0D+00) THEN
      MINUS3=MINUS3+1
      SIG23(KP)=0.0
      ENDIF
      ENDDO
      ENDIF
      CALL POINTO(ETAB23,SIG23,NPAGE)
      IPT23=1
  250 ETAB23(IPT23)=E3
      SIG23(IPT23)=0.0
C-----IF REQUEST MAKE ALL NEGATIVE CROSS SECTIONS = 0
  260 IF(MAKEPLUS.EQ.1) THEN
      DO KP=1,IPT23
      IF(SIG23(KP).LT.0.0D+00) THEN
      MINUS3=MINUS3+1
      SIG23(KP)=0.0
      ENDIF
      ENDDO
      ENDIF
C-----OUTPUT LAST PAGE OF POINTS.
      CALL POINTO(ETAB23,SIG23,IPT23)
C-----COPY SEND LINE.
      CALL COPYS
      GO TO 700
C
C     RESONANCE AND BACKGROUND CONTRIBUTIONS MUST BE ADDED TOGETHER.
C
  270 E3=ETAB3(IPT3)
      XC3=SIG3(IPT3)
      E3LST=E3
      XC3LST=XC3
C-----INSURE FIRST PAGE OF RESONANCE DATA IS IN CORE AND DEFINE FIRST
C-----POINT.
      IF(NPOINT.LE.NPAGE) GO TO 280
      NPT2=NPAGE
      READ(ISCR2) ETAB2X,SIG2X
  280 LEFT2=LEFT2-NPT2
      E2=ETAB2(1)
      XC2=SIG2(INDEX,1)
      E2LST=E2
      XC2LST=XC2
C-----SELECT LOWEST ENERGY.
  290 IF(E2-E3) 300,430,310
C-----TREAT SMALL DIFFERENCES AS EQUALITY (SAME TO ABOUT 9 DIGITS).
  300 IF(DABS(E2-E3).LE.OKDIFF*E2) GO TO 430
      GO TO 320
  310 IF(DABS(E3-E2).LE.OKDIFF*E3) GO TO 420
      GO TO 390
C
C     FILE 2 ENERGY IS LOWER. INTERPOLATE FILE 3 DATA, OR DEFINE TO
C     BE ZERO IF FILE 3 DOES NOT SPAN ENERGY RANGE.
C
  320 E23=E2
      IF(KPT3.GT.1) GO TO 330
      XC23=XC2
      GO TO 350
  330 IF(E3.GT.E3LST) GO TO 340
      XC23=XC2+XC3
      GO TO 350
  340 XC23=XC2+((E3-E2)*XC3LST+(E2-E3LST)*XC3)/(E3-E3LST)
C-----DEFINE NEXT FILE 2 POINT (USE EITHER NEXT POINT - FROM CORE OR
C-----SCRATCH - OR EXTEND CROSS SECTION BEYOND TABULATED RANGE AS
C-----ZERO).
  350 E2LST=E2
      XC2LST=XC2
      IPT2=IPT2+1
      KPT2=KPT2+1
      IF(IPT2.LE.NPT2) GO TO 380
      IF(LEFT2.GT.0) GO TO 370
C-----EXTEND CROSS SECTION AS ZERO (IF CROSS SECTION IS NOT YET ZERO
C-----SET CROSS SECTION TO ZERO AT CURRENT ENERGY. FOR ALL FOLLOWING
C-----POINTS LEAVE CROSS SECTION EQUAL TO ZERO AND SET CURRENT ENERGY
C-----EQUAL TO CURRENT ENERGY FROM FILE 3.)
      IF(XC2.LE.0.0) GO TO 360
      XC2=0.0
      GO TO 510
  360 E2=E3
      GO TO 510
C-----LOAD NEXT PAGE FROM SCRATCH AND RE-INITIALIZE IN CORE INDEX.
  370 IF(NPT2.GT.LEFT2) NPT2=LEFT2
      READ(ISCR2) ETAB2X,SIG2X
      LEFT2=LEFT2-NPT2
      IPT2=1
C-----USE NEXT POINT FROM CORE.
  380 E2=ETAB2(IPT2)
      XC2=SIG2(INDEX,IPT2)
      GO TO 510
C
C     FILE 3 ENERGY IS LOWER. INTERPOLATE FILE 2 DATA, OR DEFINE TO
C     BE ZERO IF FILE 2 DOES NOT SPAN ENERGY RANGE.
C
  390 E23=E3
      IF(KPT2.GT.1) GO TO 400
      XC23=XC3
      GO TO 470
  400 IF(E2.GT.E2LST) GO TO 410
      XC23=XC2+XC3
      GO TO 470
  410 XC23=XC3+((E2-E3)*XC2LST+(E3-E2LST)*XC2)/(E2-E2LST)
      GO TO 470
C
C     ENERGIES ARE VERY CLOSE AND WILL BE TREATED AS EQUAL. SELECT THE
C     SMALLER ENERGY FOR OUTPUT.
C
  420 E2=E3
C
C     ENERGIES ARE EQUAL.
C
  430 E23=E2
      XC23=XC2+XC3
C-----DEFINE NEXT FILE 2 POINT (USE EITHER NEXT POINT - FROM CORE OR
C-----SCRATCH - OR EXTEND CROSS SECTION BEYOND TABULATED RANGE AS
C-----ZERO).
      E2LST=E2
      XC2LST=XC2
      IPT2=IPT2+1
      KPT2=KPT2+1
      IF(IPT2.LE.NPT2) GO TO 460
      IF(LEFT2.GT.0) GO TO 450
C-----EXTEND CROSS SECTION AS ZERO (IF CROSS SECTION IS NOT YET ZERO
C-----SET CROSS SECTION TO ZERO AT CURRENT ENERGY. FOR ALL FOLLOWING
C-----POINTS LEAVE CROSS SECTION EQUAL TO ZERO AND SET CURRENT ENERGY
C-----EQUAL TO CURRENT ENERGY FROM FILE 3.)
      IF(XC2.LE.0.0) GO TO 440
      XC2=0.0
      GO TO 470
  440 E2=E3
      GO TO 470
C-----LOAD NEXT PAGE FROM SCRATCH AND RE-INITIALIZE IN CORE INDEX.
  450 IF(NPT2.GT.LEFT2) NPT2=LEFT2
      READ(ISCR2) ETAB2X,SIG2X
      LEFT2=LEFT2-NPT2
      IPT2=1
C-----USE NEXT POINT FROM CORE.
  460 E2=ETAB2(IPT2)
      XC2=SIG2(INDEX,IPT2)
C-----DEFINE NEXT FILE 3 POINT (USE EITHER NEXT POINT - FROM CORE OR
C-----FILE - OR EXTEND CROSS SECTION BEYOND TABULATED RANGE AS ZERO).
  470 E3LST=E3
      XC3LST=XC3
      IPT3=IPT3+1
      KPT3=KPT3+1
      IF(IPT3.LE.NPT3) GO TO 500
      IF(LEFT3.GT.0) GO TO 490
C-----EXTEND CROSS SECTION AS ZERO (IF CROSS SECTION IS NOT YET ZERO
C-----SET CROSS SECTION TO ZERO AT CURRENT ENERGY. FOR ALL FOLLOWING
C-----POINTS LEAVE CROSS SECTION EQUAL TO ZERO AND SET CURRENT ENERGY
C-----EQUAL TO CURRENT ENERGY FROM FILE 2.)
      IF(XC3.LE.0.0) GO TO 480
      XC3=0.0
      GO TO 510
  480 E3=E2
      GO TO 510
C-----LOAD NEXT PAGE FROM INPUT FILE AND RE-INITIALIZE IN CORE INDEX.
  490 IF(NPT3.GT.LEFT3) NPT3=LEFT3
      CALL POINTI(ETAB3,SIG3,NPT3)
      LEFT3=LEFT3-NPT3
      IPT3=1
C-----USE NEXT POINT FROM CORE.
  500 E3=ETAB3(IPT3)
      XC3=SIG3(IPT3)
C-----STORE COMBINED POINT.
  510 IPT23=IPT23+1
      IF(IPT23.LE.NPAGE) GO TO 530
      IF(NPT23.LE.0.AND.IUSE23.GT.0) REWIND ISCR23
      NPT23=NPT23+NPAGE
      WRITE(ISCR23) ETAB23,SIG23
C-----IF REQUESTED PRINT MESSAGE EVERYTIME A PAGE IS OUTPUT TO SCRATCH.
      IF(MONITR.EQ.0) GO TO 520
      CALL OUT9(ETAB23(    1),FIELD(1,1),3)
      CALL OUT9(ETAB23(NPAGE),FIELD(1,2),3)
      WRITE(OUTP,960) NPT23,((FIELD(M,I),M=1,11),I=1,2)
      WRITE(*   ,960) NPT23,((FIELD(M,I),M=1,11),I=1,2)
  520 IPT23=1
C
C     SAVE NEXT COMBINED POINT.
C
  530 ETAB23(IPT23)=E23
      SIG23(IPT23)=XC23
C
C     ONLY ALLOW UP TO 2 ENERGY POINTS WITH ZERO CROSS SECTION AT THE
C     BEGINNING OF THE TABLE.
C
      IF(KMPLUS.NE.0) GO TO 550
      IF(XC23.NE.0.0) GO TO 540
      IF(IPT23.LE.2) GO TO 550
C-----KEEP SHIFTING POINTS FORWARD AND RESETTING POINT COUNT.
      ETAB23(2)=ETAB23(IPT23)
      SIG23(2)=SIG23(IPT23)
      IPT23=2
      GO TO 550
  540 KMPLUS=1
C-----CONTINUE COMBINING POINTS IF ANYMORE LEFT.
  550 IF(IPT2.LE.NPT2.OR.LEFT2.GT.0) GO TO 290
C-----WHEN OUT OF FILE 2 POINTS INSURE CURRENT FILE 2 ENERGY (WITH ZERO
C-----CROSS SECTION) IS EQUAL TO FILE 3 ENERGY. NOTE, WHEN ENERGIES ARE
C-----EQUAL NEXT E2 IS DEFINED BEFORE NEXT E3. THEREFORE WHEN E2 IS
C-----BEING EXTEND TO HIGHER ENERGY WITH ZERO CROSS SECTION E2 DEFINED
C-----ABOVE WILL BE SET EQUAL TO THE PRECEDING E3. THE FOLLOWING
C-----STATEMENT WILL INSURE THAT IN THIS CASE E2 IS EXTEND AS EQUAL TO
C-----THE CURRENT E3.
      IF(XC2.EQ.0.0) E2=E3
      IF(IPT3.LE.NPT3.OR.LEFT3.GT.0) GO TO 290
C-----END OF SECTION. DEFINE COMBINED POINT COUNT AND IF REQUIRED SET UP
C-----SCRATCH FILE TO READ.
      NPT23=NPT23+IPT23
      IF(NPT23.LE.NPAGE) GO TO 560
      WRITE(ISCR23) ETAB23,SIG23
      END FILE ISCR23
      REWIND ISCR23
      IUSE23=1
C-----IF REQUESTED PRINT MESSAGE EVERYTIME A PAGE IS OUTPUT TO SCRATCH.
      IF(MONITR.EQ.0) GO TO 560
      CALL OUT9(ETAB23(    1),FIELD(1,1),3)
      CALL OUT9(ETAB23(IPT23),FIELD(1,2),3)
      WRITE(OUTP,960) NPT23,((FIELD(M,I),M=1,11),I=1,2)
      WRITE(*   ,960) NPT23,((FIELD(M,I),M=1,11),I=1,2)
C-----OUTPUT SECTION HEAD AND LEADER CARDS AND INTERPOLATION LAW.
  560 WRITE(OUTP,840) REACTS(1,IREACT),REACTS(2,IREACT),NPOINT,N2,
     1 NPT23
      WRITE(*   ,840) REACTS(1,IREACT),REACTS(2,IREACT),NPOINT,N2,
     1 NPT23
      CALL CONTO
      CALL CARDO(C1,C2,L1,L2,IONE,NPT23)
      NBTO(1)=NPT23
      CALL TERPO(NBTO,INTO,1)
C-----OUTPUT DATA A PAGE AT A TIME.
      IPTB=1
  570 IF(NPT23.GT.NPAGE) READ(ISCR23) ETAB23,SIG23
      IPT23=IPTB+NPAGM1
      IF(IPT23.GT.NPT23) IPT23=NPT23
      JPT23=(IPT23-IPTB)+1
C-----IF REQUEST MAKE ALL NEGATIVE CROSS SECTIONS = 0
      IF(MAKEPLUS.EQ.1) THEN
      DO KP=1,JPT23
      IF(SIG23(KP).LT.0.0D+00) THEN
      MINUS3=MINUS3+1
      SIG23(KP)=0.0
      ENDIF
      ENDDO
      ENDIF
      CALL POINTO(ETAB23,SIG23,JPT23)
      IPTB=IPTB+NPAGE
      IF(IPTB.LE.NPT23) GO TO 570
C-----COPY SEND LINE.
      CALL COPYS
      GO TO 700
C-----BEYOND REQUIRED SECTION (I.E. NO BACKGROUND). SAVE CURRENT LINE
C-----AND SET FLAG.
  580 SAVE1(1)=C1H
      SAVE1(2)=C2H
      DO 590 I=1,7
  590 ISAVE1(I)=IHEAD(I)
      MF3END=-1
C
C     NO BACKGROUND. IF FISSION CROSS SECTION AND ALL FISSION WIDTHS
C     ARE ZERO SIMPLY SKIP THE REACTION (I.E., NO OUTPUT). OTHERWISE
C     USE INPUT PARAMETERS TO DECIDE TO EITHER HAVE NO OUTPUT OR TO
C     OUTPUT RESONANCE CONTRIBUTION.
C
C-----DO NOT OUTPUT FISSION CROSS SECTION UNLESS FISSION WIDTHS ARE NOT
C-----ZERO.
  600 IF(MTADD(IREACT).EQ.18.AND.LFWX.LE.0) GO TO 710
C-----DO NOT OUTPUT FIRST CHANCE FISSION.
      IF(MTADD(IREACT).EQ.19) GO TO 710
C-----IF IN EDIT MODE PRINT MESSAGE AND CONTINUE.
      IF(IMEDIT.NE.2) GO TO 610
      WRITE(OUTP,830) REACTS(1,IREACT),REACTS(2,IREACT)
      WRITE(*   ,830) REACTS(1,IREACT),REACTS(2,IREACT)
      GO TO 710
C-----USE INPUT OPTION TO DECIDE WHETHER OR NOT TO OUTPUT SECTION.
  610 IF(IMBACK.EQ.1) GO TO 620
C-----NO OUTPUT. PRINT MESSAGE EXPLAINING WHY.
      WRITE(OUTP,910) REACTS(1,IREACT),REACTS(2,IREACT),IZERO,IZERO,
     1 IZERO
      WRITE(*   ,910) REACTS(1,IREACT),REACTS(2,IREACT),IZERO,IZERO,
     1 IZERO
      GO TO 710
C-----OUTPUT RESONANCE CONTRIBUTION. DEFINE OUTPUT SECTION MAT/MF/MT.
  620 MATH=MATNOW
      MFH=3
      MTH=MTADD(IREACT)
C-----PRINT DESCRIPTION OF SECTION.
      IF(IMESS-2) 630,640,650
C-----SECTION OF O.K. TO BE COMBINED WITH BACKGROUND.
  630 WRITE(OUTP,870) REACTS(1,IREACT),REACTS(2,IREACT),NPOINT,IZERO,
     1 NPOINT
      WRITE(*   ,870) REACTS(1,IREACT),REACTS(2,IREACT),NPOINT,IZERO,
     1 NPOINT
      GO TO 660
C-----BACKGROUND TEMPERATURE IS NOT 0 KELVIN.
  640 CALL OUT9(TEMP,FIELD(1,1),0)
      IF(IMEDIT.NE.2)
     1 WRITE(OUTP,880) REACTS(1,IREACT),REACTS(2,IREACT),NPOINT,IZERO,
     2 NPOINT,(FIELD(M,1),M=1,11)
      IF(IMEDIT.NE.2)
     1 WRITE(*   ,880) REACTS(1,IREACT),REACTS(2,IREACT),NPOINT,IZERO,
     2 NPOINT,(FIELD(M,1),M=1,11)
      IF(IMEDIT.EQ.2)
     1 WRITE(OUTP,970) REACTS(1,IREACT),REACTS(2,IREACT),N2,
     2 (FIELD(M,1),M=1,11)
      IF(IMEDIT.EQ.2)
     1 WRITE(*   ,970) REACTS(1,IREACT),REACTS(2,IREACT),N2,
     2 (FIELD(M,1),M=1,11)
      GO TO 660
C-----INTERPOLATION LAW IS NOT LINEAR.
  650 IF(IMEDIT.NE.2)
     1 WRITE(OUTP,890) REACTS(1,IREACT),REACTS(2,IREACT),NPOINT,IZERO,
     1 NPOINT,(NBT(I),INT(I),I=1,N1)
      IF(IMEDIT.NE.2)
     1 WRITE(*   ,890) REACTS(1,IREACT),REACTS(2,IREACT),NPOINT,IZERO,
     1 NPOINT,(NBT(I),INT(I),I=1,N1)
      IF(IMEDIT.EQ.2)
     1 WRITE(OUTP,980) REACTS(1,IREACT),REACTS(2,IREACT),N2,
     1 (NBT(I),INT(I),I=1,N1)
      IF(IMEDIT.EQ.2)
     1 WRITE(*   ,980) REACTS(1,IREACT),REACTS(2,IREACT),N2,
     1 (NBT(I),INT(I),I=1,N1)
      IF(IMEDIT.NE.2) WRITE(OUTP,900)
      IF(IMEDIT.EQ.2) WRITE(OUTP,990)
      IF(IMEDIT.NE.2) WRITE(*   ,900)
      IF(IMEDIT.EQ.2) WRITE(*   ,990)
C-----OUTPUT SECTION HEAD CARDS AND INTERPOLATION LAW.
  660 CALL CARDO(ZA,AWR,IZERO,IZERO,IZERO,IZERO)
      CALL CARDO(ZEROD,ZEROD,IZERO,IZERO,IONE,NPOINT)
      NBTO(1)=NPOINT
      CALL TERPO(NBTO,INTO,1)
C-----RESONANCE CONTRIBUTION A PAGE AT A TIME.
  670 IF(NPOINT.GT.NPAGE) REWIND ISCR2
      IPOINT=1
  680 IF(NPOINT.GT.NPAGE) READ(ISCR2) ETAB2X,SIG2X
      KPOINT=IPOINT+NPAGM1
      IF(KPOINT.GT.NPOINT) KPOINT=NPOINT
      KOUT=(KPOINT-IPOINT)+1
      DO 690 K=1,KOUT
  690 SIG3(K)=SIG2(INDEX,K)
C-----IF REQUEST MAKE ALL NEGATIVE CROSS SECTIONS = 0
      IF(MAKEPLUS.EQ.1) THEN
      DO KP=1,KOUT
      IF(SIG3(KP).LT.0.0D+00) THEN
      MINUS3=MINUS3+1
      SIG3(KP)=0.0
      ENDIF
      ENDDO
      ENDIF
CCHO
C     FOR CONSTRUCTION OF SENSITIVITY MATRIX,
C     ENERGIES AND CROSS SECTIONS ARE WRITTEN IN SIMPLE FORMAT.
C     IT IS ASSUMED THAT KOUT DOES NOT EXCEED NPAGE.
C     FOR COMPUTING TIME, EACH MF HAS SEPARATE DO LOOP.
      IF (MTH.EQ.1) THEN
        DO 691 K=1,KOUT
         SEN(K)=ETAB2(K)
         STOTAL(K)=SIG3(K)
  691   CONTINUE
      ELSEIF (MTH.EQ.2) THEN
        DO 692 K=1,KOUT
         IF (ETAB2(K).NE.SEN(K)) THEN
           PRINT *, 'STOP **ERROR** ENERGY MISMATCH'
           WRITE(OTAPE,*) 'STOP **ERROR** ENERGY MISMATCH'
           STOP
         ENDIF
         SELAST(K)=SIG3(K)
  692   CONTINUE
      ELSEIF (MTH.EQ.102) THEN
        DO 693 K=1,KOUT
         IF (ETAB2(K).NE.SEN(K)) THEN
           PRINT *, 'STOP **ERROR** ENERGY MISMATCH'
           WRITE(OTAPE,*) 'STOP **ERROR** ENERGY MISMATCH'
           STOP
         ENDIF
         SCAPTR(K)=SIG3(K)
  693   CONTINUE
      ENDIF
CCHO
      CALL POINTO(ETAB2,SIG3,KOUT)
      IPOINT=IPOINT+NPAGE
      IF(IPOINT.LE.NPOINT) GO TO 680
C-----ADD SEND LINE.
      CALL OUTS(MATH,MFH)
C-----PRINT WARNING IF CROSS SECTION IS NEGATIVE.
  700 IF(MINUS3.GT.0) WRITE(OUTP,940) MINUS3
      IF(MINUS3.GT.0) WRITE(*   ,940) MINUS3
C-----PRINT WARNING MESSAGE IF CROSS SECTION IS NOT POSITIVE AT ANY ENER
C-----END OF REACTION LOOP.
      IF(IMPLUS.LE.0) WRITE(OUTP,950)
      IF(IMPLUS.LE.0) WRITE(*   ,950)
  710 CONTINUE
CCHO
      WRITE(OTAPE,'(A1,2X,A6,9X,A5,7X,A7,6X,A7)') '#','ENERGY',
     1            'TOTAL','ELASTIC','CAPTURE'
      DO 712 K=1,KOUT
       WRITE(OTAPE,'(1X,E12.6,1X,E12.6,1X,E12.6,1X,E12.6)') SEN(K),
     1             STOTAL(K),SELAST(K),SCAPTR(K)
  712 CONTINUE
CCHO
      WRITE(OUTP,920)
      WRITE(*   ,920)
C
C     ALL RESONANCE REACTIONS HAVE BEEN OUTPUT. TEST FOR CURRENT STATUS
C     MF3END=-1 - STILL IN FILE 3. RESTORE LAST LINE READ, OUTPUT AND
C                 COPY TO END OF FILE 3.
C           = 0 - STILL IN FILE 3. COPY TO END OF FILE 3.
C           = 1 - END OF FILE 3 READ. OUTPUT FEND LINE.
C           = 2 - PAST END OF FILE READ. OUTPUT FEND LINE. RESTORE LAST
C                 LINE AND OUTPUT.
C     IF ALL CASES COPY REMAINDER OF MAT.
C
      IF(MF3END) 730,750,720
  720 IF(MF3END-1) 750,760,770
C-----STILL IN FILE 3. RESTORE LAST LINE READ AND OUTPUT.
  730 C1H=SAVE1(1)
      C2H=SAVE1(2)
      DO 740 I=1,7
  740 IHEAD(I)=ISAVE1(I)
      CALL CONTO
C-----STILL IN FILE 3. COPY TO END OF FILE 3.
  750 CALL COPYF
      GO TO 790
C-----END OF FILE 3 REACHED. OUTPUT FEND.
  760 CALL OUTF(MATH)
      GO TO 790
C-----PAST END OF FILE 3. OUTPUT FEND. RESTORE AND OUTPUT LAST LINE.
  770 CALL OUTF(MATH)
      C1H=SAVE1(1)
      C2H=SAVE1(2)
      DO 780 I=1,7
  780 IHEAD(I)=ISAVE1(I)
      CALL CONTO
C-----IF LAST LINE WAS MEND THERE IS NOTHING ELSE TO DO.
      IF(MATH.LE.0) GO TO 800
C-----COPY REMAINDER OF MAT.
  790 CALL COPYM
C-----PRINT RUNNING TIME
  800 CALL TIMER
      RETURN
  810 FORMAT(' Combining File 2 and File 3 Data'/1X,78('=')/
     1 ' Reaction  File 2  File 3  Combined'/
     2 '           Points  Points    Points Comments'/1X,78('='))
  820 FORMAT(1X,78('=')/' Edit of File 3 Data'/1X,78('=')/
     1 ' Reaction  File 3'/
     2 '           Points Comments'/1X,78('='))
  830 FORMAT(1X,2A4,8X,' No Background.')
  840 FORMAT(1X,2A4,2I8,I10)
  850 FORMAT(1X,2A4,I8)
  860 FORMAT(1X,2A4,2I8,I10,' Background is Zero at ALL Energies.')
  870 FORMAT(1X,2A4,2I8,I10,' No Background. Output Resonance Part.')
  880 FORMAT(1X,2A4,2I8,I10,' Background T=',11A1,' Kelvin.'/
     2 1X,7('WARNING...'),'WARNING'/
     3 35X,' Cannot Combine 0 Kelvin Resonance and Hot Background.'/
     4 35X,' Will Only Output Resonance Contribution.')
  890 FORMAT(1X,2A4,2I8,I10,' Background NOT Linear-Linear'/
     1 35X,'   NBT   INT'/(35X,2I6))
  900 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 35X,' Cannot Combine Resonance and Background.'/
     2 35X,' Background MUST be Linearized.'/
     3 35X,' Will ONLY Output Resonance Contribution.')
  910 FORMAT(1X,2A4,2I8,I10,' No Background. No Output (as per Input',
     1 ' Parameter)')
  920 FORMAT(1X,78('='))
  930 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 1X,2A4,2I8,I10,' All Fission Widths are Zero.'/
     3 35X,' WilL Output Background Cross Section.')
  940 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 35X,' Above Cross Section is Negative at',I6,' Energies.')
  950 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 35X,' Above Cross Section is NOT Positive at ANY Energy')
  960 FORMAT(25X,I10,11A1,' to',11A1,' eV Finished')
  970 FORMAT(1X,2A4,I8,' Background Temperature=',11A1,
     1  ' Kelvin.'/
     2 1X,7('WARNING...'),'WARNING'/
     3 35X,' Cannot Combine 0 Kelvin Resonance and Hot Background.'/
     4 35X,' Will Only Output Resonance Contribution.')
  980 FORMAT(1X,2A4,I8,' Background NOT Linear-Linear'/
     1 15X,'   NBT   INT'/(15X,2I6))
  990 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 35X,' Cannot Combine Resonance and Background.'/
     2 35X,' Background MUST be Linearized.'/
     3 35X,' Will ONLY Output Resonance Contribution.')
      END
      SUBROUTINE RDBW
C=======================================================================
C
C     READ BREIT-WIGNER SINGLE OR MULTI LEVEL DATA FOR ONE ENERGY RANGE.
C     EACH L STATE WILL BE TREATED AS A SEPERATE SECTION.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 FIELD
      CHARACTER*4 COMHOL
      COMMON/LEADER/C1,C2,L1,L2,N1,N2,MAT,MF,MT
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/TABRHO/ERHOTB(500),RHOTAB(500),APTAB(500),NRHO(200),
     1 NBTRHO(200),INTRHO(200),INXRHO(4,200),NUMRHO
      COMMON/NAPNRO/NRO,NAPS
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/RANGER/LOW,LHI
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/INDATD/ELX,EHX
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/FISSY/LFWX,LFI,MT451
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/FIELDC/FIELD(11,12)
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION COMHOL(7,3)
      DATA COMHOL/
     1 '(No ','Comp','etit','ive ','Widt','hs) ','    ',
     2 '(Com','peti','tive',' Wid','ths ','Give','n)  ',
     3 '(ERR','OR-M','UST ','be 0',' or ','1)  ','    '/
      DATA C3/1.23D-01/
      DATA C5/8.0D-02/
C-----UPDATED NOV. 12, 1998 AS PER CSEWG SUBCOMMITTEE RECOMMENDATION
      DATA C4/1.008664904D+00/
      DATA C6/2.196807122623D-03/
C-----DEFINE TARGET SPIN, SPIN UP SCATTERING RADIUS AND NUMBER OF L
C-----STATES.
      CALL CARDIO(SPI,AP,L1,L2,NLS,N2)
      IF(IMEDIT.EQ.0) GO TO 20
      CALL OUT9(SPI,FIELD(1,1),0)
      IF(NRO.EQ.0) GO TO 10
      WRITE(OUTP,160) (FIELD(M,1),M=1,11),NLS
      WRITE(*   ,160) (FIELD(M,1),M=1,11),NLS
      GO TO 20
   10 CALL OUT9(AP ,FIELD(1,2),0)
      WRITE(OUTP,170) ((FIELD(M,I),M=1,11),I=1,2),NLS
      WRITE(*   ,170) ((FIELD(M,I),M=1,11),I=1,2),NLS
C
C     L STATE LOOP.
C
   20 DO 150 IL=1,NLS
C-----DEFINE ATOMIC WEIGHT RATIO, Q VALUE FOR COMPETITIVE REACTION,
C-----L VALUE, COMPETITIVE REACTION FLAG AND NUMBER OF RESONANCES.
      CALL CARDIO(AWRI,QX,LNOW,LRX,NRS6X,NRS)
      IF(IMEDIT.EQ.0) GO TO 30
      LRXOUT=LRX+1
      IF(LRX.LT.0.OR.LRX.GT.1) LRXOUT=3
      CALL OUT9(AWRI,FIELD(1,1),0)
      CALL OUT9(QX  ,FIELD(1,2),0)
      WRITE(OUTP,180) ((FIELD(M,I),M=1,11),I=1,2),
     1 LNOW,LRX,(COMHOL(K,LRXOUT),K=1,7),NRS
      WRITE(*   ,180) ((FIELD(M,I),M=1,11),I=1,2),
     1 LNOW,LRX,(COMHOL(K,LRXOUT),K=1,7),NRS
C
C     CONSTRUCT TABLE OF PERMISSIBLE J-VALUES
C     (THIS TABLE WILL BE USED TO CHECK FOR MISSING OR ILLEGAL J-VALUES)
C
   30 CALL SETJ(LNOW)
C-----INITIALIZE FLAGS TO CHECK COMPETITIVE WIDTHS.
      LRXIN=0
      LRXNEG=0
C-----INCREMENT SECTION COUNT AND INDICES TO RESONANCE PARAMETER TABLE.
      CALL LIMIT1(1)
C-----DEFINE ALL PARAMETERS FOR A SECTION.
      AWRICM=AWRI/(AWRI+ONE)
C-----EITHER CALCULATE CHANNEL RADIUS OR DEFINE TO BE EQUAL TO THE
C-----SCATTERING RADIUS.
      IF(NAPS.NE.0) GO TO 40
      APX=C3*((C4*AWRI)**(ONE/THREE))+C5
      GO TO 50
   40 APX=AP
   50 AK1=C6*AWRICM
      AK2=AK1*AK1
      BETA(NSECT)=PI*ABN/AK2
      RHOX2(NSECT)=APX*APX*AK2
      RHOP1(NSECT)=AP*AK1
      EL(NSECT)=ELX
      EH(NSECT)=EHX
      EXCITE(1,NSECT)=QX/AWRICM
      NLOW(NSECT)=LOW
      NHIGH(NSECT)=LHI
      LVALUE(NSECT)=LNOW
      LRXTAB(NSECT)=LRX
      NAPTAB(NSECT)=NAPS
      MODE(NSECT)=LRF
C-----IF ENERGY DEPENDENT SCATTERING RADIUS DEFINE INDEX TO TABULATED
C-----DATA (OTHERWISE INDEX HAS ALREADY BEEN INITIALIZED TO 0).
C-----CALCULATE ENERGY DEPENDENT RHOP FROM SCATTERING RADII.
      IF(NRO.EQ.0) GO TO 70
      NRHO(NSECT)=NUMRHO
      INX3=INXRHO(3,NUMRHO)
      INX4=INXRHO(4,NUMRHO)
      DO 60 I=INX3,INX4
   60 RHOTAB(I)=APTAB(I)*AK1
C
C     READ RESONANCE PARAMETERS (6 PER RESONANCE).
C
C     (1) ENERGY
C     (2) J
C     (3) TOTAL WIDTH
C     (4) NEUTRON WIDTH
C     (5) CAPTURE WIDTH
C     (6) FISSION WIDTH
C
C     SOME OF THESE PARAMETERS WILL BE CONVERTED TO THE FORM REQUIRED
C     FOR CALCULATIONS.
C
C     (2) STATISTICAL WEIGHT, GJ (J NOT NEEDED)
C     (3) COMPETITIVE WIDTH DIVIDED BY PENETRATION FACTOR (TOTAL WIDTH
C         NOT NEEDED)
C     (4) NEUTRON WIDTH DIVIDED BY PENETRATION FACTOR (NEUTRON WIDTH IS
C         ONLY USED IN A FORM DIVIVED BY THE PENETRATION FACTOR).
C
   70 CALL LISPAR(LOW,NRS6X,6)
      IF(IMEDIT.EQ.0) GO TO 80
      IF(LRF.EQ.1) WRITE(OUTP,190)
      IF(LRF.EQ.2) WRITE(OUTP,200)
      IF(LRF.EQ.1) WRITE(*   ,190)
      IF(LRF.EQ.2) WRITE(*   ,200)
C-----FOR EACH SECTION (ISOTOPE, ENERGY RANGE, L VALUE) SORT
C-----RESONANCES IN ASCENDING (J, E) ORDER.
   80 CALL ORDER(LOW,LHI)
      AJNOW=RESTAB(2,LOW)
C-----CHECK FOR LEGAL J-VALUE AND DEFINE STATISTICAL WEIGHT.
      CALL CHECKJ(AJNOW,LNOW,GJ,LRF)
      DO 140 JR=LOW,LHI
C-----IF FISSION WIDTH IS NOT ZERO TURN ON FISSILE FLAG.
      IF(DABS(RESTAB(6,JR)).NE.0.0) LFWX=1
C-----INSERT DIVIDING LINE BETWEEN DIFFERENT J VALUES.
      IF(DABS(AJNOW-RESTAB(2,JR)).LE.0.01) GO TO 90
      AJNOW=RESTAB(2,JR)
C-----CHECK FOR LEGAL J-VALUE AND DEFINE STATISTICAL WEIGHT.
      CALL CHECKJ(AJNOW,LNOW,GJ,LRF)
      IF(IMEDIT.NE.0) WRITE(OUTP,220)
C-----SEE IF TOTAL EQUALS ELASTC + CAPTURE + FISSION.
   90 GAMC=RESTAB(3,JR)-(RESTAB(4,JR)+RESTAB(5,JR)+RESTAB(6,JR))
C-----IF DIFFERENCE IS VERY SMALL COMPARED TO TOTAL SET IT TO ZERO.
      IF(DABS(GAMC).LE.0.00001*RESTAB(3,JR)) GAMC=0.0
C-----CHECK FOR NEGATIVE DIFFERENCES AND SIGNIFICANT POSITIVE DIFFERENCE
      IF(GAMC.LT.0.0) LRXNEG=LRXNEG+1
      IF(GAMC.NE.0.0) LRXIN=LRXIN+1
C-----LIST RESONANCE PARAMETERS.
      IF(IMEDIT.EQ.0) GO TO 110
      II3=3
      DO 100 I=1,6
      CALL OUT9(RESTAB(I,JR),FIELD(1,I),II3)
  100 II3=0
      CALL OUT9(GAMC        ,FIELD(1,7),0)
      WRITE(OUTP,210) (FIELD(M,1),M=1,11),RESTAB(2,JR),
     1 ((FIELD(M,I),M=1,11),I=3,7)
C-----REPLACE J VALUE BY STATISTICAL WEIGHT.
  110 RESJTAB(JR) = RESTAB(2,JR)
      RESTAB(2,JR)= GJ
C-----DEFINE COMPETITIVE WIDTH DIVIDED BY PENETRATION FACTOR.
C-----(WILL REPLACE TOTAL WIDTH IN RESTAB).
      IF(LRX.LE.0) GO TO 120
C-----IF NEGATIVE OR ZERO COMPETITIVE WIDTH SET IT TO ZERO.
      IF(GAMC.LE.0.0) GO TO 120
      RHOC2=DABS(RESTAB(1,JR)+EXCITE(1,NSECT))*RHOX2(NSECT)
      CALL FACTS2(LVALUE(NSECT),RHOC2,SHIFT2(JR),PENFAC)
      RESTAB(3,JR)=GAMC/PENFAC
      GO TO 130
  120 RESTAB(3,JR)=0.0
C-----DEFINE NEUTRON WIDTH DIVIDED BY PENETRATION FACTOR.
  130 RHO2X=DABS(RESTAB(1,JR))*RHOX2(NSECT)
      CALL FACTS2(LVALUE(NSECT),RHO2X,SHIFT2(JR),PENFAC)
      RESTAB(4,JR)=RESTAB(4,JR)/PENFAC
  140 CONTINUE
C-----PRINT ERROR MESSAGES IF WIDTHS DO NOT ADD UP OR COMPETITIVE
C-----WIDTHS ARE NEGATIVE, OR LRX=0 AND ALL COMPETITIVE WIDTHS ARE
C-----ZERO.
      IF(LRX.EQ.0.AND.LRXIN.GT.0) WRITE(OUTP,230) LRXIN
      IF(LRX.EQ.1.AND.LRXNEG.GT.0) WRITE(OUTP,240) LRXNEG
      IF(LRX.EQ.1.AND.LRXIN.EQ.0) WRITE(OUTP,250)
C-----IF NO POSITIVE COMPETITIVE WIDTHS SET FLAG OFF.
      IF(LRXIN.EQ.0) LRXTAB(NSECT)=0
C
C     FOR MULTI-LEVEL PARAMETERS PRINT WARNING IF ANY J SEQUENCES ARE
C     MISSING AND ADD MISSING J SEQUENCE WITH NO RESONANCES IN ORDER TO
C     ALLOW POTENTIAL SCATTERING TO BE CORRECTLY CALCULATED.
C
      IF(LRF.EQ.2) CALL ADDJ(LNOW)
C-----END OF L STATE LOOP.
  150 CONTINUE
      RETURN
  160 FORMAT(1X,78('=')/
     1       ' Nuclear Spin of Target---------------',11A1/
     2       ' Energy Dependent Scattering Radius---(LISTED ABOVE)'/
     3       ' Number of L Values-------------------',I11)
  170 FORMAT(1X,78('=')/
     1       ' Nuclear Spin of Target---------------',11A1/
     2       ' Effective Scattering Radius (A+)-----',11A1/
     3       ' Number of L Values-------------------',I11)
  180 FORMAT(1X,78('=')/
     1       ' Atomic Weight Ratio of Isotope-------',11A1/
     2       ' Competitive Reaction Q Value---------',11A1,' eV'/
     3       ' Angular Momentum (L)-----------------',I11/
     4       ' LRX (Competitive Widths)-------------',I11,1X,7A4/
     5       ' Number of Resonances-----------------',I11)
  190 FORMAT(1X,78('=')/' Single Level Breit-Wigner',
     1 ' Resonance Parameters'/1X,78('=')/
     1 '      Energy  J Value      Total    Neutron',
     2 '    Capture    Fission Competition'/
     2 8X,'(eV)',9X,4(7X,'(eV)'),8X,'(eV)'/1X,78('='))
  200 FORMAT(1X,78('=')/' Multi-Level Breit-Wigner',
     1 ' Resonance Parameters'/1X,78('=')/
     1 '      Energy  J Value      Total    Neutron',
     2 '    Capture    Fission Competition'/
     2 8X,'(eV)',9X,4(7X,'(eV)'),8X,'(eV)'/1X,78('='))
  210 FORMAT(1X,11A1,F7.2,2X,44A1,1X,11A1)
  220 FORMAT(1X,78('-'))
  230 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' LRX=0 IndicateS ALL Competitive Widths Should be Zero and'/
     2 ' Data Should have Total Width = (Elastic+Capture+Fission).'/
     3 I5,' Resonances do NOT Satisfy this Condition.'/
     4 ' This Program will Assume that LRX is Correct and that ALL'/
     5 ' Competitive Widths are Zero and will Define the Total Width'/
     6 ' to be the Sum of Elastic+Capture+Fission for ALL Resonances.'/
     7 ' Check Evaluated Data. Correct Either Sum of Widths or LRX.')
  240 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' LRX=1 Indicates Competitive Widths Present.'/
     2 I5,' Competitive Widths are Negative.'/
     3 ' Will Set ALL Negative Competitive Widths Equal to Zero.'/
     4 ' Check Evaluated Data. Correct Either Sum of Widths or LRX.')
  250 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' LRX=1 Indicates Competitive Widths Present.'/
     2 ' There are NO Positive Competitive Widths.'/
     3 ' Will Assume Competitive Widths are ALL Zero.'/
     4 ' Check Evaluated Data. Correct Either Sum of Widths or LRX.')
      END
      SUBROUTINE GJWAIT(SPI,AJ,GJ)
C=======================================================================
C
C     DEFINE STATISTICAL WEIGHT BASED ON S AND J.
C
C     NOTE - THIS SHOULD BE THE ONLY PLACE IN THE PROGRAM THAT DEFINES
C            STATISTICAL WEIGHTS.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      GJ=(TWO*AJ+ONE)/(FOUR*SPI+TWO)
      RETURN
      END
      SUBROUTINE SETJ(LNOW)
C=======================================================================
C
C     USE CHANNEL SPIN AND L VALUE TO DEFINE TABLE OF LEGAL J VALUES
C     AND STATISTICAL WEIGHTS.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/JFIX/GJSET(50),GJBAD,TABJ(50),JOK(50),JMISS,NUMJ,IGJBAD
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
C-----INITIALIZE SUM OF STATISTICAL WEIGHTS.
      CALL SUMJ(GJBAD,LNOW,1)
C-----CHANNEL SPIN I+0.5 FIRST
      NUMJ=1
      ELL=LNOW
      CHSPIN=SPI+0.5D+00
      TABJ(NUMJ)=DABS(CHSPIN-ELL)
      ENDJ=CHSPIN+ELL
   10 IF(TABJ(NUMJ).EQ.ENDJ) GO TO 20
      TABJ(NUMJ+1)=TABJ(NUMJ)+1.0D+00
      NUMJ=NUMJ+1
      GO TO 10
C-----CHANNEL SPIN I-0.5 NEXT.
   20 IF(SPI.EQ.0.0) GO TO 40
      NUMJ=NUMJ+1
      CHSPIN=DABS(SPI-0.5D+00)
      TABJ(NUMJ)=DABS(CHSPIN-ELL)
      ENDJ=CHSPIN+ELL
   30 IF(TABJ(NUMJ).EQ.ENDJ) GO TO 40
      TABJ(NUMJ+1)=TABJ(NUMJ)+1.0
      NUMJ=NUMJ+1
      GO TO 30
C-----SORT J VALUES INTO ASCENDING ORDER, ELIMINATE DUPLICATES AND
C-----DEFINE STATISTIC WEIGHTS.
   40 IF(NUMJ.GT.1) CALL SORTS(TABJ,NUMJ)
      NUMIN=0
C-----INITIALIZE ERROR MESSAGE COUNT
      MYERROR = 0
      DO 80 I=1,NUMJ
      IF(I.EQ.1) GO TO 60
      DO 50 II=1,NUMIN
      IF(DABS(TABJ(II)-TABJ(I)).LT.0.01) GO TO 70
   50 CONTINUE
   60 NUMIN=NUMIN+1
      TABJ(NUMIN)=TABJ(I)
      JOK(NUMIN)=0
C-----DEFINE STATISTICAL WEIGHT.
      AJ=TABJ(NUMIN)
      CALL GJWAIT(SPI,AJ,GJSET(NUMIN))
      GO TO 80
C-----DUPLICATE J VALUE. ONLY ADD POTENTIAL IF OPTION IS TURNED ON
C-----AND THESE ARE NOT SINGLE LEVEL PARAMETERS.
   70 IF(LRF.EQ.1) GO TO 80
C-----PRINT WARNING BEFORE FIRST ERROR MESSAGE
      IF(MYERROR.EQ.0) WRITE(OUTP,90)
      MYERROR = MYERROR + 1
      WRITE(OUTP,100) LNOW,TABJ(I)
   80 CONTINUE
C-----PRINT FINAL LINE IF ANY ERROR MESSAGES
      IF(MYERROR.GT.0) WRITE(OUTP,110)
      NUMJ=NUMIN
      RETURN
   90 FORMAT(1X,78('-')/1X,7('WARNING...'),'WARNING')
  100 FORMAT(
     1 ' L=',I2,' J =',F7.3,' Corresponds to 2 Resonance Sequences.')
  110 FORMAT(1X,78('-'))
      END
      SUBROUTINE SUMJ(GJNOW,LNOW,MYWAY)
C=======================================================================
C
C     EITHER,
C     MYWAY = 1 - INITIALIZE SUM OF STATISICAL WEIGHTS (GJ)
C           = 2 - ADD GJ TO SUM
C           = 3 - COMPARE SUM TO (2*L+1) AND PRINT WARNING IF THEY
C                 DO NOT AGREE.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/FIXPOT/MYPOT
      COMMON/JFIX/GJSET(50),GJBAD,TABJ(50),JOK(50),JMISS,NUMJ,IGJBAD
      GO TO (10,20,30),MYWAY
C-----INITIALIZE SUM.
   10 GJSUM=0.0
      RETURN
C-----ADD TO SUM
   20 GJSUM=GJSUM+GJNOW
      RETURN
C-----COMPARE SUM TO (2*L+1). PRINT ERROR MESSAGE IF MORE THAN 1
C-----PER-CENT DISAGREEMENT.
   30 GJWANT=2*LNOW+1
      IF(DABS(GJWANT-GJSUM).LE.0.01*GJWANT) GO TO 50
      WRITE(OUTP,60) LNOW,GJWANT,GJSUM
C-----IF REQUESTED ADD MISSING SEQUENCES
      IF(MYPOT.EQ.0) GO TO 40
      WRITE(OUTP,70)
      IGJBAD = 1
      GJBAD  = GJWANT - GJSUM
      RETURN
C-----OTHERWISE, DO NOT ADD SEQUENCES
   40 WRITE(OUTP,80)
   50 IGJBAD = 0
      GJBAD  = 0.0
      RETURN
   60 FORMAT(1X,78('-')/1X,7('WARNING...'),'WARNING'/
     1 ' FOR L =',I3,' Expect Sum of Statistical Weights (GJ) to Equal'/
     2 ' (2*L + 1) =',F7.3/
     3 ' Found     =',F7.3)
   70 FORMAT(
     4 ' Corrective Action Will be Taken to Correctly Calculate'/
     4 ' the Potential Scattering Cross Section - This Procedure is'/
     5 ' Based on the Decision of the National Nuclear Data Center,'/
     6 ' Brookhaven National Laboratory, Private Communication,'/
     7 ' Charles Dunford, (April 1991)')
   80 FORMAT(
     1 ' No Corrective Action Taken - Based on Input Parameter')
      END
      SUBROUTINE CHECKJ(AJNOW,LNOW,GJ,MYWAY)
C=======================================================================
C
C     DEFINE GJ AND CHECK J VALUE AGAINST TABLE OF LEGAL VALUES.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/JFIX/GJSET(50),GJBAD,TABJ(50),JOK(50),JMISS,NUMJ,IGJBAD
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/FIXPOT/MYPOT
C-----99/06/18 - UPDATED FOR NEW REICH-MOORE CONVENTION
      AJPLUS = DABS(AJNOW)
C-----DEFINE STATISTICAL WEIGHT.
      CALL GJWAIT(SPI,AJPLUS,GJ)
C-----ADD TO SUM OF WEIGHTS.
      CALL SUMJ(GJ,LNOW,2)
C
C     DO NOT CHECK SINGLE LEVEL J VALUE - AVERAGE J VALUE ALLOWED.
C
      IF(MYWAY.NE.2) GO TO 30
C-----CHECK J VALUE.
      DO 10 I=1,NUMJ
      IF(DABS(AJPLUS-TABJ(I)).LE.0.01) GO TO 20
   10 CONTINUE
      WRITE(OUTP,40) LNOW,AJPLUS
C-----ONLY CORRECT POTENTIAL IF OPTION IS ON
      IF(MYPOT.LE.0) GO TO 30
      GO TO 30
C-----INDICATE THAT J SEQUENCE HAS BEEN FOUND.
   20 JOK(I)=1
   30 RETURN
   40 FORMAT(1X,78('-')/1X,7('WARNING...'),'WARNING'/
     1 ' Based on Target Spin and L=',I2,' J =',F7.3,
     2 ' is NOT Physically Possible.'/
     3 ' The Use of Fictitious J Values is NOT Allowed in ENDF/B.'/
     5 ' Cross Sections Obtained from these Parameters will be',
     6 ' Unreliable.'/
     7 ' Correct Evaluation Before Attempting Reconstruction.'/
     8 1X,78('-'))
      END
      SUBROUTINE ADDJ(LNOW)
C=======================================================================
C
C     IF NECESSARY ADD SECTION FOR MISSING J VALUES, ONLY IF
C     MYPOT = 1
C
C     CHECK SUM OF STATISTICAL WEIGHTS.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/JFIX/GJSET(50),GJBAD,TABJ(50),JOK(50),JMISS,NUMJ,IGJBAD
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/RANGER/LOW,LHI
      COMMON/FIXPOT/MYPOT
      COMMON/TABRHO/ERHOTB(500),RHOTAB(500),APTAB(500),NRHO(200),
     1 NBTRHO(200),INTRHO(200),INXRHO(4,200),NUMRHO
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      JMISS=0
      DO 20 J=1,NUMJ
      IF(JOK(J).GT.0) GO TO 20
C-----PRINT TITLE BEFORE FIRST MISSING J VALUE.
      IF(JMISS.GT.0) GO TO 10
      JMISS=1
      WRITE(OUTP,50) LNOW
C-----MISSING J-VALUE. INCREMENT BAD J SEQUENCE COUNT AND ADD
C-----STATISTICAL WEIGHT.
   10 WRITE(OUTP,60) TABJ(J)
C-----ONLY IF OPTION IS ON.
      IF(MYPOT.LE.0) GO TO 20
   20 CONTINUE
      IF(JMISS.LE.0) GO TO 30
      WRITE(OUTP,70)
   30 CALL SUMJ(GJNOW,LNOW,3)
      IF(IGJBAD.EQ.0.OR.MYPOT.LE.0) GO TO 40
C-----MISSING OR ILLEGAL J SEQUENCES. ADD ADDITIONAL SECTION WITH NO
C-----RESONANCES TO ALLOW POTENTIAL CROSS SECTION TO BE CORRECTLY
C-----CALCULATED.
      NRS=1
      CALL LIMIT1(1)
      RESJTAB(LHI) =-1000.0
      RESTAB(2,LHI)=-1.0
      RESTAB(3,LHI)=GJBAD
      GJTAB(NSECT)=-1.0
      NLOW(NSECT)=LOW
      NHIGH(NSECT)=LHI
C-----ALL REMAINING SECTION PARAMETERS ARE IDENTICAL TO PRECEDING
C-----SECTION.
      NSM1=NSECT-1
      BETA(NSECT)=BETA(NSM1)
      RHOX2(NSECT)=RHOX2(NSM1)
      RHOP1(NSECT)=RHOP1(NSM1)
      EL(NSECT)=EL(NSM1)
      EH(NSECT)=EH(NSM1)
      LVALUE(NSECT)=LVALUE(NSM1)
      NAPTAB(NSECT)=NAPTAB(NSM1)
      MODE(NSECT)=MODE(NSM1)
C-----VERSION 94-2 - ADDED MISSING SECTION PARAMETERS.
      EXCITE(1,NSECT)=EXCITE(1,NSM1)
      LRXTAB(NSECT)=LRXTAB(NSM1)
      NRHO(NSECT)=NRHO(NSM1)
   40 RETURN
   50 FORMAT(1X,78('-')/1X,7('WARNING...'),'WARNING'/
     1 ' for L=',I2,' The Following J Sequences are Missing.')
   60 FORMAT(' J =',F8.2)
   70 FORMAT(1X,78('-'))
      END
      SUBROUTINE RDAP
C=======================================================================
C
C     READ, WRITE AND SAVE ENERGY DEPENDENT SCATTERING RADIUS.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 FIELD
      CHARACTER*4 TYPINT
      COMMON/LEADER/C1,C2,L1,L2,N1,N2,MAT,MF,MT
      COMMON/TABRHO/ERHOTB(500),RHOTAB(500),APTAB(500),NRHO(200),
     1 NBTRHO(200),INTRHO(200),INXRHO(4,200),NUMRHO
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/LASTE/ELAST
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/FIELDC/FIELD(11,12)
      DIMENSION TYPINT(4,6)
C-----DEFINE SIZE OF INTERPOLATION LAW AND TABULATED DATA ARRAYS.
      DATA MAXINT/200/
      DATA MAXTAB/500/
      DATA TYPINT/
     1 '(His','togr','am) ','    ',
     2 '(Lin',' X-L','in Y',')   ',
     3 '(Log',' X-L','in Y',')   ',
     4 '(Lin',' X-L','og Y',')   ',
     5 '(Log',' X-L','og Y',')   ',
     6 '(ERR','OR) ','    ','    '/
C-----READ TAB1 LEADER LINE AND INTERPOLATION LAW.
      CALL CARDI(C1,C2,L1,L2,N1,N2)
      CALL CARDO(C1,C2,L1,L2,N1,N2)
C-----INCREMENT NUMBER OF ENERGY RANGES WITH ENERGY DEPENDENT SCATTERING
C-----RADIUS AND DEFINE INDICES TO INTERPOLATION LAW AND TABULATED DATA.
      NUMRHO=NUMRHO+1
      IF(NUMRHO.GT.1) GO TO 10
      INXRHO(1,1)=1
      INXRHO(3,1)=1
      GO TO 20
   10 INXRHO(1,NUMRHO)=INXRHO(2,NUMRHO-1)+1
      INXRHO(3,NUMRHO)=INXRHO(4,NUMRHO-1)+1
   20 INXRHO(2,NUMRHO)=INXRHO(1,NUMRHO)+N1-1
      INXRHO(4,NUMRHO)=INXRHO(3,NUMRHO)+N2-1
      INX1=INXRHO(1,NUMRHO)
      INX2=INXRHO(2,NUMRHO)
      INX3=INXRHO(3,NUMRHO)
      INX4=INXRHO(4,NUMRHO)
C-----TEST FOR TABLE OVERFLOW.
      IF(INX2.LE.MAXINT.AND.INX4.LE.MAXTAB) GO TO 30
      WRITE(OUTP,190) INX2,MAXINT,INX4,MAXTAB
      CALL ENDIT
C-----READ AND CHECK INTERPOLATION LAW.
   30 CALL TERPI(NBTRHO(INX1),INTRHO(INX1),N1)
      CALL TERPO(NBTRHO(INX1),INTRHO(INX1),N1)
C-----PRINT TITLE IN EDIT MODE.
      IF(IMEDIT.GT.0) WRITE(OUTP,120) N1,N2
      IF(N1.LE.0) GO TO 80
      NBTLST=0
      IERAP=0
      DO 70 I=INX1,INX2
      II=INTRHO(I)
      IF(II.LT.1.OR.II.GT.5) GO TO 40
      IF(NBTRHO(I)-NBTLST) 50,50,60
   40 II=6
   50 IERAP=1
   60 IF(IMEDIT.GT.0) WRITE(OUTP,130) I,NBTRHO(I),II,
     1 (TYPINT(J,II),J=1,4)
   70 NBTLST=NBTRHO(I)
      IF(IERAP.EQ.0.AND.N2.GT.1.AND.NBTRHO(INX2).EQ.N2) GO TO 90
C-----ERROR IN SCATTERING RADIUS INTERPOLATION LAW.
   80 WRITE(OUTP,140)
      IF(IMEDIT.EQ.0) WRITE(OUTP,150)
      CALL ENDIT
C-----READ AND CHECK TABULATED ENERGY DEPENDENT SCATTERING RADIUS.
   90 ELAST=0.0
      CALL POINTI(ERHOTB(INX3),APTAB(INX3),N2)
      CALL POINTO(ERHOTB(INX3),APTAB(INX3),N2)
      IF(IMEDIT.GT.0) WRITE(OUTP,160)
      IERAP=0
      DO 100 I=INX3,INX4
      IF(APTAB(I).LE.0.0) IERAP=1
      IF(IMEDIT.EQ.0) GO TO 100
      CALL OUT9(ERHOTB(I),FIELD(1,1),3)
      CALL OUT9(APTAB (I),FIELD(1,2),0)
      WRITE(OUTP,170) I,((FIELD(M,J),M=1,11),J=1,2)
  100 CONTINUE
      IF(IERAP.EQ.0) GO TO 110
      WRITE(OUTP,180)
      CALL ENDIT
  110 RETURN
  120 FORMAT(1X,78('=')/
     1 ' Energy Dependent Scattering Radius Interpolation Law'/
     2 1X,78('=')/
     3 I5,' Interpolation Ranges'/
     4 I5,' Tabulated Values'/
     5 1X,78('=')/' Interpolation Law'/1X,78('=')/
     6 ' Index  Boundary       Law'/1X,78('='))
  130 FORMAT(I6,2I10,1X,4A4)
  140 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Energy Dependent Scattering Radius Interpolation Law Error'/
     2 1X,78('=')/
     3 ' Number of Regions (N1) MUST be Positive'/
     4 ' Number of Energies (N2) MUST be 2 or More'/
     5 ' Interpolation Region Boundaries MUST be in Ascending Order'/
     6 ' Interpolation Law MUST be 1 to 5'/
     7 ' Last Region Boundary MUST be Equal to the Number of Points',
     8 ' (N2)'/1X,78('=')/' Execution Terminated.')
  150 FORMAT(//' Suggest You Re-Run in Edit Mode to Determine Error')
  160 FORMAT(1X,78('=')/
     1 ' Energy Dependent Scattering Radius'/1X,78('=')/
     2 ' Index      Energy      Radius'/
     3 '             (eV)      (Fermi)'/1X,78('='))
  170 FORMAT(I6,1X,11A1,1X,11A1)
  180 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Energy Dependent Scattering Law Error.'/
     2 1X,78('=')/
     3 ' Energies MUST be Monotonically Increasing.'/
     4 ' Scattering Radius MUST be Positive.'/
     5 1X,78('=')/' Execution Terminated.')
  190 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Energy Dependent Scattering Radius Table Overflow'/1X,78('=')/
     2 ' Interpolation Regions---',I6,' (Cannot Exceed',I6,')'/
     3 ' Tabulated Energies------',I6,' (Cannot Exceed',I6,')'/
     4 ' Increase Dimension in COMMON/TABRHO/ and Re-Run'/1X,78('=')/
     5 ' Execution Terminated.'/1X,78('='))
      END
      SUBROUTINE RDRM
C=======================================================================
C
C     READ REICH-MOORE DATA FOR ONE ENERGY RANGE.
C     EACH L STATE WILL BE TREATED AS A SEPERATE SECTION.
C
C     THIS ROUTINE USES THE GENERAL REICH-MOORE FORMALISM WITH TWO
C     FISSION CHANNELS AS DEFINED IN ENDF/B-IV. THIS ROUTINE WILL BE
C     USED TO READ DATA IN ANY VERSION OF THE ENDF/B FORMAT (NOTE,
C     THE ENDF/B-VI REICH-MOORE FORMAT HAS NOW BEEN UPDATED TO BE
C     EXACTLY THE SAME AS EARLIER VERSIONS OF THE ENDF/B FORMAT).
C
C     CHECK FOR PRELIMINARY ENDF/B-VI FORMAT(NOW ABONDONED). TERMINATE
C     EXECUTION IF DATA IS IN PRELIMINARY ENDF/B-VI FORMAT.
C
C     FIELD DEFINITIONS FOR EACH RESONANCE
C
C     FIELD          PRELIMINARY          CURRENT
C                    ENDF/B-VI FORMAT     ENDF/B-VI FORMAT
C     =====          ================     ================
C       1            ENERGY               ENERGY
C       2            J                    J
C       3            TOTAL WIDTH          ELASTIC WIDTH
C       4            ELASTIC WIDTH        CAPTURE WIDTH
C       5            CAPTURE WIDTH        FISSION WIDTH 1
C       6            NOT USED             FISSION WIDTH 2
C                    (FISSION NOT
C                    ALLOWED)
C
C     IF THIRD FIELD (PRELIMINARY TOTAL) IS EQUAL TO THE SUM OF THE
C     FOURTH (PRELIMINARY ELASTIC) AND FIFTH (PRELIMINARY CAPTURE)
C     AND SIXTH FIELD IS ZERO (FISSION NOT ALLOWED IN PRELIMINARY
C     FORMAT) FOR ALL RESONANCES THIS PROGRAM WILL ASSUME THAT THE
C     DATA IS IN THE PRELIMINARY REICH-MOORE FORMAT AND TERMINATE
C     EXECUTION WITH A WARNING MESSAGE THAT THE DATA MUST BE CONVERTED
C     TO THE CURRENT REICH-MOORE FORMAT BEFORE IT CAN BE PROCESSED.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 FIELD
      COMMON/LEADER/C1,C2,L1,L2,N1,N2,MAT,MF,MT
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/NAPNRO/NRO,NAPS
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/RANGER/LOW,LHI
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/INDATD/ELX,EHX
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/FISSY/LFWX,LFI,MT451
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/FIELDC/FIELD(11,12)
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DATA C3/1.23D-01/
      DATA C5/8.0D-02/
C-----UPDATED NOV. 12, 1998 AS PER CSEWG SUBCOMMITTEE RECOMMENDATION
      DATA C4/1.008664904D+00/
      DATA C6/2.196807122623D-03/
C-----DEFINE CONSTANT TO ALLOW UP TO 1 PER-CENT DIFFERENCE BETWEEN
C-----TOTAL AND ELASTIC PLUS CAPTURE FOR TEST OF PRELIMINARY ENDF/B-VI
C-----FORMAT.
      DATA ALLOW/0.01/
C-----INITIALIZE FLAG TO INDICATE THAT DATA IS IN THE PRELIMINARY
C-----ENDF/B-VI FORMAT.
      IMOLD=1
C-----DEFINE TARGET SPIN, SCATTERING RADIUS AND NUMBER OF L STATES.
      CALL CARDIO(SPI,AP,L1,L2,NLS,N2)
      IF(IMEDIT.EQ.0) GO TO 10
      CALL OUT9(SPI,FIELD(1,1),0)
      CALL OUT9(AP ,FIELD(1,2),0)
      WRITE(OUTP,140) ((FIELD(M,I),M=1,11),I=1,2),NLS
      WRITE(*   ,140) ((FIELD(M,I),M=1,11),I=1,2),NLS
C
C     L STATE LOOP.
C
   10 DO 120 IL=1,NLS
C-----DEFINE ATOMIC WEIGHT RATIO, L DEPENDENT SCATTERING RADIUS, L VALUE
C-----AND NUMBER OF RESONANCES.
      CALL CARDIO(AWRI,APL,LNOW,L2,NRS6X,NRS)
      IF(IMEDIT.EQ.0) GO TO 20
      CALL OUT9(AWRI,FIELD(1,1),0)
      CALL OUT9(APL ,FIELD(1,2),0)
      WRITE(OUTP,150) ((FIELD(M,I),M=1,11),I=1,2),LNOW,NRS
      WRITE(*   ,150) ((FIELD(M,I),M=1,11),I=1,2),LNOW,NRS
C-----PRINT WARNING IF L DEPENDENT SCATTERING RADIUS IS NOT POSITIVE.
   20 IF(APL.GT.0.0) GO TO 30
C-----IF L DEPENDENT RADIUS IS NOT POSITIVE USE SCATTERING RADIUS.
C-----(SEE, ENDF/B-VI FORMATS AND PROCEDURES MANUAL).
      APL=AP
      WRITE(OUTP,160)
      WRITE(*   ,160)
C
C     CONSTRUCT TABLE OF PERMISSIBLE J-VALUES
C     (THIS TABLE WILL BE USED TO CHECK FOR MISSING OR ILLEGAL J-VALUES)
C
   30 CALL SETJ(LNOW)
C-----INCREMENT SECTION COUNT AND INDICES TO RESONANCE PARAMETER TABLE.
      CALL LIMIT1(1)
C-----DEFINE ALL PARAMETERS FOR A SECTION.
C-----EITHER CALCULATE CHANNEL RADIUS OR DEFINE TO BE EQUAL TO THE
C-----SCATTERING RADIUS.
      IF(NAPS.NE.0) GO TO 40
      APX=C3*((C4*AWRI)**(ONE/THREE))+C5
      GO TO 50
   40 APX=APL
C
C     APX = IS USED IN PENETRABILITIES AND SHIFT FACTORS.
C         = EITHER BASED ON FORMULA OR EQUAL TO APL, DEPENDING ON NAPS.
C     APL = IS USED IN THE HARD SPHERE PHASE SHIFTS.
C     (SEE, ENDF/B-VI FORMATS AND PROCEDURES MANUAL, PAGE 2.6)
C
   50 AK1=C6*AWRI/(AWRI+ONE)
      AK2=AK1*AK1
      BETA(NSECT)=PI*ABN/AK2
      RHOX2(NSECT)=APX*APX*AK2
      RHOP1(NSECT)=APL*AK1
      EL(NSECT)=ELX
      EH(NSECT)=EHX
      NLOW(NSECT)=LOW
      NHIGH(NSECT)=LHI
      LVALUE(NSECT)=LNOW
      MODE(NSECT)=LRF
C
C     READ RESONANCE PARAMETERS (6 PER RESONANCE).
C
C     (1) ENERGY
C     (2) J
C     (3) NEUTRON WIDTH
C     (4) CAPTURE WIDTH
C     (5) FIRST FISSION WIDTH
C     (6) SECOND FISSION WIDTH
C
C     SOME OF THESE PARAMETERS WILL CONVERTED TO THE FORM REQUIRED
C     FOR CALCULATIONS.
C
C     (2) STATISTICAL WEIGHT, GJ (J IS NOT NEEDED)
C     (3) 1/2 NEUTRON WIDTH DIVIDED BY PENETRATION FACTOR (NEUTRON WIDTH
C         IS ONLY USED DIVIDED BY THE PENETRATION FACTOR)
C     (4) 1/2 THE CAPTURE WIDTH (THIS IS THE ONLY FORM IN WHICH THE
C         CAPTURE WIDTH IS USED)
C     (5) SIGNED SQUARE ROOT OF 1/2 FIRST FISSION WIDTH (ONLY FORM USED)
C     (6) SIGNED SQUARE ROOT OF 1/2 SECOND FISSION WIDTH (ONLY FORM USED
C
      CALL LISPAR(LOW,NRS6X,6)
      IF(IMEDIT.NE.0) WRITE(OUTP,170)
C-----FOR EACH SECTION (ISOTOPE, ENERGY RANGE, L VALUE) SORT
C-----RESONANCES IN ASCENDING (J, E) ORDER.
      CALL ORDER(LOW,LHI)
      AJNOW=RESTAB(2,LOW)
C-----CHECK FOR LEGAL J-VALUE AND DEFINE STATISTICAL WEIGHT.
      CALL CHECKJ(AJNOW,LNOW,GJ,2)
      DO 110 JR=LOW,LHI
C-----INSERT DIVIDING LINE BETWEEN DIFFERENT J VALUES.
      IF(DABS(AJNOW-RESTAB(2,JR)).LE.0.01) GO TO 60
      AJNOW=RESTAB(2,JR)
C-----CHECK FOR LEGAL J-VALUE AND DEFINE STATISTICAL WEIGHT.
      CALL CHECKJ(AJNOW,LNOW,GJ,2)
      IF(IMEDIT.NE.0) WRITE(OUTP,190)
C-----LIST RESONANCE PARAMETERS.
   60 IF(IMEDIT.EQ.0) GO TO 80
      II3=3
      DO 70 I=1,6
      CALL OUT9(RESTAB(I,JR),FIELD(1,I),II3)
   70 II3=0
      WRITE(OUTP,180) (FIELD(M,1),M=1,11),RESTAB(2,JR),
     1 ((FIELD(M,I),M=1,11),I=3,6)
C-----CHECK FOR PRELIMINARY ENDF/B-VI FORMAT.
   80 IF(IMOLD.LE.0) GO TO 100
C-----NOT PRELIMINARY FORMAT IF THIRD FIELD IS NOT THE SUM OF THE
C-----FOURTH AND FIFTH FIELDS.
      IF(DABS(RESTAB(3,JR)-(RESTAB(4,JR)+RESTAB(5,JR))).GT.
     1 DABS(ALLOW*RESTAB(3,JR))) GO TO 90
C-----NOT PRELIMINARY FORMAT IF SIXTH FIELD IS NOT ZERO.
      IF(DABS(RESTAB(6,JR)).EQ.0.0) GO TO 100
C-----DATA IS NOT IN THE PRELIMINARY ENDF/B-VI FORMAT. TURN OFF FLAG
C-----AND STOP TESTING FOR PRELIMINARY FORMAT.
   90 IMOLD=0
C-----REPLACE J VALUE BY STATISTICAL WEIGHT.
  100 RESJTAB(JR) = RESTAB(2,JR)
      RESTAB(2,JR)= GJ
C-----DEFINE SIGNED SQUARE ROOT OF 1/2 FISSION WIDTHS.
      GAMF1=DSQRT(DABS(0.5*RESTAB(5,JR)))
      IF(RESTAB(5,JR).LT.0.0) GAMF1=-GAMF1
      RESTAB(5,JR)=GAMF1
      GAMF2=DSQRT(DABS(0.5*RESTAB(6,JR)))
      IF(RESTAB(6,JR).LT.0.0) GAMF2=-GAMF2
      RESTAB(6,JR)=GAMF2
C-----IF FISSION WIDTHS ARE NOT ZERO TURN ON FISSILE FLAG.
      IF(GAMF1.NE.0.0.OR.GAMF2.NE.0.0) LFWX=1
C-----DEFINE 1/2 NEUTRON WIDTH DIVIDED BY PENETRATION FACTOR.
      RHO2X=DABS(RESTAB(1,JR))*RHOX2(NSECT)
      CALL FACTS2(LVALUE(NSECT),RHO2X,SHIFT2(JR),PENFAC)
      RESTAB(3,JR)=0.5*RESTAB(3,JR)/PENFAC
C-----DEFINE 1/2 CAPTURE WIDTH.
      RESTAB(4,JR)=0.5*RESTAB(4,JR)
  110 CONTINUE
C
C     PRINT WARNING IF ANY J SEQUENCES ARE MISSING AND ADD MISSING J
C     SEQUENCE WITH NO RESONANCES IN ORDER TO ALLOW POTENTIAL SCATTERING
C     TO BE CORRECTLY CALCULATED.
C
      CALL ADDJ(LNOW)
C-----END OF L STATE LOOP.
  120 CONTINUE
C-----TERMINATE EXECUTION IF DATA IS IN THE PRELIMINARY ENDF/B-VI
C-----FORMAT.
      IF(IMOLD.LE.0) GO TO 130
      WRITE(OUTP,200)
      CALL ENDIT
  130 RETURN
  140 FORMAT(1X,78('=')/
     1       ' Nuclear Spin of Target---------------',11A1/
     2       ' Scattering Radius--------------------',11A1/
     3       ' Number of L Values-------------------',I11)
  150 FORMAT(1X,78('=')/
     1       ' Atomic Weight Ratio of Isotope-------',11A1/
     2       ' L Dependent Scattering Radius--------',11A1/
     3       ' Angular Momentum (L)-----------------',I11/
     4       ' Number of Resonances-----------------',I11)
  160 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 ' L Dependent Scattering Radius in the Evaluation is Zero.'/
     2 ' Have Defined it to be Equal to the Scattering Radius.'/
     3 ' (see, ENDF/B-VI Formats and Procedures Manual, page 2.11)')
  170 FORMAT(1X,78('=')/' Reich-Moore Resonance Parameters'/1X,78('=')/
     1 '      Energy  J Value    Neutron    Capture  Fission-1',
     2 '  Fission-2'/8X,'(eV)',9X,4(7X,'(eV)')/1X,78('='))
  180 FORMAT(1X,11A1,F7.2,2X,44A1)
  190 FORMAT(1X,78('-'))
  200 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 ' Data are in the Preliminary ENDF/B-VI Format, which is No'/
     2 ' Longer Used. Data MUST be Reformated to Comform to the'/
     3 ' Current ENDF/B-VI Reich-Moore Format Before it can be'/
     4 ' Processed by this Program. Execution Terminated.')
      END
      SUBROUTINE RDAA
C=======================================================================
C
C     READ ADLER-ADLER DATA FOR ONE ENERGY RANGE.
C     SINCE ADLER-ADLER PARAMETERS ARE INDEPENDENT OF L AND J THE
C     ENTIRE ENERGY RANGE WILL BE TREATED AS ONE SECTION.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 FIELD
      CHARACTER*4 REACTR
      COMMON/LEADER/C1,C2,L1,L2,N1,N2,MAT,MF,MT
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/RANGER/LOW,LHI
      COMMON/WHATZA/IZANOW,MATNOW,TEMP3,IVERSE,INT45
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/INDATD/ELX,EHX
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/FISSY/LFWX,LFI,MT451
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/FIELDC/FIELD(11,12)
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION REACTR(2,3)
      DATA REACTR/
     1 'Tota','l   ',
     2 'Fiss','ion ',
     3 'Capt','ure '/
C-----UPDATED NOV. 12, 1998 AS PER CSEWG SUBCOMMITTEE RECOMMENDATION
      DATA C6/2.196807122623D-03/
C-----DEFINE TARGET SPIN, SPIN UP SCATTERING RADIUS AND NUMBER OF L
C-----STATES.
      CALL CARDIO(SPI,AP,L1,L2,NLS,N2)
      IF(IMEDIT.EQ.0) GO TO 10
      CALL OUT9(SPI,FIELD(1,1),0)
      CALL OUT9(AP ,FIELD(1,2),0)
      WRITE(OUTP,310) ((FIELD(M,I),M=1,11),I=1,2),NLS
      WRITE(*   ,310) ((FIELD(M,I),M=1,11),I=1,2),NLS
C-----DEFINE ATOMIC WEIGHT RATIO, TYPE AND NUMBER OF BACKGROUND
C-----PARAMETERS.
   10 CALL CARDIO(AWRI,XN,LI,L2,NRS6X,NRS)
      IF(IMEDIT.EQ.0) GO TO 20
      CALL OUT9(AWRI,FIELD(1,1),0)
      WRITE(OUTP,320) (FIELD(M,1),M=1,11),LI,NRS
      WRITE(*   ,320) (FIELD(M,1),M=1,11),LI,NRS
C-----INCREMENT SECTION COUNT AND INDICES TO RESONANCE PARAMETER TABLE
C-----(RESONANCE TABLE INDICES WILL ONLY REFER TO BACKGROUND).
   20 CALL LIMIT1(1)
C-----DEFINE ALL PARAMETERS FOR A SECTION.
      AK1=C6*AWRI/(AWRI+ONE)
      BETA(NSECT)=PI*ABN/(AK1*AK1)
      RHOP1(NSECT)=TWO*AP*AK1
      EL(NSECT)=ELX
      EH(NSECT)=EHX
      NLOW(NSECT)=LOW
C-----MODE DEPENDS ON VERSION OF ENDF/B FORMAT.
      MODE(NSECT)=4
      IF(IVERSE.GE.5) MODE(NSECT)=5
      LVALUE(NSECT)=LI
C
C     READ BACKGROUND CROSS SECTIONS.
C
      CALL LISTIO(RESTAB(1,LOW),NRS6X)
C
C     FOR CONVENIENCE ALWAYS ALLOW ROOM FOR 3 SETS OF BACKGROUND
C     CROSS SECTIONS AND POSITION BACKGROUND CROSS SECTIONS TO
C     STANDARD POSITIONS (TOTAL, FISSION AND CAPTURE, IN THAT ORDER).
C
      LHI=LOW+2
      IF(NRS.EQ.3) GO TO 220
      GO TO (30,50,90,110,140,170,210),LI
C-----ONLY TOTAL. ZERO OUT FISSION AND CAPTURE.
   30 LOWP1=LOW+1
      DO 40 JR=LOWP1,LHI
      DO 40 K=1,6
   40 RESTAB(K,JR)=0.0
      GO TO 220
C-----ONLY FISSION. IF ONLY ONE SET OF BACKGROUNDS MOVE FISSION TO
C-----SECOND LOCATION.
   50 IF(NRS.GT.1) GO TO 70
      LOWP1=LOW+1
      DO 60 K=1,6
   60 RESTAB(K,LOWP1)=RESTAB(K,LOW)
C-----ZERO OUT TOTAL AND CAPTURE.
   70 DO 80 JR=LOW,LHI,2
      DO 80 K=1,6
   80 RESTAB(K,JR)=0.0
      GO TO 220
C-----TOTAL AND FISSION. ZERO OUT CAPTURE.
   90 DO 100 K=1,6
  100 RESTAB(K,LHI)=0.0
      GO TO 220
C-----ONLY CAPTURE. MOVE LAST SET OF BACKGROUND CROSS SECTIONS TO
C-----CAPTURE (THIRD) POSITION.
  110 DO 120 K=1,6
  120 RESTAB(K,LHI)=RESTAB(K,LOW)
C-----ZERO OUT TOTAL AND FISSION.
      LHIM1=LHI-1
      DO 130 JR=LOW,LHIM1
      DO 130 K=1,6
  130 RESTAB(K,JR)=0.0
      GO TO 220
C-----TOTAL AND CAPTURE. MOVE CAPTURE TO THIRD POSITION.
  140 LOWP1=LOW+1
      DO 150 K=1,6
  150 RESTAB(K,LHI)=RESTAB(K,LOWP1)
C-----ZERO OUT AND FISSION (SECOND POSITION).
      LHIM1=LHI-1
      DO 160 K=1,6
  160 RESTAB(K,LOWP1)=0.0
      GO TO 220
C-----FISSION AND CAPTURE. MOVE BOTH BACK ONE POSITION.
  170 LOWP1=LOW+1
      DO 180 K=1,6
  180 RESTAB(K,LHI)=RESTAB(K,LOWP1)
      DO 190 K=1,6
  190 RESTAB(K,LOWP1)=RESTAB(K,LOW)
C-----ZERO OUT AND TOTAL (FIRST POSITION).
      DO 200 K=1,6
  200 RESTAB(K,LOW)=0.0
      GO TO 220
C-----TOTAL, FISSION AND CAPTURE. NOTHING TO D0.
  210 CONTINUE
C
C     LIST BACKGROUND CROSS SECTIONS IN STANDARD POSITION.
C
  220 IF(IMEDIT.NE.0) WRITE(OUTP,330)
      INDEX=1
      DO 250 JR=LOW,LHI
      II3=3
      DO 240 I=1,6
C-----IF FISSION BACKGROUND IS NOT ZERO TURN ON FISSILE FLAG.
      IF(INDEX.NE.2) GO TO 230
      IF(DABS(RESTAB(I,JR)).NE.0.0) LFWX=1
  230 IF(IMEDIT.EQ.0) GO TO 240
      CALL OUT9(RESTAB(I,JR),FIELD(1,I),II3)
  240 II3=0
      IF(IMEDIT.EQ.0) GO TO 250
      WRITE(OUTP,340) (REACTR(J,INDEX),J=1,2),
     1 ((FIELD(M,I),M=1,11),I=1,6)
  250 INDEX=INDEX+1
C
C     L STATE LOOP.
C
      DO 300 IL=1,NLS
C-----READ L VALUE AND NUMBER OF J STATES.
      CALL CARDIO(XN,XN,LNOW,L2,NJS,N2)
      IF(IMEDIT.NE.0) WRITE(OUTP,380) LNOW,NJS
C
C     J STATE LOOP.
C
      DO 300 IJ=1,NJS
C-----READ J VALUE AND NUMBER OF RESONANCES
      CALL CARDIO(AJ,C2,L1,L2,NRS12,NRS)
      IF(IMEDIT.EQ.0) GO TO 260
      WRITE(OUTP,390) AJ,NRS
C-----EACH ADLER-ADLER RESONANCE WILL OCCUPY 2 RESONANCE POSITIONS
C-----IN TABLE (I.E. 12 PARAMETERS PER RESONANCE).
  260 NRS=2*NRS
C-----INCREMENT INDICES TO RESONANCE PARAMETER TABLE.
      CALL LIMIT1(2)
C-----READ RESONANCE PARAMETERS.
      CALL LISPAR(LOW,NRS12,12)
      IF(IMEDIT.NE.0) WRITE(OUTP,350)
      DO 290 JR=LOW,LHI,2
C-----IF FISSION WIDTHS ARE NOT ZERO TURN ON FISSILE FLAG (ONLY TEST
C-----SYMMETRICAL AND ASYMMETRICAL WIDTHS).
      IF(DABS(RESTAB(1,JR+1)).NE.0.0.OR.DABS(RESTAB(2,JR+1)).NE.0.0)
     1 LFWX=1
C-----LIST RESONANCE PARAMETERS (12 RESONANCE PARAMETERS ARE STORED IN
C-----2 SUCCESSIVE LOCATIONS OF THE RESONANCE TABLE, CORRESPONDING TO
C-----THE INDICES JR AND JR+1).
      IF(IMEDIT.EQ.0) GO TO 290
      JRR=JR
      II=0
      DO 280 LOOPAA=1,3
      DO 270 I=1,4
      II=II+1
      IF(II.LE.6) GO TO 270
      II=1
      JRR=JRR+1
  270 CALL OUT9(RESTAB(II,JRR),FIELD(1,I),0)
  280 WRITE(OUTP,360)
     1 REACTR(1,LOOPAA),REACTR(2,LOOPAA),((FIELD(M,I),M=1,11),I=1,4)
      WRITE(OUTP,370)
  290 CONTINUE
C-----END OF L AND J STATE LOOPS.
  300 CONTINUE
C-----DEFINE UPPER INDEX TO RESONANCE TABLE.
      NHIGH(NSECT)=LHI
      RETURN
  310 FORMAT(1X,78('=')/
     1       ' Nuclear Spin of Target---------------',11A1/
     2       ' Effective Scattering Radius (A+)-----',11A1/
     3       ' Number of L Values-------------------',I11)
  320 FORMAT(1X,78('=')/
     1       ' Atomic Weight Ratio of Isotope-------',11A1/
     2       ' LI-----------------------------------',I11/
     3       ' Number of Background Sets------------',I11)
  330 FORMAT(1X,78('=')/' Adler-Adler Resonance Parameters'/1X,78('=')/
     1 ' Background'/1X,78('=')/' Reaction',
     1 '         A1         A2         A3         A4         B1',
     2 '         B2'/1X,78('='))
  340 FORMAT(1X,2A4,66A1)
  350 FORMAT(1X,78('=')/' Resonance Parameters'/1X,78('=')/' Reaction',
     1  '  Resonance Half-Width  Symmetric Asymmetric'/
     2  9X,'   Energy     (eV)      Parameter Parameter'/
     3  9X,'    (eV)                  (GRT)     (GIT)  '/1X,78('='))
  360 FORMAT(1X,2A4,44A1)
  370 FORMAT(1X,78('='))
  380 FORMAT(1X,78('=')/
     1       ' L Value------------------------------',I11/
     2       ' Number of J Values-------------------',I11)
  390 FORMAT(' J Value------------------------------',5X,F6.2/
     3       ' Number of Resonances-----------------',I11)
      END
      SUBROUTINE RDHRF
C=======================================================================
C
C     READ HYBRID R-FUNCTION DATA FOR ONE ENERGY RANGE.
C     EACH (L,S,J) STATE WILL BE TREATED AS A SEPARATE SECTION.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 FIELD
      CHARACTER*4 MTHOL,ANSWER
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/LEADER/C1,C2,L1,L2,N1,N2,MAT,MF,MT
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/NAPNRO/NRO,NAPS
      COMMON/RANGER/LOW,LHI
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/INDATD/ELX,EHX
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/HRFTAB/QHRF(4),MTHRF(4),NHRF
      COMMON/FIELDC/FIELD(11,12)
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION MTOK(9),MTHOL(3,10),ANSWER(3,2)
      DATA ANSWER/' (No',')   ',
     1 ' (Ye','s)  ',
     2 ' (ER','ROR)'/
C-----DEFINE ALLOWED INELASTIC AND CHARGED PARTICLE MT NUMBERS.
      DATA MTOK/51,52,53,54,103,104,105,106,107/
      DATA MTHOL/
     1 'Inel','asti','c   ',
     2 'Inel','asti','c   ',
     3 'Inel','asti','c   ',
     4 'Inel','asti','c   ',
     5 'n,p ','    ','    ',
     6 'n,d ','    ','    ',
     7 'n,t ','    ','    ',
     8 'n,He','-3  ','    ',
     9 'n,Al','pha ','    ','NOT ','Allo','wed '/
      DATA SFC/0.0D+00/
      DATA C3/1.23D-01/
      DATA C5/8.0D-02/
C-----UPDATED NOV. 12, 1998 AS PER CSEWG SUBCOMMITTEE RECOMMENDATION
      DATA C4/1.008664904D+00/
      DATA C6/2.196807122623D-03/
C-----DEFINE TARGET SPIN, SPIN UP SCATTERING RADIUS AND NUMBER OF L
C-----STATES.
      CALL CARDIO(SPI,C2,L1,L2,NLS,N2)
      IF(IMEDIT.EQ.0) GO TO 10
      CALL OUT9(SPI,FIELD(1,1),0)
      WRITE(OUTP,230) (FIELD(M,1),M=1,11),NLS
      WRITE(*   ,230) (FIELD(M,1),M=1,11),NLS
C-----DEFINE NUMBER OF EACH KIND OF REACTION.
   10 CALL CARDIO(C1,C2,NGRE,NFRE,NIRE,NCRE)
      IF(IMEDIT.NE.0) WRITE(OUTP,240) NGRE,NFRE,NIRE,NCRE
      IF(IMEDIT.NE.0) WRITE(*   ,240) NGRE,NFRE,NIRE,NCRE
C-----CHECK FOR ALLOWABLE VALUES.
      IF(NGRE.LT.0.OR.NGRE.GT.1) GO TO 20
      IF(NFRE.LT.0.OR.NFRE.GT.1) GO TO 20
      IF(NIRE.LT.0.OR.NIRE.GT.4) GO TO 20
      IF(NCRE.LT.0.OR.NCRE.GT.4) GO TO 20
      NHRF=NIRE+NCRE
      IF(NHRF.LE.4) GO TO 30
   20 WRITE(OUTP,250)
      WRITE(*   ,250)
      CALL ENDIT
C-----DEFINE KIND OF REACTION.
   30 CALL CARDIO(C1,C2,MTHRF(1),MTHRF(2),MTHRF(3),MTHRF(4))
C-----READ Q-VALUES.
      CALL CARDIO(C1,C2,L1,L2,N1,N2)
      CALL LISTIO(QHRF,N1)
C-----LIST MT NUMBERS AND Q-VALUES.
      IF(NHRF.LE.0) GO TO 80
      IF(IMEDIT.NE.0) WRITE(OUTP,260)
C-----CHECK AND LIST MT NUMBERS AND Q-VALUES.
      IERR=0
      DO 60 I=1,NHRF
      DO 40 J=1,9
      IF(MTHRF(I).EQ.MTOK(J)) GO TO 50
   40 CONTINUE
      J=10
      IERR=1
C-----TEMPORARILY ONLY ALLOW INELASTIC REACTIONS.
   50 IF(J.GT.4.AND.J.LE.9) IERR=2
      CALL OUT9(QHRF(I),FIELD(1,1),0)
      IF(IMEDIT.NE.0) WRITE(OUTP,270) MTHRF(I),
     1 (FIELD(M,1),M=1,11),(MTHOL(K,J),K=1,3)
C-----FROM HERE ON TREAT ALL INELASTIC AS THE SAME MT NUMBER (MT=51).
      IF(MTHRF(I).GE.51.AND.MTHRF(I).LE.54) MTHRF(I)=51
   60 CONTINUE
C
C     TERMINATED EXECUTION IF REACTION IS NOT ALLOWED.
C
      IF(IERR.EQ.0) GO TO 80
      IF(IERR.EQ.2) GO TO 70
C-----ILLEGAL MT NUMBER.
      WRITE(OUTP,280)
      WRITE(*   ,280)
      CALL ENDIT
C-----CHARGED PARTICLE REACTION (TEMPORARILY NOT ALLOWED)
   70 WRITE(OUTP,290)
      WRITE(*   ,290)
      CALL ENDIT
C
C     L STATE LOOP.
C
   80 DO 220 IL=1,NLS
C-----DEFINE ATOMIC WEIGHT RATIO, L VALUE AND NUMBER OF S-VALUES
C-----(CHANNEL SPINS).
      CALL CARDIO(AWRI,C1,LNOW,L2,NSS,N2)
C-----DEFINE ATOMIC WEIGHT DEPENDENT QUANTITIES.
      AWRICM=AWRI/(AWRI+ONE)
C-----INITIALIZE CHANNEL RADIUS TO CALCULATED VALUE (MAY BE CHANGED
C-----LATER AFTER SCATTERING RADIUS IS READ).
      APX=C3*((C4*AWRI)**(ONE/THREE))+C5
      AK1=C6*AWRICM
      AK2=AK1*AK1
      IF(IMEDIT.EQ.0) GO TO 90
      CALL OUT9(AWRI,FIELD(1,1),0)
      WRITE(OUTP,300) (FIELD(M,1),M=1,11),LNOW,NSS
C
C     CONSTRUCT TABLE OF PERMISSIBLE J-VALUES
C     (THIS TABLE WILL BE USED TO CHECK FOR MISSING OR ILLEGAL J-VALUES)
C
   90 CALL SETJ(LNOW)
C
C     S-VALUE LOOP.
C
      DO 210 IS=1,NSS
C-----DEFINE S-VALUE AND NUMBER OF J-VALUES.
      CALL CARDIO(AS,C2,L1,L2,NJS,N2)
      IF(IMEDIT.EQ.0) GO TO 100
      CALL OUT9(AS,FIELD(1,1),0)
      WRITE(OUTP,310) (FIELD(M,1),M=1,11),NJS
C
C     J STATE LOOP.
C
  100 DO 210 IJ=1,NJS
C-----DEFINE J-VALUE, CHANNEL RADIUS, FLAGS FOR BACKGROUND AND OPTICAL
C-----MODEL PHASE SHIFTS AND THE NUMBER OF RESONANCES.
      CALL CARDIO(AJ,AC,LBK,LPS,NLSJ12,NLSJ)
C-----CHECK FOR LEGAL J-VALUE AND DEFINE STATISTICAL WEIGHT.
      CALL CHECKJ(AJ,LNOW,GJ,2)
C-----IF REQUESTED SET CHANNEL RADIUS EQUAL TO SCATTERING RADIUS.
      IF(NAPS.NE.0) APX=AC
      LBKIN=LBK+1
      IF(LBK.LT.0.OR.LBK.GT.1) LBKIN=3
      LPSIN=LPS+1
      IF(LPS.LT.0.OR.LPS.GT.1) LPSIN=3
      IF(IMEDIT.EQ.0) GO TO 110
      CALL OUT9(AJ,FIELD(1,1),0)
      CALL OUT9(AC,FIELD(1,2),0)
      WRITE(OUTP,320) ((FIELD(M,I),M=1,11),I=1,2),LBK,
     1 ANSWER(1,LBKIN),ANSWER(2,LBKIN),LPS,ANSWER(1,LPSIN),
     2 ANSWER(2,LPSIN),NLSJ
C-----CHECK FOR ILLEGAL BACKGROUND OR OPTICAL MODEL PHASE SHIFT FLAG.
  110 IF(LBKIN.NE.2.AND.LPSIN.NE.2) GO TO 120
      WRITE(OUTP,330)
      CALL ENDIT
C-----TEMPORARILY DO NOT ALLOW TABULATED BACKGROUND OR OPTICAL MODEL
C-----PHASE SHIFT.
  120 IF(LBK.EQ.0.AND.LPS.EQ.0) GO TO 130
      WRITE(OUTP,340)
      CALL ENDIT
C-----ALLOW SPACE FOR 12 PARAMETERS PER RESONANCE.
  130 NRS=2*NLSJ
C-----INCREMENT SECTION COUNT AND INDICES TO RESONANCE PARAMETER TABLE.
      CALL LIMIT1(1)
C-----DEFINE ALL PARAMETERS FOR A SECTION.
      BETA(NSECT)=PI*ABN/AK2
      RHOX2(NSECT)=APX*APX*AK2
      RHOP1(NSECT)=AC*AK1
      EL(NSECT)=ELX
      EH(NSECT)=EHX
      GJTAB(NSECT)=GJ
      NLOW(NSECT)=LOW
      NHIGH(NSECT)=LHI
      LVALUE(NSECT)=LNOW
      LRXTAB(NSECT)=NHRF
      MODE(NSECT)=7
C-----DEFINE EXCITATION ENERGIES.
      IF(NHRF.LE.0) GO TO 150
      DO 140 I=1,NHRF
  140 EXCITE(I,NSECT)=QHRF(I)/AWRICM
C
C     READ RESONANCE PARAMETERS (12 PER RESONANCE).
C
C     (1) ENERGY
C     (2) NEUTRON WIDTH
C     (3) CAPTURE WIDTH
C     (4) FISSION WIDTH
C     (5) FIRST COMPETITIVE WIDTH
C     (6) SECOND COMPETITIVE WIDTH
C     (7) THIRD COMPETITIVE WIDTH
C     (8) FOURTH COMPETITIVE WIDTH
C     (9) FIRST EXIT CHANNEL L-VALUE
C    (10) SECOND EXIT CHANNEL L-VALUE
C    (11) THIRD EXIT CHANNEL L-VALUE
C    (12) FOURTH EXIT CHANNEL L-VALUE
C
C     SOME OF THESE PARAMETERS WILL BE CONVERTED TO THE FORM REQUIRED
C     FOR CALCULATIONS.
C
C     (2) NEUTRON WIDTH DIVIDED BY PENETRATION FACTOR
C   (5-8) INELASTIC WIDTH DIVIDED BY PENETRATION FACTOR
C
  150 CALL LISPAR(LOW,NLSJ12,12)
      IF(IMEDIT.NE.0) WRITE(OUTP,350)
      DO 200 JR=LOW,LHI,2
      JRP1=JR+1
C-----LIST RESONANCE PARAMETERS.
      IF(IMEDIT.EQ.0) GO TO 170
      LOUT1=RESTAB(3,JRP1)
      LOUT2=RESTAB(4,JRP1)
      LOUT3=RESTAB(5,JRP1)
      LOUT4=RESTAB(6,JRP1)
      II3=3
      DO 160 I=1,6
      CALL OUT9(RESTAB(I,  JR),FIELD(1,I),II3)
  160 II3=0
      CALL OUT9(RESTAB(1,JRP1),FIELD(1,7),0)
      CALL OUT9(RESTAB(2,JRP1),FIELD(1,8),0)
      WRITE(OUTP,360) ((FIELD(M,I),M=1,11),I=1,8),LOUT1,LOUT2,
     1 LOUT3,LOUT4
C-----DEFINE NEUTRON WIDTH DIVIDED BY PENETRATION FACTOR.
  170 RHO2X=DABS(RESTAB(1,JR))*RHOX2(NSECT)
      CALL FACTS2(LVALUE(NSECT),RHO2X,SHIFT2(JR),PENFAC)
      RESTAB(2,JR)=RESTAB(2,JR)/PENFAC
C-----DEFINE INELASTIC WIDTHS DIVIDED BY PENETRATION FACTOR.
      IF(NHRF.LE.0) GO TO 200
C-----INITIALIZE INDICES TO WIDTH AND EXIT CHANNEL L-VALUE.
      JRX1=JR
      JJ1=4
      JRX2=JR+1
      JJ2=2
      DO 190 IHRF=1,NHRF
      JJ1=JJ1+1
      JJ2=JJ2+1
      IF(JJ1.LE.6) GO TO 180
      JRX1=JRX2
      JJ1=1
  180 IF(MTHRF(IHRF).NE.51) GO TO 190
      RHOC2=DABS(RESTAB(1,JR)+EXCITE(IHRF,NSECT))*RHOX2(NSECT)
      LCOM=RESTAB(JJ2,JRX2)
      CALL FACTS2(LCOM,RHOC2,SFC,PENFAC)
      RESTAB(JJ1,JRX1)=RESTAB(JJ1,JRX1)/PENFAC
  190 CONTINUE
C-----END OF RESONANCE LOOP.
  200 CONTINUE
C-----END OF S AND J LOOPS.
  210 CONTINUE
C
C     PRINT WARNING IF ANY J SEQUENCES ARE MISSING AND ADD MISSING J
C     SEQUENCE WITH NO RESONANCES IN ORDER TO ALLOW POTENTIAL
C     SCATTERING TO BE CORRECTLY CALCULATED.
C
      CALL ADDJ(LNOW)
C-----END OF L LOOP.
  220 CONTINUE
      RETURN
  230 FORMAT(1X,78('=')/
     1       ' Nuclear Spin of Target---------------',11A1/
     2       ' Number of L Values-------------------',I11)
  240 FORMAT(1X,78('=')/
     1       ' Number of Capture Reactions----------',I11,' (0 TO 1)'/
     2       ' Number of Fission Reactions----------',I11,' (0 TO 1)'/
     3       ' Number of Inelastic Reactions--------',I11,' (0 TO 4)'/
     3       ' Number of Charged Particle Reactions-',I11,' (0 TO 4)')
  250 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Illegal Number of Reactions. Execution Terminated.')
  260 FORMAT(1X,78('='))
  270 FORMAT(' MT and Q-Value (eV)------------------',I11,11A1,1X,3A4)
  280 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Illegal MT Number. Execution Terminated.')
  290 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Currently Program Does NOT Allow Charged Particle Reactions.'/
     2 ' Execution Terminated.')
  300 FORMAT(1X,78('=')/
     1       ' Atomic Weight Ratio of Isotope-------',11A1/
     2       ' L-Value------------------------------',I11/
     3       ' Number of S-Values (Channel Spin)----',I11)
  310 FORMAT(1X,78('=')/
     1       ' S-Value------------------------------',11A1/
     2       ' Number of J-Values-------------------',I11)
  320 FORMAT(1X,78('=')/
     1       ' J-Value------------------------------',11A1/
     2       ' Channel Radius (10E-12 cm)-----------',11A1/
     3       ' Background Tabulated-----------------',I11,2A4/
     4       ' Optical Model Phase SshiftTabulated--',I11,2A4/
     5       ' Number of Resonances-----------------',I11)
  330 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Background and Optical Phase Shift Flags MUST be 0 or 1.'/
     2 ' Execution Terminated.')
  340 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Currently Program Does NOT Allow Tabulated Background or'/
     2 ' Optical Phase Shift. Execution Terminated.')
  350 FORMAT(1X,112('=')/' Hybrid R-Function Resonance Parameters'/
     1 1X,112('=')/
     2 '                                              Competitive',
     3 ' Widths                          Exit Channel'/
     2 '      Energy    Neutron    Capture    Fission Reaction-1',
     4 ' Reaction-2 Reaction-3 Reaction-4 L-Values'/
     6 '        (eV)       (eV)       (eV)       (eV)       (eV)',
     7 '       (eV)       (eV)       (eV) L-1 L-2 L-3 L-4'/
     8 1X,112('='))
  360 FORMAT(1X,88A1,4I4)
      END
      SUBROUTINE RDGRM
C=======================================================================
C
C     GENERAL R-MATRIX TREATMENT IS NOT YET INCLUDED.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      WRITE(OUTP,10)
      WRITE(*   ,10)
      CALL ENDIT
   10 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' General R-Matrix Parameters are NOT Yet Treated by this'/
     2 ' Program....Execution Terminated.'/1X,78('=')/
     3 ' In Order to Demonstrate that this Formalism is Generally'/
     4 ' Useful the Author of this Code Asks that Evaluators Send'/
     5 ' Him Evaluations Using this Formalism and Their Calculated'/
     6 ' Cross Sections for Comparison.'/1X,78('=')/
     7 ' Until Parameters and Calculated Cross Sections Using this'/
     8 ' Formalism are Available it is NOT Possible to Verify the'/
     9 ' Accuracy of Any Results Calculated by this Code.'/1X,78('='))
      END
      SUBROUTINE RDUR
C=======================================================================
C
C     READ UNRESOLVED RESONANCE PARAMETERS. THIS ROUTINE HANDLES ALL
C     POSSIBLE REPRESENTATIONS OF UNRESOLVED PARAMETERS,
C     (1) NO FISSION WIDTHS, ALL PARAMETERS ENERGY INDEPENDENT
C     (2) FISSION WIDTHS GIVEN, ONLY FISSION WIDTHS ENERGY DEPENDENT
C     (3) FISSION WIDTHS GIVEN, ALL PARAMETERS ENERGY DEPENDENT
C
C     FOR SIMPLICITY IN LATER CALCULATIONS ALL INPUT REPRESENTATIONS
C     ARE INTERNALLY CONVERTED TO THE ALL PARAMETERS ENERGY DEPENDENT
C     FORM TREATING EACH (L, J) STATE AS A SEPARATE SECTION.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 FIELD
      CHARACTER*4 TYPINT
      COMMON/LEADER/C1,C2,L1,L2,N1,N2,MAT,MF,MT
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/NAPNRO/NRO,NAPS
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/RANGER/LOW,LHI
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/INDATD/ELX,EHX
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/WHATZA/IZANOW,MATNOW,TEMP3,IVERSE,INT45
      COMMON/FISSY/LFWX,LFI,MT451
      COMMON/LRUNOW/LRUIN
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON/PARTN/EPART1,EPART2,NPART
      COMMON/FIELDC/FIELD(11,12)
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION DUMSET(6),DUMBO(6),TYPINT(4,6)
      EQUIVALENCE (DUMSET(1),DX),(DUMSET(2),AJ),(DUMSET(3),AMUN),
     1 (DUMSET(4),GNO),(DUMSET(5),GG)
      DATA TYPINT/
     1 '(His','togr','am) ','    ',
     2 '(Lin',' X-L','in Y',')   ',
     3 '(Log',' X-L','in Y',')   ',
     4 '(Lin',' X-L','og Y',')   ',
     5 '(Log',' X-L','og Y',')   ',
     6 '(ERR','OR) ','    ','    '/
      DATA DUMSET/6*0.0D+00/
      DATA DUMBO/6*0.0D+00/
      DATA C3/1.23D-01/
      DATA C5/8.0D-02/
C-----UPDATED NOV. 12, 1998 AS PER CSEWG SUBCOMMITTEE RECOMMENDATION
      DATA C4/1.008664904D+00/
      DATA C6/2.196807122623D-03/
C-----PRINT TITLE FOR OUTPUT LISTING.
      IF(IMEDIT.EQ.0) GO TO 10
      IF(LRF.EQ.1.AND.LFW.EQ.0) WRITE(OUTP,270)
      IF(LRF.EQ.1.AND.LFW.EQ.1) WRITE(OUTP,280)
      IF(LRF.EQ.2) WRITE(OUTP,290)
      IF(LRF.EQ.1.AND.LFW.EQ.0) WRITE(*   ,270)
      IF(LRF.EQ.1.AND.LFW.EQ.1) WRITE(*   ,280)
      IF(LRF.EQ.2) WRITE(*   ,290)
C
C     READ BEGINNING OF EACH TYPE OF REPRESENTATION AND DEFINE ALL
C     COMMON TERMS.
C
C-----DEFINE TARGET SPIN, SPIN UP SCATTERING RADIUS AND,
C-----(LRF=1, LFW=1) - NUMBERS OF ENERGIES AT WHICH FISSION WIDTHS ARE
C-----                 GIVEN AND NUMBER OF L VALUES, OR
C-----(OTHERWISE)    - NUMBER OF L VALUES.
C
C     FOR ENDF/B-VI FORMATS CHECK L1 FIELD (LSSF) TO SEE IF THE
C     UNRESOLVED INFINITELY DILUTE CROSS SECTION HAS ALREADY BEEN
C     INCLUDED IN THE FILE 3 CROSS SECTIONS. IF IT HAS CHANGE LRUIN
C     TO EFFECTIVELY IGNORE SECTION WHILE CALCULATING RESONANCE
C     CONTRIBUTION TO THE FILE 3 CROSS SECTIONS.
C
   10 CALL CARDI(SPI,AP,LSSF,L2,NE,NLS)
C-----FOR ENDF/B-VI SAVE LSSF IS READ AND CHANGE TO =1 FOR OUTPUT
C-----TO INDICATE RESONANCE CONTRIBUTION IS ALREADY INCLUDED IN
C-----THE FILE 3 CROSS SECTIONS (AFTER THIS CALCULATION).
      IF(IVERSE.NE.6) GO TO 20
      LSSFIN=LSSF
C-----DO NOT CHANGE LSSF IF ONLY PROCESSING A PORTION OF THE RESONANCE
C-----REGION.
      IF(NPART.NE.2) LSSF=1
   20 CALL CARDO(SPI,AP,LSSF,L2,NE,NLS)
      IF(LFW.NE.1.OR.LRF.NE.1) NLS=NE
C-----LIST SPIN AND SPIN UP SCATTERING.
      IF(IMEDIT.EQ.0) GO TO 40
      CALL OUT9(SPI,FIELD(1,1),0)
      CALL OUT9(AP ,FIELD(1,2),0)
      WRITE(OUTP,330) ((FIELD(M,I),M=1,11),I=1,2)
      WRITE(*   ,330) ((FIELD(M,I),M=1,11),I=1,2)
C-----FOR ENDF/B-VI PRINT INTERPRETATION OF LSSF.
      IF(IVERSE.NE.6) GO TO 30
      IF(LSSFIN.EQ.0) WRITE(OUTP,310) LSSFIN
      IF(LSSFIN.EQ.1) WRITE(OUTP,320) LSSFIN
      IF(LSSFIN.EQ.0) WRITE(*   ,310) LSSFIN
      IF(LSSFIN.EQ.1) WRITE(*   ,320) LSSFIN
C-----LIST NUMBER OF L VALUES.
   30 WRITE(OUTP,340) NLS
      WRITE(*   ,340) NLS
C
C     FOR ENDF/B-VI IF LRUIN INDICATES THAT CROSS SECTIONS NOT YET
C     ADDED TO FILE 3, BUT LSSFIN INDICATES THAT THEY HAVE PRINT
C     WARNING AND CHANGE LRUIN TO IGNORE THIS SECTION.
C
   40 IF(IVERSE.NE.6.OR.LRUIN.EQ.5.OR.LSSFIN.EQ.0) GO TO 50
      WRITE(OUTP,300) LSSFIN
      WRITE(*   ,300) LSSFIN
      LRUIN=5
C
C     IF ONLY FISSION WIDTH ARE ENERGY DEPENDENT READ ENERGIES AT WHICH
C     FISSION WIDTHS ARE GIVEN.
C
   50 IF(LRF.NE.1.OR.LFW.NE.1) GO TO 70
C-----INCREMENT SECTION COUNT (ALLOWING ROOM TO INSERT THE DEGREES OF
C-----FREEDOM BEFORE THE ENERGIES).
      NRS=NE+1
      CALL LIMIT1(1)
      LOWP1=LOW+1
C-----READ ENERGIES AT WHICH FISSION WIDTHS ARE GIVEN AND MOVE THEM
C-----INTO THE 1-ST POSITION FOR EACH RESONANCE.
      JRC=(LHI-LOWP1)+1
      CALL LISTIO(ENRES(LOWP1),JRC)
      DO 60 JR1=LOWP1,LHI
      CALL NOODLE(ENRES(JR1),ZERO,ELX,EHX)
   60 RESTAB(1,JR1)=ENRES(JR1)
C-----SAVE INDEX TO FIRST ENERGY TO ALLOW COPY OF ENERGIES FOR EACH
C-----SECTION.
      LOWP1X=LOWP1
C
C     L STATE LOOP.
C
   70 DO 260 IL=1,NLS
C-----DEFINE ATOMIC WEIGHT RATIO, L VALUE AND NUMBER OF J STATES.
      CALL CARDIO(AWRI,C2,LNOW,L2,NJS,NJSX)
      IF(LRF.EQ.1.AND.LFW.EQ.0) NJS=NJSX
      IF(IMEDIT.EQ.0) GO TO 80
      CALL OUT9(AWRI,FIELD(1,1),0)
      WRITE(OUTP,350) (FIELD(M,1),M=1,11),LNOW,NJS
      WRITE(*   ,350) (FIELD(M,1),M=1,11),LNOW,NJS
C-----DEFINE COMMON PARAMETERS FOR ALL SECTIONS WITH SAME L VALUE.
C-----EITHER CALCULATE CHANNEL RADIUS OR DEFINE TO BE EQUAL TO THE
C-----SCATTERING RADIUS.
   80 IF(NAPS.NE.0) GO TO 90
      APX=C3*((C4*AWRI)**(ONE/THREE))+C5
      GO TO 100
   90 APX=AP
  100 AK1=C6*AWRI/(AWRI+ONE)
      BETAD=PI*ABN/(AK1*AK1)
      RHOX2D=(APX*AK1)**2
      RHOP1D=AP*AK1
C
C     J STATE LOOP.
C
      DO 260 IJ=1,NJS
C-----READ NEXT LINE FOR (LRF=1, LFW=1 OR LRF=2, ANY LFW...NOTHING TO
C-----READ FOR LRF=1, LFW=0).
      IF(LRF.NE.2) GO TO 110
C-----DEFINE J VALUE, INTERPOLATION LAW AND NUMBER OF ENERGIES.
      CALL CARDIO(AJ,C2,INT,L2,NET6P6,NE)
C-----DEFINE THE NUMBER OF RESONANCE LOCATIONS WHICH WILL BE USED
C-----ALLOWING FOR THE PRECEDING DEGREES OF FREEDOM.
      NRS=NE+1
      GO TO 130
  110 IF(LFW.EQ.0) GO TO 120
C-----DEFINE THE NUMBER OF DEGREES OF FREEDOM FOR FISSION (ASSUME THE
C-----SAME NUMBER OF ENERGIES, I.E. NEED NOT RE-DEFINE NE OR NRS AT
C-----THIS POINT).
      CALL CARDIO(C1,C2,L1,MUF,NEP6,N2)
      IF(IL.EQ.1.AND.IJ.EQ.1) GO TO 140
      GO TO 130
C-----INDICATE 3 LOCATIONS PER (L, J) STATE (FIRST LOCATION CONTAINS
C-----PARAMETERS AND DEGREES OF FREEDOM, THE SECOND AND THIRD CONTAIN
C-----ENERGY POINTS AT THE LOWER AND UPPER ENERGY LIMITS OF UNRESOLVED
C-----REGION.
  120 NRS=3
C-----INCREMENT SECTION COUNT AND INDICES TO RESONANCE PARAMETER TABLE
  130 CALL LIMIT1(1)
  140 LOWP1=LOW+1
C-----DEFINE ALL PARAMETERS FOR A SECTION.
      BETA(NSECT)=BETAD
      RHOX2(NSECT)=RHOX2D
      RHOP1(NSECT)=RHOP1D
      EL(NSECT)=ELX
      EH(NSECT)=EHX
      NLOW(NSECT)=LOW
      NHIGH(NSECT)=LHI
      LVALUE(NSECT)=LNOW
      MODE(NSECT)=8
C
C     SELECT PARAMETER REPRESENTATION.
C
C-----ARE ALL WIDTHS ENERGY DEPENDENT.
      IF(LRF.EQ.2) GO TO 200
C-----ARE FISSION WIDTHS GIVEN.
      IF(LFW.NE.0) GO TO 160
C
C     ALL PARAMETERS ARE ENERGY INDEPENDENT. CONVERT TO ENERGY DEPENDENT
C     FORM USING INTERPOLATION LAW 1 (HISTOGRAM).
C
C-----READ LEVEL SPACING, J, NEUTRON DEGREES OF FREEDOM, NEUTRON AND
C-----CAPTURE WIDTHS (SEE, ABOVE EQUIVALENCE TO MEMBERS OF DUMSET).
      CALL LISTIO(DUMSET,6)
C-----DEFINE INTERPOLATION LAW TO BE HISTOGRAM.
      INT=1
C-----DEFINE NUMBER OF DEGREES OF FREEDOM FOR COMPETITION, CAPTURE
C-----AND FISSION (10) AND ELASTIC (AS INPUT).
      RESTAB(3,LOW)=10.0
      RESTAB(4,LOW)=AMUN
      RESTAB(5,LOW)=10.0
      RESTAB(6,LOW)=10.0
C-----COPY PARAMETERS AS CONSTANT BETWEEN LOWER AND UPPER ENERGY LIMITS
C-----OF THE UNRESOLVED REGION.
      ENRES(LOWP1)=ELX
      ENRES(LHI)=EHX
      RESTAB(1,LOWP1)=ELX
      RESTAB(1,LHI)=EHX
      DO 150 I=LOWP1,LHI
      RESTAB(2,I)=DX
      RESTAB(3,I)=0.0
      RESTAB(4,I)=GNO
      RESTAB(5,I)=GG
  150 RESTAB(6,I)=0.0
      GO TO 210
C
C     ENERGY DEPENDENT FISSION WIDTHS, ALL OTHER PARAMETERS ARE ENERGY
C     INDEPENDENT. TREAT EACH (L, J) STATE AS A SECTION AND CONVERT
C     DATA TO ALL PARAMETERS ENERGY DEPENDENT FORM USING IMPLIED ENDF/B
C     VERSION DEPENDENT INTERPOLATION LAW.
C
C-----READ LEVEL SPACING, J, NEUTRON DEGREES OF FREEDOM, NEUTRON AND
C-----CAPTURE WIDTHS (SEE, ABOVE EQUIVALENCE TO MEMBERS OF DUMSET).
  160 CALL LISTIO(DUMSET,6)
C-----READ ENERGY DEPENDENT FISSION WIDTHS UP TO 6 AT A TIME AND THEN
C-----MOVE THEM INTO THE 6-TH POSITION FOR EACH RESONANCE.
      JR=LOWP1
      DO 180 JR1=LOWP1,LHI,6
      JR2=JR1+5
      IF(JR2.GT.LHI) JR2=LHI
      JR3=(JR2-JR1)+1
      CALL LISTIO(DUMBO,JR3)
      DO 170 K=1,JR3
      RESTAB(6,JR)=DUMBO(K)
  170 JR=JR+1
  180 CONTINUE
C-----DEFINE INTERPOLATION LAW BASED ON ENDF/B FORMAT VERSION (E.G.,
C-----ENDF/B-IV = LOG-LOG, ENDF/B-V = LINEAR-LINEAR).
      INT=INT45
C-----DEFINE NUMBER OF DEGREES OF FREEDOM FOR COMPETITION AND CAPTURE
C-----(10) AND ELASTIC AND FISSION (AS INPUT).
      RESTAB(3,LOW)=10.0
      RESTAB(4,LOW)=AMUN
      RESTAB(5,LOW)=10.0
      RESTAB(6,LOW)=MUF
C-----COPY ENERGIES AT WHICH FISSION WIDTHS ARE GIVEN FROM FIRST SECTION
C-----COPY SPACING, COMPETITIVE, NEUTRON AND CAPTURE WIDTHS AS CONSTANTS
      JRX=LOWP1X
      DO 190 JR=LOWP1,LHI
      ENRES(JR)=ENRES(JRX)
      RESTAB(1,JR)=RESTAB(1,JRX)
      RESTAB(2,JR)=DX
      RESTAB(3,JR)=0.0
      RESTAB(4,JR)=GNO
      RESTAB(5,JR)=GG
  190 JRX=JRX+1
      GO TO 210
C
C     ALL WIDTHS ARE ENERGY DEPENDENT.
C
C-----READ NUMBER OF DEGREES OF FREEDOM FOLLOWED BY ALL RESONANCE
C-----PARAMETERS.
  200 CALL LISTIO(RESTAB(1,LOW),6)
      CALL LISPAR(LOW+1,6*(NRS-1),6)
C
C     LIST DATA CONVERTED TO ALL PARAMETERS ENERGY DEPENDENT FORM.
C
C-----SAVE INTERPOLATION LAW AND DEFINE STATISTICAL WEIGHT (THESE 2
C-----QUANTITIES ARE SAVED IN THE 2 UNUSED LOCATIONS PRECEDING THE
C-----NUMBER OF DEGREES OF FREEDOM FOR EACH REACTION).
  210 RESTAB(1,LOW)=INT
      CALL GJWAIT(SPI,AJ,GJ)
      RESTAB(2,LOW)=GJ
C-----LIST INTERPOLATION LAW, J AND DEGREES OF FREEDOM.
      IF(IMEDIT.EQ.0) GO TO 220
      LSTINT=6
      IF(INT.GE.1.AND.INT.LE.5) LSTINT=INT
      WRITE(OUTP,360) INT,(TYPINT(I,LSTINT),I=1,4),AJ,
     1 (RESTAB(K,LOW),K=3,6)
      IF(IMEDIT.NE.2) GO TO 220
C-----IN EDIT MODE IF INTERPOLATION LAW IS INCORRECT PRINT WARNING.
      IF(LSTINT.EQ.6) WRITE(OUTP,390) INT
      GO TO 230
C-----IN CALCULATION MODE IF INTERPOLATION LAW IS INCORRECT PRINT
C-----WARNING AND TERMINATE.
  220 IF(INT.GE.1.AND.INT.LE.5) GO TO 230
      WRITE(OUTP,380) INT
      CALL ENDIT
C-----LIST PARAMETERS.
  230 DO 250 JR=LOWP1,LHI
C-----IF FISSION WIDTH IS NOT ZERO TURN ON FISSILE FLAG.
      IF(DABS(RESTAB(6,JR)).NE.0.0) LFWX=1
      IF(IMEDIT.EQ.0) GO TO 250
      II3=3
      DO 240 I=1,6
      CALL OUT9(RESTAB(I,JR),FIELD(1,I),II3)
  240 II3=0
      GAMT=RESTAB(3,JR)+RESTAB(4,JR)+RESTAB(5,JR)+RESTAB(6,JR)
      CALL OUT9(GAMT        ,FIELD(1,7),  0)
      WRITE(OUTP,370) ((FIELD(M,I),M=1,11),I=1,7)
  250 CONTINUE
C-----END OF L AND J STATE LOOPS.
  260 CONTINUE
      RETURN
  270 FORMAT(1X,78('=')/' Energy Independent Unresolved Parameters')
  280 FORMAT(1X,78('=')/' Unresolved Fission Widths Energy Dependent')
  290 FORMAT(1X,78('=')/' All Unresolved Parameters Energy Dependent')
  300 FORMAT(1X,78('=')/ 1X,7('WARNING...'),'WARNING'/
     1 ' Note, LSSF=',I2,' Indicates that the Resonance Contribution'/
     2 ' has Already been Added to the Cross Sections. This Section'/
     3 ' will be Read, but Ignored in ALL Resonance Calculations.')
  310 FORMAT(' LSSF---------------------------------',I11,
     1 ' (Add to File 3)')
  320 FORMAT(' LSSF---------------------------------',I11,
     1 ' (Included in File 3)')
  330 FORMAT(1X,78('=')/
     1       ' Nuclear Spin of Target---------------',11A1/
     2       ' Effective Scattering Radius (A+)-----',11A1)
  340 FORMAT(' Number of L Values-------------------',I11)
  350 FORMAT(1X,78('=')/
     1       ' Atomic Weight Ratio of Isotope-------',11A1/
     2       ' L Value------------------------------',I11/
     3       ' Number of J Values-------------------',I11)
  360 FORMAT(1X,78('=')/32X,' Degrees of Freedom'/1X,78('=')/
     1 '   Interpolation  J Value  Competition    Neutron   Capture ',
     2 '    Fission'/7X,' Law'/1X,78('=')/I2,1X,3A4,A1,
     3 F9.2,6X,F6.2,1X,3(5X,F6.2)/
     3 1X,78('=')/' Resonance Parameters'/1X,78('=')/'      Energy',
     3 '     Level Competition    Neutron    Capture    Fission',
     4 '      Total'/
     5 12X,'    Spacing',5(6X,'Width')/1X,7(7X,'(eV)')/1X,78('='))
  370 FORMAT(1X,77A1)
  380 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Unresolved Interpolation Law=',I5,
     2 ' (MUST be 1 to 5). Cannot Interpolate Unresolved Data.'/
     3 ' Execution Terminated'/1X,78('='))
  390 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Unresolved Interpolation Law=',I5,
     2 ' (MUST be 1 to 5). Cannot Interpolate Unresolved Data.'/
     3 ' Correct Evaluated Data Before Using it for Calculations.'/
     4 ' If Data is NOT Corrected this Program will Abort During',
     5 ' Calculations.'/' Execution Terminated'/1X,78('='))
      END
      SUBROUTINE LIMIT1(IPATH)
C=======================================================================
C
C     CORE ALLOCATION.
C
C     INCREMENT SECTION COUNT AND LOWER AND/OR UPPER INDICES TO
C     RESONANCE PARAMETER TABLE.
C
C     IF AVAILABLE CORE ALLOCATION IS EXCEEDED TERMINATE UNLESS PROGRAM
C     IS IN THE EDIT MODE.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE,ADDSEC,ADDRES
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/RANGER/LOW,LHI
      COMMON/MAXIE/MAXSEC,MAXRES,MAXNOD,NEDSEC,NEDRES,NEDNOD
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      DATA ADDSEC/0/
      DATA ADDRES/0/
C-----SELECT PATH.
      IF(IPATH.EQ.2) GO TO 20
C-----INCREMENT SECTION COUNT AND INSURE THAT CORE ALLOCATION WILL NOT
C-----BE EXCEEDED.
      NSECT=NSECT+1
      IF((NSECT+ADDSEC).GT.NEDSEC) NEDSEC=NSECT+ADDSEC
      IF(NSECT.LE.MAXSEC) GO TO 20
C-----AVAILABLE CORE EXCEEDED. TERMINATE UNLESS IN EDIT MODE.
      IF(IMEDIT.NE.2) GO TO 10
      ADDSEC=MAXSEC
      NSECT=1
      GO TO 20
   10 WRITE(OUTP,50) MAXSEC
      WRITE(*   ,50) MAXSEC
      CALL ENDIT
C
C     INCREMENT LOWER AND UPPER INDICES TO RESONANCE PARAMETER TABLE.
C     PARAMETER TABLE.
C
C-----DEFINE INDICES FOR NEXT SET OF RESONANCES TO READ AND INSURE THAT
C-----CORE ALLOCATION WILL NOT BE EXCEEDED.
   20 LOW=LHI+1
      LHI=LHI+NRS
      IF((LHI+ADDRES).GT.NEDRES) NEDRES=LHI+ADDRES
      IF(LHI.LE.MAXRES) GO TO 40
C-----AVAILABLE CORE EXCEEDED. TERMINATE UNLESS IN EDIT MODE.
      IF(IMEDIT.NE.2) GO TO 30
      ADDRES=ADDRES+(LOW-1)
      LOW=1
      LHI=NRS
      GO TO 40
   30 WRITE(OUTP,60) MAXRES
      WRITE(*   ,60) MAXRES
      CALL ENDIT
   40 RETURN
   50 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' More than',I6,' Sections'/
     2 ' Re-Run Program in Edit Mode to Determine Memory Requirements'/
     3 1X,78('=')/' Execution Terminated'/1X,78('='))
   60 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' More than',I6,' Resonances'/
     2 ' Re-Run Program in Edit Mode to Determine Memory Requirements'/
     3 1X,78('=')/' Execution Terminated'/1X,78('='))
      END
      SUBROUTINE SIGMA(E,SIGNOW)
C=======================================================================
C
C     CALCULATE CONTRIBUTION FROM ALL SECTIONS.
C
C     NOTE - THE ALGORITHMS FOR ALL POSSIBLE TYPES OF RESONANCE
C            PARAMETERS HAVE BEEN WRITTEN IN A FORM TO REMOVE A
C            COMMON FACTOR OF,
C
C            PI*ABUNDANCE/(LAMBDA**2)
C
C            AFTER CALCULATING THE CONTRIBUTION FROM ANY TYPE OF
C            RESONANCE PARAMETER THIS FACTOR IS USED TO MULTIPLY
C            THE RESULT TO DEFINE THE FINAL CROSS SECTION.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/TABRHO/ERHOTB(500),RHOTAB(500),APTAB(500),NRHO(200),
     1 NBTRHO(200),INTRHO(200),INXRHO(4,200),NUMRHO
      COMMON/RANGER/LOW,LHI
      COMMON/PARAMS/RHO2,RHOP,BETAE,AL,SF2,PF,PS,COSPS,SINPS,SIGNTI,
     1 SIGNNI,SIGNGI,SIGNFI
      DIMENSION SIGNOW(4)
C-----IF ANY SECTIONS HAVE ENERGY DEPENDENT SCATTERING RADIUS DEFINE
C-----RADIUS AT ENERGY E.
      IF(NUMRHO.GT.0) CALL SETRHO(E)
C-----INITIALIZE SUM CROSS SECTIONS.
      DO 10 J=2,4
   10 SIGNOW(J)=0.0
C-----ADD CONTRIBUTION FROM EACH SECTION.
      DO 120 ISECT=1,NSECT
C-----SELECT PARAMETER TYPE.
      MODE1=MODE(ISECT)
C-----SKIP SECTION IF IT DOES NOT CONTRIBUTE TO THIS ENERGY RANGE.
      IF(MODE1.LE.0) GO TO 120
C-----DEFINE INDICES FOR CURRENT SECTION OF RESONANCES.
      LOW=NLOW(ISECT)
      LHI=NHIGH(ISECT)
C-----INITIALIZE CONTRIBUTION OF SECTION TO SUM.
      SIGNTI=0.0
      SIGNNI=0.0
      SIGNGI=0.0
      SIGNFI=0.0
      GO TO (20,30,40,50,60,70,80,90,100), MODE1
C-----SINGLE LEVEL BREIT-WIGNER.
   20 CALL SIGBW1(E)
      GO TO 110
C-----MULTI-LEVEL BREIT-WIGNER.
   30 CALL SIGBWM(E)
      GO TO 110
C-----REICH-MOORE.
   40 CALL SIGRM(E)
      GO TO 110
C-----ADLER-ADLER (ENDF/B-IV AND EARLIER).
   50 CALL SIGAA4(E)
      GO TO 110
C-----ADLER-ADLER (ENDF/B-V AND LATER).
   60 CALL SIGAA5(E)
      GO TO 110
C-----GENERAL R-MATRIX.
   70 CALL SIGGRM(E)
      GO TO 110
C-----HYBRID R-FUNCTION.
   80 CALL SIGHRF(E)
      GO TO 110
C-----UNRESOLVED (INTERPOLATE PARAMETERS).
   90 CALL SIGURP(E)
      GO TO 110
C-----UNRESOLVED (INTERPOLATE CROSS SECTIONS).
  100 CALL SIGURS(E)
C-----MULTIPLY CONTRIBUTION OF SECTION BY PI*ABUNDANCE/(LAMBDA**2)
C-----(WHICH IS BETAE) AND ADD TO SUM.
  110 BETAE=BETA(ISECT)/E
      SIGNOW(2)=SIGNOW(2)+SIGNNI*BETAE
      SIGNOW(3)=SIGNOW(3)+SIGNGI*BETAE
      SIGNOW(4)=SIGNOW(4)+SIGNFI*BETAE
C-----END OF SECTION LOOP.
  120 CONTINUE
C-----DEFINE TOTAL TO EQUAL SUM OF PARTS.
      SIGNOW(1)=SIGNOW(2)+SIGNOW(3)+SIGNOW(4)
      RETURN
      END
      SUBROUTINE SETRHO(E)
C=======================================================================
C
C     FOR ALL SECTIONS WHICH HAVE AN ENERGY DEPENDENT SCATTERING RADIUS
C     INTERPOLATE TABULATED VALUES TO DEFINE SCATTERINMG RADIUS AT E.
C     STORE INTERPOLATED VALUES IN THE ARRAY RHOP1 (THE REMAINDER OF
C     THE CALCULATIONS CAN THEN PROCEED IGNORING ENERGY DEPENDENCE OF
C     THE SCATTERING RADIUS).
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/TABRHO/ERHOTB(500),RHOTAB(500),APTAB(500),NRHO(200),
     1 NBTRHO(200),INTRHO(200),INXRHO(4,200),NUMRHO
C-----SELECT SECTIONS WITH ENERGY DEPENDENT SCATTERING RADIUS.
      DO 70 KSECT=1,NSECT
      IF(NRHO(KSECT).EQ.0) GO TO 70
C-----DEFINE INDICES TO INTERPOLATION LAW AND TABULATED DATA.
      LNX=NRHO(KSECT)
      INX1=INXRHO(1,LNX)
      INX2=INXRHO(2,LNX)
      INX3=INXRHO(3,LNX)
      INX4=INXRHO(4,LNX)
C-----FIND ENERGY OR ENERGY RANGE WHERE RADII ARE GIVEN.
      DO 10 L=INX3,INX4
      IF(E-ERHOTB(L)) 20,50,10
   10 CONTINUE
C-----EXTEND RADIUS AS CONSTANT OUTSIDE TABULATED ENERGY RANGE.
      L=INX4
      GO TO 50
   20 IF(L.EQ.INX3) GO TO 50
C-----E IS BETWEEN ERHOTB(L-1) AND ERHOTB(L).
      L=L-1
C-----DEFINE INTERPOLATION LAW. DEFINE TRUE POINT INDEX.
      INX5=L-INX3+1
      DO 30 J=INX1,INX2
      IF(INX5.GT.NBTRHO(J)) GO TO 40
   30 CONTINUE
      J=INX2+1
C-----POINT IS IN INTERPOLATION REGION J-1.
   40 J=J-1
C-----INTERPOLATE RADIUS TO ENERGY E.
      CALL RHOINT(E,RHOP1(KSECT),ERHOTB(L),RHOTAB(L),INTRHO(J))
      GO TO 60
C-----DEFINE RADIUS SET AT E (E IS AN ENERGY AT WHICH RADIUS IS
C-----TABULATED OR E IS OUTSIDE TABULATED RANGE AND WILL BE EXTENDED
C-----AS CONSTANT).
   50 RHOP1(KSECT)=RHOTAB(L)
C-----IF REQUESTED SET CHANNEL RADIUS EQUAL TO SCATTERING RADIUS.
   60 IF(NAPTAB(KSECT).EQ.1) RHOX2(KSECT)=RHOP1(KSECT)**2
   70 CONTINUE
      RETURN
      END
      SUBROUTINE RHOINT(E,RHOP1,ERHOTB,RHOTAB,INT)
C=======================================================================
C
C     INTERPOLATE ENERGY DEPENDENT SCATTERING RADIUS.
C
C     THIS ROUTINE HAS BEEN RECODED IN ORDER TO AVOID ROUND-OFF
C     PROBLEMS ON SHORT WORD LENGTH COMPUTERS, E.G. IBM-360, 370, ETC.
C     THIS ROUTINE IS NOW SLIGHTLY LESS EFFICIENT THAN IN ITS PREVIOUS
C     FORM. HOWEVER ALL INTERPOLATION IS NOW DEFINED AS A WEIGHTED SUM
C     OF TERMS, AS OPPOSED TO THE PREVIOUS FORM WHICH USED DIFFERENCES.
C
C     AN ILLEGAL INTERPOLATION CODE OR A NON-POSITIVE ENERGY WHERE LOG
C     ENERGY INTERPOLATION IS REQUIRED INDICATES EITHER AN ERROR IN THE
C     DATA AS IT APPEARS IN THE ENDF/B FORMAT, OR AN ERROR IN THIS
C     PROGRAM. THEREFORE ERRORS OF THIS TYPE WILL CAUSE THE PROGRAM TO
C     PRINT A WARNING MESSAGE AND TERMINATE EXECUTION.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 FIELD
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/FIELDC/FIELD(11,12)
      DIMENSION ERHOTB(2),RHOTAB(2)
C-----CHECK INTERPOLATION CODE.
      IF(INT.LT.1.OR.INT.GT.5) GO TO 60
C-----DEFINE ENERGIES AT THE 2 ENDS OF THE INTERVAL.
      E1=ERHOTB(1)
      E2=ERHOTB(2)
C-----CHECK FOR ZERO LENGTH INTERVAL.
      DE12=E2-E1
      IF(DE12.EQ.0.0) GO TO 90
C-----SELECT INTERPOLATION LAW.
      GO TO (10,20,30,40,50),INT
C
C     HISTOGRAM. CONSTANT EQUAL TO VALUE AT LOWER ENERGY LIMIT.
C
   10 RHOP1=RHOTAB(1)
      RETURN
C
C     LINEAR X AND LINEAR Y.
C
   20 WT2=(E-E1)/DE12
      WT1=ONE-WT2
      RHOP1=WT1*RHOTAB(1)+WT2*RHOTAB(2)
      RETURN
C
C     LOG X AND LINEAR Y.
C
C-----INSURE ALL X VALUES ARE POSITIVE FOR LOG.
   30 IF(E1.LE.0.0.OR.E2.LE.0.0.OR.E.LE.0.0) GO TO 80
      WT2=DLOG(E/E1)/DLOG(E2/E1)
      WT1=ONE-WT2
      RHOP1=WT1*RHOTAB(1)+WT2*RHOTAB(2)
      RETURN
C
C     LINEAR X AND LOG Y.
C
   40 WT2=(E-E1)/DE12
      WT1=ONE-WT2
      RHOP1=DEXP(WT1*DLOG(RHOTAB(1))+WT2*DLOG(RHOTAB(2)))
      RETURN
C
C     LOG X AND LOG Y.
C
   50 IF(E1.LE.0.0.OR.E2.LE.0.0.OR.E.LE.0.0) GO TO 80
      WT2=DLOG(E/E1)/DLOG(E2/E1)
      WT1=ONE-WT2
      RHOP1=DEXP(WT1*DLOG(RHOTAB(1))+WT2*DLOG(RHOTAB(2)))
      RETURN
C-----ILLEGAL INTERPOLATE CODE.
   60 WRITE(OUTP,100) INT
C-----TERMINATE DUE TO PARAMETER ERROR.
   70 WRITE(OUTP,130)
      CALL ENDIT
C-----ILLEGAL LOG ENERGY INTERPOLATION WITH NEGATIVE VALUES.
   80 CALL OUT9(E1,FIELD(1,1),3)
      CALL OUT9(E2,FIELD(1,2),3)
      CALL OUT9(E ,FIELD(1,3),3)
      WRITE(OUTP,110) ((FIELD(M,J),M=1,11),J=1,3)
      GO TO 70
C-----ZERO LENGTH ENERGY INTERVAL.
   90 CALL OUT9(E1,FIELD(1,1),3)
      CALL OUT9(E2,FIELD(1,2),3)
      WRITE(OUTP,120) ((FIELD(M,J),M=1,11),J=1,2)
      GO TO 70
  100 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Interpolating Scattering Radius.'/
     2 ' Illegal Interpolation Code =',I5,' (MUST be 1 to 5).'/
     3 ' Correct Evaluated Data and Re-Run Program.')
  110 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Interpolating Scattering Radius.'/
     2 ' Illegal Log Energy Interpolation Using Negative Energy.'/
     3 ' Interpolation Code=',I5,' (Cannot be 3 or 5).'/
     4  ' E1,E2,E=',3(11A1,1X)/
     5 ' Correct Evaluated Data and Re-Run Program.')
  120 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Interpolating Scattering Radius.'/
     2 ' Illegal Interpolation Over Zero Length Interval.'/
     3 'E1,E2=',11A1,1X,11A1/
     4 ' Correct Evaluated Data and Rr-Run Program.')
  130 FORMAT(1X,78('=')/' Execution Terminated'/1X,78('='))
      END
      SUBROUTINE SIGBW1(E)
C=======================================================================
C
C     ADD CONTRIBUTION OF ONE SECTION OF SINGLE LEVEL BREIT-WIGNER
C     PARAMETERS.
C
C     DEFINITIONS FROM ENDF-102 FORMATS AND PROCEDURES MANUAL
C     =======================================================
C     ELASTIC
C     =======
C     THE DEFINITION OF SINGLE LEVEL ELASTIC SCATTERING IN ENDF-102 IS
C     INCORRECT. HERE WE USE THE CORRECT DEFINITION,
C
C     ELASTIC = (2*L + 1)*SIN(PS)**2 +
C
C       GJ*GAM(N)*(GAM(N) - 2*GAM(T)*SIN(PS)**2 + 2*DE*SIN(2*PS))/DEN
C
C     CAPTURE
C     =======
C     CAPTURE = GAM(N)*GAM(C)/DEN
C
C     FISSION
C     =======
C     FISSION = GAM(N)*GAM(F)/DEN
C
C     DE  = (E - ER)
C     DEN = ((DE)**2 + (GAM(T)/2)**2)
C
C     SUMMED OVER ALL RESONANCES WITH THE SAME L VALUE. NOTE, THE
C     POTENTIAL CONTRIBUTION IS INCLUDED ONLY ONCE FOR EACH L VALUE
C     AND THE TERMS GJ, 2*SIN(PS)**2, 2*SIN(2*PS) ARE THE SAME FOR
C     ALL RESONANCES WITH THE SAME (L,J) VALUE. THEREFORE THE ROUTINE
C     WILL DEFINE 3 SEPERATE SUMS,
C
C     1) GAM(N)*GAM(N)/DEN
C     2) GAM(N)*GAM(T)/DEN
C     3) GAM(N)*DE/DEN
C
C     ONLY AFTER SUMMING THESE EXPRESSIONS OVER ALL RESONANCES WILL
C     THEY BE MULTIPLIER BY THE RESONANCE INDEPENDENT FACTORS TO
C     DEFINE THE CROSS SECTION.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/RANGER/LOW,LHI
      COMMON/PARAMS/RHO2,RHOP,BETAE,AL,SF2,PF,PS,COSPS,SINPS,SIGNTI,
     1 SIGNNI,SIGNGI,SIGNFI
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DATA SFC/0.0D+00/
C
C     DEFINE RESONANCE INDEPENDENT QUANTITIES.
C
      RHO2=E*RHOX2(ISECT)
      RHOP=RHOP1(ISECT)*DSQRT(E)
      AL=LVALUE(ISECT)
C-----DEFINE PENETRATION FACTOR, SHIFT FACTOR, PHASE SHIFT.
      CALL FACTS2(LVALUE(ISECT),RHO2,SF2,PF)
      CALL FACPHI(LVALUE(ISECT),RHOP,PS)
      COSPS=DCOS(PS)
      SINPS=DSIN(PS)
C-----DEFINE SIN(2*PS) AND 2*SIN(PS)**2
      SIN2PS=TWO*SINPS*COSPS
      SINPS2=TWO*SINPS*SINPS
C-----DEFINE PENETRATION FACTOR FOR COMPETITIVE WIDTH.
      IF(LRXTAB(ISECT).LE.0) GO TO 10
      RHOC2=(E+EXCITE(1,ISECT))*RHOX2(ISECT)
      CALL FACTS2(LVALUE(ISECT),RHOC2,SFC,PFC)
      GO TO 20
   10 PFC=0.0
C
C     J VALUE LOOP.
C
C-----DEFINE STATISTICAL WEIGHT FOR ALL RESONANCES WITH THE SAME (L,J).
   20 GJ=RESTAB(2,LOW)
      AJNOW = RESJTAB(LOW)
C-----INITIALIZE CONTRIBUTION OF (L,J) SEQUENCE.
      SIGNN1=ZERO
      SIGNN2=ZERO
      SIGNN3=ZERO
      SIGNGJ=ZERO
      SIGNFJ=ZERO
C
C     RESONANCE LOOP. ADD CONTRIBUTION OF ALL RESONANCES WITH SAME (L,J)
C
      DO 30 JR=LOW,LHI
C-----ONLY USE RESONANCES WITH SAME J VALUE.
      IF(DABS(AJNOW-RESJTAB(JR)).GT.0.01) GO TO 40
      ER=ENRES(JR)
      GAMC=PFC*RESTAB(3,JR)
      GN=RESTAB(4,JR)
      GAMN=PF*GN
      GAMG=RESTAB(5,JR)
      GAMF=RESTAB(6,JR)
      GAMT=GAMN+GAMG+GAMF+GAMC
      GAMT2=HALF*GAMT
      DE=E-(ER+GN*(SHIFT2(JR)-SF2))
      DEN=DE*DE+GAMT2*GAMT2
      COMFAC=GAMN/DEN
      SIGNN1=SIGNN1+COMFAC*GAMN
      SIGNN2=SIGNN2+COMFAC*GAMT
      SIGNN3=SIGNN3+COMFAC*DE
      SIGNGJ=SIGNGJ+COMFAC*GAMG
      SIGNFJ=SIGNFJ+COMFAC*GAMF
C-----END OF RESONANCE LOOP.
   30 CONTINUE
      JR=LHI+1
C-----MULTIPLY CONTRIBUTION OF (L,J) SEQUENCE BY STATISTICAL WEIGHT
C-----AND ADD TO SUM...NOTE, SINPS2 IS 2*SIN(PS)**2
   40 SIGNNI=SIGNNI+GJ*(SIGNN1-SIGNN2*SINPS2+TWO*SIGNN3*SIN2PS)
      SIGNGI=SIGNGI+GJ*SIGNGJ
      SIGNFI=SIGNFI+GJ*SIGNFJ
C-----TEST FOR ANOTHER J VALUE.
      LOW=JR
      IF(LOW.LE.LHI) GO TO 20
C
C     ADD POTENTIAL SCATTERING CONTRIBUTION FOR L VALUE.
C
C-----ADD 4*(2*L+1)*SIN(PS)**2 (NOTE, SINPS2 IS 2*SIN(PS)**2)
      SIGNNI=SIGNNI+(FOUR*AL+TWO)*SINPS2
      RETURN
      END
      SUBROUTINE SIGBWM(E)
C=======================================================================
C
C     ADD CONTRIBUTION OF ONE SECTION OF MULTI-LEVEL BREIT-WIGNER
C     PARAMETERS.
C
C     DEFINITIONS FROM ENDF-102 FORMATS AND PROCEDURES MANUAL
C     =======================================================
C     CAPTURE AND FISSION CROSS SECTIONS ARE CALCULATED EXACTLY AS IN
C     THE CASE OF SINGLE LEVEL BREIT-WIGNER RESONANCES (FOR DETAILS
C     SEE, SUBROUTINE SIGBW1). HERE WE WILL ONLY CONSIDER THE ELASTIC
C     CROSS SECTION.
C
C     THE ELASTIC CROSS SECTION IS DEFINED TO BE,
C
C     ELASTIC = GJ*(1 - U(N,N))**2
C
C                                     I*GAM(N)
C     U(N,N)= EXP(-I*2*PS)*(I + ====================)
C                               ((ER-E)-I*GAM(T)/2)
C
C                                I*GAM(N)*((ER-E)+I*GAM(T)/2)
C           = EXP(-I*2*PS)*(I + =======================================)
C                               ((ER-E)-I*GAM(T)/2)*((ER-E)+I*GAM(T)/2)
C
C                                I*GAM(N)*((ER-E)-GAM(N)*GAM(T)/2)
C           = EXP(-I*2*PS)*(I + =======================================)
C                               ((ER-E)**2+(GAM(T)/2)**2)
C
C     U(N,N) = (COS(2*PS) - I*SIN(2*PS))*((1 - R) - I*S)
C
C     R      = GAM(N)*GAM(T)/2/DEN
C     S      = GAM(N)*DE/DEN
C     GAM(N) = NEUTRON WIDTH
C     GAM(R) = TOTAL WIDTH
C     DE     = E - ER
C     DEN    = ((E - ER)**2 + GAM(T)**2)
C
C     SUMMED OVER RESONANCES FOR EACH (L,J) SEQUENCE.
C
C     FROM OUR DEFINITION OF A UNIFORM TREATMENT OF ALL FORMALISMS WE
C     CAN IMMEDIATELY IDENTIFY,
C
C     X =  R
C     Y =  S
C
C     AND SUBSTITUTE INTO OUR GENERAL EXPRESSION,
C
C     ELASTIC =GJ*(2*SIN(PS)**2 - R)**2 + (SIN(2*PS) + S)**2)
C
C     ABSORPTION (CAPTURE AND FISSION) ARE TREATED IN A SINGLE LEVEL
C     APPROXIMATION,
C
C     CAPTURE =GJ*GAM(N)*GAM(G)/DEN
C
C     FISSION =GJ*GAM(N)*GAM(F)/DEN
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/RANGER/LOW,LHI
      COMMON/PARAMS/RHO2,RHOP,BETAE,AL,SF2,PF,PS,COSPS,SINPS,SIGNTI,
     1 SIGNNI,SIGNGI,SIGNFI
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DATA SFC/0.0D+00/
C
C     DEFINE RESONANCE INDEPENDENT QUANTITIES.
C
      RHO2=E*RHOX2(ISECT)
      RHOP=RHOP1(ISECT)*DSQRT(E)
C-----DEFINE PENETRATION FACTOR, SHIFT FACTOR, PHASE SHIFT.
      CALL FACTS2(LVALUE(ISECT),RHO2,SF2,PF)
      CALL FACPHI(LVALUE(ISECT),RHOP,PS)
      COSPS=DCOS(PS)
      SINPS=DSIN(PS)
C-----DEFINE SIN(2*PS) AND 2*SIN(PS)**2
      SIN2PS=TWO*SINPS*COSPS
      SINPS2=TWO*SINPS*SINPS
C-----DEFINE PENETRATION FACTOR FOR COMPETITIVE WIDTH.
      IF(LRXTAB(ISECT).LE.0) GO TO 10
      RHOC2=(E+EXCITE(1,ISECT))*RHOX2(ISECT)
      CALL FACTS2(LVALUE(ISECT),RHOC2,SFC,PFC)
      GO TO 20
   10 PFC=0.0
C
C     J VALUE LOOP.
C
C-----DEFINE STATISTICAL WEIGHT FOR ALL RESONANCES WITH THE SAME (L,J).
   20 GJ=RESTAB(2,LOW)
      AJNOW = RESJTAB(LOW)
C
C     FOR MISSING AND ILLEGAL J SEQUENCES (INDICATED BY NEGATIVE GJ)
C     ADD (OR SUBTRACT) POTENTIAL CONTRIBUTION TO ELASTIC CROSS SECTION.
C
      IF(GJ.GT.0.0) GO TO 30
C-----ADD 4*GJ*SIN(PS)**2 (NOTE, SINPS2 IS 2*SIN(PS)**2)
      SIGNNI=SIGNNI+TWO*RESTAB(3,LOW)*SINPS2
      LOW=LOW+1
      GO TO 60
C-----INITIALIZE CONTRIBUTION OF (L,J) SEQUENCE.
   30 SIGNN1=ZERO
      SIGNN2=ZERO
      SIGNGJ=ZERO
      SIGNFJ=ZERO
C
C     RESONANCE LOOP. ADD CONTRIBUTION OF ALL RESONANCES WITH SAME (L,J)
C
      DO 40 JR=LOW,LHI
C-----ONLY USE RESONANCES WITH SAME J VALUE.
      IF(DABS(AJNOW-RESJTAB(JR)).GT.0.01) GO TO 50
      ER=ENRES(JR)
      GAMC=PFC*RESTAB(3,JR)
      GN=RESTAB(4,JR)
      GAMN=PF*GN
      GAMG=RESTAB(5,JR)
      GAMF=RESTAB(6,JR)
      DE=E-(ER+GN*(SHIFT2(JR)-SF2))
      GAMT2=HALF*(GAMN+GAMG+GAMF+GAMC)
      DEN=DE*DE+GAMT2*GAMT2
      COMFAC=GAMN/DEN
      SIGNN1=SIGNN1+COMFAC*GAMT2
      SIGNN2=SIGNN2+COMFAC*DE
      SIGNGJ=SIGNGJ+COMFAC*GAMG
      SIGNFJ=SIGNFJ+COMFAC*GAMF
C-----END OF RESONANCE LOOP.
   40 CONTINUE
      JR=LHI+1
C-----DEFINE NEUTRON CROSS SECTION, MULTIPLY BY STATISTICAL WEIGHT AND
C-----ADD CONTRIBUTION OF (L,J) SEQUENCE TO SUM.
   50 SIGNNI=SIGNNI+GJ*((SINPS2-SIGNN1)**2+(SIN2PS+SIGNN2)**2)
      SIGNGI=SIGNGI+GJ*SIGNGJ
      SIGNFI=SIGNFI+GJ*SIGNFJ
C-----TEST FOR ANOTHER J VALUE.
      LOW=JR
   60 IF(LOW.LE.LHI) GO TO 20
      RETURN
      END
      SUBROUTINE SIGRM(E)
C=======================================================================
C
C     ADD CONTRIBUTION OF ONE SECTION OF REICH-MOORE PARAMETERS.
C
C     DEFINITIONS FROM ENDF-102 FORMATS AND PROCEDURES MANUAL
C     =======================================================
C     THE CROSS SECTIONS ARE DEFINED TO BE,
C
C     TOTAL        =2*GJ*REAL(I - U(N,N))
C     ABSORPTION   =4*GJ*(REAL(RHO(N,N)) - RHO(N,N)**2)
C                  =  GJ*(I - U(N,N)**2)
C     ELASTIC      =  GJ*(I - U(N,N))**2
C     FISSION      =4*GJ*(SUM OVER C)(RHO(N,C)**2)
C     CAPTURE      = ABSORPTION - FISSION
C
C     WHICH ARE COMPLETELY DEFINED IN TERMS OF U(N,N) AND RHO(N,C),
C
C     RHO(N,C)     =I - INVERSE(I - K)
C     U(N,N)       =EXP(-I*2*PS)*(2*INVERSE(I - K) - I)
C                  =(COS(2*PS) - I*SIN(2*PS))*(2*INVERSE(I - K) - I)
C                  =(COS(2*PS) - I*SIN(2*PS))*(1 - 2*RHO(N,N))
C
C                  =COS(2*PS)*(I-2*REAL(RHO)) - I*2*SIN(2*PS)*IM(RHO)
C
C     REAL(U(N,N)) =   COS(2*PS)*(I-2*REAL(RHO))
C     IM(U(N,N))   =-2*SIN(2*PS)*IM(RHO)
C
C     MATRIX ELEMENTS
C     =======================================================
C
C                     I*SQRT(GAM(C)/2*GAM(C*)/2)
C     (I - K)    =I - ==============================================
C                     ((ER-E) -I*(GAM(R)/2)
C
C                      I*SQRT(GAM(C)/2*GAM(C*)/2)*((ER-E) + I*(GAM(R)/2)
C                =I - ==================================================
C                     ((ER-E) -I*(GAM(R)/2)*((ER-E) + I*(GAM(R)/2)
C
C                     SQRT(GAM(C)/2*GAM(C*)/2)*(GAM(R)/2)
C                =I + ==============================================
C                     ((ER-E)**2 + (GAM(R)/2)**2)
C
C                     SQRT(GAM(C)/2*GAM(C*)/2)*(ER-E)
C                =  - ==============================================
C                     ((ER-E)**2 + (GAM(R)/2)**2)
C
C     (I - K)      = (R + I) - I*S
C
C     R            = SQRT(GAM(C)/2*GAM(C*)/2)*(GAM/2)/DEN
C     S            = SQRT(GAM(C)/2*GAM(C*)/2)*(ER-E)/DEN
C     GAM(R)       = ELIMINATED RADIATIVE WIDTH
C     GAM(C)       = PARTIAL WIDE FOR CHANNEL C FOR A RESONANCE
C     DEN          = ((ER - E)**2 + (GAM/2)**2)
C
C     SUMMED OVER RESONANCES FOR EACH (L,J) SEQUENCE.
C
C     PHYSICALLY (R) IS THE SYMMETRIC CONTRIBUTION OF THE RESONANCES
C     AND IS ALWAYS POSITIVE. SIMILARLY (S) IS THE ANTI-SYMMETRIC
C     CONTRIBUTION OF THE RESONANCES AND IS NEGATIVE FOR ENERGIES
C     LESS THAN THE RESONANCE AND POSITIVE FOR ENERGIES GREATER THAN
C     THE RESONANCE.
C
C     NOTE, IN ENDF-102 THE 2 VARIABLES DESCRIBED CORRESPOND TO (R+I)
C     AND (S). IN ORDER TO IMPROVE NUMERICAL STABILITY AND SIMPLIFY
C     THE RESULTS THE FOLLOWING EQUATIONS WILL BE DEFINED IN TERMS OF
C     (R) AND (S), SO THAT THE SOLUTION CAN BE DEFINED DIRECTLY IN
C     TERMS OF THE SYMMETRIC AND ANTI-SYMMETRIC RESONANCE CONTRIBUTIONS.
C
C     SQUARES, SUCH AS RHO(N,N)**2 AND (I - U(N,N))**2, MUST BE
C     EVALUATED IN TERMS OF THE VARIABLE AND COMPLEX CONGEGATE, E.G.,
C     F(X)    =  A + B*I
C     F(X)**2 = (A + B*I)*(A - B*I) = A**2 + B**2
C
C     SO THAT,
C     RHO(N,N)**2     = (REAL(RHO(N,N))**2 + (IM(RHO(N,N))**2
C     (1 - U(N,N))**2 = (REAL(I - U(N,N))**2) + (IM(U(N,N))**2
C                     = I - 2*REAL(U(N,N))
C                     + (REAL(U(N,N))**2)+(IM(U(N,N))**2)
C                     = I - 2*REAL(U(N,N)
C                     + (U(N,N))**2
C     SOLUTION
C     =======================================================
C     INVERTING THE MATRIX
C     =======================================================
C     STARTING FROM THE COMPLEX MATRIX,
C     (I - K)        = (R + I) - I*S
C     WE WILL DEFINE ITS INVERSE
C     INVERSE(I - K) = (RI + I) - I*SI
C     BY DEFINITION,
C     I = ((R + I) - I*S)*((RI + I) - I*SI)
C
C     FROM THIS WE OBTAIN 2 REAL MATRIX EQUATIONS,
C     I = (R + I)*(RI + I) - S*SI
C     0 = S*(RI + I) + (R + I)*SI
C
C     I - (R + I) = (R + I)*RI - S*SI
C     -S          =       S*RI + (R + I)*SI
C
C     -R          = (R + I)*RI - S*SI
C     -S          =       S*RI + (R + I)*SI
C
C     IF THERE IS NO FISSION THEN R, S, RI AND SI ARE MERELY SCALARS
C     AND THE INVERSION IS ACCOMPLISHED AS DESCRIBED HERE.
C
C     IF THERE IS FISSION R, S, RI AND SI ARE 3 X 3 MATRICES AND THE
C     INVERSION IS ACCOMPLISHED BY MATRIX INVERSION.
C
C     IN EITHER CASE THE ABOVE RELATIONSHIPS ARE AT LEAST SYMBOLICALLY
C     CORRECT AND CAN BE USED TO DEFINE USEFUL PROPERTIES OF THE
C     INVERSE MATRIX. AT LEAST SYMBOLICALLY WE CAN TREAT THESE TERMS
C     AS A LINEAR SYSTEM OF 2 EQUATIONS IN 2 UNKNOWNS AND IMMEDIATELY
C     WRITE THE SOLUTION IN THE FORM,
C
C     RI      = -(R*(R+I)+S*S)/((R+I)*(R+I)+S*S)
C     SI      =  ((R+I)*S - S*R)/((R+I)*(R+I)+S*S)
C             = -S/((R+I)*(R+I)+S*S)
C
C     DEFINITION OF TERMS APPEARING IN THE CROSS SECTIONS
C     =======================================================
C     RHO(N,C)       =I - INVERSE(I - K)
C                    =I - ((RI+I)-I*SI)
C                    =-(RI - I*SI)
C     REAL(RHO(N,C)) =-RI
C     IM(RHO(N,C))   = SI
C     RHO(N,C)**2    =(RI)**2 + (SI)**2
C
C     U(N,N)         =(COS(2*PS) - I*SIN(2*PS))*(2*INVERSE(I - K) - I)
C                    =(COS(2*PS)-I*SIN(2*PS))*(2*INVERSE(I-K)-1) + I)
C                    =(COS(2*PS)-I*SIN(2*PS))*(1 - 2*RHO(N,N))
C                    =(COS(2*PS)-I*SIN(2*PS))*(1 + 2*RI - I*2*SI)
C
C                    =COS(2*PS)*(1 + 2*RI) + SIN(2*PS)*2*SI
C                    -I*(COS(2*PS)*2*SI - SIN(2*PS)*(1 + 2*RI))
C
C     REAL(U(N,N))   =COS(2*PS)*(1 + 2*RI) + SIN(2*PS)*2*SI
C     IM(U(N,N))     =-(2*COS(2*PS)*SI - SIN(2*PS)*(1 + 2*RI))
C     (U(N,N))**2    =REAL(U(N,N))**2 + IM(U(N,N))**2
C     REAL(U(N,N))**2=(COS(2*PS)**2)*(((1 + 2*RI)**2)
C                    +4*(SIN(2*PS)**2)*(SI**2)
C                    +4*COS(2*PS)*SIN(2*PS)*(1 + 2*RI)*SI
C     IM(U(N,N))**2  =(SIN(2*PS)**2)*(((1 + 2*RI)**2)
C                    +4*(COS(2*PS)**2)*(SI**2)
C                    -4*COS(2*PS)*SIN(2*PS)*(1 + 2*RI)*SI
C
C     NOTE,           4*COS(2*PS)*SIN(2*PS)*(1 + 2*RI)*SI CANCELS OUT
C                     AND COS(2*PS)**2 + SIN(2*PS)**2 = 1
C
C     (U(N,N))**2    =((1 + 2*RI)**2 +4*(SI**2)
C                    = 1 + 4*(RI + RI**2 +SI**2)
C
C     DEFINITION OF THE CROSS SECTIONS
C     =======================================================
C     TOTAL
C     =======================================================
C     IN THIS PROGRAM THE TOTAL IS DEFINED TO BE THE SUM OF ITS PART,
C
C     TOTAL = ELASTIC + ABSORPTION
C
C     HOWEVER FOR COMPLETENESS WE WILL DEFINE IT HERE.
C
C     TOTAL        =2*GJ*REAL(1 - U(N,N))
C                  =2*GJ*(1 -((COS(2*PS)*(2*RI+1)+SIN(2*PS)*2*SI)))
C                  =2*GJ*(1 - COS(2*PS)-2*(COS(2*PS)*RI-SIN(2*PS)*SI))
C                  =4*GJ*(SIN(PS)**2 - (COS(2*PS)*RI-SIN(2*PS)*SI))
C
C     HERE WE HAVE USED THE IDENTITY 1 - COS(2*PS) = 2*SIN(PS)**2
C
C     ABSORPTION
C     =======================================================
C     ABSORPTION   =4*GJ*(REAL(RHO(N,N) - RHO(N,N)**2)
C                  =4*GJ*(-RI           - (RI**2 + SI**2))
C                  =-4*GJ*(RI + RI**2 + SI**2))
C
C     FISSION
C     =======================================================
C     FISSION      =SUM RHO(N,C)**2
C
C     WHERE RHO(N,C) ARE THE OFF DIAGONAL TERMS OF THE MATRICES.
C     WRITTEN EXPLIVITLY,
C
C     FISSION      =RHO(1,2)**2 + RHO(1,3)**2
C                  =RI(1,2)**2 + RI(1,3)**2 + SI(1,2)**2 + SI(1,3)**2
C
C     CAPTURE
C     =======================================================
C     CAPTURE IS DEFINED TO BE,
C
C     CAPTURE      = ABSORPTION - FISSION
C
C     WHEN THERE IS NO FISSION CAPTURE IS EQUAL TO ABSORPTION.
C
C     ELASTIC
C     =======================================================
C     ELASTIC      =  GJ*(1 - U(N,N))**2
C
C     NOTE THAT THIS DEFINITION IS EXACTLY THE SAME AS IN THE CASE
C     OF MULTI-LEVEL BREIT-WIGNER RESONANCES, IF WE USE (RI) AND (SI)
C     INSTEAD OF (R) AND (S) (SEE, SUBROUTINE SIGBWM FOR DETAILS).
C     THEREFORE WE SHOULD NOT BE SURPRISED TO FIND A SIMILAR
C     EXPRESSION FOR THE ELASTIC CROSS SECTION,
C
C     ELASTIC=GJ*(1 - U(N,N))**2
C            =GJ*(1-2*REAL(U(N,N))+(REAL(U(N,N))**2+IM(U(N,N))**2)
C            =GJ*(1-2*(COS(2*PS)*(RI+1)-SIN(2*PS)*SI)+(RI+1)**2+SI**2)
C            =GJ*(1-2*(COS(2*PS)*(RI+1)-SIN(2*PS)*SI)+(RI+1)**2+SI**2)
C
C     BY ADDING AND SUBTRACTING TERMS THIS CAN BE WRITTEN AS THE SUM OF
C     THE SQUARE OF 2 TERMS,
C
C     ELASTIC=GJ*((COS(2*PS)-(RI+1))**2 + (SIN(2*PS)+SI)**2)
C
C            =GJ*(COS(2*PS)**2 -2*(RI+1)*COS(2*PS) + (RI+1)**2
C                +SIN(2*PS)**2 +2*SI*SIN(2*PS)     + SI**2)
C             ========================================================
C            =GJ*(1-2*(COS(2*PS)*(RI+1)-SIN(2*PS)*SI)+(RI+1)**2+SI**2)
C
C     HERE WE HAVE USED THE IDENTITY COS(2*PS)**2+SIN(2*PS)**2 = 1
C
C     THIS FORM CAN BE FURTHER SIMPLIFIED TO AVOID ROUND-OFF,
C
C     (COS(2*PS)-(RI+1))**2 = ((COS(2*PS)-1)-RI)**2
C                          = (-2*SIN(PS)**2-RI)**2
C                          = (2*SIN(PS)**2+RI)**2
C     TO FIND,
C
C     ELASTIC  = GJ*(2*SIN(PS)**2+RI)**2 + (SIN(2*PS)+SI)**2)
C
C    THIS IS THE FORM IN WHICH THE ELASTIC CROSS SECTION IS CALCULATED,
C
C    POTENTIAL CROSS SECTION
C    =======================
C    FAR FROM RESONANCES AND FOR (L,J) SEQUENCES WHICH DO NOT HAVE ANY
C    RESONANCES (RI) AND (SI) WILL BE SMALL OR ZERO AND WE FIND THAT THE
C    ELASTIC CROSS SECTION REDUCES TO THE POTENTIAL CROSS SECTION,
C
C    ELASTIC  =GJ*(4*SIN(PS)**4 + SIN(2*PS)**2)
C
C    USING THE IDENTITY SIN(2*PS) = 2*SIN(PS)*COS(PS)
C
C             =GJ*(4*SIN(PS)**4 + 4*(SIN(PS)*COS(PS))**2)
C             =4*GJ*SIN(PS)**2*(SIN(PS)**2 + COS(PS)**2)
C
C    BUT SIN(PS)**2 + COS(PS)**2 = 1, TO FIND,
C
C    ELASTIC  =4*GJ*SIN(PS)**2
C
C    IT IS IMPORTANT TO REALIZE THAT EVEN IN THE CASE WHERE THERE ARE
C    NO RESONANCES SPECIFIED FOR A (L,J) SEQUENCE THE CROSS SECTION
C    DOES NOT BECOME ZERO, SINCE THERE IS STILL A CONTRIBUTION TO THE
C    POTENTIAL CROSS SECTION.
C
C     NUMERICAL STABILITY
C     =======================================================
C     OBVIOUSLY, PHYSICALLY THE TOTAL, ELASTIC AND ABSORPTION CANNOT
C     BE NEGATIVE, AND ALL OF THE ABOVE EQUATIONS REFLECT THIS FACT.
C     HOWEVER, CARE MUST BE USED TO AVOID NUMERICAL INSTABILITY.
C
C     FROM THE DEFINITION OF ABSORPTION,
C
C     ABSORPTION   =-4*GJ*(RI + RI**2 + SI**2)
C
C     BUT BY THE ABOVE DEFINITIONS,
C
C     RI      = -(R*(R+I)+S*S)/((R+I)*(R+I)+S*S)
C     SI      = -S/((R+I)*(R+I)+S*S)
C
C     RI      = -((R+I)*(R+I)+S*S - (R+I))/((R+I)*(R+I)+*S*S)
C             = (R+I)/((R+I)*(R+I)+S*S) - I
C     RI**2   = (R+I)**2/((R+I)**2+S**2)**2)-2*(R+I)/((R+I)**2+S**2)+1
C     SI**2   =     S**2/((R+I)**2+S**2)**2)
C
C     RI**2+SI**2 = (I - 2*(R+I) + ((R+I)**2+S**2))/((R+I)**2+S**2)
C     RI          = (  +   (R+I) - ((R+I)**2+S**2))/((R+I)**2+S**2)
C     =============================================================
C     SUM         = (I -   (R+I)                  )/((R+I)**2+S**2)
C                 =-R/((R+I)**2+S**2)
C
C     ABSORPTION  =4*GJ*R/((R+I)*(R+I)+S*S)
C
C     FROM THE DEFINITION OF R WE CAN SEE THAT THIS IS MERELY THE
C     SYMMETRIC CONTRIBUTION OF THE RESONANCES, WHICH IS INHERENTLY
C     POSITIVE AND NOT SUBJECT TO ROUND-OFF ERROR. THEREFORE THIS
C     DEFINITION OF THE ABSORPTION WILL BE INHERENTLY STABLE IF WE
C     AVOID PROBLEMS BY INITIALLY DEFINING (R) RATHER THAN (R+I) AND
C     USE THIS QUANTITY TO DEFINE THE ABSORPTION (NOTE, IF WE FIRST TRY
C     TO DEFINE (R+I) IT INVOLVES ADDING I WHICH INTRODUCES ROUND-OFF
C     ERROR FAR FROM RESONANCES - IF WE SUBSEQUENTLY TRY TO DEFINE R
C     BY SUBTRACTING I WE CAN MERELY INTRODUCE MORE ROUND-OFF - HOWEVER
C     IF WE DEFINE THE QUANTITY (R) DIRECTLY WE DO NOT INTRODUCE ANY
C     ROUND-OFF).
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/RANGER/LOW,LHI
      COMMON/PARAMS/RHO2,RHOP,BETAE,AL,SF2,PF,PS,COSPS,SINPS,SIGNTI,
     1 SIGNNI,SIGNGI,SIGNFI
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/FISSY/LFWX,LFI,MT451
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION R(3,3),S(3,3),RI(3,3),SI(3,3)
      EQUIVALENCE (RI(1,1),RI11),(SI(1,1),SI11),(RI(1,2),RI12),
     1 (SI(1,2),SI12),(RI(1,3),RI13),(SI(1,3),SI13)
C
C     DEFINE RESONANCE INDEPENDENT QUANTITIES.
C
      RHO2=E*RHOX2(ISECT)
      RHOP=RHOP1(ISECT)*DSQRT(E)
C-----DEFINE PENETRATION FACTOR, SHIFT FACTOR, PHASE SHIFT.
      CALL FACTS2(LVALUE(ISECT),RHO2,SF2,PF)
      CALL FACPHI(LVALUE(ISECT),RHOP,PS)
      COSPS=DCOS(PS)
      SINPS=DSIN(PS)
C-----DEFINE SIN(2*PS) AND 2*SIN(PS)**2
      SIN2PS=TWO*SINPS*COSPS
      SINPS2=TWO*SINPS*SINPS
C-----IS MATERIAL FISSIONABLE.
      IF(LFWX.NE.0) GO TO 60
C
C     NO FISSION.
C
C     J VALUE LOOP.
C
C-----DEFINE STATISTICAL WEIGHT FOR ALL RESONANCES WITH THE SAME (L,J).
   10 GJ=RESTAB(2,LOW)
      AJNOW = RESJTAB(LOW)
C
C     FOR ILLEGAL OR MISSING J SEQUENCES (INDICATED BY NEGATIVE GJ)
C     ADD (OR SUBTRACT) POTENTIAL CONTRIBUTION TO TOTAL AND ELASTIC
C     CROSS SECTIONS.
C
      IF(GJ.GT.0.0) GO TO 20
C-----ADD 4*GJ*SIN(PS)**2 (NOTE, SINPS2 IS 2*SIN(PS)**2)
      SIGNNI=SIGNNI+TWO*RESTAB(3,LOW)*SINPS2
      LOW=LOW+1
      GO TO 50
C-----INITIALIZE ELEMENTS.
   20 R(1,1)=ZERO
      S(1,1)=ZERO
C
C     RESONANCE LOOP. ADD CONTRIBUTION OF ALL RESONANCES WITH SAME (L,J)
C
      DO 30 JR=LOW,LHI
C-----ONLY USE RESONANCES WITH SAME STATISTICAL WEIGHT, I.E. J VALUE.
      IF(DABS(AJNOW-RESJTAB(JR)).GT.0.01) GO TO 40
      DE=ENRES(JR)-E
      GAMN=PF*RESTAB(3,JR)
      GAMNG2=RESTAB(4,JR)
      DEN=DE*DE+GAMNG2*GAMNG2
      DE2=DE/DEN
      GAMNG4=GAMNG2/DEN
C-----DEFINE TERMS IN UPPER TRIANGLE OF MATRIX.
      R(1,1)=R(1,1)+GAMNG4*GAMN
      S(1,1)=S(1,1)+DE2*GAMN
C-----END OF RESONANCE LOOP.
   30 CONTINUE
      JR=LHI+1
C-----ADD IDENTITY TO REAL PART.
   40 R11P1=R(1,1)+ONE
C-----DEFINE DETERMINANT.
      DET=R11P1*R11P1+S(1,1)*S(1,1)
C-----DEFINE,
C----- SI     = -S/((R+I)*(R+I)+S*S)
C----- RI     = -(R+R**2+S**2)/((R+I)*(R+I)+S*S)
C-----DEFINE INVERSES...WARNING...THIS IS REALLY -SI11 AND -RI11.
C-----THE MINUS HAS BEEN DROPPED HERE AND IN THE DEFINITION OF THE
C-----ELASTIC CROSS SECTION (SIGNNI), BELOW, TO SIMPLY AVOID TAKING
C-----MINUS TWICE.
C-----WE ONLY NEED RI11 AND SI11
      SI11=-S(1,1)/DET
      RI11P1=R11P1/DET
      RI11=RI11P1-ONE
C
C     ADD CONTRIBUTION OF CURRENT (L,J) SEQUENCE TO SUM.
C
C-----ABSORPTION (IN THIS CASE ONLY CAPTURE).
      SIGNG1=-FOUR*GJ*(RI11+(RI11**2+SI11**2))
C-----ELASTIC.
      SIGNNI=SIGNNI+GJ*((SINPS2+TWO*RI11)**2+(SIN2PS+TWO*SI11)**2)
C-----CAPTURE (ABSORPTION).
      SIGNGI=SIGNGI+SIGNG1
C-----TEST FOR ANOTHER J VALUE.
      LOW=JR
   50 IF(LOW.LE.LHI) GO TO 10
      RETURN
C
C     FISSION
C
C     J VALUE LOOP.
C
C-----DEFINE STATISTICAL WEIGHT FOR ALL RESONANCES WITH THE SAME (L,J).
   60 GJ=RESTAB(2,LOW)
      AJNOW = RESJTAB(LOW)
C
C     FOR ILLEGAL OR MISSING J SEQUENCES (INDICATED BY NEGATIVE GJ)
C     ADD (OR SUBTRACT) POTENTIAL CONTRIBUTION TO TOTAL AND ELASTIC
C     CROSS SECTIONS.
C
      IF(GJ.GT.0.0) GO TO 70
C-----ADD 4*GJ*SIN(PS)**2 (NOTE, SINPS2 IS 2*SIN(PS)**2)
      SIGNNI=SIGNNI+TWO*RESTAB(3,LOW)*SINPS2
      LOW=LOW+1
      GO TO 110
C-----INITIALIZE MATRICES.
   70 DO 80 I=1,3
      DO 80 J=1,3
      S(I,J)=ZERO
   80 R(I,J)=ZERO
C
C     RESONANCE LOOP. ADD CONTRIBUTION OF ALL RESONANCES WITH SAME (L,J)
C
      DO 90 JR=LOW,LHI
C-----ONLY USE RESONANCES WITH SAME STATISTICAL WEIGHT, I.E. J VALUE.
      IF(DABS(AJNOW-RESJTAB(JR)).GT.0.01) GO TO 100
      DE=ENRES(JR)-E
      GAMN=PF*RESTAB(3,JR)
      GAMN2=DSQRT(GAMN)
      GAMNG2=RESTAB(4,JR)
      GAMFA2=RESTAB(5,JR)
      GAMFA=GAMFA2*GAMFA2
      GAMFB2=RESTAB(6,JR)
      GAMFB=GAMFB2*GAMFB2
      DEN=DE*DE+GAMNG2*GAMNG2
      DE2=DE/DEN
      GAMNG4=GAMNG2/DEN
      GAMNFA=GAMN2*GAMFA2
      GAMNFB=GAMN2*GAMFB2
      GAMFAB=GAMFA2*GAMFB2
C-----DEFINE TERMS IN UPPER TRIANGLE OF MATRIX.
      R(1,1)=R(1,1)+GAMNG4*GAMN
      R(1,2)=R(1,2)+GAMNG4*GAMNFA
      R(1,3)=R(1,3)+GAMNG4*GAMNFB
      R(2,2)=R(2,2)+GAMNG4*GAMFA
      R(2,3)=R(2,3)+GAMNG4*GAMFAB
      R(3,3)=R(3,3)+GAMNG4*GAMFB
      S(1,1)=S(1,1)+DE2*GAMN
      S(1,2)=S(1,2)+DE2*GAMNFA
      S(1,3)=S(1,3)+DE2*GAMNFB
      S(2,2)=S(2,2)+DE2*GAMFA
      S(2,3)=S(2,3)+DE2*GAMFAB
      S(3,3)=S(3,3)+DE2*GAMFB
C-----END OF RESONANCE LOOP.
   90 CONTINUE
      JR=LHI+1
C-----MAKE MATRICES SYMMETRIC.
  100 R(2,1)=R(1,2)
      S(2,1)=S(1,2)
      R(3,1)=R(1,3)
      S(3,1)=S(1,3)
      R(3,2)=R(2,3)
      S(3,2)=S(2,3)
C-----INVERT COMPLEX MATRIX.
      CALL FROBNS(R,S,RI,SI)
C
C     ADD CONTRIBUTION OF CURRENT (L,J) SEQUENCE TO SUM.
C
C-----(SEE, EQULVALENCE FOR DEFINITION OF RI11, SI11, RI12, SI12, RI13,
C----- SI13).
      GJ4=FOUR*GJ
C-----ABSORPTION (IN THIS CASE CAPTURE + FISSION).
      SIGNG1=-GJ4*(RI11+(RI11**2+SI11**2))
C-----ELASTIC.
      SIGNNI=SIGNNI+GJ*((SINPS2+TWO*RI11)**2+(SIN2PS+TWO*SI11)**2)
C-----FISSION.
      SIGNF1=GJ4*(RI12**2+RI13**2+SI12**2+SI13**2)
C-----CAPTURE (ABSORPTION - FISSION).
      SIGNGI=SIGNGI+(SIGNG1-SIGNF1)
C-----FISSION.
      SIGNFI=SIGNFI+SIGNF1
C-----TEST FOR ANOTHER J VALUE.
      LOW=JR
  110 IF(LOW.LE.LHI) GO TO 60
      RETURN
      END
      SUBROUTINE SIGAA4(E)
C=======================================================================
C
C     ADD CONTRIBUTION OF ONE SECTION OF ADLER-ADLER PARAMETERS.
C     THIS WILL INCLUDE THE BACKGROUND CROSS SECTION PLUS ALL
C     RESONANCES, FOR ALL VALUES OF L AND J.
C
C     THIS ROUTINE USES THE ENDF/B-IV AND EARLIER DEFINITIONS OF THE
C     ADLER-ADLER PARAMETERS.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/RANGER/LOW,LHI
      COMMON/PARAMS/RHO2,RHOP,BETAE,AL,SF2,PF,PS,COSPS,SINPS,SIGNTI,
     1 SIGNNI,SIGNGI,SIGNFI
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DATA COMFC1/0.0D+00/
C-----DEFINE ARITHMETIC STATEMENT FUNCTION FOR CALCULATION OF BACKGROUND
      BACKGR(JR)=((((RESTAB(4,JR)/E+RESTAB(3,JR))/E+RESTAB(2,JR))/E+
     1 RESTAB(1,JR))+(RESTAB(6,JR)*E+RESTAB(5,JR))*E)
C-----DEFINE ARITHMETIC STATEMENT FUNCTION FOR CALCULATION OF RESONANCE.
      RESER(GR,GI)=COMFC1*(GR*COSPS+GI*SINPS)+COMFC2*(GI*COSPS-GR*SINPS)
C
C     DEFINE RESONANCE INDEPENDENT QUANTITIES.
C
      ESQRT=DSQRT(E)
C-----TYPE OF BACKGROUND (NOT L VALUE).
      LI=LVALUE(ISECT)
C-----ADLER-ADLER PARAMETERS ARE ONLY DEFINED FOR L=0, IN WHICH CASE
C-----THE PHASE SHIFT IS EQUAL TO RHO (NO NEED TO CALL FACPHI).
      RHOP=RHOP1(ISECT)*DSQRT(E)
      COSPS=DCOS(RHOP)
      SINPS=DSIN(RHOP)
C
C     DEFINE BACKGROUND CROSS SECTIONS.
C
      GO TO (10,20,30,40,50,60,70),LI
   10 SIGNTI=BACKGR(LOW)
      GO TO 80
   20 SIGNFI=BACKGR(LOW)
      GO TO 80
   30 SIGNTI=BACKGR(LOW)
      SIGNFI=BACKGR(LOW+1)
      GO TO 80
   40 SIGNGI=BACKGR(LOW)
      GO TO 80
   50 SIGNTI=BACKGR(LOW)
      SIGNGI=BACKGR(LOW+1)
      GO TO 80
   60 SIGNFI=BACKGR(LOW)
      SIGNGI=BACKGR(LOW+1)
      GO TO 80
   70 SIGNTI=BACKGR(LOW)
      SIGNFI=BACKGR(LOW+1)
      SIGNGI=BACKGR(LOW+2)
C
C     RESONANCE LOOP.
C
C-----DEFINE BASE ADDRESS FOR RESONANCE PARAMETERS.
   80 LOW=LOW+3
      DO 90 JR=LOW,LHI,2
      JRP1=JR+1
C-----CONSTRAIN FIT TO USE SAME RESONANCE ENERGY AND TOTAL WIDTH FOR
C-----ALL REACTIONS (SEE ENDF/B-102 PROCEDURES MANUAL).
      DET=ENRES(JR)-E
      DWT=RESTAB(2,JR)
      DEN=DET*DET+DWT*DWT
      COMFC1=DWT/DEN
      COMFC2=DET/DEN
      SIGNTI=SIGNTI+RESER(RESTAB(3,JR),RESTAB(4,JR))
      SIGNFI=SIGNFI+RESER(RESTAB(1,JRP1),RESTAB(2,JRP1))
      SIGNGI=SIGNGI+RESER(RESTAB(5,JRP1),RESTAB(6,JRP1))
C-----END OF RESONANCE LOOP.
   90 CONTINUE
C-----MULTIPLY ALL BY THE SQUARE ROOT OF E AND ADD TERM TO TOTAL.
      SIGNTI=ESQRT*SIGNTI+TWO*(ONE-COSPS)
      SIGNFI=ESQRT*SIGNFI
      SIGNGI=ESQRT*SIGNGI
C-----DEFINE ELASTIC BY SUBTRACTION.
      SIGNNI=SIGNTI-(SIGNFI+SIGNGI)
      RETURN
      END
      SUBROUTINE SIGAA5(E)
C=======================================================================
C
C     ADD CONTRIBUTION OF ONE SECTION OF ADLER-ADLER PARAMETERS.
C     THIS WILL INCLUDE THE BACKGROUND CROSS SECTION PLUS ALL
C     RESONANCES, FOR ALL VALUES OF L AND J.
C
C     THIS ROUTINE USES THE ENDF/B-V AND VI DEFINITIONS OF THE
C     ADLER-ADLER PARAMETERS.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/RANGER/LOW,LHI
      COMMON/PARAMS/RHO2,RHOP,BETAE,AL,SF2,PF,PS,COSPS,SINPS,SIGNTI,
     1 SIGNNI,SIGNGI,SIGNFI
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
C-----DEFINE ARITHMETIC STATEMENT FUNCTION FOR CALCULATION OF BACKGROUND
      BACKGR(JR)=((((RESTAB(4,JR)/E+RESTAB(3,JR))/E+RESTAB(2,JR))/E+
     1 RESTAB(1,JR))+(RESTAB(6,JR)*E+RESTAB(5,JR))*E)
C
C     DEFINE RESONANCE INDEPENDENT QUANTITIES.
C
      ESQRT=DSQRT(E)
C-----TYPE OF BACKGROUND (NOT L VALUE).
      LI=LVALUE(ISECT)
C-----ADLER-ADLER PARAMETERS ARE ONLY DEFINED FOR L=0, IN WHICH CASE
C-----THE PHASE SHIFT IS EQUAL TO RHO (NO NEED TO CALL FACPHI).
      RHOP=RHOP1(ISECT)*ESQRT
      COSPS=DCOS(RHOP)
      SINPS=DSIN(RHOP)
C-----INITIALIZE SUMS.
      SIGNT1=ZERO
      SIGNT2=ZERO
      SIGNT3=ZERO
      SIGNT4=ZERO
      SIGNF1=ZERO
      SIGNF2=ZERO
      SIGNG1=ZERO
      SIGNG2=ZERO
C
C     DEFINE BACKGROUND CROSS SECTIONS.
C
      GO TO (10,20,30,40,50,60,70),LI
   10 SIGNTI=BACKGR(LOW)
      GO TO 80
   20 SIGNFI=BACKGR(LOW)
      GO TO 80
   30 SIGNTI=BACKGR(LOW)
      SIGNFI=BACKGR(LOW+1)
      GO TO 80
   40 SIGNGI=BACKGR(LOW)
      GO TO 80
   50 SIGNTI=BACKGR(LOW)
      SIGNGI=BACKGR(LOW+1)
      GO TO 80
   60 SIGNFI=BACKGR(LOW)
      SIGNGI=BACKGR(LOW+1)
      GO TO 80
   70 SIGNTI=BACKGR(LOW)
      SIGNFI=BACKGR(LOW+1)
      SIGNGI=BACKGR(LOW+2)
C
C     RESONANCE LOOP.
C
C-----DEFINE BASE ADDRESS FOR RESONANCE PARAMETERS.
   80 LOW=LOW+3
      DO 90 JR=LOW,LHI,2
      JRP1=JR+1
C-----CONSTRAIN FIT TO USE SAME RESONANCE ENERGY AND TOTAL WIDTH FOR
C-----ALL REACTIONS (SEE ENDF/B-102 PROCEDURES MANUAL).
      DET=ENRES(JR)-E
      DWT=RESTAB(2,JR)
      GRT=RESTAB(3,JR)
      GIT=RESTAB(4,JR)
      DEN=DET*DET+DWT*DWT
      COMFC1=DWT/DEN
      COMFC2=DET/DEN
      SIGNT1=SIGNT1+COMFC1*GRT
      SIGNT2=SIGNT2+COMFC1*GIT
      SIGNT3=SIGNT3+COMFC2*GIT
      SIGNT4=SIGNT4+COMFC2*GRT
      SIGNF1=SIGNF1+COMFC1*RESTAB(1,JRP1)
      SIGNF2=SIGNF2+COMFC2*RESTAB(2,JRP1)
      SIGNG1=SIGNG1+COMFC1*RESTAB(5,JRP1)
      SIGNG2=SIGNG2+COMFC2*RESTAB(6,JRP1)
C-----END OF RESONANCE LOOP.
   90 CONTINUE
C-----ADD POTENTIAL TO TOTAL, MULTIPLY BY THE SQUARE ROOT OF E.
      SIGNTI=TWO*(ONE-COSPS)+ESQRT*(SIGNTI+
     1 (SIGNT1+SIGNT3)*COSPS+(SIGNT2-SIGNT4)*SINPS)
      SIGNFI=ESQRT*(SIGNFI+SIGNF1+SIGNF2)
      SIGNGI=ESQRT*(SIGNGI+SIGNG1+SIGNG2)
C-----DEFINE ELASTIC BY SUBTRACTION.
      SIGNNI=SIGNTI-(SIGNFI+SIGNGI)
      RETURN
      END
      SUBROUTINE SIGHRF(E)
C=======================================================================
C
C     ADD CONTRIBUTION OF ONE SECTION (L,S,J) OF HYBRID R-FUNCTION
C     PARAMETERS.
C
C     EACH (L,S,J) STATE WILL BE TREATED AS A SEPARATE SECTION.
C
C     THE EQUATIONS DEFINED IN ENDF-102 SAY TO USE R-MATRIX FOR THE
C     ELASTIC AND EXACTLY SINGLE LEVEL BREIT-WIGNER FOR ALL OTHER
C     REACTIONS. THIS LEADS TO AN ODD MIXTURE TO EQUATIONS IN THE
C     FOLLOWING TREATMENT.
C
C     CAPTURE AND FISSION CROSS SECTIONS ARE CALCULATED EXACTLY AS IN
C     THE CASE OF SINGLE LEVEL BREIT-WIGNER RESONANCES (FOR DETAILS
C     SEE, SUBROUTINE SIGBW1). HERE WE WILL ONLY CONSIDER THE ELASTIC
C     CROSS SECTION.
C
C     TERMS USED TO DEFINE ELASTIC CROSS SECTION
C     ==========================================
C     WE DEFINE,
C
C     RP   = RLSJ*PLSJ
C     RR0P = RR0LSJ*PLSJ
C     RI0P = RI0LSJ*PLSJ
C
C            GAM(N)
C     RP   = ========================        + (RR0P + I*RI0P)
C            2*((ER-E) - I*(GAM(R)/2)
C
C            GAM(N)*(((ER-E)+I*GAM(R)/2)
C          = ===========================     + (RR0P + I*RI0P)
C            2*((ER-E)**2+(GAM(R)/2)**2)
C
C            GAM(N)*(ER-E)+I*GAM(N)*GAM(R)/2
C          = =============================== + (RR0P + I*RI0P)
C            2*((ER-E)**2+(GAM(R)/2)**2)
C
C     RP   = RRP   + I*RIP
C
C     RRP  =(GAM(N)*(ER-E))/DEN1         + RR0P
C     RIP  =(GAM(N)*GAM(R)/2)/DEN1       + RI0P
C     DEN1 =2*((ER-E)**2+(GAM(R)/2)**2)
C
C     SUMMED OVER RESONANCES FOR EACH (L,S,J) SEQUENCE. FOLLOWING THE
C     SUM OVER RESONANCES WE DEFINE,
C
C            1 + I*PLSJ*RLSJ   1 + I*RP   (1 - RIP) + I*RRP
C     XLSJ = =============== = ========   =================
C            1 - I*PLSJ*RLSJ   1 - I*RP   (1 + RIP) - I*RRP
C
C            ((1 - RIP) + I*RRP)*((1 + RIP) + I*RRP)
C          = =======================================
C            ((1 + RIP)**2 + (RRP)**2)
C
C            1 - RIP**2 - RRP**2 + I*2*RRP
C          = =============================
C            ((1 + RIP)**2 + (RRP)**2)
C
C                  2*(RIP+ RIP**2 + RRP**2 - I*RRP)
C          = 1 -  =================================
C                 ((1 + RIP)**2 + (RRP)**2)
C
C     XLSJ = (1 - R) - I*IS
C
C     R    = 2*(RIP+((RIP)**2+(RRP)**2)/DEN2
C     S    =-2*RRP/DEN2
C     DEN2 =(1 + RIP)**2 + (RRP)**2
C
C     DEFINITION OF THE ELASTIC CROSS SECTION
C     =======================================
C     THE ELASTIC CROSS SECTION IS DEFINED TO BE,
C
C     ELASTIC      = GJ*(1 - ULSJ)**2
C
C     ULSJ         = EXP(-I*2*PS)*XLSJ
C                  = (COS(2*PS) - I*SIN(2*PS))*((R + 1) - I*S)
C
C     ELASTIC  = GJ*((2*SIN(PS)**2+R)**2 + (SIN(2*PS)+S)**2)
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/RANGER/LOW,LHI
      COMMON/PARAMS/RHO2,RHOP,BETAE,AL,SF2,PF,PS,COSPS,SINPS,SIGNTI,
     1 SIGNNI,SIGNGI,SIGNFI
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
C-----TEMPORARILY DEFINE REAL AND IMAGINARY BACKGROUND TO BE ZERO.
      DATA SFC/0.0D+00/
      DATA R0R/0.0D+00/
      DATA R0I/0.0D+00/
C
C     DEFINE RESONANCE INDEPENDENT QUANTITIES.
C
      GJ=GJTAB(ISECT)
      RHO2=E*RHOX2(ISECT)
      RHOP=RHOP1(ISECT)*DSQRT(E)
C-----DEFINE PENETRATION FACTOR, SHIFT FACTOR, PHASE SHIFT.
      CALL FACTS2(LVALUE(ISECT),RHO2,SF2,PF)
      CALL FACPHI(LVALUE(ISECT),RHOP,PS)
      COSPS=DCOS(PS)
      SINPS=DSIN(PS)
C-----DEFINE SIN(2*PS) AND 2*SIN(PS)**2
      SIN2PS=TWO*SINPS*COSPS
      SINPS2=TWO*SINPS*SINPS
C
C     FOR MISSING AND ILLEGAL J SEQUENCES (INDICATED BY NEGATIVE GJ)
C     ADD (OR SUBTRACT) POTENTIAL CONTRIBUTION TO ELASTIC CROSS SECTION.
C
      IF(GJ.GT.0.0) GO TO 10
C-----ADD 4*GJ*SIN(PS)**2 (NOTE, SINPS2 = 2*SIN(PS)**2)
      SIGNNI=SIGNNI+TWO*RESTAB(3,LOW)*SINPS2
      GO TO 60
C-----DEFINE PENETRATION FACTORS FOR COMPETITIVE WIDTHS, IF ANY.
   10 LRX=LRXTAB(ISECT)
C-----INITIALIZE CONTRIBUTION OF (L,S,J) SEQUENCE.
      RR=PF*R0R
      RI=PF*R0I
      SIGNGJ=ZERO
      SIGNFJ=ZERO
C
C     RESONANCE LOOP. ADD CONTRIBUTION OF ALL RESONANCES WITH SAME
C     (L,S,J).
C
      DO 50 JR=LOW,LHI,2
      ER=ENRES(JR)
C-----DEFINE NEUTRON, CAPTURE AND FISSION WIDTHS. INITIALIZE ELIMINATED
C-----WIDTH TO CAPTURE (COMPETING REACTIONS, IF ANY, WILL BE ADDED
C-----BELOW).
      GN=RESTAB(2,JR)
      GAMN=PF*GN
      GAMG=RESTAB(3,JR)
      GAMF=RESTAB(4,JR)
      GAMER=GAMG
C-----DEFINE COMPETITIVE WIDTHS, IF ANY AND ADD TO ELIMINATED WIDTH.
      IF(LRX.LE.0) GO TO 40
C-----INITIALIZE INDEX TO WIDTH AND EXIT CHANNEL L-VALUE.
      JRX1=JR
      LL1=4
      JRX2=JR+1
      LL2=2
C-----DEFINE COMPETITIVE WIDTHS AND ADD TO ELIMINATED WIDTH.
      DO 30 I=1,LRX
      LL1=LL1+1
      LL2=LL2+1
      LCOM=RESTAB(LL2,JRX2)
      RHOC2=(E+EXCITE(I,ISECT))*RHOX2(ISECT)
      CALL FACTS2(LCOM,RHOC2,SFC,PFC)
      IF(LL1.LE.6) GO TO 20
      JRX1=JRX2
      LL1=1
   20 GAMC=PFC*RESTAB(LL1,JRX1)
   30 GAMER=GAMER+GAMC
C-----ADD CONTRIBUTION OF RESONANCE.
   40 GAMER2=HALF*GAMER
      DE=E-(ER+GN*(SHIFT2(JR)-SF2))
C-----R-MATRIX TREATMENT FOR ELASTIC.
      DEN=DE*DE+GAMER2*GAMER2
      COMFAC=GAMN/DEN
      RR=RR+COMFAC*DE
      RI=RI+COMFAC*GAMER
C-----BREIT-WIGNER TREATMENT FOR CAPTURE AND FISSION.
      GAMT=GAMER+GAMN+GAMF
      GAMT2=HALF*GAMT
      DEN=DE*DE+GAMT2*GAMT2
      COMFAC=GAMN/DEN
      SIGNGJ=SIGNGJ+COMFAC*GAMG
      SIGNFJ=SIGNFJ+COMFAC*GAMF
C-----END OF RESONANCE LOOP.
   50 CONTINUE
C-----DEFINE 2 TERMS FOR UNIFORM TREATMENT.
      DEN2=(ONE+RI)**2+RR**2
      RI=TWO*(RI+RI**2+RR**2)/DEN2
      RR=-TWO*RR/DEN2
C-----MULTIPLY CONTRIBUTION OF (L,S,J) SEQUENCE BY STATISTICAL WEIGHT
C-----AND ADD TO SUM (NOTE, SINPS2 = 2*SIN(PS)**2).
      SIGNNI=SIGNNI+GJ*((SINPS2+RI)**2+(SIN2PS+RR)**2)
      SIGNGI=SIGNGI+GJ*SIGNGJ
      SIGNFI=SIGNFI+GJ*SIGNFJ
   60 RETURN
      END
      SUBROUTINE SIGGRM(E)
C=======================================================================
C
C     GENERAL R-MATRIX FORMALISM
C     ==========================
C
C     GENERAL R-MATRIX FORMALISM HAS NOT YET BEEN IMPLEMENTED.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      DATA IMOK/0/
      IF(IMOK.NE.0) GO TO 20
      E=0.0
      WRITE(OUTP,10)
      WRITE(*   ,10)
      CALL ENDIT
   10 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 ' General R-Matrix Formalism has NOT yet been Implemented'/
     2 ' Execution Terminated')
   20 RETURN
      END
      SUBROUTINE SIGURP(E)
C=======================================================================
C
C     DEFINE CROSS SECTIONS FOR A SECTION OF UNRESOLVED RESONANCE
C     (LRU=2), ENERGY DEPENDENT PARAMETERS (LRF=2).
C
C     CROSS SECTIONS ARE DEFINED BY INTERPOLATING PARAMETERS (NOT CROSS
C     SECTIONS).
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/SECTON/BETA(200),RHOX2(200),RHOP1(200),EL(200),EH(200),
     1 GJTAB(200),EXCITE(4,200),NLOW(200),NHIGH(200),LVALUE(200),
     2 LRXTAB(200),NAPTAB(200),MODE(200),ISECT,NSECT
      COMMON/RANGER/LOW,LHI
      COMMON/PARAMS/RHO2,RHOP,BETAE,AL,SF2,PF,PS,COSPS,SINPS,SIGNTI,
     1 SIGNNI,SIGNGI,SIGNFI
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION DUMSET(6)
      EQUIVALENCE (DUMSET(2),DX),(DUMSET(3),GXX),(DUMSET(4),GNOX),
     1 (DUMSET(5),GGX),(DUMSET(6),GFX)
C-----DEFINE L VALUE.
      LNOW=LVALUE(ISECT)
C-----DEFINE INTERPOLATION LAW, STATISTICAL WEIGHT AND DEGREES OF
C-----FREEDOM FOR EACH REACTION (CAPTURE DEGREES OF FREEDOM IS ASSUMED
C-----TO BE INFINITY).
      INT=RESTAB(1,LOW)
      GJ=RESTAB(2,LOW)
      MUX=RESTAB(3,LOW)
      MUN=RESTAB(4,LOW)
      MUF=RESTAB(6,LOW)
      AMUN=MUN
C-----FIND ENERGY OR ENERGY RANGE WHERE PARAMETERS ARE GIVEN.
      LOWP1=LOW+1
      DO 10 L=LOWP1,LHI
      IF(E-ENRES(L)) 20,30,10
   10 CONTINUE
C-----EXTEND PARAMETERS AS CONSTANT OUTSIDE THEIR TABULATED ENERGY
C-----RANGE.
      L=LHI
      GO TO 30
   20 IF(L.EQ.LOWP1) GO TO 30
C-----INTERPOLATE PARAMETERS TO ENERGY E.
      CALL TERPUP(E,DUMSET,L,INT)
      GO TO 40
C-----DEFINE PARAMETER SET AT E (E IS AN ENERGY AT WHICH PARAMETERS
C-----IS TABULATED).
   30 DX=RESTAB(2,L)
      GXX=RESTAB(3,L)
      GNOX=RESTAB(4,L)
      GGX=RESTAB(5,L)
      GFX=RESTAB(6,L)
C-----CALCULATE PENETRABILITY (VL) AND PHASE SHIFT(PS)
   40 E2=DSQRT(E)
      RHO2=E*RHOX2(ISECT)
      RHOC=E2*RHOP1(ISECT)
      CALL UNFAC(LNOW,RHO2,RHOC,AMUN,VL,PS)
C-----DEFINE NEUTRON WIDTH.
      GNX=GNOX*VL*E2
C-----CALCULATE FLUCTUATION INTEGRALS (RN, RC AND RF).
      CALL GNRL3(GNX,GGX,GFX,GXX,MUN,MUF,MUX,RN,RC,RF)
C-----DEFINE COMMON FACTOR FOR ALL REACTIONS.
      TEMP=PI2*GJ*GNX/DX
C-----DEFINE CROSS SECTIONS FOR THIS (L, J) STATE.
      SIGNNI=(RN*GNX-TWO*(DSIN(PS)**2))*TEMP
      SIGNGI=RC*GGX*TEMP
      SIGNFI=RF*GFX*TEMP
C-----ADD L COMPONENT OF POTENTIAL SCATTERING DURING PASS THROUGH
C-----FIRST J STATE OF EACH L VALUE (INDICATED BY EITHER A NEW MODE
C-----MODE=RESONANCE REPRESENTATION, OR NEW L VALUE).
      IF(ISECT.EQ.1) GO TO 50
      IF(MODE(ISECT-1).EQ.MODE(ISECT).AND.
     1 LVALUE(ISECT-1).EQ.LVALUE(ISECT)) GO TO 60
   50 SIGNNI=SIGNNI+(EIGHT*FLOAT(LNOW)+FOUR)*((DSIN(PS))**2)
   60 RETURN
      END
      SUBROUTINE SIGURS(E)
C=======================================================================
C
C     CROSS SECTIONS ARE DEFINED BY INTERPOLATING CROSS SECTIONS (NOT
C     PARAMETERS). THIS ROUTINE IS PRESENTLY NOT IMPLEMENTED.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      DATA IMOK/0/
      IF(IMOK.NE.0) GO TO 20
      E=0.0
      WRITE(OUTP,10)
      WRITE(*   ,10)
      CALL ENDIT
   10 FORMAT(1X,7('WARNING...'),'WARNING'/
     1 ' Unresolved Parameter Interpolation has NOT been Implemented'/
     2 ' Execution Terminated')
   20 RETURN
      END
      SUBROUTINE FROBNS(AM1,B,CM1,D)
C=======================================================================
C
C     STARTING FROM THE COMPLEX MATRIX (A+I)+I*B, WHERE A AND B ARE
C     SYMMETRIC, INVERT THE COMPLEX MATRIX TO DEFINE INVERSE (C+I)+I*D.
C
C     THE FROBENIUS-SCHUR METHOD IS USED TO INVERT THE COMPLEX MATRIX.
C
C     STARTING FROM THE DEFINITION OF THE COMPLEX MATRIX AND ITS INVERSE
C
C     IDENTITY = ((A+I)+I*B)*((C+I)+I*D)
C
C     WE OBTAIN 2 REAL MATRIX EQUATIONS
C
C     I       = (A+I)*(C+I)-B*D
C     0       = B*(C+I)+(A+I)*D
C
C    -A       = (A+I)*C-B*D
C    -B       = B*C+(A+I)*D
C
C     FROM THE SECOND EQUATION,
C
C     (A+I)*D = -(B+B*C) = -B*(C+I)
C     D       =-INVERSE((A+I))*(B*(C+I))
C
C     SUBSTITUTING THIS EXPRESSION FOR (D) INTO THE FIRST EQUATION.
C
C    -A       = (A+I)*C+B*INVERSE((A+I))*(B*(C+I))
C    -A       =((A+I)+B*INVERSE((A+I))*B)*C+B*INVERSE((A+I))*B
C
C     C       =-INVERSE((A+I)+B*INVERSE((A+I))*B)*(A+B*INVERSE((A+I))*B)
C     D       =-INVERSE((A+I))*B*(C+I)
C
C     THIS METHOD REQUIRES ONLY 2 MATRIX INVERSIONS.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      DIMENSION A(3,3),B(3,3),C(3,3),D(3,3),AI(3,3),AIB(3,3),AM1(3,3),
     1 CM1(3,3),C2(3,3),C3(3,3)
C-----DEFINE A = (A-I)+I
      DO 20 I=1,3
      DO 10 J=1,3
   10 A(I,J)=AM1(I,J)
   20 A(I,I)=A(I,I)+ONE
C-----DEFINE THE INVERSE OF A.
      CALL COFACT(A,AI)
C-----DEFINE INVERSE(A)*B
      DO 40 I=1,3
      DO 40 J=1,3
      SUM=ZERO
      DO 30 K=1,3
   30 SUM=SUM+AI(I,K)*B(K,J)
   40 AIB(I,J)=SUM
C-----STORE A+B*INVERSE(A)*B IN C AND A'+B*INVERSE(A)*B IN C2.
      DO 60 I=1,3
      DO 60 J=1,3
      SUM=ZERO
      DO 50 K=1,3
   50 SUM=SUM+B(I,K)*AIB(K,J)
      C(I,J)=A(I,J)+SUM
   60 C2(I,J)=AM1(I,J)+SUM
C-----DEFINE THE INVERSE OF A+B*INVERSE(A)*B
      CALL COFACT(C,C3)
C-----DEFINE C' AND C = C' + I
      DO 90 I=1,3
      DO 80 J=1,3
      SUM=ZERO
      DO 70 K=1,3
   70 SUM=SUM+C3(I,K)*C2(K,J)
      C(I,J)=-SUM
   80 CM1(I,J)=-SUM
   90 C(I,I)=C(I,I)+ONE
C-----DEFINE D.
      DO 110 I=1,3
      DO 110 J=1,3
      SUM=ZERO
      DO 100 K=1,3
  100 SUM=SUM+AIB(I,K)*C(K,J)
  110 D(I,J)=-SUM
      RETURN
      END
      SUBROUTINE COFACT(A,AI)
C=======================================================================
C
C     USE METHOD OF COFACTORS TO INVERT SYMMETRIC 3 X 3 MATRIX (A).
C     SINCE (A) IS SYMMETRIC, ITS INVERSE (AI) WILL ALSO BE
C     SYMMETRIC.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      DIMENSION A(3,3),AI(3,3)
C-----DEFINE DETERMINANT (ASSUMING SYMMETRIC).
      DET1=A(2,2)*A(3,3)-A(2,3)*A(3,2)
      DET2=A(2,3)*A(3,1)-A(2,1)*A(3,3)
      DET3=A(2,1)*A(3,2)-A(2,2)*A(3,1)
      DET=A(1,1)*DET1+A(1,2)*DET2+A(1,3)*DET3
C-----DEFINE INVERSE (ASSUMING SYMMETRIC).
      AI(1,1)=DET1/DET
      AI(2,1)=DET2/DET
      AI(3,1)=DET3/DET
      AI(1,2)=AI(2,1)
      AI(2,2)=(A(1,1)*A(3,3)-A(3,1)*A(1,3))/DET
      AI(3,2)=(A(1,2)*A(3,1)-A(1,1)*A(3,2))/DET
      AI(1,3)=AI(3,1)
      AI(2,3)=AI(3,2)
      AI(3,3)=(A(1,1)*A(2,2)-A(1,2)*A(2,1))/DET
      RETURN
      END
      SUBROUTINE ORDER(LOW,LHI)
C=======================================================================
C
C     FOR EACH SECTION (I.E., SAME ISOTOPE, ENERGY RANGE, L VALUE) SORT
C     RESONANCES INTO ASCENDING (J, E) ORDER.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER SWITCH
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
C-----SORT IS NOT REQUIRED IF ONLY 1 RESONANCE.
      IF(LOW.EQ.LHI) GO TO 60
      LTOP=LHI
      LOWP1=LOW+1
C
C     J, E SORT.
C
      DO 50 IR=LOWP1,LHI
      JRM1=LOW
      SWITCH=0
      DO 40 JR=LOWP1,LTOP
      IF(RESTAB(2,JRM1)-RESTAB(2,JR)) 40,10,20
   10 IF(ENRES(JRM1)-ENRES(JR)) 40,40,20
C-----EXCHANGE RESONANCES INTO J, E ORDER.
   20 SWITCH=1
      DRES=ENRES(JRM1)
      ENRES(JRM1)=ENRES(JR)
      ENRES(JR)=DRES
      DO 30 I=1,6
      A=RESTAB(I,JRM1)
      RESTAB(I,JRM1)=RESTAB(I,JR)
   30 RESTAB(I,JR)=A
   40 JRM1=JR
C-----STOP SORT IF ALL RESONANCES ARE ALREADY IN J, E ORDER.
      IF(SWITCH.LE.0) GO TO 60
C-----RESONANCE WITH LARGEST J, E IS NOW IN LAST LOCATION (LTOP).
C-----SHORTEN LENGTH OF TABLE TO CONTINUE SORT OF REMAINING RESONANCES.
   50 LTOP=LTOP-1
   60 RETURN
      END
      SUBROUTINE SORTS(X,LX)
C=======================================================================
C
C     SORT AN ARRAY INTO ASCENDING FLOATING POINT ORDER.
C
C     ARGUMENTS
C     ---------
C     X      = ARRAY TO SORT (DIMENSION LX)
C     LX     = NUMBER OF ELEMENTS TO SORT
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER SWITCH
      DIMENSION X(LX)
C-----IF LESS THAN TWO (2) ELEMENTS NO SORT IS REQUIRED.
      IF(LX.LT.2) RETURN
C-----SET INNER LOOP INDICES
      LTOP=LX+1
C-----SET UP OUTER LOOP
      DO 30 IN=2,LX
C-----INITIALIZE EXCHANGE SWITCH OFF.
      SWITCH=0
C-----SET UPPER INDEX TO INNER LOOP
      LTOP=LTOP-1
C-----SET LARGEST ELEMENT INDICATOR TO FIRST ELEMENT
      LBIG=1
C-----SET UP INNER LOOP
      DO 20 J=2,LTOP
C-----COMPARE ELEMENTS
      IF(X(LBIG).GT.X(J)) GO TO 10
C-----ELEMENTS ARE IN NUMERICAL ORDER. RESET INDEX TO LARGER ELEMENT.
      LBIG=J
      GO TO 20
C-----ELEMENTS ARE NOT IN NUMERICAL ORDER. SET INTERCHANGE SWITCH.
   10 SWITCH=1
C-----END OF INNER LOOP
   20 CONTINUE
C-----ARE ALL ELEMENTS ALREADY IN ORDER......
      IF(SWITCH.LE.0) RETURN
C-----NO. MOVE LARGEST ELEMENT TO TOP OF REMAINING TABLE
      DUMMY=X(LBIG)
      X(LBIG)=X(LTOP)
      X(LTOP)=DUMMY
   30 CONTINUE
      RETURN
      END
      SUBROUTINE SORTD(X,LX)
C=======================================================================
C
C     SORT AN ARRAY INTO ASCENDING DOUBLE PRECISION ORDER.
C
C     ARGUMENTS
C     ---------
C     X      = ARRAY TO SORT (DIMENSION LX)
C     LX     = NUMBER OF ELEMENTS TO SORT
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER SWITCH
      DIMENSION X(LX)
C-----IF LESS THAN TWO (2) ELEMENTS NO SORT IS REQUIRED.
      IF(LX.LT.2) RETURN
C-----SET INNER LOOP INDICES
      LTOP=LX+1
C-----SET UP OUTER LOOP
      DO 30 IN=2,LX
C-----INITIALIZE EXCHANGE SWITCH OFF.
      SWITCH=0
C-----SET UPPER INDEX TO INNER LOOP
      LTOP=LTOP-1
C-----SET LARGEST ELEMENT INDICATOR TO FIRST ELEMENT
      LBIG=1
C-----SET UP INNER LOOP
      DO 20 J=2,LTOP
C-----COMPARE ELEMENTS
      IF(X(LBIG).GT.X(J)) GO TO 10
C-----ELEMENTS ARE IN NUMERICAL ORDER. RESET INDEX TO LARGER ELEMENT.
      LBIG=J
      GO TO 20
C-----ELEMENTS ARE NOT IN NUMERICAL ORDER. SET INTERCHANGE SWITCH.
   10 SWITCH=1
C-----END OF INNER LOOP
   20 CONTINUE
C-----ARE ALL ELEMENTS ALREADY IN ORDER......
      IF(SWITCH.LE.0) RETURN
C-----NO. MOVE LARGEST ELEMENT TO TOP OF REMAINING TABLE
      DUMMY=X(LBIG)
      X(LBIG)=X(LTOP)
      X(LTOP)=DUMMY
   30 CONTINUE
      RETURN
      END
      SUBROUTINE SUBINT
C=======================================================================
C
C     DEFINE SUBINTERVALS BETWEEN NODES ACCORDING TO THE WIDTH OF
C     THE TWO ADJACENT RESONANCES. THIS ROUTINE HAS A BUILT-IN TABLE
C     OF MULTIPLES OF HALF-WIDTHS REQUIRED TO FIT A SIMPLE BREIT-WIGNER
C     LINE SPACE TO WITHIN 1.0 PER-CENT ACCURACY OVER THE RANGE 0 TO
C     500 HALF-WIDTHS,
C
C     SIGMA(X)=1.0/(1.0+X*X)
C
C     WHERE X IS THE DISTANCE PEAK IN HALF-WIDTHS
C
C     STARTING FROM THE LOWER ENERGY END OF AN INTERVAL AND USING
C     SUB-INTERVALS BASED UPON THE WIDTH AT THE LOWER ENERGY END, NODES
C     ARE INSERTED AT SUCESSIVELY HIGHER ENERGIES UNTIL A NODE IS
C     CLOSER (IN HALF-WIDTH UNITS) TO THE UPPER ENERGY END OF THE
C     INTERVAL. THEN USING SUB-INTERVALS BASED UPON THE WIDTH AT THE
C     UPPER ENERGY, NODES ARE INSERTED UP TO THE UPPER ENERGY END OF
C     THE INTERVAL.
C
C     WITH THIS ALOGORITHM CLOSELY SPACED RESONANCES WILL HAVE ONLY
C     A FEW SUB-INTERVALS PER INTERVAL (E.G. U-235). WIDELY SPACED
C     RESONANCES WILL HAVE MORE SUB-INTERVALS PER INTERVAL (E.G. U-238).
C     FOR A MIX OF S, P, D ETC. RESONANCES THIS ALOGORITHM GUARANTEES
C     AN ADEQUTE DESCRIPTION OF THE PROFILE OF EVEN EXTREMELY NARROW
C     RESONANCES (WHICH MAY IMMEDIATELY CONVERGENCE TO THE ACCURACY
C     REQUESTED, THUS MINIMIZING ITERATION).
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/SUBS/ESUB(217),ENODP,ENODM,WIDP,WIDM,ISUB,NSUB
      DIMENSION TIMES(108)
C-----DEFINE NUMBER OF HALF WIDTH SPACINGS.
      DATA ITIMES/108/
C-----DEFINE HALF WIDTH SPACINGS OF SUBINTERVALS.
      DATA TIMES/
     1 0.000D+00, 1.000D-01, 2.000D-01, 3.000D-01, 4.000D-01, 4.500D-01,
     2 5.000D-01, 5.500D-01, 6.000D-01, 7.000D-01, 8.000D-01, 9.000D-01,
     3 1.000D+00, 1.200D+00, 1.400D+00, 1.600D+00, 1.800D+00, 2.000D+00,
     4 2.200D+00, 2.400D+00, 2.600D+00, 2.800D+00, 3.000D+00, 3.200D+00,
     5 3.400D+00, 3.600D+00, 3.800D+00, 4.000D+00, 4.200D+00, 4.400D+00,
     6 4.600D+00, 4.800D+00, 5.200D+00, 5.600D+00, 6.000D+00, 6.500D+00,
     7 7.000D+00, 7.500D+00, 8.000D+00, 8.500D+00, 9.000D+00, 9.500D+00,
     8 1.000D+01, 1.050D+01, 1.100D+01, 1.150D+01, 1.200D+01, 1.250D+01,
     9 1.300D+01, 1.350D+01, 1.400D+01, 1.450D+01, 1.500D+01, 1.550D+01,
     A 1.600D+01, 1.700D+01, 1.800D+01, 1.900D+01, 2.000D+01, 2.100D+01,
     1 2.200D+01, 2.300D+01, 2.400D+01, 2.500D+01, 2.600D+01, 2.700D+01,
     2 2.800D+01, 2.900D+01, 3.000D+01, 3.100D+01, 3.200D+01, 3.300D+01,
     3 3.400D+01, 3.600D+01, 3.800D+01, 4.000D+01, 4.200D+01, 4.400D+01,
     4 4.600D+01, 4.800D+01, 5.000D+01, 5.300D+01, 5.600D+01, 5.900D+01,
     5 6.200D+01, 6.600D+01, 7.000D+01, 7.400D+01, 7.800D+01, 8.200D+02,
     6 8.600D+01, 9.000D+01, 9.400D+01, 9.800D+01, 1.020D+02, 1.098D+02,
     7 1.232D+02, 1.382D+02, 1.550D+02, 1.739D+02, 1.951D+02, 2.189D+02,
     8 2.456D+02, 2.756D+02, 3.092D+02, 3.469D+02, 3.892D+02, 4.367D+02/
C
C     LOWER ENERGY END OF INTERVAL.
C
C-----START FIRST SUBINTERVAL AT BEGINNING OF INTERVAL.
      NSUB=1
      ESUB(1)=ENODM
C-----IF LOWER WIDTH IS ZERO DO NOT INSERT ANY MORE SUB-INTERVALS NEAR
C-----LOWER ENERGY END OF INTERVAL.
      IF(WIDM) 10,10,40
C-----IF UPPER WIDTH IS ZERO DO NOT INSERT ANY MORE SUB-INTERVALS NEAR
C-----UPPER ENERGY END OF INTERVAL (START ITERATION FROM LOWER AND UPPER
C-----ENERGY LIMITS...UNRESOLVED RESONANCE REGION).
   10 IF(WIDP) 20,20,30
   20 NSUB=2
      ESUB(2)=ENODP
      RETURN
C-----LOWER WIDTH IS ZERO BUT UPPER LIMIT IS NOT. DEFINE INDEX TO INSERT
C-----AS MANY SUB-INTERVALS AS POSSIBLE.
   30 ISUB=ITIMES
      GO TO 130
C-----LOWER WIDTH IS NOT ZERO. IF UPPER WIDTH IS ZERO, SET MIDPOINT TO
C-----BE EXACTLY EQUAL TO UPPER LIMIT (AVOID ROUND-OFF IN DEFINITION).
   40 IF(WIDP) 50,50,60
   50 EMID=ENODP
      GO TO 70
   60 EMID=(WIDM*ENODP+WIDP*ENODM)/(WIDM+WIDP)
      CALL CORE9(EMID,3)
C-----INSERT SUBINTERVALS FROM LOWER ENERGY LIMIT UP TO MIDPOINT
C-----BETWEEN RESONANCES (BASED ON HALF-WIDTH UNITS).
   70 DO 100 ISUB=2,ITIMES
      ENOW=ENODM+TIMES(ISUB)*WIDM
      CALL CORE9(ENOW,3)
      IF(ENOW-EMID) 80,110,110
   80 IF(ENOW-ESUB(NSUB)) 100,100,90
   90 NSUB=NSUB+1
      ESUB(NSUB)=ENOW
  100 CONTINUE
      ISUB=ITIMES
C-----ADD MIDPOINT AS NODE.
  110 NSUB=NSUB+1
      ESUB(NSUB)=EMID
C
C     UPPER ENERGY END OF INTERVAL.
C
C-----IF UPPER WIDTH IS ZERO USE END POINT AS LAST NODE (EITHER ADD
C-----AN ADDITIONAL NODE OR SET LAST NODE ENERGY TO END POINT ENERGY).
      IF(WIDP) 120,120,130
  120 IF(ENODP-ESUB(NSUB)) 180,180,170
C-----INSERT SUBINTERVALS FROM MIDPOINT UP TO NEXT RESONANCE.
  130 IISUB=ISUB
      DO 160 K=2,ISUB
      ENOW=ENODP-TIMES(IISUB)*WIDP
      CALL CORE9(ENOW,3)
      IF(ENOW-ENODP) 140,170,170
  140 IF(ENOW-ESUB(NSUB)) 160,160,150
  150 NSUB=NSUB+1
      ESUB(NSUB)=ENOW
  160 IISUB=IISUB-1
C-----ADD ENDPOINT AS NODE.
  170 NSUB=NSUB+1
  180 ESUB(NSUB)=ENODP
      RETURN
      END
      SUBROUTINE NOODLE(ERES,WID,ELOW,EHIGH)
C=======================================================================
C
C     CORE ALLOCATION FOR NODES.
C
C     SAVE ENERGY (ERES) AND WIDTH (WID) AS NODE IN ASCENDING ENERGY
C     ORDER IF IT IS IN THE ENERGY RANGE (ELOW,EHIGH). OTHERWISE IGNOR.
C
C     IF CORE ALLOCATION IS EXCEEDED TERMINATE UNLESS IN EDIT MODE.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE,ADDNOD
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/ETABS/NODES
      COMMON/MAXIE/MAXSEC,MAXRES,MAXNOD,NEDSEC,NEDRES,NEDNOD
      COMMON/IWATCH/IMEDIT,MAKEPLUS,MONITR,IMBACK
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DATA ADDNOD/0/
C-----ONLY USE NODES IN RESONANCE REGION.
      IF(ERES.LT.ELOW.OR.ERES.GT.EHIGH) GO TO 90
C-----IF NO OTHER NODES YET SAVE FIRST NODE.
      IF(NODES.LE.0) GO TO 50
C-----COMPARE TO ALL NODES SAVED SO FAR.
      DO 20 I=1,NODES
      IF(ERES-ENODE(I)) 30,10,20
C-----SAME AS PREVIOUS ENERGY. ADD WIDTHS AND RETURN.
   10 WIDNOD(I)=WIDNOD(I)+WID
      GO TO 90
   20 CONTINUE
C-----NEW NODE TO ADD TO END OF TABLE.
      GO TO 50
C-----MOVE ALL FOLLOWING NODES BACK ONE LOCATION IN TABLE AND INSERT
C-----NODE IN ENERGY ORDER.
   30 NN=NODES+1
      IF((NN+ADDNOD).GT.NEDNOD) NEDNOD=NN+ADDNOD
      IF(NN.GT.MAXNOD) GO TO 70
      DO 40 J=I,NODES
      ENODE(NN)=ENODE(NN-1)
      WIDNOD(NN)=WIDNOD(NN-1)
   40 NN=NN-1
      ENODE(I)=ERES
      WIDNOD(I)=WID
      NODES=NODES+1
      GO TO 90
C-----ADD NEW NODE TO END OF TABLE.
   50 NODES=NODES+1
      IF((NODES+ADDNOD).GT.NEDNOD) NEDNOD=NODES+ADDNOD
      IF(NODES.GT.MAXNOD) GO TO 70
   60 ENODE(NODES)=ERES
      WIDNOD(NODES)=WID
      GO TO 90
C-----TOO MANY NODES. PRINT ERROR MESSAGE AND TERMINATE UNLESS IN EDIT
C-----MODE.
   70 IF(IMEDIT.NE.2) GO TO 80
      ADDNOD=ADDNOD+MAXNOD
      NODES=1
      GO TO 60
   80 WRITE(OUTP,100) MAXNOD
      WRITE(*   ,100) MAXNOD
      CALL ENDIT
   90 RETURN
  100 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' More than',I5,' Nodes'/
     2 ' Re-Run Program in Edit Mode to Determine Memory Requirements'/
     3 1X,78('=')/' Execution Terminated'/1X,78('='))
      END
      SUBROUTINE FACTS2(L,RHO2,SF2,PF)
C=======================================================================
C
C     CALCULATE 1/2 THE SHIFT FACTOR (SF2) AND PENETRATION FACTOR (PF)
C     FROM L VALUE AND RHO2 (RHO2=RHO*RHO).
C
C     THE SHIFT FACTOR IS USED TO DEFINE THE ENERGY DEPENDENT RESONANCE
C     PEAK ENERGY IN THE FORM
C
C     ERP=ER+0.5*GAMN*(SF(ABS(ER))-SF(E))
C
C     IN ORDER TO AVOID HAVING TO MULTIPLY BY 0.5 EVERYTIME THE SHIFT
C     FACTOR IS USED THIS ROUTINE WILL RETURN 1/2 THE SHIFT FACTOR.
C     THIS IS DONE SIMPLY BY DEFINING ALL CONSTANTS WHICH ARE USED TO
C     DERIVE THE SHIFT FACTOR TO BE 1/2 THERE NORMAL DEFINITION (THUS
C     COMPLETELY AVOIDING THE MULTIPLICATION BY 1/2).
C
C     FOR NEGATIVE ENERGY PENETRATION AND SHIFT FACTORS ARE SET EQUAL
C     TO ZERO (SEE SUMMARY OF CSEWG MEETING, MAY 16-17, 1979
C     RESONANCE SUB-COMMITTEE REPORT). THIS CAN OCCUR FOR THE
C     COMPETITIVE WIDTH AT ENERGIES BELOW THE COMPETITIVE THRESHOLD.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      DATA DNINE/9.0D+00/
      DATA CA/1.5D+00/
      DATA CB/2.25D+02/
      DATA C3/4.5D+01/
      DATA C4/6.0D+00/
      DATA C5/3.375D+02/
      DATA C6/3.0D+00/
      DATA C7/1.1025D+04/
      DATA C8/1.575D+03/
      DATA C9/1.35D+02/
      DATA C10/1.0D+01/
      DATA C11/2.2050D+04/
      DATA C12/2.3625D+03/
      DATA C13/1.35D+02/
      DATA C14/5.0D+00/
      DATA C15/8.93025D+05/
      DATA C16/9.9225D+04/
      DATA C17/6.3D+03/
      DATA C18/3.15D+02/
      DATA C19/1.5D+01/
      DATA C20/2.2325625D+06/
      DATA C21/1.9845D+05/
      DATA C22/9.45D+03/
      DATA C23/3.15D+02/
      DATA C24/7.5D+00/
      IF(RHO2.GT.ZERO) GO TO 10
      SF2=ZERO
      PF=ZERO
      RETURN
   10 LL=L+1
      RHO=DSQRT(RHO2)
      GO TO (20,30,40,50,60,70),LL
C-----S-WAVE
   20 SF2=ZERO
      PF=RHO
      RETURN
C-----P-WAVE
   30 DEN=ONE+RHO2
      PF=RHO2*RHO/DEN
      SF2=-HALF/DEN
      RETURN
C-----D-WAVE (L=2)
   40 RHO4=RHO2*RHO2
      DEN=THREE*RHO2+RHO4+DNINE
      PF=RHO4*RHO/DEN
      SF2=-(DNINE+CA*RHO2)/DEN
      RETURN
C-----F-WAVE (L=3)
   50 RHO4=RHO2*RHO2
      RHO6=RHO4*RHO2
      DEN=CB+C3*RHO2+C4*RHO4+RHO6
      PF=RHO6*RHO/DEN
      SF2=-(C5+C3*RHO2+C6*RHO4)/DEN
      RETURN
C-----G-WAVE (L=4)
   60 RHO4=RHO2*RHO2
      RHO6=RHO4*RHO2
      RHO8=RHO4*RHO4
      DEN=C7+C8*RHO2+C9*RHO4+C10*RHO6+RHO8
      PF=RHO8*RHO/DEN
      SF2=-(C11+C12*RHO2+C13*RHO4+C14*RHO6)/DEN
      RETURN
C-----(L=5)
   70 RHO4=RHO2*RHO2
      RHO6=RHO4*RHO2
      RHO8=RHO4*RHO4
      RHO10=RHO4*RHO6
      DEN=C15+C16*RHO2+C17*RHO4+C18*RHO6+C19*RHO8+RHO10
      PF=RHO10*RHO/DEN
      SF2=-(C20+C21*RHO2+C22*RHO4+C23*RHO6+C24*RHO8)/DEN
      RETURN
      END
      SUBROUTINE FACPHI(L,RHOP,PS)
C=======================================================================
C
C     CALCULATE PHASE SHIFT (PS) FROM L VALUE AND RHOP.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      DATA PHIMIN/1.0D-06/
      DATA CA/1.5D+01/
      DATA CB/6.0D+00/
      DATA C3/1.05D+02/
      DATA C4/1.0D+01/
      DATA C5/4.5D+01/
      DATA C6/9.45D+02/
      DATA C7/4.2D+02/
      LL=L+1
      GO TO (10,20,30,40,50,60),LL
C-----S-WAVE (L=0)
   10 PS=RHOP
      GO TO 90
C-----P-WAVE (L=1)
   20 PS=RHOP-DATAN(RHOP)
      GO TO 80
C-----D-WAVE (L=2)
   30 RATIO=THREE/(THREE-RHOP*RHOP)
      GO TO 70
C-----F-WAVE (L=3)
   40 RHOP2=RHOP*RHOP
      RATIO=(CA-RHOP2)/(CA-CB*RHOP2)
      GO TO 70
C-----G-WAVE (L=4)
   50 RHOP2=RHOP*RHOP
      RATIO=(C3-C4*RHOP2)/(C3-(C5-RHOP2)*RHOP2)
      GO TO 70
C-----(L=5)
   60 RHOP2=RHOP*RHOP
      RATIO=(C6-(C3-RHOP2)*RHOP2)/(C6-(C7-CA*RHOP2)*RHOP2)
   70 PS=RHOP-DATAN(RATIO*RHOP)
   80 IF(DABS(PS/RHOP).LT.PHIMIN) PS=0.0
   90 RETURN
      END
      SUBROUTINE UNFAC(L,RHO2,RHOC,AMUN,VL,PS)
C=======================================================================
C
C     CALCULATE THE PENETRABILITY FACTOR (VL) AND PHASE SHIFT (PS)
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      DATA DNINE/9.0D+00/
      LL=L+1
      GO TO (10,20,30),LL
C-----S-WAVE
   10 VL=AMUN
      PS=RHOC
      GO TO 40
C-----P-WAVE
   20 VL=AMUN*RHO2/(ONE+RHO2)
      PS=RHOC-DATAN(RHOC)
      GO TO 40
C-----D-WAVE
   30 RHO4=RHO2*RHO2
      VL=AMUN*RHO4/(DNINE+THREE*RHO2+RHO4)
      PS=RHOC-DATAN(THREE*RHOC/(THREE-RHOC*RHOC))
   40 RETURN
      END
      SUBROUTINE GNRL3(GNX,GGX,GFX,GXX,MUN,MUF,MUX,RN,RC,RF)
C=======================================================================
C
C     CALCULATE UNRESOLVED RESONANCE FLUCTUATION FUNCTION
C     (ORIGINAL CODING FROM AVERAGE4 BY MULKI BHAT)
C     (NEW WEIGHTING SCHEME FROM MC SQUARED)
C
C     THIS ROUTINE HAS BEEN MODIFIED TO CALCULATE ELASTIC, CAPTURE
C     AND FISSION FLUCTUATION FUNCTIONS ALL DURING ONE CALL (AS
C     OPPOSED TO THE ORIGINAL VERSION WHICH CALCULATED EACH REACTION
C     SEPARATELY).
C
C     GNX, GGX, GFX AND GXX ARE THE WIDTHS FOR ELASTIC, CAPTURE,
C     FISSION AND COMPETITION. MUN, MUF AND MUX ARE THE NUMBER OF
C     DEGREES OF FREEDOM FOR ELASTIC, FISSION AND COMPETITION (INFINITE
C     NUMBER OF DEGREES ASSUMED FOR CAPTURE). RN, RC AND RF ARE THE
C     CALCULATED FLUCTUATION INTEGRALS FOR ELASTIC, CAPTURE AND FISSION
C
C     THE NUMBER OF DEGREES OF FREEDOM FOR EACH DISTRIBUTION (ELASTIC,
C     FISSION OR COMPETITION) MAY BE 1 TO 4. IF THE NUMBER OF DEGREES
C     OF FREEDOM FOR ANY DISTRIBUTION IS LESS THAN 1 OR MORE THAN 4
C     IT WILL BE TREATED AS AN INFINITE NUMBER OF DEGREES OF FREEDOM
C     (WHICH INFERS THAT THE WIDTHS ARE NOT DISTRIBUTED, BUT ARE RATHER
C     ALL EQUAL TO THE AVERAGE VALUE). THIS LAST CASE IS SIMULATED BY
C     DEFINING AN ADDITIONAL 10 POINT QUADRATURE IN WHICH THE WEIGHT
C     FOR ONE POINT IS 1.0 AND THE WEIGHT FOR ALL OTHER POINTS IS ZERO.
C     FOR THE ONE POINT OF WEIGHT 1.0 THE AVERAGE WIDTH WILL BE USED.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      DIMENSION XX(5,10),WW(5,10)
      DATA XX/
     A 3.0013465D-03,1.3219203D-02,1.0004488D-03,1.3219203D-02,1.0D+0,
     1 7.8592886D-02,7.2349624D-02,2.6197629D-02,7.2349624D-02,0.0D+0,
     2 4.3282415D-01,1.9089473D-01,1.4427472D-01,1.9089473D-01,0.0D+0,
     3 1.3345267D+00,3.9528842D-01,4.4484223D-01,3.9528842D-01,0.0D+0,
     4 3.0481846D+00,7.4083443D-01,1.0160615D+00,7.4083443D-01,0.0D+0,
     5 5.8263198D+00,1.3498293D+00,1.9421066D+00,1.3498293D+00,0.0D+0,
     6 9.9452656D+00,2.5297983D+00,3.3150885D+00,2.5297983D+00,0.0D+0,
     7 1.5782128D+01,5.2384894D+00,5.2607092D+00,5.2384894D+00,0.0D+0,
     8 2.3996824D+01,1.3821772D+01,7.9989414D+00,1.3821772D+01,0.0D+0,
     9 3.6216208D+01,7.5647525D+01,1.2072069D+01,7.5647525D+01,0.0D+0/
      DATA WW/
     A 1.1120413D-01,3.3773418D-02,3.3376214D-04,1.7623788D-03,1.0D+0,
     1 2.3546798D-01,7.9932171D-02,1.8506108D-02,2.1517749D-02,0.0D+0,
     2 2.8440987D-01,1.2835937D-01,1.2309946D-01,8.0979849D-02,0.0D+0,
     3 2.2419127D-01,1.7652616D-01,2.9918923D-01,1.8797998D-01,0.0D+0,
     4 1.0967668D-01,2.1347043D-01,3.3431475D-01,3.0156335D-01,0.0D+0,
     5 3.0493789D-02,2.1154965D-01,1.7766657D-01,2.9616091D-01,0.0D+0,
     6 4.2930874D-03,1.3365186D-01,4.2695894D-02,1.0775649D-01,0.0D+0,
     7 2.5827047D-04,2.2630659D-02,4.0760575D-03,2.5171914D-03,0.0D+0,
     8 4.9031965D-06,1.6313638D-05,1.1766115D-04,8.9630388D-10,0.0D+0,
     9 1.4079206D-08,0.0000000D+00,5.0989546D-07,0.0000000D+00,0.0D+0/
C-----INITIALIZE FLUCTUATION INTEGRALS FOR ELASTIC, CAPTURE AND FISSION.
      RN=0.0
      RC=0.0
      RF=0.0
C-----INTEGRALS ARE ZERO IF NEUTRON AND CAPTURES WIDTHS ARE NOT
C-----POSITIVE.
      IF(GNX.LE.0.0.OR.GGX.LE.0.0) RETURN
C-----INSURE NUMBER OF DEGREES OF FREEDOM FOR ELASTIC WIDTHS IN O.K.
      IF(MUN.LT.1.OR.MUN.GT.4) MUN=5
C-----IS THERE FISSION.
      IF(GFX) 130,10,60
C
C     NOT FISSILE.
C
C-----NO FISSION. IS THERE A COMPETITIVE WIDTH.
   10 IF(GXX.GT.0.0) GO TO 30
C-----NO COMPETITIVE WIDTH. 1-D QUADRATURE.
      DO 20 J=1,10
      XJ=XX(MUN,J)
      FACTOR=WW(MUN,J)*XJ/(GNX*XJ+GGX)
      RN=RN+XJ*FACTOR
   20 RC=RC+FACTOR
      RETURN
C-----COMPETITIVE WIDTH. 2-D QUADRATURE. INSURE NUMBER OF DEGREES OF
C-----FREEDOM FOR COMPETITIVE WIDTH IS O.K.
   30 IF(MUX.LT.1.OR.MUX.GT.4) MUX=5
      DO 50 J=1,10
      XJ=XX(MUN,J)
      WJXJ=WW(MUN,J)*XJ
      EFFJ=GNX*XJ+GGX
      DO 40 K=1,10
      XK=XX(MUX,K)
      FACTOR=WW(MUX,K)*WJXJ/(EFFJ+GXX*XK)
      RN=RN+XJ*FACTOR
   40 RC=RC+FACTOR
   50 CONTINUE
      RETURN
C
C     FISSILE.
C
C-----FISSION PRESENT. INSURE NUMBER OF DEGREES OF FREEDOM FOR FISSION
C-----IS O.K.
   60 IF(MUF.LT.1.OR.MUF.GT.4) MUF=5
C-----IS THERE A COMPETITIVE WIDTH.
      IF(GXX.GT.0.0) GO TO 90
C-----NO COMPETITIVE WIDTH. 2-D QUADRATURE.
      DO 80 J=1,10
      XJ=XX(MUN,J)
      WJXJ=WW(MUN,J)*XJ
      EFFJ=GNX*XJ+GGX
      DO 70 K=1,10
      XK=XX(MUF,K)
      FACTOR=WW(MUF,K)*WJXJ/(EFFJ+GFX*XK)
      RN=RN+XJ*FACTOR
      RC=RC+FACTOR
   70 RF=RF+XK*FACTOR
   80 CONTINUE
      RETURN
C-----COMPETITIVE WIDTH. 3-D QUADRATURE. INSURE NUMBER OF DEGREES OF
C-----FREEDOM FOR COMPETITIVE WIDTH IS O.K.
   90 IF(MUX.LT.1.OR.MUX.GT.4) MUX=5
      DO 120 J=1,10
      XJ=XX(MUN,J)
      WJXJ=WW(MUN,J)*XJ
      EFFJ=GNX*XJ+GGX
      DO 110 K=1,10
      XK=XX(MUF,K)
      WKWJXJ=WW(MUF,K)*WJXJ
      EFFJK=EFFJ+GFX*XK
      DO 100 I=1,10
      XL=XX(MUX,I)
      FACTOR=WW(MUX,I)*WKWJXJ/(EFFJK+GXX*XL)
      RN=RN+XJ*FACTOR
      RC=RC+FACTOR
  100 RF=RF+XK*FACTOR
  110 CONTINUE
  120 CONTINUE
  130 RETURN
      END
      SUBROUTINE TERPUP(E,DUMSET,L,INT)
C=======================================================================
C
C     INTERPOLATE UNRESOLVED RESONANCE PARAMETERS. RESONANCE SPACING,
C     COMPETITIVE, NEUTRON, CAPTURE AND FISSION WIDTHS ARE ALL
C     INTERPOLATED AT THE SAME TIME AND RETURNED IN LOCATIONS DUMSET(2)
C     THROUGH DUMSET(6), RESPECTIVELY.
C
C     THIS ROUTINE HAS BEEN RECODED IN ORDER TO AVOID ROUND-OFF
C     PROBLEMS ON SHORT WORD LENGTH COMPUTERS, E.G. IBM-360, 370, ETC.
C     THIS ROUTINE IS NOW SLIGHTLY LESS EFFICIENT THAN IN ITS PREVIOUS
C     FORM. HOWEVER ALL INTERPOLATION IS NOW DEFINED AS A WEIGHTED SUM
C     OF TERMS, AS OPPOSED TO THE PREVIOUS FORM WHICH USED DIFFERENCES.
C
C     THIS ROUTINE IS ONLY USED TO INTERPOLATE PARAMETERS IN THE
C     UNRESOLVED RESONANCE REGION. IN ORDER TO INSURE THAT IN ALL CASES
C     INTERPOLATION CAN BE PERFORMED, IF THE PARAMETER IS NOT POSITIVE
C     AND LOG INTERPOLATION OF THE CROSS SECTION IS SPECIFIED (I =4 OR
C     5), THE INTERPOLATION OF THE CROSS SECTION WILL BE SWITCHED TO
C     LINEAR (I=2 OR 3) AND A WARNING MESSAGE WILL BE PRINTED.
C
C     AN ILLEGAL INTERPOLATION CODE OR A NON-POSITIVE ENERGY WHERE LOG
C     ENERGY INTERPOLATION IS REQUIRED INDICATES EITHER AN ERROR IN THE
C     DATA AS IT APPEARS IN THE ENDF/B FORMAT, OR AN ERROR IN THIS
C     PROGRAM. THEREFORE ERRORS OF THIS TYPE WILL CAUSE THE PROGRAM TO
C     PRINT A WARNING MESSAGE AND TERMINATE EXECUTION.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 FIELD
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/CONJOB/PI,PI2,ZERO,HALF,ONE,TWO,THREE,FOUR,EIGHT
      COMMON/FIELDC/FIELD(11,12)
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION DUMSET(6)
C-----CHECK INTERPOLATION CODE.
      IF(INT.LT.1.OR.INT.GT.5) GO TO 170
C-----DEFINE INDEX TO LOWER ENERGY LIMIT.
      LM1=L-1
C-----DEFINE ENERGIES AT THE 2 ENDS OF THE INTERVAL.
      E1=ENRES(LM1)
      E2=ENRES(L)
C-----CHECK FOR ZERO LENGTH INTERVAL.
      DE12=E2-E1
      IF(DE12.EQ.0.0) GO TO 200
C-----SELECT INTERPOLATION LAW.
      GO TO (10,110,140,30,70),INT
C
C     HISTOGRAM. CONSTANT EQUAL TO VALUE AT LOWER ENERGY LIMIT.
C
   10 DO 20 I=2,6
   20 DUMSET(I)=RESTAB(I,LM1)
      RETURN
C
C     LINEAR X AND LOG Y.
C
   30 WT2=(E-E1)/DE12
      WT1=ONE-WT2
      DO 60 I=2,6
C-----IF Y IS NOT POSITIVE OR CONSTANT SET FLAG AND USE LINEAR Y
C-----INTERPOLATION.
      IF(RESTAB(I,LM1).GT.0.0.AND.RESTAB(I,L).GT.0.0) GO TO 40
      IF(RESTAB(I,LM1).EQ.RESTAB(I,L)) GO TO 50
C-----LOG INTERPOLATION OF PARAMETERS IS NOT POSSIBLE. SWITCH TO LINEAR.
      GO TO 120
   40 DUMSET(I)=DEXP(WT1*DLOG(RESTAB(I,LM1))+WT2*DLOG(RESTAB(I,L)))
      GO TO 60
   50 DUMSET(I)=RESTAB(I,LM1)
   60 CONTINUE
      RETURN
C
C     LOG X AND LOG Y.
C
   70 IF(E1.LE.0.0.OR.E2.LE.0.0.OR.E.LE.0.0) GO TO 190
      WT2=DLOG(E/E1)/DLOG(E2/E1)
      WT1=ONE-WT2
      DO 100 I=2,6
C-----IF Y IS NOT POSITIVE OR CONSTANT SET FLAG AND USE LINEAR Y
C-----INTERPOLATIOM.
      IF(RESTAB(I,LM1).GT.0.0.AND.RESTAB(I,L).GT.0.0) GO TO 80
      IF(RESTAB(I,LM1).EQ.RESTAB(I,L)) GO TO 90
C-----LOG INTERPOLATION OF PARAMETERS IS NOT POSSIBLE. SWITCH TO LINEAR.
      GO TO 150
   80 DUMSET(I)=DEXP(WT1*DLOG(RESTAB(I,LM1))+WT2*DLOG(RESTAB(I,L)))
      GO TO 100
   90 DUMSET(I)=RESTAB(I,LM1)
  100 CONTINUE
      RETURN
C
C     LINEAR X AND LINEAR Y.
C
  110 WT2=(E-E1)/DE12
      WT1=ONE-WT2
  120 DO 130 I=2,6
  130 DUMSET(I)=WT1*RESTAB(I,LM1)+WT2*RESTAB(I,L)
      RETURN
C
C     LOG X AND LINEAR Y.
C
C-----INSURE ALL X VALUES ARE POSITIVE FOR LOG.
  140 IF(E1.LE.0.0.OR.E2.LE.0.0.OR.E.LE.0.0) GO TO 190
      WT2=DLOG(E/E1)/DLOG(E2/E1)
      WT1=ONE-WT2
  150 DO 160 I=2,6
  160 DUMSET(I)=WT1*RESTAB(I,LM1)+WT2*RESTAB(I,L)
      RETURN
C-----ILLEGAL INTERPOLATE CODE.
  170 WRITE(OUTP,210) INT
  180 WRITE(OUTP,240)
      CALL ENDIT
C-----ILLEGAL LOG ENERGY INTERPOLATION WITH NEGATIVE VALUES.
  190 CALL OUT9(E1,FIELD(1,1),3)
      CALL OUT9(E2,FIELD(1,2),3)
      CALL OUT9(E ,FIELD(1,3),3)
      WRITE(OUTP,220) ((FIELD(M,J),M=1,11),J=1,3)
      GO TO 180
C-----ZERO LENGTH ENERGY INTERVAL.
  200 CALL OUT9(E1,FIELD(1,1),3)
      CALL OUT9(E2,FIELD(1,2),3)
      WRITE(OUTP,230) ((FIELD(M,J),M=1,11),J=1,2)
      GO TO 180
  210 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Interpolating Unresolved Parameters.'/
     2 ' Illegal Interpolation Code =',I5,' (MUST be 1 to 5).'/
     3 ' Correct Evaluated Data and Re-Run Program.')
  220 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Interpolating Unresolved Parameters.'/
     2 ' Illegal Log Energy Interpolation Using Negative Energy.'/
     3 ' Interpolation Code=',I5,' (Cannot be 3 or 5).'/
     4  ' E1,E2,E=',3(11A1,1X)/
     5 ' Correct Evaluated Data and Re-Run Program.')
  230 FORMAT(1X,78('=')/1X,7('WARNING...'),'WARNING'/
     1 ' Interpolating Unresolved Parameters.'/
     2 ' Illegal Interpolation Over Zero Length Interval.'/
     3 'E1,E2=',11A1,1X,11A1/
     4 ' Correct Evaluated Data and Re-Run Program.')
  240 FORMAT(1X,78('=')/' Execution Terminated'/1X,78('='))
      END
      SUBROUTINE LISPAR(IXLOW,IX,IXD)
C=======================================================================
C
C     READ AND LIST ALL RESONANCE PARAMETERS
C
C     PARAMETERS ARE READ IN DOUBLE PRECISION.
C     THE ENERGY AND WIDTH ARE SAVED IN DOUBLE PRECISION TO DEFINE THE
C     ENERGY GRID.
C     ALL PARAMETERS ARE THEN SAVED IN SINGLE PRECISION.
C
C     IXLOW   = STARTING INDEX TO RESONANCE PARAMETER TABLE
C     IX      = NUMBER OF WORDS TO READ
C     IXD     = NUMBER OF WORDS PER RESONANCE (6 OR 12)
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      COMMON/INDATS/ZA,AWR,ZAI,ABN,SPI,AP,AWRI,QX,NRS,NIS,LFW,NER,
     1 LRU,LRF,NLS
      COMMON/INDATD/ELX,EHX
      COMMON ENRES(120000),SHIFT2(120000),ENODE(120000),WIDNOD(120000),
     1 ETAB2(120001),RESTAB(6,120000),SIG2(4,120001),RESJTAB(120000)
      DIMENSION XD(6,2)
      DATA ZEROD/0.0D+00/
C
C     READ PARAMETERS FOR EACH RESONANCE.
C
C-----DEFINE NUMBER OF LINES TO READ - 6 PARAMETERS PER LINE.
      KLINE=IXD/6
      KXLOW=IXLOW-1
      DO 90 I1=1,IX,IXD
C-----READ IN DOUBLE PRECISION.
      CALL LISTIO(XD,IXD)
C-----COPY TO SINGLE PRECISION PARAMETER ARRAY.
      DO 10 K=1,KLINE
      KXLOW=KXLOW+1
      ENRES(KXLOW)=XD(1,K)
      DO 10 I=1,6
   10 RESTAB(I,KXLOW)=XD(I,K)
C
C     SAVE RESONANCE ENERGY AS A NODE.
C
      IF(LRU.EQ.2) GO TO 80
C-----RESOLVED.
      GO TO (20,20,30,40,50,60),LRF
C-----BREIT-WIGNER.
   20 WIDTOT=XD(3,1)
      GO TO 70
C-----REICH-MOORE
   30 WIDTOT=XD(3,1)+XD(4,1)+DABS(XD(5,1))+DABS(XD(6,1))
      GO TO 70
C-----ADLER-ADLER
   40 WIDTOT=XD(2,1)
      GO TO 70
C-----GENERAL-R-MATRIX (NOT IMPLEMENTED).
   50 WIDTOT=ZEROD
      GO TO 70
C-----HYBRID-R-MATRIX
   60 WIDTOT=XD(2,1)+XD(3,1)+XD(4,1)+XD(5,1)+XD(6,1)+XD(1,2)+XD(2,2)
C-----DEFINE RESOLVED REGION NODE.
   70 CALL NOODLE(XD(1,1),WIDTOT,ELX,EHX)
      GO TO 90
C-----DEFINE UNRESOLVED REGION NODE.
   80 CALL NOODLE(XD(1,1),ZEROD,ELX,EHX)
   90 CONTINUE
      RETURN
      END
      SUBROUTINE FILEIO
C=======================================================================
C
C     DEFINE ALL I/O UNITS.
C
C=======================================================================
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      INTEGER OUTP,OTAPE
      CHARACTER*1 NAME1,NAME2
      CHARACTER*60 NAME1X,NAME2X
      COMMON/ENDFIO/INP,OUTP,ITAPE,OTAPE
      COMMON/UNITS/ISCR2,ISCR23
      COMMON/NAMEX/NAME1(60),NAME2(60)
      EQUIVALENCE (NAME1X,NAME1(1)),(NAME2X,NAME2(1))
C-----DEFINE ALL I/O UNITS.
      INP=2
      OUTP=3
      ITAPE=10
      OTAPE=11
      ISCR2=12
      ISCR23=14
C-----DEFINE ALL FILE NAMES.
      OPEN(INP,FILE='THERMX.INP',STATUS='OLD')
      OPEN(OUTP,FILE='THERMX.LST',STATUS='UNKNOWN')
      CALL SCRATCH1(ISCR2 ,'RECENT.001  ')
      CALL SCRATCH1(ISCR23,'RECENT.002  ')
      RETURN
      ENTRY FILIO2
C=======================================================================
C
C     DEFINE ENDF/B DATA I/O UNITS AND OPTIONALLY DEFINE FILE NAMES.
C
C=======================================================================
      OPEN(ITAPE,FILE=NAME1X,STATUS='OLD')
      OPEN(OTAPE,FILE=NAME2X,STATUS='UNKNOWN')
      END
      SUBROUTINE ENDIT
C=======================================================================
C
C     PRINT EXECUTION TIME AND TERMINATE
C
C=======================================================================
      CALL TIMER
      STOP
      END
