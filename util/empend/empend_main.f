Ccc   * $Id: empend.f$ 
Ccc   * $Author: atrkov $
Ccc   * $Date: 2015-11-26 10:17:48 +0100 (Do, 26 Nov 2015) $

      PROGRAM EMPEND
C-Title  : EMPEND Program
C-Purpose: Convert EMPIRE output into ENDF format
C-Author : A.Trkov
C-Version: 1996 Original code (ENEA, Bologna, Italy)
C-V  98/10 Final version for distribution.
C-V  99/11 Minor corrections to fix bugs.
C-V  00/11 Implement formatting of elastic ang.distrib.
C-V  00/12 Process total cross section.
C-V  02/05 Fix MF4 processing for discrete levels.
C-V  02/09 - Fix thresholds for multi-particle emission
C-V        - Photon branching ratios for the last level (MF12)
C-V        - Atomic weight ratios for target and recoils.
C-V  02/11 Implement continuum photon spectra processing.
C-V  03/06 Define MT numbers for incident protons.
C-V  03/07 Fix processing of double differential data for protons.
C-V  04/06 - Process discrete levels flagged with -ve energies.
C-V        - Let EMPIRE handle the max. outgoing particle energy.
C-V  04/07 - Fix ordering of levels in MF12,
C-V        - Read in values in double precision to avoid underflow.
C-V        - Fix MTs and yields of minor reactions (37, 41, etc).
C-V  04/07 - Add (n,5n) MT47 (temporarily deactivated 23jun05)
C-V        - Check for absence of distribution data (NP=0 in MF6).
C-V  04/09 - Check for normalisation overflow in WRIMF4
C-V  04/10 Implement formatting for incident alphas and photons.
C-V  05/04 - Copy comments to MF1/MT451.
C-V        - Upgrade to proces partially exclusive/inclusive spectra.
C-V        - Allow metastable targets.
C-V  05/06 Increase MXR from 200K to 800K.
C-V  05/08 - Improved logic to reduce convergence problems of fitting
C-V          angular distributions.
C-V        - Add unassigned reactions to MT5 with yields for neutrons,
C-V          protons and alpha particles.
C-V        - Fix yields and pseudo-threshold distributions in MF6/MT5.
C-V  06/02 - Input NLIB, ALAB, EDATE, AUTHOR strings.
C-V  07/02 - Trivial change for single-character element designation.
C-V  07/03 - Remove extra SEND record after MF1 data.
C-V  07/05 - Remove redundant messages about ang.dist.interpolation.
C-V        - Fix small bug in gamma-yields at threshold.
C-V        - Read isomer-production cross sections.
C-V  07/10 - Add scattering radius and target spin in File 2.
C-V        - Improve radioisotope production formatting in MF10.
C-V  07/11 Major cleanup with the following features:
C-V        - Improvement of the resonance file, adding fictitious
C-V          resonances in the thermal range based on systematics
C-V          (2 bound levels and 2 s-wave resonances that normally
C-V          fall outside the resonance range, giving an order-of-
C-V          magnitude estimate of the thermal value).
C-V        - Extension of the cross sections for incident neutrons
C-V          to the lower limit of 1E-5eV.
C-V        - Addition of MF8 for reactions in MF10.
C-V        - Normalisation of branching ratios in MF12.
C-V        - Set Tape-ID to 7777 (STANEF does not like zero).
C-V        - Trap negative gamma-yields (force zero).
C-V        - Write MEND, TEND records to ENDF file and stop when problems
C-M          are encountered (REAMF6 routine).
C-V        The resulting ENDF file does not include the dictionary
C-V        section, which can be generated by the STANEF utility code.
C-V        Apart from this, the ENDF file should be "clean" as far as the
C-V        checking codes are concerned.
C-V  08/01 Check for legal outgoing particle for the assigned reaction;
C-V        ignore the spectrum if the particle is illegal
C-V        (current empire does not distinguish between (2n2p) and (a)).
C-V  08/02 Improved compiler compatibility (use of undefined variables).
C-V  08/05 - Separate (z,2n2px) from (z,ax), when possible.
C-V        - Fix gamma yields at high energies when cross sections go
C-V          to zero, e.g. (z,ax) after subtracting (z,2n2px).
C-V  08/12 - Fix formatting of MF10 reactions involving alphas.
C-V        - Print WARNING when unprocessable spectra are encountered.
C-V        - Fix unititialised variables.
C-V        - Activate formatting of charged particles.
C-V  09/04 - Fix gamma BR=1 to ground state in MF12 when no data given.
C-V  09/06 - Fix ELFS=QM-QI in MF8.
C-V  09/08 - Fix NS in MF12 and again ELFS (see above).
C-V  09/11 - Process light charged-particle emission data.
C-V  09/12 - Add total inelastic MT4 as the redundant cross section.
C-V  10/05 - Trivial format change for isomeric states(column alignment)
C-V  10/06 - Change reaction (z,na) to (z,an) in EMTCHR.
C-V  10/08 - Accept reaction (z,na) &  (z,an)  due to change in EMPIRE.
C-V        - Fix cases of undefined variables
C-V  11/01 - Redo complex reaction identification based on new printout
C-V          of population cross sections
C-V  11/02 - Restore printout of pseudo-resonance data.
C-V        - Refine tolerance for matching energies of discrete levels.
C-V        - Fix number of photons in MF14 to match MF12.
C-V  11/04 - Set LRF to MLBW because NJOY does not like anything else
C-V          when energy-dependent scattering radius is given.
C-V        - Update the comments and input instructions.
C-V  11/06 - Fix calculation of outgoing energy when no recoils given
C-V        - Print warning when no recoils given on output
C-V        - Improved identification of insignificant cross sections.
C-V  11/12 - Fix to previous fix when recoils spectra are given.
C-V  12/02 - Output changed - fix search string.
C-V        - Fix processing of ENDF=0 option, recognised by lack of
C-V          spectrum data - except (z,x) (left in by mistake?)
C-V        - Allow incident deuterons, tritons, He-3
C-V  12/03 - Minor corrections to restore fission spectrum formatting.
C-V        - Set LCT flag to LAB for fission spectra.
C-V        - Define proper interpolation rules for fission spectra
C-V          (fission spectrum is interpolated well with lin-lin
C-V           interpolation except in the tails, but only a single
C-V           interpolation range can be defined in ENDF)
C-V        - Reduce emission spectra thinning criterion from 1 to 0.5 %.
C-V  12/07 Fix Eout for discrete levels when no recoils are given.
C-V        Add to log file the printout of reactions summed into MT 5.
C-V  12/12 - Read angle-integrated spectra to check and normalise
C-V          double differential cross sections.
C-V        - Increase precision when writing the ENDF file.
C-V  13/03 Fix vertical segments at the upper end of emission spectra by
C-V        delta-shifting the one-but-last point.
C-V  13/09 Changed the way of reading strings to make the code more robust
C-V        (for some compiler on linux it was failing) 
C-V  13/12 Allow for isomer production without blank line delimiter.
C-V  14/01 Check the order of Legendre expansion for elastic ang.distr.
C-V        Try to fit tabulated distribution.
C-V  14/02 - Include compound elastic MF3/MT50 (MF4 still pending).
C-V        - Allow narrow printout of separation energies.
C-V  14/12 - Trivial definition of unassigned variable.
C-V        - Suppress printing MT50 (in SCNMF6) - interferes with NJOY.
C-V  15/02 - Fix a problem with mesh densification of angular
C-V          distributions.
C-V        - Fix formatting when isomer-production cross sections are
C-V          given.
C-V  15/11 - Fix test comparing population/production cross sections
C-V          Increase MXR from 0.8 M to 2.4 M.
C-V        - Major upgrade involving new convention for residual
C-M          production x.s. that can be split into partly-exclusive
C-M          and partly inclusive particle emission spectra
C-M  
C-M  Manual for Program EMPEND
C-M  =========================
C-M  
C-M  The EMPIRE output is processed and converted into ENDF format.
C-M  The ENDF formatted output file has to obey the rule of ordering
C-M  the reactions in increasing order by the reaction MT number,
C-M  so several sweeps of the EMPIRE file are made:
C-M   - In the first sweep the cross sections and the corresponding
C-M     reaction Q-values are extracted. All reading is done with
C-M     the REAMF3 routine.
C-M   - In the next sweep all reactions for which particle spectra
C-M     are given are identified. All reading is done with the SCNMF6
C-M     routine.
C-M   - Another sweep is made for each reaction having angular
C-M     distributions. This applies to the elastic and all discrete
C-M     level reactions (inelastic neutron, alpha and proton
C-M     emission).
C-M   - Next follows a sweep for each reaction having energy-angle
C-M     correlated outgoing particle distributions.
C-M   - Finally, a sweep is made for the remaining reactions,
C-M     particularly the (n,gamma) reaction, for which the
C-M     particle distributions are coded in ENDF File-6.
C-M  
C-M  In the first sweep radionuclide production cross sections are
C-M  located and the MT numbers are assigned, when possible.
C-M  Cross sections, which can not be identified uniquely by an MT
C-M  number are assigned MT=10(Z*1000+A)+LFS where LFS is the final
C-M  isomeric state of the nuclide. The spin of the target nucleus,
C-M  the S0-strength function, the average gamma width, the average
C-M  level spacing and the energy-dependent scattering radius are
C-M  also extracted to enable the assembly of the dummy resonance
C-M  parameter file.
C-M    In the second sweep, all reactions that do not have explicitly
C-M  given spectra are added to MT=5. When many exclusive spectra are
C-M  requested in the EMPIRE calculation, there may be cases where
C-M  particle spectra are given but no MT number is assigned. The
C-M  spectra are ignored, the cross sections are added to MT=5 and
C-M  particle production cross sections for this MT are incremented.
C-M    After the second sweep, all necessary information is
C-M  available to write the comments-section (MF=1) and the prompt
C-M  nu-bar (if the nuclide is fissile). For incident neutrons a
C-M  dummy resonance file (MF=2) is constructed.
C-M    The cross section data found on the file are fitted by a
C-M  cubic spline and entered into the output ENDF file on a
C-M  user-defined dense energy grid, thinned to the specified
C-M  tolerance and taking reaction thresholds into account.
C-M  If desired, the spline interpolation may be suppressed and
C-M  the energy points found on the file are entered directly into
C-M  the ENDF formatted file.
C-M  
C-M  The angular distributions for discrete level reactions
C-M  that appear in the ENDF File-4 sections are extracted from
C-M  the spectra on the EMPIRE output file, interpolated to
C-M  the appropriate energy, if necessary. Legendre polynomial
C-M  coefficients in the centre-of-mass are fitted to the
C-M  distributions. For elastic scattering the Legendre
C-M  coefficients are copied directly from the EMPIRE output;
C-M  If more than 64 Legendre coefficients are required, formatting
C-M  switches automatically to pointwise representation.
C-M
C-M  The correlated energy-angle distributions for continuum
C-M  reactions that appear in ENDF file-6 sections are entered
C-M  in Legendre polynomial representation in the centre-of-
C-M  mass coordinate system. The maximum Legendre order is
C-M  limited to 64. For reactions with relatively smooth
C-M  angular distributions, the number of coefficients is
C-M  reduced accordingly.
C-M
C-M  Photon production information for discrete levels can be stored
C-M  in ENDF files-12 and 14. The spectra for the continuum are
C-M  included in File-6 (rather than file 15). File-12 contains photon
C-M  transition probabilities and photon emission probabilities for
C-M  discrete level reactions, while File 14 contains the corresponding
C-M  angular distributions, which are assumed isotropic. The gamma
C-M  spectra of the (n,gamma) reaction are presently stored in File-6.
C-M  Primary gammas, which are optionally printed in the Empire output
C-M  are not formatted. This option should not be used when ENDF
C-M  formatting is required.
C-M
C-M  Instructions:
C-M  The program can be executed interactively from a terminal
C-M  screen. The required input is entered in response to the
C-M  prompts, which are the following:
C-M   - The name of the EMPIRE output file to be processed.
C-M   - The name of the ENDF formatted file to be written.
C-M   - Number of subintervals per incident neutron energy interval
C-M     on the EMPIRE output file. The subintervals define the fine
C-M     energy mesh for the cross sections on the ENDF formatted
C-M     file. The following are applicable:
C-M       0  Only the points on the EMPIRE output are entered to the
C-M          ENDF formatted file.
C-M       1  The points at reaction thresholds are entered. The energy
C-M          points above are as found in the EMPIRE output file.
C-M       n  Threshold points are entered, but in addition, each
C-M          interval on the EMPIRE output is subdivided into "n"
C-M          subintervals. Cross section values at intermediate points
C-M          are defined by a cubic spline fit.
C-M   - Thinning tolerance limit [%] to reduce the number of cross
C-M     section points. Data points which, can be reproduced from the
C-M     neighbouring points by linear interpolation to within the
C-M     specified tolerance, are removed. Entering a negative value
C-M     for the thinning tolerance limit causes thinning to be
C-M     suppressed.
C-M   - ENDF material number identifier.
C-M   - NLIB number assigned to the evaluation (see ENDF-6 manual).
C-M     The parameters are optional.
C-M   - ALAB, EDATE, AUTHOR string, where each of the listed
C-M     parameters occupies 11 columns (see ENDF-6 manual for
C-M     details). The parameters are optional.
C-M
C-M   NOTES:
C-M   - Extensive exclusive spectra calculations in EMPIRE
C-M     should be avoided when ENDF formatting is needed, since
C-M     for complex reactions when a residual nuclide can be
C-M     produced from more than one reaction, the assignment of
C-M     spectra can not be done uniquely. It is recommended to
C-M     allow up to 4 emitted neutrons and only a single charged
C-M     particle.
C-M   - All text preceeding the printout for first energy is
C-M     transferred to the comments section in the ENDF file (FM=1,
C-M     MT=451). The easiest way to insert customised comments into
C-M     the ENDF file is to modify (manually) the EMPIRE output.
C-M   - The resonance file (MF=2) that is generated for files
C-M     with incident neutrons is by no means a realistic cross
C-M     section representation. It is given for completeness, when
C-M     no information on the resonances (other than from the
C-M     systematics is available). The code places resonances spaced
C-M     uniformly around the thermal value according to the given
C-M     average level spacing. The neutron width is defined from the
C-M     S0 strength function and the gamma-widths are the average
C-M     gamma widths. The assigned resonance formalism is the
C-M     Multi-level Breit-Wigner formalism with energy-dependent
C-M     scattering radius.
C-M
C-M  To monitor the formatting process for quality assurance
C-M  purposes, the EMPEND.LOG file is written in which the
C-M  details of the formatting process are recorded. A limited
C-M  amount of checking is done. An entry to the log file is
C-M  added in the follwing cases:
C-M   - The cross section obtained by integrating the spectrum
C-M     should agree with the value given directly in the
C-M     EMPIRE output file. If the difference exceeds 2%,
C-M     a warning message is written, giving the reaction
C-M     MT number, the incident particle energy, the expected
C-M     cross section (i.e. the value given directly in the
C-M     EMPIRE output file) and the percent difference.
C-M   - The angular distributions are fitted to determine the
C-M     Legendre polynomial expansion coefficients. If the
C-M     distribution reconstructed from the Legendre polynomial
C-M     coefficients differs from the pointwise values on the
C-M     EMPIRE output file by more than 5%, a warning message
C-M     is written, giving the reaction MT number, the outgoing
C-M     particle ZA identifier, the incident and the outgoing
C-M     particle energies and the percent difference in the
C-M     fitted distribution from the pointwise value on the
C-M     file.
C-M  Additional messages monitor the progress of the data
C-M  formatting process.
C-M
C-
C* Limits on array sizes:
C* MXE - Maximum number of incident particle energy points.
C* MXT - Maximum number of reactions (including discrete levels).
C* MXM - Maximum number of residual nuclei.
C* MXR - Lengrh of the real work array RWO.
C* MXI - Length of the integer work array IWO.
      PARAMETER   (MXE=200,MXT=400,MXM=120,MXR=2400000,MXI=8000,MLV=3)
      CHARACTER*11 ALAB,EDATE,AUTHOR(3)
      CHARACTER*40 BLNK
      CHARACTER*80 FLNM,FLN1,FLN2,FLER
      CHARACTER*80 REC
C* Particle masses (neutron, proton, deuteron, triton, He-3, alpha, el.)
      COMMON /PMASS/ AWN,AWH,AWD, AWT, AW3,AWA, AWE
      DIMENSION    EIN(MXE),QQM(MXT),QQI(MXT)
     1            ,RWO(MXR),IWO(MXI),LVLF(MLV),LVMT(MLV),LVIZ(MLV)
c     DATA RWO/MXR*0./
C* Filenames and logical file units
      DATA LIN,LOU,LKB,LTT,LER / 1, 2, 5, 6, 7 /
      DATA BLNK/'                                        '/
     1    ,FLN1/'empire.out'/
     2    ,FLN2/'empire.end'/
     3    ,FLER/'empend.log'/
C* Default cross section linear interpolation tolerance limit 0%
      DATA ERR/0./
      DATA ZRO/0./
      DATA RWO/MXR*0./
C* Particle masses (neutron, proton, deuteron, triton, He-3, alpha)
C* ENDF-6 Formats Manual App. H.4, april 2001
C...  AWN = 1.008664916
C...  AWH = 1.007276467
C...  AWD = 2.013553213
C...  AWT = 3.016049268
C...  AW3 = 3.014932235
C...  AWA = 4.001506175
C* AMDC Audi-Wapstra mass tables 2003 "http://www-nds.iaea.org/amdc/"
C* Subtract electron mass and add ionisation energy defect
      AWE = 0.00054857991
      AWN = 1.008664916
      AWH = 1.007825032 -   AWE + 0.000000015
      AWD = 2.014101778 -   AWE + 0.000000015
      AWT = 3.016049278 -   AWE + 0.000000015
      AW3 = 3.016029319 - 2*AWE + 0.000000085
      AWA = 4.002603254 - 2*AWE + 0.000000085
C* Define the test printout control parameters
C... Hardwired specifications
      IPRNT=0
      EMIN=1.E-5
C* If specific MT requested, define also energy range and particle
      IF(IPRNT.GT.0) THEN
C* Incident particle energy range
        EI1  =0
        EI2  =2.E7
C* Outgoing particle energy range
        EO1  =0.
        EO2  =2.E7
C* Outgoing particle ZA identifier
        NZA1 =0
        NZA2 =99999
      END IF
C* Default ENDF specifications
      NTPE= 7777
      NLIB= 8
c...  NMOD= 0
      NMOD= 1
      ALAB ='EMPIRE     '
      EDATE='           '
      AUTHOR(1)='           '
      AUTHOR(2)='           '
      AUTHOR(3)='           '
      SPI =0
      STF0=0
      GAMG=0
      GAMF=0
      D0LV=0
      LRP =0
      I600=0
      I800=0
      IRCOIL=0
      NT6 =0
C*
C* Define input parameters - Write banner to terminal
      WRITE(LTT,991) ' EMPEND - Convert EMPIRE output to ENDF '
      WRITE(LTT,991) ' ====================================== '
      WRITE(LTT,991)
      GO TO 12
C* Error trap for invalid input file
   11 WRITE(LTT,991) BLNK
      WRITE(LTT,991) ' EMPEND ERROR - Opening input - Redo    '
      WRITE(LTT,991) BLNK
C* Define the source file
   12 WRITE(LTT,991) ' Default source filename (EMPIRE out.): ',FLN1
      WRITE(LTT,991) '$          Enter new name to redefine : '
      READ (LKB,'(A)') FLNM
      IF(FLNM(1:40).NE.BLNK) FLN1=FLNM
      ILEN=LEN(TRIM(FLN1))
      OPEN(UNIT=LIN,FILE=FLN1(1:ILEN),STATUS='OLD',ERR=11)
C* Define the output file
      WRITE(LTT,991) ' Source filename                      : ',
     >     FLN1(1:ILEN)
   14 WRITE(LTT,991) ' Default output filename              : ',FLN2
      WRITE(LTT,991) '$          Enter new name to redefine : '
      READ (LKB,'(A)') FLNM
      IF(FLNM(1:40).NE.BLNK) FLN2=FLNM
      ILEN=LEN(TRIM(FLN2))
      WRITE(LTT,991) ' Output filename                      : ',
     >     FLN2(1:ILEN)
      OPEN (UNIT=LOU,FILE=FLN2(1:ILEN),STATUS='UNKNOWN')
C* Define the number of points for cross sections fine mesh
      WRITE(LTT,991) ' Number of x-s fine mesh subintervals   '
      WRITE(LTT,991) '$    Enter blank to use original mesh : '
      READ (LKB,992) NEP
      IF(NEP.EQ.0) GO TO 15
C* Define the linear interpolation tolerance limit
      WRITE(LTT,991) ' Interp. thinning tolerance limit [%] : '
      WRITE(LTT,991) '$      Enter negative for No-thinning : '
      READ (LKB,994) X
      IF(X.GT.0) ERR=X*0.01
C* Define the MAT number
   15 WRITE(LTT,991) '$Enter the ENDF material MAT number   : '
      READ (LKB,992) MAT
      IF(MAT.LE.0)   MAT=1111
C* Define the NLIB number
      WRITE(LTT,991) '$Enter the NLIB number                : '
      READ (LKB,992,END=16) NLIB
      IF(NLIB.LE.0)   NLIB=8
C* Define ALAB, EDATE, AUTHOR strings.
      WRITE(LTT,991) '$Enter ALAB, EDATE, AUTHOR string     : '
      READ (LKB,997,END=16) ALAB,EDATE,AUTHOR
C*
C* Write the input options to Log-file
   16 OPEN (UNIT=LER,FILE=FLER,STATUS='UNKNOWN')
      WRITE(LER,991) ' EMPEND - Convert EMPIRE output to ENDF '
      WRITE(LER,991) ' ====================================== '
      WRITE(LER,991)
      WRITE(LER,991) ' Source EMPIRE output filename        : ',FLN1
      WRITE(LER,991) ' ENDF-6 formatted output filename     : ',FLN2
      WRITE(LER,995) ' Number of x-s fine mesh subintervals   ',NEP
      WRITE(LER,996) ' Interp. thinning tolerance limit [%] : ',ERR*100.
      WRITE(LER,991)
C*
C* Process cross section data
      WRITE(LTT,991)
      WRITE(LTT,991) ' BEGIN PROCESSING CROSS SECTION DATA    '
      WRITE(LER,991)
      WRITE(LER,991) ' BEGIN PROCESSING CROSS SECTION DATA    '
C* Define work array addresses
      MTH=1
      IZB=MTH+MXT
      LBI=IZB+MXM
      LSI=LBI+MXT
      IF(LSI.GT.MXI) STOP 'EMPEND ERROR - MXI limit exceeded'
      LXS=1
      LXG=LXS+MXE*MXT
      LBE=LXG+MXE*MXT
      LSC=LBE+3*MXM
      LXR=MXR-LSC
      IF(LSC.GT.MXR) STOP 'EMPEND ERROR - MXR limit exceeded'
C*
C* Read the EMPIRE output file to extract the cross sections
      CALL REAMF3(LIN,LTT,LER,MXE,MXT,MXM
     1    ,EIN,RWO(LXS),RWO(LXG),QQM,QQI,IWO(MTH),IWO(IZB),RWO(LBE)
     1    ,IZI,IZA,LISO,AWR,SPI,STF0,GAMG,D0LV,NEN,NXS,ISPE)
      IF(NEN.LE.0) THEN
        WRITE(LTT,995) ' EMPEND ERROR - Number of energy points:',NEN
        WRITE(LER,995) ' EMPEND ERROR - Number of energy points:',NEN
        STOP 'EMPEND ERROR - Zero energy entries in EMPIRE output'
      END IF
c...
      WRITE(LTT,991)
      WRITE(LTT,991) ' Initial list of MT numbers for MF3     '
      WRITE(LTT,999) (IWO(MTH-1+J),J=1,NXS)
C... Suppress writing MT50 because it interferes with NJOY processing
      DO J=1,NXS
        IF(IWO(MTH-1+J).EQ.50) IWO(MTH-1+J)=-50
      END DO
c...
c...
c...  WRITE(LTT, * ) ' '
c...  WRITE(LTT,'(A)') '        MT       QM          QI'
c...  DO J=1,NXS
c...    WRITE(LTT,'(I10,1P,2E12.5)') IWO(MTH-1+J),QQM(J),QQI(J)
c...  END DO

      write(ler,'(10x,10i10)') iwo(mth+77),iwo(mth+95),iwo(mth+96)

c...
C*
C* Redefine lower energy limit to first point, if not a neutron file
      IF(IZI.NE.1) EMIN=EIN(1)
C*
C* Separate out (z,2p+2n+x) from (z,a+x) into a new reaction
C...      REWIND LIN
C...      CALL FIXALF(LIN,IZI,IZA,NXS,NEN,IWO(MTH)
C...     &           ,RWO(LXS),QQM,QQI,MXE,MXT,RWO(LSC),LXR,LTT,LER)
C* Separate out (z,t) from (z,2np) into MT105
      REWIND LIN
      IF(ISPE.NE.0)
     &CALL FIXTRI(LIN,IZI,IZA,NXS,NEN,IWO(MTH)
     &           ,RWO(LXS),QQM,QQI,MXE,MXT,RWO(LSC),LXR,LTT,LER)
C* Eliminate all (nearly)-zero cross sections
      CALL FIXZRO(NXS,NEN,IWO(MTH),RWO(LXS),RWO(LXG)
     &           ,QQM,QQI,MXE,MXT,LTT,LER)
C*
C* Scan the EMPIRE output for all reactions with energy/angle distrib.
      IF(ISPE.NE.0) THEN
        REWIND LIN
        JT6=MXI-LBI
        CALL SCNMF6(LIN,LTT,LER,NT6,IWO(LBI),JT6,IZI,IZA,INCL)
C* Summ MT 5 contributions as necessary
        CALL SUMMT5(IZI,IZA,NXS,NEN,IWO(MTH),NT6,IWO(LBI)
     &             ,RWO(LXS),QQM,QQI,MXE,MXT,LTT,LER,INCL)
      END IF
C* Write the ENDF file header record to output
      REC=' EMPEND Processing file : '//FLN1
      NS =-1
      CALL WRTEXT(LOU,NTPE, 0, 0,NS,REC)
C* Check if nuclide is fissile
      CALL CHKFIS(NXS,NEN,IWO(MTH),RWO(LXS),MXE,MXT,LFI)
C* Check if resonance parameters need to be written (yes for neutrons)
      IF(IZI.EQ.1) THEN
        IF(STF0.GT.0 .AND. D0LV.GT.0) THEN
          LRP=1
          IF(LFI.GT.0) THEN
C*          -- Arbitrarily set small fission width for fissile nuclides
            GAMF=GAMG/100
          ELSE
            GAMF=0
          END IF
        ELSE
          LRP=0
        END IF
      ELSE
        LRP=-1
      END IF
C* Maximum energy of the evaluation
      EMX=EIN(NEN)
C* Write the ENDF file-1 data
      CALL WRIMF1(LIN,LOU,MAT,IZI,IZA,LISO,LRP,LFI,NLIB,NMOD
     &           ,ALAB,EDATE,AUTHOR,AWR,EMX,NS)
C* Write tabulated ENDF file-1 data (nu-bar)
      NS= 0
      MF= 1
      CALL WRIMF3(LOU,MXE,MXT,LXR,MF,LRP,EMIN
     1           ,EIN,RWO(LXS),QQM,QQI,IWO(MTH),RWO(LSC)
     1           ,MAT,IZI,IZA,AWR,NEN,NEP,NXS,ERR,NS)
      NS=-1
      IF(LRP.GE.0)
     &CALL WRIMF2(LOU,MXE,MXT,EIN,RWO(LXS),IWO(MTH)
     &           ,MAT,IZA,EMIN,AWR,SPI,STF0,GAMG,GAMF,D0LV,NEN,NXS,NS)
C* Write the ENDF file-3 data
      MF=3
      CALL WRIMF3(LOU,MXE,MXT,LXR,MF,LRP,EMIN
     1           ,EIN,RWO(LXS),QQM,QQI,IWO(MTH),RWO(LSC)
     1           ,MAT,IZI,IZA,AWR,NEN,NEP,NXS,ERR,NS)
      WRITE(LTT,991)
      WRITE(LTT,995) ' Processed reaction cross sections    : ',NXS
      WRITE(LTT,995) '        Number of input energy points : ',NEN
      WRITE(LTT,991)
      WRITE(LER,991)
      WRITE(LER,995) ' Processed reaction cross sections    : ',NXS
      WRITE(LER,995) '        Number of input energy points : ',NEN
      WRITE(LER,991)
      DO I=1,NXS
        JT=IWO(MTH-1+I)
        IF(JT.GT.1000 .AND. JT.LE.4999) THEN
          JT=JT-1000*(JT/1000)
          WRITE(LTT,995) '       Cross section too small for MT : ',JT
          WRITE(LER,995) '       Cross section too small for MT : ',JT
        END IF
C*      -- Flag the presence of discrete level proton and alpha production
        IF(JT.GE.600 .AND. JT.LE.649) I600=1
        IF(JT.GE.800 .AND. JT.LE.849) I800=1
      END DO
      IWO(LBI+NT6)=999
      ELO=EIN(1)
C*
      WRITE(LTT,991)
      WRITE(LTT,991) ' List of processed MT numbers for MF3   '
      WRITE(LTT,999) (IWO(MTH-1+J),J=1,NXS)
      WRITE(LTT,991) ' List of MT numbers for MF4/MF6         '
      WRITE(LTT,998) (IWO(LBI-1+J),J=1,NT6)
      WRITE(LER,991)
      WRITE(LER,991) ' List of MT numbers for MF3             '
      WRITE(LER,999) (IWO(MTH-1+J),J=1,NXS)
      WRITE(LER,991) ' List of MT numbers for MF4/MF6         '
      WRITE(LER,998) (IWO(LBI-1+J),J=1,NT6)
C...
      k1=lxs+mxe*77-1
      k2=lxs+mxe*95-1
      k3=lxs+mxe*96-1
      write(ler,'(10x,10i10)') iwo(mth+77),iwo(mth+95),iwo(mth+96)
      do j=1,nen
        write(ler,'(1p,10e10.3)') ein(j),rwo(k1+j),rwo(k2+j),rwo(k3+j)
     &                                  ,rwo(k1+j)+rwo(k2+j)+rwo(k3+j)        
      end do
c...
      WRITE(LER, * ) ' '
      WRITE(LER,'(A)') '        MT       QM          QI'
      DO J=1,NXS
        WRITE(LER,'(I10,1P,2E12.5)') IWO(MTH-1+J),QQM(J),QQI(J)
      END DO
C...
C*
C* Stop processing if no energy/angle distributions present
      IF(NT6.LE.0) GO TO 700
C...  IF(NT6.LE.0) GO TO 880
      JT4=0
      JT6=0
C*
C* Process angular distribution data
      WRITE (LTT,991)
      WRITE (LTT,991) ' BEGIN PROCESSING ANGULAR DISTRIB.DATA  '
      WRITE (LER,991)
      WRITE (LER,991) ' BEGIN PROCESSING ANGULAR DISTRIB.DATA  '
C*
C* Read the EMPIRE output file to extract angular distributions
  400 JT6=JT6+1
      MT4=0
      MT6=IWO(LBI-1+JT6)
C*    -- Check angular distributions (if none, purely isotropic, -LCT)
      IF(MT6.EQ.649) I600=0
      IF(MT6.EQ.849) I800=0
      IF(MT6.GT.649 .AND. I600.EQ.1) THEN
        JT6 =JT6-1
        MT6 =649
        MT4 =600
        I600=0
        LCT =-2
        WRITE (LTT,995) ' All-isotropic distribution for MT      ',MT6
        WRITE (LER,995) ' All-isotropic distribution for MT      ',MT6
        GO TO 420
      ELSE IF(MT6.GT.849 .AND. I800.EQ.1) THEN
        JT6 =JT6-1
        MT6 =849
        MT4 =800
        I800=0
        LCT =-2
        WRITE (LTT,995) ' All-isotropic distribution for MT      ',MT6
        WRITE (LER,995) ' All-isotropic distribution for MT      ',MT6
        GO TO 420
      END IF
C* Process discrete levels if continuum reactions present
      IF(MT6.NE.  2 .AND.
     1   MT6.NE. 91 .AND.
     1   MT6.NE.649 .AND.
     1   MT6.NE.849) GO TO 490
      LE=LBE
      LG=LE+NEN+2
      LA=LG+NEN+2
      LX=MXR-LA
      IF(LA.GT.MXR) STOP 'EMPEND ERROR - MXR limit exceeded'
      REWIND LIN
C* Disable ANGDIS printout for bad Legendre fits except for elastic
C* Discrete level distrib. checked with continuum when processing MF6
      JPRNT=IPRNT
c...
c...      JPRNT=-1
c...      IF(MT6.EQ.2) JPRNT=IPRNT
c...
C* Reading angular distributions - MF6 flagged negative
      KT6=-MT6
c...
c...  print *,'processing MT',MT6
c...
      CALL REAMF6(LIN,LTT,LER,EIN,RWO(LXS),RWO(LXG),NEN
     1           ,RWO(LE),RWO(LG),RWO(LA),IWO(MTH)
     1           ,KT6,IZI,IZA,QQM,QQI,AWR,EMIN,ELO,NXS,NK,LCT,IRCOIL
     2           ,MXE,LX,JPRNT,EI1,EI2,EO1,EO2,NZA1,NZA2,IER)
c...
c...  print *,'Done reamf6 MT,ier',MT6,ier
c...
      IF(MT4.GT.0) THEN
        WRITE(LTT,995) ' WARNING - No recoil spectra given      '
        WRITE(LER,995) ' WARNING - No recoil spectra given      '
        WRITE(LTT,995) BLNK
        WRITE(LER,995) BLNK
      END IF
      IF(IER.LT.0) GO TO 870
      IF(NK.LE.0) GO TO 490
C* Write the ENDF file-4 data
      MT4=2
  420 CALL WRIMF4(LOU,LTT,LER,IWO(MTH),QQM,QQI,NXS,MT6,RWO(LA),EMIN
     1           ,MT4,MAT,IZA,IZI,AWR,LCT,IRCOIL,NS)
      IF(MT4.GT.0) THEN
        WRITE(LTT,995) ' Processed angular distrib. for MT    : ',MT4
        WRITE(LER,995) ' Processed angular distrib. for MT    : ',MT4
        JT4=JT4+1
        MT4=MT4+1
        GO TO 420
      END IF
      WRITE(LTT,995) BLNK
      WRITE(LER,995) BLNK
  490 IF(JT6.LT.NT6 .OR. I800.EQ.1) GO TO 400
C* Angular distribution data processed
      IF(JT4.GT.0) THEN
        NS=0
        CALL WRCONT(LOU,MAT, 0, 0,NS,ZRO,ZRO, 0, 0, 0, 0)
      END IF
      JT6=0
      DO 492 I=1,NXS
      IWO(MTH-1+I)=ABS(IWO(MTH-1+I))
  492 CONTINUE
C*
C* Process double differential data
      WRITE(LTT,991)
      WRITE(LTT,991) ' BEGIN PROCESSING DOUBLE-DIFERENTL.DATA '
      WRITE(LER,991)
      WRITE(LER,991) ' BEGIN PROCESSING DOUBLE-DIFERENTL.DATA '
C* Check if yields for unassigned reactions need to be printed
      NK=0
      DO I=1,NT6
        IF(IWO(LBI-1+I).EQ.5) GO TO 600
        IF(IWO(LBI-1+I).EQ.201) NK=NK+1
        IF(IWO(LBI-1+I).EQ.203) NK=NK+1
        IF(IWO(LBI-1+I).EQ.207) NK=NK+1
      END DO
      CALL WRMF6Y(LOU,MXE,MXT,LXR
     1           ,EIN,RWO(LXS),QQI,IWO(MTH),RWO(LSC)
     1           ,MAT,IZI,IZA,AWR,NEN,NXS,NS)
      WRITE(LTT,995) ' Processed energ./ang. distrib. for MT: ',5
      WRITE(LTT,995) '         Number of outgoing particles : ',NK
      WRITE(LTT,991)
      WRITE(LER,995) ' Processed energ./ang. distrib. for MT: ',5
      WRITE(LER,995) '         Number of outgoing particles : ',NK
      WRITE(LER,991)
C* Read the EMPIRE output file to extract energy/angle distrib.
  600 LE=LBE
      LG=LE+NEN+2
      LA=LG+NEN+2
      LX=MXR-LA
      IF(LA.GT.MXR) STOP 'EMPEND ERROR - MXR limit exceeded'
      MT6=IWO(LBI+JT6)
      IF(MT6.EQ.2) GO TO 620
      REWIND LIN
      CALL REAMF6(LIN,LTT,LER,EIN,RWO(LXS),RWO(LXG),NEN
     1           ,RWO(LE),RWO(LG),RWO(LA),IWO(MTH)
     1           ,MT6,IZI,IZA,QQM,QQI,AWR,EMIN,ELO,NXS,NK,LCT,IRCOIL
     2           ,MXE,LX,IPRNT,EI1,EI2,EO1,EO2,NZA1,NZA2,IER)
      IF(IER.LT.0) GO TO 870
c...
c...      print *,'Read data for',nk,' particles'
c...      print '(1p,10e12.3)',(rwo(la-1+j),j=1,120)
c...
      IF(NK.LE.0) GO TO 620
C* Write the ENDF file-6 data
      CALL WRIMF6(LOU,RWO(LA),MT6,MAT,IZA,AWR,ELO,NK,LCT,NS)
      WRITE(LTT,995) ' Processed energ./ang. distrib. for MT: ',MT6
      WRITE(LTT,995) '         Number of outgoing particles : ',NK
      WRITE(LTT,991)
      WRITE(LER,995) ' Processed energ./ang. distrib. for MT: ',MT6
      WRITE(LER,995) '         Number of outgoing particles : ',NK
      WRITE(LER,991)
  620 JT6=JT6+1
      IF(JT6.LT.NT6) GO TO 600
C* Energy/angle distribution data processed
      IF(JT6.GT.0) THEN
        NS=0
        CALL WRCONT(LOU,MAT, 0, 0,NS,ZRO,ZRO, 0, 0, 0, 0)
      END IF
C*
C* Write radioisotope and isomer production data (MF10)
  700 WRITE(LTT,991)
      WRITE(LTT,991) ' BEGIN WRITING ACTIVATION DATA          '
      WRITE(LER,991)
      WRITE(LER,991) ' BEGIN WRITING ACTIVATION DATA          '
      N10=0
      NRC=0
      MF =10
      LIW=MTH+NXS
      LXI=MXI-LIW
      CALL WRMF10(LOU,MXE,MXT,LXI,LXR,EMIN
     1           ,EIN,RWO(LXS),QQM,QQI,IWO(MTH),IWO(LIW),RWO(LSC)
     1           ,MAT,IZI,IZA,AWR,NEN,NEP,NXS,ERR,N10,NRC,NS)
      WRITE(LTT,995) ' Number of MT sections written        : ',N10
      WRITE(LTT,995) '            Total number of reactions : ',NRC
      WRITE(LTT,991)
      WRITE(LER,995) ' Number of MT sections written        : ',N10
      WRITE(LER,995) '            Total number of reactions : ',NRC
      WRITE(LER,991)
      IF(ISPE.EQ.0) GO TO 870
C*
C* Process discrete level photon production
      WRITE(LTT,991)
      WRITE(LTT,991) ' BEGIN PROCESSING DISCRETE PHOTON DATA  '
      WRITE(LER,991)
      WRITE(LER,991) ' BEGIN PROCESSING DISCRETE PHOTON DATA  '
C*   MXLI - maximum number of discrete levels
C*   MXLJ - maximum number of transitions from a level
      MXLI=100
      MXLJ=20
      JPP=0
      LNB=LBI
      LNB0=LNB
      LLB=LNB+MXLI*MLV
      IF(LLB+MXLI*MXLJ.GT.MXI)
     1STOP 'EMPEND ERROR - MXI limit exceeded'
      LEL=LBE
      LBR=LEL+MXLI
      LSC=LBR+MXLI*MXLJ
      IF(LSC+MXLI*2.GT.MXR)
     1STOP 'EMPEND ERROR - MXR limit exceeded'
C* Select discrete level reactions to be processed
C* NOTE - Reactions going to ground states produce no photons
      DO L=1,MLV
        LVLF(L)=0
      END DO
      DO I=1,NXS
        IF     (IWO(MTH-1+I).GE. 51 .AND. IWO(MTH-1+I).LT. 91) THEN
C* Count levels of the MT50 series, set mt and IZP
          LVLF(1)=LVLF(1)+1
          LVMT(1)=51
          LVIZ(1)=1
        ELSE IF(IWO(MTH-1+I).GE.601 .AND. IWO(MTH-1+I).LT.649) THEN
C* Count levels of the MT600 series, set mt and IZP
          LVLF(2)=LVLF(2)+1
          LVMT(2)=601
          LVIZ(2)=1001
        ELSE IF(IWO(MTH-1+I).GE.801 .AND. IWO(MTH-1+I).LT.849) THEN
C* Count levels of the MT800 series, set mt and IZP
          LVLF(3)=LVLF(3)+1
          LVMT(3)=801
          LVIZ(3)=2004
        END IF
      END DO
C* Process selecte discrete level reactions
      LNB=LNB0
      DO L=1,MLV
        IF(LVLF(L).GT.0) THEN
          JZA=IZA+IZI-LVIZ(L)
          NL1=1
          MT0=LVMT(L)-NL1
          REWIND LIN
          CALL REMF12(LIN,LTT,LER,JZA,NLV,RWO(LEL),IWO(LNB),IWO(LLB)
     1               ,RWO(LBR),MXLI,MXLJ)
          KLV=NLV-NL1
          WRITE(LTT,995) ' Processed discrete level photon prod.: ',MT0
          WRITE(LTT,995) '           Number of processed levels : ',KLV
          WRITE(LTT,991)
          WRITE(LER,995) ' Processed discrete level photon prod.: ',MT0
          WRITE(LER,995) '           Number of processed levels : ',KLV
          WRITE(LER,991)
          JLV=LVLF(L)
          IF(KLV.NE.JLV) THEN
          WRITE(LTT,995) ' REMF12 WARNING - expected No.of levels:',JLV
          WRITE(LER,995) ' REMF12 WARNING - expected No.of levels:',JLV
          END IF
          NLV=JLV+NL1
          CALL WRMF12(LOU,MAT,MT0,IZA,AWR,NLV,NL1,RWO(LEL)
     1               ,IWO(LNB),IWO(LLB),RWO(LBR),RWO(LSC),MXLI,MXLJ,NBL)
          IF(NLV.GT.0) JPP=JPP+1
        END IF
        LNB=LNB+MXLI
      END DO
C* Photon production data from discrete levels processed
      IF(JPP.GT.0) THEN
        NS=0
        CALL WRCONT(LOU,MAT, 0, 0,NS,ZRO,ZRO, 0, 0, 0, 0)
      END IF
C* Process photon angular distribution for discrete levels (isotropic)
      JPP  =0
      LNB=LNB0+1
      DO L=1,MLV
        IF(LVLF(L).GT.0) THEN
          JZA=IZA+IZI-LVIZ(L)
          MT0=LVMT(L)
          JLV=LVLF(L)
          CALL WRMF14(LOU,MAT,MT0,IZA,AWR,JLV,IWO(LNB) ,NS)
          JPP=JPP+1
        END IF
        LNB=LNB+MXLI
      END DO
C* Photon angular distributions from discrete levels processed
      IF(JPP.GT.0) THEN
        NS=0
        CALL WRCONT(LOU,MAT, 0, 0,NS,ZRO,ZRO, 0, 0, 0, 0)
      END IF
C* Write the ENDF material MEND and tape TEND records
      NS=0
  870 CALL WRCONT(LOU,  0, 0, 0,NS,ZRO,ZRO, 0, 0, 0, 0)
C*
  880 NS=0
      CALL WRCONT(LOU, -1, 0, 0,NS,ZRO,ZRO, 0, 0, 0, 0)
      WRITE(LER,991) ' '
      WRITE(LER,991) ' EMPEND Processing Completed'
      WRITE(LER,991) ' '
      STOP 'EMPEND Completed'
C*
  990 FORMAT(A80)
  991 FORMAT(2A40)
  992 FORMAT(BN,I10)
  994 FORMAT(BN,F10.0)
  995 FORMAT(A40,4I5)
  996 FORMAT(A40,F10.4)
  997 FORMAT(5A11)
  998 FORMAT(10I5)
  999 FORMAT(10I8)
      END PROGRAM EMPEND
