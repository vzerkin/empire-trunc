C      VERSION 10 (August 2007, LANE CONSISTENT COULOMB CORRECTION 
C      WITH DISPERSIVE OPTICAL POTENTIAL RELATIONS)
C
C      AUTHORS:
C
C      EFREM SOUKHOVITSKI - NON-AXIAL SOFT-ROTATOR NUCLEAR MODEL THEORY, MAIN
C                           CC COMPUTATIONAL ALGORITHMS AND CODING,
C                           E-MAIL: esukhov@sosny.bas-net.by
C
C      SATOSHI CHIBA      - THEORY DEVELOPMENT in COOPERATION WITH
C                           E. SOUKHOVITSKI, E-MAIL: chiba.satoshi@jaea.go.jp
C
C      ROBERTO CAPOTE     - DISPERSIVE OPTICAL MODEL POTENTIAL RELATIONS,
C                           RIPL INTERFACE, E-MAIL: R.CapoteNoy@iaea.org
C
C      JOSE M. QUESADA    - DISPERSIVE OPTICAL MODEL POTENTIAL RELATIONS,
C                           E-MAIL: quesada@us.es
C
C
C      MAIN REFERENCES:   1. E.SH. SOUKHOVITSKII, S. CHIBA, O.IWAMOTO, K.SHIBATA
C                            T. FUKAHORI and G.B. MOROGOVSKII, TECHNICAL REPORT,
C                            JAERI-DATA/CODE 2005-002, JAPAN ATOMIC ENERGY
C                            INSTITUTE, 2005.
C                         2. E.SH. SOUKHOVITSKII, R. CAPOTE, J.M. QUESADA,
C                            S. CHIBA, PHYS. REV. C72, 024604 (2005).
C                         3. J.M. QUESADA, R. CAPOTE, E.Sh. SOUKHOVITSKI and
C                            S. CHIBA, PHYS. REV. C76, 057602 (2007).

C
C  ****************************************************************
      PROGRAM OPTMAN10
C     SUBROUTINE OPTMAN10(fname)
C  *************************************************************
C
C Dummy arguments
C
C     CHARACTER*(*) fname
      CHARACTER*20 fname

      COMMON/MENU/MEJOB,MEPOT,MEHAM,MECHA,MEPRI,MESOL,MESHA,MESHO,MEHAO
     *,MEAPP,MEVOL,MEREL,MECUL,MERZZ,MERRR,MEDIS,MERIP
      DIMENSION TITLE(20)

      WRITE(*,'(1X,A30)') 'INPUT FILE NAME (with. ext.) =>'
      READ(*,'(A20)') fname

      open(unit=20,file=TRIM(fname)//'.inp',STATUS='OLD')
      open(unit=21,file=TRIM(fname)//'.out')

      WRITE(21,'(A)')' ************************************************'
      WRITE(21,'(A)')' *     CODE OPTMAN VERSION 10 ( August, 2007)   *'
      WRITE(21,'(A)')' *    DISPERSIVE RELATIONS AND LANE CONSISTENCY *'
      WRITE(21,'(A)')' *       LANE CONSISTENT COULOMB CORRECTION     *'
      WRITE(21,'(A)')' ************************************************'

C     TRANSME ARRAY FOR TRANSITIONS TL
C     open(unit=22,file='TRANSME')
C     GNASH ARRAY FOR TRANSITIONS TLJ, J=L+ - 1/2
C     open(unit=24,file='GNASH')
C     open(unit=23,file='CR-SECT')
C     open(unit=25,file='ANG-DIST')
C     open(unit=26,file='ANG-POL')
C     open(unit=27,file='ANGDIS-yw')

      CALL THORA(21)

            READ (20,4) TITLE
            WRITE(21,4) TITLE
            READ(20,1)MEJOB,MEPOT,MEHAM,MEPRI,MESOL,MESHA,MESHO,
     *                MEHAO,MEAPP,MEVOL,MEREL,MECUL,MERZZ,MERRR,
     *                MEDIS,MERIP
    1 FORMAT(20I2)
    4 FORMAT(20A4)
C#1   MEJOP 1-JOB STANDARD*2-JOB WITH POTENTIAL OPTIMIZATION.
C#2   MEPOT 1-POT-AL OF ROT.MODEL  YL0* 2-POT-AL EXPANDED BY BETTA
C#3   MEHAM 1-RM* 2-VM* 3-DCHM* 6-5PARM* 4-FDM* 5-5PAR0M* 7-COUPL.GB
C#4   MEPRI OUTPUT MANAGEMENT * 0-MINIMUM
C#5   MESOL 1-OPTIMIZED 2-EXACT >3-ITERATION METHODS
C           3-ZERO APPROX..-SPHERICAL OPTICAL MODEL
C          >3-ZERO APPROX. HAS THIS NUMBER OF COUPLED EQ.
C#    MESHA 1-QUADR*2-+GEXAD.AXIAL.* 3-+GEXAD.N.AXIAL. DEF BY  GAM.
C     *4-COMMON CASE.
C#7   MESHO 0-NO *1-AXIAL.*2-NON-AXIAL OCTUPOLE DEFORMATION
C#8   MEHAO 0-NO *1-CONSIDER. OF OCT OSC. * 2-SIMMET. OCTUPOLE OSC. ScaLED BY \beta^2
C           3-2-SIMMET. OCTUPOLE OSC. NOT SCALED BY \beta^2
C#9   MEAPP 0-EXECT SOLUTION; *1-QUICK SOLUTION WITHOUT LEVEL'S  POTENTIAL DEPENDANCE
C           2- The most common case
C#10  MEVOL 0-STANDARD SOLUTION; *>1- ACCOUNT OF NUCLEAR VOLUME
C     CONSERVATION
C#11  MEREL 0-STANDARD SOLUTION;
C           1-ACCOUNT OF RELATIVISTIC KINEM AND POTEN. DEPENDENCE
C           2-ACCOUNT OF RELATIVISTIC KINEMATICS
C           3-ACCOUNT OF RELATIVISTIC KINEM AND REAL POTEN. DEPENDENCE
C#12  MECUL 0-COULOMB CORRECTION PROPORTIONAL TO DERIVATIVE OF REAL PORENTIAL
C           1-CONSTANT
C           2-LANE CONSISTANT COULOMB CORRECTION NUCLEAR POTENTIAL ENERGY FOR PROTONS EQUAL TO
C           INCIDENT ENERGY - CDE, APPLIED TO BOTH REAL AND UMAGINARY POTENTIAL
C           3-LANE CONSISTANT COULOMB CORRECTION NUCLEAR POTENTIAL ENERGY FOR PROTONS EQUAL TO
C           INCIDENT ENERGY - CDE, APPLIED TO REAL POTENTIAL ONLY
C#13  MERZZ 0-CHARGE RADIUS -CONSTANT
C           1-ENERGY DEPENDENT
C#14  MERRR 0-REAL RADIUS IS ENERGY INDEPENDENT
C           1-REAL RADIUS IS ENERGY DEPENDENT
C#15  MEDIS 0-WITHOUT ACCOUNT OF DISPERSION RELATIONS BETWEEN REAL AND IMAGINARY POTENTIALS
C           1-ACCOUNT OF DISPERSION RELATIONS BETWEEN REAL AND IMAGINARY POTENTIALS
C           2-ACCOUNT OF DISPERSION RELATIONS BETWEEN REAL AND IMAGINARY POTENTIALS,
C           EXCLUDING SPIN ORBIT POTENTIAL
C#16  MERIP 0-IN ABCT READS POTENTIAL ONE TIME WITH ANALITICAL DEPENDENCIES FOR ALL ENERGIES
C           1-ABCT READS POTENTIAL BLOCKS FOR EACH ENERGY TO USE RIPL COMPILED INPUTS
C
      IF(MEJOB.EQ.2) GO TO 3
      CALL ABCT
      GO TO 2
    3 CALL DATET
    2 close(20)
      close(21)
      STOP
      END
C     *******************************************************
      SUBROUTINE ABCT
C     *******************************************************
      IMPLICIT REAL*8(A-H,O-Z)
      CHARACTER*4 ITEXT,IMOD,IPOT,MPOT,IFOR1,IFOR2,
     *IFOR3,ISMOD,IFOR4,IHMOD,IFOR5           

      CHARACTER*23 ctmp23
      CHARACTER*1  cpar(-1:1)

      DIMENSION ITEXT(3),IMOD(7),IPOT(7),MPOT(2),IFOR1(2),IFOR2(9),
     *IFOR3(3),ISMOD(2),IFOR4(5),IHMOD(3),IFOR5(4)
      COMMON/DISK/TET(150),MTET
      COMMON/DISCAN/DISC(20,150),PL(180,150),COEF(20,180),LKK
     */COUL/CONZ,ETA,COPH(20,90)
     */COULCO/COEFR(90),COEFI(90)
      COMMON/CSB/CST,CSR,NST
     */ENA/EN,EL(20),BET(10),NUR,NMAX,NPD,LAS
     */POT1/VR3,VR2,VR1,VR0,WC1,WC0,WD1,WD0,VS,AC0,AR0,AW0,AD0,AS0
     */POT2/AR1,AC1,AW1,AD1,AS1
     */POT3/BNDC,WDA1,WCA1,CCOUL,CISO,WCISO,WS0,WS1
     */POTD/ALAVR,VRLA,WCBW,WCWID,WDBW,WDWID,ALAWD,EFERMN,EFERMP,ALASO
     *,PDIS,WSBW,WSWID,RRBWC,RRWID,RZBWC,RZWID
      COMMON/RAD/RR,RC,RD,RW,RS,AR,AC,AW,AD,AS,ALF,AT,ANEU,RZ,ZNUC,ASP
     *,AZ
     */QNSB/INC(180),INR(180),JS(180)
      COMMON/JNN/CSS,INCC,NCLL,NSS,NJ,INCR
      COMMON/POTB/WNK(20),WN(20),VR,WC,WD
      COMMON/QNB/JO(20),NPO(20),KO(20),NCA(20)
      COMMON/MENU/MEJOB,MEPOT,MEHAM,MECHA,MEPRI,MESOL,MESHA,MESHO,MEHAO
     *,MEAPP,MEVOL,MEREL,MECUL,MERZZ,MERRR,MEDIS,MERIP
     */ENB/EE(50),MCHAE(50)
     */NU/NUI,NUF
     */CS1/CSN(20),CM(20)
     */SF12/SF0,SF1,SF2
     */SHEMM/ES(20),JJ(20),NTU(20),NNB(20),NNG(20),NNO(20),
     *NPI(20)
     */SHEM1/HW,AMG0,AMB0,GAM0,BET0,BET4,GAMDE,GSHAPE
     */INRM/AMO,BMO,CMO,BB42,GAMG,DELG
     */SHAMO/BET3,ETO,AMUO,HWO,BB32,DPAR
     */NCLMA/LLMA,NCMA,NSMA,KODMA
     */DISPE/VD,VRDC,EA,WDISO
	COMMON/DISPE2/VRD,WDSHI,WDWID2,ALFNEW
      DATA ITEXT,IMOD/4HHAMI,4HLTON,4HIAN ,4H RV ,4H VM ,4HDCHM,
     *4H FDM,4H5PA0,4H 5PM,4HCLGB/,
     *IPOT,MPOT/4HPOTE,4HNTIA,4HL EX,4HPAND,4HED  ,4HBY  ,
     *4H    ,4HYL0 ,4HBET0/,IFOR1,IFOR2,IFOR3/4HWITH,4H AC.,
     *4HAXIA,4HL GE,4HXADE,4HCAPO,4HLE D,4HEFOR,4HMATI,4HONS ,
     *4H    ,4H    ,4H|NON,4H NON/,
     *ISMOD,IFOR4,IHMOD,IFOR5/4H    ,4H NON,4HAXIA,4HL OC,4HTUP0,
     *4HLE  ,4H    ,4HRID.,4HSOFT,4HSOFT,4H    ,4HDEFO,4HRMAT,4HIONS /
      IF(MEHAM.GT.1) READ(20,2)HW,AMB0,AMG0,GAM0,BET0,BET4,
     *BB42,GAMG,DELG,
     *BET3,ETO,AMUO,HWO,BB32,GAMDE,DPAR,GSHAPE
C=======================================================================
C     LLMA-MAXIMUM MOMENTUM L
C     NCMA-MAXIMUM NUMBER OF COUPLED EQ.
C     NSMA-NUMBER OF SYSTEMS WITH  J AND PARITY
C     KODMA-SWITCH: 0-COUPLED STATES ARE ORDERED ONE BY ONE, NO MORE
C                   THAN NCMA
C                 1:-COUPLED STATES ARE ORDERED BY GROWING MOMENTUM L
C                    NO MORE THAN NCMA
C=======================================================================
           READ(20,211)NUR,NST,NPD,LAS,MTET,LLMA,NCMA,NSMA,KODMA
  211 FORMAT(20I3)
      IF(LLMA.EQ.0.OR.LLMA.GT.89) LLMA=89
      IF(NCMA.EQ.0.OR.NCMA.GT.200) NCMA=200
      IF(NSMA.EQ.0.OR.NSMA.GT.180) NSMA=180
            if(NST.LT.0) THEN
                 OPEN(99,FILE='OMINPUT.INP')
                 READ(99,*) NST
                 READ(99,*,END=212)(EE(I),I=1,NST)
  212            CLOSE(99)
              WRITE(*,*) NST
              DO I=1,NST
               WRITE(*,*) EE(I)
              MCHAE(I)=0
              ENDDO
            ELSE
             READ(20,2)(EE(I),I=1,NST)
             READ(20,1)(MCHAE(I),I=1,NST)
            ENDIF
      IF(MTET.EQ.0) GO TO 13
           READ(20,2)(TET(I),I=1,MTET)
   13 IF(MEHAM.GT.1) GO TO 16
           READ(20,3)(EL(I),JO(I),NPO(I),KO(I),NCA(I),I=1,NUR)
      GO TO 17
   16      READ(20,43)(EL(I),JO(I),NPO(I), NTU(I),NNB(I),NNG(I),
     *                 NNO(I),NCA(I),I=1,NUR)
C====================================================================
C     VR=VR0+VR1*EN+VR2*EN*EN      AR=AR0+AR1*EN
C===================================================================
C                WD=WD0+WD1*EN     AD=AD0+AD1*EN
C     EN<BNDC    WC=WC0+WC1*EN     AC=AC0+AC1*EN
C ====================================================================
C                WD=WD0+WD1*BNDC+(EN-BNDC)*WDA1
C     EN>BNDC    WC=WC0+WC1*BNDC+(EN-BNDC)*WCA1
C                AD=AD0+AD1+BNDC
C====================================================================
   17      READ(20,2)ANEU,ASP,AT,ZNUC,EFERMN,EFERMP
           READ(20,2)VR0,VR1,VR2,VR3,VRLA,ALAVR,
     *               WD0,WD1,WDA1,WDBW,WDWID,ALAWD,
     *               WC0,WC1,WCA1,WCBW,WCWID,BNDC,
     *               VS,ALASO,WS0,WS1,WSBW,WSWID,
     *               RR,RRBWC,RRWID,PDIS,AR0,AR1,
     *               RD,AD0,AD1,RC,AC0,AC1,
     *               RW,AW0,AW1,RS,AS0,AS1,
     *               RZ,RZBWC,RZWID,AZ,CCOUL,ALF,
     *               CISO,WCISO,WDISO,EA,WDSHI,WDWID2,
     *               ALFNEW,VRD
C     PRINT 500,ASP,AT
      WRITE(21,500)ASP,AT
  500 FORMAT( 7X,'INTERACTION OF PARTICLE, HAVING SPIN =',F5.2/19X,
     *'WITH NUCLEI',2X,'A=',F12.7/20X,'COUPLED CHANNELS METHOD')
      MESHH=MESHA-1
C     IF(MEREL.EQ.0) PRINT 134
      IF(MEREL.EQ.0) WRITE(21,134)
  134 FORMAT(22X,'NEWTON KINEMATICS')
C     IF(MEREL.EQ.1) PRINT 135
      IF(MEREL.EQ.1) WRITE(21,135)
  135 FORMAT(5X,'RELATIVISTIC KINEMATICS AND POTENTIAL DEPENDENCE')
C     IF(MEREL.EQ.2) PRINT 136
      IF(MEREL.EQ.2) WRITE(21,136)
  136 FORMAT(20X,'RELATIVISTIC KINEMATICS')
C     IF(MEREL.EQ.3) PRINT 137
      IF(MEREL.EQ.3) WRITE(21,137)
  137 FORMAT(3X,'RELATIVISTIC KINEMATICS AND REAL POTENTIAL DEPENDENCE')
C
C     IF(MEDIS.EQ.0) PRINT 184
      IF(MEDIS.EQ.0) WRITE(21,184)
  184 FORMAT(6X,'OPTICAL POTENTIAL WITHOUT DISPERSIVE RELATIONSHIPS')
C     IF(MEDIS.GE.1) PRINT 185
      IF(MEDIS.GE.1) WRITE(21,185)
  185 FORMAT(6X,'OPTICAL POTENTIAL WITH THE DISPERSIVE RELATIONSHIPS')
C
C     IF(MECUL.EQ.0) PRINT 154
      IF(MECUL.EQ.0) WRITE(21,154)
  154 FORMAT(5X,'COULOMB CORRECTION PROPORTIONAL REAL POTENTIAL DER-VE')
C     IF(MECUL.EQ.1) PRINT 155
      IF(MECUL.EQ.1) WRITE(21,155)
  155 FORMAT(15X,' COULOMB CORRECTION IS CONSTANT')
C     IF(MECUL.EQ.2) PRINT 156
      IF(MECUL.EQ.2) WRITE(21,156)
  156 FORMAT(/7X,' LANE CONSISTENT, EFFECTIVE PROTON ENERGY = E-CME,'/
     *13X,'BOTH FOR REAL AND IMAGINARY POTENTIALS'/)
C     IF(MECUL.EQ.3) PRINT 157
      IF(MECUL.EQ.3) WRITE(21,157)
  157 FORMAT(/7X,' LANE CONSISTENT, EFFECTIVE PROTON ENERGY = E-CME,'/
     *20X,' FOR REAL POTENTIAL ONLY'/)
C
C     IF(MERZZ.EQ.0) PRINT 164
      IF(MERZZ.EQ.0) WRITE(21,164)
  164 FORMAT(22X,'CHARGE RADIUS IS CONSTANT')
C     IF(MERZZ.EQ.1) PRINT 165
      IF(MERZZ.EQ.1) WRITE(21,165)
  165 FORMAT(15X,' CHARGE RADIUS IS ENERGY DEPENDENT')
C
C     IF(MERRR.EQ.0) PRINT 174
      IF(MERRR.EQ.0) WRITE(21,174)
  174 FORMAT(22X,'REAL RADIUS IS CONSTANT')
C     IF(MERRR.EQ.1) PRINT 175
      IF(MERRR.EQ.1) WRITE(21,175)
  175 FORMAT(15X,' REAL RADIUS IS ENERGY DEPENDENT')
C
C     IF(MESHA.GT.1) PRINT 51,IFOR1,IFOR3(MESHH),IFOR2
      IF(MESHA.GT.1) WRITE(21,51)IFOR1,IFOR3(MESHH),IFOR2
   51 FORMAT(10X,14A4)
C     PRINT 50,ITEXT,IMOD(MEHAM),IPOT,MPOT(MEPOT)
      WRITE (21,50)ITEXT,IMOD(MEHAM),IPOT,MPOT(MEPOT)
   50 FORMAT(/10X,4A4,6X,8A4)
      MEHA1=MEHAO+1
C     IF(MESHO.GT.0) PRINT 45, IFOR1,ISMOD(MESHO),IFOR4,IHMOD(MEHA1),
C    *IFOR5
      IF(MESHO.GT.0) WRITE(21,45) IFOR1,ISMOD(MESHO),IFOR4,IHMOD(MEHAO),
     *IFOR5
   45 FORMAT(10X,13A4)
C     PRINT 100,NUR,NPD,LAS
      WRITE(21,100)NUR,NPD,LAS
      IF(MEHAM.GT.1) GO TO 18
C     PRINT 501,(I,EL(I),JO(I),NPO(I),KO(I),NCA(I),I=1,NUR)
      WRITE(21,501)(I,EL(I),JO(I),NPO(I),KO(I),NCA(I),I=1,NUR)
      GO TO 19
   18 CONTINUE
C     PRINT 20,(I,EL(I),JO(I),NTU(I),NNB(I),NNG(I),NNO(I),NPO(I),NCA(I),
C    *I=1,NUR)
      WRITE(21,20)(I,EL(I),JO(I),NTU(I),NNB(I),NNG(I),NNO(I),NPO(I),
     *NCA(I),I=1,NUR)
C     PRINT 21,HW,AMB0,AMG0,GAM0,BET0,BET4,BB42,GAMG,DELG
C    *,BET3,ETO,AMUO,HWO,BB32,GAMDE,DPAR,GSHAPE
      WRITE(21,21)HW,AMB0,AMG0,GAM0,BET0,BET4,BB42,GAMG,DELG
     *,BET3,ETO,AMUO,HWO,BB32,GAMDE,DPAR,GSHAPE
   21 FORMAT(/22X,'PARAMETERS OF HAMILTONIAN '/5X,'HW=',F12.5,3X,
     *'AMB0=',F 8.5,3X,'AMG0=',F 8.5,3X,'GAM0=',F 8.5,3X,
     *'BET0=',F 8.5/
     *5X,'BET4=',F10.5,3X,'BB42=',F8.5,3X,'GAMG=',F8.5,3X,
     *'DELG=',F8.5/
     *5X,'BET3=',F10.5,3X,'ETO=',F9.5,3X,'AMUO=',F8.5,3X,
     *'HWO=',F8.5,4X,'BB32=',F8.5,3X/
     *5X,'GAMDE=',F9.5,3X,'DPAR=',F8.4,3X,'GSHAPE=',F8.5//)
      IF(MEHAM.GT.2) CALL PREQU
   20 FORMAT(//16X,'ENERGY ',4X,'LEVEL''S SPIN*2',4X,'NTU  ',
     *6X,'NNB  ', 6X,'NNG', 9X,'NNO',9X,'NPO',9X,'NCA'//
     *(1X,I4,8X,E14.7,7I11))
  501 FORMAT(//16X,'ENERGY',5X,'LEVEL''S SPIN*2',3X,'PARITY',10X,
     *'BAND*2',10X,'NCA'/
     */(1X,I4,6X,E12.5,I11,I14,I15,I15))
 100  FORMAT( /15X,'NUMBER OF COUPLED LEVELS=',I3,5X,'NPD =',I2/14X,
     *'NUMBER OF TERMS IN POTENTIAL EXPANSION= ',2X,I2)
  19  CONTINUE
C     PRINT 90
      WRITE(21,90)
  90  FORMAT(/15X,'POTENTIAL   PARAMETERS   V(R)')
C     PRINT 91,VR0,VR1,VR2,RR,AR0,AR1,WD0,WD1,VR3,RD,AD0,AD1,
C    *WC0,WC1,RC,AC0,AC1,RW,AW0,AW1,VS,RS,AS0,AS1,ALF,ANEU,RZ,
C    *AZ,BNDC,WDA1,WCA1,CCOUL,CISO,WCISO,WS0,WS1,VRLA,ALAVR,
C    *WCBW,WCWID,WDBW,WDWID,ALAWD,EFERMN,EFERMP,ALASO,PDIS,
C    *WSBW,WSWID,RRBWC,RRWID,RZBWC,RZWID,EA,WDISO,WDSHI,WDWID2,
C    *ALFNEW,VRD
      WRITE(21,91)VR0,VR1,VR2,RR,AR0,AR1,WD0,WD1,VR3,RD,AD0,AD1,
     *WC0,WC1,RC,AC0,AC1,RW,AW0,AW1,VS,RS,AS0,AS1,ALF,ANEU,RZ,
     *AZ,BNDC,WDA1,WCA1,CCOUL,CISO,WCISO,WS0,WS1,VRLA,ALAVR,
     *WCBW,WCWID,WDBW,WDWID,ALAWD,EFERMN,EFERMP,ALASO,PDIS,
     *WSBW,WSWID,RRBWC,RRWID,RZBWC,RZWID,EA,WDISO,WDSHI,WDWID2,
     *ALFNEW,VRD

   91 FORMAT(/1X,'VR0=',F7.3,5X,'VR1=',F7.4,5X,'VR2=',F10.7,2X,
     *'RR=',F7.4,5X,'AR0=',F7.4,5X,'AR1=',F7.4
     */1X,'WD0=',F7.4,5X,'WD1=',F7.4,5X,'VR3=',F10.7,2X,
     *'RD=',F7.4,5X,'AD0=',F7.4,5X,'AD1=',F7.4
     */1X,'WC0=',F7.4,5X,'WC1=',F7.4,21X,
     *'RC=',F7.4,5X,'AC0=',F7.4,5X,'AC1=',F7.4
     */49X,'RW=',F7.4,5X,'AW0=',F7.4,5X,'AW1=',F7.4
     */1X,'VSO=',F7.4,37X,'RS=',F7.4,5X,'AS0=',F7.4,5X,'AS1=',F7.4
     */1X,'ALF=',F7.4,5X,'ANEU=',F7.4,20X,'RZ=',F7.4,5X,'AZ0=',F7.4,
     */1X,'BNDC=',F7.2,4X,'WDA1=',F7.4,4X,'WCA1=',F7.4,4X,'CCOUL=',F7.4
     *,5X,'CISO=',F7.3,4X,'WCISO=',F7.3
     */1X,'WS0=',F7.4,5X,'WS1=',F7.4,5X,'VRLA=',F7.4
     *,4X,'ALAVR=',F8.5,4X,'WCBW=',F7.4,4X,'WCWID=',F7.4,/1X,'WDBW='
     *,F7.4,4X,'WDWID=',F7.4,3X,'ALAWD=',F7.4
     *,3X,'EFERMN=',F7.3,4X,'EFERMP=',F7.3,2X,'ALASO=',F7.4,
     */1X,'PDIS=',F7.4,4X,'WSBW=',F7.4,4X,'WSWID=',F7.2,3X,'RRBWC=',F7.4
     *,5X,'RRWID=',F6.2,4X,'RZBWC=',F7.4,
     */1X,'RZWID=',F7.4,3X,'EA=',F9.5,4X,'WDISO=',F7.3,
     *3X,'WDSHI=',F7.2,5X,'WDWID2=',F7.2,2X,'ALFNEW=',F6.3,
     */1X,'VRD=',F8.3)
C     PRINT 133,ZNUC
      WRITE(21,133)ZNUC
 133  FORMAT(/30X,'NUCLEUS CHARGE = ',F7.4/)
           IF(MEHAM.GT.1) GO TO 8
           IF(NPD.EQ.0) GO TO 8
           READ(20,2)(BET(I),I=2,NPD,2)
C     PRINT 96,(I,BET(I),I=2,NPD,2)
      WRITE(21,96)(I,BET(I),I=2,NPD,2)
  96  FORMAT(6X,'NPD',5X,'DEFORMATION PARAMETER VALUES'/
     *(6X,I2,13X,F7.4))
    1 FORMAT(36I2)
    2 FORMAT(6E12.7)
    3 FORMAT(E12.7,4I2)
   43 FORMAT(E12.7,7I2)
    8 ASQ=AT**(1./3.)
      RR=RR*ASQ
      RC=RC*ASQ
      RD=RD*ASQ
      RW=RW*ASQ
      RS=RS*ASQ
      RZ=RZ*ASQ
      KOD=KODMA
      NURRR=NUR
      DO 4 II=1,NST
                     IF(II.EQ.1) GO TO 678
                     IF(MERIP.NE.1) GO TO 678
                     READ(20,*)      
	               READ(20,2)VR0,VR1,VR2,VR3,VRLA,ALAVR,
     *               WD0,WD1,WDA1,WDBW,WDWID,ALAWD,
     *               WC0,WC1,WCA1,WCBW,WCWID,BNDC,
     *               VS,ALASO,WS0,WS1,WSBW,WSWID,
     *               RR,RRBWC,RRWID,PDIS,AR0,AR1,
     *               RD,AD0,AD1,RC,AC0,AC1,
     *               RW,AW0,AW1,RS,AS0,AS1,
     *               RZ,RZBWC,RZWID,AZ,CCOUL,ALF,
     *               CISO,WCISO,WDISO,EA,WDSHI,WDWID2,
     *               ALFNEW,VRD
      WRITE(21,91)VR0,VR1,VR2,RR,AR0,AR1,WD0,WD1,VR3,RD,AD0,AD1,
     *WC0,WC1,RC,AC0,AC1,RW,AW0,AW1,VS,RS,AS0,AS1,ALF,ANEU,RZ,
     *AZ,BNDC,WDA1,WCA1,CCOUL,CISO,WCISO,WS0,WS1,VRLA,ALAVR,
     *WCBW,WCWID,WDBW,WDWID,ALAWD,EFERMN,EFERMP,ALASO,PDIS,
     *WSBW,WSWID,RRBWC,RRWID,RZBWC,RZWID,EA,WDISO,WDSHI,WDWID2,
     *ALFNEW,VRD  
      ASQ=AT**(1./3.)
      RR=RR*ASQ
      RC=RC*ASQ
      RD=RD*ASQ
      RW=RW*ASQ
      RS=RS*ASQ
      RZ=RZ*ASQ


  678 EN=EE(II)

C     CREATING LEVELS FOR (P,N) ANALOG STATES CALCULATIONS


      
C     CREATING LEVELS FOR (P,N) ANALOG STATES CALCULATIONS

      IF(EE(II).LT.EL(NURRR)*(AT+1.007825032D0)/AT+0.5D0) GO TO 779
      IF(MEHAM.GE.1.AND.MCHAE(II).EQ.1) NUR=NURRR
	IF(MEHAM.GE.1.AND.MCHAE(II).EQ.1) GO TO 777
  779	DO 778 ILEV=1,NURRR
  	IF(NCA(ILEV).EQ.NCA(1)) NUR=ILEV
  778 CONTINUE




  777  MECHA=MCHAE(II)
       ANEU=1.008664924
       IF(MECHA.EQ.1) ANEU=1.007825032
       AMI=939.56536
       IF(MECHA.EQ.1) AMI=938.272029
      REL=(EN+AMI)/AMI
      IF(MEREL.EQ.0) REL=1.
      ENC=EN*AT/(AT+ANEU*REL)
      DO 5 I1=1,NUR
      IF(ENC-EL(I1))6,6,5
    5 CONTINUE
      NMAX=NUR
      GO TO 7
    6 NMAX=I1-1
    7 CONTINUE
      KODMA=KOD
      IF(NMAX.LT.NUR) KODMA=0
      CALL RIPAT
      CALL ASFUT
      IF(MEHAM.GT.1) CALL KNCOE
      CALL QUANT
      IF(MTET.EQ.0) GO TO 15
      NUI=1
      NUF=NMAX
      CALL DISCA
C     PRINT 110
      WRITE(21,110)
  110 FORMAT(/23X,'ANGULAR DISTRIBUTIONS OF SCATTERED PARTICLES'/)
C     WRITE(27,'(F10.6,2I3)') EN,MTET,NMAX
      DO 14 M=1,MTET
C     PRINT 11,TET(M),(DISC(K,M),K=1,NMAX)
      WRITE(21,11)TET(M),(DISC(K,M),K=1,NMAX)
C     WRITE(27,111)TET(M),(DISC(K,M),K=1,NMAX)
C 111 FORMAT(E13.6,(8E13.6),(12E13.6))
   14 CONTINUE
   11 FORMAT(2X,E11.3,3X,(8E11.3)
     *,(12E11.3))
      DO 25 L=1,40
      IF(COEFR(L).EQ.0.AND.COEFI(L).EQ.0.) LCOUL=L-1
      IF(COEFR(L).EQ.0.AND.COEFI(L).EQ.0.) GO TO 26
   25 CONTINUE
   26 CONTINUE
C     PRINT 101, EN,LKK,LCOUL
C     WRITE(26,101)EN,LKK,LCOUL
C     WRITE(26,131)EN,CST,CSR,(CSN(K),K=1,NMAX)
C 101 FORMAT (/3X,'EN=',F9.3,3X,'LKK=',I3,3X,'LCOUL=',I3)
C     DO 9 N=1,NMAX
C     PRINT 112,(COEF(N,L),L=1,LKK)
C     WRITE(26,112)(COEF(N,L),L=1,LKK)
C     IF(ETA.EQ.0.OR.N.GT.1) GO TO 9
C     PRINT 113, (COEFR(L),COEFI(L),L=1,LCOUL)
C     WRITE(26,113) (COEFR(L),COEFI(L),L=1,LCOUL)
C   9 CONTINUE
C112  FORMAT(/14X,'LEGENDRE COEFFICIENTS FOR  SCATTERED NUCLEONS'/
C    *16X,'ANGULAR DISTRIBUTIONS - NUCLEAR AMPLITUDE'/(1X,6E15.7))
C113  FORMAT(/14X,'LEGENDRE COEFFICIENTS FOR  SCATTERED PROTONS'/
C    *16X,'ANGULAR DISTRIBUTIONS - COULOMB AMPLITUDE'/(1X,6E15.7))
   15 IF(MECHA.NE.0) GO TO 102
C RCN
      IF(EN.LT.2.d0) THEN
        PRINT 12,EN,CST,CSR,CST-CSN(1),SQRT((CST-CSR)/0.125663706D0)
        WRITE(21,12)EN,CST,CSR,CST-CSN(1),SQRT((CST-CSR)/0.125663706D0)
      ELSE
        PRINT 120,EN,CST,CSR,CST-CSN(1)
        WRITE(21,120)EN,CST,CSR,CST-CSN(1)
      ENDIF
C RCN
C     WRITE(25,33)EN
      GO TO 103


  102 PRINT 104,EN,CST,CSR,CST-CSN(1)
      WRITE(21,104)EN,CST,CSR,CST-CSN(1)



C     WRITE(25,34)EN
  103 CONTINUE
C     WRITE(23,131)EN,CST,CSR,(CSN(K),K=1,NURRR),CSR+CSN(2)
C 131 FORMAT(1P24E14.5)
C     DO 31 M=1,MTET
C     PRINT 11,TET(M),(DISC(K,M),K=1,NMAX)
C     WRITE(25,11)TET(M),(DISC(K,M),K=1,NMAX)
C  31 CONTINUE
C  33 FORMAT(///1X,'NEUTRON ENERGY =',F10.6)
C  34 FORMAT(///1X,'PROTON  ENERGY =',F10.6)

      cpar(-1)='-'
      cpar( 0)='0'
      cpar(+1)='+'

      PRINT 130,   (K,EL(k),0.5*JO(k),cpar(NPO(k)),CSN(K),K=1,NMAX)
      WRITE(21,130)(K,EL(k),0.5*JO(k),cpar(NPO(k)),CSN(K),K=1,NMAX)
C     PRINT 129,SF0,SF1,SF2
      WRITE(21,129)SF0,SF1,SF2
C RCN
C
C     CROSS SECTION FILES
C
      ZNEU=0.
      IF(ETA.NE.0.) ZNEU=1.
      WRITE (ctmp23,'(i3.3,i3.3,1h_,i3.3,i3.3,1h_,i9.9)')
     &       INT(ZNEU), INT(ANEU), INT(ZNUC), INT(AT), 
     &       INT(EN*1000000)

      open(unit=93,file=TRIM(ctmp23)//'.CS')
      open(unit=98,file=TRIM(ctmp23)//'.ICS')

      IF(ETA.EQ.0.) THEN
C       WRITE(93,'(10H<CROSS-S.>,F10.2,F10.5,F10.2,2I5)') 
        WRITE(93,1009) 
     *	  ANEU,EN,AT,NINT(0.5*JO(1)),3
	ELSE
C       WRITE(93,'(10H<CROSS-S.>,F10.2,F10.5,F10.2,2I5)') 
        WRITE(93,1009) 
     *	  ANEU,EN,AT,NINT(0.5*JO(1)),1
	ENDIF
C     WRITE(98,'(10H<INE.C.S.>,F10.2,F10.5,F10.2,2I5)') 
      WRITE(98,1010) 
     *      ANEU,EN,AT,NINT(0.5*JO(1)),NMAX-1

      IF(ETA.EQ.0.) THEN
C
C       TOTAL
C       WRITE(93,'(1X,E14.8)') CST*1000.
        WRITE(93,1012) CST*1000.d0
C
C       INELASTIC TO LEVELS
        DO K=2,NMAX
C         WRITE(98,'(1X,E14.8)') CSN(K)*1000.
          WRITE(98,1012) CSN(K)*1000.d0
        ENDDO
C
C       REACTION + INELASTIC TO LEVELS
C       WRITE(93,'(1X,E14.8)') (CST - CSN(1))*1000.
        WRITE(93,1012) (CST - CSN(1))*1000.d0
C
C       ELASTIC
C         WRITE(93,'(1X,E14.8)') CSN(1)*1000.
          WRITE(93,1012) CSN(1)*1000.d0

      ELSE
C
C       INELASTIC TO LEVELS
        DO K=2,NMAX
C         WRITE(98,'(1X,E14.8)') CSN(K)*1000.
          WRITE(98,1012) CSN(K)*1000.d0
        ENDDO
C
C       REACTION + INELASTIC TO LEVELS
C       WRITE(93,'(1X,E14.8)') (CST - CSN(1))*1000.
        WRITE(93,1012) (CST - CSN(1))*1000.d0

      ENDIF
	close(93)
	close(98)

      open(unit=96,file=TRIM(ctmp23)//'.LEG')
      open(unit=97,file=TRIM(ctmp23)//'.ANG')
c     IF(ETA.EQ.0.) WRITE(96,'(10H<LEGENDRE>,F10.2,F10.5,F10.2,2I5)') 
      IF(ETA.EQ.0.) WRITE(96,1000) 
     *  ANEU,EN,AT,NINT(0.5*JO(1)),NMAX
c     WRITE(97,'(10H<ANG.DIS.>,F10.2,F10.5,F10.2,2I5)')
      WRITE(97,1008)
     *  ANEU,EN,AT,NINT(0.5*JO(1)),NMAX
      DO K=1,NMAX
        IF(ETA.EQ.0.) 
     *    WRITE(96,'(2I5,'' COUPLED LEVEL, NUMBER OF VALUES'')') K, LKK
	  IF(NPO(K).eq.+1)
     *    WRITE(97,'(I5,F5.1,A1,I4,I5)') K,0.5*JO(K),'+',1,MTET
	  IF(NPO(K).eq.-1)
     *    WRITE(97,'(I5,F5.1,A1,I4,I5)') K,0.5*JO(K),'-',1,MTET
        IF(ETA.EQ.0.) THEN
          DO L=1,LKK
            WRITE(96,'(2I5,1P,D20.10)') K,L-1,COEF(K,L)
          ENDDO
        ENDIF
        DO M=1,MTET
c         WRITE(97,1038) 0,TET(M),DISC(K,M)*1000.d0,'CROSS-SECTION   '
          WRITE(97,1038)   TET(M),DISC(K,M)*1000.d0,'CROSS-SECTION   '
        ENDDO
      ENDDO
	close(96)
	close(97)
   12 FORMAT(/1X,'NEUTRON ENERGY =',F10.6/1X,'TOTAL  CR-SECT.=',F10.6/
     *1X,'REACTION CR-SECT. =',F10.6/
     *1X,'REACTION CR-SECT. incl. coupled levels =',F10.6/
     *1X,'SCATTERING RADIUS =',F10.6)
  120 FORMAT(/1X,'NEUTRON ENERGY =',F10.6/1X,'TOTAL  CR-SECT.=',F10.6/
     *1X,'REACTION CR-SECT. =',F10.6/
     *1X,'REACTION CR-SECT. incl. coupled levels =',F10.6)
C RCN
  104 FORMAT(/1X,'PROTON  ENERGY =',F10.6/1X,'TOTAL  CR-SECT.=',F10.6/
     *1X,'REACTION CR-SECT. =',F10.6/
     *1X,'REACTION CR-SECT. incl. coupled levels =',F10.6)
C 130 FORMAT(/3X,'Nlev',17X,'CR-SECT. OF LEVEL EXCITATION '
C    */(1X,I5,25X,F10.6))
  130 FORMAT(
     */2x,'Nlev',4X,'Elev',3x,'Jpi',9x,'CR-SECT(Nlev)'
     */(2X,I2,3X,F7.4,2x,F3.1,A1,10X,F10.6))

  129 FORMAT(/30X,'STRENGTH  FUNCTIONS'
     */1X,'SF0=',E15.7,8X,'SF1=',E15.7,8X,'SF2=',E15.7)
	NUR=NURRR
	CALL THORA(21)
    4 CONTINUE
      RETURN
 1000 FORMAT ('<LEGENDRE>',F10.2,1P,D20.8,0P,F10.2,2I5)                 LCSP-307
 1008 FORMAT ('<ANG.DIS.>',F10.2,1P,D20.8,0P,F10.2,2I5)                 RESU-603
C1038 FORMAT (I3,1P,2D12.5,5X,4A4,A2)                                   RESU-648
 1038 FORMAT (1D11.5,D12.5,8X,A16)                                   
 1009 FORMAT ('<CROSS-S.>',F10.2,1P,D20.8,0P,F10.2,2I5)                 RESU-604
 1010 FORMAT ('<INE.C.S.>',F10.2,1P,D20.8,0P,F10.2,2I5)                 RESU-605
 1012 FORMAT (1P,D12.5)                                                 RESU-607
      END
C     *******************************************************
      SUBROUTINE DATET
C     *******************************************************
      IMPLICIT REAL*8(A-H,O-Z)
      CHARACTER*4 ITEXT,IMOD,IPOT,MPOT,IFOR1,IFOR2,
     *IFOR3,ISMOD,IFOR4,IHMOD,IFOR5      
      DIMENSION ITEXT(3),IMOD(7),IPOT(7),MPOT(2),IFOR1(2),IFOR2(9),
     *IFOR3(3),ISMOD(2),IFOR4(5),IHMOD(3),IFOR5(4)
      COMMON/CSB/CST,CSR,NST
      COMMON/EXPER/STE(50),SRE(50),DST(50),DSR(50),NT(50),NR(50)
     */EXPE1/SNE(50,5),DSN(50,5),NGD(50),NGN(50),NIN(50,5),NFN(50,5)
     */EXPE2/DISG(150),TED(50,5,150),SNGD(50,5,150),
     *DSD(50,5,150),NPJ(64),MTD(50,5),NID(50,5),NFD(50,5)
     */EXPE3/SE1(50),SE2(50),DS1(50),DS2(50),NSF1(50),NSF2(50)
      COMMON/OPT/X(25),FU,GR(25),X1(25),X2(25),EP(25),EPSGR(25),NV
      COMMON/OPB/C,GRR(25),FM,EPS1,NRL
     */NU/NUI,NUF
      COMMON/POTB/WNK(20),WN(20),VR,WC,WD
     */ENA/EN,EL(20),BET(10),NUR,NMAX,NPD,LAS
     */POT1/VR3,VR2,VR1,VR0,WC1,WC0,WD1,WD0,VS,AC0,AR0,AW0,AD0,AS0
     */POT2/AR1,AC1,AW1,AD1,AS1
     */POT3/BNDC,WDA1,WCA1,CCOUL,CISO,WCISO,WS0,WS1
     */POTD/ALAVR,VRLA,WCBW,WCWID,WDBW,WDWID,ALAWD,EFERMN,EFERMP,ALASO
     *,PDIS,WSBW,WSWID,RRBWC,RRWID,RZBWC,RZWID
      COMMON/RAD/RR,RC,RD,RW,RS,AR,AC,AW,AD,AS,ALF,AT,ANEU,RZ,ZNUC,ASP
     *,AZ
      COMMON/MENU/MEJOB,MEPOT,MEHAM,MECHA,MEPRI,MESOL,MESHA,MESHO,MEHAO
     *,MEAPP,MEVOL,MEREL,MECUL,MERZZ,MERRR,MEDIS,MERIP
     */SHEMM/ES(20),JJ(20),NTU(20),NNB(20),NNG(20),NNO(20),
     *NPI(20)
     */SHEM1/HW,AMG0,AMB0,GAM0,BET0,BET4,GAMDE,GSHAPE
     */INRM/AMO,BMO,CMO,BB42,GAMG,DELG
     */SHAMO/BET3,ETO,AMUO,HWO,BB32,DPAR
      COMMON/QNB/JO(20),NPO(20),KO(20),NCA(20)
     */NCLMA/LLMA,NCMA,NSMA,KODMA
     */ENB/EE(50),MCHAE(50)
     */DISPE/VD,VRDC,EA,WDISO
	COMMON/DISPE2/VRD,WDSHI,WDWID2,ALFNEW
      DATA ITEXT,IMOD/4HHAMI,4HLTON,4HIAN ,4H RV ,4H VM ,4HDCHM,
     *4H FDM,4H5PA0,4H 5PM,4HCLGB/,
     *IPOT,MPOT/4HPOTE,4HNTIA,4HL EX,4HPAND,4HED B,4HY    ,
     *4H    ,4HYL0 ,4HBET0/,IFOR1,IFOR2,IFOR3/4HWITH,4H AC.,
     *4HAXIA,4HL GE,4HXADE,4HCAPO,4HLE D,4HEFOR,4HMATI,4HONS ,
     *4H    ,4H    ,4H|NON,4H NON/,
     *ISMOD,IFOR4,IHMOD,IFOR5/4H    ,4H NON,4HAXIA,4HL OC,4HTUPO,
     *4HLE  ,4H    ,4HRID.,4HSOFT,4HSOFT,4H    ,4HDEFO,4HRMAT,4HIONS /
      IF(MEHAM.GT.1) READ(20,2)HW,AMB0,AMG0,GAM0,BET0,BET4,
     *BB42,GAMG,DELG,
     *BET3,ETO,AMUO,HWO,BB32,GAMDE,DPAR,GSHAPE
C=======================================================================
C     LLMA-MAXIMUM MOMENTUM L
C     NCMA-MAXIMUM NUMBER OF COUPLED EQ.
C     NSMA-NUMBER OF SYSTEMS WITH  J AND PARITY
C     KODMA-SWITCH: 0-COUPLED STATES ARE ORDERED ONE BY ONE, NO MORE
C                   THAN NCMA
C                 1:-COUPLED STATES ARE ORDERED BY GROWING MOMENTUM L
C                    NO MORE THAN NCMA
C=======================================================================
           READ(20,211)NUR,NST,NPD,LAS,MTET,LLMA,NCMA,NSMA,KODMA
  211 FORMAT(20I3)
      IF(LLMA.EQ.0.OR.LLMA.GT.89) LLMA=89
      IF(NCMA.EQ.0.OR.NCMA.GT.200) NCMA=200
      IF(NSMA.EQ.0.OR.NSMA.GT.180) NSMA=180
            READ(20,2)(EE(I),I=1,NST)
           READ(20,1)(MCHAE(I),I=1,NST)
      IF(MEHAM.GT.1) GO TO 36
           READ(20,3)(EL(I),JO(I),NPO(I),KO(I),NCA(I),I=1,NUR)
	      GO TO 37
   36      READ(20,43)(EL(I),JO(I),NPO(I), NTU(I),NNB(I),
     *                 NNG(I),NNO(I),NCA(I),I=1,NUR)
C====================================================================
C     VR=VR0+VR1*EN+VR2*EN*EN      AR=AR0+AR1*EN
C===================================================================
C                WD=WD0+WD1*EN     AD=AD0+AD1*EN
C     EN<BNDC    WC=WC0+WC1*EN     AC=AC0+AC1*EN
C ====================================================================
C                WD=WD0+WD1*BNDC+(EN-BNDC)*WDA1
C     EN>BNDC    WC=WC0+WC1*BNDC+(EN-BNDC)*WCA1
C                AD=AD0+AD1+BNDC
C====================================================================
   37      READ(20,2)ANEU,ASP,AT,ZNUC,EFERMN,EFERMP
           READ(20,2)VR0,VR1,VR2,VR3,VRLA,ALAVR,
     *               WD0,WD1,WDA1,WDBW,WDWID,ALAWD,
     *               WC0,WC1,WCA1,WCBW,WCWID,BNDC,
     *               VS,ALASO,WS0,WS1,WSBW,WSWID,
     *               RR,RRBWC,RRWID,PDIS,AR0,AR1,
     *               RD,AD0,AD1,RC,AC0,AC1,
     *               RW,AW0,AW1,RS,AS0,AS1,
     *               RZ,RZBWC,RZWID,AZ,CCOUL,ALF,
     *               CISO,WCISO,WDISO,EA,WDSHI,WDWID2,
     *               ALFNEW,VRD
C     PRINT 500,ASP,AT
      WRITE(21,500)ASP,AT
  500 FORMAT( 7X,'INTERACTION OF PARTICLE HAVING SPIN =',F5.2/19X,
     *'WITH NUCLEI',2X,'A=',F12.7/20X,'COUPLED CHANNELS METHOD')
      MESHH=MESHA-1
      IF(MEREL.EQ.0) PRINT 134
      IF(MEREL.EQ.0) WRITE(21,134)
  134 FORMAT(22X,'NEWTON KINEMATICS')
      IF(MEREL.EQ.1) PRINT 135
      IF(MEREL.EQ.1) WRITE(21,135)
  135 FORMAT(5X,'RELATIVISTIC KINEMATICS AND POTENTIAL DEPENDENCE')
      IF(MEREL.EQ.2) PRINT 136
      IF(MEREL.EQ.2) WRITE(21,136)
  136 FORMAT(20X,'RELATIVISTIC KINEMATICS')
      IF(MEREL.EQ.3) PRINT 137
      IF(MEREL.EQ.3) WRITE(21,137)
  137 FORMAT(3X,'RELATIVISTIC KINEMATICS AND REAL POTENTIAL DEPENDENCE')
C
      IF(MEDIS.EQ.0) PRINT 184
      IF(MEDIS.EQ.0) WRITE(21,184)
  184 FORMAT(6X,'OPTICAL POTENTIAL WITHOUT DISPERSIVE RELATIONSHIPS')
      IF(MEDIS.GE.1) PRINT 185
      IF(MEDIS.GE.1) WRITE(21,185)
  185 FORMAT(6X,'OPTICAL POTENTIAL WITH THE DISPERSIVE RELATIONSHIPS')
C
      IF(MECUL.EQ.0) PRINT 154
      IF(MECUL.EQ.0) WRITE(21,154)
  154 FORMAT(5X,'COULOMB CORRECTION PROPORTIONAL REAL POTENTIAL DER-VE')
      IF(MECUL.EQ.1) PRINT 155
      IF(MECUL.EQ.1) WRITE(21,155)
  155 FORMAT(15X,' COULOMB CORRECTION IS CONSTANT')
      IF(MECUL.EQ.2) PRINT 156
      IF(MECUL.EQ.2) WRITE(21,156)
  156 FORMAT(/7X,' LANE CONSISTENT, EFFECTIVE PROTON ENERGY = E-CME,'/
     *13X,'BOTH FOR REAL AND IMAGINARY POTENTIALS'/)
      IF(MECUL.EQ.3) PRINT 157
      IF(MECUL.EQ.3) WRITE(21,157)
  157 FORMAT(/7X,' LANE CONSISTENT, EFFECTIVE PROTON ENERGY = E-CME,'/
     *20X,' FOR REAL POTENTIAL ONLY'/)
C
      IF(MERZZ.EQ.0) PRINT 164
      IF(MERZZ.EQ.0) WRITE(21,164)
  164 FORMAT(22X,'CHARGE RADIUS IS CONSTANT')
      IF(MERZZ.EQ.1) PRINT 165
      IF(MERZZ.EQ.1) WRITE(21,165)
  165 FORMAT(15X,' CHARGE RADIUS IS ENERGY DEPENDENT')

C
      IF(MERRR.EQ.0) PRINT 174
      IF(MERRR.EQ.0) WRITE(21,174)
  174 FORMAT(22X,'REAL RADIUS IS CONSTANT')
      IF(MERRR.EQ.1) PRINT 175
      IF(MERRR.EQ.1) WRITE(21,175)
  175 FORMAT(15X,' REAL RADIUS IS ENERGY DEPENDENT')
C
      IF(MESHA.GT.1) PRINT 51,IFOR1,IFOR3(MESHH),IFOR2
      IF(MESHA.GT.1) WRITE(21,51)IFOR1,IFOR3(MESHH),IFOR2
   51 FORMAT(10X,14A4)
      PRINT 50,ITEXT,IMOD(MEHAM),IPOT,MPOT(MEPOT)
      WRITE(21,50)ITEXT,IMOD(MEHAM),IPOT,MPOT(MEPOT)
   50 FORMAT(/10X,4A4,6X,8A4)
      MEHA1=MEHAO+1
      IF(MESHO.GT.0) PRINT 45, IFOR1,ISMOD(MESHO),IFOR4,IHMOD(MEHA1),
     *IFOR5
      IF(MESHO.GT.0) WRITE(21,45) IFOR1,ISMOD(MESHO),IFOR4,IHMOD(MEHAO),
     *IFOR5
   45 FORMAT(10X,13A4)
      PRINT 100,NUR,NPD,LAS
      WRITE(21,100)NUR,NPD,LAS
      IF(MEHAM.GT.1) GO TO 38
      PRINT 501,(I,EL(I),JO(I),NPO(I),KO(I),NCA(I),I=1,NUR)
      WRITE(21,501)(I,EL(I),JO(I),NPO(I),KO(I),NCA(I),I=1,NUR)
      GO TO 39
   38 PRINT 40,(I,EL(I),JO(I),NTU(I),NNB(I),NNG(I),NNO(I),NPO(I),NCA(I)
     *,I=1,NUR)
      WRITE(21,40)(I,EL(I),JO(I),NTU(I),NNB(I),NNG(I),NNO(I),NPO(I),
     *NCA(I),I=1,NUR)
      PRINT 41,HW,AMB0,AMG0,GAM0,BET0,BET4,BB42,GAMG,DELG
     *,BET3,ETO,AMUO,HWO,BB32,GAMDE,DPAR,GSHAPE
      WRITE(21,41)HW,AMB0,AMG0,GAM0,BET0,BET4,BB42,GAMG,DELG
     *,BET3,ETO,AMUO,HWO,BB32,GAMDE,DPAR,GSHAPE
   41 FORMAT(/22X,'PARAMETERS OF HAMILTONIAN '/5X,'HW=',F12.5,3X,
     *'AMB0=',F 8.5,3X,'AMG0=',F 8.5,3X,'GAM0=',F 8.5,3X,
     *'BET0=',F 8.5/
     *5X,'BET4=',F10.5,3X,'BB42=',F8.5,3X,'GAMG=',F8.5,3X,
     *'DELG=',F8.5/
     *5X,'BET3=',F10.5,3X,'ETO=',F9.5,3X,'AMUO=',F8.5,3X,
     *'HWO=',F8.5,4X,'BB32=',F8.5,3X/
     *5X,'GAMDE=',F9.5,3X,'DPAR=',F8.4,3X,'GSHAPE=',F8.5//)
      IF(MEHAM.GT.2) CALL PREQU
   40 FORMAT(//16X,'ENERGY ',4X,'LEVEL''S SPIN*2',4X,'NTU  ',
     *6X,'NNB  ', 6X,'NNG', 9X,'NNO',9X,'NPO',9X,'NCA'//
     *(1X,I4,8X,E14.7,7I11))
  501 FORMAT(//16X,'ENERGY',5X,'LEVEL''S SPIN*2',3X,'PARITY',10X,
     *'BAND*2',10X,'NCA'/
     */(1X,I4,6X,E12.5,I11,I14,I15,I15))
 100  FORMAT( /15X,'NUMBER OF COUPLED LEVELS=',I3,5X,'NPD =',I2/14X,
     *'NUMBER OF TERMS IN POTENTIAL EXPANSION= ',2X,I2)
  39  PRINT 90
      WRITE (21,90)
  90  FORMAT(/15X,'POTENTIAL   PARAMETERS   V(R)')
      PRINT 91,VR0,VR1,VR2,RR,AR0,AR1,WD0,WD1,VR3,RD,AD0,AD1,
     *WC0,WC1,RC,AC0,AC1,RW,AW0,AW1,VS,RS,AS0,AS1,ALF,ANEU,RZ,
     *AZ,BNDC,WDA1,WCA1,CCOUL,CISO,WCISO,WS0,WS1,VRLA,ALAVR,
     *WCBW,WCWID,WDBW,WDWID,ALAWD,EFERMN,EFERMP,ALASO,PDIS,
     *WSBW,WDWID,RRBWC,RRWID,RZBWC,RZWID,EA,WDISO,WDSHI,WDWID2,
     *ALFNEW,VRD
      WRITE(21,91)VR0,VR1,VR2,RR,AR0,AR1,WD0,WD1,VR3,RD,AD0,AD1,
     *WC0,WC1,RC,AC0,AC1,RW,AW0,AW1,VS,RS,AS0,AS1,ALF,ANEU,RZ,
     *AZ,BNDC,WDA1,WCA1,CCOUL,CISO,WCISO,WS0,WS1,VRLA,ALAVR,
     *WCBW,WCWID,WDBW,WDWID,ALAWD,EFERMN,EFERMP,ALASO,PDIS,
     *WSBW,WSWID,RRBWC,RRWID,RZBWC,RZWID,EA,WDISO,WDSHI,WDWID2,
     *ALFNEW,VRD
   91 FORMAT(/1X,'VR0=',F7.3,5X,'VR1=',F7.4,5X,'VR2=',F10.7,2X,
     *'RR=',F7.4,5X,'AR0=',F7.4,5X,'AR1=',F7.4
     */1X,'WD0=',F7.4,5X,'WD1=',F7.4,5X,'VR3=',F10.7,2X,
     *'RD=',F7.4,5X,'AD0=',F7.4,5X,'AD1=',F7.4
     */1X,'WC0=',F7.4,5X,'WC1=',F7.4,21X,
     *'RC=',F7.4,5X,'AC0=',F7.4,5X,'AC1=',F7.4
     */49X,'RW=',F7.4,5X,'AW0=',F7.4,5X,'AW1=',F7.4
     */1X,'VSO=',F7.4,37X,'RS=',F7.4,5X,'AS0=',F7.4,5X,'AS1=',F7.4
     */1X,'ALF=',F7.4,5X,'ANEU=',F7.4,20X,'RZ=',F7.4,5X,'AZ0=',F7.4,
     */1X,'BNDC=',F7.2,4X,'WDA1=',F7.4,4X,'WCA1=',F7.4,4X,'CCOUL=',F7.4
     *,5X,'CISO=',F7.3,4X,'WCISO=',F7.3
     */1X,'WS0=',F7.4,5X,'WS1=',F7.4,5X,'VRLA=',F7.4
     *,4X,'ALAVR=',F8.5,4X,'WCBW=',F7.4,4X,'WCWID=',F7.4,/1X,'WDBW='
     *,F7.4,4X,'WDWID=',F7.4,3X,'ALAWD=',F7.4
     *,3X,'EFERMN=',F7.3,4X,'EFERMP=',F7.3,2X,'ALASO=',F7.4,
     */1X,'PDIS=',F7.4,4X,'WSBW=',F7.4,4X,'WSWID=',F7.2,3X,'RRBWC=',F7.4
     *,5X,'RRWID=',F6.2,4X,'RZBWC=',F7.4,
     */1X,'RZWID=',F7.4,3X,'EA=',F9.5,4X,'WDISO=',F7.3,
     *3X,'WDSHI=',F7.2,5X,'WDWID2=',F7.2,2X,'ALFNEW=',F6.3,
     */1X,'VRD=',F8.3)
      PRINT 133,ZNUC
      WRITE(21,133)ZNUC
 133  FORMAT(/30X,'NUCLEUS CHARGE = ',F7.4/)
           IF(MEHAM.GT.1) GO TO 8
           IF(NPD.EQ.0) GO TO 8
           READ(20,2)(BET(I),I=2,NPD,2)
      PRINT 96,(I,BET(I),I=2,NPD,2)
      WRITE(21,96)(I,BET(I),I=2,NPD,2)
  96  FORMAT(6X,'NPD',5X,'DEFORMATION PARAMETER VALUES'/
     *(6X,I2,13X,F7.4))
    1 FORMAT(36I2)
    2 FORMAT(6E12.7)
    3 FORMAT(E12.7,4I2)
   43 FORMAT(E12.7,7I2)
    6 FORMAT(2E12.7,2I2)
    8 ASQ=AT**(1./3.)
      RR=RR*ASQ
      RC=RC*ASQ
      RD=RD*ASQ
      RW=RW*ASQ
      RS=RS*ASQ
      RZ=RZ*ASQ
            READ(20,112)(NPJ(I),I=1,64)
	PRINT 99
	WRITE (21,99)
   99 FORMAT(/10X,'PARAMETERS ADJUSTED'/)
      PRINT 111,(NPJ(I),I=1,64)
      WRITE(21,111)(NPJ(I),I=1,64)
  111 FORMAT(1X,6I2)
  112 FORMAT(6I2)
      DO 4 I=1,NST
      PRINT 114, EE(I)
      WRITE (21,114) EE(I)
  114 FORMAT(//6X,'EXPERIMENTAL DATA FOR ENERGY=',F10.6,1X,'MeV'/)
           READ(20,1)NT(I),NR(I),NGN(I),NGD(I),NSF1(I),NSF2(I)
      PRINT111,NT(I),NR(I),NGN(I),NGD(I),NSF1(I),NSF2(I)
      WRITE(21,111)NT(I),NR(I),NGN(I),NGD(I),NSF1(I),NSF2(I)
           READ(20,2)STE(I),DST(I),SRE(I),DSR(I)
      PRINT222,STE(I),DST(I),SRE(I),DSR(I)
      WRITE(21,222)STE(I),DST(I),SRE(I),DSR(I)
  222 FORMAT(1X,6E12.7)
      IF(NSF1(I).EQ.0.AND.NSF2(I).EQ.0) GO TO 9
           READ(20,2)SE1(I),DS1(I),SE2(I),DS2(I)
      PRINT222,SE1(I),DS1(I),SE2(I),DS2(I)
      WRITE(21,222)SE1(I),DS1(I),SE2(I),DS2(I)
    9 NG=NGN(I)
      IF(NG.EQ.0) GO TO 5
           READ(20,6)(SNE(I,K),DSN(I,K),NIN(I,K),NFN(I,K),K=1,NG)
      PRINT666,(SNE(I,K),DSN(I,K),NIN(I,K),NFN(I,K),K=1,NG)
      WRITE(21,666)(SNE(I,K),DSN(I,K),NIN(I,K),NFN(I,K),K=1,NG)
  666 FORMAT(1X,2E12.7,2I3)
    5 NG=NGD(I)
      IF(NG.EQ.0) GO TO 4
           READ(20,1)(NID(I,K),NFD(I,K),MTD(I,K),K=1,NG)
      PRINT111,(NID(I,K),NFD(I,K),MTD(I,K),K=1,NG)
      WRITE(21,111)(NID(I,K),NFD(I,K),MTD(I,K),K=1,NG)
      DO 7 K=1,NG
      M=MTD(I,K)
           READ(20,2)(TED(I,K,L),SNGD(I,K,L),DSD(I,K,L),L=1,M)
      PRINT222,(TED(I,K,L),SNGD(I,K,L),DSD(I,K,L),L=1,M)
      WRITE(21,222)(TED(I,K,L),SNGD(I,K,L),DSD(I,K,L),L=1,M)
    7 CONTINUE
    4 CONTINUE
      KEV=0
      IF(NPJ(1).NE.1) GO TO 11
      KEV=KEV+1
      X(KEV)=VR0
   11 IF(NPJ(2).NE.1) GO TO 12
      KEV=KEV+1
      X(KEV)=VR1
   12 IF(NPJ(3).NE.1) GO TO 13
      KEV=KEV+1
      X(KEV)=VR2
   13 IF(NPJ(4).NE.1) GO TO 14
      KEV=KEV+1
      X(KEV)=VR3
   14 IF(NPJ(5).NE.1) GO TO 15
      KEV=KEV+1
      X(KEV)=VRLA
   15 IF(NPJ(6).NE.1) GO TO 16
      KEV=KEV+1
      X(KEV)=ALAVR
   16 IF(NPJ(7).NE.1) GO TO 17
      KEV=KEV+1
      X(KEV)=WD0
   17 IF(NPJ(8).NE.1) GO TO 18
      KEV=KEV+1
      X(KEV)=WD1
   18 IF(NPJ(9).NE.1) GO TO 19
      KEV=KEV+1
      X(KEV)=WDA1
   19 IF(NPJ(10).NE.1) GO TO 20
      KEV=KEV+1
      X(KEV)=WDBW
   20 IF(NPJ(11).NE.1) GO TO 21
      KEV=KEV+1
      X(KEV)=WDWID
   21 IF(NPJ(12).NE.1) GO TO 22
      KEV=KEV+1
      X(KEV)=ALAWD
   22 IF(NPJ(13).NE.1) GO TO 23
      KEV=KEV+1
      X(KEV)=WC0
   23 IF(NPJ(14).NE.1) GO TO 24
      KEV=KEV+1
      X(KEV)=WC1
   24 IF(NPJ(15).NE.1) GO TO 25
      KEV=KEV+1
      X(KEV)=WCA1
   25 IF(NPJ(16).NE.1) GO TO 26
      KEV=KEV+1
      X(KEV)=WCBW
   26 IF(NPJ(17).NE.1) GO TO 27
      KEV=KEV+1
      X(KEV)=WCWID
   27 IF(NPJ(18).NE.1) GO TO 28
      KEV=KEV+1
      X(KEV)=BNDC
   28 IF(NPJ(19).NE.1) GO TO 29
      KEV=KEV+1
      X(KEV)=VS
   29 IF(NPJ(20).NE.1) GO TO 30
      KEV=KEV+1
      X(KEV)=ALASO
   30 IF(NPJ(21).NE.1) GO TO 31
      KEV=KEV+1
      X(KEV)=WS0
   31 IF(NPJ(22).NE.1) GO TO 32
      KEV=KEV+1
      X(KEV)=WS1
   32 IF(NPJ(23).NE.1) GO TO 33
      KEV=KEV+1
      X(KEV)=WSBW
   33 IF(NPJ(24).NE.1) GO TO 53
      KEV=KEV+1
      X(KEV)=WSWID
   53 IF(NPJ(25).NE.1) GO TO 54
      KEV=KEV+1
      X(KEV)=RR
   54 IF(NPJ(26).NE.1) GO TO 55
      KEV=KEV+1
      X(KEV)=RRBWC
   55 IF(NPJ(27).NE.1) GO TO 56
      KEV=KEV+1
      X(KEV)=RRWID
   56 IF(NPJ(28).NE.1) GO TO 57
      KEV=KEV+1
      X(KEV)=PDIS
   57 IF(NPJ(29).NE.1) GO TO 58
      KEV=KEV+1
      X(KEV)=AR0
   58 IF(NPJ(30).NE.1) GO TO 59
      KEV=KEV+1
      X(KEV)=AR1
   59 IF(NPJ(31).NE.1) GO TO 60
      KEV=KEV+1
      X(KEV)=RD
   60 IF(NPJ(32).NE.1) GO TO 61
      KEV=KEV+1
      X(KEV)=AD0
   61 IF(NPJ(33).NE.1) GO TO 62
      KEV=KEV+1
      X(KEV)=AD1
   62 IF(NPJ(34).NE.1) GO TO 63
      KEV=KEV+1
      X(KEV)=RC
   63 IF(NPJ(35).NE.1) GO TO 64
      KEV=KEV+1
      X(KEV)=AC0
   64 IF(NPJ(36).NE.1) GO TO 65
      KEV=KEV+1
      X(KEV)=AC1
   65 IF(NPJ(37).NE.1) GO TO 66
      KEV=KEV+1
      X(KEV)=RW
   66 IF(NPJ(38).NE.1) GO TO 67
      KEV=KEV+1
      X(KEV)=AW0
   67 IF(NPJ(39).NE.1) GO TO 68
      KEV=KEV+1
      X(KEV)=AW1
   68 IF(NPJ(40).NE.1) GO TO 69
      KEV=KEV+1
      X(KEV)=RS
   69 IF(NPJ(41).NE.1) GO TO 70
      KEV=KEV+1
      X(KEV)=AS0
   70 IF(NPJ(42).NE.1) GO TO 71
      KEV=KEV+1
      X(KEV)=AS1
   71 IF(NPJ(43).NE.1) GO TO 72
      KEV=KEV+1
      X(KEV)=RZ
   72 IF(NPJ(44).NE.1) GO TO 73
      KEV=KEV+1
      X(KEV)=RZBWC
   73 IF(NPJ(45).NE.1) GO TO 74
      KEV=KEV+1
      X(KEV)=RZWID
   74 IF(NPJ(46).NE.1) GO TO 75
      KEV=KEV+1
      X(KEV)=AZ
   75 IF(NPJ(47).NE.1) GO TO 76
      KEV=KEV+1
      X(KEV)=CCOUL
   76 IF(NPJ(48).NE.1) GO TO 77
      KEV=KEV+1
      X(KEV)=ALF
   77 IF(NPJ(49).NE.1) GO TO 78
      KEV=KEV+1
      X(KEV)=CISO
   78 IF(NPJ(50).NE.1) GO TO 79
      KEV=KEV+1
      X(KEV)=WCISO
   79 IF(NPJ(51).NE.1) GO TO 80
      KEV=KEV+1
      X(KEV)=WDISO
   80 IF(NPJ(52).NE.1) GO TO 81
      KEV=KEV+1
      X(KEV)=EA
   81 IF(NPJ(53).NE.1) GO TO 82
      KEV=KEV+1
      X(KEV)=WDSHI
   82 IF(NPJ(54).NE.1) GO TO 83
      KEV=KEV+1
      X(KEV)=WDWID2
   83 IF(NPJ(55).NE.1) GO TO 84
      KEV=KEV+1
      X(KEV)=ALFNEW
   84 IF(NPJ(56).NE.1) GO TO 85
      KEV=KEV+1
      X(KEV)=VRD
   85 IF(NPJ(57).NE.1) GO TO 86
      KEV=KEV+1
      X(KEV)=BET0
   86 IF(NPJ(58).NE.1) GO TO 87
      KEV=KEV+1
      X(KEV)=BET3
   87 IF(NPJ(59).NE.1) GO TO 88
      KEV=KEV+1
      X(KEV)=BET4
   88 IF(NPJ(60).NE.1) GO TO 899
      KEV=KEV+1
      X(KEV)=BET(2)
  899 IF(NPJ(61).NE.1) GO TO 901
      KEV=KEV+1
      X(KEV)=BET(4)
  901 IF(NPJ(62).NE.1) GO TO 910
      KEV=KEV+1
      X(KEV)=BET(6)
  910 IF(NPJ(63).NE.1) GO TO 92
      KEV=KEV+1
      X(KEV)=AMUO
   92 IF(NPJ(64).NE.1) GO TO 93
      KEV=KEV+1
      X(KEV)=AMG0
   93 NV=KEV
           READ(20,2)(EP(K),K=1,NV)
      PRINT 222,(EP(K),K=1,NV)
      WRITE(21,222)(EP(K),K=1,NV)
           READ(20,2)FU
      CALL SEART
      RETURN
      END
C     *******************************************************
      SUBROUTINE SEART
C     *******************************************************
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/OPT/X(25),FU,GR(25),X1(25),X2(25),EP(25),EPSGR(25),NV
      COMMON/OPB/C,GRR(25),FM,EPS1,NRL
      NCC=1
      NI=0
      DO 1 I=1,NV
      X1(I)=X(I)
    1 X2(I)=X(I)+EP(I)*2.
      IF(FU.EQ.0.) CALL XISQT
      FM=FU
   10 PRINT101,NI,FM
      WRITE(21,101)NI,FM
      PRINT102,(I,X(I),I=1,NV)
      WRITE(21,102)(I,X(I),I=1,NV)
  101 FORMAT(1X,'NI=',I5,14X,'FM=',D30.15)
  102 FORMAT(1X,5(3X,'NV',13X,'X', 6X)/(1X,5(I5,D30.15)))
    6 NXX=0
      N1C=0
      FU=FM
      DO 21 I=1,NV
      X(I)=X1(I)
      IF(DABS(X2(I)-X1(I))-DABS(EP(I)).LE.0.) NXX=NXX+1
   21 CONTINUE
      IF(NXX.EQ.NV)GO TO 9
      CALL DEFGT
      LL=0
      NNK=0
      DO 13 I=1,NV
   13 X2(I)=X1(I)
      NI=NI+1
      C=0.
      DO 7 I=1,NV
      GRR(I)=GR(I)
    7 C=C+GRR(I)**2
      EPS1=FM/C
    8 NX=0
      DO 30 I=1,NV
      EPSGR(I)=EPS1*GRR(I)
      IF(DABS(EPSGR(I)).GT.0.3*DABS(X1(I))) GO TO 15
      IF(DABS(EPSGR(I))-DABS(EP(I)).LE.0.) NX=NX+1
   30 CONTINUE
      IF(NNK.EQ.0) NX=0
   17 DO 2 I=1,NV
      HS=EPS1*GRR(I)
      HS1=X1(I)
      X(I)=HS1-HS
    2 CONTINUE
      CALL XISQT
      IF(FU-FM) 3,4,4
    3 DO 5 I=1,NV
    5 X1(I)=X(I)
      LL=LL+1
      IF(LL.GT.3)EPS1=EPS1*5.
      N1C=1
      NCC=0
      FM=FU
      PRINT101,NI,FM
      WRITE(21,101)NI,FM
      PRINT102,(I,X(I),I=1,NV)
      WRITE(21,102)(I,X(I),I=1,NV)
      GO TO 17
    4 IF(NX.EQ.NV) GO TO 6
      IF(N1C.EQ.1)NCC=NCC+1
      IF(NCC-2)15,14,14
   14 EPS1=-EPS1
      NCC=0
      GO TO 17
   15 EPS1=EPS1/5.
      NNK=1
      LL=0
      NCC=1
      GO TO 8
    9 CONTINUE
      RETURN
      END
C     *******************************************************
      SUBROUTINE DEFGT
C     *******************************************************
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/OPT/X(25),FU,GR(25),X1(25),X2(25),EP(25),EPSGR(25),NV
      COMMON/OPB/C,GRR(25),FM,EPS1,NRL
      F1=FU
      DO 1 I=1,NV
      DL=EP(I)
      X(I)=X(I)+DL
      CALL XISQT
      GR(I)=(FU-F1)/DL
      X(I)=X(I)-DL
    1 CONTINUE
      RETURN
      END
C     *******************************************************
      SUBROUTINE XISQT
C     *******************************************************
      IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION XPRN(25)

	  CHARACTER*1 cpar(-1:1)

      COMMON/CSB/CST,CSR,NST
     */CS1/CSN(20),CM(20)
      COMMON/EXPER/STE(50),SRE(50),DST(50),DSR(50),NT(50),NR(50)
      COMMON/MENU/MEJOB,MEPOT,MEHAM,MECHA,MEPRI,MESOL,MESHA,MESHO,MEHAO
     *,MEAPP,MEVOL,MEREL,MECUL,MERZZ,MERRR,MEDIS,MERIP
     */EXPE1/SNE(50,5),DSN(50,5),NGD(50),NGN(50),NIN(50,5),NFN(50,5)
     */EXPE2/DISG(150),TED(50,5,150),SNGD(50,5,150),
     *DSD(50,5,150),NPJ(64),MTD(50,5),NID(50,5),NFD(50,5)
     */EXPE3/SE1(50),SE2(50),DS1(50),DS2(50),NSF1(50),NSF2(50)
      COMMON/OPT/X(25),FU,GR(25),X1(25),X2(25),EP(25),EPSGR(25),NV
      COMMON/DISK/TET(150),MTET
      COMMON/DISCAN/DISC(20,150),PL(180,150),COEF(20,180),LKK
     */NU/NUI,NUF
     */SF12/SF0,SF1,SF2
      COMMON/POTB/WNK(20),WN(20),VR,WC,WD
     */ENA/EN,EL(20),BET(10),NUR,NMAX,NPD,LAS
     */POT1/VR3,VR2,VR1,VR0,WC1,WC0,WD1,WD0,VS,AC0,AR0,AW0,AD0,AS0
     */POT2/AR1,AC1,AW1,AD1,AS1
     */POT3/BNDC,WDA1,WCA1,CCOUL,CISO,WCISO,WS0,WS1
     */POTD/ALAVR,VRLA,WCBW,WCWID,WDBW,WDWID,ALAWD,EFERMN,EFERMP,ALASO
     *,PDIS,WSBW,WSWID,RRBWC,RRWID,RZBWC,RZWID
      COMMON/RAD/RR,RC,RD,RW,RS,AR,AC,AW,AD,AS,ALF,AT,ANEU,RZ,ZNUC,ASP
     *,AZ
      COMMON/QNB/JO(20),NPO(20),KO(20),NCA(20)
      COMMON/JNN/CSS,INCC,NCLL,NSS,NJ,INCR
     */QNSB/INC(180),INR(180),JS(180)
     */ENB/EE(50),MCHAE(50)
     */SHEM1/HW,AMG0,AMB0,GAM0,BET0,BET4,GAMDE,GSHAPE
     */INRM/AMO,BMO,CMO,BB42,GAMG,DELG
     */SHAMO/BET3,ETO,AMUO,HWO,BB32,DPAR
     */NCLMA/LLMA,NCMA,NSMA,KODMA
     */DISPE/VD,VRDC,EA,WDISO
	COMMON/DISPE2/VRD,WDSHI,WDWID2,ALFNEW
	APRN=1.D0/AT**(1.D0/3.D0) 
      KEV=0
      IF(NPJ(1).NE.1) GO TO 11
      KEV=KEV+1
      VR0=X(KEV)
	XPRN(KEV)=X(KEV)
   11 IF(NPJ(2).NE.1) GO TO 12
      KEV=KEV+1
      VR1=X(KEV)
	XPRN(KEV)=X(KEV)
   12 IF(NPJ(3).NE.1) GO TO 13
      KEV=KEV+1
      VR2=X(KEV)
	XPRN(KEV)=X(KEV)
   13 IF(NPJ(4).NE.1) GO TO 14
      KEV=KEV+1
      VR3=X(KEV)
	XPRN(KEV)=X(KEV)
   14 IF(NPJ(5).NE.1) GO TO 15
      KEV=KEV+1
      VRLA=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   15 IF(NPJ(6).NE.1) GO TO 16
      KEV=KEV+1
      ALAVR=X(KEV)
	XPRN(KEV)=X(KEV)
   16 IF(NPJ(7).NE.1) GO TO 17
      KEV=KEV+1
      WD0=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   17 IF(NPJ(8).NE.1) GO TO 18
      KEV=KEV+1
      WD1=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   18 IF(NPJ(9).NE.1) GO TO 19
      KEV=KEV+1
      WDA1=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   19 IF(NPJ(10).NE.1) GO TO 20
      KEV=KEV+1
      WDBW=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   20 IF(NPJ(11).NE.1) GO TO 21
      KEV=KEV+1
      WDWID=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   21 IF(NPJ(12).NE.1) GO TO 22
      KEV=KEV+1
      ALAWD=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   22 IF(NPJ(13).NE.1) GO TO 23
      KEV=KEV+1
      WC0=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   23 IF(NPJ(14).NE.1) GO TO 24
      KEV=KEV+1
      WC1=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   24 IF(NPJ(15).NE.1) GO TO 25
      KEV=KEV+1
      WCA1=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   25 IF(NPJ(16).NE.1) GO TO 26
      KEV=KEV+1
      WCBW=X(KEV)
	XPRN(KEV)=X(KEV)
   26 IF(NPJ(17).NE.1) GO TO 27
      KEV=KEV+1
      WCWID=X(KEV)
	XPRN(KEV)=X(KEV)
   27 IF(NPJ(18).NE.1) GO TO 28
      KEV=KEV+1
      BNDC=X(KEV)
	XPRN(KEV)=X(KEV)
   28 IF(NPJ(19).NE.1) GO TO 34
      KEV=KEV+1
      VS=X(KEV)
	XPRN(KEV)=X(KEV)
   34 IF(NPJ(20).NE.1) GO TO 35
      KEV=KEV+1
      ALASO=X(KEV)
	XPRN(KEV)=X(KEV)
   35 IF(NPJ(21).NE.1) GO TO 36
      KEV=KEV+1
      WS0=X(KEV)
	XPRN(KEV)=X(KEV)
   36 IF(NPJ(22).NE.1) GO TO 37
      KEV=KEV+1
      WS1=X(KEV)
	XPRN(KEV)=X(KEV)
   37 IF(NPJ(23).NE.1) GO TO 38
      KEV=KEV+1
      WSBW=X(KEV)
	XPRN(KEV)=X(KEV)
   38 IF(NPJ(24).NE.1) GO TO 52
      KEV=KEV+1
      WSWID=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   52 IF(NPJ(25).NE.1) GO TO 53
      KEV=KEV+1
      RR=DABS(X(KEV))
	XPRN(KEV)=X(KEV)*APRN
   53 IF(NPJ(26).NE.1) GO TO 54
      KEV=KEV+1
      RRBWC=X(KEV)
	XPRN(KEV)=X(KEV)
   54 IF(NPJ(27).NE.1) GO TO 55
      KEV=KEV+1
      RRWID=X(KEV)
	XPRN(KEV)=X(KEV)
   55 IF(NPJ(28).NE.1) GO TO 56
      KEV=KEV+1
      PDIS=X(KEV)
	XPRN(KEV)=X(KEV)
   56 IF(NPJ(29).NE.1) GO TO 57
      KEV=KEV+1
      AR0=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   57 IF(NPJ(30).NE.1) GO TO 58
      KEV=KEV+1
      AR1=X(KEV)
	XPRN(KEV)=X(KEV)
   58 IF(NPJ(31).NE.1) GO TO 59
      KEV=KEV+1
      RD=X(KEV)
	XPRN(KEV)=X(KEV)*APRN
   59 IF(NPJ(32).NE.1) GO TO 60
      KEV=KEV+1
      AD0=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   60 IF(NPJ(33).NE.1) GO TO 61
      KEV=KEV+1
      AD1=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   61 IF(NPJ(34).NE.1) GO TO 62
      KEV=KEV+1
      RC=DABS(X(KEV))
	XPRN(KEV)=X(KEV)*APRN
C      rc=rr
   62 IF(NPJ(35).NE.1) GO TO 63
      KEV=KEV+1
      AC0=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
C      ac0=ar0
   63 IF(NPJ(36).NE.1) GO TO 64
      KEV=KEV+1
      AC1=X(KEV)
	XPRN(KEV)=X(KEV)
   64 IF(NPJ(37).NE.1) GO TO 65
      KEV=KEV+1
      RW=X(KEV)
	XPRN(KEV)=X(KEV)*APRN
   65 IF(NPJ(38).NE.1) GO TO 66
      KEV=KEV+1
      AW0=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   66 IF(NPJ(39).NE.1) GO TO 67
      KEV=KEV+1
      AW1=X(KEV)
	XPRN(KEV)=X(KEV)
   67 IF(NPJ(40).NE.1) GO TO 68
      KEV=KEV+1
      RS=X(KEV)
	XPRN(KEV)=X(KEV)*APRN
   68 IF(NPJ(41).NE.1) GO TO 69
      KEV=KEV+1
      AS0=X(KEV)
	XPRN(KEV)=X(KEV)
   69 IF(NPJ(42).NE.1) GO TO 70
      KEV=KEV+1
      AS1=X(KEV)
	XPRN(KEV)=X(KEV)
   70 IF(NPJ(43).NE.1) GO TO 71
      KEV=KEV+1
      RZ=X(KEV)
	XPRN(KEV)=X(KEV)*APRN
   71 IF(NPJ(44).NE.1) GO TO 72
      KEV=KEV+1
      RZBWC=X(KEV)
	XPRN(KEV)=X(KEV)
   72 IF(NPJ(45).NE.1) GO TO 73
      KEV=KEV+1
      RZWID=X(KEV)
	XPRN(KEV)=X(KEV)
   73 IF(NPJ(46).NE.1) GO TO 74
      KEV=KEV+1
      AZ=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   74 IF(NPJ(47).NE.1) GO TO 75
      KEV=KEV+1
      CCOUL=X(KEV)
	XPRN(KEV)=X(KEV)
   75 IF(NPJ(48).NE.1) GO TO 76
      KEV=KEV+1
      ALF=X(KEV)
	XPRN(KEV)=X(KEV)
   76 IF(NPJ(49).NE.1) GO TO 77
      KEV=KEV+1
      CISO=X(KEV)
	XPRN(KEV)=X(KEV)
   77 IF(NPJ(50).NE.1) GO TO 78
      KEV=KEV+1
      WCISO=X(KEV)
	XPRN(KEV)=X(KEV)
   78 IF(NPJ(51).NE.1) GO TO 79
      KEV=KEV+1
      WDISO=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   79 IF(NPJ(52).NE.1) GO TO 80
      KEV=KEV+1
      EA=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   80 IF(NPJ(53).NE.1) GO TO 81
      KEV=KEV+1
      WDSHI=X(KEV)
	XPRN(KEV)=X(KEV)
   81 IF(NPJ(54).NE.1) GO TO 82
      KEV=KEV+1
      WDWID2=X(KEV)
	XPRN(KEV)=X(KEV)
   82 IF(NPJ(55).NE.1) GO TO 83
      KEV=KEV+1
      ALFNEW=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   83 IF(NPJ(56).NE.1) GO TO 84
      KEV=KEV+1
      VRD=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   84 IF(NPJ(57).NE.1) GO TO 85
      KEV=KEV+1
      BET0=X(KEV)
	XPRN(KEV)=X(KEV)
   85 IF(NPJ(58).NE.1) GO TO 86
      KEV=KEV+1
      CBM=BET3/AMUO
      BET3=X(KEV)
      AMUO=BET3/CBM
	XPRN(KEV)=X(KEV)
   86 IF(NPJ(59).NE.1) GO TO 87
      KEV=KEV+1
      BET4=X(KEV)
	XPRN(KEV)=X(KEV)
   87 IF(NPJ(60).NE.1) GO TO 88
      KEV=KEV+1
      BET(2)=X(KEV)
	XPRN(KEV)=X(KEV)
   88 IF(NPJ(61).NE.1) GO TO 899
      KEV=KEV+1
      BET(4)=X(KEV)
	XPRN(KEV)=X(KEV)
  899 IF(NPJ(62).NE.1) GO TO 901
      KEV=KEV+1
      BET(6)=X(KEV)
	XPRN(KEV)=X(KEV)
  901 IF(NPJ(63).NE.1) GO TO 910
      KEV=KEV+1
      CMB=AMUO**2*BB32
      CBM=BET3/AMUO
      AMUO=X(KEV)
	XPRN(KEV)=X(KEV)
      IF(BET3.EQ.0.) BB32=CMB/AMUO**2
      IF(BET3.NE.0.) BET3=AMUO*CBM
  910 IF(NPJ(64).NE.1) GO TO 93
      KEV=KEV+1
      AMG0=DABS(X(KEV))
	XPRN(KEV)=X(KEV)
   93 FU=0.
      IF(NPJ(58).EQ.1.OR.NPJ(63).EQ.1) CALL PREQU
      NNT=0
      KOD=KODMA
      NURRR=NUR
C     WRITE(21,131) NUR,NURRR
 131  FORMAT(10I3)

      DO 98 IE=1,NST

C     CREATING LEVELS FOR (P,N) ANALOG STATES CALCULATIONS

      IF(EE(IE).LT.EL(NURRR)*(AT+1.007825032D0)/AT+0.5D0) GO TO 779
      IF(MEHAM.GE.1.AND.MCHAE(IE).EQ.1) NUR=NURRR
	IF(MEHAM.GE.1.AND.MCHAE(IE).EQ.1) GO TO 777
  779	DO 778 ILEV=1,NURRR
  	IF(NCA(ILEV).EQ.NCA(1)) NUR=ILEV
  778 CONTINUE

  

  777 EN=EE(IE)
      MECHA=MCHAE(IE)
      ANEU=1.008664924
      IF(MECHA.EQ.1) ANEU=1.007825032
      AMI=939.56536
      IF(MECHA.EQ.1) AMI=938.272029
      REL=(EN+AMI)/AMI
      IF(MEREL.EQ.0) REL=1.
      ENC=EN*AT/(AT+ANEU*REL)
      DO 29 I1=1,NUR
      IF(ENC-EL(I1)) 30,30,29
   29 CONTINUE
      NMAX=NUR
      GO TO 31
   30 NMAX=I1-1
   31 CONTINUE
      KODMA=KOD
      IF(NMAX.LT.NUR) KODMA=0
      CALL RIPAT
      CALL ASFUT
      IF(MEHAM.GT.1) CALL KNCOE
      CALL QUANT
      IF(MECHA.NE.0) GO TO 102
      IF(EN.GT.2.D0) THEN
        PRINT 112,EN,CST,CSR,(CST-CSR)
        WRITE(21,112)EN,CST,CSR,(CST-CSR)
      ELSE
        PRINT 92,EN,CST,CSR,(CST-CSR),SQRT((CST-CSR)/0.125663706D0)
        WRITE(21,92)EN,CST,CSR,(CST-CSR),SQRT((CST-CSR)/0.125663706D0)
      ENDIF
      GO TO 103
  102 PRINT 104,EN,CST,CSR
      WRITE(21,104)EN,CST,CSR

      cpar(-1)='-'
      cpar( 0)='0'
      cpar(+1)='+'

  103 PRINT 130,   (K,EL(k),0.5*JO(k),cpar(NPO(k)),CSN(K),K=1,NMAX)
      WRITE(21,130)(K,EL(k),0.5*JO(k),cpar(NPO(k)),CSN(K),K=1,NMAX)

C 103 PRINT 130,(K,CSN(K),K=1,NMAX)
C     WRITE(21,130)(K,CSN(K),K=1,NMAX)
      IF(EN.GT.0.75) GOTO 33
      PRINT 129,SF0,SF1,SF2
      WRITE(21,129)SF0,SF1,SF2
   92 FORMAT(/1X,'NEUTRON ENERGY =',F10.6/1X,'TOTAL  CR-SECT.=',F10.6/
     *1X,'REACTION CR-SECT. =',F10.6/
     *1X,'TOTAL DIRECT CR-SECT.(ELASTIC + DIR.LEV EXCIT.) =',F10.6/
     *1X,'SCATTERING RADIUS =',F10.6)
  112 FORMAT(/1X,'NEUTRON ENERGY =',F10.6/1X,'TOTAL  CR-SECT.=',F10.6/
     *1X,'REACTION CR-SECT. =',F10.6/
     *1X,'TOTAL DIRECT CR-SECT.(ELASTIC + DIR.LEV EXCIT.) =',F10.6)
  104 FORMAT(/1X,'PROTON  ENERGY =',F10.6/1X,'TOTAL  CR-SECT.=',F10.6/
     *1X,'REACTION CR-SECT. =',F10.6)
C 130 FORMAT(/3X,'Nlev',17X,'CR-SECT. OF LEVEL EXCITATION '
C    */(1X,I5,25X,F10.6))
  130 FORMAT(
     */2x,'Nlev',4X,'Elev',3x,'Jpi',9x,'CR-SECT(Nlev)'
     */(2X,I2,3X,F7.4,2x,F3.1,A1,10X,F10.6))
  129 FORMAT(/30X,'STRENGTH  FUNCTIONS'
     */1X,'SF0=',E15.7,8X,'SF1=',E15.7,8X,'SF2=',E15.7)
      IF(NSF1(IE).NE.1) GO TO 32
      NNT=NNT+1
      FU=FU+((SE1(IE)-SF0)/DS1(IE))**2
      FUU=((SE1(IE)-SF0)/DS1(IE))**2
      WRITE (21,149)FUU,SF0,SE1(IE),DS1(IE)
  149 FORMAT(/1X,'FU FOR S0 STRENGTH FUNCTION=',E14.7, 
     *'    CALC :',E14.7,' EXP :',E14.7,' +/- ',E14.7/)      
   32 IF(NSF2(IE).NE.1) GO TO 33
      NNT=NNT+1
      FU=FU+((SE2(IE)-SF1)/DS2(IE))**2
      FUU=((SE2(IE)-SF1)/DS2(IE))**2
      WRITE (21,152)FUU,SF1,SE2(IE),DS2(IE)
  152 FORMAT(/1X,'FU FOR S1 STRENGTH FUNCTION=',E14.7, 
     *'    CALC :',E14.7,' EXP :',E14.7,' +/- ',E14.7/)   
   33 IF(NT(IE).NE.1) GO TO 2
      NNT=NNT+1
      FU=FU+((STE(IE)-CST)/DST(IE))**2
      FUU=((STE(IE)-CST)/DST(IE))**2
      WRITE (21,150)FUU,CST,STE(IE),DST(IE)
  150 FORMAT(/1X,'FU FOR TOTAL CS=',E14.7, 
     *'    CALC :',F10.4,' EXP :',F10.4,' +/- ',F9.4/)
    2 IF(NR(IE).NE.1) GO TO 3
      NNT=NNT+1
      FU=FU+((SRE(IE)-CSR)/DSR(IE))**2
      FUU=((SRE(IE)-CSR)/DSR(IE))**2
 	  WRITE (21,153)FUU,CSR,SRE(IE),DSR(IE)
  153 FORMAT(/1X,'FU FOR REACTION CS=',E14.7, 
     *'    CALC :',F10.4,' EXP :',F10.4,' +/- ',F9.4/)
    3 NG=NGN(IE)
      IF(NG.EQ.0) GO TO 6
      DO 4 KG=1,NG
      NNT=NNT+1
      NUI=NIN(IE,KG)
      NUF=NFN(IE,KG)
      SNG=0.
      DO 5 I=NUI,NUF
    5 SNG=SNG+CSN(I)
    4 FU=FU+((SNE(IE,KG)-SNG)/DSN(IE,KG))**2
    6 NG=NGD(IE)
      IF(NG.EQ.0) GO TO 1
      DO 7 KG=1,NG
      NNT=NNT+1
      NUI=NID(IE,KG)
      NUF=NFD(IE,KG)
      MTET=MTD(IE,KG)
      DO 8 M=1,MTET
    8 TET(M)=TED(IE,KG,M)
      CALL DISCA
      DO 9 M=1,MTET
      DISG(M)=0.
      DO 9 I=NUI,NUF
    9 DISG(M)=DISG(M)+DISC(I,M)
      PRINT 100
      WRITE (21,100)
  100 FORMAT(/23X,'ANGULAR DISTRIBUTIONS OF SCATTERED PARTICLES'/)
      PRINT 39,(M,TET(M),SNGD(IE,KG,M),DISG(M),M=1,MTET)
      WRITE(21,39)(M,TET(M),SNGD(IE,KG,M),DISG(M),M=1,MTET)
   39 FORMAT(1X,2('MTET',2X,'ANGL(CENT)',1X,'EXP. C.-S.',1X,
     *'CALC. C.-S. ')/(1X,2(I3,3D12.5)))
      FF=0.
      DO 10 M=1,MTET
   10 FF=FF+((SNGD(IE,KG,M)-DISG(M))/DSD(IE,KG,M))**2
      FUU=FF/MTET
      WRITE (21,151)FUU
  151 FORMAT(/1X,'FU FOR THIS ANGULAR DATA GROUP IS=',E14.7/)
    7 FU=FU+FF/MTET

    1 NUR=NURRR

   98 CONTINUE
      FU=FU/NNT
C      PRINT 138,(I,X(I),I=1,KEV)
C      WRITE(21,138)(I,X(I),I=1,KEV)
      PRINT 138,(I,XPRN(I),I=1,KEV)
      WRITE(21,138)(I,XPRN(I),I=1,KEV)
  138 FORMAT(1X,6(3X,'KEV',6X,'X',6X)/(1X,6(I5,E14.7)))
      PRINT 139,FU
      WRITE (21,139)FU
  139 FORMAT(/1X,'FU=',E14.7)
      IF(NPJ(63).EQ.1.OR.NPJ(58).EQ.1) PRINT 140, AMUO
      IF(NPJ(63).EQ.1.OR.NPJ(58).EQ.1) WRITE (21,140) AMUO
  140 FORMAT (40X,'AMUO=',F20.12/)
      CALL THORA(21)
      RETURN
      END
