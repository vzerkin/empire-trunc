  Title  : Program PLOTC4
  Version: 86-1 (August 1986)
  V      2001-3 (March 2001)  *Minor corrections
  V      2002/10 Read sample thickness, convert transmission to x-sect.
  Purpose: Translate Data from EXFOR to Computational Format
  Author :
     OWNED, MAINTAINED AND DISTRIBUTED BY:
     -------------------------------------
     The Nuclear Data Section
     International Atomic Energy Agency
     P.O. Box 100
     A-1400, VIENNA, AUSTRIA
     EUROPE
   
     ORIGINALLY WRITTEN BY:
     ----------------------
     Dermott E. Cullen
     University of California
     Lawrence Livermore National Laboratory
     L-86
     P.O. Box 808
     Livermore, CA 94550
     U.S.A.
     Telephone  925-423-7359
     e-mail     CULLEN1@LLNL.GOV
     Website    HTTP://REDDOG1.LLNL.GOV
   
     VERSION 2001-3 IMPLEMENTED BY:
     ------------------------------
     Andrej Trkov
     The Nuclear Data Section
     International Atomic Energy Agency
     P.O. Box 100
     A-1400, VIENNA, AUSTRIA
     EUROPE
     e-mail     A.Trkov@iaea.org
  
   
     USERS' GUIDE FOR PROGRAM X4TOC4
     ===============================
   
     PURPOSE
     -------
     This program is designed to translate experimental data from the
     EXFOR format to a computation format.
   
     WHAT COMPUTERS WILL THE PROGRAM RUN ON
     --------------------------------------
     The program has been implemented on a variety of computers from
     Cray and IBM mainframe to Sun workstations to a PC. The
     program is small enough to run on virtually any computer.
   
     EXFOR FORMAT
     ------------
     The EXFOR format is designed to allow experimentally measured data
     to be coded in a computer readable format in a very flexible form.
     In particular the data can be entered in essentially any set of
     units (e.g., eV vs. barns or KeV vs. milli-barns) and in any table
     format; essentially the table may be entered exactly as published
     by an author (e.g., energy followed by columns of cross sections
     in any order).
   
     The EXFOR format is table oriented in the sense that data from a
     given measurement are collected together and can be presented in
     a single, or as a series of tables.
   
     The advantage of the EXFOR format is that since data can be coded
     essentially as published by an author problems of unit conversion
     and re-formatting tables prior to coding are avoided and the
     author can easily check the coded data. The result is a greatly
     improved reliability of the coded data.
   
     The disadvantage of the EXFOR format is that since physically
     comparable data from different measurements (e.g. Fe-56 total
     cross sections) may be given in a variety of different units and
     formats it is very difficult to use in applications. In addition
     the table oriented EXFOR system makes it difficult to collect
     together physically comparable data from different measurements.
   
     COMPUTATION FORMAT
     ------------------
     The computation format used by this program is designed to present
     experimental data in a fixed set of units and column order. By
     starting from data in the EXFOR format and translating data to
     the computation format it is possible to combine the advantages
     of the improved reliability of the data coded in the EXFOR format
     with the advantages of a fixed unit and column order format for
     use in subsequent applications.
   
     In addition the computation format is point oriented (as opposed
     the table oriented EXFOR format). Each line of the computation
     format represents a single data point. This makes it possible to
     sort data in the computation format into any desired order for use
     in application, e.g., sort 26-Fe-26 (n,2n) data from a number of
     measurements together into energy order to simplify comparisons.
   
     EXFOR VS. COMPUTATION FORMAT
     ----------------------------
     The computation format is not intented as a substitute for the
     EXFOR format, rather the two are complementary. The EXFOR format
     contains much more information than can be included in computation
     formats and this information should be consulted and used during
     evaluation. The computation format is only intended to simplify
     use of the data during evaluation, or other applications.
   
     RELATIONSHIP TO ENDF
     --------------------
     It is assumed that one of the major uses of this program will be
     to prepare data for subsequent use in evaluation and/or to compare
     available evaluated and experimental data. As such the computation
     format has been designed to allow data to be reduced to a form in
     which data are classified in a manner similar to ENDF data.
   
     In particular the EXFOR classification of data by the EXFOR
     keyword reaction (or ISO-QUANT, etc.) is replaced by classifying
     the data by (1) projectile, (2) target - ZA, (3) type of data
     (ENDF MF number), (4) reaction (ENDF MT number). In addition the
     standard units used by the translation program were selected to
     be the same as the units used by ENDF (e.g., eV, barns, etc.).
   
     The result of putting data into the computation format is that it
     is easy to decide if the data is comparable to evaluated data
     (e.g. same ZA, MF, MT) and once it is decided that data is
     comparable, evaluation and/or comparison is simplified because the
     data is in the same units as ENDF (e.g., eV vs. barns).
   
     EXTENSIONS OF ENDF CONVENTIONS
     ------------------------------
     For all types of data which are physically comparable to data,
     which can be included in the ENDF data, this program uses
     the ENDF definitions of (1) type of data (ENDF MF number),
     (2) reaction (ENDF MT number). For example all cross sections
     are represented by MF=3, angular distributions by MF=4, energy
     distributions by MF=5 and double differential distributions
     by MF=6. Similarly for simple reactions such as total, elastic
     etc., the data are translated into corresponding MT=1,2, etc.,
     respectively.
   
     Since many types of data which appear in EXFOR do not have a one
     to one correspondence to data which appears in ENDF the ENDF
     classification of type of data (MF) and reaction (MT) have been
     extended to allow additional types of data and reactions to be
     translated (e.g., define MF numbers for ratios, define MT numbers
     for (n,np)+(n,na) reactions).
   
     The ENDF MF is a 2 digit number and the MT is a 3 digit number.
     In the computation format MF has been extended to 3 digits and the
     MT has been expanded to 4 digits. These extensions allow the user
     the flexibility to translate virtually any EXFOR data to a fixed
     set of units and column order for subsequent use in applications.
   
     Some extensions of MF and MT have already been established (for,
     details see the input dictionaries described below) and if at all
     possible these conventions should be followed by the user. The
     user has the flexibility of establishing any conventions that may
     be required to meet his or her needs, but in this case it is the
     responsibility of the user to properly interpret and use the
     translated data.
   
     DIRECT COMPARISON TO ENDF DATA
     ------------------------------
     Although the ENDF classification system of MF and MT is used for
     translation, generally very little of the EXFOR data is directly
     comparable to ENDF data. Generally cross sections (MF=3) are
     directly comparable. However, it must be realized that angular
     (MF=4) and energy (MF=5) and double differential (MF=6) data are
     given in ENDF in a normalized (i.e., normalized to unity when
     intergrated) form, whereas data in EXFOR are generally given in an
     unnormalized form (e.g.,angular distributions in barns/steradian).
   
     After this program has been used to translate EXFOR data to the
     computation format the user may make additional data directly
     comparable to the corresponding ENDF data by either,
     (1) Normalizing the data in the computation format, or,
     (2) Converting ENDF data to unnormalized form.
     This involves selecting an intgrated cross section as a standard
     to use for the comparison (e.g., for a 14.2 MeV elastic angular
     distribution use the 14.2 MeV ENDF elastic cross section).
   
     Since the selection of a standard to use for comparison in highly
     application dependent it has been decided that it is better to use
     this program to translate data exactly as given in EXFOR (except
     for conversion to a standard set of units) and to allow the user
     to subsequently select a standard for renormalization.
   
     CONTROL OF TRANSLATION
     ----------------------
     The user has complete control over what data is translated, where
     given types of data appear in the computation format and the units
     of the data in the computation format.
   
     This is accomplished by using three dictionaries which control
     the translation. All three of these dictionaries are distributed
     with this program. Each dictionary is a simple card image file
     which may be modified by the user at any time to meet specific
     needs. The three dictionaries are:
   
     (1) EXFOR REACTION - PROJECTILE, MF, MT EQUIVALENCE
         This dictionary tells the program for each EXFOR reaction
         what projectile, MF and MT to output in the computation format
         (e.g.,(n,tot) = neutron, MF =3 (cross section),MT =1 (total)).
         If a reaction read from the EXFOR format is not found in this
         dictionary, or the assigned MF or MT is not positive the EXFOR
         data will simply be skipped and not translated. Using this
         dictionary the user has control over which data is translated
         and what MF and MT are assigned to each EXFOR reaction.
   
     (2) EXFOR COLUMN TITLE - COMPUTATION FORMAT OUTPUT FIELD
         Once the EXFOR reaction has been translated and assigned an
         equivalent MF and MT this dictionary tells the program where
         to place each EXFOR column in the computation format. The
         assigned MF number can be used to output an EXFOR column
         with the same title into different columns of the computation
         format based on different mf numbers. For example, for cross
         sections (MF=3) the user may use EN-MIN and EN-MAX to define
         an average incident energy to be output in the first field
         of the computation format and an equivalent energy uncertainty
         in the second field of the computation format. Alternatively,
         for resonance integrals (MF=213) the user may decide to output
         EN-MIN and EN-MAX in the first two fields of the computation
         format to define the energy range of the resonance integral.
   
         There are 8 output fields in the computation format and for
         any given MF number the user may output any EXFOR column
         into any of these fields. Any EXFOR title which is not
         assigned to an output field 1 to 8 will be ignored and not
         output. This allows the user to selectively translate portions
         of EXFOR data tables to meet any given need. For example, by
         simply modifying this dictionary the user has control over
         whether an EXFOR column DATA-ERR3 is translated or ignored,
         and if translated the user has control over which of the 8
         computation format data fields DATA-ERR3 will appear in.
   
     (3) EXFOR COLUMN UNITS - COMPUTATION FORMAT UNITS
         This dictionary tells the program how to convert each EXFOR
         unit into standard units. As distributed this dictionary will
         convert all EXFOR units to ENDF compatible units. However,
         the user has the option to change this dictionary at any time
         to obtain any output units to meet his or her needs. For
         example if the user would like output in MeV vs. milli-barns
         instead of eV vs. barns it is merely necessary to modify this
         dictionary.
   
     OPERATIONS ON DATA
     ------------------
     In addition to the information described above each of the three
     dictionaries allows the user to select from a menu of operations
     which may be performed on the data (for a complete and up-to-date
     list of available operations see the dictionaries). For example,
     the reaction dictionary allows the user to specify that legendre
     coefficents may be re-normalized, the title dictionary allows the
     user to specify that EN-MIN and EN-MAX are to be converted to an
     average energy and associated energy uncertainty and the units
     dictionary allows the user to specify that angles should be
     converted to cosines.
   
     These operations are completely under the control of the user and
     by simply modifying the dictionaries the user can control whether
     or not each operation is performed (e.g., if you want to output
     angles instead of cosines modify the units dictionary by removing
     the option to convert from angle to cosine from the EXFOR units
     ASEC, AMIN and ADEG).
   
     COMPUTATION FORMAT UNITS
     ------------------------
     As distributed the Units dictionary will convert all EXFOR units
     to ENDF units:
   
     eV         = energy
     barns      = cross section
     steradians = solid angle
     seconds    = time
     kelvin     = temperature
   
     If the user would like to obtain any other output units it is
     merely necessary to modify the units dictionary (see units
     dictionary for details).
   
     A LEARNING PROGRAM
     ------------------
     As distributed the three translation dictionaries do not contain
     definitions of how to translate all EXFOR reactions, titles and
     units. At the present time this program has only been used to
     translate a small portion of the data included in the EXFOR system
     and the dictionaries only contain sufficient information to
     translate the EXFOR data which has been encountered to date.
   
     It is difficult and dangerous to try to define translation rules
     for all types of EXFOR data without examining actual EXFOR data.
     therefore only when a new reaction, title or unit is encountered
     during translation will the actual EXFOR data be examined, a
     decision made as to how to best translate the data and the
     dictionaries updated.
   
     Generally once a given type of EXFOR data has been encountered and
     the dictionaries updated to define how to translate the data the
     same rules can be used to translate all similar data. Therefore
     over a period of time user experience will be accumulated in the
     translation dictionaries and the program will learn to properly
     translate more and more types of EXFOR data.
   
     UNDEFINED EXFOR REACTIONS, TITLES AND UNITS
     -------------------------------------------
     In order to assist the user to define new types of EXFOR data as
     they are encountered during translation the output report from
     this program will indicate the number of EXFOR reactions, titles
     and units which have been encountered during translation which are
     not defined in the translation dictionaries. In additional all
     undefined reactions, titles and units will be written to output
     Unit 4 (NEWX4).
   
     Based on comparison to the reaction, title and units dictionaries
     if an EXFOR reaction, title or units is encountered during
     translation that is not defined in the dictionaries it will be
     written to Unit 4 (NEWX4). This information is written in a form
     that can be easily edited and added to a translation dictionary.
     After updating the dictionaries if this program is then run a
     second time using the same EXFOR data all of the EXFOR data can
     be translated.
   
     COMPUTATION FORMAT
     ------------------
     The computation format uses a classification system and units
     which are compatible with ENDF. Data is classified by (1) ZA
     of projectile, (2) ZA of target, (3) metastable state of target,
     (4) MF - type of data, (5) MT - reaction, (6) metastable state
     of residual nucleus. To identify the source of the data the first
     author and year and the EXFOR accession and sub-accession number
     are included in the format. In addition, fields are assigned to
     define the status of the EXFOR data (e.g., S = superceded),
     whether data is in the laboratory or center-of-mass frame of
     reference and the physical significance of the last 2 output
     fields (LVL = level energy, HL = half-life). Finally the format
     includes 8 fields in which the output data are contained (e.g.,
     incident energy, data, cosine, uncertainties, etc.)
   
     Columns   Description
     -------   -----------
       1-  5   Projectile ZA (e.g. neutron =1, proton =1001)
               (defined by reaction dictionary).
       6- 11   Target ZA (e.g. 26-Fe-56 =  26056)
               (defined by EXFOR reaction).
          12   Target metastable state (e.g. 26-FE-56m = M)
               (defined by EXFOR reaction).
      13- 15   MF (ENDF conventions, plus additions)
               (defined by reaction dictionary).
      16- 19   MT (ENDF conventions, plus additions)
               (defined by reaction dictionary).
          20   Product metastable state (e.g. 26-FE-56M = M)
               (defined by EXFOR reaction).
          21   EXFOR status
               (defined by EXFOR keyword status).
          22   Center-of-mass flag (C=center-of-mass, blank=lab)
               (defined by EXFOR title dictionary).
      23- 94   8 data fields (each in E9.3 format defined below)
               (defined by MF and title dictionary).
      95- 97   Identification of data fields 7 and 8
               (e.g., LVL=level, HL=half-life, etc.).
               For a complete list of codes see title dictionary
               (defined by MF and title dictionary).
      98-122   Reference (first author and year)
               (defined by EXFOR keywords title and reference).
     123-127   EXFOR accession number
               (defined by EXFOR format).
     128-130   EXFOR sub-accession number
               (defined by EXFOR format).
         131   Multi-dimension table flag
               (defined by EXFOR keyword reaction or common fields).
   
     PRECISION OF THE 8 DATA FIELDS
     ------------------------------
     If written in normal format E9.2 format the output from this
     this program would give data to only 2 or 3 digits of accuracy,
     depending on the computer used (e.g., 0.23E+02 or 2.34E+01), which
     is not sufficient for many applications (e.g., energy of cross
     section points in the resonance region).
   
     In order to avoid this problem this program will output data in
     a special compatible format to allow up to 7 digits of accuracy
     (i.e.,more than the full word accuracy of IBM computers).
   
     Numbers between 0.01 and less than 10 million will be output in F
     (rather than E format). For example, the energy 12.3456 KeV will
     be output as 123456.0. Numbers less than 0.01 or greater than
     10 million will be output in E format, but without as E and an
     exponent of 1 or 2 digits. For example 14.123 MeV will be output
     as "1.4123+7".
   
     These output conventions have been used for many years with ENDF
     related programs and have been proven to be FORTRAN compatible forx
     use on virtually any computer. For example, any fortran program
     which is written to read this data using an E9.2 format will read
     the data properly whether the data is actually in E or F format.
   
     Generally maintaining high precision in the data is most important
     for the independent variable, particularly incident energy. Since
     we do not expect very narrow resonance structure below 0.01 eV or
     above 10 MeV generally these output conventions will maintain the
     accuracy of the EXFOR data to meet requirements.
   
     DEFINITION OF 8 COMPUTATION FORMAT DATA FIELDS
     ----------------------------------------------
     The user may use the title dictionary to output any EXFOR column
     into any computation format data field. As distributed the title
     dictionary contains a number of conventions which if at all
     possible should be followed by the users. The general definitions
     of the 8 computation format data fields are:
   
     Data field   Definition
     ----------   ----------
       1          Projectile incident energy
       2          Projectile incident energy uncertainty
       3          Data, e.g., cross section, angular distribution, etc.
       4          Data uncertainty
       5          Cosine or legendre order
       6          Cosine uncertainty
       7          Identified by columns 95-97 (e.g.,level E, half-life)
       8          Identified by columns 95-97 (e.g.,level E, uncertainty)
   
     The physical significance of each field is defined by the assigned
     MF number. For example, for MF =3 (cross sections), columns 1 and
     2 contain the incident projectile energy and its uncertainty in
     eV, respectively and columns 3 - 4 contain the cross section and
     its uncertainty in barns, respectively and columns 7 and 8 may
     contain a level energy and its uncertainty in eV or a half-life
     and its uncertainty in seconds.
   
     SPECIAL CONVENTIONS
     The above conventions are appropriate for most types of data
     in the ENDF system. In order to allow this program to plot
     additional types of data the following special conventions have
     been adopted,
   
     Cross section ratios  - Field 5 = MT of denominator.
     (MF = 203)              Field 6 = ZA of denominator.
     Resonance integrals   - Field 1 = lower energy limit.
     (MF = 213)              Field 2 = upper energy limit.
     Spectrum averages     - Field 1 = lower energy limit.
     (MF = 223)              Field 2 = upper energy limit.
     Fission yield data    - Field 5 = ZA of fission fragment.
     (MF = 801)              Field 6 = mass of fission fragment.
     Production            - Field 6 = ZA of product.
     (MT = 9000-9999)
   
     See, remarks below on metastable state flags.
   
     REQUIRED DATA FIELDS
     --------------------
     For various types of data the program will check if all required
     fields are defined and non-blank. If they are not warning messages
     will be printed. If the data field (Field 3) is not defined or
     blank the data point will not be output. If the data field is not
     defined this usually indicates an error in the EXFOR data. Blank
     data fields are quite common in multi-dimensional tables and a
     warning may or may not indicate an error (check the EXFOR data to
     see if it is correct).
   
     The program considers that the following fields are required:
   
      MF (Data type)         Data field (X = Required)
     ---------------------   -------------------------
                              1  2  3  4  5  6  7  8
     ---------------------   -------------------------
       3 (Cross sections)     X     X
       4 (Angular dist.)      X     X     X
       5 (Energy dist.)       X     X           X
       6 (Double diff.)       X     X     X     X
     154 (Legendre coeff.)    X     X     X
     203 (Ratios)             X     X     X  X
     801 (Yield data).        X     X     X  X
   
     (See the above definition of the 8 data fields).
   
     MULTI-DIMENSIONAL TABLES
     ------------------------
     The program can translate multi-dimensional EXFOR tables for:
     (1) Multiple reactions following the EXFOR keyword reaction
         (ISO-QUANT, etc.) with each reaction identified by a character
         in column 11.
     (2) Single reactions with multiple common fields each identified
         by a character in the eleventh column of each field.
     (3) The old ISO-QUANT, etc. convention of reactions separated by
         commas, e.g., ((90-TH-232,NG)/(29-CU-0,NG)),(29-CU-0,NG)).
   
     TRANSLATION OF EXFOR REACTIONS
     ------------------------------
     Not all EXFOR reactions (ISO-QUANT, etc.) can be translated by
     this program. In order to translate each reaction the program will
     first break each reaction into a series of simple reactions and
     remove and save the target and residual ZA, E.G.:
   
     ((26-FE-56(N,G)26-FE-57-M1,,SIG)/(26-FE-56(N,G)26-FE-57-G,,SIG))
   
     is broken down to define
   
     ZA-target = 26056 , ZA-residual = 260571, reaction = (N,G),SIG
   
     Note residual metastable state flags. See explanation below.
   
     The program will then define an equivalent MF, MT for each
     reaction.
   
     The program will next translate the following types of
     reactions:
     (1) Simple reactions
         (N,G),SIG
     (2) Equivalent reactions
         ((N,G),SIG)=...anything else....
         After decoding the first simple reaction the program assumes
         that the first simple reaction is truely equivalent to the
         remainder of the reaction and defines ZA, MF and MT based on
         the first simple reaction.
     (3) Simple ratios
         ((N,G)M1/G,,SIG/RAT) or ((N,G)M1,SIG)/((N,G)G,SIG)
     (4) Complex reactions - all with the same equivalent ZA
         ((N,EL),WID,,G)*((N,G),WID)/((N,TOT),WID)
     (5) Other reactions
         (((N,G),SIG)/((N,G),SIG),(N,G),SIG))
   
         If the reaction is not one of the above types the program will
         try to use the entire EXFOR reaction, including target and
         residual ZA and see if it is defined in reaction equivalent
         dictionary. If an MF, MT is defined for the entire reaction
         the program will use the target and residual ZA from the first
         simple reaction to translate the data. This last form may be
         used to insure that almost all EXFOR reaction can be
         translated, regardless of how complicated it is (for examples
         see reaction dictionary) however the user should carefully
         check the output to insure that the data has been translated
         as intended.
   
     The only reactions that have so far been found that cannot be
     correctly translated are ratios of production cross sections,
     e.g., (29-CU-0(P,X)26-FE-56)/(28-NI-0(P,X)26-FE-58)
     because ratio data requires fields 5 and 6 for the denominator
     MT and ZA and ratio data requires field 5 for the product ZA.
     When this case is encountered the program will print an error
     message and output the denominator MT and ZA in fields 5 and 6.
     In this case the output will identify the numerator as ZA=29000,
     MT=9001 and the denominator as ZA=28000, MT=9001. One solution
     is to modify the output of this program by defining two reactions,
     e.g., MT = 8001 = (p,x) 26-Fe-56 and MT = 8002 = (p,x) 26-Fe-58,
     modify the numerator MT to 8001 and denominator MT to 8002 and
     then properly interpreting the data using these definition in all
     applications (for examples, see program PLOTC4 input directionary
     for proton induced reactions).
   
     OUTPUT REPORT
     -------------
     This program will write a report on Unit 6 (OUTP) to allow the
     user to monitor the translation of the EXFOR data. It is extremely
     important that the user read this report and not simply assume
     that all of the data has been properly translated.
   
     After identifying each EXFOR accession, sub-accession number,
     ZA, MF, MT and reaction the program can print two types of
     messages:
   
     WARNING    = Something unusual has occurred. The user should
                  carefully check to insure that the output data has
                  been properly translated.
     OPERATION  = One of the defined reaction, title or unit operations
                  has been performed on the data. The user should
                  carefully check to insure that the proper operation
                  has been performed.
   
     If the user does not agree with how the data has been translated
     the three dictionaries may to be modified and the program re-run.
     For example, if the program prints a warning that the title
     dictionary tells it to output E-ERR1, E-ERR2, E-ERR3 all in the
     same computation format field, followed by an operation that says
     the program will only output E-ERR1 and ignore the other 2 EXFOR
     fields, if the user would rather output E-ERR2 and ignore E-ERR1
     and E-ERR3 it is merely necessary to modify the title dictionary
     to ignore E-ERR1 and E-ERR3 and select E-ERR2 and then re-run the
     program.
   
     METASTABLE STATE
     ----------------
     The computation format allows the metastable state of the target
     and residual nucleus to be identified. For ratio data metastable
     state of both numerator and denominator of the ratio may be
     defined.
   
     The metastable state of the target is identified in column 12 and
     the metastable state of the residual nuclues in column 20. For
     ratio data the metastable state of the denominator target and
     residual nucleus are identified by output the denominator ZA and
     MT in the form ZA.M and MT.M (e.g., 26056.9 and 102.1). Columns
     12 and 20 could contain characters such as M, but to maintain the
     eight output fields in strictly numerical form the denominator
     ZA.M and MT.M will be output in numerical form. The possible
     characters that may appear in columns 12 or 20 and their numerical
     equivalents used with ratio denominator ZA and MT include:
   
     Definition    Column 12 or 20     Equivalent
     ----------    ---------------     ----------
     ground              G                0
     m1                  1                1
     m2                  2                2
     m3                  3                3
     m4                  4                4
     m5                  5                5
     unknown             ?                6
     m                   M                7
     more than 1         +                8
     all or total        T                9
     all or total      blank              9
   
     By convention if an EXFOR reaction does not specify a metastable
     state the state is defined in the computation format to be..ALL..
     (i.e., blank in column 12 or 20, 9 in ratio ZA or MT).
   
     For example, for a ratio if the ZA.m and MT.m are output as
     26056.9 and 102.1, respectively the ratio denominator target is
     26-Fe-56 (all) and the reaction is capture (MT=102) leaving the
     residual nucleus in the m1 state.
   
     NOTE: Since most data will not contain a metastable state flag
     the above convention to output the ZA and MT of the denominator
     of ratios allows the user to read and use the denominator ZA and
     MT as integers (effectively ignoring any metastable state flag) or
     if necessary to determine the metastable state.
   
     EXFOR STATUS
     ------------
     Column 21 of each computation format record may contain blank
     (status not specified) or one to the following characters:
   
     Column 21   Definition
     ---------   ----------
        U        Unnormalized (indicated by unit translation dictionary)
                 This condition has priority over the EXFOR status and
                 is used to indicate that the data is not in standard
                 output units).
        A        Approved by author
        C        Correlated
        D        Dependent
        O        Outdated
        P        Preliminary
        R        Renormalized
        S        Superceded
   
     If data has any other EXFOR status (e.g., translated from SCISRS)
     it will be ignored and the status field will be output as blank.
   
     INPUT FILES
     -----------
     Unit  Description
     ----  -----------
      10   EXFOR data (to be translated) (BCD - 80 characters/record)
      12   EXFOR reaction dictionary     (BCD - 80 characters/record)
      14   EXFOR title dictionary        (BCD - 80 characters/record)
      15   EXFOR units dictionary        (BCD - 80 characters/record)
   
     OUTPUT FILES
     ------------
     Unit  Description
     ----  -----------
       4   List of all undefined EXFOR reactions, titles and units
           found during the translation (if any).(BCD -  80 characters)
       6   Output report                         (BCD - 132 characters)
      11   Computation format experimental data  (BCD - 131 characters)
   
     SCRATCH FILES
     -------------
     NONE
   
     INPUT PARAMETERS
     ----------------
     None
   
     REPORTING ERRORS
     ----------------
     In order to improve this code and make future versions more
     compatible for use on as many different types of computers as
     possible please report all compiler diagnostics and/or operating
     problems to the author at the above address.
   
     Please remember if you simply report "I'VE GOT A PROBLEM" and do
     not adequately describe exactly how you were using the program
     it will be impossible for the author to help you. When a problem
     arises please write to the author, describe the problem in as much
     detail as possible, identify the version of the program that you
     are using (e.g. Version 2001-3) and send the following information
     in computer-readable form (e-mail, floppy disc, etc.) to the author:
   
     (1) A copy of the program you are using
     (2) A copy of compiler diagnostics (if any)
     (3) A copy of the JCL deck you used to execute the program
     (4) A copy of the 3 translation dictionaries you are using
     (5) A copy of the EXFOR format data you using
     (6) A copy of the computation format data you produce
     (7) A copy of the output report from the program.
   
     Without all of this information it is impossible to exactly
     simulate the problem that you ran and to determine the source
     of your problem.
   
   *** COMPUTER DEPENDENT CODING ******
   
    COMPUTER DEPENDENT CODING
    -------------------------
   
    * This program is designed to be used with a Fortran-77 or
     Fortran-90 compiler.
   
    * The only compiler dependent format statements involve,
     (1) CHARACTER*1 and CHARACTER*4
     (2) Testing for errors and end of file during reads.
   
    * It is assumed that characters are stored in successive storage
      locations and that characters may be treated as continuous strings
      of characters in either CHARACTER*4 or CHARACTER*1 format.
   
    * For example, if one subroutine contains,
   
      CHARACTER*4 BCD
      DIMENSION BCD(10)
   
     the array BCD is assumed to be an array of 40 characters in
     successive byte locations.
   
     It is assumed that this array can be passed as an argument to
     another subroutine and used as CHARACTER*1, e.g.,
   
      CALL DUMMY(BCD)
   
      SUBROUTINE DUMMY(BCD)
      CHARACTER*1 BCD
      DIMENSION BCD(40)
   
    * This convention will work on all 32 bit per word computers (e.g.,
      IBM or IBM compatible computers).
   
    * For longer word length computers (e.g., CDC or CRAY) it is
      suggested that before implementing and using this program the
      user first verify that character strings can be treated as
      described above, e.g., write a simple program to read a character
      string of 40 characters in CHARACTER*4 format, pass it to a
      subroutine which uses the character string in CHARACTER*1 format
      and print the character string in the subroutine. If the character
      string is printed as a continuous string you will be able to use
      this program. If the character string is not printed as a
      continuous string it is not recommended that you use this program.
   
    * This program using the Fortran-77 convention for testing for
      reading errors and end of file during reads, e.g.,
   
      READ(10,1000,END=100,ERR=200) A,B,C,D
   
