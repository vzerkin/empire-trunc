

     program fixup

     vers. 2000-1 (february 2000)


     owned, maintained and distributed by
     ------------------------------------
     the nuclear data section
     international atomic energy agency
     p.o. box 100
     a-1400, vienna, austria
     europe

     originally written by
     ------------------------------------
     dermott e. cullen
     current address
     university of california
     lawrence livermore national laboratory
     l-86
     p.o. box 808
     livermore, ca 94550
     u.s.a.
     telephone  925-423-7359
     e. mail    cullen1@llnl.gov
     website    http://reddog1.llnl.gov

     purpose
     =======
     this program is designed to read evaluated data in the endf/b
     format, perform corrections and output the result in the endf/b
     format. two types of corrections are possible (1) automatic and
     (2) optional (based on user input) corrections.

     one of the most important functions of this program is to
     re-define all redundant cross sections (e.g. total) to be exactly
     equal to the sum of its parts. this procedure eliminates the
     problem with many endf/b evaluations, where due to the use of
     non-linear interpolation laws the total may be equal to the sum
     of its parts at all tabulated energies, but based on the
     interpolation laws it can be quite different at energies between
     tabulated energies.

     automatic checks/corrections
     ============================
     (1) check that mat/mf/mt does not change unless a mend/fend/send
         line is read. if mat/mf/mt changes a warning message is
         printed but no corrective action is taken.
     (2) all lines within a given mat will be sequentially numbered
         on output.

     optional checks/corrections
     ===========================
     the following numbers correspond to the input data option columns
     (see the description of the input below)

     (1) correct za and awr in all sections. check to insure that the
         c1 and c2 values (za and awr) are the same in all sections.
         the c1 and c2 of the first section read are assumed to be
         correct and are used for comparison. if the c1 and/or c2 of
         the first section are not positive an error message is output
         and the material is copied without change.
         note....to change the za and/or awr of any material it is
         merely necessary to change the za and/or awr in the first
         section of the material and use this option to automatically
         change all other sections.
     (2) correct cross section (mf=3) thresholds. the q-value and awr
         are used to derive the reaction threshold using the relation,

         e-threshold = -(q-value)*(awre+1.0)/awre

         if the threshold is positive the cross section is checked to
         insure that the first tabulated point is at the threshold and
         has a zero cross section. if not, the cross section will be
         changed.
         (a) if the first tabulated point is above the threshold and
             has a zero cross section, the point is deleted and a point
             is inserted at the threshold.
         (b) if the first tabulated point is above the threshold and
             has a non-zero cross section, a point with zero cross
             section is inserted at the threshold.
         (c) if the first tabulated point is below the threshold and
             has a non-zero cross section, all points below the
             threshold are deleted and a point with zero cross section
             is inserted at the threshold.
     (3) extend all cross sections (mf=3) to 20 mev. if the tabulated
         cross section ends below 20 mev it will be extended to 20 mev
         as either zero (imops(3)=1) or constant (imops(3)=2) equal
         to the last tabulated value.
     (4) allow reaction (mf=3, any mt) deletion. all specified
         reactions will be deleted when the data is read from the
         input endf/b data file and will not be in the output endf/b
         data file. warning deleted reactions may not be used to define
         any reconstructed reactions (i.e. reactions defined by summing
         other reactions). since deleted reactions are deleted during
         reading it is as if they never existed and if any deleted
         reaction is required later to define any sum an error will
         result. the user may specify that the deletion rules are to be
         read from input (imops(4)=1) or that the built in summation
         rules are to be used (mops(4)=2). at the present time the
         built-in deletion rules are that no sections should be deleted
         (the user may override this convention by input).
     (5) allow reaction (mf=3, any mt) reconstruction by summing other
         reactions. in order to optimize the running time of this
         program care should be exercised to minimize the number of
         times that each contributing cross section must be used.
         the used may specify that the summation rules are to be read
         as input (imops(5)=1) or that the built in summation rules
         are to be used (imops(5)=2). the built in summation rules are
         designed to use endf/b conventions and to minimize the number
         of times that each cross section is used.
     (6) insure that all cross sections are non-negative (i.e. are
         zero or positive). during reading all negative cross sections
         will be set equal to zero and treated as such during all
         subsequent summations and endf/b output.
         note...this option should never be used with data containing
         background cross sections which may be negative. only after
         the resonance contribution has been added to the background
         to define the actual cross section is it valid to eliminate
         negative cross sections.
         note...this option may be used to delete negative elastic
         cross sections that may result from reconstructing cross
         sections from single level breit-wigner parameters. if the
         total cross section is then reconstructed using the corrected
         elastic cross section the total will be positive due to the
         contributions of capture and fission (thus avoiding numerical
         instability problems during self-shielding calculations).
     (7) within each section of cross sections delete energies that
         are not in ascending energy order (energy repetition is o.k.)
     (8) within each section of cross sections eliminate duplicate
         points (successive points with the same energy-cross section).
     (9) test that all sections are in ascending mat/mf/mt order.
         if not, no corrective action will be taken, only an error
         message will be output.
    (10) check mf/mt for each section to insure that they are defined
         in the endf/b formar manual. if they are not defined an error
         message is printed, but no corrective action is taken.
    (11) allow sections which are not present in the original (input)
         evaluation to be created. normally this program will only
         reconstruct and output sections if the section is present
         in the original evaluation. this procedure is followed because
         normally the program does not know how to define the contents
         of the first two lines of the section (e.g., q-value,
         temperature, initial and final states). this option may be
         used to allow the program to read and save a table defining
         the contents of the first two lines of each section to be
         created.
         note...if a section is present any command to create it will
         be ignored.
     (12)allow energy points to be inserted. the program can read up
         to 50, energies, mat, mt and use linear interpolation to
         insert energy points into tables as they are read, e.g.,
         insert an energy point at thermal energy (0.0253 ev). if
         an mat and/or mt is zero this implies = all - insert the
         energy in all tables.
     (13)put allow cross sections on a uniform energy grid = each
         section (mt) of cross sections will include all energies
         which appear in at least one section of data. parameters
         (mt=251 through 255) are not included in the uniform energy
         grid.
     (14)delete section if cross section = 0 at all energies. this
         sounds like an absurd option, but is required because such
         sections exist in endf/b-vi.

     creating ratios and products
     ============================
     in order to create ratios and products = new mt numbers, you must
     do two things,

     1) define each new mt number as a ratio or product of two mt
        numbers.

     2) use the create mt number option and input the first two lines
        of the section

     warning - unless you do both of these you will not obtain output
     in the endf/b format.

     two special mt numbers have been defined by csewg involving
     ratios and products,

     alpha (mt=254)= capture (mt=102)/fission (mt=18)

     eta (mt=255)  = nu-bar (mt=452)*fission (mt=18)/absorption (mt=27)

     absorption (mt=27) = fission (mt=18) + sum (mt=102 through 116)

     as yet there is no standard definition of mt numbers for ratio
     or product data. you are free to use any mt numbers normally not
     used in the endf/b. however, it will then be your responsibility
     to properly interpret the results, i.e., nobody else will have
     any idea how to interpret a table of data associated with the mt
     numbers you have used.

     this program can be only directly define ratios and products
     using two mt numbers = binary operations, e.g., define the capture
     to fission ratio, or define the product nu-bar*fission.

     this program cannot directly define ratio or product of a sum of
     sections to the sum of another set of sections. however, this can
     be done indirectly by first defining a dummy mt number (any mt
     number not normally used in endf/b) to be a sum of sections and
     a second dummy mt number to be a second sum of sections. you can
     then define ratio or product you require to be the ratio of these
     two dummy mt numbers.

     for example, to define eta,
     1) first define (mt=27) = (mt=27) + (sum of mt=102 through 116)
     2) next define (mt=333) = (mt=452)*(mt=18)
     3) last define (mt=255) = (mt=333)/(mt=27)
     do not forget to turn on the create section option (on the first
     input line) and input the first two lines of section mt=255 -
     otherwise you will not get any endf/b formatted output.

     the only special conventions used by this program in calculating
     ratios are when the denominator of the ratio is zero. in this
     case if the numerator is also zero the ratio is defined to be one.
     in this case if the numerator is not zero the ratio is defined
     to be zero.

     endf/b format
     =============
     this program may be used with data in any version of the endf/b
     format (i.e. endf/b-i, ii, iii, iv, v or vi format). since a
     paging system is used store cross section tables on scratch files
     there is no limit to the size of tables (e.g. the total cross
     section may be represented by 200,000 tabulated points).

     warning
     =======
     (1) for each section of cross sections (i.e. each mt, mf=3) in
         the original evaluation (i.e. endf/b data read) one section
         of data will be output, unless the section has been deleted.
         this includes any sections which are not present in the
         original evaluation, but the user indicates (by input) should
         be created.

         the program will not output any section reconstructed by
         summation unless the corresponding section (mt number) is
         present in the original evaluation or user input indicates
         should be created and output. this is (a) because the
         program cannot define the parameters to appear on the first
         two lines of the section, (b) to avoid outputting too much
         data which the user may not be interested in.

     (2) for any sections that do not appear in the original data the
         user may specify that they be defined by summation. any such
         section may be used be define subsequent sums, but the section
         itself will not be output (e.g. generally mt=27 and 101 are
         not present in evaluations. however, the built-in summation
         rules of this program uses the endf/b summation rules to
         define mt=27 and 101, which in turn are used to define the
         non-elastic cross section, mt=3. sections mt=27 and 101 are
         not output).

     (3) all data in file 3 and 23 must be linearly interpolable. if
         the data is not linearly interpolable this program will
         terminate.

     program operation
     =================
     all mat number on an endf/b tape are processed. each mat is
     treated separately. within each mat, each section before mf=3
     is read, checked/corrected (based on input options) and output.
     when mf=3 is located all cross sections are read, sections to be
     deleted are deleted, sections which are not presented and user
     input indicates should be created are create, sections to be kept
     are checked/corrected (based on input options) and written to a
     scratch file. next, if the user specifies that they should,
     sections are reconstructed. finally all cross sections (old and
     new) are output. within the same mat, each section after mf=3 is
     read, checked/corrected (based on input options) and output.

     mf=3
     ====
     the treatment of the cross sections requires up to 4 passes for
     cross sections. in the program they correspond to subroutines
     pass1, pass2, pass3 and pass4. the original and final endf/b data
     files, 5 scratch files and 3 in core arrays are used. operations
     performed during each pass are,

     pass1
     =====
     read all cross sections from itape. deleted any sections. create
     any sections. check/correct them and write them to scratch file.
     data is read into array a, transferred to array c (after editing)
     and output to iscrc from array c.
     itape  - unit original endf/b data is read from.
     iscrc  - scratch unit that edited data is written on.
     taba   - array into which original data is read.
     tabc   - array into which edited data is transferred to and
              from which it is written to iscrc.

     pass2
     =====
     if a uniform energy grid is requested it is created during this
     pass. first all of the cross sections from pass1 are read and a
     uniform energy grid is created = all energies that are included
     in at least one section (mt) of cross sections.
     iscra  - scratch unit containing uniform energy grid.
     iscrb  - scratch unit containing uniform energy grid.
     iscrc  - scratch unit that edited data is read from.
     taba   - array containing uniform energy grid.
     tabb   - array containing uniform energy grid.
     tabc   - array containing edited data.

     the uniform energy grid ends up on iscrb. next each section of
     cross sections from pass1 is read from iscrc, interpolated to
     the uniform energy grid and output to iscra. finally iscra and
     iscrc are switch, so that at the end of this pass the data will
     again be on iscrc (exactly as at the end of pass1), with updated
     point counts.
     iscra  - scratch unit that uniform energy grid data is written on.
     iscrb  - scratch unit containing uniform energy grid.
     iscrc  - scratch unit that edited data is read from.
     taba   - array containing uniform energy grid data.
     tabb   - array containing uniform energy grid.
     tabc   - array containing edited data.

     pass3
     =====
     summation cross sections are defined by reading data from iscrc
     and merging them onto iscra. the first section that contributes
     to a sum is merely copied from c to a. if more sections will
     contribute to the sum the data in a is transferred to b, a
     section of data from c is added to the data in b and stored in
     a. the cyle of added c and b to a, followed by moving a to b
     is continued until all contributing sections have been added.
     the sum is then copied from a to d. if newly constructed section
     is required for any later summuations it is also copied to e.
     the cycle of added sections from c and b to a is repeated for
     each required summation reaction. in addition to sections from
     c, after the first summation sections may also be added to a
     from e (the contribution of new reconstructed cross sections).
     when all required sections have been reconstructed the new
     sections will be on e and the original sections on c.
     iscrc  - scratch file from which original data is read.
     iscra  - scratch file onto which sum for one section is written.
     iscrd  - scratch file onto which all sum cross sections are
              written.
     iscre  - scratch file onto which all sum cross sections which
              are required for later sums are written.
     iscrb  - utility scratch file used to create sum cross sections.
     taba   - array into which sums are written.
     tabb   - array into which partial sums are written.
     tabc   - array into which original data is read.

     pass4
     =====
     cross sections are read from iscrc (original) and iscrd (new)
     and are written in the endf/b format on otape. the beginning of
     each section of original data is read from iscrc (to define
     section header information). if this mt has not been recostructed
     on iscrd the original section is output. if the section has been
     reconstructed the original section is skipped and the new section
     is output.
     otape  - output data in the endf/b format.
     iscrc  - scratch file from which original data is read.
     iscrd  - scratch file from which new data is read.
     tabc   - array into which cross sections are read from scratch
              and written to otape

     i/o file definitions
     ====================
     unit   description
     ====   ===========
       2    input parameters.
       3    output report.
      10    original data in the endf/b format.
      11    final data in the endf/b format.
      12    scratch file
      14    scratch file
      15    scratch file
      16    scratch file
      17    scratch file

     optional standard file names (see subroutine filio1 and filio2)
     ===============================================================
     unit  file name   format
     ====  ==========  ======
       2   fixup.inp    bcd
       3   fixup.lst    bcd
      10   endfb.in     bcd
      11   endfb.out    bcd
    12-17  (scratch)   binary

     input lines
     ===========
     line  columns  format  description
     ====  =======  ======  ===========
       1    1-72     72i1   input options as described above.
                            each column of the input line controls
                            one of the tests/corrections described
                            above. tests/correction 1-72 (not all
                            implemented yet) correspond to columns
                            1-72 of this input line and are treated
                            as follows,
                            = 0 - do not perform test/correction.
                            = 1 - perform test/correction.
                            for mt exclusion from threshold tests
                            (column 2), deletion (column 4), or
                            summation (column 5) the input option
                            may be,
                            = 1 - read rules from input
                            = 2 - use built-in rules
       2    1-60     60a1   endf/b input data filename
                            (standard option = endfb.in)
       3    1-60     60a1   endf/b output data filename
                            (standard option = endfb.out)
     4-m    1-5      free   character (s,d,t,r,*) followed by blank or
                     form   mt number
                            - the allowed characters are,
                            - s or blank = sum (or differences)
                            - d = delete
                            - t = no threshold energy corrections
                            - r = ratio
                            - * = product
           6-72      free   up to 10 lower and upper mt ranges which
                     form   will be used to define the reconstructed
                            cross section or to define mt ranges which
                            are excluded from threshold tests.

                            each mt number is defined by a continuous
                            string of digits, possibility preceeded by
                            a - (minus sign). each mt number must be
                            blank or otherwise (not a digit) delimited.

                            columns 6-72 may contain strings of digits
                            the first digit string of each pair may be
                            preceeded by a - (minus sign).

                            each line will be interpreted as follows,

                           *summation (or differences)
                            --------------------------
                            columns 1-5 = s or blank followed by the
                            mt number to be defined by summation

                            columns 6-72 = up to 10 mt range (pairs of
                            mt numbers) to be used to defined the sum.
                            if the first mt number of a pair is
                            negative the range of mt numbers is
                            subtracted - at least one range must be
                            specified.

                           *deletions
                            ---------
                            columns 1-5 = d followed by blanks

                            columns 6-72 contain up to 10 mt range
                            (pairs of mt numbers), each range defining
                            a range of mt numbers to be deleted - at
                            least one range must be specified.

                           *exclusion from threshold tests
                            ------------------------------
                            columns 1=5 = t followed by blanks

                            columns 6-72 contain up to 10 mt range
                            (pairs of mt numbers), each range defining
                            a range of mt numbers whose threshold
                            energy will not be checked - at least one
                            range must be specified.

                           *ratio
                            -----
                            columns 1-5 = r followed by the mt number
                            to be defined by a ratio

                            columns 6-72 contains 2 mt numbers to be
                            used to define the ratio.

                           *product
                            -----
                            columns 1-5 = * followed by the mt number
                            to be defined by a product

                            columns 6-72 contains 2 mt numbers to be
                            used to define the product.

                            conventions
                            -----------
                           *up to 20 deletions and 20 summations or
                            ratios or products may be specified.
                           *only 1 exclusion from threshold tests
                            may be specified (the 1 line may contain
                            up to 10 mt ranges to exclude from tests).
                           *input is terminated by inputtng 0 or
                            blank in columns 1-72 (i.e. the last
                            input line must be blank).
                           *the upper limit of each range must be at
                            least as big as the lower limit (in
                            absolute value).
                           *for reconstruction positive mt ranges will
                            be added to the sum and negative mt ranges
                            will be subtracted.
                           *if input option 2 (first input line) is
                            0 threshold exclusion is not allowed.
                           *if input option 4 (first input line) is
                            0 deletions are not allowed.
                           *if input option 5 (first input line) is
                            0 summations and ratios are not allowed.
     n-k                    if the user specifies that sections which
                            are not present in the original evaluation
                            may be created, two lines must be input for
                            each section to be created. the two lines
                            define (c1, c2, l1 and l2) for each of the
                            first two lines of the section to be
                            created. the first line also defines (mat
                            and mt). (n1, n2) are always zero on the
                            first line and will be calculated by the
                            program for the second line.
   first    1-11     e11.4  za of section to be created
   line    12-22     e11.4  awre of section to be created
           23-33      i11   l1 of section to be created
           34-44      i11   l2 of section to be created
           45-48      i4    mat of section to be created
           49-51      i3    mt of section to be created
  second    1-11     e11.4  c1 of section to be created
   line    12-22     e11.4  c2 of section to be created
           23-33      i11   l1 of section to be created
           34-44      i11   l2 of section to be created
                           *pairs of lines may be in any mat/mt order
                            (e.g., they need not be in ascending
                             mat/mt order).
                           *up to 50 pairs of lines may be used to
                            define sections to be created. the list
                            is terminated when the first line of a
                            pair contains a zero (or blank) mat and/or
                            mt.
     m-n                    if the user specifies that energies which
                            are not present in the original evaluation
                            may be inserted, one line must be input for
                            each energy to be inserted.
            1-11    e11.4   energy to be inserted
           12-15     i4     mat in which to insert energy = 0 = all
           16-18     i3     mt in which to insert energy = 0 = all
                           *up to 50 (energy, mat, mt) lines may be
                            used. the list is terminated by a blank
                            line.
                           *input may be in any (energy, mat, mt)
                            order.
                           *energy points can only be inserted within
                            the original energy range of a section -
                            this option cannot be used to extend the
                            cross section either below or above the
                            original tabulated energy range.

     example input no. 1
     ===================
     (1) use options 1-11 (all options, except insert energy points)
     (2) delete mt=900 (for example purposes only)
     (3) define the following mt numbers to be reconstructed,
         (mt=  4) = the sum of mt= 51 through  91
         (mt=103) = the sum of mt=700 through 718 (not 719)
         (mt=104) = the sum of mt=720 through 738 (not 739)
         (mt=105) = the sum of mt=740 through 758 (not 759)
         (mt=106) = the sum of mt=760 through 778 (not 779)
         (mt=107) = the sum of mt=780 through 798 (not 799)
         (mt=101) = the sum of mt=102 through 114
         (mt= 27) = the sum of mt= 18 and 101
                    (mt=101 reconstructed above used in sum).
         (mt=  3) = the sum of (mt=4)+(mt=6-9)+(mt=16-17)+(mt=22-37)
                    (mt=4 and 27 reconstructed above used in sum).
         (mt= 19) = (mt=18) - (mt=20 and 21) - (mt=38)
                    (define first change fission by subtraction to
                    allow resonance contribution from mt=18 to be
                    included in mt=19).
         (mt=  1) = the sum of mt=2 and 3
                    (mt=3 reconstructed above used in sum).
    (4) threshold energies of the following mt numbers will not be
         tested or corrected.
         mt=1, 4, 18, 19, 91, 103 through 114.
    (5) define mt=254 to be the capture to fission ratio (mt=102/18)
    (6) create mat=1300/mt=254 - note, this is necessary in order to
        have the capture to fission ratio output in the endf/b format

     note, on the following input lines the characters = ( ) + , have
     been used only to make the input more readable - these characters
     will be skipped by the program in reading input - the results
     would be the same if these characters were omitted, as long as
     all of the mt numbers are delimited, i.e., there is at least one
     non-digital character between mt numbers. note, that - (minus
     sign) is important and is used during input to define mt ranges
     which should be subtracted, e.,g., see the definition of mt=19.

     read file /endfb6/k300/lead.in and write /endfb6/k300/lead.out

     the following 21 input lines are required.

     11111111111
     /endfb6/k300/lead.in
     /endfb6/k300/lead.out
     d900
        4=( 51, 91)
      103=(700,718)
      104=(720,738)
      105=(740,758)
      106=(760,778)
      107=(780,798)
      101=(102,114)
       27=( 18, 18)+(101,101)
        3=(  4,  4)+(  6,  9)+( 16, 17)+( 22, 37)
       19=( 18, 18)-( 20, 21)-( 38, 38)
        1=(  2,  3)
     t    (  1,  1) (  4,  4) ( 18, 19) ( 91, 91) (103,114)
     r254=(102/ 18)
                  (blank line to terminate summation/deletion rules)
      2.00400+ 3 0.00000+ 0          0          01300254
      0.00000+ 0 0.00000+ 0          0          0
                  (blank line to terminate section creation rules)

     note, the deletion and threshold exclusion lines may appear in
     in any order. however, summation and ratio rules must appear in
     the order in which you want them to be executed - e.g., the
     above input will first reconstruct mt=4, which can then be used
     to contribute to the following sum to define mt=3, which in turn
     can then be used to contribute to the following sum to define
     mt=1. if the order of the input lines is changed such that mt=3
     is reconstructed before mt=4, the original mt=4 will be used in
     the summation to define mt=3. the same rules apply to calculating
     ratios, if either the numerator or denominator is to be defined
     by summation, this should be done before defining the ratio by
     input parameters.

     example input no. 2
     ===================
     (1) use options 1-11 (all options, except insert energy points)
     (2) use built-in tables for summation/deletion/threshold exclusion
         (this only requires columns 2, 4 and 5 to be set =2 on the
         first input line. the built-in rules exactly correspond to
         the input above under example no. 1, except that no mt numbers
         will be deleted.
     (3) if not present, create mat=1300/mt=1

     use the standard file names endfb.in and endfb.out (this can be
     done by leaving the second and third input lines blank).

     the following 6 input lines are required.

     12122111111


      2.00400+ 3 0.00000+ 0          0          01300  1
      0.00000+ 0 0.00000+ 0          0          0
                  (blank line to terminate section creation rules)

     example input no. 3
     ===================
     (1) use options 1-10 (all options presently implemented, except
         do not allow section creation and insert energy points).
     (2) use built-in tables for summation/deletion/threshold exclusion
         (this only requires columns 2, 4 and 5 to be set =2 on the
         first input line. the built-in rules exactly correspond to
         the input above under example no. 1, except that no mt numbers
         will be deleted.
     (3) do not create any sections.

     read file /endfb6/k300/lead.in and write /endfb6/k300/lead.out

     the following 3 input lines are required.

     1212211111
     /endfb6/k300/lead.in
     /endfb6/k300/lead.out

     example input no. 4
     ===================
     same as example no. 3, above, except insert an energy point at
     thermal for all reactions which span the thermal energy range.

     use the standard file names endfb.in and endfb.out (this can be
     done by leaving the second and third input lines blank).

     the following 5 input lines are required.

     121221111101


      2.53000- 2   0  0
                  (blank line to terminate energy inserts)

     warning
     =======
     although this program is designed to allow reactions to be defined
     by adding or subtracting reactions the user should always try to
     define reactions by summing to avoid negative cross sections. for
     example, it is possible to calculate mt=3 and define mt=1 as the
     sum of mt=2 and 3 (the recommended approach as used in the above
     input). alteratively it is possible to calculate mt=1 and define
     mt=3 as mt=1 minus mt=2 (this approach is not recommended).

     the only built-in summation rule that uses subtraction is the
     calculation of the first change fission (mt=19) as the total
     fission (mt=18) minus the second, third and fourth change fission
     (mt=20, 21, 38). this has been done to allow the resonance
     contribution, calculated by many codes and included in mt=18,
     to be consistently included in the first chance fission.



     version 84-1 (november 1984)
     version 86-1 (january 1986) *improved based on user comments
                                 *fortran-77/h version
     version 86-2 (june 1986)    *allow creation of sections of cross
                                  sections which are not present in
                                  the original evaluation
     version 88-1 (july 1988)    *option...internally define all i/o
                                  file names (see, subroutine fileio
                                  for details).
                                 *improved based on user comments.
     version 89-1 (january 1989) *psychoanalyzed by program freud to
                                  insure program will not do anything
                                  crazy.
                                 *updated to use new program convert
                                  keywords.
                                 *added livermore civic compiler
                                  conventions.
     version 89-2 (march 1989)   *added endf/b-vi summation rules and
                                  defined mf and mt numbers. program
                                  will now use mf=1, mt=451 to define
                                  the endf/b format of the data (e.g.,
                                  endf/b-vi or earlier) and use the
                                  correct summation rules for each
                                  version of the endf/b format. if
                                  mf=1, mt=451 is not present program
                                  will use endf/b-vi summation
                                  conventions as a default.
     version 90-1 (june 1990)    *updated based on user comments
                                 *added photon interaction, mf=23
     version 91-1 (june 1991)    *added fortran save option
                                 *new more consistent energy output
                                  routine
     version 92-1 (january 1992) *added option to calculate ratios,
                                  e.g., capture/fission and products,
                                  nu-bar*fission - and output the
                                  results in the endf/b format (see,
                                  below - creating ratios and products)
                                 *allow total nu-bar (mf=1, mt=452) to
                                  be used in defining ratios or
                                  products.
                                 *allow all cross sections to be put
                                  on a uniform energy grid.
                                 *note, change in input format for
                                  ranges of mt numbers
                                 *completely consistent i/o routines -
                                  to minimize computer dependence.
     version 93-1 (july 1993)    *corrected algorithm to create uniform
                                  energy grid.
     version 94-1 (january 1993) *variable endf/b data filenames
                                  to allow access to file structures
                                  (warning - input parameter format
                                  has been changed)
                                 *increased page size from 1002 to
                                  12000 data points.
                                 *close all files before terminating
                                  (see, subroutine endit)
     version 96-1 (january 1996) *complete re-write
                                 *improved computer independence
                                 *all double precision
                                 *on screen output
                                 *uniform treatment of endf/b i/o
                                 *improved output precision
                                 *defined scratch file names
                                 *increased page size from 12000 to
                                  36000 data points.
     version 99-1 (march 1999)   *corrected character to floating
                                  point read for more digits
                                 *updated test for endf/b format
                                  version based on recent format change
                                 *general improvements based on
                                  user feedback
     version 99-2 (june 1999)    *assume endf/b-vi, not v, if missing
                                  mf=1, mt-451.
                                 *fixed creation of sections
     vers. 2000-1 (february 2000)*general improvements based on
                                  user feedback
