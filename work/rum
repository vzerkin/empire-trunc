#! /bin/sh 

#SCRIPT TO RUN EMPIRE II
#cat ../util/ausiliary/herewego.au >/dev/audio 2>/dev/null
echo '                                                           '
echo '          EEEEE  M    M  PPPP   I  RRRR   EEEEE      H   H '
echo '          E      MM  MM  P   P  I  R   R  E          H   H '
echo '          EEE    M MM M  PPPP   I  RRRR   EEE    =   H   H ' 
echo '          E      M    M  P      I  R  R   E          H   H '
echo '          EEEEE  M    M  P      I  R   R  EEEEE      H   H '
echo '                                                           '
echo '                       V E R S I O N  2.13                 '
echo '                              by                           '
echo '                         M. H e r m a n                    '
echo '                                                           '
echo ' '
file=$1
if [ "$1" = "" ]
   then
    echo 'Inputs ready to run'
    echo ' '
    ls *inp
    echo ' '
    echo -n 'Choose one of the above (without .inp extention!): '
    read file
fi                          
if [ -f $file.inp ]; then
   echo 'Using input file :'  $file.inp
   else
   echo 'Input file :' $file.inp ' does not exist'
   exit
fi
cp $file.inp INPUT.DAT
#cat ../util/ausiliary/ammo.au >/dev/audio 2>/dev/null
rm $file.out $file.lst GAMMA.DAT fort.* FUSION 2>/dev/null
if [ -f $file.lev ]; then
   cp $file.lev LEVELS
   echo 'Using existing file with levels:'  $file.lev
fi
echo ' '
if [ -f $file.fus ]; then
   cp $file.fus FUSION
   echo 'Using existing file with fusion cross sections:'  $file.fus
fi
echo ' '
if [ -f $file.exf ]; then
   cp $file.exf EXFOR.DAT
   echo 'Using existing file with EXFOR data:'  $file.exf
fi
echo ' '
echo $file ' R U N N I N G  !! !  !   !    !     !'
#cat ../util/ausiliary/missile.au >/dev/audio 2>/dev/null
time nice ../source/empire
echo 'DONE !!!'
#cat ../util/ausiliary/gong.au >/dev/audio 2>/dev/null
#cat ../util/ausiliary/applause.au >/dev/audio 2>/dev/null

#MOVE CASE-RELATED FILES TO THE RIGHT PALCE

cp OUTPUT.DAT $file.out
mv LIST.DAT $file.lst
mv LEVELS $file.lev
mv EXFOR.DAT $file.exf
rm FUSION fort.70 fort.66 fort.16 2>/dev/null
# UNCOMMENT THE LINE BELOW TO REMOVE THE FILE WITH LIST OF RETRIEVED EXFOR ENTRIES 
#rm $file.res 2>/dev/null

#VIEW OUTPUT FILES

echo ' '
echo 'Your output is saved on files: '$file.lst '(long)'
echo '                               '$file.out '(short)'
echo 'Discrete levels are stored in: '$file.lev
echo ' '
echo -n 'Want to see long output? (y/n)[n]: '
read replay
if [ "$replay" = "y" ]
   then
   view $file.lst 
fi
echo ' '
echo -n 'Want to see short output? (y/n)[n]: '
read replay
if [ "$replay" = "y" ]
   then
   view $file.out 
fi
echo ' '

while [ -f $file.exf ]; do
    # RUN X4TOC4 TO TRANSLATE EXFOR FILE INTO COMPUTATIONAL FORMAT

    ln  -sf $file.exf ../util/x4toc4/exfor.in
    cd ../util/x4toc4
    ./x4toc4
    rm exfor.in
    cd ../../work
    mv ../util/x4toc4/errors $file.x42c4_errs
    mv ../util/x4toc4/x4toc4.lst $file.x42c4_lst
    mv ../util/x4toc4/c4.out $file.c4
    if [ -f $file.c4 ]; then
       echo 'EXFOR data in computational format are stored in :'$file.c4
    fi
    # COMMENT THE LINE BELOW TO KEEP FILE WITH RETRIEVED EXFOR DATA 
    rm $file.exf

    #RUN EMPEND TO FORMAT EMPIRE OUTPUT INTO ENDF

    grep ENDF  $file.inp && ../util/empend/empend <EMPEND.INP && cp OUTPUT.ENDF $file.endf
    rm OUTPUT.DAT

    # RUN PLOTC4 TO PRODUCE PLOTS

    # BUT FIRST RECONSTRUCT (N,N), (N,P), AND (N,A) REACTIONS WITH FIXUP

    cd ../util/fixup/
    rm OUTPUT.ENDF
    ln -sf ../../work/$file.endf OUTPUT.ENDF
    ./fixup
    rm OUTPUT.ENDF

    cd ../plotc4
    ln -sf ../../work/$file.c4 C4.DAT  
    ln -sf ../fixup/FIXUP.ENDF ENDF.DAT 
    echo ' '
    echo 'R U N N I G    P L O T C 4'
    ./plotc4
    rm C4.DAT ENDF.DAT ../fixup/FIXUP.ENDF
    mv plot.ps ../../work/$file.ps
    cd ../../work
    ghostview -landscape $file.ps 
done

















