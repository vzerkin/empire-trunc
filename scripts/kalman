#!/bin/bash
if [ -z $EMPIREDIR ]; then
    echo "Please set the 'EMPIREDIR' environment variable."
    echo "See Empire v3 documentation for more information."
    exit
fi

file=$1
MT=$2
MAT=$3
EXPDAT=$4
PFNS=$5
EINC=$6   # Incident energy for which to fit PFNS (in MeV)
#CRCOV=$7

if [ -z $file ]; then
echo "INPUT FILE NOT SPECIFIED"
exit
fi
if [ ! -s $file.endf ]; then
   echo "ENDF FILE NOT FOUND ($file.endf)"
   exit 0
fi
if [ -z $MT -o "$MT" = "0" ]; then
   MT="1 2 3 4 16 17 18 102 103 107"
fi
if [ -z $MAT -o "$MAT" = "0" ]; then
   # MAT="1111"
   MAT=$($EMPIREDIR/util/mkendf/getmtn ${file}.endf)
fi
if [ -z $EXPDAT ]; then
   EXPDAT="0"
fi
if [ -z $PFNS ]; then
   PFNS=0
fi
if [ -z $EINC ]; then
   EINC="NONE"
fi
#if [ -z $CRCOV ]; then
#   CRCOV="0"
#fi
if [ ! -s $file-inp.sen ]; then
   echo "PARAMETER FILE NOT FOUND ($file-inp.sen)"
   exit 1
fi

if [ $PFNS = 0 ]; then
   echo "Fitting only cross sections from $file-mat.sen."
   if [ ! -s $file.xsc ]; then
     echo "CROSS SECTIONS FILE NOT FOUND ($file.xsc)"
     exit 2
   fi
   if [ ! -s $file-mat.sen ]; then
     echo "SENSITIVITY FILE NOT FOUND ($file-mat.sen)"
     exit 3
   fi
elif [ $PFNS = 1 ]; then
   echo "Fitting only prompt fission neutron spectra from $file-pfns-full-mat.sen."
   if [ ! -s $file-pfns.out ]; then
      echo "PROMPT NEUTRON FISSION SPECTRA FILE NOT FOUND ($file-pfns.out)"
      exit 4
   fi
   if [ ! -s $file-pfns-full-mat.sen ]; then
     echo "SENSITIVITY FILE NOT FOUND ($file-pfns-full-mat.sen)"
     echo "ALLOWING TO CONTINUE TO COMPARE INCIDENT ENERGIES, EVEN THOUGH pnt2kal WILL CRASH"
#    exit 5
   fi
else
   echo "Option PFNS = $PFNS has not been implemented yet."
   exit 6
fi

rm -f fort.* check.out $file*.gpd $file-{c4,par,*-err}.kal ENERGYANDINDEX.TMP
#rm check.out 2>/dev/null
#rm $file-*-c4.gpd 2>/dev/null
#rm $file-{c4,par,*-err}.kal 2>/dev/null
#rm ENERGYANDINDEX.TMP 2>/dev/null
#rm $file-33-*.cov  2>/dev/null

for k in $MT; do

    echo "MT= ${k}"
    echo $file ${k} $MAT $EXPDAT $PFNS $EINC > INPUT.D
    rm -f KALMAN.INP

    if [ "$PFNS" -eq 0 ]
    then
      echo  "Running c4tokal"
      if ! $EMPIREDIR/util/kalman/c4tokal < INPUT.D
      then
         echo " Error running c4tokal"
         exit
      fi
    else
      echo  "Running pnt2kal"
      $EMPIREDIR/util/kalman/pnt2kal < INPUT.D
      if [ ! -s ENERGYANDINDEX.TMP ]; then
        echo "ERROR: pnt2kal ended abnormally! Aborting kalman script... "
        exit
      fi
      read NE INDEX EINC < ENERGYANDINDEX.TMP
      i=1
      while [ $i -le $NE ]
      do
        printf -v l "%3d\n" $i
        grep "^.\{49,51\}$l" fort.75 >>$file-PFNS-${i}-c4.gpd
        i=$(($i + 1))
      done
    fi

    echo  "Running genkal"
    $EMPIREDIR/util/kalman/genkal.exe <INPUT.D >check.out

    if [ -s check.out ]; then
       exit
    fi

    # EXPERIMENTAL DATA AND THEIR CORRELATIONS

    if [ "$EXPDAT" != 0 ]; then
       if [ ! -s $file-expxsc.kal ]; then
	  cp fort.10 $file-expxsc.kal
       else
	  cp $file-expxsc.kal fort.10
       fi
       if [ ! -s $file-expcorr.kal ]; then
	  cp fort.12 $file-expcorr.kal
       else
	  cp $file-expcorr.kal fort.12
       fi
    else
       rm fort.10
       rm fort.11
       rm fort.12
    fi

    # CORRELATIONS AMONG MODEL PARAMETERS

    if [ ! -s $file-parcorr.kal ]; then
       cp fort.52 $file-parcorr.kal
    else
       cp $file-parcorr.kal fort.52
    fi

    if [ "$EXPDAT" != 0 ]; then
        kalinp=''
        if [ -s $file-inp.kal ]; then
            echo "use existing Kalman input y/N?"
            read kalinp
        fi
        if [ -n "$kalinp" ] && ( [ ${kalinp:0:1} = "y" ] || [ ${kalinp:0:1} = "Y" ] ); then
            cp $file-inp.kal KALMAN.INP
        else
            echo 'EDIT KALMAN INPUT'
            emacs KALMAN.INP
        fi
    fi

    echo  "Running kalman"
    $EMPIREDIR/util/kalman/kalman3.exe <KALMAN.INP >$file-out.kal

    mv fort.13 $file-xsc.kal  # Should give a different name for this file in the pfns case, but which? '-pfns.kal' is taken.
    mv fort.14 $file-cov.kal
    mv fort.15 $file-par.kal
    cat fort.16 fort.32 > fort.48
 
    echo  "Running kalend"
    $EMPIREDIR/util/kalman/kalend <INPUT.D

    if [ $PFNS -eq 0 ]; then
      cp $file-${k}-c4.gpd expxscplot.d
    else
      cp $file-PFNS-${INDEX}-c4.gpd expxscplot.d
    fi

    #PLOT DATA ONLY WITH EXPERIMENTAL DATA

    if [ "$EXPDAT" != 0 ]; then
      if [ "$PFNS" -eq 0 ]
      then
        gnuplot $EMPIREDIR/util/kalman/corr.gp >/dev/null
      else
        gnuplot $EMPIREDIR/util/kalman/corr-pfns.gp >/dev/null
      fi
    fi

    mv corrplot.d $file-${k}-cov.gpd # Should give a different name for this file in the pfns case, but which? 
    mv xscplot.d  $file-${k}-xsc.gpd # Should give a different name for this file in the pfns case, but which? 

    rm expxscplot.d

# CROSS-REACTION CORRELATIONS TAKEN FROM KALMAN
#    if [ "$CRCOV" != 0 ]; then
#     rm $file-33-*.cov
#     $EMPIREDIR/util/kalman/kalend3.exe <INPUT.D
##     for j in "  1" "  2" "  3" "  4" " 16" " 18" "102" "103" "107"; do
#     for j in "  1" "  2" "  3" "  4" " 16" " 17" " 18" "102"; do
#      l=`echo ${j}`
#      grep "^.\{70,75\}33$j" fort.112 >$file-33-$l.cov
#      echo "                                                                 0${MAT}33  099999" >> $file-33-$l.cov
#     done
#    fi

    echo 'COMPLETE ...'

done

rm INPUT.D
rm KALMAN.INP
rm -f fort.{1*,50,52,75}
rm check.out
rm ENERGYANDINDEX.TMP 2>/dev/null

exit

# l=`echo ${#k}` IT GIVES THE LENGTH OF THE STRING K
