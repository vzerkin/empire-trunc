#!/bin/bash
#script to format EMPIRE III output
if [ -z $EMPIREDIR ]; then
    echo "Please set the 'EMPIREDIR' environment variable."
    echo "See Empire v3 documentation for more information."
    exit
fi

file=$1
MATid=$2
work=`pwd`

if [ "$1" = "" ]
   then
echo 'Inputs ready to run'
echo ' '
ls *out
echo ' '
echo -n 'Choose one of the above (without .out extention!): '
read file
fi

if [ "$2" = "" ]; then
  MATid='1111'
fi
# For multirun Pt isotopes only (addjust for other isotope chains)
if   [ "$file" = "Pt190" ]; then
   MATid='7825'
elif [ "$file" = "Pt191" ]; then
   MATid='7828'
elif [ "$file" = "Pt192" ]; then
   MATid='7831'
elif [ "$file" = "Pt193" ]; then
   MATid='7834'
elif [ "$file" = "Pt194" ]; then
   MATid='7837'
elif [ "$file" = "Pt195" ]; then
   MATid='7840'
elif [ "$file" = "Pt196" ]; then
   MATid='7843'
elif [ "$file" = "Pt197" ]; then
   MATid='7846'
elif [ "$file" = "Pt198" ]; then
   MATid='7849'   
fi


# Checking if EMPIRE run sucessfully (at least .out was produced)
if [ ! -f $file.out ]; then
echo ' '
echo ' '
echo 'ERROR: EMPIRE output file '$file'.out is missing'
echo '     execute EMPIRE before formatting  !            '
echo ' '
echo ' Press any key to exit or <CTRL>-C to abort ...'
fi
# Deleting previous file if exist
if [ -s $file-e.endf ]; then
  rm $file-e.endf 2>/dev/null
fi

sMon=(NON JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC)
iMon=`date +%m`
tDat=${sMon[iMon]}`date +%y`

#run EMPEND to format EMPIRE output into ENDF
# EMPEND takes .out file, writes endf. Also needs mesh, thinning, and MAT:
cat >EMPEND.INP <<EOF
$file.out                                                                                               
$file-e.endf                                                                   
1 
-1.0
$MATid
-1
LANL       EVAL-${tDat} M.Herman & T.Kawano              
91
EOF


$EMPIREDIR/util/empend/empend <EMPEND.INP
rc=$?
mv empend.log $file-log.empend
rm EMPEND.INP empmf1.tmp
if [ $rc != 0 ] 
then
   echo ' '
   echo ' EMPEND crashed, check log file '$file'-log.empend for diagnostics!'
   echo ' Please notify Dr.A.Trkov at a.trkov@iaea.org                      '
   echo ' '
   echo ' Press any key to exit or <CTRL>-C to abort ...'
fi


# RUN ENDRES (IF RESONANCE FILE IS PRESENT)
if [ -s $file-res.endf ]; then
   ln -sf $EMPIREDIR/util/endres/ENDRES.INP ENDRES.INP
   rm $file.endf 2>/dev/null
   ln -sf $file-e.endf empire.end
   ln -sf $file-res.endf ENDRES.DAT
   $EMPIREDIR/util/endres/endres < ENDRES.INP
   mv endf.dat $file-endres.endf
   mv endres.lst $file-log.endres
   rm ENDRES.INP empire.end ENDRES.DAT 2>/dev/null
fi

# Saving previous file if exist
if [ -s $file.endf ]; then
  mv $file.endf $file-prev.endf
fi

# RUN STAN (In:$file-endres.endf or $file-e.endf;  Out:$file.endf)

if [ -s $file-endres.endf ]; then
   cp $file-endres.endf $file.endf 
else 
   cp $file-e.endf $file.endf
fi
echo "Running STAN"
$EMPIREDIR/scripts/stanef $file 

# remove left-over files
rm INPUT 2>/dev/null
rm angdis.cur 2>/dev/null
rm angdis.pnt 2>/dev/null

# remove empty files
find . -empty -type f -delete

# RUN LINEAR (In:ENDFB.OUT Out:LINEAR.OUT)

rm LINEAR.INP 2>/dev/null
ln -sf $EMPIREDIR/util/prepro/LINEAR.INP LINEAR.INP
ln -sf $file.endf ENDFB.OUT
$EMPIREDIR/util/prepro/linear <LINEAR.INP
mv -f LINEAR.OUT  $file.endf
mv -f LINEAR.LST $work/$file-log.linear
rm ENDFB.OUT LINEAR.INP 2>/dev/null

# RECONSTRUCT INELASTIC, (N,P) AND (N,A) REACTIONS WITH FIXUP
# moved to a new script "rec-ch-part" called from a GUI(Execute)
$EMPIREDIR/scripts/rec-ch-part $file $MATid

exit
