#!/bin/bash
if [ -z $EMPIREDIR ]; then
    echo "Please set the 'EMPIREDIR' environment variable."
    echo "See Empire v3 documentation for more information."
    exit
fi

file=$1
MT=$2
MAT=$3
EXPDAT=$4

GENKAL=genkal
C4TOKAL=c4tokal
KALMAN=kalman
KALEND=kalend

if [ -z $file ]; then
echo "INPUT FILE NOT FOUND"
exit
fi
if [ -z $MT -o "$MT" = "0" ]; then
    echo "You set MT to 0, running on MT=1, 2, 18 and 102"
#   MT="1 2 4 16 102 103 107"
   MT="1 2 18 102"
fi
if [ -z $MAT ]; then
   MAT="1111"
fi
if [ -z $EXPDAT ]; then
   EXPDAT="1"
fi

if [ ! -s $file.endf ]; then
   echo "ENDF FILE NOT FOUND ($file.endf)"
fi
if [ ! -s $file.xsc ]; then
   echo "CROSS SECTIONS FILE NOT FOUND ($file.xsc)"
   exit 1
fi
if [ ! -s $file-inp.sen ]; then
   echo "PARAMETER FILE NOT FOUND ($file-inp.sen)"
   exit 2
fi
if [ ! -s $file-mat.sen ]; then
   echo "SENSITIVITY FILE NOT FOUND ($file-mat.sen)"
   exit 3
fi
if [ ! -s $file.c4 ]; then
   echo "C4 FILE NOT FOUND ($file.c4)"
   exit 4
fi


rm INPUT.D 2>/dev/null
rm KALMAN.INP 2>/dev/null
rm fort.* 2>/dev/null
rm check.out 2>/dev/null
rm $file-*-c4.gpd 2>/dev/null
rm $file-{c4,par}.kal 2>/dev/null
rm $file-33-*.cov  2>/dev/null


# copy from .c4 to -c4.kal (used for KALMAN input):
#for j in "  1" "  2" "  4" " 16" "102" "103" "107"; do
for j in "  1" "  2" " 18" "102"; do
    grep "^.\{12,19\}  3 $j " $file.c4 >>$file-c4.kal
done

echo ${MT}

for k in $MT; do

    if [ -s INPUT.D ]; then
       rm INPUT.D
    fi

    cat >INPUT.D <<EOF
$file ${k} $MAT $EXPDAT 0 0.0
EOF
    echo "*** Running" $GENKAL "on MT=" ${k} "***"
    $EMPIREDIR/util/kalman/$GENKAL <INPUT.D >check.out

    if [ -s check.out ]; then
       exit
    fi

    if [ -s KALMAN.INP ]; then
       rm KALMAN.INP
    fi

    echo "*** Running" $C4TOKAL "on MT=" ${k} "***"
    $EMPIREDIR/util/kalman/$C4TOKAL <INPUT.D #>KALMAN.INP


    # EXPERIMENTAL FILE FOR PLOTTING (GNUPLOT) (may have been handled by c4tokal)
    if [ -s fort.75 ];  then
        for j in "  1" "  2" "102"; do # "  4" " 16" "103" "107"; do
            l=`echo ${j}`
            grep "^.\{40,42\}$j" fort.75 >>$file-${l}-c4.gpd
        done
    fi

    # EXPERIMENTAL DATA AND THEIR CORRELATIONS
    if [ "$EXPDAT" != 0 ]; then
       if [ ! -s $file-expxsc.kal ]; then
           cp fort.10 $file-expxsc.kal
       else
           cp $file-expxsc.kal fort.10
       fi
       if [ ! -s $file-expcorr.kal ]; then
           cp fort.12 $file-expcorr.kal
       else
           cp $file-expcorr.kal fort.12
       fi
    else
       rm fort.10
       rm fort.11
       rm fort.12
    fi

    # CORRELATIONS AMONG MODEL PARAMETERS
    if [ ! -s $file-parcorr.kal ]; then
       cp fort.52 $file-parcorr.kal
    else
       cp $file-parcorr.kal fort.52
    fi

#    # DON'T RUN THIS FROM GUI???
#    if [ "$EXPDAT" != 0 ]; then
#       echo 'EDIT KALMAN INPUT'
#       xterm -e vim KALMAN.INP
#    fi


    echo "*** Running" $KALMAN "***"
    $EMPIREDIR/util/kalman/$KALMAN

    mv KALMAN.INP $file-inp.kal
    mv KALMAN.OUT $file-out.kal
    mv fort.13 $file-xsc.kal
    mv fort.14 $file-cov.kal
    mv fort.15 $file-par.kal
    #    exit

    echo  "Running kalend"
    $EMPIREDIR/util/kalman/kalend < INPUT.D

    cp ${file}-${k}-c4.gpd expxscplot.d

    #PLOT DATA ONLY WITH EXPERIMENTAL DATA

    if [ "$EXPDAT" != 0 ]; then
      gnuplot $EMPIREDIR/util/kalman/corr.gp >/dev/null
    fi

    # Should consider a different name for these files in the pfns case, but which?
    mv corrplot.d $file-${k}-cov.gpd
    mv xscplot.d  $file-${k}-xsc.gpd
#    mv  $file-1-err.kal $file-${k}-err.kal

    rm expxscplot.d

    echo 'COMPLETE ...'
    echo

done

rm INPUT.D
rm KALMAN.INP
rm fort.{1*,50,52,75}
rm check.out

exit # l=`echo ${#k}` IT GIVES THE LENGTH OF THE STRING K
