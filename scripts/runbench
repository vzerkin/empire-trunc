#! /bin/sh -
# Script to run Empire for all the input files in benchmarks directory, 
# keeping only the original files and the .lst, .out and .xsc files
#
echo
echo "Type one of the following commands:"
echo
echo " 'runbench run all' to run ALL benchmarks"
echo " 'runbench run bench-name' to run benchmark bench-name"
echo " 'runbench clean all' to remove all files except the original benchmark inputs (WARNING: benchmark results reset!)"
echo " 'runbench diff bench-name' to compare benchmarks output with existing reference files (using diff command)"
echo " 'runbench kompare bench-name' to compare benchmarks output with existing reference files (using kompare)"
echo " 'runbench replace all' to replace existing reference files with benchmarks outputs"
echo
echo "Current parameters:"
echo "Command line:" $0 $1 $2 $3
#echo par1=$0
#echo par2=$1
#echo par3=$2
#echo par3=$3
echo EMPIREDIR=$EMPIREDIR
echo ' '
echo ' Press <Enter> key to  to execute the command ...'
read yes
option=$1
targetfile=$2

filelist="a-ni58-pcross       
          d-au197             
          fe54-blind          
          fe54-vib-CC-direct-2
          HI-pcross-ccfus     
          n_eu153-dir-msc-msd 
          ni62-th-EGSM        
          n-na23-prim-gam     
          n-zr92-soft-dccomp 
          n-zr92-soft-dccomp-dir2           
          p-th232             
          p-tl205             
          test-HRTW-fis       
          test-LD-mo100       
          test-PE-models      
          th232-rot-vib       
          u235-blind          
          u235-pfns-nubar     
          u238-blind          
          u238-gf             
          u238-HFB-num-fis    
          u238-HFB-num-fis-tun
          u238-HFB-par-fis    
          u238-rigid-soft-omp 
          u238-rot-CC-direct-2
		  nb93-high-spin"

echo option    =$option
echo targetfile=$targetfile


cd $EMPIREDIR/benchmarks

if [ "$targetfile" = "all" ] ; then
   files=$filelist
elif [ -z $targetfile ] ; then
   echo "Please type in the desired benchmark or 'all' to work on all of them"
   exit
else
   match=0
   for file in $filelist
   do
     if [ "$targetfile" = "$file" ] ; then
        match=1
     fi
  #  test "$targetfile" = "$file"
   done
   if [ "$match" = "1" ] ; then   
      files="$targetfile"
   else
      echo "$targetfile.inp is not in the list of benchmark files!"
      exit
   fi
fi


suffix_list="xsc lst out"


if [ "$option" = "run" ] ; then
   echo "Running benchmarks..."

   mkdir TeMpOrArYdIr
#  Storing auxiliary files that have to be kept
   cp u238-rigid-soft-omp-lev.col th232-rot-vib-lev.col u238-HFB-num-fis-tun-inp.fis TeMpOrArYdIr/ >& /dev/null
#  Storing input and reference files
   cp *.inp *ref* TeMpOrArYdIr/ >& /dev/null
   error=0
   for file in $files
   do
     echo "" 1>&2
     echo ".......Running benchmark on [$file]......." 1>&2
     $EMPIREDIR/scripts/runE $file
     grep -q 'CALCULATIONS COMPLETED SUCCESSFULLY' $file.lst
     if [ "$?" = 1 ] ; then
       error=1
       echo "#######Calculations Failed#######" 1>&2
     else
       echo ".......Calculations Completed Successfully......." 1>&2
     fi
     cp $file.inp $file-ref.* TeMpOrArYdIr/ >& /dev/null
     for suffix in $suffix_list
     do
       cp $file.$suffix TeMpOrArYdIr/
     done
   done

   rm * >& /dev/null
   rm -r *-tl  >& /dev/null
   mv TeMpOrArYdIr/* ./
   rm -r TeMpOrArYdIr >& /dev/null

   if [ "$error" = 1 ] ; then
     echo "ERROR!! At least one of the benchmarks failed to run successfully!"
     exit 1
   fi

elif [ "$option" = "clean" ] ; then
# cleans the benchmarks directory, keeping only original files corresponding to specific input (or all)
   mkdir TeMpOrArYdIr
   mv *-ref.*   TeMpOrArYdIr/
   mv *-lev.col TeMpOrArYdIr/
   mv *.lev     TeMpOrArYdIr/
   mv u238-HFB-num-fis-tun-inp.fis TeMpOrArYdIr/
   cp *.inp     TeMpOrArYdIr/ 
   for file in $files
   do
     $EMPIREDIR/scripts/clean $file
   done
   rm * >& /dev/null
   mv TeMpOrArYdIr/* ./
   rm -r TeMpOrArYdIr >& /dev/null


elif [ "$option" = "diff" ] ; then
# use diff -y  command to compare files .xsc, lst, and .out from benchmark runs and existing reference files
#
   for file in $files
   do
     for suffix in $suffix_list
     do
       string=$( wc -L $file.$suffix  )
       read length1 rubbish <<< "$string"
       string=$( wc -L $file-ref.$suffix  )
       read length2 rubbish <<< "$string"
       if [ $length1 -gt $length2 ]; then
         length=$(( ($length1 + 10)*2 ))
       else
         length=$(( ($length2 + 10)*2 ))
       fi
       diff --expand-tabs --side-by-side --width=$length $file.$suffix $file-ref.$suffix > diff.$file.$suffix
     done
   done
   
elif [ "$option" = "diffpy" ] ; then
# use diff -y  command to compare files .xsc, lst, and .out from benchmark runs and existing reference files
#
   for file in $files
   do
     for suffix in $suffix_list
     do
        echo diff.py -m -o diff.$file.$suffix.html $file.$suffix $file-ref.$suffix
        diff.py -m -o diff.$file.$suffix.html $file.$suffix $file-ref.$suffix
     done
   done
   
elif [ "$option" = "kompare" ] ; then
# use kompare to compare files .lst and .xsc from benchmark runs and existing reference files
#
   echo "Running kompare..."
   for file in $files
   do
     for suffix in $suffix_list
     do
       kompare $file.$suffix $file-ref.$suffix            
     done
   done

elif [ "$option" = "replace" ] ; then
#  renames the files .xsc and .lst to -ref.xsc and -ref.lst to serve as reference
#  using linux 'mv' command
   echo 'Renaming cross-section and .lst files for reference'
   for file in $files
   do
     for suffix in $suffix_list
     do   
       mv $file.$suffix $file-ref.$suffix
     done
   done



else
   echo
   echo "Current options are:"
   echo
   echo " 'runbench run' to run benchmarks"
   echo " 'runbench clean' to remove temporary files and keep only original ones"
   echo " 'runbench diff' to compare benchmarks output with existing reference files (using diff command)"
   echo " 'runbench kompare' to compare benchmarks output with existing reference files (using kompare)"
   echo " 'runbench replace' to replace existing reference files with benchmarks outputs"
   echo
fi   
