Ccc   * $Rev: 4456 $
Ccc   * $Author: rcapote $
Ccc   * $Date: 2015-08-28 16:58:23 +0200 (Fr, 28 Aug 2015) $

C-------------------------------------------------------------------------------
C     Customized version of ECIS2013 (some printing added)
C
      SUBROUTINE ECIS(fnamei)                                           RCN  RCN
C 03/27/14 (22:20) Modified by R. Capote                                RCN  RCN
C   Full matrices P, P' (diag) and U matrices printed if EW active      RCN  RCN
C   EMPIRE input/output modifications implemented                       RCN  RCN
C   One possible inconistency corrected after LECT-423                  RCN  RCN 
C-----------------------------------------------------------------------RCN  RCN   
C 08/09/13                                                      ECIS12  ECIS-000
C                                                                       ECIS-001
C THE COMMON /INOUT/ IS USED IN ANY SUBROUTINE WITH STANDARD INPUT OR   ECIS-002
C                            OUTPUT AND SAVE OR RESTART A SEARCH.       ECIS-003
C FOR THE COMMON  /DCONS/ SEE CALC.                                     ECIS-004
C                                                                       ECIS-005
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /INOUT/:                     ECIS-006
C  MR:        STANDARD INPUT FILE (USUAL VALUE 5).                      ECIS-007
C  MW:        STANDARD OUTPUT FILE (USUAL VALUE 6).                     ECIS-008
C  MS:        FILE TO SAVE OR RESTART A SEARCH IN REST (USUAL VALUE 8). ECIS-009
C                                                                       ECIS-010
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     ECIS-011
C  CM:        ATOMIC MASS CONSTANT ENERGY EQUIVALENT IN MEV             ECIS-012
C  CHB:       PLANCK CONSTANT OVER 2 PI TIMES C IN MEV FM               ECIS-013
C  CZ:        INVERSE FINE-STRUCTURE CONSTANT                           ECIS-014
C   DEFINED:  CM,CHB,CZ                                                 ECIS-015
C                                                                       ECIS-016
C FROM CODATA RECOMMENDED VALUES OF THE FUNDAMENTAL PHYSICAL CONSTANTS  ECIS-017
C 2012 BY PETER J. MOHR, BARRY N. TAYLOR, DAVID B. NEWELL.              ECIS-018
C REVIEW OF MODERN PHYSICS 84 1527-1605 (2012)                          ECIS-019
C     CM=931.494061    +/- 0.000021  MEV/C**2                           ECIS-020
C     CHB=197.3269718  +/- 0.0000044 MEV FM                             ECIS-021
C     CZ=137.035999074 +/- 0.000000044 WITHOUT DIMENSION                ECIS-022
C                                                                       ECIS-023
C***********************************************************************ECIS-024
      IMPLICIT REAL*8 (A-H,O-Z)                                         ECIS-025
C                                                                       RCN  RCN
C Dummy arguments                                                       RCN  RCN
C                                                                       RCN  RCN
      CHARACTER*(*) fnamei                                              RCN  RCN
      PARAMETER (IDMX=35000000)                                         ECIS-026
      CHARACTER*4 CW(2,IDMX)                                            ECIS-027
      DIMENSION NW(2,IDMX),DW(IDMX)                                     ECIS-028
      EQUIVALENCE (DW,NW,CW,W)                                          ECIS-029
      COMMON DW                                                         ECIS-030
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            ECIS-031
      COMMON /INOUT/ MR,MW,MS                                           ECIS-032
      LOGICAL fexp                                                      RCN  RCN
      CHARACTER*20 fname                                                RCN  RCN
      LOGICAL unformat                                                  RCN  RCN
      COMMON /NFORM/unformat,fname                                      RCN  RCN
      CHARACTER*80 cline                                                RCN  RCN
      DATA unformat/.TRUE./                                             RCN  RCN
      REAL*8            AMUmev, PI, CETa, CSO, AMPi,                    
     &                  ELE2, HHBarc, AMUneu, AMUpro, AMUele, PIx4
      COMMON /CONSTANT/ AMUmev, PI, CETa, CSO, AMPi,                    
     &                  ELE2, HHBarc, AMUneu, AMUpro, AMUele, PIx4
C     CM=931.494061D0                                                   ECIS-033
C     CHB=197.3269718D0                                                 ECIS-034
      CZ=137.035999074D0                                                ECIS-035
      CM  = AMUmev
      CHB = HHBarc
C
      unformat = .TRUE.                                                 RCN  RCN
      MR=111                                                            RCN  RCN
      MW=96                                                             RCN  RCN
      MS=97                                                             RCN  RCN
C     MR=5                                                              ECIS-036
C     MW=6                                                              ECIS-037
C     MS=8                                                              ECIS-038
C     WRITE(*,*) 'Input filename (without ext)'                         RCN  RCN
C     READ(*,'(A)') fname                                               RCN  RCN
      fname = TRIM(fnamei)                                              RCN  RCN
      OPEN (MR,FILE = TRIM(fname)//'.inp')                              RCN  RCN
      READ(MR,*,END=100,ERR=100) cline                                  RCN  RCN
      REWIND (MR)                                                       RCN  RCN
      OPEN (58,FILE = TRIM(fname)//'.cs')                               RCN  RCN
      OPEN (55,FILE = TRIM(fname)//'.dat')                              RCN  RCN
      OPEN (59,FILE = TRIM(fname)//'.ics')                              RCN  RCN
      OPEN (60,FILE = TRIM(fname)//'.smat')                             RCN  RCN
      OPEN (61,FILE = 'file61')                                         RCN  RCN
      OPEN (62,FILE = 'file62')                                         RCN  RCN
      if(unformat) then                                                 !zv-2013
        OPEN (63,FILE = TRIM(fname)//'.tlj',form='unformatted')         !zv-2013
      else                                                              !zv-2013
        OPEN (63,FILE = TRIM(fname)//'.tlj')                            !zv-2013
      endif                                                             !zv-2013
      OPEN (64,FILE = TRIM(fname)//'.exp')                              RCN  RCN
      OPEN (65,FILE = TRIM(fname)//'.leg')                              RCN  RCN
      OPEN (66,FILE = TRIM(fname)//'.ang')                              RCN  RCN
C     OPEN (85,FILE = 'file85')                                         RCN  RCN
C     OPEN (86,FILE = 'file86')                                         RCN  RCN
C     OPEN (87,FILE = 'file87')                                         RCN  RCN
C     OPEN (88,FILE = 'file88')                                         RCN  RCN
C     OPEN (89,FILE = 'file89')                                         RCN  RCN
C     OPEN (90,FILE = 'file90')                                         RCN  RCN
C     OPEN (91,FILE = 'file91')                                         RCN  RCN
C     OPEN (93,FILE = 'file93')                                         RCN  RCN
      if(unformat) then                                                 !zv-2013
        OPEN (94,FILE = 'file94',form='unformatted')                    !zv-2013
      else                                                              !zv-2013
        OPEN (94,FILE = 'file94')                                       !zv-2013
      endif                                                             !zv-2013
      OPEN (MW,FILE = TRIM(fname)//'.out')                              RCN  RCN
      OPEN (MS,FILE = 'file97',form='unformatted')                      RCN  RCN

      CALL THORA(MW)                                                    RCN  RCN
      CALL CALC(NW,CW,DW,IDMX)                                          ECIS-039
      CALL THORA(MW)                                                    RCN  RCN
      CLOSE (58)                                                        RCN  RCN
      CLOSE (55)                                                        RCN  RCN
      CLOSE (59)                                                        RCN  RCN
      CLOSE (60)                                                        RCN  RCN
      CLOSE (61,STATUS = 'delete')                                      RCN  RCN
      CLOSE (62,STATUS = 'delete')                                      RCN  RCN
      CLOSE (63)                                                        RCN  RCN
      INQUIRE(64,exist=fexp)                                            RCN  RCN
      IF (fexp) CLOSE (64)                                              RCN  RCN
      CLOSE (65)                                                        RCN  RCN
      CLOSE (66)                                                        RCN  RCN
C     CLOSE (85,STATUS = 'delete')                                      RCN  RCN
C     CLOSE (86,STATUS = 'delete')                                      RCN  RCN
C     CLOSE (87,STATUS = 'delete')                                      RCN  RCN
C     CLOSE (88,STATUS = 'delete')                                      RCN  RCN
C     CLOSE (89,STATUS = 'delete')                                      RCN  RCN
C     CLOSE (90,STATUS = 'delete')                                      RCN  RCN
C     CLOSE (91,STATUS = 'delete')                                      RCN  RCN
C     CLOSE (93,STATUS = 'delete')                                      RCN  RCN
      INQUIRE(94,exist=fexp)                                            RCN  RCN
      IF (fexp) CLOSE (94,STATUS = 'delete')                            RCN  RCN
      CLOSE (MW)                                                        RCN  RCN
      CLOSE (MS,STATUS = 'delete')                                      RCN  RCN
      CLOSE (MR)                                                        RCN  RCN
      INQUIRE(111,exist=fexp)                                           RCN  RCN
      IF (fexp) CLOSE (111)                                             RCN  RCN
      INQUIRE(112,exist=fexp)                                           RCN  RCN
      IF (fexp) CLOSE (112)                                             RCN  RCN
      INQUIRE(121,exist=fexp)                                           RCN  RCN
      IF (fexp) CLOSE (121)                                             RCN  RCN
      INQUIRE(122,exist=fexp)                                           RCN  RCN
      IF (fexp) CLOSE (122)                                             RCN  RCN
      INQUIRE(123,exist=fexp)                                           RCN  RCN
      IF (fexp) CLOSE (123)                                             RCN  RCN
C     INQUIRE(124,exist=fexp)                                           RCN  RCN
C     IF (fexp) CLOSE (124)                                             RCN  RCN
      INQUIRE(125,exist=fexp)                                           RCN  RCN
      IF (fexp) CLOSE (125)                                             RCN  RCN
      RETURN                                                            ECIS-040
 100  CLOSE (MR,STATUS = 'delete')                                      RCN  RCN
      RETURN                                                            ECIS-040
      END                                                               ECIS-041
C 19/11/05                                                      ECIS12  MEMO-000
      SUBROUTINE MEMO(NAME,IDMT,NPLACE)                                 MEMO-001
C CONTROL OF MEMORY AREA.                                               MEMO-002
C INPUT:     NAME:    NAME OF CALLING SUBROUTINE.                       MEMO-003
C            IDMT:    PREVIOUS SPACE.                                   MEMO-004
C            NPLACE:  REQUESTED SPACE.                                  MEMO-005
C                                                                       MEMO-006
C THIS SUBROUTINE CAN BE REPLACED BY A SUBROUTINE INCREASING THE COMMON MEMO-007
C IF IT IS POSSIBLE.                                                    MEMO-008
C***********************************************************************MEMO-009
      CHARACTER*4 NAME                                                  MEMO-010
      COMMON /INOUT/ MR,MW,MS                                           MEMO-011
      IF (IDMT.GE.NPLACE) RETURN                                        MEMO-012
      WRITE (MW,1000) IDMT,NPLACE,NAME                                  MEMO-013
      STOP                                                              MEMO-014
 1000 FORMAT (' NOT ENOUGH PLACE .....   ',I10,' MEMORIES ALLOWED',I10,'MEMO-015
     1 MEMORIES REQUESTED.'///' IN ',A4,'  ...  STOP  ...')             MEMO-016
      END                                                               MEMO-017
C 07/02/06                                                      ECIS12  HORA-000
      SUBROUTINE HORA                                                   HORA-001
C GIVES THE TIME ELAPSED SINCE THE FIRST CALL AND SINCE THE LAST CALL.  HORA-002
C***********************************************************************HORA-003
      DIMENSION A(2)                                                    HORA-004
      COMMON /INOUT/ MR,MW,MS                                           HORA-005
      DATA M0,M2 /2*0/                                                  HORA-006
      SAVE M0,M2                                                        HORA-007
      M1=INT(1000.*ETIME(A))                                            HORA-008
      N5=M1-M2                                                          HORA-009
      NT=M1-M0                                                          HORA-010
      M2=M1                                                             HORA-011
      NS=NT/1000                                                        HORA-012
      NT=NT-1000*NS                                                     HORA-013
      NM=NS/60                                                          HORA-014
      NS=NS-60*NM                                                       HORA-015
      NH=NM/60                                                          HORA-016
      NM=NM-60*NH                                                       HORA-017
      WRITE (MW,1000) NH,NM,NS,NT,N5                                    HORA-018
      RETURN                                                            HORA-019
 1000 FORMAT (' *** TOTAL TIME ***',I3,'H',I3,'MN',I3,'S',I4,' MS',10X,'HORA-020
     1DIFFERENCE SINCE LAST CALL',I9,' MILLISECONDS.')                  HORA-021
      END                                                               HORA-022
C 15/08/12                                                      ECIS12  CALC-000
      SUBROUTINE CALC(NW,CW,DW,IDMX)                                    CALC-001
C MAIN SUBROUTINE OF THE PROGRAM.                                       CALC-002
C INPUT:     NW:      WORKING AREA FOR INTEGERS.                        CALC-003
C            CW:      WORKING AREA FOR CHARACTERS.                      CALC-004
C            DW:      WORKING AREA FOR DOUBLE PRECISION.                CALC-005
C            IDMX:    LENGTH OF DW.                                     CALC-006
C               NW,CW,DW ARE IN EQUIVALENCE BY CALL.                    CALC-007
C                                                                       CALC-008
C THE COMMON /ADDRE/ IS USED IN CALC, CALX, CAL1, VARI, EVAL AND REST.  CALC-009
C THE COMMON /DCONS/ IS USED IN ECIS, CALC, LECL, COLF, KHCO, CONU,     CALC-010
C                               CAL1, POTE, ROTP, ROTZ, STDP, STBF,     CALC-011
C                               MTCH, SCAM, SCHE, LCSP, RESU, SCAT      CALC-012
C                               AND REST.                               CALC-013
C THE COMMON /INTEG/ IS USED IN CALC, CALX, DEPH, LECD, CAL1, VARI,     CALC-014
C                               EVAL AND REST.                          CALC-015
C THE COMMON /TITRE/ IS USED IN CALC, CALX, RESU, EVAL AND REST.        CALC-016
C                                                                       CALC-017
C FOR THE COMMON  /CONVE/, /DCHI2/ AND /NCOMP/ SEE CALX.                CALC-018
C FOR THE COMMONS /POTE1/ AND /POTE2/ SEE REDM.                         CALC-019
C                                                                       CALC-020
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /ADDRE/:                     CALC-021
C  NIPH:      NUMBER OF PHONONS FOR THE HARMONIC VIBRATIONAL MODEL.     CALC-022
C  NJIT:      DATA FOR INTERPOLATION ON TOTAL SPIN.                     CALC-023
C  NWV:       NON INTEGER VALUES FOR THE CHANNELS.                      CALC-024
C  NIPP:      DISPERSION PARAMETERS.                                    CALC-025
C  NPAR:      INDICATIONS FOR NUCLEAR PARAMETERS.                       CALC-026
C  NPAA:      VALUES OF NUCLEAR PARAMETERS.                             CALC-027
C  NSCN:      LEVEL DENSITY DESCRIPTION.                                CALC-028
C  NFIS:      FISSION DATA FOR COMPOUND NUCLEUS.                        CALC-029
C  NGAM:      GAMMA DATA FOR COMPOUND NUCLEUS.                          CALC-030
C  NNIV:      ADDRESSES OF REDUCED NUCLEAR MATRIX ELEMENTS AND COULOMB  CALC-031
C             INTEGRALS IN NIV(NCOLL,NCOLL,3).                          CALC-032
C  NPOT:      OPTICAL POTENTIAL PARAMETERS.                             CALC-033
C  NBETA:     DEFORMATION PARAMETERS.                                   CALC-034
C  NFM:       HELICITIES AND OBSERVABLES (SEE DEPH,LECD AND OBSE).      CALC-035
C  NTGX:      BEGINNING OF CHI2 AND NORMALISATION OF DATA.              CALC-036
C  NDONN:     EXPERIMENTAL DATA.                                        CALC-037
C  NNVI:      TABLE OF ADDRESSES OF COUPLING COEFFICIENTS.              CALC-038
C  NDE:       SEARCH ACCURACIES.                                        CALC-039
C  NISE:      INDEXES OF THE VARIABLE PARAMETERS IN SEARCH.             CALC-040
C  NRC:       PERMANENT WORKING FIELD FOR THE SEARCH.                   CALC-041
C  NIW:       INTEGER WORKING FIELD FOR THE SEARCH.                     CALC-042
C  NNWI:      SAME AS NNVI FOR SYMMETRISED EQUATIONS.                   CALC-043
C  NCC:       TABLE OF ENERGIES, L*(L+1) AND L*S  (SEE QUAN).           CALC-044
C  MCC:       SAME AS NCC FOR SYMMETRISED EQUATIONS.                    CALC-045
C  NXA:       TABLE OF COEFFICIENTS OF SYMMETRISATION.                  CALC-046
C  NAM1:      COMPUTATION OF OBSERVABLES (SEE OBSE).                    CALC-047
C  NFAC:      TABLE OF LOG OF FACTORIALS FOR GEOMETRIC COEFFICIENTS.    CALC-048
C  NFG:       COULOMB FUNCTIONS AND FINITE INTEGRALS.                   CALC-049
C  NXG:       COULOMB PHASES AND INFINITE INTEGRALS.                    CALC-050
C  NRES:      FUNCTIONS FOR THE SEARCH.                                 CALC-051
C  NXX:       VARIABLES FOR THE SEARCH.                                 CALC-052
C  NT:        TABLE OF REDUCED NUCLEAR MATRIX ELEMENTS.                 CALC-053
C  NIVQ:      TABLE OF MULTIPOLES.                                      CALC-054
C  NIVY:      TABLE OF FORM FACTOR IDENTIFICATION IVY (FOR COMPUTATION).CALC-055
C  NIVZ:      TABLE OF FORM FACTOR IDENTIFICATION IVZ (FOR USE).        CALC-056
C  NCOI:      ADDRESS OF THE TABLE FOR DISCRETISATION OF CONTINUUM.     CALC-057
C  MIPI:      ADDRESS OF "IPIM" FOR THE DISCRETISATION OF CONTINUUM.    CALC-058
C  NXD:       ADDRESS OF WEIGHTS AND STEPS OF CONTINUUM.                CALC-059
C  MWV:       SAME AS NWV FOR THE DISCRETISATION OF CONTINUUM.          CALC-060
C  NIXT:      TRANSMISSION COEFFICIENTS OF UNCOUPLED STATES.            CALC-061
C  NTY:       TEMPORARY RESULTS OF COMPOUND NUCLEUS FOR INTERPOLATION.  CALC-062
C  NSM:       STANDARD AND HELICITY SCATTERING MATRIX ELEMENTS.         CALC-063
C  NTX:       PARTIAL REACTION CROSS SECTIONS AND COMPOUND NUCLEUS.     CALC-064
C  NRY:       COMPOUND NUCLEUS COEFFICIENTS.                            CALC-065
C  NRCO:      STRENGTH OF COULOMB CENTRAL POTENTIALS FOR CORRECTIONS.   CALC-066
C  NRDO:      STRENGTH OF COULOMB TRANSITION POTENTIALS FOR CORRECTIONS.CALC-067
C  NVC1:      REAL POTENTIALS.                                          CALC-068
C  NVC2:      IMAGINARY POTENTIALS.                                     CALC-069
C  NNC:       FIRST FREE ADDRESS AFTER COMPUTATION OF POTENTIALS.       CALC-070
C  NCX:       FIRST FREE ADDRESS FOR COMPUTATION OF POTENTIALS.         CALC-071
C   DEFINED:  NPOT,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,NXD,MWV,NIXT,NTY,NSM,NTX,CALC-072
C             NRY,,NRDO,NVC1,NVC2,NNC,NCX.                              CALC-073
C   USED:     NIPH,NWV,NIPP,NPAR,NPAA,NSCN,NNIV,NPOT,NBETA,NDE,NRC,NIW, CALC-074
C             NFAC,NFG,NXG,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,NXD,MWV,CALC-075
C             NIXT,NTY,NSM,NTX,NRY,NRCO,NRDO,NVC1,NNC,NCX.              CALC-076
C   NOT USED: NJIT,NFIS,NGAM,NFM,NTGX,NDONN,NNVI,NISE,NNWI,NCC,MCC,NXA, CALC-077
C             NAM1.                                                     CALC-078
C                                                                       CALC-079
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /CONVE/:                     CALC-080
C  H:         STEP SIZE FOR INTEGRATION.                                CALC-081
C   USED:     H.                                                        CALC-082
C                                                                       CALC-083
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCHI2/:                     CALC-084
C  CHI2M:     MINIMUM CHI-SQUARE IN THE SEARCH.                         CALC-085
C   DEFINED:  CHI2M.                                                    CALC-086
C                                                                       CALC-087
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     CALC-088
C  CM:        ATOMIC MASS IN MEV.                                       CALC-089
C  CHB:       PLANCK CONSTANT /(2*PI) IN MEV*FERMI.                     CALC-090
C  CZ:        ELECTRIC CONSTANT.                                        CALC-091
C  CMB:       ATOMIC MASS CM DIVIDED BY H-BAR*C.                        CALC-092
C  CCZ:       COULOMB ALPHA CONSTANT.                                   CALC-093
C  CK:        H-BAR*C.                                                  CALC-094
C  XZ:        CONVERSION FACTOR TO MILLIBARNS.                          CALC-095
C   DEFINED:  CMB,CCZ,CK.                                               CALC-096
C   USED:     CM,CHB,CZ.                                                CALC-097
C   NOT USED: XZ.                                                       CALC-098
C                                                                       CALC-099
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /INTEG/:                     CALC-100
C  IDMT:      TOTAL WORKING FIELD LENGTH AS DOUBLE PRECISION.           CALC-101
C  NCOLL:     NUMBER OF COUPLED CHANNELS.                               CALC-103
C  NJMAX:     MAXIMUM NUMBER OF J-VALUES.                               CALC-104
C  ITERM:     MAXIMUM NUMBER OF ITERATIONS.                             CALC-105
C  JDM:       MINIMUM NUMBER OF TOTAL SPIN.                             CALC-106
C  JIT:       NUMBER OF RATES OF INTERPOLATION ON TOTAL SPIN.           CALC-107
C  KMIN:      MINIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUS.          CALC-108
C  KMAX:      MAXIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUS.          CALC-109
C  NCOLS:     NUMBER OF CHANNELS WITH ANGULAR DISTRIBUTIONS.            CALC-110
C  NCOLT:     NUMBER OF CHANNELS INCLUDING UNCOUPLED STATES.            CALC-111
C  NBET:      NUMBER OF DIFFERENT DEFORMATIONS (VIBRATIONS+ROTATIONS).  CALC-112
C  LMX:       DIFFERENCE BETWEEN NUMBER OF J AND OF COULOMB FUNCTIONS.  CALC-113
C  LMAX1:     NUMBER OF L-VALUES FOR COULOMB FUNCTIONS.                 CALC-114
C  NLT:       MEMORIES NEEDED FOR LEGENDRE POLYNOMIALS.                 CALC-115
C  ISM:       NUMBER OF INTEGRATION STEPS.                              CALC-116
C  NJC:       MAXIMUM NUMBER OF OBSERVABLES AT EQUIDISTANT ANGLES.      CALC-117
C  JTX:       MAXIMUM NUMBER OF CALCULATED VALUES FOR A PLOT.           CALC-118
C  KCC:       NUMBER OF INDEPENDENT AMPLITUDES WITH UNCOUPLED STATES.   CALC-119
C  MS1:       LARGEST PARTICLE MULTIPLICITY.                            CALC-120
C  MS2:       LARGEST TARGET MULTIPLICITY.                              CALC-121
C  KBA:       NUMBER OF INDEPENDENT AMPLITUDES WITHOUT UNCOUPLED STATES.CALC-122
C  KAB:       MAXIMUM NUMBER OF EQUATIONS.                              CALC-123
C  KBC:       MAXIMUM NUMBER OF SOLUTIONS.                              CALC-124
C  JTH:       MAXIMUM NUMBER OF ANGLES FOR A PLOT.                      CALC-125
C  NCOLR:     NUMBER OF EXPERIMENTAL ANGULAR DISTRIBUTIONS.             CALC-126
C  NREC:      NUMBER OF VARIABLES IN SEARCH.                            CALC-127
C  NTOT:      NUMBER OF EXPERIMENTAL DATA.                              CALC-128
C  LMAX2:     NUMBER OF L VALUES FOR COULOMB PHASES.                    CALC-129
C  KE:        CONTROL OF SEARCH (SEE FITE).                             CALC-130
C  ITEMM:     MAXIMUM NUMBER OF ITERATIONS AT THE BEGINNING OF A RUN.   CALC-131
C  KXT:       NUMBER OF PENETRABILITIES FOR UNCOUPLED STATES.           CALC-132
C  LMAX3:     EFFECTIVE NUMBER OF COULOMB FUNCTIONS.                    CALC-133
C  NRZ:       NUMBER OF RESULTS TO SAVE FOR MINIMUM CHI2..              CALC-134
C  NTZ:       NUMBER OF MEMORIES TO INITIALISE TO ZERO FOR SCATTERING   CALC-135
C             MATRIX AND COMPOUND NUCLEUS RESULTS..                     CALC-136
C  IPM:       NUMBER OF J VALUES USED FOR SCATTERING MATRIX (IN CAL1).  CALC-137
C  IPK:       NUMBER OF J VALUES USED FOR COMPOUND NUCLEUS (IN CAL1).   CALC-138
C  NPLACE:    MAXIMUM WORKING FIELD USED.                               CALC-102
C  MCM(1):    MAXIMUM ANGULAR MOMENTUM FOR CENTRAL COULOMB CORRECTIONS. CALC-139
C  MCM(2):    MAXIMUM ANGULAR MOMENTUM FOR SPIN-ORBIT COULOMB CORRECT.  CALC-140
C  NCT(1):    NUMBER OF EQUATIONS FOR POSITIVE PARITY.                  CALC-141
C  NCT(2):    NUMBER OF EQUATIONS FOR NEGATIVE PARITY.                  CALC-142
C  NCT(3):    NUMBER OF SOLUTIONS FOR POSITIVE PARITY.                  CALC-143
C  NCT(4):    NUMBER OF SOLUTIONS FOR NEGATIVE PARITY.                  CALC-144
C  NCT(5):    NUMBER OF COMPOUND NUCLEUS COEFFICIENTS, POSITIVE PARITY. CALC-145
C  NCT(6):    NUMBER OF COMPOUND NUCLEUS COEFFICIENTS, NEGATIVE PARITY. CALC-146
C   DEFINED:  IDMT,NPLACE,KE,NRZ,NTZ.                                   CALC-147
C   USED:     IDMT,NPLACE,NCOLL,NJMAX,KMAX,NCOLS,NCOLT,NBET,LMAX1,ISM,  CALC-148
C             KCC,KBA,NREC,NTOT,LMAX2,KE,KXT,LMAX3.                     CALC-149
C   NOT USED: ITERM,JDM,JIT,KMIN,LMX,NLT,NJC,JTX,MS1,MS2,KAB,KBC,JTH,   CALC-150
C             NCOLR,ITMM,IPM,IPK,MCM,NCT.                               CALC-151
C                                                                       CALC-152
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     CALC-153
C  NSP(1):    NUMBER OF UNCOUPLED LEVELS FOR COMPOUND NUCLEUS           CALC-154
C             INCLUDING DISCRETISATION OF CONTINUUM.                    CALC-155
C  NSP(2):    NUMBER OF THESE LEVELS WITH ANGULAR DISTRIBUTION.         CALC-156
C  NSP(3):    NUMBER OF THESE LEVELS WITHOUT ANGULAR DISTRIBUTION.      CALC-157
C  NIE:       NUMBER OF UNCOUPLED STATES ADDED FOR DISCRETISATION.      CALC-158
C  NCOLX:     TOTAL NUMBER OF LEVELS WITHOUT DISCRETISATION.            CALC-159
C  NDP:       ADDRESS OF FISSION AND GAMMA FINAL RESULTS.               CALC-160
C  NDQ:       ADDRESS OF FISSION AND GAMMA INTERMEDIATE RESULTS.        CALC-161
C   DEFINED:  NSP,NIE,NCOLX,NDP,NDQ.                                    CALC-162
C   USED:     NSP,NIE,NCOLX.                                            CALC-163
C                                                                       CALC-164
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE1/:                     CALC-165
C  ITX(16):   STARTING ADDRESS OF DIFFERENT FORM FACTORS.               CALC-166
C             FOR SCHROEDINGER EQUATION, ITX(I)+1 IS THE STARTING       CALC-167
C             ADDRESS OF THE FORM FACTOR READ IN EXTP WITH ITYP=I       CALC-168
C             (POTENTIAL FOR I=1 TO 8, TRANSITION FOR I=9 TO 16).       CALC-169
C             FOR DIRAC EQUATIONS, ITX(1)=0,                            CALC-170
C             ITX(2)+1=ADDRESS OFF FIRST TRANSITION FORM FACTOR,        CALC-171
C             ITX(7)=ADDRESS OF LAST TRANSITION FORM FACTOR,            CALC-172
C             ITX(3)=ADDRESS OF LAST TEMPORARY CENTRAL POTENTIAL,       CALC-173
C             ITX(4)=ITX(7)-24,ITX(5)=ITX(3)-11,ITX(6)=ITX(2)-4.        CALC-174
C             ALL ARE USED FOR SCHROEDINGER, THE FIRST 8 FOR DIRAC.     CALC-175
C  INTC:      NUMBER OF FORM FACTORS WITHOUT DEFORMED SPIN-ORBIT        CALC-176
C             INCLUDING CORRECTION TERMS.                               CALC-177
C  ITXM:      TOTAL NUMBER OF FORM FACTORS.                             CALC-178
C   USED:     ITX(1),ITX(2),INTC,ITXM.                                  CALC-179
C                                                                       CALC-180
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     CALC-181
C  ITY(2):    STARTING ADDRESS OF IMAGINARY CENTRAL POTENTIAL.          CALC-182
C        ITY(2)=14*NCOLL IS USED FOR DIRAC EQUATIONS.                   CALC-183
C  INTV:      SAME AS INVT, TAKING INTO ACCOUNT DISPERSION.             CALC-184
C  NPX:       NUMBER OF POTENTIALS TAKING INTO ACCOUNT DISPERSION.      CALC-185
C   USED:     ITY(2),INTV,NPX.                                          CALC-186
C                                                                       CALC-187
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /TITRE/:                     CALC-188
C  TITLE(18): TITLE OF THE RUN PRINTED AS HEADING OF RESULTS.           CALC-189
C   USED:     TITLE.                                                    CALC-190
C                                                                       CALC-191
C ******** MEANING OF THE LOGICAL CONTROLS LO ********                  CALC-192
C                                                                       CALC-193
C LO(135+I)=LO(50+I) FOR I=1,15 DURING SEARCH IF LO(51) TO LO(65) ARE   CALC-194
C USED ONLY FOR COMPLETE OUTPUT.                                        CALC-195
C THE VALUES OF THE FIRST 100 LO ARE READ IN CALX ON TWO DATA CARDS.    CALC-196
C THE FIRST DATA CARD IS FOR 1-50,THE SECOND FOR 51-100.                CALC-197
C ONLY,THE VALUES LISTED ON THE INPUT DESCRIPTION ARE USED.             CALC-198
C *** FOR THEIR MEANING, SEE THIS DESCRIPTION *****                     CALC-199
C EXCEPTION IF LO(36)=.TRUE.: ONLY THE FIRST CARD IS READ, THE CODE DOESCALC-200
C NOT TAKE THEM INTO ACCOUNT BUT CONTINUE A SEARCH SAVED ON TAPE MS.    CALC-201
C                                                                       CALC-202
C *** MEANING OF THE 100 FIRST LO USED HERE ********                    CALC-203
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    CALC-204
C               LO(10) =.TRUE. DISPERSION RELATIONS FOR POTENTIALS.     CALC-205
C               LO(32) =.TRUE. AUTOMATIC SEARCH ON SOME PARAMETERS.     CALC-206
C               LO(34) =.TRUE. NEXT CALCULATION CHANGING ENERGY AND/OR  CALC-207
C                              SOME PARAMETERS.                         CALC-208
C               LO(35) =.TRUE. SEARCH SAVED ON TAPE 8 IF CORRECTLY ENDEDCALC-209
C                              OR STOPPED BY THE NUMBER OF EVALUATIONS. CALC-210
C               LO(36) =.TRUE. RESTART A SEARCH FROM TAPE 8.            CALC-211
C               LO(52) =.TRUE. REDUCED NUCLEAR MATRIX ELEMENTS OUTPUT.  CALC-212
C               LO(54) =.TRUE. OUTPUT LENGTH USED IN THE WORKING FIELD. CALC-213
C               LO(61) =.TRUE. REDUCED NUCLEAR MATRIX ELEMENTS WRITTEN  CALC-214
C                              ON FILE 61.                              CALC-215
C               LO(75) =.TRUE. NO COMPLETE OUTPUT AT THE FIRST RUN OF A CALC-216
C                              SEARCH.                                  CALC-217
C               LO(76) =.TRUE. LO(51) TO LO(65) ARE ALWAYS USED.        CALC-218
C               LO(77) =.TRUE. OUTPUT OF TIME DIFFERENCES DURING THE    CALC-219
C                              SEARCH.                                  CALC-220
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             CALC-221
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      CALC-222
C FOR   LO(111), LO(112), LO(113), LO(114), LO(115), LO(116), LO(117),  CALC-223
C       LO(118) AND LO(132) SEE BELOW.                                  CALC-224
C                                                                       CALC-225
C *** MEANING OF LO(I) FOR I GREATER THAN 100 ****                      CALC-226
C LO(101) IS TRUE IF THERE IS A REAL SPIN-ORBIT POTENTIAL.              CALC-227
C LO(102) IS TRUE IF THERE IS A IMAGINARY SPIN-ORBIT POTENTIAL.         CALC-228
C LO(103) IS TRUE IF THERE IS A COULOMB SPIN-ORBIT POTENTIAL.           CALC-229
C LO(104) IS TRUE IF CONVERGENCE IS OBTAINED IN THE ITERATION.          CALC-230
C LO(105) IS TRUE IF CONVERGENCE IS OBTAINED FOR THIS EQUATION.         CALC-231
C LO(106) IS TRUE WHEN THE ITERATION IS NOT THE LAST ONE PERMITTED.     CALC-232
C LO(107) IS TRUE IF ALL THE COUPLINGS HAVE TO BE CALCULATED BEFOREHAND.CALC-233
C LO(108) IS TRUE IF THE DIAGONAL COULOMB CORRECTIONS ARE NEEDED.       CALC-234
C LO(109) IS TRUE FOR DIRAC POTENTIALS.                                 CALC-235
C LO(110) IS TRUE IF DERIVATIVES ARE NEEDED.                            CALC-236
C LO(111) IS TRUE IF NUCLEAR PARAMETERS ARE CHANGED IN SEARCH.          CALC-237
C LO(112) IS TRUE IF SPIN-ORBIT OR COMPOUND NUCLEUS PARAMETERS ARE      CALC-238
C                 CHANGED IN SEARCH.                                    CALC-239
C LO(113) IS TRUE IF DISPERSION RELATION IS CHANGED IN SEARCH.          CALC-240
C LO(114) IS TRUE IF COMPOUND NUCLEUS CONTINUUM IS CHANGED IN SEARCH.   CALC-241
C LO(115) IS TRUE IF IT IS THE FIRST COMPUTATION FOR THIS ENERGY.       CALC-242
C LO(116) IS TRUE FOR NO OUTPUT.                                        CALC-243
C LO(117) IS TRUE FOR ALL THE CALCULATIONS EXCEPT THE FIRST.            CALC-244
C LO(118) IS TRUE FOR LAST RESULTS.                                     CALC-245
C LO(119) IS TRUE FOR RESULTS WITHOUT DOING THE CALCULATION AGAIN.      CALC-246
C LO(120) IS TRUE FOR OUTPUT AND LAST CALCULATION IS THE BEST ONE.      CALC-247
C LO(121) IS TRUE FOR OPTICAL MODEL WITHOUT COUPLING.                   CALC-248
C LO(122) IS TRUE FOR IDENTICAL PARTICLES WITHOUT SPIN.                 CALC-249
C LO(123) IS TRUE FOR IDENTICAL PARTICLES WITH SPIN.                    CALC-250
C LO(124) IS TRUE TO COMPUTE TRANSMISSION COEFFICIENTS.                 CALC-251
C LO(125) IS TRUE IN CAL1 FOR USUAL COUPLED EQUATIONS SUBROUTINES.      CALC-252
C LO(126) IS TRUE IF THERE ARE OBSERVABLES IN THE LABORATORY SYSTEM.    CALC-253
C LO(127) IS TRUE FOR COULOMB CORRECTIONS WITH PURE REGULAR FUNCTIONS.  CALC-254
C LO(128) IS TRUE FOR NO COPY OF UNCOUPLED FUNCTIONS AND PHASE-SHIFT.   CALC-255
C LO(129) IS TRUE FOR REAL SPIN-ORBIT OR DIRAC EQUATION.                CALC-256
C LO(130) IS TRUE FOR IMAGINARY SPIN-ORBIT OR DIRAC EQUATION.           CALC-257
C LO(131) IS TRUE IF THE TOTAL SPIN IS TOO LARGE FOR COMPOUND NUCLEUS.  CALC-258
C LO(132) IS TRUE STORE FISSION AND GAMMA TRANSMISSION COEFFICIENTS FOR CALC-259
C                 INTERPOLATION.                                        CALC-260
C LO(133) IS TRUE TO STORE SCALAR AND COULOMB POTENTIAL INDEPENDENTLY.  CALC-261
C LO(111) TO LO(120) ARE INITIALISED TO .FALSE. IN CALX.                CALC-262
C LO(116) TO LO(120) ARE INITIALISED TO .FALSE. IN EVAL.                CALC-263
C                                                                       CALC-264
C***********************************************************************CALC-265
      IMPLICIT REAL*8 (A-H,O-Z)                                         CALC-266
      LOGICAL LO(150)                                                   CALC-267
      DIMENSION NW(2,IDMX),DW(IDMX)                                     CALC-268
      CHARACTER*4 FIN,TITLE,CW(2*IDMX)                                  CALC-269
      COMMON /ADDRE/ NIPH,NJIT,NWV,NIPP,NPAR,NPAA,NSCN,NFIS,NGAM,NNIV,NPCALC-270
     1OT,NBETA,NFM,NTGX,NDONN,NNVI,NDE,NISE,NRC,NIW,NNWI,NCC,MCC,NXA,NAMCALC-271
     21,NFAC,NFG,NXG,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,NXD,MWV,NIXT,NCALC-272
     3TY,NSM,NTX,NRY,NRCO,NRDO,NVC1,NVC2,NNC,NCX                        CALC-273
      COMMON /CONVE/ H,BJM,EITER,ACONV,CONJ,HCONV                       CALC-274
      COMMON /DCHI2/ CHI2,CHI2M,YY(3)                                   CALC-275
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            CALC-276
      COMMON /INOUT/ MR,MW,MS                                           CALC-277
      COMMON /INTEG/ IDMT,NPLACE,NCOLL,NJMAX,ITERM,JDM,JIT,KMIN,KMAX,NCOCALC-278
     1LS,NCOLT,NBET,LMX,LMAX1,NLT,ISM,NJC,JTX,KCC,MS1,MS2,KBA,KAB,KBC,JTCALC-279
     2H,NCOLR,NREC,NTOT,LMAX2,KE,ITEMM,KXT,LMAX3,NRZ,NTZ,IPM,IPK,MCM(2),CALC-280
     3NCT(6)                                                            CALC-281
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQCALC-282
     1,ACN1,ACN2,AZ(18)                                                 CALC-283
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM,NFO          CALC-284
      COMMON /POTE2/ ITY(12),INVT,INTV,INSL,NPX                         CALC-285
      COMMON /TITRE/ TITLE(18)                                          CALC-286
      CHARACTER*20 fname                                                RCN  RCN
      LOGICAL unformat                                                  RCN  RCN
      COMMON /NFORM/unformat,fname                                      RCN  RCN
      DATA FIN /'FIN '/                                                 CALC-287
      IDMT=IDMX                                                         CALC-288
      CMB=CM/CHB                                                        CALC-289
      CCZ=CHB/CZ                                                        CALC-290
      CK=2.D0*CM/CHB**2                                                 CALC-291
      DO 1 I=1,150                                                      CALC-292
    1 LO(I)=.FALSE.                                                     CALC-293
C MAIN INPUT.                                                           CALC-294
    2 CHI2M=1.D35                                                       CALC-295
      CALL CALX(NW,CW,DW,LO)                                            CALC-296
      IF (LO(31)) OPEN (64,FILE = TRIM(fname)//'.exp')                  RCN  RCN
C     IF (LO(81)) OPEN(112,file=TRIM(fname)//'_CN-xs.dat')              RCN  RCN
      OPEN(112,file=TRIM(fname)//'_CN-xs.dat')                          RCN  RCN
      IF (LO(83)) GOTO 21                                               RCN  RCN 
      open(121,file=TRIM(fname)//'_Pmatr.txt')                          RCN  RCN
      open(122,file=TRIM(fname)//'_Pdiag.txt')                          RCN  RCN
      open(123,file=TRIM(fname)//'_Umatr.txt')                          RCN  RCN
C     open(124,file=TRIM(fname)//'_Cmatrix.txt')                        RCN  RCN
      open(125,file=TRIM(fname)//'_Smatr.txt')                          RCN  RCN
   21 IF (TITLE(1).EQ.FIN) RETURN                                       CALC-297
      NSP1D=NSP(1)                                                      CALC-298
      IF (LO(36)) GO TO 18                                              CALC-299
    3 NSP(1)=NSP1D                                                      CALC-300
      NSP(3)=NSP(1)-NSP(2)                                              CALC-301
      CALL COLF(NCOLX,NCOLL,NW,DW(NWV),ISM,LMAX1,LMAX2,H,IDMT-NT,NW(1,NNCALC-302
     1IV),LO,DW(NFG),DW(NXG),LMAX3,KXT,NW(1,NT),DW(NT))                 CALC-303
C COMPUTATION OF NUCLEAR MATRIX ELEMENTS AND SPACE FOR FORM FACTORS.    CALC-304
    4 IF (LO(61)) WRITE (61,1000) DW(NWV),DW(NWV+12),DW(NWV+1),NW(2,2),NCALC-305
     1COLL                                                              CALC-306
      CALL REDM(NW,NCOLL,NW(1,NBETA),DW(NBETA),NW(1,NIPH),NW(1,NPAR),DW(CALC-307
     1NPAA),DW(NFAC),IDMT-NT,LO,NW(1,NNIV),NW(1,NT),NW(1,NT),DW(NT),IT,ICALC-308
     2M)                                                                CALC-309
      NIVQ=NT+3*IT                                                      CALC-310
      NIVY=NIVQ+(3*IM+1)/2                                              CALC-311
      NIVZ=NIVY+(7*INTC+1)/2                                            CALC-312
      NCOI=NIVZ+2*INTV                                                  CALC-313
      IF ((.NOT.LO(7)).OR.LO(117)) GO TO 7                              CALC-314
      NPOT=NCOI                                                         CALC-315
      CALL EXTP(NCOLL,NCOLT,DW(NWV),NW(1,NNIV),NW(1,NT),NW(1,NIVY),NW(1,CALC-316
     1NIVQ),NW,DW(NFAC),DW(NPOT),NW(1,NPOT),NW(1,NPOT+2),NW(1,NIPP),DW(NCALC-317
     2IPP),IDMT-NPOT,LO)                                                CALC-318
C PERMUTATION OF POTENTIALS AND INFORMATIONS ON TRANSITIONS.            CALC-319
      N=NPOT-NT                                                         CALC-320
      M=NPOT+NW(2,NPOT+1)                                               CALC-321
      IF (N+M.GT.IDMT) CALL MEMO('CALC',IDMT,N+M)                       CALC-322
      NN=2*N                                                            CALC-323
      N1=2*NT-2                                                         CALC-324
      N2=2*M-2                                                          CALC-325
      DO 5 I=1,NN                                                       CALC-326
    5 CW(N2+I)=CW(N1+I)                                                 CALC-327
      NN=NN+2*NW(2,NPOT+1)                                              CALC-328
      N2=N2-2*NW(2,NPOT+1)                                              CALC-329
      DO 6 I=1,NN                                                       CALC-330
    6 CW(N1+I)=CW(N2+I)                                                 CALC-331
      NPOT=NT                                                           CALC-332
      NT=NPOT+NW(2,NPOT+1)                                              CALC-333
      NIVQ=NT+3*IT                                                      CALC-334
      NIVY=NIVQ+(3*IM+1)/2                                              CALC-335
      NIVZ=NIVY+(7*INTC+1)/2                                            CALC-336
    7 NCOI=NIVZ+2*INTV                                                  CALC-337
      MIPI=NCOI+2*NCONT                                                 CALC-338
      NXD=MIPI                                                          CALC-339
      MWV=NXD                                                           CALC-340
      NIE=0                                                             CALC-341
      NIXT=MWV+22*NIE                                                   CALC-342
    8 CALL DISP(NW,DW(NWV),NW(1,NIPP),DW(NIPP),NW(1,NPOT),DW(NPOT),NCOLXCALC-343
     1-NCONT,LO)                                                        CALC-344
      IF (NCONT.EQ.0) GO TO 11                                          CALC-345
      IF (.NOT.(LO(114).OR.LO(115))) GO TO 10                           CALC-346
      CALL CONU(0,NW,DW(NWV),NW(1,MIPI),DW(MWV),NW(1,NCOI),DW(NXD),DW(NSCALC-347
     1CN),KXT,LO)                                                       CALC-348
      NXD=MIPI+(11*NIE+1)/2                                             CALC-349
      MWV=NXD+3*NIE                                                     CALC-350
      NIXT=MWV+22*NIE                                                   CALC-351
      IF (NIXT.GT.IDMT) CALL MEMO('CALC',IDMT,NIXT)                     CALC-352
      NCOLT=NCOLX+NIE-NCONT                                             CALC-353
      NSP(1)=NSP(1)+NCOLT-NCOLX                                         CALC-354
      NSP(3)=NSP(3)+NCOLT-NCOLX                                         CALC-355
    9 CALL CONU(1,NW,DW(NWV),NW(1,MIPI),DW(MWV),NW(1,NCOI),DW(NXD),DW(NSCALC-356
     1CN),KXT,LO)                                                       CALC-357
   10 CALL DISP(NW(1,MIPI),DW(MWV),NW(1,NIPP),DW(NIPP),NW(1,NPOT),DW(NPOCALC-358
     1T),-NIE,LO)                                                       CALC-359
   11 NDP=2*NCOLL+NSP(1)+1                                              CALC-360
      NDQ=KBA+NSP(3)-NSP(1)                                             CALC-361
      NTY=NIXT+KXT                                                      CALC-362
      NSM=NTY                                                           CALC-363
      IF (LO(81).AND.LO(132)) NSM=NSM+KMAX*(KCC+2+NCOLT-NCOLS)          CALC-364
      NTX=NSM+2*NJMAX*KBA                                               CALC-365
      NRY=NTX+NCOLS+1                                                   CALC-366
      IF (LO(81)) NRY=NTX+NCOLL+NCOLT+3                                 CALC-367
      NRCO=NRY                                                          CALC-368
      IF (LO(81)) NRCO=NRCO+KMAX*NCOLS                                  CALC-369
      NRZ=NRCO-NSM                                                      CALC-370
      NTZ=NRCO-NTY                                                      CALC-371
      IF (LO(32)) NRCO=2*NRCO-NSM                                       CALC-372
      NRDO=NRCO+2*NPX                                                   CALC-373
      IF (LO(100)) NRDO=NRCO+2*NCOLT                                    CALC-374
      NVC1=NRDO+2*INTV                                                  CALC-375
      NVC2=NVC1+ITY(2)*ISM                                              CALC-376
      NNC=NVC1+ITX(1)*ISM                                               CALC-377
      IF (LO(100)) NNC=NVC1+ITX(7)*ISM                                  CALC-378
      NCX=NVC1+ITXM*ISM                                                 CALC-379
      NPLACE=MAX0(NPLACE,NCX,NNC+((NREC+1)*(2*NTOT+2+NREC)/2+1)/2)      CALC-380
   12 CALL GGDR(NW,DW(NWV),DW(NSCN),LO)                                 CALC-381
      IF (LO(113)) GO TO 13                                             CALC-382
      IF (LO(54)) WRITE (MW,1001) NPLACE                                CALC-383
      IF (NPLACE.GT.IDMT) CALL MEMO('CALC',IDMT,NPLACE)                 CALC-384
C MAIN COMPUTATION.                                                     CALC-385
   13 CALL CAL1(NW,CW,DW,LO)                                            CALC-386
      IF (LO(77)) CALL HORA                                             CALC-387
      IF (LO(118).OR.(.NOT.LO(32))) GO TO 19                            CALC-388
C AUTOMATIC SEARCH.                                                     CALC-389
      IF (NW(1,NIW+1).GT.1.OR.LO(76).OR.LO(75)) GO TO 15                CALC-390
C CHANGE OF CONTROLS IF FULL OUTPUT WAS NOT REQUESTED AT THE FIRST RUN. CALC-391
      DO 14 I=51,58                                                     CALC-392
      LO(I+85)=LO(I)                                                    CALC-393
   14 LO(I)=.FALSE.                                                     CALC-394
      LO(116)=.TRUE.                                                    CALC-395
C IDENTIFICATION OF VARIABLES.                                          CALC-396
   15 CALL VARI(1,NW,DW,LO)                                             CALC-397
C SAVE THE SEARCH ON TAPE MS.                                           CALC-398
      IF (LO(35).AND.NW(1,NIW+1).GE.NW(2,NIW)) CALL REST(0,NW,DW,IDMT,LOCALC-399
     1)                                                                 CALC-400
C HANDLING OF VARIABLES.                                                CALC-401
   16 CALL FITE(KE,NTOT,NREC,DW(NRES),DW(NXX),DW(NDE),DW(NRC),NW(1,NRC),CALC-402
     1NW(1,NIW),DW(NNC))                                                CALC-403
C TRANSFORMATION OF VARIABLES INTO PARAMETERS.                          CALC-404
   17 CALL VARI(0,NW,DW,LO)                                             CALC-405
      IF (KE.EQ.1) GO TO 20                                             CALC-406
      LO(111)=LO(52).OR.LO(61).OR.LO(111)                               CALC-407
      LO(112)=LO(112).OR.LO(10)                                         CALC-408
      GO TO 20                                                          CALC-409
C CONTINUATION OF A PREVIOUS SEARCH.                                    CALC-410
   18 CALL REST(1,NW,DW,IDMT,LO)                                        CALC-411
      IF (LO(77)) CALL HORA                                             CALC-412
      IF ((KE.NE.1).AND.(NW(1,NIW+1).NE.1)) GO TO 17                    CALC-413
      GO TO 16                                                          CALC-414
   19 N=IDMT-NPLACE                                                     CALC-415
      IF (.NOT.LO(77)) CALL HORA                                        CALC-416
      WRITE (MW,1002) NPLACE,N                                          CALC-417
      IF (LO(35).AND.LO(32).AND.(KE.EQ.0)) CALL REST(0,NW,DW,IDMT,LO)   CALC-418
      IF (.NOT.LO(34)) GO TO 2                                          CALC-419
      CALL EVAL(NW,DW,CM,LO)                                            CALC-420
      KE=0                                                              CALC-421
      IF (LO(115)) GO TO 3                                              CALC-422
   20 IF (LO(111)) GO TO 4                                              CALC-423
      IF (LO(113)) GO TO 8                                              CALC-424
      IF (LO(114)) GO TO 9                                              CALC-425
      IF (LO(112)) GO TO 12                                             CALC-426
      GO TO 13                                                          CALC-427
 1000 FORMAT ('<RED.MAT.>',F10.2,1P,D20.8,0P,F10.2,2I5)                 CALC-428
 1001 FORMAT (10X,'REQUIRED WORKING FIELD',I10)                         CALC-429
 1002 FORMAT (//' *** WORKSPACE USED IN THIS COMPUTATION',I10,'  ***',10CALC-430
     1X,I10,' MEMORIES NOT USED.')                                      CALC-431
      END                                                               CALC-432
C 29/09/12                                                      ECIS12  CALX-000
      SUBROUTINE CALX(NW,CW,DW,LO)                                      CALX-001
C CALX AND THE SUBROUTINES CALLED BY IT READ ALL THE INPUT EXCEPT FOR   CALX-002
C REDUCED NUCLEAR MATRIX ELEMENTS AND EXTERNAL FORM FACTORS.            CALX-003
C INPUT:     NW:      WORKING AREA FOR INTEGERS.                        CALX-004
C            CW:      WORKING AREA FOR CHARACTERS.                      CALX-005
C            DW:      WORKING AREA FOR DOUBLE PRECISION.                CALX-006
C                     NW,CW,DW ARE IN EQUIVALENCE BY CALL.              CALX-007
C            LO(I):   LOGICAL CONTROLS:                                 CALX-008
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    CALX-009
C               LO(8)  =.TRUE. RELATIVISTIC KINEMATICS.                 CALX-010
C               LO(10) =.TRUE. DISPERSION RELATIONS FOR POTENTIALS.     CALX-011
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              CALX-012
C               LO(12) =.TRUE. DEFORMED IMAGINARY CENTRAL POTENTIAL.    CALX-013
C               LO(18) =.TRUE. PROJECTILE-TARGET ANTISYMMETRISATION.    CALX-014
C               LO(20) =.TRUE. DISPERSION RELATIONS FOR TRANSITION      CALX-015
C                              FORM-FACTORS.                            CALX-016
C               LO(21) =.TRUE. USUAL COUPLED EQUATIONS.                 CALX-017
C               LO(28) =.TRUE. COMPUTATION UP TO J-CONVERGENCE-(F: STOP CALX-018
C                              WHEN ALL COUPLING TERMS NEGLIGIBLE).     CALX-019
C               LO(29) =.TRUE. NO DIAGONAL TERMS IN SECOND MEMBER.      CALX-020
C               LO(30) =.TRUE. PURE DWBA CALCULATION.                   CALX-021
C               LO(31) =.TRUE. INPUT OF EXPERIMENTAL DATA AND CHI2      CALX-022
C                              CALCULATION.                             CALX-023
C               LO(32) =.TRUE. AUTOMATIC SEARCH ON SOME PARAMETERS.     CALX-024
C               LO(36) =.TRUE. RESTART A SEARCH FROM TAPE 8.            CALX-025
C               LO(41) =.TRUE. FACTORISATION OF 1/(1-COS(THETA)).       CALX-026
C               LO(42) =.TRUE. SCHMIDT'S ORTHOGONALISATION OF SOLUTIONS CALX-027
C                              IN USUAL COUPLED EQUATIONS.              CALX-028
C               LO(43) =.TRUE. INTERPOLATION ON TOTAL SPIN.             CALX-029
C               LO(44) =.TRUE. COULOMB CORRECTIONS.                     CALX-030
C               LO(45) =.TRUE. LIMITATION ON THE ANGULAR MOMENTA FOR    CALX-031
C                              COULOMB CORRECTIONS.                     CALX-032
C               LO(63) =.TRUE. PENETRABILITIES WRITTEN ON FILE 63.      CALX-033
C               LO(65) =.TRUE. PRINT COEFFICIENTS OF THE EXPANSION IN   CALX-034
C                              LEGENDRE POLYNOMIALS ON FILE 65.         CALX-035
C               LO(66) =.TRUE. NO CALCULATION AT EQUIDISTANT ANGLES.    CALX-036
C               LO(71) =.TRUE. NO DETAILED OUTPUT OF LOGICAL CONTROLS.  CALX-037
C               LO(74) =.TRUE. OUTPUT OF TIME IN DIFFERENT STEPS.       CALX-038
C               LO(75) =.TRUE. NO COMPLETE OUTPUT AT THE FIRST RUN OF A CALX-039
C                              SEARCH.                                  CALX-040
C               LO(76) =.TRUE. LO(51) TO LO(65) ARE ALWAYS USED.        CALX-041
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             CALX-042
C               LO(82) =.TRUE. OLD SIMPLIFIED COMPOUND NUCLEUS.         CALX-043
C               LO(84) =.TRUE. UNCOUPLED LEVELS FOR COMPOUND NUCLEUS.   CALX-044
C               LO(85) =.TRUE. FISSION TRANSMISSION COEFFICIENTS.       CALX-045
C               LO(86) =.TRUE. GAMMA EMISSION IN COMPOUND NUCLEUS.      CALX-046
C               LO(87) =.TRUE. NO WIDTH FLUCTUATIONS.                   CALX-047
C               LO(94) =.TRUE. NON RELATIVISTIC "REDUCED MASS" FOR DIRACCALX-048
C                              EQUATION.                                CALX-049
C               LO(95) =.TRUE. "REDUCED ENERGY" FOR NON COULOMB         CALX-050
c                              INTERACTION IN RELATIVISTIC SCHROEDINGER CALX-051
c                              EQUATION OR USE OF REST MASS IN DIRAC    CALX-052
C                              EQUATION.                                CALX-053
C               LO(99) =.TRUE. SCHROEDINGER EQUIVALENT TO DIRAC         CALX-054
C                              EQUATION.                                CALX-055
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      CALX-056
C               LO(108)=.TRUE. DIAGONAL COULOMB CORRECTIONS ARE NEEDED. CALX-057
C               LO(109)=.TRUE. FOR DIRAC POTENTIALS.                    CALX-058
C               LO(115)=.TRUE. FIRST COMPUTATION FOR THIS ENERGY.       CALX-059
C               LO(116)=.TRUE. NO OUTPUT.                               CALX-060
C               LO(123)=.TRUE. IDENTICAL PARTICLES WITH SPIN.           CALX-061
C               LO(124)=.TRUE. COMPUTE TRANSMISSION COEFFICIENTS.       CALX-062
C               LO(128)=.TRUE. NO COPY OF UNCOUPLED FUNCTIONS AND       CALX-063
C                              PHASE-SHIFTS.                            CALX-064
C               LO(132)=.TRUE. STORE FISSION AND GAMMA TRANSMISSION     CALX-065
C                              COEFFICIENTS FOR INTERPOLATION.          CALX-066
C                                                                       CALX-067
C USE OF SOME PARTS OF THE WORKING AREA (W,NW,DW):                      CALX-068
C  1:   IPI(11,NCOLX) INTEGER VALUES FOR THE DESCRIPTION OF CHANNELS.   CALX-069
C           FIRST INDEX:                                                CALX-070
C       1 - PARITY (0 FOR + AND 1 FOR -).                               CALX-071
C       2 - MULTIPLICITY OF INCIDENT PARTICLE.                          CALX-072
C       3 - MULTIPLICITY OF THE TARGET.                                 CALX-073
C       4 - PRODUCT OF CHARGES.                                         CALX-074
C       5 - INDEX OF POTENTIAL.                                         CALX-075
C       6,7,8,9 - BEGINNING AND END IN THE TWO PARTS OF TABLE MF-FM     CALX-076
C                           (SEE DEPH).                                 CALX-077
C      10 - MAXIMUM ANGULAR MOMENTUM.                                   CALX-078
C      11 - INDEX OF POTENTIAL ENERGY DEPENDENT BY DISPERSION RELATIONS.CALX-079
C  NIPP:    IPP(2,18,NPP)/PIP(18,NPP) DISPERSION PARAMETERS.            CALX-080
C     1,1 - FIRST LEVEL USING THIS POTENTIAL BEFORE INPUT OF PARAMETERS.CALX-081
C           REPLACED BY INDICATION TO USE LABORATORY ENERGY (1), CENTRE CALX-082
C           OF MASS ENERGY (-1) OR READ COEFFICIENTS (0).               CALX-083
C     2,1 - N2 - POWER FOR LARGE NEGATIVE ENERGY CORRECTIONS.           CALX-084
C     1,2 - NV - |NV| POWER FOR VOLUME POTENTIAL.                       CALX-085
C     2,2 - NS - |NS| POWER FOR SURFACE POTENTIAL.                      CALX-086
C             SUM OF TWO TERMS IF NV OR NS ARE NEGATIVE,                CALX-087
C             ABSENCE OF VOLUME OR SURFACE TERM IF NV OR NS ARE 0.      CALX-088
C     1,3 - NL - |NL| POWER FOR SPIN-ORBIT POTENTIAL.                   CALX-089
C       4 - ENERGY CORRESPONDING TO THE DEPTHS READ.                    CALX-090
C       5 - FERMI ENERGY EF.                                            CALX-091
C       6 - THRESHOLD ENERGY EP.                                        CALX-092
C       7 - LARGE ENERGY STARTING VALUE ABOVE FERMI ENERGY EA.          CALX-093
C       8 - EXPONENTIAL VARIATION OF REAL SPIN-ORBIT.                   CALX-094
C       9 - LINEAR VARIATION OF IMAGINARY SPIN-ORBIT.                   CALX-095
C      10 - BV PARAMETER FOR VOLUME POTENTIALS.                         CALX-096
C      11 - STRENGTH OF LARGE POSITIVE ENERGY TERM IN VOLUME POTENTIAL, CALX-097
C           SECOND BV' PARAMETER FOR VOLUME POTENTIALS IF NV<0.         CALX-098
C      12 - EXPONENTIAL DECREASE IN SQRT|E| FOR LARGE ENERGY TERMS OF   CALX-099
C           VOLUME POTENTIALS OR FRACTION IN THE FIRST TERM IF NV<0.    CALX-100
C      13 - BS PARAMETER FOR SURFACE POTENTIALS.                        CALX-101
C      14 - EXPONENTIAL DECREASE OF A SURFACE POTENTIAL OR SECOND BS'   CALX-102
C           PARAMETER FOR SURFACE POTENTIALS IF NS<0.                   CALX-103
C      15 - NON-LOCALITY RANGE PARAMETER OF SURFACE POTENTIAL OR        CALX-104
C           FRACTION IN THE FIRST TERM IF NS<0.                         CALX-105
C      16 - BL PARAMETER FOR SPIN-ORBIT POTENTIALS.                     CALX-106
C      17 - EXPONENTIAL VARIATION OF H.F. REAL VOLUME POTENTIAL.        CALX-107
C  NWV:     WV(20,NCOLX) IBM-DOUBLE PRECISION VALUES FOR THE CHANNELS.  CALX-108
C       1 - MASS OF THE PARTICLE.                                       CALX-109
C       2 - MASS OF THE TARGET.                                         CALX-110
C       3 - ENERGY IN THE CENTRE OF MASS IN MEV.                        CALX-111
C       4 - K WAVE NUMBER.                                              CALX-112
C       5 - COULOMB PARAMETER.                                          CALX-113
C       6 - REDUCED MASS.                                               CALX-114
C       7 - REDUCED ENERGY.                                             CALX-115
C       8 - STEP SIZE FOR THIS LEVEL.                                   CALX-116
C       9 - SQUARE ROOT OF COEFFICIENT OF SCALAR POTENTIALS.            CALX-117
C      10 - SQUARE ROOT OF COEFFICIENT OF COULOMB POTENTIALS.           CALX-118
C      11 - K WAVE NUMBER MULTIPLIED BY RATIO OF STEP SIZES.            CALX-119
C      12 - REDUCED ENERGY TERM.                                        CALX-120
C      13 - ENERGY IN THE LABORATORY SYSTEM IN MEV.                     CALX-121
C      14,15,16,17,18,19,20 - DISPERSION CORRECTIONS (SEE DISP).        CALX-122
C                                                                       CALX-123
C THE COMMON /CONVE/ IS USED IN CALC, CALX, LECT, CAL1, STDP, FOLD,     CALX-124
C                               INTI, INSH, INSI, INRH, INRI AND REST.  CALX-125
C THE COMMON /DCHI2/ IS USED IN CALC, CALX, RESU, VARI, EVAL, REST      CALX-126
C                               AND FITE.                               CALX-127
C THE COMMON /NCOMP/ IS USED IN CALC, CALX, LECT, CONU, GGDR, CAL1,     CALX-128
C                               QUAN, SCAM, SCHE, RESU, VARI, EVAL,     CALX-129
C                               AND REST.                               CALX-130
C                                                                       CALX-131
C FOR THE COMMON  /ANGUL/ SEE LECT.                                     CALX-132
C FOR THE COMMON  /ADDRE/, /INTEG/ AND /TITRE/ SEE CALC.                CALX-133
C                                                                       CALX-134
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /ADDRE/:                     CALX-135
C  NIPH:      NUMBER OF PHONONS FOR THE HARMONIC VIBRATIONAL MODEL.     CALX-136
C  NJIT:      DATA FOR INTERPOLATION ON TOTAL SPIN.                     CALX-137
C  NWV:       NON INTEGER VALUES FOR THE CHANNELS.                      CALX-138
C  NIPP:      DISPERSION PARAMETERS.                                    CALX-139
C  NPAR:      INDICATIONS FOR NUCLEAR PARAMETERS.                       CALX-140
C  NPAA:      VALUES OF NUCLEAR PARAMETERS.                             CALX-141
C  NSCN:      LEVEL DENSITY DESCRIPTION.                                CALX-142
C  NFIS:      FISSION DATA FOR COMPOUND NUCLEUS.                        CALX-143
C  NGAM:      GAMMA DATA FOR COMPOUND NUCLEUS.                          CALX-144
C  NNIV:      ADDRESSES OF REDUCED NUCLEAR MATRIX ELEMENTS AND COULOMB  CALX-145
C             INTEGRALS IN NIV(NCOLL,NCOLL,3).                          CALX-146
C  NPOT:      OPTICAL POTENTIAL PARAMETERS.                             CALX-147
C  NBETA:     DEFORMATION PARAMETERS.                                   CALX-148
C  NFM:       HELICITIES AND OBSERVABLES (SEE DEPH,LECD AND OBSE).      CALX-149
C  NTGX:      BEGINNING OF CHI2 AND NORMALISATION OF DATA.              CALX-150
C  NDONN:     EXPERIMENTAL DATA.                                        CALX-151
C  NNVI:      TABLE OF ADDRESSES OF COUPLING COEFFICIENTS.              CALX-152
C  NDE:       SEARCH ACCURACIES.                                        CALX-153
C  NISE:      INDEXES OF THE VARIABLE PARAMETERS IN SEARCH.             CALX-154
C  NRC:       PERMANENT WORKING FIELD FOR THE SEARCH.                   CALX-155
C  NIW:       INTEGER WORKING FIELD FOR THE SEARCH.                     CALX-156
C  NNWI:      SAME AS NNVI FOR SYMMETRISED EQUATIONS.                   CALX-157
C  NCC:       TABLE OF ENERGIES, L*(L+1) AND L*S  (SEE QUAN).           CALX-158
C  MCC:       SAME AS NCC FOR SYMMETRISED EQUATIONS.                    CALX-159
C  NXA:       TABLE OF COEFFICIENTS OF SYMMETRISATION.                  CALX-160
C  NAM1:      COMPUTATION OF OBSERVABLES (SEE OBSE).                    CALX-161
C  NFAC:      TABLE OF LOG OF FACTORIALS FOR GEOMETRIC COEFFICIENTS.    CALX-162
C  NFG:       COULOMB FUNCTIONS AND FINITE INTEGRALS.                   CALX-163
C  NXG:       COULOMB PHASES AND INFINITE INTEGRALS.                    CALX-164
C  NRES:      FUNCTIONS FOR THE SEARCH.                                 CALX-165
C  NXX:       VARIABLES FOR THE SEARCH.                                 CALX-166
C  NT:        TABLE OF REDUCED NUCLEAR MATRIX ELEMENTS.                 CALX-167
C   DEFINED:  NIPH,NJIT,NWV,NIPP,NPAR,NPAA,NSCN,NFIS,NGAM,NNIV,NPOT,    CALX-168
C             NBETA,NFM,NTGX,NDONN,NNVI,NDE,NISE,NRC,NIW,NNWI,NCC,MCC,  CALX-169
C             NXA,NAM1,NFAC,NFG,NXG,NRES,NXX,NT.                        CALX-170
C   USED:     NIPH,NJIT,NWV,NIPP,NPAR,NPAA,NSCN,NFIS,NGAM,NNIV,NPOT,    CALX-171
C             NBETA,NFM,NTGX,NDONN,NNVI,NDE,NISE,NRC,NIW,NNWI,NCC,MCC,  CALX-172
C             NXA,NAM1,NFAC,NFG,NXG,NRES,NXX,NT.                        CALX-173
C                                                                       CALX-174
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /ANGUL/:                     CALX-175
C  THETA1:    FIRST ANGLE FOR COMPUTATION AT EQUIDISTANT ANGLES.        CALX-176
C  DTHETA:    STEP FOR COMPUTATION AT EQUIDISTANT ANGLES.               CALX-177
C  THETA2:    LAST ANGLE FOR COMPUTATION AT EQUIDISTANT ANGLES.         CALX-178
C  NCJ:       NUMBER OF FACTORISATIONS OF 1/(1-COS(THETA)) IN AMPLITUDE.CALX-179
C  NL(1):     POWER OF (1-COS(THETA)) FOR THE EXPANSION IN LEGENDRE     CALX-180
C             POLYNOMIALS OF THE INTERFERENCE BETWEEN COULOMB AND       CALX-181
C             NUCLEAR ELASTIC SCATTERING. POWER OF (1-COS(THETA)**2)    CALX-182
C             IF LO(18) IS .TRUE..                                      CALX-183
C  NL(2):     NUMBER OF LEGENDRE POLYNOMIALS FOR ELASTIC SCATTERING OF  CALX-184
C             CHARGED PARTICLES.                                        CALX-185
C  NL(3):     NUMBER OF LEGENDRE POLYNOMIALS FOR ELASTIC SCATTERING OF  CALX-186
C             UNCHARGED PARTICLES, INELASTIC SCATTERING AND COMPOUND    CALX-187
C             NUCLEUS.                                                  CALX-188
C   DEFINED:  NCJ,NL.                                                   CALX-189
C   USED:     THETA1,DTHETA,THETA2,NCJ,NL.                              CALX-190
C                                                                       CALX-191
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /CONVE/:                     CALX-192
C  H:         STEP SIZE FOR INTEGRATION.                                CALX-193
C  BJM:       CONVERGENCE COEFFICIENT OF IMAGINARY POTENTIAL.           CALX-194
C  EITER:     CONVERGENCE CRITERION FOR S-MATRIX.                       CALX-195
C  ACONV:     CONVERGENCE CRITERION FOR POTENTIAL AND FUNCTION.         CALX-196
C  CONJ:      CONVERGENCE CRITERION FOR THE SCATTERING AMPLITUDES.      CALX-197
C  HCONV:     ACONV*H*H CONVERGENCE CRITERION FOR SECOND MEMBERS.       CALX-198
C   DEFINED:  H,BJM,EITER,ACONV,CONJ,HCONV.                             CALX-199
C   USED:     BJM,EITER,ACONV,CONJ.                                     CALX-200
C                                                                       CALX-201
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     CALX-202
C  IQM:       MAXIMUM L-VALUE OF DEFORMATION IN ROTATIONAL MODEL.       CALX-203
C  IQMAX:     MAXIMUM L-EXPANSION IN ROTATIONAL MODEL.                  CALX-204
C  NBT1:      NUMBER OF PHONONS (VIBRATIONS).                           CALX-205
C  NFA:       NUMBER OF LOGARITHMS OF FACTORIALS.                       CALX-206
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             CALX-207
C  NSPIN:     TWICE THE K-VALUE OF THE ROTATIONAL BAND.                 CALX-208
C  NVA:       NUMBER OF NUCLEAR PARAMETERS.                             CALX-209
C   DEFINED:  NBT1,NFA,NPP,NVA.                                         CALX-210
C   NOT USED: IQM,IQMAX,NSPIN,NVA.                                      CALX-211
C                                                                       CALX-212
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCHI2/:                     CALX-213
C  CHI2:      CHI-SQUARE COMPUTED IN SUBROUTINE RESU.                   CALX-214
C  CHI2M:     MINIMUM CHI-SQUARE IN THE SEARCH.                         CALX-215
C  YY(1):     STEP SIZE IN THE SEARCH.                                  CALX-216
C  YY(2):     HALF OF THE SUCCESS MULTIPLICATIVE FACTOR OF THE STEP.    CALX-217
C  YY(3):     VARIOUS MEANINGS.  SEE FITE.                              CALX-218
C   DEFINED:  YY.                                                       CALX-219
C   NOT USED: CHI2,CHI2M.                                               CALX-220
C                                                                       CALX-221
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /INTEG/:                     CALX-222
C  IDMT:      TOTAL WORKING FIELD LENGTH AS DOUBLE PRECISION.           CALX-223
C  NPLACE:    MAXIMUM WORKING FIELD USED.                               CALX-224
C  NCOLL:     NUMBER OF COUPLED CHANNELS.                               CALX-225
C  NJMAX:     MAXIMUM NUMBER OF J-VALUES.                               CALX-226
C  ITERM:     MAXIMUM NUMBER OF ITERATIONS.                             CALX-227
C  JDM:       MINIMUM NUMBER OF TOTAL SPIN.                             CALX-228
C  JIT:       NUMBER OF RATES OF INTERPOLATION ON TOTAL SPIN.           CALX-229
C  KMIN:      MINIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUS.          CALX-230
C  KMAX:      MAXIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUS.          CALX-231
C  NCOLS:     NUMBER OF CHANNELS WITH ANGULAR DISTRIBUTIONS.            CALX-232
C  NCOLT:     NUMBER OF CHANNELS INCLUDING UNCOUPLED STATES.            CALX-233
C  NBET:      NUMBER OF DIFFERENT DEFORMATIONS (VIBRATIONS+ROTATIONS).  CALX-234
C  LMX:       DIFFERENCE BETWEEN NUMBER OF J AND OF COULOMB FUNCTIONS.  CALX-235
C  LMAX1:     NUMBER OF L-VALUES FOR COULOMB FUNCTIONS.                 CALX-236
C  NLT:       MEMORIES NEEDED FOR LEGENDRE POLYNOMIALS.                 CALX-237
C  ISM:       NUMBER OF INTEGRATION STEPS.                              CALX-238
C  NJC:       MAXIMUM NUMBER OF OBSERVABLES AT EQUIDISTANT ANGLES.      CALX-239
C  JTX:       MAXIMUM NUMBER OF CALCULATED VALUES FOR A PLOT.           CALX-240
C  KCC:       NUMBER OF INDEPENDENT AMPLITUDES WITH UNCOUPLED STATES.   CALX-241
C  MS1:       LARGEST PARTICLE MULTIPLICITY.                            CALX-242
C  MS2:       LARGEST TARGET MULTIPLICITY.                              CALX-243
C  KBA:       NUMBER OF INDEPENDENT AMPLITUDES WITHOUT UNCOUPLED STATES.CALX-244
C  KAB:       MAXIMUM NUMBER OF EQUATIONS.                              CALX-245
C  KBC:       MAXIMUM NUMBER OF SOLUTIONS.                              CALX-246
C  JTH:       MAXIMUM NUMBER OF ANGLES FOR A PLOT.                      CALX-247
C  NCOLR:     NUMBER OF EXPERIMENTAL ANGULAR DISTRIBUTIONS.             CALX-248
C  NREC:      NUMBER OF VARIABLES IN SEARCH.                            CALX-249
C  NTOT:      NUMBER OF EXPERIMENTAL DATA.                              CALX-250
C  LMAX2:     NUMBER OF L VALUES FOR COULOMB PHASES.                    CALX-251
C  KE:        CONTROL OF SEARCH (SEE FITE).                             CALX-252
C  ITEMM:     MAXIMUM NUMBER OF ITERATIONS AT THE BEGINNING OF A RUN.   CALX-253
C  MCM(1):    MAXIMUM ANGULAR MOMENTUM FOR CENTRAL COULOMB CORRECTIONS. CALX-254
C  MCM(2):    MAXIMUM ANGULAR MOMENTUM FOR SPIN-ORBIT COULOMB CORRECT.  CALX-255
C  NCT(1):    NUMBER OF EQUATIONS FOR POSITIVE PARITY.                  CALX-256
C  NCT(2):    NUMBER OF EQUATIONS FOR NEGATIVE PARITY.                  CALX-257
C  NCT(3):    NUMBER OF SOLUTIONS FOR POSITIVE PARITY.                  CALX-258
C  NCT(4):    NUMBER OF SOLUTIONS FOR NEGATIVE PARITY.                  CALX-259
C  NCT(5):    NUMBER OF COMPOUND NUCLEUS COEFFICIENTS, POSITIVE PARITY. CALX-260
C  NCT(6):    NUMBER OF COMPOUND NUCLEUS COEFFICIENTS, NEGATIVE PARITY. CALX-261
C   DEFINED:  NPLACE,NCOLL,NJMAX,ITERM,JDM,JIT,KMIN,KMAX,NCOLS,NCOLT,   CALX-262
C             NBET,LMX,LMAX1,NLT,ISM,NJC,JTX,KCC,MS1,MS2,KBA,KAB,KBC,   CALX-263
C             JTH,NCOLR,NREC,NTOT,LMAX2,KE,ITEMM,MCM,NCT.               CALX-264
C   USED:     IDMT,NPLACE,NCOLL,NJMAX,ITERM,JDM,JIT,KMAX,NCOLS,NCOLT,   CALX-265
C             NBET,LMX,LMAX1,JTX,KCC,KAB,KBC,JTH,NCOLR,NREC,NTOT,LMAX2. CALX-266
C                                                                       CALX-267
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     CALX-268
C  NSP(1):    NUMBER OF UNCOUPLED LEVELS FOR COMPOUND NUCLEUS           CALX-269
C             INCLUDING DISCRETISATION OF CONTINUUM.                    CALX-270
C  NSP(2):    NUMBER OF THESE LEVELS WITH ANGULAR DISTRIBUTION.         CALX-271
C  NSP(3):    NUMBER OF THESE LEVELS WITHOUT ANGULAR DISTRIBUTION.      CALX-272
C  NFISS:     NUMBER OF FISSION TRANSMISSION COEFFICIENTS.              CALX-273
C  NRD:       NUMBER OF GAMMA TRANSMISSION COEFFICIENTS.                CALX-274
C  NCONT:     NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS.                 CALX-275
C  NCOJ:      NUMBER OF SPINS OF THE TARGET FOR A CONTINUUM.            CALX-276
C  NCONS:     NUMBER OF LEVEL DENSITIES NEEDED.                         CALX-277
C  NIE:       NUMBER OF UNCOUPLED STATES ADDED FOR DISCRETISATION.      CALX-278
C  NCOLX:     TOTAL NUMBER OF LEVELS WITHOUT DISCRETISATION.            CALX-279
C  NDP:       ADDRESS OF FISSION AND GAMMA FINAL RESULTS.               CALX-280
C  NDQ:       ADDRESS OF FISSION AND GAMMA INTERMEDIATE RESULTS.        CALX-281
C  ACN1:      RATIO SIZE/STEP FOR DISCRETISATION OF A CONTINUUM.        CALX-282
C  ACN2:      MAXIMUM NUMBER OF STEPS BY MEV FOR A CONTINUUM.           CALX-283
C  AZ(6):     DEFORMED SPIN-ORBIT PARAMETERS. SEE ALSO COMMENT IN       CALX-284
C             INPUT DESCRIPTION AND SUBROUTINE QUAN.                    CALX-285
C  BZ(5):     HAUSER-FESHBACH AND MOLDAUER'S PARAMETERS DESCRIBED BELOW.CALX-286
C   BZ(1):    SQUARE ROOT OF ELASTIC ENHANCEMENT.                       CALX-287
C   BZ(2):    IF LO(82)=.TRUE., SPIN CUT-OFF PARAMETER.                 CALX-288
C             IF LO(82)=.FALSE., PARTICLE DEGREES OF FREEDOM.           CALX-289
C   BZ(3):    SQUARE ROOT OF LEVEL DENSITY PARAMETER. IF LO(82)=LO(87)= CALX-290
C             .FALSE., PARAMETER BZ(3) IN MOLDAUER'S FORMULA OF INPUT   CALX-291
C             DESCRIPTION.                                              CALX-292
C   BZ(4):    IF LO(82)=LO(87)=.FALSE., PARAMETER BZ(4) IN SAME FORMULA.CALX-293
C   BZ(5):    IF LO(82)=LO(87)=.FALSE., PARAMETER BZ(5) IN SAME FORMULA.CALX-294
C  TG0:       SLOW S-WAVE NEUTRON GAMMA WIDTH/SPACING FOR NORMALISATION.CALX-295
C  BN:        NEUTRON SEPARATION ENERGY.                                CALX-296
C  FNUG:      RADIATIVE DEGREES OF FREEDOM.                             CALX-297
C  EGD:       ENERGY OF THE GIANT DIPOLE RESONANCE.                     CALX-298
C  GGD:       RESONANCE WIDTH.                                          CALX-299
C  TG1:       DERIVED DATA FOR GAMMA IN COMPOUND NUCLEUS.               CALX-300
C  SGSQ:      DERIVED DATA FOR GAMMA IN COMPOUND NUCLEUS.               CALX-301
C   DEFINED:  NSP,NFISS,NRD,NCONT,NCOJ,NCONS,NCOLX,ACN1,ACN2.           CALX-302
C   USED:     NSP,NFISS,NRD,NCONT,NCOJ,NCONS,NCOLX,ACN1,ACN2.           CALX-303
C   NOT USED: NIE,NDP,NDQ,AZ,BZ,TG0,BN,FNUG,EGD,TGD,TG1,SGSQ.           CALX-304
C             AZ(6),BZ(5) AND FOLLOWING ARE SOMETIMES GROUPED IN AZ(18);CALX-305
C             THIS IS NECESSARY FOR AUTOMATIC SEARCH.                   CALX-306
C                                                                       CALX-307
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /TITRE/:                     CALX-308
C  TITLE(18): TITLE OF THE RUN PRINTED AS HEADING OF RESULTS.           CALX-309
C   DEFINED:  TITLE.                                                    CALX-310
C   USED:     TITLE.                                                    CALX-311
C                                                                       CALX-312
C***********************************************************************CALX-313
      IMPLICIT REAL*8 (A-H,O-Z)                                         CALX-314
      LOGICAL LO(150)                                                   CALX-315
      DIMENSION NW(2,*),NGR(2),NPR(2),DESC(3),DW(*)                     CALX-316
      CHARACTER*4 FIN,DESC,TITLE,CW(2,*)                                CALX-317
      COMMON /ADDRE/ NIPH,NJIT,NWV,NIPP,NPAR,NPAA,NSCN,NFIS,NGAM,NNIV,NPCALX-318
     1OT,NBETA,NFM,NTGX,NDONN,NNVI,NDE,NISE,NRC,NIW,NNWI,NCC,MCC,NXA,NAMCALX-319
     21,NFAC,NFG,NXG,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,NXD,MWV,NIXT,NCALX-320
     3TY,NSM,NTX,NRY,NRCO,NRDO,NVC1,NVC2,NNC,NCX                        CALX-321
      COMMON /ANGUL/ THETA1,THETA2,DTHETA,DTHE,NCJ,NL(3),JMM(2)         CALX-322
      COMMON /CONVE/ H,BJM,EITER,ACONV,CONJ,HCONV                       CALX-323
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   CALX-324
      COMMON /DCHI2/ CHI2,CHI2M,YY(3)                                   CALX-325
      COMMON /INOUT/ MR,MW,MS                                           CALX-326
      COMMON /INTEG/ IDMT,NPLACE,NCOLL,NJMAX,ITERM,JDM,JIT,KMIN,KMAX,NCOCALX-327
     1LS,NCOLT,NBET,LMX,LMAX1,NLT,ISM,NJC,JTX,KCC,MS1,MS2,KBA,KAB,KBC,JTCALX-328
     2H,NCOLR,NREC,NTOT,LMAX2,KE,ITEMM,KXT,LMAX3,NRZ,NTZ,IPM,IPK,MCM(2),CALX-329
     3NCT(6)                                                            CALX-330
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQCALX-331
     1,ACN1,ACN2,AZ(6),BZ(5),TG0,BN,FNUG,EGD,GGD,TG1,SGSQ               CALX-332
      COMMON /TITRE/ TITLE(18)                                          CALX-333
      DATA FIN,DESC /'FIN ','DESC','RIPT','ION '/                       CALX-334
    1 READ (MR,1000) TITLE                                              CALX-335
      DO 2 J=1,3                                                        CALX-336
      IF (TITLE(J).NE.DESC(J)) GO TO 3                                  CALX-337
    2 CONTINUE                                                          CALX-338
      CALL INPA                                                         CALX-339
      CALL INPB                                                         CALX-340
      CALL INPC                                                         CALX-341
      GO TO 1                                                           CALX-342
    3 IF (TITLE(1).EQ.FIN) RETURN                                       CALX-343
      DO 4 I=1,100                                                      CALX-344
    4 LO(I)=.FALSE.                                                     CALX-345
      READ (MR,1001) (LO(I),I=1,50)                                     CALX-346
C IF LO(36)=.TRUE. RETURN TO RESTART A SEARCH SAVED ON TAPE 8.          CALX-347
      IF (LO(36)) RETURN                                                CALX-348
      READ (MR,1001) (LO(I),I=51,100)                                   CALX-349
      READ (MR,1002) NCOLL,NJMAX,ITERM,NPP,NCJ,NGR,NPR,LMZ,JDM,LML,JIT,MCALX-350
     1N                                                                 CALX-351
C ELIMINATION OF CONTRADICTIONS BETWEEN LOGICAL CONTROLS.               CALX-352
      IF (NCOLL.LE.1) LO(28)=.TRUE.                                     CALX-353
      IF (.NOT.LO(31)) LO(32)=.FALSE.                                   CALX-354
      IF (LO(30)) ITERM=1                                               CALX-355
      IF (LO(18)) LO(29)=.TRUE.                                         CALX-356
      IF (LO(99)) LO(100)=.FALSE.                                       CALX-357
      LO(109)=LO(99).OR.LO(100)                                         CALX-358
      IF (LO(109)) LO(29)=.FALSE.                                       CALX-359
      IF (LO(109).AND.LO(95)) LO(94)=.FALSE.                            CALX-360
      IF (LO(109)) LO(8)=.TRUE.                                         CALX-361
      IF (LO(82)) LO(84)=.FALSE.                                        CALX-362
      IF (LO(82)) LO(85)=.FALSE.                                        CALX-363
      IF (LO(82)) LO(86)=.FALSE.                                        CALX-364
      IF (LO(82).OR.LO(84).OR.LO(85).OR.LO(86)) LO(81)=.TRUE.           CALX-365
      LO(44)=(LO(44).AND.LO(11)).OR.LO(99)                              CALX-366
      IF ((.NOT.LO(10)).OR.(.NOT.LO(12))) LO(20)=.FALSE.                CALX-367
      LO(124)=LO(81).OR.LO(63)                                          CALX-368
      WRITE (MW,1003) IDMT                                              CALX-369
C OUTPUT OF LOGICAL CONTROLS.                                           CALX-370
      IF (LO(71)) GO TO 5                                               CALX-371
      WRITE (MW,1004) (LO(I),LO(I+53),I=1,3),(LO(I+53),LO(I),I=4,5),LO(6CALX-372
     1),LO(59),(LO(I),I=7,8),(LO(I),LO(51+I),I=9,10)                    CALX-373
      WRITE (MW,1005) (LO(I),LO(I+51),I=11,13),LO(14),LO(15),LO(65),LO(1CALX-374
     16),(LO(I),LO(I+49),I=17,20),(LO(I),LO(I+50),I=21,22)              CALX-375
      WRITE (MW,1006) (LO(I),LO(I+50),I=23,25),LO(76),LO(26),LO(27),LO(7CALX-376
     17),LO(78),LO(28),LO(29),LO(81),LO(30),LO(82),LO(83),LO(31)        CALX-377
      WRITE (MW,1007) (LO(I),LO(I+52),I=32,34),LO(87),LO(35),LO(36),LO(9CALX-378
     11),(LO(I+51),LO(I),I=41,44),LO(45),LO(46),LO(96)                  CALX-379
      WRITE (MW,1008) LO(47),LO(97),(LO(I),LO(I+47),I=51,53)            CALX-380
      GO TO 6                                                           CALX-381
    5 WRITE (MW,1009) (LO(I),I=1,100)                                   CALX-382
    6 WRITE (MW,1010) TITLE                                             CALX-383
      IF (LO(99).AND.(LO(10).OR.(NPP.GT.1))) GO TO 19                   CALX-384
      IF (LO(109).AND.(.NOT.LO(8))) WRITE (MW,1011)                     CALX-385
      READ (MR,1012) H,RM,BJM,EITER,ACONV,CONJ                          CALX-386
C DEFECT VALUES OF NJMAX,ITERM,NPP,NCJ,NPR,NGR,EITER,ACONV,CONJ.        CALX-387
C FOR NPR AND NGR, SEE DEPH.                                            CALX-388
      IF (NJMAX.EQ.0) NJMAX=20                                          CALX-389
      IF (ITERM.EQ.0) ITERM=20                                          CALX-390
      IF (NPP.EQ.0) NPP=1                                               CALX-391
      IF (NPR(1).EQ.0) NPR(1)=1                                         CALX-392
      IF (NPR(2).EQ.0) NPR(2)=1                                         CALX-393
      IF (NGR(1).EQ.0) NGR(1)=2                                         CALX-394
      IF (NGR(2).EQ.0) NGR(2)=2                                         CALX-395
      IF (NCJ.LE.0) NCJ=1                                               CALX-396
      IF (JIT.EQ.0) JIT=1                                               CALX-397
      IF (.NOT.LO(43)) JIT=0                                            CALX-398
      IF (MN.LE.0) MN=1                                                 CALX-399
      NJMAX=MN*NJMAX                                                    CALX-400
      IF (EITER.EQ.0.D0) EITER=1.D-5                                    CALX-401
      IF (ACONV.EQ.0.D0) ACONV=1.D-5                                    CALX-402
      IF (CONJ.EQ.0.D0) CONJ=1.D-5                                      CALX-403
C OUTPUT OF TITLE, MASSES, ETC...                                       CALX-404
      WRITE (MW,1013) NJMAX,JDM,CONJ,NGR,NPR                            CALX-405
      IF (LO(41)) WRITE (MW,1014) NCJ                                   CALX-406
      IF (LML.NE.0) WRITE (MW,1015) LML                                 CALX-407
      IF (.NOT.LO(21)) WRITE (MW,1016) ITERM,EITER,ACONV                CALX-408
      LO(128)=LO(21).OR.LO(29).OR.BJM.NE.0.D0                           CALX-409
      IF (BJM.NE.0.D0) WRITE (MW,1017) BJM                              CALX-410
      IF (LO(21)) WRITE (MW,1018)                                       CALX-411
      IF (LO(21).AND.LO(42)) WRITE (MW,1019) ITERM                      CALX-412
C INITIALISATION OF A SEARCH OR A SINGLE RUN.                           CALX-413
      DO 7 I=111,120                                                    CALX-414
    7 LO(I)=.FALSE.                                                     CALX-415
      LO(115)=.TRUE.                                                    CALX-416
C LIMITATION ON ANGULAR MOMENTUM FOR COULOMB CORRECTIONS.               CALX-417
      MCM(1)=3                                                          CALX-418
      MCM(2)=2                                                          CALX-419
      IF (.NOT.LO(45)) GO TO 8                                          CALX-420
      READ (MR,1002) MC1,MC2                                            CALX-421
      IF (MC1.GT.0) MCM(1)=MIN0(MC1,5)                                  CALX-422
      IF (MC2.GT.0) MCM(2)=MIN0(MC2,4)                                  CALX-423
      IF (MC1.LT.0) MCM(1)=0                                            CALX-424
      IF (MC2.LT.0) MCM(2)=0                                            CALX-425
      WRITE (MW,1020) MCM                                               CALX-426
    8 NL2=3*NJMAX                                                       CALX-427
      NL3=2*NJMAX                                                       CALX-428
C LEGENDRE POLYNOMIALS DATA.                                            CALX-429
      IF (.NOT.LO(65)) GO TO 9                                          CALX-430
      READ (MR,1002) NL                                                 CALX-431
      IF (NL(1).EQ.0) NL(1)=2                                           CALX-432
      IF (NL(2).NE.0) NL2=NL(2)                                         CALX-433
      IF (NL(3).NE.0) NL3=NL(3)                                         CALX-434
      IF (LO(65)) WRITE (MW,1021) NL                                    CALX-435
C COMPOUND NUCLEUS DATA.                                                CALX-436
    9 NSP(1)=0                                                          CALX-437
      NSP(2)=0                                                          CALX-438
      NSP(3)=0                                                          CALX-439
      NFISS=0                                                           CALX-440
      NRD=0                                                             CALX-441
      NCONT=0                                                           CALX-442
      NCONS=0                                                           CALX-443
      IF (.NOT.(LO(84).OR.LO(85).OR.LO(86))) GO TO 10                   CALX-444
      READ (MR,1022) NSP(1),NSP(2),NFISS,NRD,NCONT,NCOJ,KMIN,KMAX,ACN1,ACALX-445
     1CN2                                                               CALX-446
      IF (.NOT.LO(84)) NSP(1)=0                                         CALX-447
      NSP(2)=MIN0(NSP(1),NSP(2))                                        CALX-448
      NSP(3)=NSP(1)-NSP(2)                                              CALX-449
      IF (NSP(3).LT.NCONT) GO TO 20                                     CALX-450
      IF (.NOT.LO(85)) NFISS=0                                          CALX-451
      IF (.NOT.LO(86)) NRD=0                                            CALX-452
      IF (NFISS.EQ.0) LO(85)=.FALSE.                                    CALX-453
      IF (LO(84).OR.LO(85).OR.LO(86)) WRITE (MW,1023) NSP,NFISS,NRD,NCONCALX-454
     1T                                                                 CALX-455
      NCONS=NCONT                                                       CALX-456
      IF (LO(86).AND.NRD.EQ.0) NCONS=NCONS+1                            CALX-457
      IF (NCONT.EQ.0) GO TO 10                                          CALX-458
      IF (NCOJ.LE.0) NCOJ=30                                            CALX-459
      IF (ACN1.LE.1.D0) ACN1=8.D0                                       CALX-460
      IF (ACN2.LE.1.D0) ACN2=8.D0                                       CALX-461
      WRITE (MW,1024) NCOJ,ACN1,ACN2                                    CALX-462
   10 NCOLX=NCOLL+NSP(1)                                                CALX-463
      NCOLS=NCOLL+NSP(2)                                                CALX-464
      NCOLT=NCOLX                                                       CALX-465
      NIPH=(11*NCOLX+1)/2+1                                             CALX-466
      NJIT=NIPH+NCOLL                                                   CALX-467
      IF (LO(7)) NJIT=NIPH                                              CALX-468
      NWV=NJIT+JIT                                                      CALX-469
      NIPP=NWV+22*NCOLX                                                 CALX-470
      NPAR=NIPP+17*NPP                                                  CALX-471
      NPLACE=NPAR                                                       CALX-472
      CALL MEMO('CALX',IDMT,NPLACE)                                     CALX-473
C INTERPOLATION DATA.                                                   CALX-474
      IF (.NOT.LO(43)) GO TO 12                                         CALX-475
      K=NJIT                                                            CALX-476
      READ (MR,1002) (NW(1,NJIT+I-1),NW(2,NJIT+I-1),I=1,JIT)            CALX-477
      WRITE (MW,1025) (NW(1,NJIT+I-1),NW(2,NJIT+I-1),I=1,JIT)           CALX-478
      M=0                                                               CALX-479
      L=-1                                                              CALX-480
      DO 11 I=1,JIT                                                     CALX-481
      IF (NW(1,NJIT+I-1).LT.L) GO TO 21                                 CALX-482
      L=NW(1,NJIT+I-1)                                                  CALX-483
      NW(2,NJIT+I-1)=NW(2,NJIT+I-1)-M                                   CALX-484
      M=M+NW(2,NJIT+I-1)                                                CALX-485
   11 K=K+2                                                             CALX-486
      WRITE (MW,1026) (NW(2,NJIT+I-1),I=1,JIT)                          CALX-487
C INPUT OF LEVEL DESCRIPTIONS.                                          CALX-488
   12 CALL LECL(NCOLX,NCOLL,NCONT,IDMT-NPAR,LO,NW,NW(1,NIPH),DW(NWV),NW(CALX-489
     11,NIPP),NW(1,NPAR),DW(NPAR),NA,NB,NIMAX,NBET)                     CALX-490
      NPAA=NPAR+NA                                                      CALX-491
      NSCN=NPAA+NVA+NB                                                  CALX-492
      IF (KMIN.EQ.0) KMIN=IABS(NW(2,1)-NW(1,2))/2+NW(1,1)               CALX-493
      IF (KMAX.EQ.0) KMAX=NJMAX                                         CALX-494
      LO(132)=LO(43).AND.((NW(1,NJIT).LT.KMAX).OR.(NW(2,NJIT).NE.0))    CALX-495
C INPUT OF POTENTIALS, DEFORMATIONS ......                              CALX-496
      NBT1=NBET                                                         CALX-497
      LMX=NIMAX/2+2                                                     CALX-498
      LMAX1=NJMAX+LMX                                                   CALX-499
      IF (LML.EQ.0) LML=LMAX1                                           CALX-500
      NW(2,5)=LML                                                       CALX-501
      NFIS=NSCN+7*NCONS                                                 CALX-502
      NGAM=NFIS+2*NFISS                                                 CALX-503
      NNIV=NGAM+NRD                                                     CALX-504
      NPOT=NNIV+(3*NCOLL*NCOLL+1)/2                                     CALX-505
      NBETA=NPOT+57*NPP                                                 CALX-506
      IF (LO(7)) NBETA=NPOT                                             CALX-507
      IF (NBETA+9*NBET.GT.IDMT) CALL MEMO('CALX',IDMT,NBETA+9*NBET)     CALX-508
      IF (DW(NWV+4).EQ.0.) NL2=NL3                                      CALX-509
      NLT=MAX0(NL2,NL3)                                                 CALX-510
      IF (.NOT.LO(65)) NLT=0                                            CALX-511
      CALL LECT(NBET,NW,NW(1,NIPP),DW(NWV),RM,IDMT-NBETA,LO,NW(1,NBETA),CALX-512
     1DW(NBETA),DW(NPOT),DW(NFIS),DW(NGAM),ISM,DW(NSCN))                CALX-513
      HCONV=ACONV*H*H                                                   CALX-514
      NFM=NBETA+9*NBET                                                  CALX-515
      IF (LO(74)) CALL HORA                                             CALX-516
C HELICITY AMPLITUDES AND OBSERVABLES.                                  CALX-517
      NJX=NCOLL                                                         CALX-518
      CALL DEPH(NCOLL,DW(NWV),NW,NGR,NPR,IDMT-NFM,LO,NW(1,NFM),KTGR,NW(1CALX-519
     1,NNIV),NJX,NJY)                                                   CALX-520
      JTH=0                                                             CALX-521
      IF (.NOT.LO(66)) JTH=IDINT((THETA2-THETA1)/DTHETA+1.5D0)          CALX-522
      JTX=JTX*JTH                                                       CALX-523
      NGRM=NFM+5*KCC                                                    CALX-524
      NNVI=NFM+5*KTGR                                                   CALX-525
      NTGX=1                                                            CALX-526
      NDONN=1                                                           CALX-527
      NREC=0                                                            CALX-528
      NTOT=0                                                            CALX-529
      IF (.NOT.LO(31)) GO TO 16                                         CALX-530
C NUMBER OF PARAMETERS IN SEARCH AND EXPERIMENTAL DATA.                 CALX-531
      READ (MR,1027) NCOLR,NREC,NFIT,NESSAI,YY(1),YY(2)                 CALX-532
C SEARCH CONDITIONS.                                                    CALX-533
C DEFECT VALUES FOR NESSAI (MAXIMUM NUMBER OF EVALUATIONS) AND ECH.     CALX-534
C NFIT IS THE NUMBER OF FUNCTIONS STORED FOR SEARCH BEYOND NREC+1.      CALX-535
      IF (NESSAI.EQ.0) NESSAI=100                                       CALX-536
      KFIT=NREC+NFIT+1                                                  CALX-537
      IF (YY(1).EQ.0.D0) YY(1)=20.D0                                    CALX-538
      IF (YY(2).LT.1.D0) YY(2)=1.D0                                     CALX-539
      YY(3)=0.D0                                                        CALX-540
      WRITE (MW,1028) NCOLR                                             CALX-541
      IF (NCOLR.LE.0) GO TO 14                                          CALX-542
      KTGR=KTGR+NCOLR                                                   CALX-543
      NTGX=NFM+5*KTGR                                                   CALX-544
      NDONN=NTGX+7*NCOLR                                                CALX-545
C EXPERIMENTAL DATA.                                                    CALX-546
      IF (NDONN.GT.IDMT) CALL MEMO('CALX',IDMT,NDONN)                   CALX-547
      CALL LECD(DW(NWV),NGR,KFIT,NESSAI,YY,NJY,IDMT-NDONN,LO,NW(1,NNVI),CALX-548
     1NW(1,NTGX),DW(NTGX),DW(NDONN),DW(NDONN),NW(1,NDONN),NMX)          CALX-549
      JTX=MAX0(JTH,JTX)                                                 CALX-550
      NNVI=NDONN+6*NTOT                                                 CALX-551
      IF (.NOT.LO(32)) GO TO 16                                         CALX-552
      IF (NREC.LE.0) GO TO 15                                           CALX-553
      NDE=NNVI                                                          CALX-554
      NISE=NDE+NREC                                                     CALX-555
      NRC=NISE+NMX/2                                                    CALX-556
      NIW=NRC+MAX0(14+NREC+KFIT*(NTOT+NREC+1),(NREC*(NREC+5))/2)        CALX-557
      IF (NIW.GT.IDMT) CALL MEMO('CALX',IDMT,NIW)                       CALX-558
      NW(1,NIW)=KFIT                                                    CALX-559
      NW(2,NIW)=NESSAI                                                  CALX-560
      NW(1,NIW+1)=1                                                     CALX-561
      NNVI=NIW+(KFIT+5)/2                                               CALX-562
      I1=51                                                             CALX-563
      IF (LO(76).OR.(.NOT.LO(75))) I1=59                                CALX-564
      DO 13 I=I1,65                                                     CALX-565
      LO(I+85)=LO(I)                                                    CALX-566
   13 LO(I)=.FALSE.                                                     CALX-567
      LO(116)=LO(75)                                                    CALX-568
      GO TO 16                                                          CALX-569
   14 WRITE (MW,1029)                                                   CALX-570
      LO(31)=.FALSE.                                                    CALX-571
   15 IF (LO(32)) WRITE (MW,1030)                                       CALX-572
      LO(32)=.FALSE.                                                    CALX-573
   16 IF (LO(74)) CALL HORA                                             CALX-574
      NNWI=NNVI                                                         CALX-575
      IF (LO(123)) NNWI=NNWI+(3*KAB*KAB+1)/2                            CALX-576
      NCC=NNWI+2*KAB*KAB                                                CALX-577
      MCC=NCC                                                           CALX-578
      IF (LO(123)) MCC=MCC+3*KAB                                        CALX-579
      NXA=MCC+3*KAB                                                     CALX-580
      NAM1=NXA                                                          CALX-581
      IF (LO(123)) NAM1=NAM1+KBC*KBC                                    CALX-582
      NAM2=NAM1+4*(NJY+16)                                              CALX-583
      IF (NAM2.GT.IDMT) CALL MEMO('CALX',IDMT,NAM2)                     CALX-584
C DO LOOPS AND CG-COEFFICIENTS FOR OBSERVABLES.                         CALX-585
      CALL OBSE(NW(1,NGRM),CW(1,NGRM),KTGR-KCC,NCOLR,NW,IDMT-NAM2,LO,CW(CALX-586
     11,NAM1),JCAL,NW(1,NAM1),CW(1,NAM1),DW(NAM2),CW(1,NAM2),NW(1,NAM2),CALX-587
     2DW(NAM2),NW(1,NAM2))                                              CALX-588
      NFA=4*LMAX1+10-2*NJMAX                                            CALX-589
      NFAC=NAM1+JCAL                                                    CALX-590
      NFG=NFAC+NFA+1                                                    CALX-591
      LMAX2=LMAX1                                                       CALX-592
      IF (.NOT.LO(108)) GO TO 17                                        CALX-593
      LMAX1=LMZ+LMX                                                     CALX-594
      IF (LMZ.EQ.0) LMAX1=LMAX2-NJMAX/2                                 CALX-595
      IF (LMZ.LT.0) LMAX1=LMAX2                                         CALX-596
      WRITE (MW,1031) LMAX2,LMAX1                                       CALX-597
   17 NXG=NFG+4*NJX*LMAX1                                               CALX-598
      NRES=NXG+NJX*LMAX2                                                CALX-599
      KE=0                                                              CALX-600
      NXX=NRES+NTOT                                                     CALX-601
      NT=NXX+NREC                                                       CALX-602
      ITEMM=ITERM                                                       CALX-603
      NPLACE=NT                                                         CALX-604
      IF (NPLACE.GT.IDMT) CALL MEMO('CALX',IDMT,NPLACE)                 CALX-605
      DW(NFAC)=0.D0                                                     CALX-606
      DO 18 I=1,NFA                                                     CALX-607
   18 DW(NFAC+I)=DW(NFAC+I-1)+DLOG(DFLOAT(I))                           CALX-608
      RETURN                                                            CALX-609
   19 WRITE (MW,1032)                                                   CALX-610
      GO TO 22                                                          CALX-611
   20 WRITE (MW,1033) NSP(3),NCONT                                      CALX-612
      GO TO 22                                                          CALX-613
   21 WRITE (MW,1034) I,NW(K,1),L                                       CALX-614
   22 WRITE (MW,1035)                                                   CALX-615
      STOP                                                              CALX-616
 1000 FORMAT (18A4)                                                     CALX-617
 1001 FORMAT (50L1)                                                     CALX-618
 1002 FORMAT (14I5)                                                     CALX-619
 1003 FORMAT ('^L',20X,'E. C. I. S. CODE FOR COUPLED CHANNELS CALCULATIOCALX-620
     1NS ( 2012 ) WORKING FIELD LENGTH =',I10//24X,'TO OBTAIN THE INPUT CALX-621
     2DESCRIPTION, PUNCH ''DESCRIPTION '' IN COLUMNS 1-12 OF THE FIRST CCALX-622
     3ARD.'//)                                                          CALX-623
 1004 FORMAT ('  1',L2,' - ROTATIONAL MODEL-(.F.: VIBRATIONAL MODEL).',9CALX-624
     1X,'| 54',L2,' - OUTPUT OF THE LENGTH USED IN THE WORKING FIELD.'/'CALX-625
     2  2',L2,' - SECOND ORDER VIBRATIONAL MODEL-(.F.: FIRST ORDER)  | 5CALX-626
     35',L2,' - OUTPUT OF C-MATRIX ELEMENTS AND COMPOUND NUCLEUS'/8X,'ORCALX-627
     4 CONSTRAINED ASYMMETRIC ROTATIONAL MODEL.',8X,'|',8X,'INTERMEDIATECALX-628
     5 RESULTS.'/'  3',L2,' - ANHARMONIC VIBRATIONAL MODEL-(.F.: HARMONICALX-629
     6C) OR    | 56',L2,' - OUTPUT OF S-MATRIX ELEMENTS.'/8X,'ASYMMETRICCALX-630
     7 ROTATIONAL MODEL-(.F.: SYMMETRIC).',6X,'| 57',L2,' - OUTPUT OF PHCALX-631
     8ASE-SHIFTS AT EACH E.C.I.S. ITERATION.'/'  4',L2,' - PARAMETRISED CALX-632
     9SPIN-ORBIT DEFORMATION-(.F.:STANDARD) | 58',L2,' - OUTPUT OF THE CCALX-633
     AOEFFICIENTS OF EACH FORM FACTOR'/'  5',L2,' - DIFFERENT DEFORMATIOCALX-634
     BN FOR EACH POTENTIAL(.F.: SAME)|',8X,'FOR ALL SETS OF EQUATIONS.'/CALX-635
     C'  6',L2,' - USE OF DEFORMATION LENGTHS.',24X,'| 59',L2,' - TOTAL CALX-636
     DELASTIC REACTION CROSS-SECTIONS WRITTEN ON'/'  7',L2,' - NUCLEAR MCALX-637
     EATRIX ELEMENTS AND FORM FACTORS ON CARDS. |',8X,'FILE 58 AND TOTALCALX-638
     F INELASTIC REACTION'/'  8',L2,' - RELATIVISTIC KINEMATICS.',27X,'|CALX-639
     G',8X,'CROSS-SECTIONS ON FILE 59.'/'  9',L2,' - SYMMETRISED WOODS-SCALX-640
     HAXON FORM FOR NEGATIVE RADII.   | 60',L2,' - S-MATRIX ELEMENTS WRICALX-641
     ITTEN ON FILE 60.'/' 10',L2,' - DISPERSION RELATIONS FOR POTENTIALSCALX-642
     J.',15X,'|'/59X,'| 61',L2,' - REDUCED NUCLEAR MATRIX ELEMENTS WRITTCALX-643
     KEN ON FILE 61.')                                                  CALX-644
 1005 FORMAT (' 11',L2,' - DEFORMED COULOMB POTENTIAL.',24X,'| 62',L2,' CALX-645
     1- POTENTIALS WRITTEN ON FILE 62.'/' 12',L2,' - DEFORMED IMAGINARY CALX-646
     2POTENTIAL.',22X,'| 63',L2,' - PENETRABILITIES WRITTEN ON FILE 63.'CALX-647
     3/' 13',L2,' - DEFORMED REAL SPIN-ORBIT/TENSOR POTENTIAL. ',8X,'| 6CALX-648
     44',L2,' - RESULTS FOR EXPERIMENTAL DATA ON FILE 64'/' 14',L2,' - DCALX-649
     5EFORMED IMAGINARY SPIN-ORBIT/TENSOR POTENTIAL.    |',8X,'AND AT EQCALX-650
     6UIDISTANT ANGLES WRITTEN ON FILE 66.'/' 15',L2,' - REDUCED NUCLEARCALX-651
     7 MATRIX ELEMENTS READ FROM CARDS.   | 65',L2,' - LEGENDRE EXPANSIOCALX-652
     8N FOR CROSS-SECTIONS WRITTEN ON'/' 16',L2,' - HEAVY-ION DEFINITIONCALX-653
     9 OF RADII AND DEFORMATIONS.    |',8X,'FILE 65.'/' 17',L2,' - FOLDICALX-654
     ANG MODEL.',37X,'| 66',L2,' - NO CALCULATION AT EQUIDISTANT ANGLES.CALX-655
     B'/' 18',L2,' - PROJECTILE-TARGET ANTISYMMETRISATION.',14X,'| 67',LCALX-656
     C2,' - NO PLOT OF EXPERIMENTAL DATA.'/' 19',L2,' - DEFORMED COULOMBCALX-657
     D SPIN-ORBIT POTENTIAL.',13X,'| 68',L2,' - NO PLOT OF CROSS-SECTIONCALX-658
     ES AT EQUIDISTANT ANGLES.'/' 20',L2,' - DISPERSION RELATIONS FOR TRCALX-659
     FANSITION FORM-FACTORS.  | 69',L2,' - NO PLOT OF POLARISATIONS AT ECALX-660
     GQUIDISTANT ANGLES.'/59X,'|'/' 21',L2,' - USUAL COUPLED EQUATIONS-(CALX-661
     H.F.: ITERATIONS).',9X,'| 71',L2,' - NO DETAILED OUTPUT OF LOGICAL CALX-662
     ICONTROLS.'/' 22',L2,' - NO USE OF PADE FOR CONVERGENCE OF THE ITERCALX-663
     JATIONS.  | 72',L2,' - NO OUTPUT OF EXPERIMENTAL DATA AS THEY ARE RCALX-664
     KEAD.')                                                            CALX-665
 1006 FORMAT (' 23',L2,' - NO USE OF PADE WITHOUT CONVERGENCE.',16X,'| 7CALX-666
     13',L2,' - NO OUTPUT OF EXTERNAL POTENTIALS AS THEY ARE READ.'/' 24CALX-667
     2',L2,' - COUPLING POTENTIALS COMPUTED AT EACH ITERATION.    | 74',CALX-668
     3L2,' - OUTPUT OF TIME IN DIFFERENT STEPS.'/' 25',L2,' - COMPLETE CCALX-669
     4ALCULATION UP TO THE END-(.F.: ONE ITE-  | 75',L2,' - NO COMPLETE CALX-670
     5OUTPUT AT THE FIRST RUN OF A SEARCH.'/8X,'RATION ONLY AS SOON AS TCALX-671
     6WO ITERATIONS ARE ENOUGH). | 76',L2,' - LO(51) TO LO(65) ARE ALWAYCALX-672
     7S USED-(.F.: ONLY FOR'/' 26',L2,' - INTEGRATION STABILISED FOR LONCALX-673
     8G RANGE POTENTIAL.   |',8X,'COMPLETE OUTPUT)'/' 27',L2,' - NUMEROVCALX-674
     9''S METHOD FOR SINGLE EQUATIONS-(.F.: MODI-  | 77',L2,' - OUTPUT OCALX-675
     AF TIME DIFFERENCES DURING THE SEARCH.'/8X,'FIED NUMEROV''S METHOD)CALX-676
     B.',28X,'| 78',L2,' - OUTPUT OF DIFFERENCES BETWEEN EXPERIMENTAL'/'CALX-677
     C 28',L2,' - COMPUTATION UP TO J-CONVERGENCE-(.F.: STOP WHEN    |',CALX-678
     D8X,'AND CALCULATED VALUES.'/8X,'ALL THE INHOMOGENEOUS TERMS ARE NECALX-679
     EGLIGIBLE).',7X,'|'/' 29',L2,' - NO DIAGONAL TERM IN SECOND MEMBERSCALX-680
     F.',16X,'| 81',L2,' - HAUSER-FESHBACH CORRECTIONS TO CROSS-SECTIONSCALX-681
     G.'/' 30',L2,' - PURE DWBA CALCULATION.',29X,'| 82',L2,' - SIMPLESTCALX-682
     H COMPOUND NUCLEUS FORMALISM.'/59X,'| 83',L2,' - NO ENGELBRETCH-WEICALX-683
     IDENMULLER TRANSFORMATION IN'/' 31',L2,' - INPUT OF EXPERIMENTAL DACALX-684
     JTA AND CHI2 CALCULATION.   |',8X,'IN COMPOUND NUCLEUS.')          CALX-685
 1007 FORMAT (' 32',L2,' - AUTOMATIC SEARCH ON SOME PARAMETERS.',15X,'| CALX-686
     184',L2,' - UNCOUPLED LEVELS FOR COMPOUND NUCLEUS.'/' 33',L2,' - SYCALX-687
     2MMETRISED CHI2 FOR CROSS-SECTIONS.',15X,'| 85',L2,' - FISSION DATACALX-688
     3 IN COMPOUND NUCLEUS.'/' 34',L2,' - NEXT CALCULATION CHANGING ENERCALX-689
     4GY AND/OR SOME',7X,'| 86',L2,' - GAMMA EMISSION DATA IN COMPOUND NCALX-690
     5UCLEUS.'/8X,'PARAMETERS.',40X,'| 87',L2,' - NO WIDTH FLUCTUATIONS.CALX-691
     6'/' 35',L2,' - SEARCH SAVED ON TAPE 8 IF ENDED OR LACK OF TIME.   CALX-692
     7|'/' 36',L2,' - RESTART A SEARCH FROM TAPE 8.',22X,'| 91',L2,' - ECALX-693
     8QUIDISTANT ANGLES IN THE LABORATORY SYSTEM.'/59X,'| 92',L2,' - NONCALX-694
     9 STANDARD OBSERVABLES AT EQUIDISTANT ANGLES.'/' 41',L2,' - FACTORICALX-695
     ASATION OF 1/(1-COS(THETA)) IN AMPLITUDES.   | 93',L2,' - NO RECOILCALX-696
     B CORRECTION FOR REACTIONS.'/' 42',L2,' - SCHMIDT''S ORTHOGONAL. INCALX-697
     C USUAL COUPLED EQUATIONS.  | 94',L2,' - NON RELATIVISTIC "REDUCED CALX-698
     DMASS" FOR DIRAC EQUATION.'/' 43',L2,' - INTERPOLATION ON TOTAL SPICALX-699
     EN.',23X,'| 95',L2,' - "REDUCED ENERGY" FOR NON COULOMB INTERACTIONCALX-700
     F IN'/' 44',L2,' - COULOMB CORRECTIONS.',31X,'|',8X,'RELATIVISTIC SCALX-701
     GCHROEDINGER EQUATION OR USE OF REST'/' 45',L2,' - ANGULAR MOMENTUMCALX-702
     H LIMIT FOR COULOMB CORRECTIONS.    |',8X,'MASS IN DIRAC EQUATION.'CALX-703
     I/' 46',L2,' - RESTRICTED COULOMB CORRECTIONS.',20X,'| 96',L2,' - "CALX-704
     JREDUCED MASS" FOR COULOMB INTERACTION IN')                        CALX-705
 1008 FORMAT (' 47',L2,' - NO RECOIL CORRECTION FOR BOUND STATES.',13X,'CALX-706
     1|',8X,'RELATIVISTIC SCHROEDINGER EQUATION.'/59X,'| 97',L2,' - SAMECALX-707
     2 REDUCED MASS FOR ALL THE STATES.'/' 51',L2,' - OUTPUT OF POTENTIACALX-708
     3LS.',30X,'| 98',L2,' - Q ADDED TO THE MASS OF RESIDUAL NUCLEUS.'/'CALX-709
     4 52',L2,' - OUTPUT OF REDUCED NUCLEAR MATRIX ELEMENTS.',9X,'| 99',CALX-710
     5L2,' - SCHROEDINGER EQUIVALENT TO DIRAC EQUATION.'/' 53',L2,' - OUCALX-711
     6TPUT OF THE NUMBER OF ITERATIONS.',16X,'|100',L2,' - COMPLETE DIRACALX-712
     7C EQUATION.'/'^L')                                                CALX-713
 1009 FORMAT (//' **** FIRST CONTROL CARD ****',2X,'1 ',9(' 1'),' 2 ',9(CALX-714
     1' 2'),' 3 ',9(' 3'),' 4 ',9(' 4'),' 5'/ 11X,5('  1 2 3 4 5 6 7 8 9CALX-715
     2 0')/11X,5(1X,10L2)//' *** SECOND CONTROL CARD ****',2X,'1 ',9(' 1CALX-716
     3'),' 2 ',9(' 2'),' 3 ',9(' 3'),' 4 ',9(' 4'),' 5'/11X,5('  1 2 3 4CALX-717
     4 5 6 7 8 9 0')/11X,5(1X,10L2)/)                                   CALX-718
 1010 FORMAT (10X,82('*')/10X,'*',80X,'*'/10X,'*',4X,18A4,4X,'*'/10X,'*'CALX-719
     1,80X,'*'/10X,82('*')/)                                            CALX-720
 1011 FORMAT (//' ******** YOU ARE USING DIRAC EQUATION WITHOUT RELATIVICALX-721
     1STIC KINEMATICS ********'//)                                      CALX-722
 1012 FORMAT (7F10.5)                                                   CALX-723
 1013 FORMAT (' MAXIMUM NUMBER OF J',I6,'  (MIN',I3,') STOP WHEN MAXIMUMCALX-724
     1 S-MATRIX ELEMENT IS LESS THAN',D18.4//' PLOT CONDITIONS FOR CROSSCALX-725
     2-SECTIONS',2I5,5X,'FOR POLARISATIONS',2I5/)                       CALX-726
 1014 FORMAT (4X,I3,' FACTORISATION OF 1/(1-COS(THETA)) IN THE AMPLITUDECALX-727
     1S.')                                                              CALX-728
 1015 FORMAT (' ANGULAR MOMENTA LIMITED TO',I5)                         CALX-729
 1016 FORMAT (10X,'ITERATION METHOD:  MAXIMUM NUMBER OF ITERATIONS',I10/CALX-730
     110X,'CONVERGENCE CRITERION:',1P,D15.4,' FOR S-MATRIX',D15.4,' FOR CALX-731
     2POTENTIALS AND FUNCTIONS.'/)                                      CALX-732
 1017 FORMAT (' IMAGINARY POTENTIAL INCREASED WITH A FACTOR',F10.5,' FORCALX-733
     1 BETTER CONVERGENCE.')                                            CALX-734
 1018 FORMAT (' USUAL COUPLED EQUATIONS.')                              CALX-735
 1019 FORMAT (' SCHMIDT''S ORTHOGONALISATION EVERY',I5,'  STEPS.')      CALX-736
 1020 FORMAT (' COULOMB CORRECTIONS LIMITED TO ANGULAR MOMENTA',I2,' FORCALX-737
     1 CENTRAL TERM AND',I2,' FOR SPIN-ORBIT TERM')                     CALX-738
 1021 FORMAT (/' INDICATIONS FOR EXPANSION OF CROSS-SECTIONS IN LEGENDRECALX-739
     1 POLYNOMIALS:',3I5)                                               CALX-740
 1022 FORMAT (8I5,2F10.5)                                               CALX-741
 1023 FORMAT (/' COMPOUND NUCLEUS INPUT:',I5,' UNCOUPLED STATES',I4,' WICALX-742
     1TH ANGULAR DISTRIBUTION AND',I4,' WITHOUT ANGULAR DISTRIBUTION'/24CALX-743
     2X,I5,' FISSION TRANSM. COEFF.'/24X,I5,' GAMMA TRANSM. COEFF.'/24X,CALX-744
     3I5,' CONTINUA')                                                   CALX-745
 1024 FORMAT (' MAXIMUM NUMBER OF SPIN VALUES IN THE CONTINUUM:',I5/' DICALX-746
     1SCRETISATION WITH:',2F10.5)                                       CALX-747
 1025 FORMAT (' INTERPOLATION OF S-MATRIX',3(2X,'FROM',I6,'  BY STEPS OFCALX-748
     1',I4,'+1')/(26X,3(2X,'FROM',I6,'  BY STEPS OF',I4,'+1')))         CALX-749
 1026 FORMAT (' UNCUMULATED INCREASES  ',3(27X,I4)/(24X,3(27X,I4)))     CALX-750
 1027 FORMAT (4I5,2F10.5)                                               CALX-751
 1028 FORMAT (//5X,I5,'  EXPERIMENTAL ANGULAR DISTRIBUTIONS.'/)         CALX-752
 1029 FORMAT (' THERE ARE NO EXPERIMENTAL DATA   ...  NO SEARCH.')      CALX-753
 1030 FORMAT (' NO PARAMETER IN SEARCH.')                               CALX-754
 1031 FORMAT (2X,I10,' COULOMB PHASES AND INDEFINITE INTEGRALS'/2X,I10,'CALX-755
     1 COULOMB FUNCTIONS AND FINITE INTEGRALS.')                        CALX-756
 1032 FORMAT (//2X,I2,' POTENTIALS OR DISPERSION RELATIONS (LO(10)=',L2,CALX-757
     1') CANNOT BE USED'/' WITH SCHROEDINGER EQUIVALENT OF DIRAC EQUATIOCALX-758
     2N (LO(99)= T ).')                                                 CALX-759
 1033 FORMAT (' NUMBER OF UNCOUPLED STATES WITHOUT ANGULAR DISTRIBUTION'CALX-760
     1,I5,' LESS THAN THE NUMBER OF CONTINUA:',I5)                      CALX-761
 1034 FORMAT (2X,I3,'TH LIMIT OF INTERPOLATION',I6,' SMALLER THAN PREVIOCALX-762
     1US ONE',I6)                                                       CALX-763
 1035 FORMAT (//' IN CALX  ...  STOP  ...')                             CALX-764
      END                                                               CALX-765
C 17/11/12                                                      ECIS12  INPA-000
      SUBROUTINE INPA                                                   INPA-001
      COMMON /INOUT/ MR,MW,MS                                           INPA-002
      WRITE (MW,1000)                                                   INPA-003
 1000 FORMAT ('C 17/11/12',62X,'ECIS-000'/15X,'DESCRIPTION OF INPUT OF EINPA-004
     1CIS12',27X,'ECIS-001'/15X,'******************************',27X,'ECINPA-005
     2IS-002'/72X,'ECIS-003'/72X,'ECIS-004'/72X,'ECIS-005'/'CARDS READ IINPA-006
     3N SUBROUTINE CALX',43X,'ECIS-006'/'*****************************',INPA-007
     443X,'ECIS-007'/72X,'ECIS-008'/'CARD 1',34X,'FORMAT (18A4)',19X,'ECINPA-008
     5IS-009'/'******',66X,'ECIS-010'/6X,'TITLE OF THE RUN WHICH WILL BEINPA-009
     6 PRINTED AS HEADING OF RESULTS.',5X,'ECIS-011'/72X,'ECIS-012'/6X,'INPA-010
     7IF TITLE="DESCRIPTION " THIS INPUT DESCRIPTION IS LISTED.',9X,'ECIINPA-011
     8S-013'/9X,'(1958 LINES CORRECTLY PRINTED IN 32 PAGES)',21X,'ECIS-0INPA-012
     914'/10X,'AFTER THIS LISTING, GO BACK TO CARD 1.',24X,'ECIS-015'/72INPA-013
     AX,'ECIS-016'/6X,'IF TITLE="FIN " THE CALCULATION IS STOPPED.',23X,INPA-014
     B'ECIS-017'/72X,'ECIS-018'/11X,'THESE CONTROL WORDS MUST BE PUNCHEDINPA-015
     C FROM COLUMN 1.',11X,'ECIS-019'/72X,'ECIS-020'/'CARD 2',34X,'FORMAINPA-016
     DT (50L1)',19X,'ECIS-021'/'******',66X,'ECIS-022'/6X,'50 FIRST LOGIINPA-017
     ECAL CONTROLS LO. ENTER "T" IN THE CORRESPONDING',6X,'ECIS-023'/6X,INPA-018
     F'COLUMN FOR .TRUE. AND NOTHING FOR .FALSE. UNLESS "F" IS NEEDED.  INPA-019
     G ECIS-024'/72X,'ECIS-025'/' MODEL',66X,'ECIS-026'/7X,'1- LO(1)  ROINPA-020
     HTATIONAL MODEL-(INVERSE: VIBRATIONAL MODEL).',9X,'ECIS-027'/7X,'2-INPA-021
     I LO(2)  SECOND ORDER VIBRATIONAL MODEL-(INVERSE: FIRST ORDER). ECIINPA-022
     JS-028'/17X,'OR CONSTRAINED ASYMMETRIC ROTATIONAL MODEL (BAND MIXININPA-023
     KGECIS-029')                                                       INPA-024
      WRITE (MW,1001)                                                   INPA-025
 1001 FORMAT (17X,'PARAMETERS OF THE FIRST TWO 2+ COMPUTED FROM THE',7X,INPA-026
     1'ECIS-030'/17X,'QUADRUPOLE "GAMMA" IN THE DAVYDOV-FILIPPOV MODEL).INPA-027
     2',5X,'ECIS-031'/7X,'3- LO(3)  ANHARMONIC VIBRATIONAL MODEL-(INVERSINPA-028
     3E: HARMONIC) OR',4X,'ECIS-032'/17X,'ASYMMETRIC ROTATIONAL MODEL-(IINPA-029
     4NVERSE: SYMMETRIC).',6X,'ECIS-033'/7X,'4- LO(4)  PARAMETRISED SPININPA-030
     5-ORBIT DEFORMATION-(INVERSE: STANDARD)ECIS-034'/7X,'5- LO(5)  DIFFINPA-031
     6ERENT DEFORMATION FOR EACH POTENTIAL-(INVERSE: SAMEECIS-035'/17X,'INPA-032
     7DEFORMATION).',42X,'ECIS-036'/7X,'6- LO(6)  DEFORMATION LENGTHS REINPA-033
     8AD INSTEAD OF DEFORMATIONS FOR   ECIS-037'/17X,'WOODS-SAXON FORM FINPA-034
     9ACTORS.',30X,'ECIS-038'/7X,'7- LO(7)  NUCLEAR MATRIX ELEMENT AND FINPA-035
     AORM FACTORS READ ON CARDS. ECIS-039'/17X,'THIS IS NOT ALLOWED FOR INPA-036
     BSCHROEDINGER EQUIVALENT OF',5X,'ECIS-040'/17X,'DIRAC EQUATION.',40INPA-037
     CX,'ECIS-041'/7X,'8- LO(8)  RELATIVISTIC KINEMATICS. FOR THE REDUCEINPA-038
     DD MASS, SEE',5X,'ECIS-042'/17X,'LO(94) TO LO(97).',38X,'ECIS-043'/INPA-039
     E7X,'9- LO(9)  SYMMETRISED WOODS-SAXON FORM FACTORS WHEN THE RADIUSINPA-040
     F ISECIS-044'/17X,'NEGATIVE.',46X,'ECIS-045'/6X,'10- LO(10) ENERGY INPA-041
     GDEPENDENT POTENTIALS BY DISPERSION RELATIONS.   ECIS-046'/17X,'NOWINPA-042
     H ALLOWED WITH EXTERNAL POTENTIALS (LO(7)=.TRUE.).   ECIS-047'/72X,INPA-043
     I'ECIS-048'/' INTERACTION',60X,'ECIS-049'/6X,'11- LO(11) DEFORMED CINPA-044
     JOULOMB POTENTIAL. WITH LO(7)=.FALSE., IT IS  ECIS-050'/17X,'SET .FINPA-045
     KALSE. BY THE CODE IF NO CHARGE IS READ.',10X,'ECIS-051')          INPA-046
      WRITE (MW,1002)                                                   INPA-047
 1002 FORMAT (6X,'12- LO(12) DEFORMED IMAGINARY POTENTIAL (VOLUME AND SUINPA-048
     1RFACE OR',4X,'ECIS-052'/17X,'SCALAR AND VECTOR).',36X,'ECIS-053'/6INPA-049
     2X,'13- LO(13) DEFORMED REAL SPIN-ORBIT OR TENSOR POTENTIAL. WITH',INPA-050
     35X,'ECIS-054'/17X,'LO(7)=.FALSE., IT IS SET .FALSE. BY THE CODE IFINPA-051
     4 NO',5X,'ECIS-055'/17X,'NON ZERO SPIN AND NO RELATED POTENTIAL AREINPA-052
     5 READ.',7X,'ECIS-056'/6X,'14- LO(14) DEFORMED IMAGINARY SPIN-ORBITINPA-053
     6 OR TENSOR POTENTIAL. IF  ECIS-057'/17X,'.TRUE., LO(13) IS SET .TRINPA-054
     7UE.. WITH LO(7)=.FALSE., IT ISECIS-058'/17X,'SET .FALSE. BY THE COINPA-055
     8DE AS FOR LO(13).',17X,'ECIS-059'/6X,'15- LO(15) REDUCED NUCLEAR MINPA-056
     9ATRIX ELEMENTS READ FROM CARDS.',7X,'ECIS-060'/17X,'IT IS NECESSARINPA-057
     AY FOR THE ANHARMONIC VIBRATIONAL MODEL.  ECIS-061'/6X,'16- LO(16) INPA-058
     BHEAVY-ION DEFINITION OF REDUCED RADII AND DEFORMATIONS.ECIS-062'/1INPA-059
     C7X,'WHEN THERE ARE DIFFERENT MASSES IN DIFFERENT CHANNELS, ECIS-06INPA-060
     D3'/''/17X,'THE MASSES TO BE USED CAN BE INDICATED BY THE FIRST',4INPA-061
     EX,'ECIS-064'/17X,'INPUT, BUT ONLY THE MASSES OF THE FIRST LEVEL CAINPA-062
     FN BE   ECIS-065'/17X,'USED FOR THE BACK TRANSFORMATION OF THE RESUINPA-063
     GLTS OF A   ECIS-066'/17X,'SEARCH OR IN THE SUBROUTINE EVAL (LO(34)INPA-064
     H=.TRUE.).',6X,'ECIS-067'/17X,'IF LO(6)=.TRUE., ONLY COULOMB DEFORMINPA-065
     IATION LENGTHS ARE  ECIS-068'/17X,'CHANGED.',47X,'ECIS-069'/6X,'17-INPA-066
     J LO(17) FOLDING MODEL. WITH EXTERNAL FORM FACTORS THE FOLDING  ECIINPA-067
     KS-070')                                                           INPA-068
      WRITE (MW,1003)                                                   INPA-069
 1003 FORMAT (17X,'PARAMETERS ARE USED INDEPENDENTLY OF THIS LOGICAL.',5INPA-070
     1X,'ECIS-071'/6X,'18- LO(18) PROJECTILE-TARGET ANTISYMMETRISATION, INPA-071
     2VALID ONLY FOR   ECIS-072'/17X,'SAME SPIN OF THE PARTICLE AND THE INPA-072
     3TARGET AND POSITIVE  ECIS-073'/17X,'PARITY IN THE SCHROEDINGER FORINPA-073
     4MALISM. FOR SPIN 0,',6X,'ECIS-074'/17X,'THE S-MATRIX IS COMPUTED OINPA-074
     5NLY FOR EVEN TOTAL SPINS.',4X,'ECIS-075'/17X,'FOR SPIN NON 0., THEINPA-075
     6 AMPLITUDES ARE SYMMETRISED BUT',4X,'ECIS-076'/17X,'THIS DO NOT COINPA-076
     7RRECT THE LACK OF SYMMETRY OF THE',8X,'ECIS-077'/17X,'INTERACTION INPA-077
     8BETWEEN PARTICLE AND TARGET.',15X,'ECIS-078'/6X,'19- LO(19) DEFORMINPA-078
     9ED COULOMB SPIN-ORBIT POTENTIAL. IF .TRUE.,',6X,'ECIS-079'/17X,'LOINPA-079
     A(11) IS SET .TRUE.. WITH LO(7)=.FALSE., IT IS SET',4X,'ECIS-080'/1INPA-080
     B7X,'.FALSE. BY THE CODE AS FOR LO(13). (NEEDS LO(13)=.TRUE.ECIS-08INPA-081
     C1'/17X,'WITH A REAL SPIN-ORBIT POTENTIAL, EVEN VERY SMALL)',5X,'ECINPA-082
     DIS-082'/6X,'20- LO(20) ENERGY DEPENDENCE OF TRANSITION FORM FACTORINPA-083
     ES WHEN',6X,'ECIS-083'/17X,'LO(10)=.TRUE. . THIS DEPENDENCE IS THE INPA-084
     FARITHMETIC MEAN ECIS-084'/17X,'VALUE OF THE DEPENDENCE OF THE LEVEINPA-085
     GLS BETWEEN WHICH',4X,'ECIS-085'/17X,'THE TRANSITION FORM FACTOR OCINPA-086
     HCURS. IT CANNOT BE USED   ECIS-086'/17X,'WITH LO(12)=.FALSE. .',34INPA-087
     IX,'ECIS-087'/'  NOTE:  IN THE ROTATIONAL MODELS, THE OPTICAL POTENINPA-088
     JTIALS (FOR ELASTIC  ECIS-088'/'  ****  SCATTERING) ARE ALWAYS DEFOINPA-089
     KRMED. TO AVOID THIS, WHEN LO(11),',4X,'ECIS-089')                 INPA-090
      WRITE (MW,1004)                                                   INPA-091
 1004 FORMAT (8X,'LO(12),LO(13),LO(14) OR LO(19) IS .FALSE., USE LO(5)=.INPA-092
     1TRUE.',5X,'ECIS-090'/8X,'AND ENTER 0. FOR THE CORRESPONDING DEFORMINPA-093
     2ATIONS.',16X,'ECIS-091'/8X,'IF LO(14)=.TRUE., LO(13) IS SET .TRUE.INPA-094
     3; IF LO(19)=.TRUE.,',7X,'ECIS-092'/8X,'LO(11) IS SET .TRUE.; THIS INPA-095
     4CAN BE AVOIDED WITH LO(5)=.TRUE.',5X,'ECIS-093'/72X,'ECIS-094'/' IINPA-096
     5NTEGRATION',60X,'ECIS-095'/6X,'21- LO(21) USUAL COUPLED EQUATIONS-INPA-097
     6(INVERSE: ITERATIONS).',9X,'ECIS-096'/17X,'NOT ALLOWED WITH DIRAC INPA-098
     7EQUATION. WHEN IT IS USED WITH  ECIS-097'/17X,'DEFORMED SPIN-ORBITINPA-099
     8, THE DERIVATIVE TERMS ARE NOT TAKENECIS-098'/17X,'INTO ACCOUNT ANINPA-100
     9D THE COMPUTATION IS INCORRECT.',9X,'ECIS-099'/6X,'22- LO(22) NO UINPA-101
     ASE OF PADE APPROXIMANTS FOR CONVERGENCE OF THE',5X,'ECIS-100'/17X,INPA-102
     B'ITERATIONS.',44X,'ECIS-101'/6X,'23- LO(23) NO USE OF PADE APPROXIINPA-103
     CMANT RESULTS AND SHIFT TO USUAL  ECIS-102'/17X,'COUPLED EQUATIONS INPA-104
     DWHEN CONVERGENCE IS NOT OBTAINED.',4X,'ECIS-103'/6X,'24- LO(24) COINPA-105
     EMPUTATION OF COUPLING POTENTIALS AT EACH ITERATION.  ECIS-104'/17XINPA-106
     F,'(SAVES SPACE BUT LOSES TIME, CHIEFLY IN ROTATIONAL',5X,'ECIS-105INPA-107
     G'/17X,'MODEL).',48X,'ECIS-106'/6X,'25- LO(25) COMPLETE CALCULATIONINPA-108
     H UP TO THE END-(INVERSE: ONE',7X,'ECIS-107'/17X,'ITERATION ONLY ASINPA-109
     I SOON AS TWO ITERATIONS ARE ENOUGH).  ECIS-108'/6X,'26- LO(26) STAINPA-110
     JBILISATION OF INTEGRATION FOR LONG RANGE CONSTANT   ECIS-109'/17X,INPA-111
     K'POTENTIALS. AN ADDITIONAL TERM IN H**6 IS INTRODUCED INECIS-110')INPA-112
      WRITE (MW,1005)                                                   INPA-113
 1005 FORMAT (17X,'THE TRUNCATION IN SUCH A WAY THAT THE TERM IN H**6 OFINPA-114
     1  ECIS-111'/17X,'THE TOTAL TRUNCATION ERROR CANCELS OUT FOR A CONSINPA-115
     2TANT  ECIS-112'/17X,'POTENTIAL. THIS TERM IS -H**6*V**3/240 FOR NUINPA-116
     3MEROV''S   ECIS-113'/17X,'METHOD AND +H**6*V**3/360 FOR MODIFIED NINPA-117
     4UMEROV''S METHODECIS-114'/17X,'WITH THE REAL POTENTIAL V.',29X,'ECINPA-118
     5IS-115'/6X,'27- LO(27) NUMEROV''S METHOD FOR SINGLE EQUATIONS-(INVINPA-119
     6ERSE:',8X,'ECIS-116'/17X,'MODIFIED NUMEROV''S METHOD). FOR SINGLE INPA-120
     7EQUATION AND',4X,'ECIS-117'/17X,'CONSTANT POTENTIAL, TRUNCATION ERINPA-121
     8RORS ARE OF OPPOSITE  ECIS-118'/17X,'SIGN.',50X,'ECIS-119'/6X,'28-INPA-122
     9 LO(28) COMPUTATION UP TO J-CONVERGENCE-(INVERSE: STOP WHEN ALLECIINPA-123
     AS-120'/17X,'THE INHOMOGENEOUS TERMS ARE NEGLIGIBLE). FOR ELASTIC  INPA-124
     B ECIS-121'/17X,'SCATTERING (ONLY ONE CHANNEL) LO(21) OR LO(28) MUSINPA-125
     CT BE ECIS-122'/17X,'.TRUE.. IN THIS CASE LO(28) IS SET .TRUE. BY TINPA-126
     DHE CODE. ECIS-123'/6X,'29- LO(29) NO DIAGONAL TERMS IN SECOND MEMBINPA-127
     EERS FOR ITERATIONS OF  ECIS-124'/17X,'SCHROEDINGER EQUATIONS. (INVINPA-128
     FERSE: ALL COUPLINGS ARE IN ECIS-125'/17X,'SECOND MEMBERS. THE UNCOINPA-129
     GUPLED SOLUTIONS DO NOT DEPEND  ECIS-126'/17X,'ON THE CHANNEL SPIN INPA-130
     HBUT CONVERGENCE CAN BE SLOWER IN   ECIS-127'/''/17X,'SOME PROBLEMINPA-131
     IS. NO EFFECT IN FIRST ORDER VIBRATIONAL',4X,'ECIS-128'/17X,'MODEL,INPA-132
     J NO USE IN DIRAC EQUATIONS: IF LO(100)=.TRUE.,   ECIS-129'/17X,'LOINPA-133
     K(29) IS SET .FALSE.). FOR CONVENIENCE, LO(29) IS SET ECIS-130')   INPA-134
      WRITE (MW,1006)                                                   INPA-135
 1006 FORMAT (17X,'.FALSE. IF LO(18)=.TRUE. .',29X,'ECIS-131'/6X,'30- LOINPA-136
     1(30) PURE DWBA CALCULATION.',33X,'ECIS-132'/72X,'ECIS-133'/' SEARCINPA-137
     2H',65X,'ECIS-134'/6X,'31- LO(31) INPUT OF EXPERIMENTAL DATA AND CAINPA-138
     3LCULATION OF A CHI2.  ECIS-135'/17X,'IT IS SET .FALSE. IF NO EXPERINPA-139
     4IMENTAL DATA ARE READ.',4X,'ECIS-136'/6X,'32- LO(32) AUTOMATIC SEAINPA-140
     5RCH ON SOME PARAMETERS. IT IS SET .FALSE. ECIS-137'/17X,'IF NO PARINPA-141
     6AMETERS ARE IN SEARCH.',24X,'ECIS-138'/6X,'33- LO(33) SYMMETRISED INPA-142
     7CHI2 FOR CROSS-SECTIONS WITH FIXED',9X,'ECIS-139'/17X,'NORMALISATIINPA-143
     8ON-(INVERSE: USUAL CHI2). THE CHI2',10X,'ECIS-140'/17X,'CONTRIBUTIINPA-144
     9ON IS MULTIPLIED BY THE RATIO OF',13X,'ECIS-141'/17X,'EXPERIMENTALINPA-145
     A TO CALCULATED VALUE.',22X,'ECIS-142'/6X,'34- LO(34) NEXT CALCULATINPA-146
     BION CHANGING ONLY ENERGY AND SOME OPTICAL ECIS-143'/17X,'PARAMETERINPA-147
     CS.',44X,'ECIS-144'/6X,'35- LO(35) SEARCH SAVED ON TAPE 8 IF CORRECINPA-148
     DTLY ENDED OR STOPPED BYECIS-145'/17X,'THE NUMBER OF EVALUATIONS.',INPA-149
     E29X,'ECIS-146'/6X,'36- LO(36) RESTART A SEARCH FROM TAPE 8.',26X,'INPA-150
     FECIS-147'/72X,'ECIS-148'/' LONG RANGE INTERACTION',49X,'ECIS-149'/INPA-151
     G6X,'41- LO(41) FACTORISATION OF 1/(1-COS(THETA)) IN THE AMPLITUDESINPA-152
     H. ITECIS-150'/17X,'IS NEEDED FOR DIRAC EQUATION OR WITH SPIN-ORBITINPA-153
     I COULOMBECIS-151'/17X,'POTENTIAL.',45X,'ECIS-152'/6X,'42- LO(42) SINPA-154
     JCHMIDT''S ORTHOGONALISATION OF SOLUTIONS IN USUAL',6X,'ECIS-153'/1INPA-155
     K7X,'COUPLED EQUATIONS.',37X,'ECIS-154')                           INPA-156
      WRITE (MW,1007)                                                   INPA-157
 1007 FORMAT (6X,'43- LO(43) INTERPOLATION ON TOTAL SPIN.',27X,'ECIS-155INPA-158
     1'/6X,'44- LO(44) COULOMB CORRECTIONS. LO(44) IS SET .FALSE. IF LO(INPA-159
     211) ISECIS-156'/17X,'.FALSE. . OUTSIDE THE DIRAC FORMALISM IT IS BINPA-160
     3ETTER TO  ECIS-157'/17X,'USE ALSO LO(29)=.TRUE..',32X,'ECIS-158'/6INPA-161
     4X,'45- LO(45) LIMITATION ON THE ANGULAR MOMENTA FOR COULOMB',10X,'INPA-162
     5ECIS-159'/17X,'CORRECTIONS. DEFAULT VALUES ARE 3 FOR CENTRAL TERM'INPA-163
     6,5X,'ECIS-160'/17X,'AND 2 FOR SPIN-ORBIT TERM. MAXIMUM VALUES ARE'INPA-164
     7,10X,'ECIS-161'/17X,'RESPECTIVELY 5 AND 4.',34X,'ECIS-162'/6X,'46-INPA-165
     8 LO(46) RESTRICTED COULOMB CORRECTIONS. (SAVES STORAGE).',7X,'ECISINPA-166
     9-163'/17X,'IF LO(44)=.FALSE. THE DIAGONAL CORRECTIONS USED IN',5X,INPA-167
     A'ECIS-164'/17X,'DIRAC FORMALISM OR FOR THE COULOMB SPIN-ORBIT ARE'INPA-168
     B,6X,'ECIS-165'/17X,'SUPPRESSED. IF LO(44)=.TRUE. INDICATIONS FOR TINPA-169
     CHESE',5X,'ECIS-166'/17X,'RESTRICTIONS BETWEEN CHANNELS WILL BE REAINPA-170
     DD.',12X,'ECIS-167'/6X,'47- LO(47) NO RECOIL CORRECTION FOR BOUND SINPA-171
     ETATES.',17X,'ECIS-168'/'  NOTE:  IF LO(36)=.TRUE. A SEARCH SAVED OINPA-172
     FN TAPE 8 IS RESTARTED;',8X,'ECIS-169'/'  ****  NO OTHER LOGICAL COINPA-173
     GNTROL FROM THIS CARD IS TAKEN INTO ACCOUNT.  ECIS-170'/8X,'INSTEADINPA-174
     H OF THE FOLLOWING CARDS, GO TO "RESTART INPUT: CARDS',5X,'ECIS-171INPA-175
     I'/8X,'READ IN SUBROUTINE REST".',39X,'ECIS-172'/72X,'ECIS-173'/'CAINPA-176
     JRD 3',34X,'FORMAT (50L1)',19X,'ECIS-174'/'******',66X,'ECIS-175') INPA-177
      WRITE (MW,1008)                                                   INPA-178
 1008 FORMAT (6X,'LOGICAL CONTROLS FROM 51 TO 100 (AS FOR PREVIOUS CARD)INPA-179
     1.',11X,'ECIS-176'/72X,'ECIS-177'/' PRINTING IN COMPLETE OUTPUT',44INPA-180
     2X,'ECIS-178'/7X,'1- LO(51) OUTPUT OF POTENTIALS.',34X,'ECIS-179'/7INPA-181
     3X,'2- LO(52) OUTPUT OF REDUCED NUCLEAR MATRIX ELEMENTS.',13X,'ECISINPA-182
     4-180'/7X,'3- LO(53) OUTPUT OF THE NUMBER OF ITERATIONS.',20X,'ECISINPA-183
     5-181'/7X,'4- LO(54) OUTPUT OF THE LENGTH USED IN THE WORKING FIELDINPA-184
     6.',8X,'ECIS-182'/7X,'5- LO(55) OUTPUT OF C-MATRIX ELEMENTS AND OF INPA-185
     7COMPOUND NUCLEUS',4X,'ECIS-183'/17X,'INTERMEDIATE RESULTS.',34X,'EINPA-186
     8CIS-184'/7X,'6- LO(56) OUTPUT OF S-MATRIX ELEMENTS.',27X,'ECIS-185INPA-187
     9'/7X,'7- LO(57) OUTPUT OF PHASE-SHIFTS AT EACH E.C.I.S. ITERATION.INPA-188
     A',5X,'ECIS-186'/7X,'8- LO(58) OUTPUT OF THE COEFFICIENTS OF EACH FINPA-189
     BORM FACTOR FOR ALL ECIS-187'/17X,'SETS OF EQUATIONS.',37X,'ECIS-18INPA-190
     C8'/'  NOTE:  IN A SEARCH, LO(51) TO LO(58) ARE USED FOR THE COMPLEINPA-191
     DTE RESULTSECIS-189'/'  ****  (AT THE FIRST CALCULATION IF LO(75)=.INPA-192
     EFALSE. AND ALWAYS AT THE   ECIS-190'/8X,'END OF THE SEARCH).',45X,INPA-193
     F'ECIS-191'/''/' PUNCH AND RESULTS IN LAST OUTPUT',39X,'ECIS-192'/INPA-194
     G7X,'9- LO(59) TOTAL CROSS SECTION, TOTAL REACTION CROSS SECTION',6INPA-195
     HX,'ECIS-193'/17X,'(INCLUDING COMPOUND ELASTIC), TOTAL SUM OF COMPOINPA-196
     IUND',4X,'ECIS-194'/17X,'CONTRIBUTIONS AND TOTAL ELASTIC CROSS SECTINPA-197
     JION WRITTEN  ECIS-195'/17X,'ON FILE 58 IF THEY ARE DEFINED.',24X,'INPA-198
     KECIS-196')                                                        INPA-199
      WRITE (MW,1009)                                                   INPA-200
 1009 FORMAT (17X,'INELASTIC CROSS-SECTIONS WRITTEN ON FILE 59.',11X,'ECINPA-201
     1IS-197'/6X,'10- LO(60) S-MATRIX ELEMENTS WRITTEN ON FILE 60.',18X,INPA-202
     2'ECIS-198'/6X,'11- LO(61) REDUCED NUCLEAR MATRIX ELEMENTS WRITTEN INPA-203
     3ON FILE 61.',4X,'ECIS-199'/6X,'12- LO(62) POTENTIALS WRITTEN ON FIINPA-204
     4LE 62.',25X,'ECIS-200'/6X,'13- LO(63) PENETRABILITIES WRITTEN ON FINPA-205
     5ILE 63. WITH ITERATIONS,   ECIS-201'/17X,'THE CODE COMPUTES ALL THINPA-206
     6E SOLUTIONS.',19X,'ECIS-202'/6X,'14- LO(64) RESULTS FOR EXPERIMENTINPA-207
     7AL DATA WRITTEN ON FILE 64',7X,'ECIS-203'/17X,'AND AT EQUIDISTANT INPA-208
     8ANGLES WRITTEN ON FILE 66.',10X,'ECIS-204'/6X,'15- LO(65) COEFFICIINPA-209
     9ENTS OF THE EXPANSION IN LEGENDRE POLYNOMIALS  ECIS-205'/17X,'WRITINPA-210
     ATEN ON FILE 65.',36X,'ECIS-206'/'  NOTE:  IN A SEARCH, LO(59) TO LINPA-211
     BO(65) ARE USED ONLY IN THE LAST RESULT.ECIS-207'/'  ****  THERE ARINPA-212
     CE INTRODUCED FOR NEUTRON SCATTERING, IN PECULIAR, ON THEECIS-208'/INPA-213
     D8X,'SUGGESTION OF E. BAUGE, R. CAPOTE AND A. KONING. FOR EACH RUN,INPA-214
     E  ECIS-209'/8X,'THE FIRST LINE (FORMAT A10,F10.2,1P,D20.8,0P,F10.2INPA-215
     F,2I5) WITH THEECIS-210'/4X,'1-10  IDENTIFICATION <CROSS-S.>, <INE.INPA-216
     GC.S.>, <S-MATRIX>, <RED.MAT.>,ECIS-211'/10X,'<POTENTI.>, <TLJ',5X,INPA-217
     H'>, <EXP.DAT.>, <LEGENDRE>, <ANG.DIS.> FORECIS-212'/10X,'FILES 58 INPA-218
     ITO 66.',47X,'ECIS-213'/3X,'11-20 THE MASS OF THE INCIDENT PARTICLEINPA-219
     J.',29X,'ECIS-214'/3X,'21-40 THE ENERGY IN THE LABORATORY SYSTEM.',INPA-220
     K27X,'ECIS-215'/3X,'41-50 THE MASS OF THE TARGET.',40X,'ECIS-216') INPA-221
      WRITE (MW,1010)                                                   INPA-222
 1010 FORMAT (3X,'51-55 THE PRODUCT OF CHARGES.',40X,'ECIS-217'/3X,'56-6INPA-223
     10 THE NUMBER OF LINES OR THE NUMBER OF SUBSETS WHICH ARE HEADED  EINPA-224
     2CIS-218'/9X,'BY SOME INDICATIONS INCLUDING THEIR OWN NUMBER OF LININPA-225
     3ES, EXCEPTECIS-219'/9X,'FOR 61 AND 62. FOR 61, IT IS THE NUMBER OFINPA-226
     4 COUPLED STATES AND  ECIS-220'/9X,'THE REMAINING OF THE OUTPUT CANINPA-227
     5 BE USED BY THE PROGRAM.',8X,'ECIS-221'/9X,'FOR 62, IT IS THE NUMBINPA-228
     6ER OF FORM FACTORS AND THE REMAINING OF  ECIS-222'/9X,'THE OUTPUT INPA-229
     7CAN ALSO BE USED BY THE PROGRAM, REPLACING THE',6X,'ECIS-223'/9X,'INPA-230
     8IDENTIFICATIONS BY THE SUITABLE INPUT.',25X,'ECIS-224'/72X,'ECIS-2INPA-231
     925'/' PRINTING IN THE LAST RESULT',44X,'ECIS-226'/6X,'16- LO(66) NINPA-232
     AO CALCULATION AT EQUIDISTANT ANGLES.',18X,'ECIS-227'/6X,'17- LO(67INPA-233
     B) NO PLOT OF EXPERIMENTAL DATA.',26X,'ECIS-228'/6X,'18- LO(68) NO INPA-234
     CPLOT OF CROSS-SECTIONS AT EQUIDISTANT ANGLES.',7X,'ECIS-229'/6X,'1INPA-235
     D9- LO(69) NO PLOT OF POLARISATIONS AT EQUIDISTANT ANGLES.',8X,'ECIINPA-236
     ES-230'/72X,'ECIS-231'/' PRINTING AT THE BEGINNING AND IN A SEARCH'INPA-237
     F,30X,'ECIS-232'/6X,'21- LO(71) NO DETAILED OUTPUT OF LOGICAL CONTRINPA-238
     GOLS.',16X,'ECIS-233'/6X,'22- LO(72) NO OUTPUT OF EXPERIMENTAL DATAINPA-239
     H WHEN THEY ARE READ.',5X,'ECIS-234'/6X,'23- LO(73) NO OUTPUT OF EXINPA-240
     ITERNAL POTENTIALS WHEN THEY ARE READ.   ECIS-235'/6X,'24- LO(74) OINPA-241
     JUTPUT OF TIME IN DIFFERENT STEPS OF COMPUTATION.',6X,'ECIS-236')  INPA-242
      WRITE (MW,1011)                                                   INPA-243
 1011 FORMAT (6X,'25- LO(75) NO COMPLETE OUTPUT AT THE FIRST RUN OF A SEINPA-244
     1ARCH.',7X,'ECIS-237'/6X,'26- LO(76) LO(51) TO LO(65) ARE ALWAYS USINPA-245
     2ED-(INVERSE: ONLY FOR',4X,'ECIS-238'/17X,'COMPLETE OUTPUT).',38X,'INPA-246
     3ECIS-239'/6X,'27- LO(77) OUTPUT OF TIME DIFFERENCES DURING THE SEAINPA-247
     4RCH.',10X,'ECIS-240'/6X,'28- LO(78) NO OUTPUT OF DIFFERENCES BETWEINPA-248
     5EN EXPERIMENTAL AND',6X,'ECIS-241'/17X,'CALCULATED VALUES.',37X,'EINPA-249
     6CIS-242'/72X,'ECIS-243'/' COMPOUND NUCLEUS',55X,'ECIS-244'/6X,'31-INPA-250
     7 LO(81) HAUSER-FESHBACH CORRECTIONS TO CROSS-SECTIONS.',9X,'ECIS-2INPA-251
     845'/17X,'WITH ITERATIONS, THE CODE COMPUTES ALL THE SOLUTIONS.  ECINPA-252
     9IS-246'/17X,'IF LO(82), LO(84), LO(85) OR LO(86) IS .TRUE., LO(81)INPA-253
     A  ECIS-247'/17X,'IS SET .TRUE..',41X,'ECIS-248'/6X,'32- LO(82) OLDINPA-254
     B SIMPLIFIED COMPOUND NUCLEUS (EXCLUDES UNCOUPLED',4X,'ECIS-249'/17INPA-255
     CX,'STATES, FISSION AND GAMMAS; LO(84), LO(85), LO(86) ARE ECIS-250INPA-256
     D'/17X,'SET .FALSE.).',42X,'ECIS-251'/6X,'33- LO(83) NO ENGELBRETCHINPA-257
     E-WEIDENMULLER TRANSFORMATION IN COMPOUND ECIS-252'/17X,'NUCLEUS.',INPA-258
     F47X,'ECIS-253'/6X,'34- LO(84) UNCOUPLED LEVELS FOR COMPOUND NUCLEUINPA-259
     GS. IT IS SET',7X,'ECIS-254'/17X,'.FALSE. IF NONE ARE READ.',30X,'EINPA-260
     HCIS-255'/''/6X,'35- LO(85) FISSION TRANSMISSION COEFFICIENTS (TO INPA-261
     IBE READ FROM',5X,'ECIS-256'/17X,'CARDS) FOR COMPOUND NUCLEUS. IT IINPA-262
     JS SET .FALSE. IF NONE ECIS-257'/17X,'ARE READ.',46X,'ECIS-258'/6X,INPA-263
     K'36- LO(86) GAMMA EMISSION IN COMPOUND NUCLEUS.',20X,'ECIS-259')  INPA-264
      WRITE (MW,1012)                                                   INPA-265
 1012 FORMAT (6X,'37- LO(87) NO WIDTH FLUCTUATIONS.',33X,'ECIS-260'/72X,INPA-266
     1'ECIS-261'/' MISCELLANEOUS',58X,'ECIS-262'/6X,'41- LO(91) ANGULAR INPA-267
     2DISTRIBUTION AT EQUIDISTANT ANGLES IN THE',6X,'ECIS-263'/17X,'LABOINPA-268
     3RATORY SYSTEM.',37X,'ECIS-264'/6X,'42- LO(92) NON STANDARD OBSERVAINPA-269
     4BLES AT EQUIDISTANT ANGLES.',8X,'ECIS-265'/6X,'43- LO(93) NO RECOIINPA-270
     5L CORRECTION FOR REACTIONS WITH SMALL',10X,'ECIS-266'/17X,'DIFFEREINPA-271
     6NCES (LESS THAN .5) OF TARGET MASSES.',11X,'ECIS-267'/6X,'44- LO(9INPA-272
     74) NON RELATIVISTIC "REDUCED MASS" FOR DIRAC EQUATION.',4X,'ECIS-2INPA-273
     868'/6X,'45- LO(95) "REDUCED ENERGY" FOR NON COULOMB INTERACTION ININPA-274
     9',8X,'ECIS-269'/17X,'RELATIVISTIC SCHROEDINGER EQUATION OR USE OF INPA-275
     AREST MASS ECIS-270'/17X,'IN DIRAC EQUATION (EXCLUDE LO(94)=.TRUE.)INPA-276
     B.',13X,'ECIS-271'/6X,'46- LO(96) "REDUCED MASS" FOR COULOMB INTERAINPA-277
     CCTION IN RELATIVISTIC ECIS-272'/17X,'SCHROEDINGER EQUATION.',33X,'INPA-278
     DECIS-273'/6X,'47- LO(97) SAME REDUCED MASS FOR ALL THE STATES WITHINPA-279
     E SMALL',8X,'ECIS-274'/17X,'DIFFERENCES (LESS THAN .5) OF TARGET MAINPA-280
     FSSES.',11X,'ECIS-275'/6X,'48- LO(98) Q ADDED TO THE MASS OF RESIDUINPA-281
     GAL NUCLEUS OR OUTGOING',4X,'ECIS-276'/17X,'PARTICLE. Q CAN BE TAKEINPA-282
     HN INTO ACCOUNT ONLY IF',10X,'ECIS-277'/17X,'LO(8)=.TRUE. FOR RELATINPA-283
     IIVISTIC KINEMATICS. NOT TO BE',4X,'ECIS-278'/17X,'USED IF THIS EFFINPA-284
     JECT IS INCLUDED IN THE MASSES WHEN',5X,'ECIS-279'/17X,'THEY ARE REINPA-285
     KAD.',41X,'ECIS-280')                                              INPA-286
      WRITE (MW,1013)                                                   INPA-287
 1013 FORMAT (6X,'49- LO(99) SCHROEDINGER EQUIVALENT TO DIRAC EQUATION (INPA-288
     1OPTION',6X,'ECIS-281'/17X,'INTRODUCED TO SHOW THE DIFFERENCE BETWEINPA-289
     2EN THE TWO',6X,'ECIS-282'/17X,'KINDS OF EQUATION).  LO(44) IS SET INPA-290
     3.TRUE.. SAME RESULT ECIS-283'/17X,'IF THERE IS NO COUPLED STATE. CINPA-291
     4OUPLING BETWEEN STATES  ECIS-284'/17X,'IS THE SAME AS IN THE FIRSTINPA-292
     5 ORDER VIBRATIONAL MODEL',4X,'ECIS-285'/17X,'BUT THE DERIVATIVES AINPA-293
     6RE REPLACED BY THE USUAL COUPLINGSECIS-286'/17X,'OF SCHROEDINGER EINPA-294
     7QUATION. IT CANNOT BE USED WITH MORE  ECIS-287'/17X,'THAN ONE POTEINPA-295
     8NTIAL OR WITH DISPERSION RELATIONS (FOR   ECIS-288'/17X,'"NPP" LARINPA-296
     9GER THAN 1 OR LO(10)=.TRUE., THE CODE IS',6X,'ECIS-289'/17X,'STOPPINPA-297
     AED).',46X,'ECIS-290'/6X,'50- LO(100) COMPLETE DIRAC EQUATION.',30XINPA-298
     B,'ECIS-291'/'  NOTE:  IF LO(99)=.TRUE. OR LO(100)=.TRUE., LO(8) ISINPA-299
     C SET .TRUE.; THE   ECIS-292'/'  ****  WITH RELATIVISTIC KINEMATICSINPA-300
     D (LO(8)=.TRUE.), THE "REDUCED MASS" ECIS-293'/8X,'AND THE "REDUCEDINPA-301
     E ENERGY" ARE THE PRODUCT OF MASSES OR ENERGIES  ECIS-294'/8X,'DIVIINPA-302
     FDED BY THE TOTAL ENERGY IN THE CENTRE OF MASS.',14X,'ECIS-295'/72XINPA-303
     G,'ECIS-296'/'CARD 4',34X,'FORMAT (14I5)',19X,'ECIS-297'/'******',6INPA-304
     H6X,'ECIS-298'/7X,'1- 5   NCOLL  NUMBER OF NUCLEAR STATES. IT DOES INPA-305
     INOT INCLUDE THE  ECIS-299'/21X,'NUMBER OF UNCOUPLED STATES FOR COMINPA-306
     JPOUND NUCLEUS.   ECIS-300'/7X,'6-10   NJMAX  MAXIMUM NUMBER OF CHAINPA-307
     KNNEL SPIN. (DEFAULT VALUE 20) ECIS-301')                          INPA-308
      WRITE (MW,1014)                                                   INPA-309
 1014 FORMAT (21X,'THE MAXIMUM VALUE OF THE TOTAL ANGULAR MOMENTUM J  ECINPA-310
     1IS-302'/21X,'WILL BE NJMAX-1 WHEN IT IS INTEGER OR NJMAX-.5 WHENECINPA-311
     2IS-303'/21X,'IT IS HALF-INTEGER.',32X,'ECIS-304'/6X,'11-15   ITERMINPA-312
     3  MAXIMUM NUMBER OF ECIS ITERATIONS. (DEFAULT VALUE  ECIS-305'/21XINPA-313
     4,'20). MUST BE 1 FOR DWBA CALCULATIONS.',14X,'ECIS-306'/21X,'IF LOINPA-314
     5(21)=LO(42)=.TRUE., PERIODICITY OF SCHMIDT''S  ECIS-307'/21X,'ORTHINPA-315
     6OGONALISATION IN USUAL COUPLED EQUATIONS.',6X,'ECIS-308'/6X,'16-20INPA-316
     7   NPP',4X,'NUMBER OF OPTICAL POTENTIALS. (DEFAULT VALUE 1).   ECIINPA-317
     8S-309'/21X,'ONLY THE FIRST ONE IS DEFORMED WHEN THE FORM',7X,'ECISINPA-318
     9-310'/21X,'FACTORS ARE NOT READ ON CARDS.',21X,'ECIS-311'/6X,'21-2INPA-319
     A5   NCJ',4X,'NUMBER OF FACTORISATIONS OF 1/(1-COS(THETA)) IN',4X,'INPA-320
     BECIS-312'/21X,'THE AMPLITUDES. (DEFAULT VALUE 1).',17X,'ECIS-313'/INPA-321
     C6X,'26-30   NGR(1) NUMBER OF DECADES IN LOGARITHMIC SCALE IN PLOTSINPA-322
     D OF ECIS-314'/21X,'ELASTIC CROSS-SECTIONS IN THE STANDARD OPTION',INPA-323
     E6X,'ECIS-315'/21X,'(DEFAULT VALUE 2). FOR CHARGED PARTICLES, THE',INPA-324
     F6X,'ECIS-316'/21X,'CROSS-SECTION DIVIDED BY RUTHERFORD''S CROSS-SEINPA-325
     GCTIONECIS-317'/21X,'IS PLOTTED.',40X,'ECIS-318'/6X,'31-35   NGR(2)INPA-326
     H AS NGR(1),FOR INELASTIC CHANNELS.(DEFAULT VALUE 2) ECIS-319'/''/INPA-327
     I6X,'36-40   NPR(1) PLOT INDICATIONS FOR ELASTIC POLARISATIONS AT',INPA-328
     J6X,'ECIS-320'/21X,'EQUIDISTANT ANGLES. IF THERE ARE N DIFFERENT',7INPA-329
     KX,'ECIS-321')                                                     INPA-330
      WRITE (MW,1015)                                                   INPA-331
 1015 FORMAT (21X,'ANGULAR DISTRIBUTIONS OF POLARISATIONS, NPR(1) IS  ECINPA-332
     1IS-322'/21X,'THE SUM FOR I=1 TO N OF K(I)*(2**(I-1)) WHERE',6X,'ECINPA-333
     2IS-323'/21X,'K(I)=1 FOR A PLOT AND 0 FOR NO PLOT OF THE I-TH',4X,'INPA-334
     3ECIS-324'/21X,'DISTRIBUTION.(DEFAULT VALUE 1)',21X,'ECIS-325'/17X,INPA-335
     4'STANDARD OPTIONS: SPIN 0 - NO POLARISATION.',12X,'ECIS-326'/35X,'INPA-336
     5SPIN 1/2 - VECTOR POLARISATION.',6X,'ECIS-327'/35X,'SPIN >1/2 - ITINPA-337
     611, T20, T21, T22.',5X,'ECIS-328'/6X,'41-45   NPR(2) AS NPR(1),FORINPA-338
     7 INELASTIC CHANNELS.(DEFAULT VALUE 1) ECIS-329'/17X,'STANDARD OPTIINPA-339
     8ONS: SPIN 0 - NO POLARISATION.',12X,'ECIS-330'/22X,'SPIN 1/2 - VECINPA-340
     9T. ANA. POWER, VECT. POL., SPIN-FLIPECIS-331'/22X,'SPIN >1/2 - IT1INPA-341
     A1, VECT. POL., T20, T21, T22.',6X,'ECIS-332'/6X,'46-50   LMZ',4X,'INPA-342
     BNUMBER OF J VALUES FOR WHICH THE RADIAL EQUATIONS  ECIS-333'/21X,'INPA-343
     CARE SOLVED WHEN COULOMB CORRECTIONS ARE USED. THIS ECIS-334'/21X,'INPA-344
     DNUMBER CAN BE AUTOMATICALLY DECREASED IF THE',7X,'ECIS-335'/21X,'IINPA-345
     ERREGULAR FUNCTIONS ARE TOO LARGE. THE ASYMPTOTIC  ECIS-336'/21X,'RINPA-346
     FEGION WHERE THE PHASE-SHIFTS ARE COMPUTED',9X,'ECIS-337'/21X,'ANALINPA-347
     GYTICALLY IS ABOVE THIS VALUE. THE BEST VALUE OFECIS-338'/21X,'LMZ INPA-348
     HIS THE MAXIMUM VALUE OF J NEEDED BY THE SAME   ECIS-339'/21X,'COMPINPA-349
     IUTATION WITHOUT CHARGE AND WITHOUT ANOMALOUS   ECIS-340'/21X,'MAGNINPA-350
     JETIC MOMENT. (DEFAULT VALUE NJMAX/2, BUT ENTER ECIS-341'/21X,'A NEINPA-351
     KGATIVE VALUE IF YOU WANT TO USE NJMAX).',8X,'ECIS-342')           INPA-352
      WRITE (MW,1016)                                                   INPA-353
 1016 FORMAT (6X,'51-55   JDM',4X,'TOTAL SPIN ABOVE WHICH STOP OR REDUCTINPA-354
     1ION TO ONE',4X,'ECIS-343'/21X,'ITERATION CAN OCCUR. (LIMITS LO(25)INPA-355
     2,LO(28)=.FALSE.)ECIS-344'/21X,'NECESSARY FOR HEAVY-ION SCATTERING INPA-356
     3BECAUSE THE',5X,'ECIS-345'/21X,'CROSS-SECTION FOR SMALL TOTAL ANGUINPA-357
     4LAR MOMENTA ARE  ECIS-346'/21X,'VERY SMALL.',40X,'ECIS-347'/6X,'56INPA-358
     5-60   LML',4X,'MAXIMUM ANGULAR MOMENTUM (DEFAULT VALUE MAXIMUM).  INPA-359
     6ECIS-348'/21X,'WITHOUT LONG RANGE INTERACTION, A LIMIT IS GIVEN   INPA-360
     7ECIS-349'/21X,'FOR EACH LEVEL SUCH THAT THE REGULAR COULOMB',7X,'EINPA-361
     8CIS-350'/21X,'FUNCTION IS LARGER THAN 1.D-30 AT MATCHING RADIUS. EINPA-362
     9CIS-351'/6X,'61-65   JIT',4X,'NUMBER OF RATES OF INTERPOLATION FORINPA-363
     A TOTAL SPIN.   ECIS-352'/21X,'(DEFAULT VALUE 1).',33X,'ECIS-353'/6INPA-364
     BX,'66-70   MN',5X,'MULTIPLICATIVE FACTOR FOR NJMAX READ IN COLUMNSINPA-365
     C',4X,'ECIS-354'/21X,'6-10 ALLOWING TO USE MORE THAN NJMAX>10**5.',INPA-366
     D8X,'ECIS-355'/21X,'(DEFAULT VALUE 1)',34X,'ECIS-356'/'  NOTE:  IF INPA-367
     ELO(93)=.TRUE. NGR AND NPR ARE NOT TAKEN INTO ACCOUNT IN',5X,'ECIS-INPA-368
     F357'/'  ****  COMPUTATIONS AT EQUIDISTANT ANGLES BECAUSE SUCH INDIINPA-369
     GCATIONS WILLECIS-358'/8X,'BE READ AGAIN IN SUBROUTINE DEPH, BUT NGINPA-370
     HR IS ALWAYS USED FOR',4X,'ECIS-359'/8X,'PLOTS OF EXPERIMENTAL CROSINPA-371
     IS-SECTIONS.',27X,'ECIS-360'/72X,'ECIS-361'/'CARD 5',34X,'FORMAT (7INPA-372
     JF10.5)',17X,'ECIS-362'/'******',66X,'ECIS-363'/7X,'1-10   H',6X,'IINPA-373
     KNTEGRATION STEP SIZE IN FERMIS. (DEFAULT VALUE',4X,'ECIS-364')    INPA-374
      WRITE (MW,1017)                                                   INPA-375
 1017 FORMAT (21X,'MIN(0.5/WAVE NUMBER, 0.5*MIN(DIFFUSENESSES)),',6X,'ECINPA-376
     1IS-365'/21X,'WITHOUT THE DIFFUSENESSES IF LO(7)=.TRUE.).',8X,'ECISINPA-377
     2-366'/6X,'11-20   RM',5X,'MATCHING RADIUS.(IF LO(7)=.TRUE. DEFAULTINPA-378
     3 VALUE 20. ECIS-367'/21X,'IF LO(7)=.FALSE., FOR EACH NON ZERO POTEINPA-379
     4NTIAL, THE ECIS-368'/21X,'RADIUS WHERE ITS ABSOLUTE VALUE IS (ACONINPA-380
     5V*ECM/WAVE ECIS-369'/21X,'NUMBER) IS COMPUTED AND RM IS THE LARGESINPA-381
     6T OF THEM. ECIS-370'/21X,'FOR COULOMB FORM FACTORS, RADIUS+10*DIFFINPA-382
     7USENESS IS ECIS-371'/21X,'USED)',46X,'ECIS-372'/6X,'21-30   BJM',4INPA-383
     8X,'COEFFICIENT OF THE IMAGINARY POTENTIAL TO BE ADDED ECIS-373'/21INPA-384
     9X,'TO THE UNCOUPLED EQUATIONS AND REMOVED IN THE',6X,'ECIS-374'/21INPA-385
     AX,'SECOND MEMBER TO ACCELERATE CONVERGENCE FOR',8X,'ECIS-375'/21X,INPA-386
     B'SCHROEDINGER EQUATIONS.',28X,'ECIS-376'/6X,'31-40   EITER  CONVERINPA-387
     CGENCE CRITERION FOR S-MATRIX IN THE ITERATIONECIS-377'/21X,'(DEFAUINPA-388
     DLT VALUE 1.D-5).',29X,'ECIS-378'/6X,'41-50   ACONV  VALUE BELOW WHINPA-389
     EICH FUNCTIONS AND POTENTIALS ARE',5X,'ECIS-379'/21X,'NEGLECTED IN INPA-390
     FITERATIONS.(DEFAULT VALUE 1.D-5).',5X,'ECIS-380'/21X,'ACONV IS ALSINPA-391
     GO USED IN THE DEFAULT VALUE OF RM.',5X,'ECIS-381'/6X,'51-60   CONJINPA-392
     H   CONVERGENCE CRITERION FOR J VALUES.',16X,'ECIS-382'/21X,'(DEFAUINPA-393
     ILT VALUE 1.D-5).',29X,'ECIS-383'/''/'LIMITATION TO COULOMB CORRECINPA-394
     JTIONS',7X,'FORMAT (14I5)',19X,'ECIS-384'/'************************INPA-395
     K*********',39X,'ECIS-385')                                        INPA-396
      WRITE (MW,1018)                                                   INPA-397
 1018 FORMAT (' IF LO(45) IS .TRUE., OTHERWISE GO TO "LEGENDRE EXPANSIONINPA-398
     1 DATA"',9X,'ECIS-386'/7X,'1- 5   MCM(1) MAXIMUM ANGULAR MOMENTUM FINPA-399
     2OR THE COMPUTATION OF',4X,'ECIS-387'/21X,'THE CORRECTIONS DUE TO TINPA-400
     3HE COULOMB POTENTIAL.',6X,'ECIS-388'/21X,'(DEFAULT VALUE 3, VALUE INPA-401
     4LIMITED TO 5).',13X,'ECIS-389'/7X,'6-10   MCM(2) SAME FOR THE SPININPA-402
     5-ORBIT COULOMB POTENTIAL.',9X,'ECIS-390'/21X,'(DEFAULT VALUE 2, VAINPA-403
     6LUE LIMITED TO 4).',13X,'ECIS-391'/'  NOTE:  ENTER A NEGATIVE VALUINPA-404
     7E TO USE 0. A BLANK OR 0 IS REPLACED BY   ECIS-392'/'  ****  THE DINPA-405
     8EFAULT VALUES DESCRIBED ABOVE.',29X,'ECIS-393'/72X,'ECIS-394'/'LEGINPA-406
     9ENDRE EXPANSION DATA',17X,'FORMAT (14I5)',19X,'ECIS-395'/'********INPA-407
     A***************',49X,'ECIS-396'/' IF LO(65) IS .TRUE., OTHERWISE GINPA-408
     BO TO "COMPOUND NUCLEUS DATA".',10X,'ECIS-397'/7X,'1- 5   NL(1)  POINPA-409
     CWER OF (1-COS(THETA)) FOR THE EXPANSION IN',7X,'ECIS-398'/21X,'LEGINPA-410
     DENDRE POLYNOMIALS OF THE INTERFERENCE BETWEEN   ECIS-399'/21X,'COUINPA-411
     ELOMB AND NUCLEAR ELASTIC SCATTERING. POWER OF   ECIS-400'/21X,'(1-INPA-412
     FCOS(THETA)**2) IF LO(18) IS .TRUE..',13X,'ECIS-401'/21X,'(DEFAULT INPA-413
     GVALUE 2).',33X,'ECIS-402'/7X,'6-10   NL(2)  NUMBER OF LEGENDRE POLINPA-414
     HYNOMIALS FOR ELASTIC',9X,'ECIS-403'/21X,'SCATTERING OF CHARGED PARINPA-415
     ITICLES. (DEFAULT VALUE',4X,'ECIS-404'/21X,'1.5 NUMBER OBTAINED WITINPA-416
     JHOUT COULOMB AMPLITUDE).',4X,'ECIS-405'/6X,'11-15   NL(3)  NUMBER INPA-417
     KOF LEGENDRE POLYNOMIALS FOR ELASTIC',9X,'ECIS-406')               INPA-418
      WRITE (MW,1019)                                                   INPA-419
 1019 FORMAT (21X,'SCATTERING OF UNCHARGED PARTICLES, INELASTIC',7X,'ECIINPA-420
     1S-407'/21X,'SCATTERING AND COMPOUND NUCLEUS. (DEFAULT VALUE',4X,'EINPA-421
     2CIS-408'/21X,'MAXIMUM NUMBER).',35X,'ECIS-409'/72X,'ECIS-410'/'COMINPA-422
     3POUND NUCLEUS DATA',19X,'FORMAT (8I5,2F10.5)',13X,'ECIS-411'/'****INPA-423
     4*****************',51X,'ECIS-412'/' IF LO(84) OR LO(85) OR LO(86) INPA-424
     5IS .TRUE., OTHERWISE GO TO',15X,'ECIS-413'/' "INTERPOLATION ON TOTINPA-425
     6AL SPIN".',41X,'ECIS-414'/7X,'1- 5   NSP(1) NUMBER OF UNCOUPLED STINPA-426
     7ATES AND CONTINUA. IF IT IS  ECIS-415'/21X,'ZERO, LO(84)=.FALSE.',INPA-427
     831X,'ECIS-416'/7X,'6-10   NSP(2) NUMBER OF UNCOUPLED STATES WITH AINPA-428
     9NGULAR',12X,'ECIS-417'/21X,'DISTRIBUTION. THEY MUST BE THE FIRST GINPA-429
     AIVEN.',8X,'ECIS-418'/21X,'IT IS REPLACED BY MIN(NSP(1),NSP(2)).',1INPA-430
     B4X,'ECIS-419'/6X,'11-15   NFISS  NUMBER OF FISSION DATA. IF NFISS=INPA-431
     C0, LO(85)=.FALSE. ECIS-420'/6X,'16-20   NRD',4X,'NUMBER OF GAMMA TINPA-432
     DRANSMISSION FACTORS. IF IT IS 0,  ECIS-421'/21X,'THESE COEFFICIENTINPA-433
     ES ARE COMPUTED.',19X,'ECIS-422'/6X,'21-25   NCONT  NUMBER OF CONTIINPA-434
     FNUA. THEY MUST BE THE LAST GIVEN,   ECIS-423'/21X,'NO ANGULAR DISTINPA-435
     GRIBUTION CAN BE REQUESTED FOR THEM. ECIS-424'/6X,'26-30   NCOJ   NINPA-436
     HUMBER OF VALUES OF THE SPIN OF THE RESIDUAL',7X,'ECIS-425'/21X,'NUINPA-437
     ICLEUS FOR THE CONTINUA. (DEFAULT VALUE 30).',6X,'ECIS-426'/6X,'31-INPA-438
     J35   KMIN   MINIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUS',4X,'EINPA-439
     KCIS-427')                                                         INPA-440
      WRITE (MW,1020)                                                   INPA-441
 1020 FORMAT (21X,'(DEFAULT VALUE: MINIMUM VALUE FOR S WAVES IN',7X,'ECIINPA-442
     1S-428'/21X,'ENTRANCE CHANNEL).',33X,'ECIS-429'/6X,'36-40   KMAX   INPA-443
     2MAXIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUS',4X,'ECIS-430'/21XINPA-444
     3,'(DEFAULT VALUE NJMAX).',29X,'ECIS-431'/6X,'41-50   ACN1   RATIO INPA-445
     4ENERGY/STEP FOR THE DISCRETISATION OF THE',4X,'ECIS-432'/21X,'CONTINPA-446
     5INUA AT LARGE ENERGY . (DEFAULT VALUE 8.).',5X,'ECIS-433'/6X,'51-6INPA-447
     60   ACN2   NUMBER OF STEPS PER MEV FOR THE DISCRETISATION OF  ECISINPA-448
     7-434'/21X,'THE CONTINUA AT LOW ENERGY. (DEFAULT VALUE 8.).',4X,'ECINPA-449
     8IS-435'/'  NOTE:  THE SHIFT FROM THE USE OF ACN1 TO ACN2 OCCURS BEINPA-450
     9LOW THE ENERGY ECIS-436'/'  ****  ACN1/ACN2. BELOW THIS ENERGY, THINPA-451
     AE INTERVAL IS DIVIDED IN EQUAL  ECIS-437'/8X,'STEPS WITH A MINIMUMINPA-452
     B OF TWO STEPS. CALCULATIONS ARE DONE WITH   ECIS-438'/8X,'THE ENERINPA-453
     CGY OF THE MIDDLE OF THE STEP.',27X,'ECIS-439'/9X,'WITHOUT KMIN THEINPA-454
     D CALCULATION CAN STOP BEFORE ANY SIGNIFICANT   ECIS-440'/8X,'RESULINPA-455
     ET. WITH INTERPOLATION ON TOTAL SPIN BELOW KMAX, A HUGE',5X,'ECIS-4INPA-456
     F41'/8X,'STORAGE ARRAY, PROPORTIONAL TO KMAX, IS NEEDED FOR UNCOUPLINPA-457
     GED',4X,'ECIS-442'/8X,'STATES WITH ANGULAR DISTRIBUTION.',31X,'ECISINPA-458
     H-443'/9X,'COMPOUND NUCLEUS CALCULATION IS STOPPED AT THE J VALUE LINPA-459
     IARGER  ECIS-444'/8X,'THAN KMIN ONE FOR WHICH THE LARGEST COMPOUND INPA-460
     JNUCLEUS',12X,'ECIS-445'/8X,'CONTRIBUTION IS LESS THAN CONJ**2. THEINPA-461
     K CODE CANNOT DEAL WITH',4X,'ECIS-446')                            INPA-462
      WRITE (MW,1021)                                                   INPA-463
 1021 FORMAT (8X,'VERY LARGE J VALUES.',44X,'ECIS-447'/''/'INTERPOLATIOINPA-464
     1N ON TOTAL SPIN',13X,'FORMAT (14I5)',19X,'ECIS-448'/'*************INPA-465
     2**************',45X,'ECIS-449'/' IF LO(43) IS .TRUE., OTHERWISE GOINPA-466
     3 TO  "CARDS READ IN SUBROUTINE LECT". ECIS-450'/7X,'1- 5   LS(1)  INPA-467
     4FIRST LIMIT.',39X,'ECIS-451'/7X,'6-10   LD(1)  NUMBER OF VALUES SKINPA-468
     5IPPED.',26X,'ECIS-452'/6X,'11-15   LS(2)  SECOND LIMIT.',38X,'ECISINPA-469
     6-453'/6X,'16-20   LD(2)  NUMBER OF VALUES SKIPPED.',26X,'ECIS-454'INPA-470
     7/3X,'....................  UP TO LS(JIT) AND LD(JIT)   ...........INPA-471
     8........ECIS-455'/7X,'THE CALCULATION IS STOPPED IF VALUES LS DECRINPA-472
     9EASE. THE VALUES LD  ECIS-456'/' ARE CHANGED TO BE USED CUMULATIVEINPA-473
     ALY IN THE PROGRAM. IF LO(18)=.TRUE.,  ECIS-457'/' AND THE SPINS ININPA-474
     B THE GROUND STATE ARE BOTH ZERO, THE VALUES LD READ AREECIS-458'/'INPA-475
     C MULTIPLIED BY 2.',55X,'ECIS-459'/72X,'ECIS-460'/72X,'ECIS-461'/'CINPA-476
     DARDS READ IN SUBROUTINE LECL',43X,'ECIS-462'/'********************INPA-477
     E*********',43X,'ECIS-463'/72X,'ECIS-464'/'FOR EACH NUCLEAR STATE:'INPA-478
     F,49X,'ECIS-465'/'***********************',49X,'ECIS-466'/' BEGINNIINPA-479
     GNG WITH THE GROUND STATE AND INCLUDING UNCOUPLED STATES FOR',5X,'EINPA-480
     HCIS-467'/' COMPOUND NUCLEUS CALCULATION WHICH MUST BE AT THE END.'INPA-481
     I,17X,'ECIS-468'/' THE BEST ORDER IS THE ONE OF DECREASING COUPLINGINPA-482
     J STRENGTH.',13X,'ECIS-469'/72X,'ECIS-470'/'NUCLEAR STATES -SPINS AINPA-483
     KND MASSES -',6X,'FORMAT (F5.2,2I2,A1,6F10.5)',5X,'ECIS-471')      INPA-484
      WRITE (MW,1022)                                                   INPA-485
 1022 FORMAT ('***********************************',37X,'ECIS-472'/7X,'1INPA-486
     1- 5   SP2:   SPIN OF THE TARGET (2*SP2+1 KEPT IN IPI(3,I)).',5X,'EINPA-487
     2CIS-473'/7X,'6- 7   N:',5X,'FURTHER DESCRIPTION OF THE STATE.',18XINPA-488
     3,'ECIS-474'/21X,'IN THE ROTATIONAL MODEL, MUST BE NON-ZERO FOR THEINPA-489
     4  ECIS-475'/27X,'MEMBER OF A VIBRATIONAL BAND.',16X,'ECIS-476'/21XINPA-490
     5,'IN THE VIBRATIONAL MODEL, CAN BE NON-ZERO FOR THE  ECIS-477'/27XINPA-491
     6,'GROUND STATE TO AVOID THE INPUT OF NEXT CARD.ECIS-478'/21X,'NOT INPA-492
     7USED IF LO(3)=.TRUE. (ANHARMONIC VIBRATIONAL   ECIS-479'/27X,'MODEINPA-493
     8L OR ASYMMETRIC ROTATIONAL MODEL).',7X,'ECIS-480'/21X,'NOT USED IFINPA-494
     9 LO(7)=.TRUE. (EXTERNAL POTENTIALS).',4X,'ECIS-481'/21X,'NOT USED INPA-495
     AFOR UNCOUPLED STATES.',21X,'ECIS-482'/7X,'8- 9   K:',5X,'OPTICAL PINPA-496
     BOTENTIAL. (DEFAULT VALUE,1 FOR GROUND',5X,'ECIS-483'/21X,'STATE ANINPA-497
     CD SAME AS LAST ONE FOR EXCITED STATE).',5X,'ECIS-484'/9X,'10   SPIINPA-498
     D:   PARITY OF THE NUCLEAR STATE: "+" OR "-" BUT ONLY   ECIS-485'/2INPA-499
     E1X,'"-" IS NEEDED ("+" FOR A BLANK OR ANY CHARACTER).  ECIS-486'/2INPA-500
     F1X,'THIS DATA IS KEPT AS 0 OR 1 IN IPI(1,I).',11X,'ECIS-487'/6X,'1INPA-501
     G1-20   ENERGY OF THE PROJECTILE IN THE LABORATORY SYSTEM IN MEV  EINPA-502
     HCIS-488'/14X,'FOR THE GROUND STATE. EXCITATION ENERGY FOR THE OTHEINPA-503
     IRS.   ECIS-489'/6X,'21-30   SP1: SPIN OF THE PARTICLE (2*SP1+1 KEPINPA-504
     JT IN IPI(2,I)).',5X,'ECIS-490'/6X,'31-40   WV(1,I):   MASS OF THE INPA-505
     KPROJECTILE IN A.M.U.  .',12X,'ECIS-491')                          INPA-506
      WRITE (MW,1023)                                                   INPA-507
 1023 FORMAT (19X,'IF THIS VALUE IS NOT ZERO FOR AN EXCITED STATE, THE  INPA-508
     1ECIS-492'/19X,'SPIN OF THE PROJECTILE, ITS MASS AND THE PRODUCT OFINPA-509
     2  ECIS-493'/19X,'CHARGES READ ON THIS CARD ARE TAKEN INTO ACCOUNT.INPA-510
     3 IF ECIS-494'/19X,'THIS MASS IS ZERO, VALUES OF SP1, SP3, WV(1,I) INPA-511
     4AND   ECIS-495'/19X,'WV(2,I) ARE TAKEN FROM THE PRECEDING LEVEL.',INPA-512
     510X,'ECIS-496'/6X,'41-50   WV(2,I):   MASS OF THE TARGET IN A.M.U.INPA-513
     6  .',16X,'ECIS-497'/6X,'51-60   SP3: PRODUCT OF THE CHARGES OF THEINPA-514
     7 TARGET AND OF THE',6X,'ECIS-498'/19X,'PARTICLE (SP3 KEPT IN IPI(4INPA-515
     8,I)).',21X,'ECIS-499'/6X,'61-70   WV(4,I):   REPARTITION OF EXCITAINPA-516
     9TION ENERGY BETWEEN THE   ECIS-500'/25X,'PARTICLE AND THE TARGET: INPA-517
     A0. FOR EXCITATION OF  ECIS-501'/25X,'THE TARGET, 1. FOR EXCITATIONINPA-518
     B OF THE PARTICLE, ECIS-502'/25X,'RATIO FOR TWO-BODY EXCITATION.',1INPA-519
     C7X,'ECIS-503'/'  NOTE:  ONLY THIS CARD IS READ FOR UNCOUPLED STATEINPA-520
     DS AND CONTINUA',7X,'ECIS-504'/'  ****  USED FOR COMPOUND NUCLEUS CINPA-521
     EALCULATION.',26X,'ECIS-505'/9X,'WV(4,I) IS NOT TAKEN INTO ACCOUNT INPA-522
     FFOR THE GROUND STATE AND USEDECIS-506'/8X,'FOR THE EXCITED STATES INPA-523
     GONLY IF LO(98)=.TRUE. AND IF RELATIVISTICECIS-507'/8X,'KINEMATICS INPA-524
     HARE USED (SCHROEDINGER OR DIRAC EQUATION).',11X,'ECIS-508'/72X,'ECINPA-525
     IIS-509'/'DESCRIPTION OF VIBRATIONS  (IF N IS NOT 0 IN ROTATIONAL MINPA-526
     JODEL OR N IS 0 ECIS-510'/'*************************  IN VIBRATIONAINPA-527
     KL MODEL AND LO(3)=LO(7)=.FALSE.)ECIS-511')                        INPA-528
      WRITE (MW,1024)                                                   INPA-529
 1024 FORMAT (''/'NUMBER OF PHONONS',23X,'FORMAT (14I5)',19X,'ECIS-512'INPA-530
     1/'*****************',55X,'ECIS-513'/7X,'1- 5   IPH(I)  DESCRIPTIONINPA-531
     2 OF THE STATE.',25X,'ECIS-514'/14X,'IN THE VIBRATIONAL MODEL: 0 FOINPA-532
     3R GROUND STATE',14X,'ECIS-515'/22X,'1 OR 2 FOR PURE 1 OR 2-PHONONSINPA-533
     4 STATE',14X,'ECIS-516'/22X,'3 FOR A MIXTURE OF 1 AND 2-PHONONS STAINPA-534
     5TES.',8X,'ECIS-517'/14X,'IN THE ROTATIONAL MODEL: 0 FOR GROUND STAINPA-535
     6TE BAND',10X,'ECIS-518'/39X,'1 FOR VIBRATIONAL BAND',11X,'ECIS-519INPA-536
     7'/39X,'2 FOR A MIXTURE OF THEM.',9X,'ECIS-520'/7X,'6-10   VIBRATIOINPA-537
     8NAL MODEL: NUMBER OF THE PHONON OF THE ONE-PHONON ECIS-521'/14X,'SINPA-538
     9TATE OR OF THE FIRST PHONON OF THE TWO-PHONONS STATE.',4X,'ECIS-52INPA-539
     A2'/14X,'ROTATIONAL MODEL: NUMBER OF THE VIBRATION IN THE ORDER OF INPA-540
     BECIS-523'/14X,'INPUT. (SEE "CARDS READ IN LECT")',25X,'ECIS-524'/6INPA-541
     CX,'11-15   VIBRATIONAL MODEL: NUMBER OF THE SECOND PHONON OF THE',INPA-542
     D5X,'ECIS-525'/14X,'TWO-PHONONS STATE.',40X,'ECIS-526'/6X,'16-20   INPA-543
     EVIBRATIONAL MODEL: NUMBER OF THE ONE-PHONON COMPONENT OF  ECIS-527INPA-544
     F'/14X,'A MIXED STATE.',44X,'ECIS-528'/'  NOTE:  THE TOTAL NUMBER OINPA-545
     GF PHONONS WILL BE THE LARGEST NUMBER READ',4X,'ECIS-529'/'  ****  INPA-546
     HIN THE COLUMNS 6 TO 20.',41X,'ECIS-530'/72X,'ECIS-531'/'PHONONS MIINPA-547
     IXING PARAMETER',16X,'FORMAT (7F10.5)',17X,'ECIS-532'/'************INPA-548
     J************',48X,'ECIS-533'/' IF IPH IS 3 (VIBRATIONAL MODEL) OR INPA-549
     KIPH IS 2 (ROTATIONAL MODEL)',9X,'ECIS-534')                       INPA-550
      WRITE (MW,1025)                                                   INPA-551
 1025 FORMAT (7X,'1-10   BT IN DEGREES.',44X,'ECIS-535'/6X,'THE NUCLEAR INPA-552
     1STATE IS:  COS(BT)*(1 PHONON) + SIN(BT)*(2 PHONONS).  ECIS-536'/14INPA-553
     2X,'OR:  COS(BT)*(VIBR. BAND) + SIN(BT)*(GROUND BAND).',8X,'ECIS-53INPA-554
     37'/72X,'ECIS-538'/'FOR ASYMMETRIC ROTATIONAL MODEL',41X,'ECIS-539'INPA-555
     4/'*******************************',41X,'ECIS-540'/' IF LO(1)=LO(3)INPA-556
     5=.TRUE.',50X,'ECIS-541'/4X,'FOR A STATE OF SPIN "J" THERE ARE N=("INPA-557
     6J"+1)/2 BAND MIXING',11X,'ECIS-542'/' PARAMETERS BETWEEN THE N+1 BINPA-558
     7ANDS DEFINED AS ATAN(A(2*I)/A(2*I-2))',6X,'ECIS-543'/' WHERE A(I) INPA-559
     8IS THE AMPLITUDE OF BAND I. IF N IS NOT 0:',18X,'ECIS-544'/72X,'ECINPA-560
     9IS-545'/'MIXING PARAMETERS',23X,'FORMAT (7F10.5)',17X,'ECIS-546'/'INPA-561
     A*****************',55X,'ECIS-547'/7X,'1-10   BT(1)  IN DEGREES.',4INPA-562
     B0X,'ECIS-548'/6X,'11-20   BT(2)  IN DEGREES.',40X,'ECIS-549'/6X,'2INPA-563
     C1-30   BT(3)  IN DEGREES.',40X,'ECIS-550'/6X,'31-40   BT(4)  IN DEINPA-564
     DGREES.',40X,'ECIS-551'/6X,'41-50   BT(5)  IN DEGREES.',40X,'ECIS-5INPA-565
     E52'/6X,'51-60   .................',41X,'ECIS-553'/6X,'THE NUCLEAR INPA-566
     FSTATE IS:   COS(BT(1))*Y(AI,0) + SIN(BT(1))*COS(BT(2))ECIS-554'/6XINPA-567
     G,'*(Y(AI,2)+S*Y(AI,-2))*SQRT(0.5) + SIN(BT(1))*SIN(BT(2))*COS(BT(3INPA-568
     H))ECIS-555'/6X,'*(Y(AI,4)+S*Y(AI,-4))*SQRT(0.5) + ....... WHERE S=INPA-569
     I(-)**(AI+SPI).  ECIS-556'/'  NOTE:  FOR UNNATURAL PARITY STATES (SINPA-570
     JPI=-), BT(1) WILL BE IGNORED IN  ECIS-557'/'  **** THE CALCULATIONINPA-571
     K AND REPLACED BY 90. DEGREES.',21X,'ECIS-558')                    INPA-572
      WRITE (MW,1026)                                                   INPA-573
 1026 FORMAT (8X,'IF LO(15)=.TRUE., ALL THE NUCLEAR PARAMETERS (QUANTITIINPA-574
     1ES GIVEN  ECIS-559'/7X,'IN DEGREES) HAVE TO BE READ IN ORDER TO AVINPA-575
     2OID A CHANGE IN THIS   ECIS-560'/7X,'PART OF INPUT WHEN SHIFTING LINPA-576
     3O(15) FROM .FALSE. TO .TRUE..  THEY ECIS-561'/7X,'ARE NOT USED ANDINPA-577
     4 CANNOT BE IN SEARCH.',28X,'ECIS-562'/72X,'ECIS-563'/72X,'ECIS-564INPA-578
     5'/'CARDS READ IN SUBROUTINE LECT',43X,'ECIS-565'/'****************INPA-579
     6*************',43X,'ECIS-566'/72X,'ECIS-567'/'PHONON DESCRIPTIONS'INPA-580
     7,21X,'FORMAT (2I5,F10.5,I5)',11X,'ECIS-568'/'*******************',INPA-581
     853X,'ECIS-569'/' FOR EVERY PHONON INVOLVED:',45X,'ECIS-570'/7X,'1-INPA-582
     9 5   NBTA(9,*)  = L ANGULAR MOMENTUM USED ALSO FOR HEAVY ION.  ECIINPA-583
     AS-571'/21X,'VALUE USED FOR HEAVY-ION COULOMB DEFORMATIONS.',5X,'ECINPA-584
     BIS-572'/7X,'6-10   NBTA(10,*) = K MAGNETIC QUANTUM NUMBER OF THE VINPA-585
     CIBRATION INECIS-573'/21X,'ROTATIONAL MODEL. IN THE VIBRATIONAL MODINPA-586
     DEL, MUST BEECIS-574'/21X,'ZERO TO USE THIS PHONON IN L=0 SECOND ORINPA-587
     EDER TERMS. ECIS-575'/''/6X,'11-20   BETA(1,*)   PHONON AMPLITUDE INPA-588
     FFOR THE REAL POTENTIAL.',6X,'ECIS-576'/6X,'21-25   IK   LEVEL OF WINPA-589
     GHICH THE MASSES ARE USED FOR HEAVY-ION',5X,'ECIS-577'/21X,'CORRECTINPA-590
     HIONS. (DEFAULT VALUE IK=1).',17X,'ECIS-578'/72X,'ECIS-579'/'PHONONINPA-591
     I AMPLITUDES OF OTHER POTENTIALS   FORMAT (7F10.5)',17X,'ECIS-580'/INPA-592
     J'*************************************',35X,'ECIS-581')           INPA-593
      WRITE (MW,1027)                                                   INPA-594
 1027 FORMAT (' IF DEFORMATIONS ARE NOT THE SAME FOR ALL POTENTIALS (LO(INPA-595
     15)=.TRUE.):',4X,'ECIS-582'/7X,'1-10   BETA(2,*) FOR VOLUME IMAGINAINPA-596
     2RY POTENTIAL.',17X,'ECIS-583'/6X,'11-20   BETA(3,*) FOR SURFACE REINPA-597
     3AL POTENTIAL.',21X,'ECIS-584'/6X,'21-30   BETA(4,*) FOR SURFACE IMINPA-598
     4AGINARY POTENTIAL.',16X,'ECIS-585'/6X,'31-40   BETA(5,*) FOR REAL INPA-599
     5SPIN-ORBIT.',28X,'ECIS-586'/6X,'41-50   BETA(6,*) FOR IMAGINARY SPINPA-600
     6IN-ORBIT.',23X,'ECIS-587'/6X,'51-60   BETA(7,*) FOR COULOMB POTENTINPA-601
     7IAL.',26X,'ECIS-588'/6X,'61-70   BETA(8,*) FOR COULOMB SPIN-ORBIT INPA-602
     8POTENTIAL.',15X,'ECIS-589'/'  NOTE:  IF LO(5)=.FALSE., BETA(I,*)=BINPA-603
     9ETA(1,*) FOR I=2,8.',15X,'ECIS-590'/'  ****',66X,'ECIS-591'/72X,'EINPA-604
     ACIS-592'/'DEFORMATIONS OF ROTATIONAL MODEL',8X,'FORMAT (2I5,F10.5,INPA-605
     BI5)',11X,'ECIS-593'/'********************************',40X,'ECIS-5INPA-606
     C94'/' ONLY IF LO(1)=.TRUE. AND LO(7)=.FALSE., OTHERWISE GO TO "OPTINPA-607
     DICAL MODEL ECIS-595'/' PARAMETERS".',59X,'ECIS-596'/7X,'1- 5   IQMINPA-608
     E',4X,'LARGEST ORDER OF DEFORMATION.',22X,'ECIS-597'/7X,'6-10   IQMINPA-609
     FAX  MAXIMUM L-VALUE OF MULTIPOLE EXPANSION.',12X,'ECIS-598'/6X,'11INPA-610
     G-20   ASPIN, THE K-VALUE OF THE BAND, USED ONLY IN SYMMETRIC',4X,'INPA-611
     HECIS-599'/21X,'ROTATIONAL MODEL.',34X,'ECIS-600'/6X,'21-25   IK',5INPA-612
     IX,'LEVEL OF WHICH THE MASSES ARE USED FOR HEAVY-ION   ECIS-601'/21INPA-613
     JX,'CORRECTIONS. (DEFAULT VALUE IK=1).',17X,'ECIS-602')            INPA-614
      WRITE (MW,1028)                                                   INPA-615
 1028 FORMAT ('  NOTE:  IN THE ASYMMETRIC ROTATIONAL MODEL IQM IS LIMITEINPA-616
     1D TO 35',8X,'ECIS-603'/'  ****  AND IQMAX IS LIMITED TO 8.',38X,'EINPA-617
     2CIS-604'/72X,'ECIS-605'/'DEFORMATIONS OF REAL VOLUME POTENTIAL   FINPA-618
     3ORMAT (7F10.5)',17X,'ECIS-606'/'**********************************INPA-619
     4***',35X,'ECIS-607'/' IQ=IQM/2 VALUES FOR SYMMETRIC ROTATIONAL MODINPA-620
     5EL,',24X,'ECIS-608'/' IQ=IQM-1 VALUES FOR ASYMMETRIC ROTATIONAL MOINPA-621
     6DEL:',23X,'ECIS-609'/7X,'1-10   BETA(1,1)  DEFORMATION OF THE REALINPA-622
     7 POTENTIAL.',13X,'ECIS-610'/6X,'11-20   BETA(1,2)  DEFORMATION OF INPA-623
     8THE REAL POTENTIAL.',13X,'ECIS-611'/6X,'21-30   BETA(1,3)  DEFORMAINPA-624
     9TION OF THE REAL POTENTIAL.',13X,'ECIS-612'/6X,'31-40   BETA(1,4) INPA-625
     A DEFORMATION OF THE REAL POTENTIAL.',13X,'ECIS-613'/6X,'41-50   BEINPA-626
     BTA(1,5)  DEFORMATION OF THE REAL POTENTIAL.',13X,'ECIS-614'/'.....INPA-627
     C..........................',41X,'ECIS-615'/6X,'EVENTUALLY, ON NEXTINPA-628
     D CARD:',9X,'FORMAT (7F10.5)',17X,'ECIS-616'/7X,'1-10   BETA(1,8)  INPA-629
     EDEFORMATION OF THE REAL POTENTIAL.',13X,'ECIS-617'/6X,'11-20   BETINPA-630
     FA(1,9)  DEFORMATION OF THE REAL POTENTIAL. ....',8X,'ECIS-618'/6X,INPA-631
     G'..... AND SO ON UP TO BETA(1,IQ).',33X,'ECIS-619'/72X,'ECIS-620'/INPA-632
     H'DEFORMATIONS FOR OTHER POTENTIALS',7X,'FORMAT (7F10.5)',17X,'ECISINPA-633
     I-621'/'*********************************',39X,'ECIS-622'/' IF DEFOINPA-634
     JRMATIONS ARE NOT THE SAME FOR ALL POTENTIALS (LO(5)=.TRUE.):',4X,'INPA-635
     KECIS-623')                                                        INPA-636
      WRITE (MW,1029)                                                   INPA-637
 1029 FORMAT (7X,'1-10   BETA(2,I) DEFORMATION OF THE VOLUME IMAGINARY PINPA-638
     1OTENTIAL.  ECIS-624'/6X,'11-20   BETA(3,I) DEFORMATION OF THE SURFINPA-639
     2ACE REAL POTENTIAL.',6X,'ECIS-625'/6X,'21-30   BETA(4,I) DEFORMATIINPA-640
     3ON OF THE SURFACE IMAGINARY POTENTIAL. ECIS-626'/6X,'31-40   BETA(INPA-641
     45,I) DEFORMATION FOR THE REAL SPIN-ORBIT.',12X,'ECIS-627'/6X,'41-5INPA-642
     50   BETA(6,I) DEFORMATION FOR THE IMAGINARY SPIN-ORBIT.',7X,'ECIS-INPA-643
     6628'/6X,'51-60   BETA(7,I) DEFORMATION FOR THE COULOMB POTENTIAL.'INPA-644
     7,10X,'ECIS-629'/6X,'61-70   BETA(8,I) DEFORMATION FOR THE COULOMB INPA-645
     8SPIN-ORBIT.',9X,'ECIS-630'/' THERE ARE IQ SUCH CARDS',48X,'ECIS-63INPA-646
     91'/'  NOTE:  IF LO(5)=.FALSE., BETA(I,J)=BETA(1,J) FOR I=2,8 AND JINPA-647
     A=1,IQ.',4X,'ECIS-632'/'  ****',66X,'ECIS-633'/72X,'ECIS-634'/'EXPLINPA-648
     BANATION OF DEFORMATIONS OF THE ROTATIONAL MODEL:',20X,'ECIS-635'/'INPA-649
     C****************************************************',20X,'ECIS-63INPA-650
     D6'/'FOR SYMMETRIC ROTATIONAL MODEL (LO(3)=.FALSE.):',25X,'ECIS-637INPA-651
     E'/7X,'THE ORDER OF DEFORMATION IS L=2, 4, 6, ... AND SO ON.',12X,'INPA-652
     FECIS-638'/7X,'THE RADIAL DEPENDENCE OF POTENTIALS IS:',26X,'ECIS-6INPA-653
     G39'/''/10X,'R = R0*(1 + BETA(*,1)*Y(2,0).+ BETA(*,2)*Y(4,0) + ...INPA-654
     H..)',6X,'ECIS-640'/10X,'ODD ORDER DEFORMATIONS ARE NOT READ.',26X,INPA-655
     I'ECIS-641'/72X,'ECIS-642'/'FOR THE ASYMMETRIC ROTATIONAL MODEL (LOINPA-656
     J(3)=.TRUE.):',21X,'ECIS-643'/7X,'THE ORDER OF DEFORMATIONS ARE (L,INPA-657
     KK)=(2,0), (2,2), (4,0), (4,2),  ECIS-644')                        INPA-658
      WRITE (MW,1030)                                                   INPA-659
 1030 FORMAT (10X,'(4,4), (6,0) .... AND SO ON. THERE ARE LIMITED TO (8,INPA-660
     18).',6X,'ECIS-645'/7X,'THE RADIAL DEPENDENCE OF POTENTIALS IS:',26INPA-661
     2X,'ECIS-646'/10X,'R = R0*(1 + BETA(*,1)*(COS(BETA(*,2))*Y(2,0)+SININPA-662
     3(BETA(*,2))*  ECIS-647'/10X,'(Y(2,2)+Y(2,-2))*SQRT(0.5)) + BETA(*,INPA-663
     43)*(COS(BETA(*,4))*Y(4,0)ECIS-648'/10X,'+SIN(BETA(*,4)*(COS(BETA(*INPA-664
     5,5))*(Y(4,2)+Y(4,-2))*SQRT(0.5))',4X,'ECIS-649'/10X,'+SIN(BETA(*,5INPA-665
     6))*(Y(4,4)+Y(4,-4))*SQRT(0.5)) + ..............  ECIS-650'/3X,'THEINPA-666
     7 "GAMMA" TYPE BETAS AS BETA(*,I) FOR I=2,4,5,7... ARE IN DEGREES. INPA-667
     8ECIS-651'/3X,'****************************************************INPA-668
     9**************** ECIS-652'/'FOR THE CONSTRAINED ASYMMETRIC ROTATIOINPA-669
     ANAL MODEL, WHEN LO(2)=.TRUE., THE ECIS-653'/7X,'BAND MIXING COEFFIINPA-670
     BCIENTS ARE CALCULATED FROM "GAMMA"=BETA(*,2)   ECIS-654'/7X,'IN THINPA-671
     CE DAVYDOV-FILIPPOV MODEL. THE SEQUENCE OF STATES MUST BE',4X,'ECISINPA-672
     D-655'/7X,'THE GROUND STATE, THE FIRST 2+, THE SECOND 2+,THE OTHER INPA-673
     ESTATES   ECIS-656'/7X,'DESCRIBED AS IN THE GENERAL CASE (THERE CANINPA-674
     F BE ONLY THE GROUND   ECIS-657'/7X,'STATE AND THE FIRST 2+). THE MINPA-675
     GIXING PARAMETER OF THE FIRST 2+',4X,'ECIS-658'/7X,'STATE IS USED AINPA-676
     HS "GAMMA" VALUE INSTEAD OF BETA(1,2), BUT THE',5X,'ECIS-659'/7X,'DINPA-677
     IIFFERENCES BETWEEN BETA(I,3) ARE KEPT. THE MIXING PARAMETER',5X,'EINPA-678
     JCIS-660'/7X,'OF THE SECOND 2+ STATE IS IGNORED. IN A SEARCH, THE IINPA-679
     KNDEX 4001   ECIS-661')                                            INPA-680
      RETURN                                                            INPA-681
      END                                                               INPA-682
C 17/11/12                                                      ECIS12  INPB-000
      SUBROUTINE INPB                                                   INPB-001
      COMMON /INOUT/ MR,MW,MS                                           INPB-002
      WRITE (MW,1031)                                                   INPB-003
 1031 FORMAT (7X,'SHOULD BE USED INSTEAD OF 2002 OR 3011 FOR "GAMMA".',1INPB-004
     14X,'ECIS-662'/72X,'ECIS-663'/'DEFORMATIONS OF ANHARMONIC VIBRATIONINPB-005
     2AL MODEL',28X,'ECIS-664'/'****************************************INPB-006
     3****',28X,'ECIS-665'/'  NOTE:  IN THIS MODEL, THERE IS AN UNIQUE RINPB-007
     4ATIO 1/SQRT(4*PI) FOR ANY   ECIS-666'/'  ****  ORDER OF DEFORMATIOINPB-008
     5N. TO BE CONSISTENT WITH THE HARMONIC',8X,'ECIS-667'/8X,'VIBRATIONINPB-009
     6AL MODEL, THE DEFORMATIONS INDICATED BELOW SHOULD BE   ECIS-668'/8INPB-010
     7X,'BETA, BETA**2/SQRT(4*PI) AND BETA**3/(4*PI) RESPECTIVELY.',7X,'INPB-011
     8ECIS-669'/72X,'ECIS-670'/'DEFORMATIONS',28X,'FORMAT (7F10.5)',17X,INPB-012
     9'ECIS-671'/'************',60X,'ECIS-672'/' ONLY IF LO(1)=.FALSE. AINPB-013
     AND .LO(3)=.TRUE., LO(5) OR LO(16)=.TRUE.,',7X,'ECIS-673'/' OTHERWIINPB-014
     BSE GO TO "OPTICAL MODEL PARAMETERS".',28X,'ECIS-674'/7X,'1-10   BEINPB-015
     CTA(1,*) FOR CENTRAL POTENTIAL.',26X,'ECIS-675'/6X,'11-20   BETA(2,INPB-016
     D*) FOR VOLUME IMAGINARY POTENTIAL.',17X,'ECIS-676'/6X,'21-30   BETINPB-017
     EA(3,*) FOR SURFACE REAL POTENTIAL.',21X,'ECIS-677'/6X,'31-40   BETINPB-018
     FA(4,*) FOR SURFACE IMAGINARY POTENTIAL.',16X,'ECIS-678'/6X,'41-50 INPB-019
     G  BETA(5,*) FOR REAL SPIN-ORBIT.',28X,'ECIS-679'/6X,'51-60   BETA(INPB-020
     H6,*) FOR IMAGINARY SPIN-ORBIT.',23X,'ECIS-680'/6X,'61-70   BETA(7,INPB-021
     I*) FOR COULOMB POTENTIAL.',26X,'ECIS-681'/72X,'ECIS-682'/'  NEXT CINPB-022
     JARD:',28X,'FORMAT (7F10.5)',17X,'ECIS-683'/'  **********',60X,'ECIINPB-023
     KS-684')                                                           INPB-024
      WRITE (MW,1032)                                                   INPB-025
 1032 FORMAT (7X,'1-10   BETA(8,*) FOR COULOMB SPIN-ORBIT POTENTIAL.',15INPB-026
     1X,'ECIS-685'/'THERE ARE FOUR SETS OF SUCH CARDS, ONE FOR EACH ORDEINPB-027
     2R OF DEFORMATION.   ECIS-686'/72X,'ECIS-687'/'ANGULAR MOMENTA',25XINPB-028
     3,'FORMAT (14I5)',19X,'ECIS-688'/'***************',57X,'ECIS-689'/'INPB-029
     4 IF LO(16)=.TRUE., OTHERWISE GO TO "DEFORMATIONS".(IF LO(6)=.TRUE.INPB-030
     5,',5X,'ECIS-690'/' HEAVY-ION DEFINITION DO NOT CHANGE NON COULOMB INPB-031
     6DEFORMATION LENGTHS).   ECIS-691'/7X,'1- 5   FOR ZEROTH ORDER (DEFINPB-032
     7AULT VALUE 2). (NOT USED)',12X,'ECIS-692'/7X,'6-10   FOR FIRST ORDINPB-033
     8ER (DEFAULT VALUE 2).',24X,'ECIS-693'/6X,'11-15   FOR SECOND ORDERINPB-034
     9 (DEFAULT VALUE 2).',23X,'ECIS-694'/6X,'16-20   FOR THIRD ORDER (DINPB-035
     AEFAULT VALUE 2).',24X,'ECIS-695'/6X,'21-25   IK   LEVEL OF WHICH TINPB-036
     BHE MASSES ARE USED FOR HEAVY-ION',5X,'ECIS-696'/14X,'CORRECTIONS. INPB-037
     C(DEFAULT VALUE IK=1).',24X,'ECIS-697'/9X,'ENTER A NEGATIVE VALUE IINPB-038
     DF YOU WANT 0.',26X,'ECIS-698'/72X,'ECIS-699'/'OPTICAL POTENTIAL PAINPB-039
     ERAMETERS',44X,'ECIS-700'/'****************************',44X,'ECIS-INPB-040
     F701'/'IF LO(7)=.FALSE., NPP LOOPS TO "EQUIDISTANT ANGLES". EACH LOINPB-041
     GOP INCLUDES ECIS-702'/'EIGHT CARDS GIVING THE DEPTH, THE REDUCED RINPB-042
     HADIUS, THE DIFFUSENESS AND   ECIS-703'/''/'AN EXPONENT FOR A WOODINPB-043
     IS-SAXON FORM FACTOR (AT THE POWER 1+THIS EXPONENT)ECIS-704'/'FOLLOINPB-044
     JWED, IF LO(17)=.TRUE., BY THE FOLDING PARAMETERS.',18X,'ECIS-705')INPB-045
      WRITE (MW,1033)                                                   INPB-046
 1033 FORMAT (' THE PROGRAM SEARCHES TO WHICH NUCLEAR LEVEL THE POTENTIAINPB-047
     1L BELONGS. IF  ECIS-706'/'NONE IS FOUND, A WARNING IS PRINTED AND INPB-048
     2THE FIRST ONE IS CHOSEN.',8X,'ECIS-707'/72X,'ECIS-708'/'VOLUME OR INPB-049
     3SCALAR REAL POTENTIAL',9X,'FORMAT (4F10.5)',17X,'ECIS-709'/'******INPB-050
     4*************************',41X,'ECIS-710'/7X,'1-10   VAL(1)   DEPTINPB-051
     5H IN MEV.',36X,'ECIS-711'/6X,'11-20   VAL(2)   REDUCED RADIUS IN FINPB-052
     6ERMIS.',24X,'ECIS-712'/6X,'21-30   VAL(3)   DIFFUSENESS IN FERMIS.INPB-053
     7',27X,'ECIS-713'/6X,'31-40   VAL(4)   EXTRA EXPONENTIATION FACTOR.INPB-054
     8',21X,'ECIS-714'/72X,'ECIS-715'/'VOLUME OR SCALAR IMAGINARY POTENTINPB-055
     9IAL',4X,'FORMAT (4F10.5)',17X,'ECIS-716'/'************************INPB-056
     A************',36X,'ECIS-717'/7X,'1-10   VAL(5)   DEPTH IN MEV.',36INPB-057
     BX,'ECIS-718'/6X,'11-20   VAL(6)   REDUCED RADIUS IN FERMIS.',24X,'INPB-058
     CECIS-719'/6X,'21-30   VAL(7)   DIFFUSENESS IN FERMIS.',27X,'ECIS-7INPB-059
     D20'/6X,'31-40   VAL(8)   EXTRA EXPONENTIATION FACTOR.',21X,'ECIS-7INPB-060
     E21'/72X,'ECIS-722'/'SURFACE OR VECTOR REAL POTENTIAL',8X,'FORMAT (INPB-061
     F4F10.5)',17X,'ECIS-723'/'********************************',40X,'ECINPB-062
     GIS-724'/7X,'1-10   VAL(9)   DEPTH IN MEV.',36X,'ECIS-725'/6X,'11-2INPB-063
     H0   VAL(10)  REDUCED RADIUS IN FERMIS.',24X,'ECIS-726'/6X,'21-30  INPB-064
     I VAL(11)  DIFFUSENESS IN FERMIS.',27X,'ECIS-727'/6X,'31-40   VAL(1INPB-065
     J2)  EXTRA EXPONENTIATION FACTOR.',21X,'ECIS-728'/72X,'ECIS-729')  INPB-066
      WRITE (MW,1034)                                                   INPB-067
 1034 FORMAT ('SURFACE OR VECTOR IMAGINARY POTENTIAL   FORMAT (4F10.5)',INPB-068
     117X,'ECIS-730'/'*************************************',35X,'ECIS-7INPB-069
     231'/7X,'1-10   VAL(13)  DEPTH IN MEV.',36X,'ECIS-732'/6X,'11-20   INPB-070
     3VAL(14)  REDUCED RADIUS IN FERMIS.',24X,'ECIS-733'/6X,'21-30   VALINPB-071
     4(15)  DIFFUSENESS IN FERMIS.',27X,'ECIS-734'/6X,'31-40   VAL(16)  INPB-072
     5EXTRA EXPONENTIATION FACTOR.',21X,'ECIS-735'/72X,'ECIS-736'/'SPIN-INPB-073
     6ORBIT OR TENSOR REAL POTENTIAL',5X,'FORMAT (4F10.5)',17X,'ECIS-737INPB-074
     7'/'***********************************',37X,'ECIS-738'/7X,'1-10   INPB-075
     8VAL(17)  DEPTH IN MEV.',36X,'ECIS-739'/6X,'11-20   VAL(19)  REDUCEINPB-076
     9D RADIUS IN FERMIS.',24X,'ECIS-740'/6X,'21-30   VAL(19)  DIFFUSENEINPB-077
     ASS IN FERMIS.',27X,'ECIS-741'/6X,'31-40   VAL(20)  EXTRA EXPONENTIINPB-078
     BATION FACTOR.',21X,'ECIS-742'/72X,'ECIS-743'/'SPIN-ORBIT/TENSOR IMINPB-079
     CAGINARY POTENTIAL   FORMAT (4F10.5)',17X,'ECIS-744'/'*************INPB-080
     D************************',35X,'ECIS-745'/7X,'1-10   VAL(21)  DEPTHINPB-081
     E IN MEV.',36X,'ECIS-746'/6X,'11-20   VAL(22)  REDUCED RADIUS IN FEINPB-082
     FRMIS.',24X,'ECIS-747'/6X,'21-30   VAL(23)  DIFFUSENESS IN FERMIS.'INPB-083
     G,27X,'ECIS-748'/6X,'31-40   VAL(24)  EXTRA EXPONENTIATION FACTOR.'INPB-084
     H,21X,'ECIS-749'/'  NOTE:  THE SPIN-ORBIT OPERATOR IS ALWAYS 2*(L.SINPB-085
     I)',22X,'ECIS-750'/'  ****  FOR SPIN 1/2 PARTICLE, THE DEPTH IS THEINPB-086
     J USUAL VALUE.',12X,'ECIS-751'/8X,'FOR SPIN 1 PARTICLE, THE DEPTH IINPB-087
     KS THE HALF OF THE USUAL VALUE.  ECIS-752'/72X,'ECIS-753')         INPB-088
      WRITE (MW,1035)                                                   INPB-089
 1035 FORMAT ('COULOMB POTENTIAL',23X,'FORMAT (4F10.5)',17X,'ECIS-754'/'INPB-090
     1*****************',55X,'ECIS-755'/7X,'1-10   VAL(26)  REDUCED COULINPB-091
     2OMB RADIUS IN FERMIS.',16X,'ECIS-756'/6X,'11-20   VAL(27)  DIFFUSEINPB-092
     3NESS OF A WOODS-SAXON CHARGE DISTRIBUTION.ECIS-757'/6X,'21-30   VAINPB-093
     4L(33)  THIRD PARAMETER OF A FERMI CHARGE DISTRIBUTION.  ECIS-758'/INPB-094
     56X,'31-40   VAL(28)  EXTRA EXPONENTIATION FACTOR.',21X,'ECIS-759'/INPB-095
     672X,'ECIS-760'/'SPIN-ORBIT COULOMB POTENTIAL',12X,'FORMAT (4F10.5)INPB-096
     7',17X,'ECIS-761'/'****************************',44X,'ECIS-762'/7X,INPB-097
     8'1-10   VAL(29)  ANOMALOUS MAGNETIC MOMENT (LESS HALF CHARGE IN   INPB-098
     9ECIS-763'/14X,'DIRAC FORMALISM) MULTIPLIED BY THE CHARGE OF THE TAINPB-099
     ARGET.  ECIS-764'/6X,'11-20   VAL(30)  REDUCED RADIUS IN FERMIS.',2INPB-100
     B4X,'ECIS-765'/6X,'21-30   VAL(31)  DIFFUSENESS IN FERMIS.',27X,'ECINPB-101
     CIS-766'/6X,'31-40   VAL(32)  EXTRA EXPONENTIATION FACTOR.',21X,'ECINPB-102
     DIS-767'/''/'  NOTE:  IF VAL(27)=0. OR VAL(31)=0. A HOMOGENEOUS CHINPB-103
     EARGE DISTRIBUTION  ECIS-768'/'  ****  IS USED. THE PRODUCT OF CHARINPB-104
     FGES IS COPIED INTO VAL(25).',9X,'ECIS-769'/9X,'WHEN THE DIFFUSENESINPB-105
     GS OF THE CHARGE IS NOT ZERO, THE WOODS-SAXONECIS-770'/8X,'FORM FACINPB-106
     HTOR IS MULTIPLIED BY 1+VAL(33)*R**2. THE SAME PARAMETER ECIS-771'/INPB-107
     I8X,'VAL(25) IS USED FOR THESE TWO LAST POTENTIALS, IF THEIR',9X,'EINPB-108
     JCIS-772'/8X,'DIFFUSENESS IS NOT ZERO.',40X,'ECIS-773')            INPB-109
      WRITE (MW,1036)                                                   INPB-110
 1036 FORMAT (9X,'IF LO(9)=.TRUE., ENTER A NEGATIVE RADIUS TO USE A SYMMINPB-111
     1ETRIC',4X,'ECIS-774'/8X,'WOODS-SAXON FORM FACTOR.',40X,'ECIS-775'/INPB-112
     29X,'IF A DIFFUSENESS OR THE RADIUS OF A COULOMB POTENTIAL WITHOUT INPB-113
     3 ECIS-776'/8X,'DIFFUSENESS IS NEGATIVE, ITS ABSOLUTE VALUE IS TAKEINPB-114
     4N INTO',7X,'ECIS-777'/8X,'ACCOUNT IN SUBROUTINE ROTP AND A MESSAGEINPB-115
     5 PRINTED.',15X,'ECIS-778'/72X,'ECIS-779'/'*** END OF DO-LOOP FOR PINPB-116
     6OTENTIALS WITHOUT FOLDING (LO(17)=.FALSE.) ***  ECIS-780'/72X,'ECIINPB-117
     7S-781'/'INPUT OF FOLDING PARAMETERS',13X,'FORMAT (L1,F9.5,2F10.5)'INPB-118
     8,9X,'ECIS-782'/'***************************',45X,'ECIS-783'/' ONLYINPB-119
     9 IF LO(17)=.TRUE., OTHERWISE GO TO "END OF DO-LOOP FOR POTENTIALS"INPB-120
     A.ECIS-784'/7X,'1- 1   LF LOGICAL .TRUE. TO USE THE SAME PARAME. FOINPB-121
     BR ALL POTEN-  ECIS-785'/25X,'.FALSE. TO USE DIFFERENT PARAMETERS FINPB-122
     COR EACH   ECIS-786'/7X,'1-10   VAL(34) "V" PARAMETER FOR CENTRAL OINPB-123
     DR SCALAR POTENTIALS',4X,'ECIS-787'/6X,'11-20   VAL(35) "R" PARAMETINPB-124
     EER FOR CENTRAL OR SCALAR POTENTIALS',4X,'ECIS-788'/6X,'21-30   VALINPB-125
     F(36) "A" PARAMETER FOR CENTRAL OR SCALAR POTENTIALS',4X,'ECIS-789'INPB-126
     G/72X,'ECIS-790'/'FOLDING FOR THE OTHERS POTENTIALS',7X,'FORMAT (3FINPB-127
     H10.5)',17X,'ECIS-791'/'*********************************',39X,'ECIINPB-128
     IS-792'/' ONLY IF THE LOGICAL LF READ ON PREVIOUS CARD IS .FALSE. RINPB-129
     JEAD SEVEN CARDECIS-793'/3X,'FOR THE 21 PARAMETERS FOR THE SEVEN OTINPB-130
     KHERS POTENTIALS!',15X,'ECIS-794')                                 INPB-131
      WRITE (MW,1037)                                                   INPB-132
 1037 FORMAT (7X,'1-10   VAL(37 ... 55) "V" PARAMETER.',29X,'ECIS-795'/6INPB-133
     1X,'11-20   VAL(38 ... 56) "R" PARAMETER.',29X,'ECIS-796'/6X,'21-30INPB-134
     2   VAL(39 ... 57) "A" PARAMETER.',29X,'ECIS-797'/72X,'ECIS-798'/'EINPB-135
     3XPLANATION OF FOLDING PARAMETERS:  THE FOLDING FUNCTIONS ARE NORMAINPB-136
     4LISEDECIS-799'/'**********************************  TO 1.  TO FOLDINPB-137
     5 AN OPTICAL POTENTIAL,ECIS-800'/4X,'ENTER THE TRUE CHARGE, THE DEPINPB-138
     6TH OF CENTRAL POTENTIAL EQUAL TO THE  ECIS-801'/4X,'DEPTH OF THE NINPB-139
     7UCLEON POTENTIAL MULTIPLIED BY THE NUMBER OF NUCLEONS ECIS-802'/4XINPB-140
     8,'IN THE PROJECTILE, AND THE DEPTH OF OF SPIN-ORBIT POTENTIAL EQUAINPB-141
     9L TOECIS-803'/4X,'THE DEPTH OF THE NUCLEON SPIN-ORBIT POTENTIAL DIINPB-142
     AVIDED BY THE NUMBER ECIS-804'/4X,'OF NUCLEONS IN THE PROJECTILE.',INPB-143
     B38X,'ECIS-805'/6X,'"V"=0',4X,'NO FOLDING.',46X,'ECIS-806'/6X,'"A"=INPB-144
     C0',4X,'GAUSSIAN FORM FACTOR WITH THE RANGE "R".',17X,'ECIS-807'/6XINPB-145
     D,'"R"=0',4X,'HULTHEN FORM FACTOR (EXP(-X/"V")-EXP(-X/"A"))/X.',9X,INPB-146
     E'ECIS-808'/15X,'REDUCED TO YUKAWA FORM FACTOR EXP(-X/"V")/X IF "A"INPB-147
     F=0.',4X,'ECIS-809'/4X,'OTHERWISE  SAXON FORM FACTOR 1/(1+EXP((X-"RINPB-148
     G")/"A").',17X,'ECIS-810'/6X,'IF A FOLDING PARAMETER IS NEGATIVE, TINPB-149
     HHE ABSOLUTE VALUE IS TAKEN   ECIS-811'/4X,'INTO ACCOUNT IN SUBROUTINPB-150
     IINE FOLD AND A MESSAGE PRINTED.',14X,'ECIS-812'/6X,'ALL THE DERIVAINPB-151
     JTIVES OF POTENTIALS NEEDED ARE OBTAINED BY NUMERICALECIS-813'/4X,'INPB-152
     KDERIVATION AFTER FOLDING.',43X,'ECIS-814'/72X,'ECIS-815')         INPB-153
      WRITE (MW,1038)                                                   INPB-154
 1038 FORMAT (6X,'******  END OF DO-LOOP FOR POTENTIALS ******',22X,'ECIINPB-155
     1S-816'/72X,'ECIS-817'/'EQUIDISTANT ANGLES',22X,'FORMAT (7F10.5)',1INPB-156
     27X,'ECIS-818'/'******************',54X,'ECIS-819'/'  ONLY IF LO(66INPB-157
     3)=.FALSE., OTHERWISE GO TO "SPIN-ORBIT PARAMETRISATION". ECIS-820'INPB-158
     4/7X,'1-10   THETA1   FIRST ANGLE.',37X,'ECIS-821'/6X,'11-20   DTHEINPB-159
     5TA   STEP. (DEFAULT VALUE 1.)',25X,'ECIS-822'/6X,'21-30   THETA2  INPB-160
     6 LAST ANGLE.',38X,'ECIS-823'/6X,'31-40   DTHE',5X,'AVERAGING ANGLEINPB-161
     7. VALUES LISTED ARE 1/3 OF THE SUMECIS-824'/23X,'OF VALUES AT THETINPB-162
     8A AND THETA+/-DTHE.',13X,'ECIS-825'/72X,'ECIS-826'/'SPIN-ORBIT PARINPB-163
     9AMETRISATION',14X,'FORMAT (7F10.5)',17X,'ECIS-827'/'**************INPB-164
     A************',46X,'ECIS-828'/' ONLY IF LO(4)=.TRUE., OTHERWISE GO INPB-165
     BTO "HAUSER-FESHBACH CORRECTIONS".   ECIS-829'/7X,'1-10   AZ1.',54XINPB-166
     C,'ECIS-830'/6X,'11-20   AZ2.',8X,'(THESE PARAMETERS ARE IN AN ARRAINPB-167
     DY',13X,'ECIS-831'/''/6X,'21-30   AZ3.',54X,'ECIS-832'/6X,'31-40  INPB-168
     E AZ4.',8X,'AZ(16) FROM AZ(1) TO AZ(6) FOR THE SEARCH)',4X,'ECIS-83INPB-169
     F3'/6X,'41-50   AZ5.',54X,'ECIS-834'/6X,'51-60   AZ6.',54X,'ECIS-83INPB-170
     G5'/'  NOTE:  THE UNPARAMETRISED SPIN-ORBIT DEFORMATION IS:',18X,'EINPB-171
     HCIS-836'/'  ****',8X,'AZ1=AZ4=0.,  AZ2=AZ3=AZ5=AZ6=1.',27X,'ECIS-8INPB-172
     I37'/8X,'THE SPIN-ORBIT DEFORMATION MULTIPLIED BY X IS:',18X,'ECIS-INPB-173
     J838'/14X,'AZ1=AZ4=0., AZ2=1., AZ3=AZ5=AZ6=X .',23X,'ECIS-839'/8X,'INPB-174
     KTHE "INCORRECT" SPIN-ORBIT DEFORMATION IS:',22X,'ECIS-840')       INPB-175
      WRITE (MW,1039)                                                   INPB-176
 1039 FORMAT (14X,'AZ1=AZ2=AZ5=AZ6=0., AZ3=AZ4=0.5 .',25X,'ECIS-841'/8X,INPB-177
     1'FOR THE MOST GENERAL PARAMETRISATION OF DEFORMED SPIN-ORBIT SEE EINPB-178
     2CIS-842'/8X,'COMMENT CARDS IN SUBROUTINE QUAN.',31X,'ECIS-843'/72XINPB-179
     3,'ECIS-844'/'HAUSER-FESHBACH CORRECTIONS',13X,'FORMAT (7F10.5)',17INPB-180
     4X,'ECIS-845'/'***************************',45X,'ECIS-846'/' ONLY IINPB-181
     5F LO(81)=.TRUE., OTHERWISE GO TO "CARDS READ IN SUBROUTINE DEPH".EINPB-182
     6CIS-847'/7X,'1-10   BZ1.   SQUARE ROOT OF ELASTIC ENHANCEMENT.',16INPB-183
     7X,'ECIS-848'/21X,'(DEFAULT VALUE 1.4142).',28X,'ECIS-849'/6X,'11-2INPB-184
     80   BZ2.   IF LO(82)=.TRUE., SPIN CUT-OFF PARAMETER (DEFAULT  ECISINPB-185
     9-850'/21X,'VALUE 3.5). IF LO(82)=.FALSE., PARTICLE DEGREES OF ECISINPB-186
     A-851'/21X,'FREEDOM.',43X,'ECIS-852'/6X,'21-30   BZ3.   SQUARE ROOTINPB-187
     B OF LEVEL DENSITY PARAMETER.',12X,'ECIS-853'/21X,'(DEFAULT VALUE 1INPB-188
     C00.). IF LO(82)=LO(87)=.FALSE.,',4X,'ECIS-854'/21X,'PARAMETER BZ3 INPB-189
     DIN MOLDAUER''S FORMULA GIVEN BELOW.   ECIS-855'/21X,'(DEFAULT VALUINPB-190
     EE 1.212).',29X,'ECIS-856'/6X,'31-40   BZ4.   IF LO(82)=LO(87)=.FALINPB-191
     FSE., PARAMETER BZ4 IN MOL-',4X,'ECIS-857'/21X,'DAUER''S FORMULA GIINPB-192
     GVEN BELOW. (DEFAULT VALUE 0.78). ECIS-858'/6X,'41-50   BZ5.   IF LINPB-193
     HO(82)=LO(87)=.FALSE., PARAMETER BZ5 IN MOL-',4X,'ECIS-859'/20X,'DAINPB-194
     IUER''S FORMULA GIVEN BELOW. (DEFAULT VALUE 0.228). ECIS-860'/'  NOINPB-195
     JTE:  THE PENETRABILITIES, WHICH ARE PROBABILITIES OF COMPOUND',7X,INPB-196
     K'ECIS-861')                                                       INPB-197
      WRITE (MW,1040)                                                   INPB-198
 1040 FORMAT ('  ****  NUCLEUS FORMATION, ARE RELATED TO PARTIAL CROSS-SINPB-199
     1ECTIONS MINUS  ECIS-862'/8X,'THE REACTION CROSS-SECTION TO THE CHAINPB-200
     2NNELS TAKEN INTO ACCOUNT.  ECIS-863'/9X,'IF LO(82)=.TRUE., DENOTININPB-201
     3G BY TI AND TF THE PENETRABILITIES',4X,'ECIS-864'/8X,'DEFINED ABOVINPB-202
     4E FOR THE INCOMING AND THE OUTGOING CHANNELS, THE   ECIS-865'/8X,'INPB-203
     5HAUSER-FESHBACH CORRECTION IS: TI*TF/(4*(SUM ON ALL THE T)+',5X,'EINPB-204
     6CIS-866'/8X,'+BZ3**2*(2*J+1)*EXP(-(J*J+J)/(2*BZ2**2)) FOR INELASTIINPB-205
     7C CHANNELS,ECIS-867'/8X,'MULTIPLIED BY BZ1**2 FOR THE ELASTIC ONE.INPB-206
     8',23X,'ECIS-868'/8X,'FOR THE SEARCH, THESE QUANTITIES ARE IN AZ FRINPB-207
     9OM AZ(7) TO AZ(9). ECIS-869'/9X,'FOR LO(82)=.FALSE.: WITHOUT FLUCTINPB-208
     AUATIONS (LO(87)=.TRUE.), BZ1  ECIS-870'/8X,'IS USED AND CAN BE IN INPB-209
     BSEARCH; WITH FLUCTUATIONS (LO(87)=.FALSE.)ECIS-871'/8X,'THE GIVEN INPB-210
     CVALUE OF BZ2 IS USED IF BZ2 IS NOT 0; IF BZ2=0., THE  ECIS-872'/8XINPB-211
     D,'CHANNEL DEGREE OF FREEDOM PARAMETER, FORMULA (1) IN P.A.',8X,'ECINPB-212
     EIS-873'/8X,'MOLDAUER, NUCLEAR PHYSICS A344 (1980), PAGE 185-195, WINPB-213
     FHICH IS:  ECIS-874'/12X,'1.78D0+(TL**1.212D0-0.78D0)*DEXP(-0.228D0INPB-214
     G*SUM ON TL)',8X,'ECIS-875'/8X,'IS GENERALISED BY THE EXPRESSION:',INPB-215
     H31X,'ECIS-876'/12X,'1.D0+BZ4+(TL**BZ3-BZ4)*DEXP(-BZ5*SUM ON TL)',1INPB-216
     I7X,'ECIS-877'/8X,'IF LO(82)=.TRUE. BZ1 AND BZ2 CAN BE IN SEARCH; IINPB-217
     JF LO(82)=.FALSE.ECIS-878'/8X,'AND LO(87)=.TRUE. BZ3 CAN BE IN SEARINPB-218
     KCH; IF LO(82)=LO(87)=.FALSE.ECIS-879')                            INPB-219
      WRITE (MW,1041)                                                   INPB-220
 1041 FORMAT (8X,'BZ2 CAN BE IN SEARCH, BUT IF BZ2=0., BZ3, BZ4 AND BZ5 INPB-221
     1CAN ALSO  ECIS-880'/8X,'BE IN SEARCH.',51X,'ECIS-881'/72X,'ECIS-88INPB-222
     22'/'FISSION DATA',28X,'FORMAT (7F10.5)',17X,'ECIS-883'/'**********INPB-223
     3**',60X,'ECIS-884'/' IF LO(82)=.TRUE., GO TO "CARDS READ IN SUBROUINPB-224
     4TINE DEPH".',15X,'ECIS-885'/' IF LO(85)=.FALSE., GO TO "GIANT DIPOINPB-225
     5LE RESONANCE DESCRIPTION".',9X,'ECIS-886'/7X,'1-10   FISS(1,*)  TRINPB-226
     6ANSMISSION COEFFICIENT',23X,'ECIS-887'/6X,'11-20   FISS(2,*)  DEGRINPB-227
     7EE OF FREEDOM. IF <.5, IT IS REPLACED BY 0.ECIS-888'/'  THERE ARE INPB-228
     8NFISS SUCH CARDS. THE FIRST COEFFICIENT IS FOR THE SMALLEST ECIS-8INPB-229
     989'/'TOTAL J VALUE OF THE SYSTEM AND THE SAME PARITY OF THE GROUNDINPB-230
     A STATE. THEECIS-890'/'SECOND ONE IS FOR THE OPPOSITE PARITY. THE FINPB-231
     BOLLOWING ONES ARE FOR HIGHERECIS-891'/'J VALUES, WITH THE SAME ORDINPB-232
     CER FOR PARITIES.',29X,'ECIS-892'/72X,'ECIS-893'/'GIANT DIPOLE RESOINPB-233
     DNANCE DESCRIPTION',6X,'FORMAT (7F10.5)',17X,'ECIS-894'/'**********INPB-234
     E************************',38X,'ECIS-895'/''/' ONLY IF LO(86)=.TRUINPB-235
     FE., OTHERWISE GO TO "LEVEL DENSITY FOR CONTINUUM".  ECIS-896'/' IFINPB-236
     G NRD IS NOT 0, GO TO "GAMMA TRANSMISSION FACTORS".',19X,'ECIS-897'INPB-237
     H/' DATA TO COMPUTE THE (NEUTRON, GAMMA) CROSS-SECTION WHEN THE GIAINPB-238
     INT',6X,'ECIS-898'/' DIPOLE RESONANCE MODEL IS USED (SEE E. LYNN, "INPB-239
     JTHE THEORY OF NEUTRON',4X,'ECIS-899'/' RESONANCE REACTIONS", PAGESINPB-240
     K 321/326 AND A. GILBERT AND A.G.W.',10X,'ECIS-900')               INPB-241
      WRITE (MW,1042)                                                   INPB-242
 1042 FORMAT (' CAMERON, CAN. JOUR. OF PHYSICS 43, 1446, 1965, PAGES 147INPB-243
     15/1476).',7X,'ECIS-901'/7X,'1-10   TGO   SLOW S-WAVE NEUTRON GAMMAINPB-244
     2 WIDTHS/SPACING FOR',8X,'ECIS-902'/20X,'NORMALISATION. IF TGO=0, LINPB-245
     3O(86) IS SET .FALSE.',6X,'ECIS-903'/6X,'11-20   BN',4X,'NEUTRON SEINPB-246
     4PARATION ENERGY.(DEFAULT VALUE 8.).',7X,'ECIS-904'/6X,'21-30   FNUINPB-247
     5G  RADIATIVE DEGREES OF FREEDOM.',23X,'ECIS-905'/20X,'IF LESS THANINPB-248
     6 1., IT IS REPLACED BY FNUG=20.',9X,'ECIS-906'/6X,'31-40   EGD   EINPB-249
     7NERGY OF THE GIANT DIPOLE RESONANCE.',15X,'ECIS-907'/20X,'(DEFAULTINPB-250
     8 VALUE 163*(N*Z)**2/(N+Z)**(4/3).).',9X,'ECIS-908'/20X,'THE STRONGINPB-251
     9 ABSORPTION MODEL ID USED IF EGD < 0.',5X,'ECIS-909'/20X,'(SIMPLE INPB-252
     ABEHAVIOUR AS E**3 INSTEAD OF RESONANCE',6X,'ECIS-910'/20X,'WITH A INPB-253
     BFACTOR E**4)',33X,'ECIS-911'/6X,'41-50   GGD   RESONANCE WIDTH. (DINPB-254
     CEFAULT VALUE 5.).',16X,'ECIS-912'/4X,'FOR THE SEARCH, THESE QUANTIINPB-255
     DTIES ARE IN AZ FROM AZ(12) TO AZ(16).   ECIS-913'/72X,'ECIS-914'/'INPB-256
     EGAMMA TRANSMISSION FACTORS',14X,'FORMAT (7F10.5)',17X,'ECIS-915'/'INPB-257
     F**************************',46X,'ECIS-916'/' ONLY IF LO(86)=.TRUE.INPB-258
     G AND NRD IS NOT 0.',32X,'ECIS-917'/7X,'1-10   GAM(1) FOR L=0.',43XINPB-259
     H,'ECIS-918'/6X,'11-20   GAM(2) FOR L=1.',43X,'ECIS-919'/6X,'......INPB-260
     I.................',43X,'ECIS-920'/6X,'61-70   GAM(7) FOR L=6.',43XINPB-261
     J,'ECIS-921'/'  UP TO GAM(NRD), EVENTUALLY ON OTHERS CARDS.',27X,'EINPB-262
     KCIS-922'/72X,'ECIS-923')                                          INPB-263
      WRITE (MW,1043)                                                   INPB-264
 1043 FORMAT ('LEVEL DENSITY OF COMPOUND NUCLEUS',7X,'FORMAT (7F10.5)',1INPB-265
     17X,'ECIS-924'/'*********************************',39X,'ECIS-925'/'INPB-266
     2 IF THERE ARE GAMMA TRANSMISSION PARAMETERS COMPUTED WITH THE GIANINPB-267
     3T',5X,'ECIS-926'/' DIPOLE RESONANCE MODEL (LO(86)=.TRUE. AND NRD=0INPB-268
     4 IN "COMPOUND NUCLEUS   ECIS-927'/' DATA"),  OR CONTINUA (NCONT NOINPB-269
     5T 0 IN "COMPOUND NUCLEUS DATA"),',9X,'ECIS-928'/' OTHERWISE GO TO INPB-270
     6"CARDS READ IN SUBROUTINE DEPH".',23X,'ECIS-929'/' FOR THE TOTAL RINPB-271
     7ESIDUAL NUCLEUS NEEDED FOR THE GAMMA GIANT RESONANCE,   ECIS-930'/INPB-272
     8' FOLLOWED BY THE RESIDUAL NUCLEUS OF EACH CONTINUUM:',20X,'ECIS-9INPB-273
     931'/7X,'1-10   SCN(7,I) Z:   CHARGE OF THE COMPOUND NUCLEUS',14X,'INPB-274
     AECIS-932'/6X,'11-20   SCN(1,I) SA:  LEVEL DENSITY PARAMETER FOR S-INPB-275
     BWAVE RESONANCEECIS-933'/28X,'SPACING. (DEFAULT VALUE (.0091*(SHELLINPB-276
     C CORR. ECIS-934'/28X,'-.23*ND)+.143)*NA WHERE NA IS THE TOTAL',5X,INPB-277
     D'ECIS-935'/28X,'NUMBER OF NUCLEONS, ND THE MINIMUM DISTANCE ECIS-9INPB-278
     E36'/28X,'TO A MAGIC NUMBER FOR PROTONS OR NEUTRONS   ECIS-937'/28XINPB-279
     F,'AND SHELL CORRECTIONS ARE GIVEN BY COOK: SEEECIS-938'/28X,'TABLEINPB-280
     GS AND REFERENCES IN SUBROUTINE LDEN).  ECIS-939'/6X,'21-30   SCN(2INPB-281
     H,I) UX:  MATCHING ENERGY FOR THE TWO DENSITY FORMULA ECIS-940'/28XINPB-282
     I,'SHIFTED BY PAIRING ENERGY. (DEFAULT VALUE   ECIS-941'/28X,'2.5+1INPB-283
     J50/NA).',32X,'ECIS-942'/6X,'31-40   SCN(3,I) TAU: NUCLEAR TEMPERATINPB-284
     KURE. (DEFAULT VALUE',9X,'ECIS-943')                               INPB-285
      WRITE (MW,1044)                                                   INPB-286
 1044 FORMAT (28X,'1/TAU=SQRT(SA/UX)-1.5/UX).',18X,'ECIS-944'/6X,'41-50 INPB-287
     1  SCN(4,I) SG:  SPIN CUT OFF PARAMETER. (DEFAULT VALUE',6X,'ECIS-9INPB-288
     245'/28X,'FORMULA (11) OF GILBERT AND CAMERON).',7X,'ECIS-946'/6X,'INPB-289
     351-60   SCN(5,I) E0:  ENERGY SHIFT. (DEFAULT VALUE FORMULA (28) OFINPB-290
     4ECIS-947'/28X,'GILBERT AND CAMERON).',23X,'ECIS-948'/6X,'61-70   SINPB-291
     5CN(6,I) EX:  MATCHING ENERGY BETWEEN THE TWO DENSITY',5X,'ECIS-949INPB-292
     6'/28X,'FORMULAE. (DEFAULT VALUE UX+PAIRING WITH',4X,'ECIS-950'/28XINPB-293
     7,'PAIRING GIVEN BY COOK)',22X,'ECIS-951'/'  NOTE:  THE DIMENSIONS INPB-294
     8OF THE ARRAY SCN ARE 7 AND NCONS. SCN(J,I)',6X,'ECIS-952'/'  **** INPB-295
     9 CAN BE SEARCHED FOR J=1 TO 6. IF SCN(J,I) IS 0., IT IS REPLACED EINPB-296
     ACIS-953'/8X,'BY THE DEFAULT VALUE COMPUTED WITH THE SCN(J,K) FOR KINPB-297
     B<I. IF',5X,'ECIS-954'/8X,'SCN(3,I) IS NEGATIVE, IT IS REPLACED BY INPB-298
     CTHE DEFAULT VALUE',7X,'ECIS-955'/8X,'COMPUTED WITH DEFAULT VALUES INPB-299
     DFOR SA AND UX. AFTER REPLACEMENT,  ECIS-956'/8X,'DENSITY PARAMETERINPB-300
     ES USED, WHICH MUST BE TAKEN INTO ACCOUNT FOR A ECIS-957'/8X,'SEARCINPB-301
     FH OR A CHANGE USING LO(37)=.TRUE. ARE LISTED AT THE END.   ECIS-95INPB-302
     G8'/72X,'ECIS-959'/''/'CARDS READ IN SUBROUTINE DEPH',43X,'ECIS-96INPB-303
     H0'/'*****************************',43X,'ECIS-961'/72X,'ECIS-962'/'INPB-304
     INUMBER OF OBSERVABLES BY CHANNEL',8X,'FORMAT (14I5)',19X,'ECIS-963INPB-305
     J'/'********************************',40X,'ECIS-964')              INPB-306
      WRITE (MW,1045)                                                   INPB-307
 1045 FORMAT (' (NON-STANDARD OBSERVABLES) ONLY IF LO(94)=.TRUE. AND LO(INPB-308
     166)=.FALSE.,   ECIS-965'/' OTHERWISE GO TO "RESTRICTED COULOMB CORINPB-309
     2RECTIONS".',22X,'ECIS-966'/7X,'1- 5   NUMBER OF OBSERVABLES FOR THINPB-310
     3E ELASTIC SCATTERING.',9X,'ECIS-967'/7X,'6-10   NUMBER OF OBSERVABINPB-311
     4LES FOR THE FIRST EXCITED STATE.',8X,'ECIS-968'/6X,'11-15   NUMBERINPB-312
     5 OF OBSERVABLES FOR THE SECOND EXCITED STATE.',7X,'ECIS-969'/6X,'1INPB-313
     66-20   NUMBER OF OBSERVABLES FOR THE THIRD EXCITED STATE.',8X,'ECIINPB-314
     7S-970'/6X,'21-25   ...........',47X,'ECIS-971'/14X,'UP TO THE LASTINPB-315
     8 COUPLED CHANNEL (NCOLL VALUES).',12X,'ECIS-972'/72X,'ECIS-973'/'FINPB-316
     9OR EACH COUPLED STATE',50X,'ECIS-974'/'**********************',50XINPB-317
     A,'ECIS-975'/72X,'ECIS-976'/'OBSERVABLE IDENTIFICATIONS',14X,'FORMAINPB-318
     BT (14I5)',19X,'ECIS-977'/'**************************',46X,'ECIS-97INPB-319
     C8'/7X,'1- 5   FIRST OBSERVABLE WHICH MUST BE THE CROSS-SECTION (ENINPB-320
     DTER A ECIS-979'/14X,'BLANK OR 0) .',45X,'ECIS-980'/7X,'6-10   SECOINPB-321
     END OBSERVABLE.',40X,'ECIS-981'/6X,'11-15   THIRD OBSERVABLE.',41X,INPB-322
     F'ECIS-982'/6X,'16-20   FOURTH OBSERVABLE.',40X,'ECIS-983'/6X,'21-2INPB-323
     G5   FIFTH OBSERVABLE.',41X,'ECIS-984'/6X,'26-30   ...........',47XINPB-324
     H,'ECIS-985'/14X,'UP TO THE LAST OBSERVABLE.',32X,'ECIS-986'/72X,'EINPB-325
     ICIS-987'/3X,'STANDARD DESCRIPTION  0   CROSS-SECTION.',29X,'ECIS-9INPB-326
     J88'/3X,'********************  1   CROSS-SECTION / RUTHERFORD''S CRINPB-327
     KOSS-SECTION.ECIS-989')                                            INPB-328
      WRITE (MW,1046)                                                   INPB-329
 1046 FORMAT (25X,'2   VECTOR ANALYSING POWER.',20X,'ECIS-990'/6X,'3',5XINPB-330
     1,'VECTOR POLARISATION.',40X,'ECIS-991'/12X,'(NOTE A RATIO SQRT(2.)INPB-331
     2 WITH IT11 FOR SPIN 1/2 FOR 2 AND 3). ECIS-992'/6X,'4',5X,'T20 .',INPB-332
     355X,'ECIS-993'/6X,'5',5X,'T21 .',55X,'ECIS-994'/6X,'6',5X,'T22 .',INPB-333
     455X,'ECIS-995'/6X,'7',5X,'KYY OR D  DEFINED AS -A(1100 1100)-A(110INPB-334
     50 1-100)',12X,'ECIS-996'/6X,'8',5X,'KXX OR R  DEFINED AS  A(1100 1INPB-335
     6100)-A(1100 1-100)',12X,'ECIS-997'/6X,'9',5X,'KZZ OR A'' DEFINED AINPB-336
     7S  A(1000 1000)',26X,'ECIS-998'/5X,'10',5X,'KXZ OR R'' DEFINED AS INPB-337
     8-SQRT(2.) A(1100 1000)',17X,'ECIS-999'/5X,'11',5X,'KZX OR A  DEFININPB-338
     9ED AS -SQRT(2.) A(1000 1100)',17X,'ECIS1000'/5X,'12',5X,'SPIN-FLIPINPB-339
     A :  (A(0000,0000)+A(1100,1100)+A(1100,1-100))/2',4X,'ECIS1001'/5X,INPB-340
     B'13',5X,'VECTOR ANALYSING POWER OF THE TARGET',24X,'ECIS1002'/10X,INPB-341
     C'(NOTE A RATIO SQRT(2.) WITH IT11 FOR SPIN 1/2 FOR 2, 3 AND 13)ECIINPB-342
     DS1003'/5X,'14',5X,'AYY  DEFINED AS -A(1111 0000)-A(111-1 0000)',17INPB-343
     EX,'ECIS1004'/5X,'15',5X,'AXX  DEFINED AS  A(1111 0000)-A(111-1 000INPB-344
     F0)',17X,'ECIS1005'/5X,'16',5X,'AZZ  DEFINED AS  A(1010 0000)',31X,INPB-345
     G'ECIS1006'/5X,'17',5X,'AXZ  DEFINED AS -SQRT(2.) A(1110 0000)',22XINPB-346
     H,'ECIS1007'/5X,'18',5X,'AZX  DEFINED AS -SQRT(2.) A(1011 0000)',22INPB-347
     IX,'ECIS1008'/5X,'19',5X,'RESERVED FOR A SET OF EXPERIMENTAL DATA WINPB-348
     JHICH ARE REACTION  ECIS1009'/17X,'CROSS-SECTIONS. SEE "CARDS READ INPB-349
     KIN SUBROUTINE LECD''',4X,'ECIS1010')                              INPB-350
      WRITE (MW,1047)                                                   INPB-351
 1047 FORMAT (12X,'NOTE THAT 12 AND 19 WERE PREVIOUSLY 7 AND 8.',16X,'ECINPB-352
     1IS1011'/72X,'ECIS1012'/4X,'NON STANDARD DESCRIPTION',4X,'ENTER A NINPB-353
     2EGATIVE VALUE, DIFFERENT FOR   ECIS1013'/4X,'*********************INPB-354
     3***',4X,'DIFFERENT OBSERVABLES. THE DESCRIPTION  ECIS1014'/32X,'WIINPB-355
     4LL BE READ IN SUBROUTINE OBSE.',8X,'ECIS1015'/10X,'CROSS-SECTIONS INPB-356
     5MUST BE BEFORE POLARISATIONS.',18X,'ECIS1016'/72X,'ECIS1017'/'PLOTINPB-357
     6 INDICATIONS',24X,'FORMAT (14I5)',19X,'ECIS1018'/'****************INPB-358
     7',56X,'ECIS1019'/7X,'1- 5   NUMBER OF DECADES IN LOGARITHMIC SCALEINPB-359
     8S FOR CROSS-SECTION.ECIS1020'/7X,'6-10   INDICATION FOR SECOND OBSINPB-360
     9ERVABLE.',25X,'ECIS1021'/6X,'11-15   INDICATION FOR THIRD OBSERVABINPB-361
     ALE.',26X,'ECIS1022'/6X,'16-20   ...................',39X,'ECIS1023INPB-362
     B'/''/14X,'UP TO THE LAST OBSERVABLE.',32X,'ECIS1024'/6X,'INDICATIINPB-363
     CONS FOR POLARISATIONS ARE "1" FOR PLOT AND "0" FOR NO PLOTECIS1025INPB-364
     D'/72X,'ECIS1026'/6X,'******  END OF DO-LOOP FOR NUCLEAR STATES ***INPB-365
     E***',18X,'ECIS1027'/72X,'ECIS1028'/'RESTRICTED COULOMB CORRECTIONSINPB-366
     F',10X,'FORMAT (14I5)',19X,'ECIS1029'/'****************************INPB-367
     G**',42X,'ECIS1030'/' IF LO(44) AND LO(46)=.TRUE., OTHERWISE GO TO INPB-368
     H"CARDS READ IN',12X,'ECIS1031'/' SUBROUTINE CALX".  FOR EACH NUCLEINPB-369
     IAR LEVEL:',29X,'ECIS1032'/7X,'1- 5   NIV(I,J,3) BETWEEN LEVEL I ANINPB-370
     JD LEVEL J FOR J=1.',11X,'ECIS1033'/7X,'6-10   NIV(I,J,3) BETWEEN LINPB-371
     KEVEL I AND LEVEL J FOR J=2.',11X,'ECIS1034')                      INPB-372
      WRITE (MW,1048)                                                   INPB-373
 1048 FORMAT (6X,'11-15   .........................',33X,'ECIS1035'/14X,INPB-374
     1'ENTER "1" FOR COULOMB CORRECTION AND "0" FOR NONE.',8X,'ECIS1036'INPB-375
     2/4X,'ONLY VALUES FOR J SMALLER THAN OR EQUAL TO I ARE TAKEN INTO AINPB-376
     3CCOUNT.ECIS1037'/9X,'THERE ARE NCOLL SUCH CARDS.',36X,'ECIS1038'/7INPB-377
     42X,'ECIS1039'/72X,'ECIS1040'/'CARDS READ IN SUBROUTINE CALX',43X,'INPB-378
     5ECIS1041'/'*****************************',43X,'ECIS1042'/' ONLY IFINPB-379
     6 LO(31)=.TRUE., OTHERWISE GO TO "CARDS READ IN SUBROUTINE OBSE".ECINPB-380
     7IS1043'/72X,'ECIS1044'/'CHI2 CONDITIONS',25X,'FORMAT (4I5,2F10.5)'INPB-381
     8,13X,'ECIS1045'/'***************',57X,'ECIS1046'/7X,'1- 5   NCOLR INPB-382
     9 NUMBER OF ANGULAR DISTRIBUTIONS. IF SOME OF THEM   ECIS1047'/21X,INPB-383
     A'ARE SUMS ON SEVERAL LEVELS, THEY ACCOUNT FOR THEIR ECIS1048'/21X,INPB-384
     B'NUMBER OF LEVELS IN NCOLR.',25X,'ECIS1049'/7X,'6-10   NREC   NUMBINPB-385
     CER OF PARAMETERS IN SEARCH.',20X,'ECIS1050'/6X,'11-15   NFIT   NUMINPB-386
     DBER OF FUNCTIONS KEPT IN THE SEARCH BEYOND THE  ECIS1051'/21X,'MININPB-387
     EIMUM NUMBER WHICH IS NREC+1 .',19X,'ECIS1052'/6X,'16-20   NESSAI MINPB-388
     FAXIMUM NUMBER OF EVALUATIONS. (DEFAULT VALUE 100) ECIS1053'/21X,'TINPB-389
     GHIS VALUE IS NOT USED WHEN LO(34)=.TRUE..',9X,'ECIS1054'/6X,'21-30INPB-390
     H   ECH',4X,'SEARCH SCALE. (DEFAULT VALUE 20.).',17X,'ECIS1055'/21XINPB-391
     I,'IN THE PRELIMINARY RUNS, VARIABLES ARE CHANGED BY  ECIS1056'/21XINPB-392
     J,'THE PRODUCT OF THIS NUMBER WITH THEIR ACCURACY. IN ECIS1057'/21XINPB-393
     K,'THE OTHERS RUNS, THE CHANGE OF ANY VARIABLE IS',5X,'ECIS1058')  INPB-394
      WRITE (MW,1049)                                                   INPB-395
 1049 FORMAT (21X,'LIMITED BY TWICE THIS VALUE.',23X,'ECIS1059'/6X,'31-4INPB-396
     10   RAP',4X,'RATIO OF INCREASE FOR THE SEARCH SCALE AFTER A RUN ECINPB-397
     2IS1060'/21X,'FOR WHICH THE CHI2 DECREASED. (DEFAULT VALUE 1.)   ECINPB-398
     3IS1061'/21X,'THE VALUE OF ECH IS THE PRODUCT BY RAP OF THE LAST ECINPB-399
     4IS1062'/21X,'MAXIMUM CHANGE OF PARAMETER WHICH GAVE A LOWER CHI2ECINPB-400
     5IS1063'/21X,'THE VALUE 1 LEADS SAFELY TO THE MINIMUM. A VALUE   ECINPB-401
     6IS1064'/21X,'LARGER THAN 1. LEADS QUICKER TOWARDS THE MINIMUM.  ECINPB-402
     7IS1065'/21X,'A VALUE LESS THAN 1. IS REPLACED BY 1.',13X,'ECIS1066INPB-403
     8'/72X,'ECIS1067'/72X,'ECIS1068'/'CARDS READ IN SUBROUTINE LECD',43INPB-404
     9X,'ECIS1069'/'*****************************',43X,'ECIS1070'/' ONLYINPB-405
     A IF NCOLR IS NOT 0, OTHERWISE GO TO "CARDS READ IN SUBROUTINE OBSEINPB-406
     B"ECIS1071'/' THE ANGULAR DISTRIBUTIONS CAN BE READ IN ANY ORDER.',INPB-407
     C20X,'ECIS1072'/72X,'ECIS1073'/'FOR EACH ANGULAR DISTRIBUTION',43X,INPB-408
     D'ECIS1074'/'*****************************',43X,'ECIS1075'/72X,'ECIINPB-409
     ES1076'/'IDENTIFICATION',26X,'FORMAT (L1,I1,I3,2I5,5X,3F10.5) ECIS1INPB-410
     F077'/'**************',58X,'ECIS1078'/10X,'1   LX LOGICAL. IF LX=.TINPB-411
     GRUE. THE EXPERIMENTAL ERRORS ARE',6X,'ECIS1079'/14X,'PERCENTAGES. INPB-412
     HLX IS SET .FALSE. IF THE OBSERVABLE',10X,'ECIS1080'/14X,'IDENTIFICINPB-413
     IATION IS NOT 0, 1 OR 19.',25X,'ECIS1081'/10X,'2   1 IF THE ANGLES INPB-414
     JARE IN THE LABORATORY SYSTEM, 0 OTHERWISE.ECIS1082'/7X,'3- 5   NT INPB-415
     K  NUMBER OF ANGLES.',36X,'ECIS1083')                              INPB-416
      WRITE (MW,1050)                                                   INPB-417
 1050 FORMAT (7X,'6-10   NUMBER OF THE NUCLEAR STATE.',30X,'ECIS1084'/6XINPB-418
     1,'11-15   OBSERVABLE IDENTIFICATION. (SEE COMMENTS ON "OBSERVABLE INPB-419
     2  ECIS1085'/14X,'IDENTIFICATION" IN "CARDS READ IN SUBROUTINE DEPHINPB-420
     3").',6X,'ECIS1086'/6X,'21-30   WEIGHT OF THIS OBSERVABLE IN CHI2. INPB-421
     4(DEFAULT VALUE 1.)',5X,'ECIS1087'/''/6X,'31-40   EXPERIMENTAL NORINPB-422
     5MALISATION OF DATA. (DEFAULT VALUE 1.)',4X,'ECIS1088'/6X,'41-50   INPB-423
     6ERROR ON EXPERIMENTAL NORMALISATION. (IF 0., THE',10X,'ECIS1089'/1INPB-424
     74X,'NORMALISATION IS FIXED).',34X,'ECIS1090'/16X,'THE EXPERIMENTALINPB-425
     8 VALUES AND THEIR ERRORS ARE DIVIDED BY ECIS1091'/14X,'THE "RENORMINPB-426
     9ALISATION PARAMETER". IF THE NORMALISATION IS  ECIS1092'/14X,'FIXEINPB-427
     AD, THIS PARAMETER IS THE "EXPERIMENTAL NORMALISATION".ECIS1093'/14INPB-428
     BX,'IF THE NORMALISATION IS NOT FIXED, THE SQUARE OF THE',6X,'ECIS1INPB-429
     C094'/14X,'DIFFERENCE BETWEEN THE "EXPERIMENTAL NORMALISATION" AND INPB-430
     D  ECIS1095'/14X,'THIS PARAMETER DIVIDED BY THE "ERROR ON EXPERIMENINPB-431
     ETAL',6X,'ECIS1096'/14X,'NORMALISATION" IS ADDED TO THE CHI2 FOR THINPB-432
     FIS OBSERVABLE   ECIS1097'/14X,'FOLLOWING THE DEFINITION OF THE CHIINPB-433
     G2. THE "CALCULATED',5X,'ECIS1098'/14X,'NORMALISATION" IS THE VALUEINPB-434
     H OF THE "RENORMALISATION',7X,'ECIS1099'/14X,'PARAMETER" WHICH MINIINPB-435
     IMISES THE CHI2. EXPERIMENTAL VALUES  ECIS1100'/14X,'AND ERRORS AREINPB-436
     J DIVIDED BY IT.',29X,'ECIS1101'/16X,'IF FOR TWO SUCCESSIVE ANGULARINPB-437
     K DISTRIBUTIONS, BOTH',7X,'ECIS1102')                              INPB-438
      WRITE (MW,1051)                                                   INPB-439
 1051 FORMAT (14X,'CROSS-SECTIONS OR POLARISATIONS, THE "ERRORS ON',11X,INPB-440
     1'ECIS1103'/14X,'EXPERIMENTAL NORMALISATIONS" ARE NON-0 AND THE SAMINPB-441
     2E AND   ECIS1104'/14X,'THE TWO "EXPERIMENTAL NORMALISATION" ARE IDINPB-442
     3ENTICAL, THE   ECIS1105'/14X,'RENORMALISATION PARAMETERS ARE THE SINPB-443
     4AME FOR THESE TWO',5X,'ECIS1106'/14X,'ANGULAR DISTRIBUTIONS AND ONINPB-444
     5E VALUE IS ADDED TO THE CHI2  ECIS1107'/14X,'FOR EACH ONE.',45X,'EINPB-445
     6CIS1108'/'  NOTE:  IF NT=0, THE ANGULAR DISTRIBUTION DESCRIBED HERINPB-446
     7E IS NOT',8X,'ECIS1109'/'  ****  EXPERIMENTALLY SEPARATED FROM THEINPB-447
     8 FOLLOWING ONE. IT CANNOT',6X,'ECIS1110'/8X,'HAPPEN FOR THE LAST AINPB-448
     9NGULAR DISTRIBUTION AND THE OBSERVABLES',4X,'ECIS1111'/8X,'MUST BEINPB-449
     A OF THE SAME KIND (IF NOT, THE PROGRAM STOPS).',11X,'ECIS1112'/8X,INPB-450
     B'ANGULAR DISTRIBUTION IS ATTRIBUTED TO THE LEVEL READ WITHOUT',4X,INPB-451
     C'ECIS1113'/8X,'NT=0 WHICH CAN BE ANY OF THEM.',34X,'ECIS1114'/12X,INPB-452
     D'THE PROGRAM STOPS ALSO IF THE CHANNEL NUMBER IS TOO LARGE   ECIS1INPB-453
     E115'/8X,'OR IF THE OBSERVABLE IDENTIFICATION IS LARGER THAN 19.',1INPB-454
     F0X,'ECIS1116'/72X,'ECIS1117'/'DATA CARD FOR EACH ANGLE',16X,'FORMAINPB-455
     GT (6F10.5)',17X,'ECIS1118'/'************************',48X,'ECIS111INPB-456
     H9'/7X,'1-10   ANGLE IN DEGREES.',41X,'ECIS1120'/6X,'11-20   EXPERIINPB-457
     IMENTAL VALUE.',39X,'ECIS1121'/6X,'21-30   EXPERIMENTAL ERROR.',39XINPB-458
     J,'ECIS1122'/6X,'31-40   WIDTH OF DETECTOR. (IF NON 0.,THREE CALCULINPB-459
     KATIONS ARE DONE ECIS1123')                                        INPB-460
      WRITE (MW,1052)                                                   INPB-461
 1052 FORMAT (14X,'AT THE EXPERIMENTAL ANGLE AND AT PLUS AND MINUS THIS'INPB-462
     1,6X,'ECIS1124'/14X,'WIDTH, THE CALCULATED VALUE WILL BE THE MEAN VINPB-463
     2ALUE).',6X,'ECIS1125'/6X,'41-50   ANGULAR ERROR. (IF NON 0. AND THINPB-464
     3E WIDTH OF DETECTOR NON 0.ECIS1126'/14X,'THE EXPERIMENTAL ERROR ISINPB-465
     4 INCREASED TO TAKE INTO ACCOUNT  ECIS1127'/14X,'THE SLOPE OF THE CINPB-466
     5ALCULATED CURVE).',23X,'ECIS1128'/'  NOTE:  IF THE OBSERVABLE IDENINPB-467
     6TIFICATION IS 19, THE SET OF EXPERIMENTALECIS1129'/'  ****  VALUESINPB-468
     7 ARE TOTAL CROSS-SECTIONS OF WHICH THE CHANNEL IS READ IN ECIS1130INPB-469
     8'/8X,'FLOATING VALUE INSTEAD OF THE ANGLE. FOR CHANNEL 0., IT IS TINPB-470
     9HE  ECIS1131'/8X,'TOTAL REACTION CROSS-SECTION, NOT TAKING INTO ACINPB-471
     ACOUNT THE',7X,'ECIS1132'/8X,'COULOMB SCATTERING. FOR CHANNEL -1., INPB-472
     BIT IS THE TOTAL',12X,'ECIS1133'/8X,'CROSS-SECTION AS DEFINED FOR NINPB-473
     CEUTRONS. WEIGHT AND EXPERIMENTAL  ECIS1134'/8X,'NORMALISATION ARE INPB-474
     DTAKEN INTO ACCOUNT. FOR COMPOUND NUCLEUS,',5X,'ECIS1135'/8X,'UNCOUINPB-475
     EPLED LEVELS, CONTINUA, FISSION AND GAMMA CROSS-SECTIONS',4X,'ECIS1INPB-476
     F136'/8X,'FOLLOW THE COUPLED STATES.',38X,'ECIS1137'/72X,'ECIS1138'INPB-477
     G/72X,'ECIS1139'/'CARDS READ IN SUBROUTINE CALX',43X,'ECIS1140'/'**INPB-478
     H***************************',43X,'ECIS1141'/' ONLY IF LO(31)=.TRUEINPB-479
     I., OTHERWISE GO TO "CARDS READ IN SUBROUTINE OBSE".ECIS1142'/72X,'INPB-480
     JECIS1143'/'SEARCH ACCURACIES',23X,'FORMAT (7F10.3)',17X,'ECIS1144'INPB-481
     K/'*****************',55X,'ECIS1145')                              INPB-482
      WRITE (MW,1053)                                                   INPB-483
 1053 FORMAT (' ONLY IF LO(32)=.TRUE. AND NEITHER NCOLR AND NREC IS 0, OINPB-484
     1THERWISE GO TO ECIS1146'/' "CARDS READ IN SUBROUTINE OBSE".',39X,'INPB-485
     2ECIS1147'/7X,'1-10   SEARCH ACCURACY FOR THE FIRST VARIABLE.',19X,INPB-486
     3'ECIS1148'/6X,'11-20   SEARCH ACCURACY FOR THE SECOND VARIABLE.',1INPB-487
     48X,'ECIS1149'/6X,'21-30   SEARCH ACCURACY FOR THE THIRD VARIABLE.'INPB-488
     5,19X,'ECIS1150'/6X,'31-40   ....................',38X,'ECIS1151'/'INPB-489
     6'/14X,'UP TO NREC VALUES.',40X,'ECIS1152'/6X,'THE SEARCH ACCURACIINPB-490
     7ES CANNOT BE 0..THERE IS NO DEFAULT VALUE.',5X,'ECIS1153'/'  THEY INPB-491
     8REFER TO VALUES USED IN THE PROGRAM AS REAL RADII OR',13X,'ECIS115INPB-492
     94'/'  DEFORMATIONS CHANGED FOR HEAVY IONS.',34X,'ECIS1155'/72X,'ECINPB-493
     AIS1156'/'INDICES OF VARIABLES',20X,'FORMAT (14I5)',19X,'ECIS1157'/INPB-494
     B'********************',52X,'ECIS1158'/7X,'1- 5   INDEX OF THE FIRSINPB-495
     CT VARIABLE.',30X,'ECIS1159'/7X,'6-10   INDEX OF THE SECOND VARIABLINPB-496
     DE.',29X,'ECIS1160'/6X,'11-15   INDEX OF THE THIRD VARIABLE.',30X,'INPB-497
     EECIS1161'/6X,'16-20   ....................',38X,'ECIS1162'/14X,'UPINPB-498
     F TO NREC VALUES.',40X,'ECIS1163'/72X,'ECIS1164'/4X,'INDEX SPECIFICINPB-499
     GATIONS:',47X,'ECIS1165'/4X,'*********************',47X,'ECIS1166'/INPB-500
     H7X,'1-1000   OPTICAL MODEL AND FOLDING PARAMETERS VAL(I).(SEE, ABOINPB-501
     IVE,ECIS1167'/16X,'OPTICAL POTENTIAL PARAMETERS). POSSIBLE VALUES 1INPB-502
     J TO',5X,'ECIS1168'/16X,'42*NPP. PARAMETERS OF EXTERNAL FORM FACTORINPB-503
     KS IN THE ORDERECIS1169')                                          INPB-504
      WRITE (MW,1054)                                                   INPB-505
 1054 FORMAT (16X,'DEFINED WHEN THEY ARE READ. ONLY FLOATING VALUES WHICINPB-506
     1H  ECIS1170'/16X,'ARE NOT POTENTIALS READ BY POINT CAN BE IN SEARCINPB-507
     2H.',6X,'ECIS1171'/16X,'POSSIBLE VALUES: 1 TO 1000. ABOVE, ADD 9000INPB-508
     3.',12X,'ECIS1172'/16X,'CHOOSING SEARCH ACCURACIES, NOTE THAT REDUCINPB-509
     4ED RADII ARE ECIS1173'/16X,'NOT USED BUT ONLY RADII. COULOMB CHARGINPB-510
     5ES ARE EXCLUDED.  ECIS1174'/4X,'1001-2000   DEFORMATIONS FOR A GIVINPB-511
     6EN POTENTIAL. POSSIBLE VALUES 1001ECIS1175'/16X,'TO 1008.(NOT THE INPB-512
     7ANGLES OF ASYMMETRIC ROTATIONAL MODEL) ECIS1176'/4X,'2001-3000   DINPB-513
     8EFORMATIONS FOR A GIVEN MULTIPOLE. POSSIBLE VALUES 2001ECIS1177'/1INPB-514
     96X,'TO 2000+NBET WHERE NBET IS THE TOTAL NUMBER OF PHONONS  ECIS11INPB-515
     A78'/16X,'AND DEFORMATIONS AS LISTED IN THE OUTPUT.',15X,'ECIS1179'INPB-516
     B/4X,'3001-4000   INDIVIDUAL DEFORMATION. (THE UNIT OF THE INDEX ISINPB-517
     C THE   ECIS1180'/16X,'POTENTIAL, THE TENTH IS THE DEFORMATION). TOINPB-518
     D SIMPLIFY   ECIS1181'/16X,'NOTATIONS, POSSIBLE VALUE ARE 3001 TO 3INPB-519
     E000+10*NBET WITH ECIS1182'/16X,'NBET DEFINED ABOVE. VALUES 3XX9 ANINPB-520
     FD 3XX0 ARE EXCLUDED.  ECIS1183'/16X,'NOTE THAT DEFORMATION LENGTHSINPB-521
     G ARE USED IN THE SEARCH IF ECIS1184'/16X,'LO(6)=.TRUE..',43X,'ECISINPB-522
     H1185'/4X,'4001-5000   NUCLEAR MODEL PARAMETERS. (IN THE ORDER OF IINPB-523
     INPUT).',6X,'ECIS1186'/4X,'5001-6000   REDUCED NUCLEAR MATRIX ELEMEINPB-524
     JNTS. (ORDER OF INPUT IF THEYECIS1187'/16X,'ARE READ ON CARDS, OR OINPB-525
     KRDER OF COMPUTATION AS LISTED).  ECIS1188')                       INPB-526
      WRITE (MW,1055)                                                   INPB-527
 1055 FORMAT (4X,'6001-7000   SPIN-ORBIT PARAMETRISATION, HAUSER-FESHBACINPB-528
     1H CORRECTIONS.ECIS1189'/16X,'AND COMPOUND NUCLEUS PARAMETERS. POSSINPB-529
     2IBLE VALUES ARE:   ECIS1190'/16X,'6001-6006 FOR SPIN-ORBIT PARAMETINPB-530
     3RISATION,',15X,'ECIS1191'/16X,'6007-6011 FOR HAUSER-FESHBACH CORREINPB-531
     4CTIONS,',14X,'ECIS1192'/16X,'6012-6016 FOR GIANT DIPOLE RESONANCE INPB-532
     5PARAMETERS,',8X,'ECIS1193'/16X,'(IN A TEST, 6015 WAS USELESS FOR LINPB-533
     6O(87)=.FALSE., 6014   ECIS1194'/16X,'AND 6015 IF LO(87=.TRUE.)',31INPB-534
     7X,'ECIS1195'/16X,'6017-6016+6*NCONS FOR LEVEL DENSITY PARAMETERS IINPB-535
     8N ORDER ECIS1196'/16X,'GIVEN BY SCN(6,NCONS), SKIPPING THE CHARGE.INPB-536
     9 ONLY VALUES ECIS1197'/16X,'PRINTED AS USED VALUES CAN BE CHANGED.INPB-537
     A',18X,'ECIS1198'/16X,'(IN A TEST, SCN(5,I) WAS USELESS FOR GAMMA, INPB-538
     BSCN(1,I),   ECIS1199'/16X,'SCN(2,I) AND SCN(6,I) FOR A CONTINUUM)'INPB-539
     C,18X,'ECIS1200'/16X,'6016+6*NCONS-6016+6*NCONS+NRD GAMMA TRANSMISSINPB-540
     DION COEFF. ECIS1201'/16X,'6016+6*NCONS+NRD-6016+6*NCONS+NRD+2*NFISINPB-541
     ES FISSION',7X,'ECIS1202'/16X,'TRANSMISSION COEFFICIENTS.',30X,'ECIINPB-542
     FS1203'/4X,'7001-8000   DISPERSION PARAMETER FROM PIP(5,*) TO PIP(1INPB-543
     G7,*) WITHOUT ECIS1204'/16X,'POSSIBILITY TO CHANGE THE DESCRIPTION INPB-544
     HINDUCED BY THE',4X,'ECIS1205'/16X,'INTEGER VALUES IPP(*,1,*), IPP(INPB-545
     I*,2,*), IPI(*,3,*) AND   ECIS1206'/16X,'ENERGY REFERENCE PIP(4,*).INPB-546
     J POSSIBLE VALUES FROM 7001 TO ECIS1207'/16X,'7000+13*NPP.',44X,'ECINPB-547
     KIS1208')                                                          INPB-548
      WRITE (MW,1056)                                                   INPB-549
 1056 FORMAT (3X,'10001-99999  TO CONTINUE 1-1000 WHEN THERE ARE MORE THINPB-550
     1AN 1000 VALUES ECIS1209'/16X,'WITH EXTERNAL FORM FACTORS. USE THE INPB-551
     2NUMBER OF THE',7X,'ECIS1210'/16X,'LISTING INCREASED BY 9000.',30X,INPB-552
     3'ECIS1211'/'  NOTE:  ANY NEGATIVE NUMBER -K IN THE CARD ABOVE MEANINPB-553
     4S THAT K VARIABLESECIS1212'/'  ****  WILL BE KEPT PROPORTIONAL IN INPB-554
     5THE SEARCH. THIS VALUE IS REPLACED ECIS1213'/8X,'BY -*ADDRESS WHERINPB-555
     6E K FOLLOWED BY K INDICES OF PARAMETERS IS',5X,'ECIS1214'/8X,'STORINPB-556
     7ED',58X,'ECIS1215'/''/'LINKS BETWEEN VARIABLES',17X,'FORMAT (14I5INPB-557
     8)',19X,'ECIS1216'/'***********************',49X,'ECIS1217'/4X,'FORINPB-558
     9 EVERY NEGATIVE VALUE -K IN THE PRECEDING CARD:',18X,'ECIS1218'/7XINPB-559
     A,'1- 5   INDEX OF THE FIRST VARIABLE.',30X,'ECIS1219'/7X,'6-10   IINPB-560
     BNDEX OF THE SECOND VARIABLE.',29X,'ECIS1220'/6X,'11-15   INDEX OF INPB-561
     CTHE THIRD VARIABLE.',30X,'ECIS1221'/6X,'16-20   ..................INPB-562
     D',40X,'ECIS1222'/14X,'UP TO K INDICES.',42X,'ECIS1223'/72X,'ECIS12INPB-563
     E24'/72X,'ECIS1225'/'CARDS READ IN SUBROUTINE OBSE',43X,'ECIS1226'/INPB-564
     F'*****************************',43X,'ECIS1227'/' ONLY IF THERE IS INPB-565
     GANY NON STANDARD OBSERVABLE (IDENTIFIED BY A NEGATIVE ECIS1228'/' INPB-566
     HNUMBER), OTHERWISE GO TO "CARDS READ IN SUBROUTINE REDM".',14X,'ECINPB-567
     IIS1229'/72X,'ECIS1230'/'FOR EACH NON STANDARD OBSERVABLE',40X,'ECIINPB-568
     JS1231'/'********************************',40X,'ECIS1232'/72X,'ECISINPB-569
     K1233')                                                            INPB-570
      WRITE (MW,1057)                                                   INPB-571
 1057 FORMAT ('DEFINITION AND NAME',21X,'FORMAT (2L1,I1,I2,I5,5A4)',7X,'INPB-572
     1ECIS1234'/'*******************',53X,'ECIS1235'/10X,'1   LT1  "T" FINPB-573
     2OR AN OBSERVABLE DEFINED WITH AN AXIS',11X,'ECIS1236'/19X,'PERPENDINPB-574
     3ICULAR TO THE REACTION PLANE. THE DESCRIPTION ECIS1237'/19X,'IS CHINPB-575
     4ANGED BY A ROTATION R(PI/2,PI/2,PI/2) TO THE',4X,'ECIS1238'/19X,'DINPB-576
     5EFINITION WITH RESPECT TO THE DIRECTION OF PARTICLE ECIS1239'/19X,INPB-577
     6'(HELICITY). USE A BLANK FOR THE USUAL HELICITY',7X,'ECIS1240'/19XINPB-578
     7,'DESCRIPTION.',41X,'ECIS1241'/10X,'2   LT2  "T" IF THE OBSERVABLEINPB-579
     8 IS NOT COMPLETELY DEFINED BY   ECIS1242'/19X,'TENSORS. SEE NOTE BINPB-580
     9ELOW "QUANTUM NUMBERS".',11X,'ECIS1243'/10X,'3   BLANK OR 0 FOR OBINPB-581
     ASERVABLE IN THE CENTRE OF MASS SYSTEM.   ECIS1244'/14X,'1',10X,'FOINPB-582
     BR OBSERVABLE IN THE LABORATORY SYSTEM.',7X,'ECIS1245'/14X,'2',10X,INPB-583
     C'FOR OBSERVABLE DEFINED WITH RESPECT TO THE',5X,'ECIS1246'/30X,'ININPB-584
     DCIDENT BEAM.',28X,'ECIS1247'/7X,'4- 5   KX   POSITIVE NUMBER, IDENINPB-585
     ETIFICATION OF THE OBSERVABLE',4X,'ECIS1248'/19X,'READ WITH -KX.',3INPB-586
     F9X,'ECIS1249'/7X,'6-10   K',4X,'NUMBER OF COMPONENTS OF THE DESCRIINPB-587
     GPTION.',13X,'ECIS1250'/6X,'11-30   NAME OF THE OBSERVABLE WHICH WIINPB-588
     HLL BE USED IN THE OUTPUT.  ECIS1251'/72X,'ECIS1252'/'QUANTUM NUMBEINPB-589
     IRS',25X,'FORMAT (8I5)',20X,'ECIS1253'/'***************',57X,'ECIS1INPB-590
     J254'/7X,'1- 5   TENSOR ORDER OF THE INCOMING PARTICLE.',20X,'ECIS1INPB-591
     K255'/7X,'6-10   RELATED MAGNETIC QUANTUM NUMBER.',26X,'ECIS1256') INPB-592
      WRITE (MW,1058)                                                   INPB-593
 1058 FORMAT (6X,'11-15   TENSOR ORDER OF THE INITIAL NUCLEUS.',22X,'ECIINPB-594
     1S1257'/6X,'16-20   RELATED MAGNETIC QUANTUM NUMBER.',26X,'ECIS1258INPB-595
     2'/6X,'21-25   TENSOR ORDER OF THE OUTGOING PARTICLE.',20X,'ECIS125INPB-596
     39'/6X,'26-30   RELATED QUANTUM NUMBER.',35X,'ECIS1260'/6X,'31-35  INPB-597
     4 TENSOR ORDER OF THE FINAL NUCLEUS.',24X,'ECIS1261'/6X,'36-40   REINPB-598
     5LATED QUANTUM NUMBER.',35X,'ECIS1262'/4X,'THERE ARE K SUCH CARDS.'INPB-599
     6,45X,'ECIS1263'/'  NOTE:  IF LT2=.TRUE., SOME COUPLES (TENSOR ORDEINPB-600
     7R, MAGNETIC QUANTUM',4X,'ECIS1264'/'  ****  NUMBER) CAN BE REPLACEINPB-601
     8D BY NON TENSOR NOTATION (MI, MF). IN THISECIS1265'/8X,'CASE, USE INPB-602
     9(MI-S-1) AND (MF-S-1) WHERE S IS THE SPIN OF PARTICLE ECIS1266'/8XINPB-603
     A,'OR TARGET.',54X,'ECIS1267'/72X,'ECIS1268'/'COEFFICIENTS OF COMPOINPB-604
     BNENTS',14X,'FORMAT (6F10.5)',17X,'ECIS1269'/'*********************INPB-605
     C*****',46X,'ECIS1270'/7X,'1-10   COEFFICIENT OF THE FIRST COMPONENINPB-606
     DT.',23X,'ECIS1271'/6X,'11-20   COEFFICIENT OF THE SECOND COMPONENTINPB-607
     E.',22X,'ECIS1272'/6X,'21-30   ...................',39X,'ECIS1273'/INPB-608
     F14X,'UP TO K VALUES.',43X,'ECIS1274'/72X,'ECIS1275'/'IMAGINARY PARINPB-609
     GT OF COEFFICIENTS',10X,'FORMAT (6F10.5)',17X,'ECIS1276'/'*********INPB-610
     H*********************',42X,'ECIS1277'/' ONLY IF LT1=.TRUE. OR LT2=INPB-611
     I.TRUE., OTHERWISE GO TO NEXT OBSERVABLE.',5X,'ECIS1278'/7X,'1-10  INPB-612
     J IMAGINARY PART FOR THE FIRST COMPONENT.',19X,'ECIS1279'/''/6X,'1INPB-613
     K1-20   IMAGINARY PART FOR THE SECOND COMPONENT.',18X,'ECIS1280')  INPB-614
      WRITE (MW,1059)                                                   INPB-615
 1059 FORMAT (6X,'21-30   ....................',38X,'ECIS1281'/14X,'UP TINPB-616
     1O K VALUES.',43X,'ECIS1282'/'  NOTE:  THE QUANTUM NUMBERS ARE CHECINPB-617
     2KED AND ERRORS CAN STOP THE',8X,'ECIS1283'/'  ****  PROGRAM (TOO LINPB-618
     3ARGE MAGNETIC QUANTUM NUMBERS, NEGATIVE TENSOR',4X,'ECIS1284'/8X,'INPB-619
     4ORDER, ODD SUM OF MAGNETIC QUANTUM NUMBERS FOR OBSERVABLE',7X,'ECIINPB-620
     5S1285'/8X,'DEFINED WITH THE AXIS PERPENDICULAR TO THE REACTION PLAINPB-621
     6NE).',5X,'ECIS1286'/9X,'THE OBSERVABLES CAN BE READ IN ANY ORDER.'INPB-622
     7,22X,'ECIS1287'/9X,'POLARISATION OF THE TARGET IS DESCRIBED IN THEINPB-623
     8 SYSTEM OF THE   ECIS1288'/8X,'PARTICLE.',55X,'ECIS1289'/72X,'ECISINPB-624
     91290'/72X,'ECIS1291'/'CARDS READ IN SUBROUTINE REDM',43X,'ECIS1292INPB-625
     A'/'******************************',42X,'ECIS1293'/' IF LO(7)=.TRUEINPB-626
     B. OR LO(15)=.TRUE.. OTHERWISE GO TO "CARDS READ IN',7X,'ECIS1294'/INPB-627
     C' SUBROUTINE EXTP".',54X,'ECIS1295'/72X,'ECIS1296'/6X,'IN THE SUBRINPB-628
     DOUTINE REDM, THERE IS THE FOLLOWING DO LOOP:',11X,'ECIS1297'/10X,'INPB-629
     EDO 16 I1=1,NCOLL',46X,'ECIS1298'/10X,'DO 15 I2=I1,NCOLL',45X,'ECISINPB-630
     F1299'/10X,'.........',53X,'ECIS1300'/7X,'15 CONTINUE',54X,'ECIS130INPB-631
     G1'/7X,'16 CONTINUE',54X,'ECIS1302'/6X,'INSIDE WHICH MUST BE READ:'INPB-632
     H,40X,'ECIS1303'/72X,'ECIS1304'/'LOOP CONTROL AND NUMBER CARD',12X,INPB-633
     I'FORMAT (3I5)',20X,'ECIS1305'/'****************************',44X,'INPB-634
     JECIS1306'/7X,'1- 5   J1 WHICH MUST BE EQUAL TO I1. (IF NOT THE RUNINPB-635
     K IS STOPPED).ECIS1307')                                           INPB-636
      WRITE (MW,1060)                                                   INPB-637
 1060 FORMAT (7X,'6-10   J2 WHICH MUST BE EQUAL TO I2. (IF NOT THE RUN IINPB-638
     1S STOPPED).ECIS1308'/6X,'11-15   K  NUMBER OF REDUCED NUCLEAR MATRINPB-639
     2IX ELEMENTS.',13X,'ECIS1309'/72X,'ECIS1310'/'REDUCED NUCLEAR MATRIINPB-640
     3X ELEMENTS',9X,'FORMAT (4I5,F20.12)',13X,'ECIS1311'/'*************INPB-641
     4******************',41X,'ECIS1312'/'IF K IS NOT 0:',58X,'ECIS1313'INPB-642
     5/7X,'1- 5   FORM FACTOR IDENTIFICATION.',31X,'ECIS1314'/7X,'6-10  INPB-643
     6 MULTIPOLARITY. (IF TRIANGULAR RELATION  OR PARITY IS',6X,'ECIS131INPB-644
     75'/18X,'TRANSGRESSED THE RUN IS STOPPED). ENTER L FOR A',7X,'ECIS1INPB-645
     8316'/18X,'MAGNETIC MULTIPOLE TRANSITION BM(L-1).',16X,'ECIS1317'/6INPB-646
     9X,'11-15   2*S WHERE S IS THE TRANSFER OF SPIN. S CAN BE NOT 0 EVEINPB-647
     AN  ECIS1318'/18X,'IF LO(7)=.FALSE. (IF LO(7)=.TRUE. THE RUN IS STOINPB-648
     BPPED  ECIS1319'/18X,'WHEN TRIANGULAR RELATION IS NOT FULFILLED).',INPB-649
     C11X,'ECIS1320'/14X,'INDICATION FOR EXISTENCE OF MAGNETIC MULTIPOLEINPB-650
     D COULOMB',4X,'ECIS1321'/18X,'FORM FACTOR FOR THE TARGET, WITH S=0:INPB-651
     E ENTER "-1".',5X,'ECIS1322'/18X,'THIS FORM FACTOR INCLUDES NO CENTINPB-652
     FRAL AND NO',11X,'ECIS1323'/18X,'SPIN-ORBIT CONTRIBUTION.',30X,'ECIINPB-653
     GS1324'/6X,'16-20   2*J WHERE J IS THE TRANSFER OF TOTAL SPIN IF THINPB-654
     HE VALUE',4X,'ECIS1325'/18X,'GIVEN FOR 2*S IS NOT "0" OR "-1". IN TINPB-655
     IHIS CASE THE',4X,'ECIS1326'/18X,'CALCULATION IS STOPPED IF THERE IINPB-656
     JS NOT A TRIANGULAR   ECIS1327'/18X,'RELATION BETWEEN L, S AND J.',INPB-657
     K26X,'ECIS1328')                                                   INPB-658
      WRITE (MW,1061)                                                   INPB-659
 1061 FORMAT (14X,'INDICATION FOR EXISTENCE OF AN ASSOCIATED SPIN-ORBIT INPB-660
     1FORM ECIS1329'/18X,'FACTOR WHEN 2*S IS "0": ENTER "1" IF THERE IS INPB-661
     2ONE,',4X,'ECIS1330'/18X,'"0" OR A BLANK IF THERE IS NONE.',22X,'ECINPB-662
     3IS1331'/6X,'21-40   VALUE. THE RATIO BETWEEN A MAGNETIC MULTIPOLE INPB-663
     4COULOMB',5X,'ECIS1332'/18X,'EXCITATION BM(L-1) AND AN ELECTRIC ONEINPB-664
     5 BE(L) IS',7X,'ECIS1333'/18X,'SQRT(BM(L-1)/BE(L)) (SQRT(.01106*BM(INPB-665
     6L-1)/BE(L)) IF',4X,'ECIS1334'/18X,'BM(L-1) IS EXPRESSED IN NUCLEARINPB-666
     7 MAGNETONS SQUARES.',4X,'ECIS1335'/8X,'THERE ARE K SUCH CARDS.',41INPB-667
     8X,'ECIS1336'/72X,'ECIS1337'/4X,'FORM FACTOR IDENTIFICATION',42X,'EINPB-668
     9CIS1338'/4X,'**************************',42X,'ECIS1339'/6X,'FOR ANINPB-669
     AHARMONIC VIBRATIONAL MODEL: THE ORDER OF DERIVATIVE.',8X,'ECIS1340INPB-670
     B'/13X,'(FROM 0 TO 3).',45X,'ECIS1341'/6X,'FOR HARMONIC VIBRATIONALINPB-671
     C MODEL:',35X,'ECIS1342'/13X,'FIRST ORDER:  K1, NUMBER OF THE PHONOINPB-672
     DN IS ORDER OF INPUT.  ECIS1343'/''/13X,'SECOND ORDER: K1+K2*(NBT1INPB-673
     E+1)  WHERE K1 AND K2 ARE THE',6X,'ECIS1344'/17X,'NUMBER OF THE PHOINPB-674
     FNONS IN THE ORDER OF INPUT, WITH K2   ECIS1345'/17X,'LARGER THAN KINPB-675
     G1 AND NBT1 THE TOTAL NUMBER OF PHONONS.   ECIS1346'/72X,'ECIS1347'INPB-676
     H/6X,'FOR SYMMETRIC ROTATIONAL MODEL: 1+L WHERE L IS THE MULTIPOLARINPB-677
     IITY  ECIS1348'/13X,'MULTIPLIED BY 1000 PLUS THE IDENTIFICATION OF INPB-678
     JTHE',10X,'ECIS1349'/13X,'VIBRATIONAL BAND AS IN HARMONIC VIBRATIONINPB-679
     KAL MODEL.',9X,'ECIS1350')                                         INPB-680
      RETURN                                                            INPB-681
      END                                                               INPB-682
C 17/11/12                                                      ECIS12  INPC-000
      SUBROUTINE INPC                                                   INPC-001
      COMMON /INOUT/ MR,MW,MS                                           INPC-002
      WRITE (MW,1062)                                                   INPC-003
 1062 FORMAT (13X,'A L=0 OR L=1 VIBRATION TERM GENERATE A MONOPOLE OR DIINPC-004
     1POLE  ECIS1351'/13X,'CORRECTION TERM.',43X,'ECIS1352'/6X,'FOR ASYMINPC-005
     2METRIC ROTATIONAL MODEL: DEFINED AS 1000* THE "ORDER OF   ECIS1353INPC-006
     3'/13X,'DEFORMATION". (SEE "DEFORMATIONS OF ROTATIONAL MODELS").   INPC-007
     4ECIS1354'/72X,'ECIS1355'/6X,'FOR EXTERNAL FORM FACTOR MODEL: IF THINPC-008
     5E FORM FACTOR IDENTIFICATION ECIS1356'/13X,'IS BLANK OR ZERO, AN IINPC-009
     6DENTIFICATION IS DEFINED IN SEQUENCE ECIS1357'/13X,'A NEGATIVE VALINPC-010
     7UE INDICATES THAT THERE IS A CORRECTION TERM ECIS1358'/13X,'TO BE INPC-011
     8ADDED IN SUCH A WAY THAT THE INTEGRAL OF THE SUM WITHECIS1359'/13XINPC-012
     9,'R**(L+2) VANISHES (L BEING THE ANGULAR MOMENTUM RELATED TO ECIS1INPC-013
     A360'/13X,'THIS FORM FACTOR). IF THE FORM FACTOR IDENTIFICATION IS INPC-014
     BNONECIS1361'/13X,'ZERO, ITS ABSOLUTE VALUE MUST BE IN SEQUENCE OR INPC-015
     CREFER TO A ECIS1362'/13X,'FORM FACTOR ALREADY DEFINED WITH THE SAMINPC-016
     DE SIGN.',12X,'ECIS1363'/72X,'ECIS1364'/'  NOTE ON REDUCED MATRIX EINPC-017
     ELEMENTS:  THE SPIN ANGULAR DESCRIPTION FOR A  ECIS1365'/'  *******INPC-018
     F*************************  PARTIAL WAVE WITH TOTAL SPIN JJ AND ECIINPC-019
     GS1366'/'  WITH QUANTUM NUMBERS L1 AND J1 FOR THE PARTICLE, I1 FOR INPC-020
     HTHE TARGET IS ECIS1367'/'  ((I**L1*Y(L1) , S1)J1 ,I1)JJ. THE INTERINPC-021
     IACTION FOR THE TRANSFER OF',5X,'ECIS1368'/'  ANGULAR MOMENTUM L, OINPC-022
     JF SPIN S AND OF TOTAL SPIN J, IS THE SCALAR',6X,'ECIS1369')       INPC-023
      WRITE (MW,1063)                                                   INPC-024
 1063 FORMAT ('  PRODUCT OF A TENSOR OPERATOR Q(J)NUCLEAR FOR THE TARGETINPC-025
     1 BY THE TENSOR ECIS1370'/'  PRODUCT OF (I**L*Y(L) , Q(S)PAR)J FOR INPC-026
     2THE PARTICLE.',19X,'ECIS1371'/4X,'(((L2,S2)J2,I2)JJ|(Q(L),Q(S))J.QINPC-027
     3(J)|((L1,S1)J1,I1)JJ) =',13X,'ECIS1372'/'  (-)**(JJ+I2+J1+(L1+L2+LINPC-028
     4)/2)) * C9J(L2,L1,L,S2,S1,S,J2,J1,J) *',9X,'ECIS1373'/'  C6J(J2,J,INPC-029
     5J1,I1,JJ,I2) * C3J(L1,L,L2,0,0,0) * SQRT((2J+1)*(2L+1)*',6X,'ECIS1INPC-030
     6374'/'  (2S+1)(2L1+1)*(2L2+1)*(2J1+1)*(2J2+1)) /COMPUTED IN SUBROUINPC-031
     7TINE QUAN/  ECIS1375'/'  * (S2||Q(S)||S1)/(2S+1) * (I2||Q(J)||I1) INPC-032
     8* (4*PI)**(-1/2) /WHICH IS   ECIS1376'/'  THE REDUCED NUCLEAR MATRINPC-033
     9IX ELEMENT READ HERE, EXCEPT FOR THE SQUARE   ECIS1377'/'  ROOT WHINPC-034
     AICH IS INCLUDED IN FORM FACTORS/.',30X,'ECIS1378'/72X,'ECIS1379'/4INPC-035
     BX,'THIS MATRIX ELEMENT IS REAL AND SYMMETRIC WHEN THE "REDUCED NUCINPC-036
     CLEAR ECIS1380'/'  MATRIX ELEMENT" IS SUCH THAT  (S2,I2 || Q(S) Q(JINPC-037
     D) ||S1,I1) =',10X,'ECIS1381'/'  (-)**(I2+S2-I1-S1+S+J) * (S1,I1 ||INPC-038
     E Q(S) Q(J) ||S2,I2). IN MACROSCOPIC ECIS1382'/'  MODELS, S=0 AND TINPC-039
     FHE PHASE BECOMES (-)**(I2-I1)*(PRODUCT OF PARITIES). ECIS1383'/4X,INPC-040
     G'A FACTOR I**(-L) MUST BE TAKEN INTO ACCOUNT IN THE DEFINITION OF'INPC-041
     H,4X,'ECIS1384'/'  Q(J)NUCLEAR AND A PHASE I INTRODUCED FOR NEGATIVINPC-042
     IE PARITY STATES.',6X,'ECIS1385'/4X,'WHEN S=0, (S2|| ||S1) = SQRT(2INPC-043
     J*S1+1) IS COMPUTED IN SUBROUTINE QUAN ECIS1386'/4X,'THE FACTOR (2SINPC-044
     K+1) INTRODUCED IN QUAN TO USE THE SAME REDUCED MATRIX ECIS1387')  INPC-045
      WRITE (MW,1064)                                                   INPC-046
 1064 FORMAT ('  ELEMENT WHEN TARGET AND PARTICLE ARE EXCHANGED.',23X,'EINPC-047
     1CIS1388'/4X,'FOR A MAGNETIC MULTIPOLE COULOMB TRANSITION BM(L-1), INPC-048
     2THE FORM FACTORECIS1389'/'  IS THE ONE OF AN ELECTRIC MULTIPOLE TRINPC-049
     3ANSITION BE(L) DIVIDED BY',7X,'ECIS1390'/'  MR(M*C/HBAR)**2, WHEREINPC-050
     4 M AND MR AND MP ARE ATOMIC AND REDUCED MASSES  ECIS1391'/'  RESPEINPC-051
     5CTIVELY.',57X,'ECIS1392'/72X,'ECIS1393'/72X,'ECIS1394'/'CARDS READINPC-052
     6 IN SUBROUTINE EXTP',43X,'ECIS1395'/'*****************************INPC-053
     7',43X,'ECIS1396'/' IF (LO(7)=.TRUE., OTHERWISE GO TO "CARDS READ IINPC-054
     8N SUBROUTINE LDIS".',5X,'ECIS1397'/72X,'ECIS1398'/'IDENTIFICATION'INPC-055
     9,26X,'FORMAT (12I5)',19X,'ECIS1399'/'**************',58X,'ECIS1400INPC-056
     A'/7X,'1- 5   L1',4X,'LEVEL I.',44X,'ECIS1401'/7X,'6-10   L2',4X,'LINPC-057
     BEVEL IP.',43X,'ECIS1402'/6X,'11-15   ML',4X,'SEQUENCE NUMBER OF THINPC-058
     CE FORM FACTOR IN THE TABLE OF  ECIS1403'/20X,'REDUCED NUCLEAR MATRINPC-059
     DIX ELEMENTS BETWEEN LEVEL I AND ECIS1404'/20X,'LEVEL IP. IT MUST BINPC-060
     EE 0 FOR POTENTIALS. USE THE',6X,'ECIS1405'/20X,'VALUE -ML TO ENTERINPC-061
     F THE CORRECTION TERM TO THE FORM  ECIS1406'/20X,'FACTOR READ WITH INPC-062
     GML.',32X,'ECIS1407'/''/6X,'16-20   ITYP =  1 REAL VOLUME OR SCALAINPC-063
     HR POTENTIAL',17X,'ECIS1408'/22X,'2 IMAGINARY VOLUME OR SCALAR POTEINPC-064
     INTIAL',12X,'ECIS1409'/22X,'3 REAL SURFACE OR VECTOR POTENTIAL',16XINPC-065
     J,'ECIS1410'/22X,'4 IMAGINARY SURFACE OR VECTOR POTENTIAL',11X,'ECIINPC-066
     KS1411'/22X,'5 REAL SPIN-ORBIT OR TENSOR POTENTIAL',13X,'ECIS1412')INPC-067
      WRITE (MW,1065)                                                   INPC-068
 1065 FORMAT (22X,'6 IMAGINARY SPIN-ORBIT OR TENSOR POTENTIAL',8X,'ECIS1INPC-069
     1413'/22X,'7 CHARGE DENSITY FOR COULOMB POTENTIAL',12X,'ECIS1414'/2INPC-070
     22X,'8 CHARGE DENSITY FOR COULOMB SPIN-ORBIT POTENTIAL.ECIS1415'/6XINPC-071
     3,'21-25   L1X   NON POSITIVE OR L1 OF THE FORM FACTOR TO BE COPIEDINPC-072
     4  ECIS1416'/20X,'INTO THE NEW ONE.',35X,'ECIS1417'/6X,'26-30   L2XINPC-073
     5   L2 OF THE FORM FACTOR TO BE COPIED IF L1X IS NOT',4X,'ECIS1418'INPC-074
     6/20X,'POSITIVE.',43X,'ECIS1419'/6X,'31-35   MLX   SAME FOR ML IF LINPC-075
     71X IS NOT POSITIVE.',17X,'ECIS1420'/6X,'36-40   ITYPX SAME FOR ITYINPC-076
     8P IF L1X IS NOT POSITIVE, MUST BE EQUAL ECIS1421'/20X,'TO ITYP.',4INPC-077
     94X,'ECIS1422'/25X,'0   FOR FORM FACTOR READ BY POINTS.',12X,'ECIS1INPC-078
     A423'/20X,'NEGATIVE NUMBER FOR STANDARD FORM FACTORS WITH NON  ECISINPC-079
     B1424'/20X,'POSITIVE VALUE OF L1X IN COLUMNS 21-30:',13X,'ECIS1425'INPC-080
     C/24X,'-1  WOODS-SAXON POTENTIAL.',22X,'ECIS1426'/24X,'-2  FIRST DEINPC-081
     DRIVATIVE OF WOODS-SAXON POTENTIAL.  ECIS1427'/24X,'-3  SECOND DERIINPC-082
     EVATIVE OF WOODS-SAXON POTENTIAL. ECIS1428'/24X,'-4  THIRD DERIVATIINPC-083
     FVE OF WOODS-SAXON POTENTIAL.  ECIS1429'/12X,'(THE N TH DERIVATIVE INPC-084
     GIS ALWAYS DIVIDED BY FACT(N)*SQRT(4*PI)ECIS1430'/17X,'AND MULTIPLIINPC-085
     HED BY R**N ONLY IF LO(6)=.FALSE.)',10X,'ECIS1431'/24X,'-5  DEFORMEINPC-086
     ID WOODS-SAXON POTENTIAL.',13X,'ECIS1432'/24X,'-6  DERIVATIVE OF DEINPC-087
     JFORMED WOODS-SAXON POTENTIALECIS1433'/24X,'-7  LAGUERRE POLYNOMIALINPC-088
     K.',24X,'ECIS1434')                                                INPC-089
      WRITE (MW,1066)                                                   INPC-090
 1066 FORMAT (24X,'-8  SOLUTION IN REAL WOODS-SAXON POTENTIAL.',5X,'ECISINPC-091
     11435'/24X,'-9  BESSEL EXPANSION.',27X,'ECIS1436'/24X,'-10 EXPANSIOINPC-092
     2N WITH LAGUERRE POLYNOMIALS.',8X,'ECIS1437'/20X,'(SEE BELOW "SPECIINPC-093
     3AL MEANING OF L1X, L2X AND MLX ..")ECIS1438'/6X,'41-45   NST   CHAINPC-094
     4NNEL OF WHICH THE STEP SIZE IS USED (DEFAULT',5X,'ECIS1439'/20X,'VINPC-095
     5ALUE: THE CHANNEL WHICH USES IT FOR A CENTRAL',6X,'ECIS1440'/20X,'INPC-096
     6POTENTIAL, 1 FOR A TRANSITION POTENTIAL). IF NST IS ECIS1441'/20X,INPC-097
     7'NEGATIVE FOR A STANDARD FORM FACTOR WITH ITYPX=-1 TOECIS1442'/20XINPC-098
     8,'ITYPX=-6, USE OF A REDUCED RADIUS, TAKING INTO',6X,'ECIS1443'/20INPC-099
     9X,'ACCOUNT LO(16) (HEAVY-ION DEFINITION) AND LO(6)',5X,'ECIS1444'/INPC-100
     A20X,'(USE OF DEFORMATION LENGTHS).',23X,'ECIS1445'/6X,'46-50   NFOINPC-101
     BLD 0 FOR NO FOLDING OR ADDRESS OF FOLDING PARAMETERS   ECIS1446'/2INPC-102
     C0X,'IN THEIR LIST READ BELOW. NFOLD CAN BE DIFFERENT FORECIS1447'/INPC-103
     D20X,'A COPIED FORM FACTOR AND ALLOWS THE FOLDING WITH A  ECIS1448'INPC-104
     E/20X,'DIFFERENT MULTIPOLARITY. IT CAN BE USED WITH A',6X,'ECIS1449INPC-105
     F'/20X,'FORM FACTOR GIVEN BY POINTS.',24X,'ECIS1450'/6X,'51-55   NIINPC-106
     GNT  IF NOT 0, THE STRENGTH IS THE INTEGRAL OF THIS FORM ECIS1451'/INPC-107
     H20X,'FACTOR WITH R**(L+2) WHERE L IS THE RELEVANT ANGULARECIS1452'INPC-108
     I/20X,'MOMENTUM. WHEN NINT, IS A POSITIVE NUMBER, THE',6X,'ECIS1453INPC-109
     J'/20X,'INTEGRAL WITH R**(L+1) HAS TO BE GIVEN; WITH A',6X,'ECIS145INPC-110
     K4')                                                               INPC-111
      WRITE (MW,1067)                                                   INPC-112
 1067 FORMAT (20X,'NEGATIVE INTEGER, THE USUAL STRENGTH HAS TO BE GIVENEINPC-113
     1CIS1455'/20X,'AND IS REPLACED BY THIS INTEGRAL AT ITS FIRST',7X,'EINPC-114
     2CIS1456'/20X,'CALCULATION. FOR SPIN-ORBIT POTENTIALS, IT IS THE   INPC-115
     3ECIS1457'/20X,'INTEGRAL OF THE FORM FACTOR WITHOUT DERIVATION. THIINPC-116
     4SECIS1458'/20X,'STRENGTH IS OF THE SAME SIGN AS THE DEPTH OF THE',INPC-117
     54X,'ECIS1459'/20X,'STANDARD DESCRIPTION. FOR COULOMB POTENTIALS, TINPC-118
     6HIS  ECIS1460'/20X,'STRENGTH IS THE LAST VALUE MULTIPLIED BY',12X,INPC-119
     7'ECIS1461'/20X,'(2*L+1)*R**(L+1)/1.43998 . IF NST IS NEGATIVE FOR INPC-120
     8A ECIS1462'/20X,'FORM FACTOR COPIED, INPUT OF A MULTIPLICATION FACINPC-121
     9TORECIS1463'/20X,'IN NEXT CARD.',39X,'ECIS1464'/72X,'ECIS1465'/'MEINPC-122
     AANING OF L1X, L2X AND MLX FOR NON POSITIVE VALUES OF ITYPX',12X,'EINPC-123
     BCIS1466'/'********************************************************INPC-124
     C****',12X,'ECIS1467'/'(COLUMNS 36-40)',57X,'ECIS1468'/'***********INPC-125
     D****',57X,'ECIS1469'/6X,'21-25   L1X   -L1X IS THE MAGNETIC QUANTUINPC-126
     EM NUMBER OF THE VIBRATIONECIS1470'/20X,'WHEN ITYPX=-6.',38X,'ECIS1INPC-127
     F471'/''/20X,'-L1X IS THE NUMBER OF NODES WHEN ITYPX=-7 OR -8',5X,INPC-128
     G'ECIS1472'/20X,'(USED ONLY WHEN MLX=0 OR MLX=1).',20X,'ECIS1473'/2INPC-129
     H0X,'-L1X IS THE ORDER OF DERIVATION OF BESSEL FUNCTIONS ECIS1474'/INPC-130
     I20X,'OR LAGUERRE POLYNOMIALS WHEN ITYPX=-9 OR -10.',7X,'ECIS1475'/INPC-131
     J20X,'MUST BE 0 IF ITYPX=0.',31X,'ECIS1476'/6X,'26-30   L2X   NUMBEINPC-132
     KR OF DEFORMATIONS WHEN ITYPX=-5 OR -6.',9X,'ECIS1477')            INPC-133
      WRITE (MW,1068)                                                   INPC-134
 1068 FORMAT (20X,'A DIVISION FACTOR FOR THE STEPS IN COMPUTING BOUND  EINPC-135
     1CIS1478'/20X,'FUNCTION (DEFAULT VALUE 4) WHEN ITYPX=-8.',11X,'ECISINPC-136
     21479'/20X,'NUMBER OF BESSEL FUNCTIONS OR LAGUERRE POLYNOMIALS  ECIINPC-137
     3S1480'/20X,'WHEN ITYPX=-9 OR -10.',31X,'ECIS1481'/20X,'NON 0 FOR IINPC-138
     4NPUT OF 1/R D/DR(V(R)) FOR A SPIN-ORBIT  ECIS1482'/20X,'POTENTIAL INPC-139
     5READ BY POINTS (USED ONLY FOR ML=ITYPX=0  ECIS1483'/20X,'AND ITYP=INPC-140
     65,6 AND 8 FOR SCHROEDINGER EQUATION).',6X,'ECIS1484'/6X,'31-35   MINPC-141
     7LX   ANGULAR MOMENTUM OF THE VIBRATION WHEN ITYPX=-6.',4X,'ECIS148INPC-142
     85'/20X,'NUMBER OF BOUND FUNCTIONS WHEN ITYPX=-7 OR -8:',6X,'ECIS14INPC-143
     986'/20X,'=0 OR 1 FOR ONE FUNCTION WITH THE QUANTUM NUMBERS OFECIS1INPC-144
     A487'/31X,'THE TRANSITION,',26X,'ECIS1488'/20X,'=2 FOR TWO FUNCTIONINPC-145
     BS WITH THE SAME ITYPX,',11X,'ECIS1489'/20X,'=3 WHEN ITYPX=-8 FOR AINPC-146
     C LAGUERRE POLYNOMIAL FOR THE  ECIS1490'/31X,'SECOND FUNCTION.',25XINPC-147
     D,'ECIS1491'/20X,'L-VALUE OF BESSEL FUNCTIONS OR LAGUERRE POLYNOMIAINPC-148
     ELS ECIS1492'/20X,'WHEN ITYPX=-9 OR -10 (DEFAULT VALUE: ANGULAR',8XINPC-149
     F,'ECIS1493'/20X,'MOMENTUM OF THE FORM FACTOR, ENTER A NEGATIVE VALINPC-150
     GUE ECIS1494'/20X,'TO USE 0).',42X,'ECIS1495'/20X,'NON 0 FOR COULOMINPC-151
     HB POTENTIAL INSTEAD OF CHARGE',7X,'ECIS1496'/20X,'DENSITY (USED ONINPC-152
     ILY IF ITYP= 7 OR 8 ABD ITYPX=0).',4X,'ECIS1497'/72X,'ECIS1498'/'  INPC-153
     JERRORS IN THIS CARD STOP THE PROGRAM.',33X,'ECIS1499'/72X,'ECIS150INPC-154
     K0')                                                               INPC-155
      WRITE (MW,1069)                                                   INPC-156
 1069 FORMAT ('  NOTE:  IF THERE IS NO SPIN FOR THE PARTICLE IN ALL THE INPC-157
     1CHANNELS, THE  ECIS1501'/'  ****  SPIN-ORBIT POTENTIALS (ITYP = 5 INPC-158
     2, 6 AND 8) ARE NOT READ, BUT',4X,'ECIS1502'/8X,'THEY ARE REQUIRED INPC-159
     3AS SOON AS THERE IS AT LEAST A NON SPIN-0',5X,'ECIS1503'/8X,'PARTIINPC-160
     4CLE AT LEAST FOR ONE LEVEL. FOR THE TRANSITIONS WITH A',5X,'ECIS15INPC-161
     504'/8X,'TRANSFER OF SPIN S WHICH IS NOT ZERO THERE ARE NO SPIN-ORBINPC-162
     6IT',4X,'ECIS1505'/8X,'POTENTIALS (NO TENSOR TERM IN DIRAC FORMALISINPC-163
     7M). THERE IS A',6X,'ECIS1506'/8X,'COULOMB POTENTIAL FOR INTEGRAL SINPC-164
     8PIN TRANSFER EVEN FOR L=0.',6X,'ECIS1507'/9X,'VOLUME AND SURFACE PINPC-165
     9OTENTIALS ARE READ SEPARATELY EXCEPT FOR   ECIS1508'/8X,'ITYPX=-7 INPC-166
     AAND -8. IN THE DIRAC FORMALISM ITYPX=-7 AND ITYPX=-8   ECIS1509'/8INPC-167
     BX,'CANNOT BE USED. FOR MAGNETIC COULOMB INTERACTION, ONLY THE',6X,INPC-168
     C'ECIS1510'/8X,'COULOMB POTENTIAL IS READ. THE FORM FACTORS WITH ITINPC-169
     DYPX=-5 TO -9 ECIS1511'/8X,'CAN BE COPIED ONLY IF THEY INVOLVE THE INPC-170
     ESAME MULTIPOLARITY. THEREECIS1512'/8X,'IS NO LIMITATION FOR ITYPX=INPC-171
     F-7 AND -8 IF THEY INVOLVE TWO BOUND  ECIS1513'/8X,'FUNCTIONS. THE INPC-172
     GCOPIED FORM FACTORS CAN BE FOLDED DIFFERENTLY.   ECIS1514'/72X,'ECINPC-173
     HIS1515'/9X,'WHEN READ BY POINTS FOR ITYP=7 AND 8, THE VALUES CAN BINPC-174
     IE CHARGE ECIS1516'/8X,'DENSITY OR POTENTIAL. ONLY CHARGE DENSITY CINPC-175
     JAN BE FOLDED. COULOMBECIS1517'/8X,'TRANSITIONS. IF A POTENTIAL IS INPC-176
     KGIVEN BY POINTS, THE TRANSITIONS ECIS1518')                       INPC-177
      WRITE (MW,1070)                                                   INPC-178
 1070 FORMAT (8X,'MUST BE SIMILAR FOR COULOMB INTERACTION. IF NOT, THE CINPC-179
     1ODE IS',4X,'ECIS1519'/8X,'STOPPED IN SUBROUTINE STDP.',37X,'ECIS15INPC-180
     220'/72X,'ECIS1521'/' ALLOWED VALUES OF ITYPX FOR STANDARD POTENTIAINPC-181
     3LS',24X,'ECIS1522'/' *********************************************INPC-182
     4**',24X,'ECIS1523'/72X,'ECIS1524'/' *** ML = 0 ******',54X,'ECIS15INPC-183
     525'/' ITYPX =',4X,'-1',4X,'-2',4X,'-3',4X,'-4',4X,'-5',4X,'-6',4X,INPC-184
     6'-7',4X,'-8  -9,-10',8X,'ECIS1526'/' ITYP = 1   YES   NO',4X,'NO',INPC-185
     74X,'NO',4X,'YES   NO',4X,'NO',4X,'NO   YES',10X,'ECIS1527'/' ITYP INPC-186
     8= 2   YES   NO',4X,'NO',4X,'NO',4X,'YES   NO',4X,'NO',4X,'NO   YESINPC-187
     9',10X,'ECIS1528'/' ITYP = 3   YES   NO',4X,'NO',4X,'NO',4X,'YES   INPC-188
     ANO',4X,'NO',4X,'NO   YES',10X,'ECIS1529'/' ITYP = 4   YES   NO',4XINPC-189
     B,'NO',4X,'NO',4X,'YES   NO',4X,'NO',4X,'NO   YES',10X,'ECIS1530'/'INPC-190
     C ITYP = 5   YES   NO',4X,'NO',4X,'NO',4X,'YES   NO',4X,'NO',4X,'NOINPC-191
     D   YES',10X,'ECIS1531'/' ITYP = 6   YES   NO',4X,'NO',4X,'NO',4X,'INPC-192
     EYES   NO',4X,'NO',4X,'NO   YES',10X,'ECIS1532'/' ITYP = 7   YES   INPC-193
     FNO',4X,'NO',4X,'NO',4X,'YES   NO',4X,'NO',4X,'NO   YES',10X,'ECIS1INPC-194
     G533'/' ITYP = 8   YES   NO',4X,'NO',4X,'NO',4X,'YES   NO',4X,'NO',INPC-195
     H4X,'NO   YES',10X,'ECIS1534'/72X,'ECIS1535'/''/' **** ML IS NOT 0INPC-196
     I ****',50X,'ECIS1536'/' ITYPX =',4X,'-1',4X,'-2',4X,'-3',4X,'-4',4INPC-197
     JX,'-5',4X,'-6',4X,'-7',4X,'-8  -9,-10',8X,'ECIS1537')             INPC-198
      WRITE (MW,1071)                                                   INPC-199
 1071 FORMAT (' ITYP = 1   YES   YES   YES   YES   YES   YES   YES   YESINPC-200
     1  YES',10X,'ECIS1538'/' ITYP = 2   YES   YES   YES   YES   YES   YINPC-201
     2ES   YES   YES  YES',10X,'ECIS1539'/' ITYP = 3   YES   YES   YES  INPC-202
     3 YES   YES   YES   NO',4X,'NO   YES',10X,'ECIS1540'/' ITYP = 4   YINPC-203
     4ES   YES   YES   YES   YES   YES   NO',4X,'NO   YES',10X,'ECIS1541INPC-204
     5'/' ITYP = 5   YES   YES   YES   YES   YES   YES   NO',4X,'NO   YEINPC-205
     6S',10X,'ECIS1542'/' ITYP = 6   YES   YES   YES   YES   YES   YES  INPC-206
     7 NO',4X,'NO   YES',10X,'ECIS1543'/' ITYP = 7   NO',4X,'YES   YES  INPC-207
     8 YES   YES   YES   NO',4X,'NO   YES',10X,'ECIS1544'/' ITYP = 8   NINPC-208
     9O',4X,'YES   YES   YES   YES   YES   NO',4X,'NO   YES',10X,'ECIS15INPC-209
     A45'/72X,'ECIS1546'/' NUMBER OF PARAMETERS TO STORE:',41X,'ECIS1547INPC-210
     B'/12X,'10',4X,'10',4X,'10',4X,'10  11+L2X 13+L2X 11',4X,'22   13+LINPC-211
     C2X',7X,'ECIS1548'/' THERE IS ONE MORE FOR COULOMB POTENTIALS AND IINPC-212
     DTYPX=-1 TO -6.',11X,'ECIS1549'/' THERE ARE 5 MORE PARAMETERS FOR IINPC-213
     ETYPX=-7 AND MLX=2.',20X,'ECIS1550'/' THERE ARE 16 OR 6 MORE PARAMEINPC-214
     FTERS FOR ITYPX=-8 AND MLX=2 OR MLX=3.',5X,'ECIS1551'/72X,'ECIS1552INPC-215
     G'/'FORM FACTOR GIVEN BY POINTS',13X,'FORMAT (2F10.5)',17X,'ECIS155INPC-216
     H3'/'***************************',45X,'ECIS1554'/' IF ITYPX IS NEGAINPC-217
     ITIVE GO TO "PARAMETERS OF STANDARD FORM FACTORS".',6X,'ECIS1555'/'INPC-218
     J THEN IF L1X IS POSITIVE GO BACK TO "IDENTIFICATION" CARD.',14X,'EINPC-219
     KCIS1556')                                                         INPC-220
      WRITE (MW,1072)                                                   INPC-221
 1072 FORMAT (7X,'1-10   MULTIPLICATIVE FACTOR FOR THE STRENGTH (DEFAULTINPC-222
     1 VALUE 1.).ECIS1557'/6X,'11-20   MULTIPLICATIVE FACTOR FOR THE STEINPC-223
     2P SIZE (DEFAULT VALUE 1.)ECIS1558'/72X,'ECIS1559'/'NUMERICAL VALUEINPC-224
     3S OF THE POTENTIALS',6X,'FORMAT (2(F10.5,F20.10),A4)',5X,'ECIS1560INPC-225
     4'/'**********************************',38X,'ECIS1561'/7X,'1-10   RINPC-226
     5EXT  RADIUS.',45X,'ECIS1562'/6X,'11-30   FEXT  VALUE AT REXT.',38XINPC-227
     6,'ECIS1563'/6X,'31-40   REXT  RADIUS.',45X,'ECIS1564'/6X,'41-60   INPC-228
     7FEXT  VALUE AT REXT.',38X,'ECIS1565'/6X,'61-64   LAST  CONTROL WORINPC-229
     8D WHICH MUST BE "LAST" FOR THE LAST POINTECIS1566'/7X,'IF THIS CONINPC-230
     9TROL WORD IS NOT "LAST" GO TO NEXT SUCH CARD.',9X,'ECIS1567'/'  NOINPC-231
     ATE:  THE NUMBER OF RADII AND VALUES MUST BE AT LEAST 4. IF IT IS',INPC-232
     B4X,'ECIS1568'/'  ***** THE COMPUTATION IS STOPPED.',37X,'ECIS1569'INPC-233
     C/9X,'THE GIVEN RADII MUST BE IN INCREASING ORDER AND THEIR NUMBER INPC-234
     D  ECIS1570'/8X,'EVEN. MANY POINTS ARE NEEDED FOR COULOMB POTENTIALINPC-235
     E FOR WHICH THEECIS1571'/8X,'EXTRAPOLATION DOES NOT WORK WELL. IF IINPC-236
     FTS DEPTH IS GIVEN BY THE  ECIS1572'/8X,'INTEGRAL, (NINT NOT 0), THINPC-237
     GESE VALUES DESCRIBE THE CHARGE',8X,'ECIS1573'/8X,'DISTRIBUTION.',5INPC-238
     H1X,'ECIS1574'/9X,'THE SIGN OF THE POTENTIALS IS THE ONE OF THEIR DINPC-239
     IEPTH WHEN',6X,'ECIS1575'/8X,'WOODS-SAXON FORM FACTORS ARE USED FORINPC-240
     J SCHROEDINGER EQUATIONS ANDECIS1576'/8X,'FOR DIRAC EQUATION.',45X,INPC-241
     K'ECIS1577')                                                       INPC-242
      WRITE (MW,1073)                                                   INPC-243
 1073 FORMAT (9X,'THE SPIN-ORBIT POTENTIALS AND TRANSITIONS HAVE TO BE GINPC-244
     1IVEN AS  ECIS1578'/8X,'V(R), FROM WHICH 1/R D/DR(V(R)) AND V(R)/R*INPC-245
     2*2 ARE INTERNALLY',4X,'ECIS1579'/8X,'COMPUTED. GIVING INSP=1 ALLOWINPC-246
     3S TO GIVE 1/R D/DR(V(R)) FOR A',5X,'ECIS1580'/8X,'SPIN-ORBIT POTENINPC-247
     4TIAL (ITS INTEGRAL V(R) IS COMPUTED WITH ZERO ASECIS1581'/8X,'VALUINPC-248
     5E).',57X,'ECIS1582'/9X,'THE TWO MULTIPLICATIVE FACTORS ONLY CAN BEINPC-249
     6 IN SEARCH OR CHANGEDECIS1583'/8X,'IF LO(34) WAS .TRUE. IN A PREVIINPC-250
     7OUS COMPUTATION.',17X,'ECIS1584'/72X,'ECIS1585'/'MULTIPLICATIVE FAINPC-251
     8CTOR',19X,'FORMAT (7F10.5)',17X,'ECIS1586'/'*********************'INPC-252
     9,51X,'ECIS1587'/' IF NINT IS NOT NEGATIVE FOR A COPIED FORM FACTORINPC-253
     A GO BACK TO',12X,'ECIS1588'/' "IDENTIFICATION" CARD.',49X,'ECIS158INPC-254
     B9'/7X,'1-10   MULTIPLICATIVE FACTOR FOR THE STRENGTH (MUST NOT BE INPC-255
     C0.).  ECIS1590'/72X,'ECIS1591'/'PARAMETERS OF STANDARD FORM FACTORINPC-256
     DS',37X,'ECIS1592'/'***********************************',37X,'ECIS1INPC-257
     E593'/' ONLY IF L1X IS NOT POSITIVE AND ITYPX IS NEGATIVE, OTHERWISINPC-258
     FE GO TO',5X,'ECIS1594'/' NEXT "IDENTIFICATION CARD".',44X,'ECIS159INPC-259
     G5'/72X,'ECIS1596'/'IF ITYPX=-1 TO -6:',54X,'ECIS1597'/'***********INPC-260
     H*******',54X,'ECIS1598'/72X,'ECIS1599'/''/'PARAMETERS OF THE POTEINPC-261
     INTIAL',13X,'FORMAT (7F10.5)',17X,'ECIS1600'/'*********************INPC-262
     J******',45X,'ECIS1601'/7X,'1-10   DEPTH OF POTENTIAL.',39X,'ECIS16INPC-263
     K02')                                                              INPC-264
      WRITE (MW,1074)                                                   INPC-265
 1074 FORMAT (14X,'PRODUCT OF DEPTH AND DEFORMATION FOR A TRANSITION FORINPC-266
     1M',4X,'ECIS1603'/18X,'FACTOR.',47X,'ECIS1604'/14X,'PRODUCT OF CHARINPC-267
     2GES FOR COULOMB POTENTIAL.',17X,'ECIS1605'/14X,'PRODUCT OF CHARGESINPC-268
     3 AND DEFORMATION FOR COULOMB TRANSITION ECIS1606'/18X,'FORM FACTORINPC-269
     4.',42X,'ECIS1607'/6X,'11-20   RADIUS OF VOLUME POTENTIAL.',31X,'ECINPC-270
     5IS1608'/6X,'21-30   DIFFUSENESS OF VOLUME POTENTIAL.',26X,'ECIS160INPC-271
     69'/6X,'31-40   EXPONENTIATION FACTOR (THE FORM FACTOR IS AT THE POINPC-272
     7WER',4X,'ECIS1610'/18X,'1+THIS VALUE).',40X,'ECIS1611'/6X,'41-50  INPC-273
     8 THIRD PARAMETER OF A FERMI CHARGE DISTRIBUTION FOR A',6X,'ECIS161INPC-274
     92'/14X,'COULOMB POTENTIAL.',40X,'ECIS1613'/72X,'ECIS1614'/'DEFORMAINPC-275
     ATIONS FOR ITYPX=-5 OR -6',9X,'FORMAT (7F10.5)',17X,'ECIS1615'/'***INPC-276
     B****************************',41X,'ECIS1616'/7X,'1-10   DEFORMATIOINPC-277
     CN FOR L=1.',38X,'ECIS1617'/6X,'11-20   DEFORMATION FOR L=2.',38X,'INPC-278
     DECIS1618'/6X,'21-30   DEFORMATION FOR L=3.',38X,'ECIS1619'/6X,'31-INPC-279
     E40   DEFORMATION FOR L=4.',38X,'ECIS1620'/6X,'41-50   .......... AINPC-280
     FND SO ON UP TO L2X ....',23X,'ECIS1621'/'  NOTE:  ODD AND EVEN DEFINPC-281
     GORMATIONS ARE USED, STARTING BY L=1.',11X,'ECIS1622'/'  ****  THE INPC-282
     HRADII MUST BE VALUES ALREADY MULTIPLIED BY A**(1/3).',8X,'ECIS1623INPC-283
     I'/8X,'NO CHECK IS DONE ON PRODUCT OF CHARGES WHEN THEY ARE READ ORINPC-284
     J TO ECIS1624'/8X,'PREVENT A SEARCH ON THEM.',39X,'ECIS1625'/72X,'EINPC-285
     KCIS1626'/'IF ITYPX=-7 OR -8:',54X,'ECIS1627')                     INPC-286
      WRITE (MW,1075)                                                   INPC-287
 1075 FORMAT ('******************',54X,'ECIS1628'/72X,'ECIS1629'/'QUANTUINPC-288
     1M NUMBERS',25X,'FORMAT (12I5)',19X,'ECIS1630'/'***************',57INPC-289
     2X,'ECIS1631'/'IF MLX=0 OR MLX=1, THE NUMBER OF NODES IS L2X AND THINPC-290
     3E QUANTUM NUMBERS   ECIS1632'/'ARE THOSE OF THE TRANSITION. IN THIINPC-291
     4S CASE, GO TO NEXT CARD.',13X,'ECIS1633'/'IF MLX=2 OR MLX=3:',54X,INPC-292
     5'ECIS1634'/7X,'1- 5   NP: NUMBER OF NODES OF THE FIRST BOUND FUNCTINPC-293
     6ION.',10X,'ECIS1635'/7X,'6-10   LP: ANGULAR MOMENTUM OF THE FIRST INPC-294
     7BOUND FUNCTION.',9X,'ECIS1636'/6X,'11-15   SP: VALUE OF 2*S FOR THINPC-295
     8E FIRST BOUND FUNCTION.',12X,'ECIS1637'/6X,'16-20   JP: VALUE OF 2INPC-296
     9*J FOR THE FIRST BOUND FUNCTION.',12X,'ECIS1638'/6X,'21-25   NH: NINPC-297
     AUMBER OF NODES OF THE SECOND BOUND FUNCTION.',9X,'ECIS1639'/6X,'26INPC-298
     B-30   LH: ANGULAR MOMENTUM OF THE SECOND BOUND FUNCTION.',8X,'ECISINPC-299
     C1640'/6X,'31-35   SH: VALUE OF 2*S FOR THE SECOND BOUND FUNCTION.'INPC-300
     D,11X,'ECIS1641'/6X,'36-40   JH: VALUE OF 2*J FOR THE SECOND BOUND INPC-301
     EFUNCTION.',11X,'ECIS1642'/6X,'41-45   NVC NOT 0 TO TAKE INTO ACCOUINPC-302
     FNT PARTICLE-HOLE COUPLING',5X,'ECIS1643'/18X,'(USED ONLY WITH SP=1INPC-303
     G AND SH=1).',23X,'ECIS1644'/72X,'ECIS1645'/'FOR ITYPX=-7:',27X,'FOINPC-304
     HRMAT (7F10.5)',17X,'ECIS1646'/'*************',59X,'ECIS1647'/7X,'1INPC-305
     I-10   OSCILLATOR PARAMETER FOR THE FIRST BOUND FUNCTION.',8X,'ECISINPC-306
     J1648'/6X,'11-20   TOTAL MASS (DEFAULT VALUE: TARGET MASS OF FIRST INPC-307
     KLEVEL).   ECIS1649')                                              INPC-308
      WRITE (MW,1076)                                                   INPC-309
 1076 FORMAT (6X,'21-30   MASS OF BOUND PARTICLE (DEFAULT VALUE 1.).',16INPC-310
     1X,'ECIS1650'/6X,'31-40   OSCILLATOR PARAMETER FOR THE SECOND BOUNDINPC-311
     2 FUNCTION.',7X,'ECIS1651'/6X,'41-50   TOTAL MASS (DEFAULT VALUE: TINPC-312
     3ARGET MASS OF FIRST LEVEL).   ECIS1652'/6X,'51-60   MASS OF BOUND INPC-313
     4PARTICLE (DEFAULT VALUE 1.).',16X,'ECIS1653'/'FOR MLX=0 OR 1 OR ITINPC-314
     5YPX=-8 WITH MLX=3, ONLY THE THREE FIRST PARAMETERS  ECIS1654'/'AREINPC-315
     6 READ. FOR MLX=2, IF THE SECOND OSCILLATOR PARAMETER IS 0., THE FIINPC-316
     7RSTECIS1655'/'ONE IS COPIED. ONLY, OSCILLATOR PARAMETERS CAN BE ININPC-317
     8 SEARCH OR CHANGED  ECIS1656'/'IF LO(34) WAS .TRUE. IN A PREVIOUS INPC-318
     9COMPUTATION.',25X,'ECIS1657'/72X,'ECIS1658'/'FOR ITYPX=-8:',27X,'FINPC-319
     AORMAT (7F10.5)',17X,'ECIS1659'/'*************',59X,'ECIS1660'/7X,'INPC-320
     B1-10   BINDING ENERGY. IF THIS VALUE IS NEGATIVE, THE BOUND STATEEINPC-321
     CCIS1661'/14X,'IS REPLACED BY A SCATTERING STATE NORMALISED TO',11XINPC-322
     D,'ECIS1662'/14X,'SIN(KR+DELTA) AT INFINITY.',32X,'ECIS1663'/''/6XINPC-323
     E,'11-20   TOTAL MASS (DEFAULT VALUE: TARGET MASS OF FIRST LEVEL). INPC-324
     F  ECIS1664'/6X,'21-30   MASS OF BOUND PARTICLE (DEFAULT VALUE 1.).INPC-325
     G',16X,'ECIS1665'/6X,'31-40   PRODUCT OF CHARGES.',39X,'ECIS1666'/6INPC-326
     HX,'41-50   REAL POTENTIAL FOR UNBOUND STATES OR STARTING VALUE FORINPC-327
     I   ECIS1667'/14X,'THE SEARCH ON BOUND STATE (DEFAULT VALUES 35 MEVINPC-328
     J).',8X,'ECIS1668'/6X,'51-60   REDUCED RADIUS OF REAL POTENTIAL.',2INPC-329
     K5X,'ECIS1669')                                                    INPC-330
      WRITE (MW,1077)                                                   INPC-331
 1077 FORMAT (6X,'61-70   DIFFUSENESS OF REAL POTENTIAL.',28X,'ECIS1670'INPC-332
     1/72X,'ECIS1671'/'ON NEXT CARD:',27X,'FORMAT (7F10.5)',17X,'ECIS167INPC-333
     22'/'*************',59X,'ECIS1673'/7X,'1-10   DEPTH OF SPIN-ORBIT PINPC-334
     3OTENTIAL.',28X,'ECIS1674'/6X,'11-20   REDUCED RADIUS OF SPIN-ORBITINPC-335
     4 POTENTIAL.',19X,'ECIS1675'/6X,'21-30   DIFFUSENESS OF SPIN-ORBIT INPC-336
     5POTENTIAL.',22X,'ECIS1676'/6X,'31-40   REDUCED RADIUS OF COULOMB PINPC-337
     6OTENTIAL.',22X,'ECIS1677'/'FOR MLX=2, GO BACK TO "FOR ITYPX=-8:".'INPC-338
     7,34X,'ECIS1678'/'FOR MLX=3, GO BACK TO "FOR ITYPX=-7:" TO READ ONEINPC-339
     8 OSCILLATOR PARAMETER. ECIS1679'/'  NOTE:  REDUCED RADII ARE USED INPC-340
     9FOR ITYPX=-8.',27X,'ECIS1680'/'  ****  USING THE PRODUCT OF TWO BOINPC-341
     AUND FUNCTIONS, THEIR COUPLING TO THE ECIS1681'/8X,'ANGULAR MOMENTUINPC-342
     BM OF THE TRANSITION IS COMPUTED BY THE CODE ONLY ECIS1682'/8X,'IF INPC-343
     CTHEIR SPINS ARE BOTH 1/2 AND THE NUCLEAR MATRIX ELEMENT',6X,'ECIS1INPC-344
     D683'/8X,'SHOULD BE THE STRENGTH OF THE INTERACTION. FOR SPINS NOT INPC-345
     E1/2,   ECIS1684'/8X,'THIS COUPLING SHOULD BE INCLUDED IN THE NUCLEINPC-346
     FAR MATRIX ELEMENT. ECIS1685'/72X,'ECIS1686'/'IF ITYPX=-9 OR -10:',INPC-347
     G53X,'ECIS1687'/'*******************',53X,'ECIS1688'/72X,'ECIS1689'INPC-348
     H/'STRENGTHS',31X,'FORMAT (7F10.5)',17X,'ECIS1690'/'*********',63X,INPC-349
     I'ECIS1691'/7X,'1-10   STRENGTH OF THE INTEGRAL WITH R**(L+2). (FORINPC-350
     J COULOMB',6X,'ECIS1692'/14X,'POTENTIALS AND COUPLINGS, GIVE THE DEINPC-351
     KSCRIPTION OF',9X,'ECIS1693')                                      INPC-352
      WRITE (MW,1078)                                                   INPC-353
 1078 FORMAT (14X,'CHARGE DENSITY OR TRANSITION. THE STRENGTH MUST BE',8INPC-354
     1X,'ECIS1694'/14X,'GIVEN. FOR POTENTIALS, IT IS THE PRODUCT OF CHARINPC-355
     2GES).',5X,'ECIS1695'/6X,'11-20   FOR ITYPX=-9, RADIAL EXTENSION OFINPC-356
     3 BESSEL FUNCTION',9X,'ECIS1696'/14X,'(DEFAULT VALUE MATCHING RADIUINPC-357
     4S).',26X,'ECIS1697'/14X,'FOR ITYPX=-10, PARAMETER B OF LAGUERRE POINPC-358
     5LYNOMIAL',9X,'ECIS1698'/14X,'(DEFAULT VALUE 1). THE POTENTIAL IS SINPC-359
     6UM ON N OF',11X,'ECIS1699'/14X,'X**L L(L+1/2,N,X**2) EXP(-X**2/2) INPC-360
     7WHERE X=R/B.',12X,'ECIS1700'/6X,'21-30   STRENGTH OF FIRST BESSEL INPC-361
     8FUNCTION/LAGUERRE POLYNOMIAL.',4X,'ECIS1701'/6X,'31-40   STRENGTH INPC-362
     9OF SECOND BESSEL FUNCTION/LAGUERRE POLYNOMIAL.   ECIS1702'/6X,'41-INPC-363
     A50   STRENGTH OF THIRD BESSEL FUNCTION/LAGUERRE POLYNOMIAL.',4X,'EINPC-364
     BCIS1703'/6X,'51-60   STRENGTH OF FOURTH BESSEL FUNCTION/LAGUERRE PINPC-365
     COLYNOMIAL.   ECIS1704'/6X,'61-70   STRENGTH OF FIFTH BESSEL FUNCTIINPC-366
     DON/LAGUERRE POLYNOMIAL.',4X,'ECIS1705'/72X,'ECIS1706'/' EVENTUALLYINPC-367
     E, ON NEXT CARD:',14X,'FORMAT (7F10.5)',17X,'ECIS1707'/' **********INPC-368
     F***************',46X,'ECIS1708'/7X,'1-10   STRENGTH OF SIXTH BESSEINPC-369
     GL FUNCTION/LAGUERRE POLYNOMIAL.',4X,'ECIS1709'/6X,'11-20   STRENGTINPC-370
     HH OF SEVENTH BESSEL FUNCTION/LAGUERRE POLYNOMIAL.  ECIS1710'/6X,'2INPC-371
     I1-30   .......... AND SO ON UP TO L2X ....',23X,'ECIS1711'/'  NOTEINPC-372
     J:  WITH BESSEL FUNCTION OR LAGUERRE POLYNOMIAL OR LAGUERRE, GIVE  INPC-373
     KECIS1712')                                                        INPC-374
      WRITE (MW,1079)                                                   INPC-375
 1079 FORMAT ('  ****  THE SPIN-ORBIT V(R) AND NEVER 1/R D/DR V(R). THE INPC-376
     1LAGUERRE',7X,'ECIS1713'/8X,'POLYNOMIALS ARE X**L EXP(-X**2) L^(L+1INPC-377
     2/2)_N(2X**2) WHERE X=R/B  ECIS1714'/8X,'(UNNORMALISED POLYNOMIALS INPC-378
     3AS DEFINED IN BATEMAN OR ABRAMOWITZ,  ECIS1715'/8X,'WITH A PARAMETINPC-379
     4ER B INVERSE OF THE HARMONIC OSCILLATOR PARAMETER)ECIS1716'/9X,'THINPC-380
     5E PROGRAM STOPS IF FORM FACTORS ARE MISSING.',17X,'ECIS1717'/72X,'INPC-381
     6ECIS1718'/'FOLDING PARAMETERS',22X,'FORMAT (7E10.5)',17X,'ECIS1719INPC-382
     7'/'******************',54X,'ECIS1720'/' IF THE MAXIMUM POSITIVE VAINPC-383
     8LUE OF "NFOLD" READ IN COLUMNS 46-50 OF THE  ECIS1721'/' IDENTIFICINPC-384
     9ATION CARDS IS N, READ N TIMES:',31X,'ECIS1722'/7X,'1-10   "V"',6XINPC-385
     A,'PARAMETER',40X,'ECIS1723'/6X,'11-20   "R"',6X,'PARAMETER',40X,'EINPC-386
     BCIS1724'/6X,'21-30   "A"',6X,'PARAMETER',40X,'ECIS1725'/72X,'ECIS1INPC-387
     C726'/'FOR EXPLANATIONS, SEE "CARDS READ IN SUBROUTINE LECT".',18X,INPC-388
     D'ECIS1727'/''/'CARDS READ IN SUBROUTINE LDIS',43X,'ECIS1728'/'***INPC-389
     E**************************',43X,'ECIS1729'/' ONLY IF LO(10)=.TRUE.INPC-390
     F, OTHERWISE GO TO "CARDS READ IN SUBROUTINE DISP".ECIS1730'/72X,'EINPC-391
     GCIS1731'/'FOR EACH POTENTIAL:',53X,'ECIS1732'/72X,'ECIS1733'/'DISPINPC-392
     HERSION PARAMETERS (INTEGER)',9X,'FORMAT (14I5)',19X,'ECIS1734'/'**INPC-393
     I*****************************',41X,'ECIS1735'/7X,'1- 5   IPP(1)   INPC-394
     J1 ENERGIES IN LABORATORY SYSTEM, ANYTHING FOR',4X,'ECIS1736'/23X,'INPC-395
     KCENTRE OF MASS ENERGY.',27X,'ECIS1737')                           INPC-396
      WRITE (MW,1080)                                                   INPC-397
 1080 FORMAT (7X,'6-10   IPP(2)   N2 WITH |N2| POWER IN LARGE NEGATIVE EINPC-398
     1NERGY',6X,'ECIS1738'/23X,'CORRECTION TERM. FOR NEGATIVE VALUE, AN'INPC-399
     2,10X,'ECIS1739'/23X,'APPROXIMATION DESCRIBED BELOW IS USED',12X,'EINPC-400
     3CIS1740'/23X,'(SEE POSITIVE VALUES OF NV).',21X,'ECIS1741'/6X,'11-INPC-401
     415   IPP(3)   NV WITH |NV| POWER FOR VOLUME/SCALAR POTENTIAL.  ECIINPC-402
     5S1742'/6X,'16-20   IPP(4)   NS WITH |NS| POWER FOR SURFACE/VECTOR INPC-403
     6POTENTIAL. ECIS1743'/6X,'21-25   IPP(5)   NL WITH |NL| POWER FOR SINPC-404
     7PIN-ORBIT OR TENSOR',6X,'ECIS1744'/23X,'POTENTIAL. N2, NV, NS AND INPC-405
     8NL MUST BE EVEN.',7X,'ECIS1745'/6X,'26-30   IPP(6)   0: COEFFICIENINPC-406
     9TS COMPUTED.',24X,'ECIS1746'/23X,'ANY OTHER VALUE: COEFFICIENTS GIINPC-407
     AVEN BY THE USER. ECIS1747'/14X,'IPP(1) TO IPP(6) ARE EQUIVALENT TOINPC-408
     B PIP(1) TO PIP(3).',6X,'ECIS1748'/72X,'ECIS1749'/'DISPERSION PARAMINPC-409
     CETERS (FLOATING)',8X,'FORMAT (7F10.5)',17X,'ECIS1750'/'***********INPC-410
     D*********************',40X,'ECIS1751'/' IF IPP(6) IS 0 IN PREVIOUSINPC-411
     E CARD, OTHERWISE GO TO "END OF DO-LOOP',7X,'ECIS1752'/' FOR POTENTINPC-412
     FIALS".',55X,'ECIS1753'/7X,'1-10   PIP(4)   ENERGY FOR WHICH THE IMINPC-413
     GAGINARY DEPTHS ARE READ   ECIS1754'/23X,'(DEFAULT VALUE: ENERGY OFINPC-414
     H THE FIRST LEVEL USING  ECIS1755'/23X,'THIS POTENTIAL).',33X,'ECISINPC-415
     I1756'/6X,'11-20   PIP(5)   EF FERMI ENERGY. (DEFAULT VALUE -6.8 MEINPC-416
     JV).',7X,'ECIS1757'/6X,'21-30   PIP(6)   EP THRESHOLD ENERGY (DEFAUINPC-417
     KLT VALUE PIP(5)=EF).   ECIS1758')                                 INPC-418
      WRITE (MW,1081)                                                   INPC-419
 1081 FORMAT (6X,'31-40   PIP(7)   EA LARGE ENERGY STARTING VALUE ABOVE INPC-420
     1PIP(5)=EF)  ECIS1759'/6X,'41-50   PIP(8)   AVSO EXPONENTIAL DECREAINPC-421
     2SE OF REAL SPIN-ORBIT.',4X,'ECIS1760'/6X,'51-60   PIP(9)   AWSO LIINPC-422
     3NEAR DECREASE OF IMAGINARY SPIN-ORBIT.',4X,'ECIS1761'/6X,'61-70   INPC-423
     4PIP(10)  BV CONSTANT FOR VOLUME OR SCALAR POTENTIAL.',6X,'ECIS1762INPC-424
     5'/72X,'ECIS1763'/'NEXT CARD',31X,'FORMAT (7F10.5)',17X,'ECIS1764'/INPC-425
     6'*********',63X,'ECIS1765'/7X,'1-10   PIP(11)   ALP COEFFICIENT OFINPC-426
     7 LARGE POSITIVE ENERGY TERM   ECIS1766'/24X,'IN VOLUME POTENTIAL.'INPC-427
     8,28X,'ECIS1767'/24X,'SECOND BV'' PARAMETER FOR VOLUME POTENTIALS IINPC-428
     9F   ECIS1768'/24X,'NV<0 (DEFAULT VALUE 2*BV).',22X,'ECIS1769'/6X,'INPC-429
     A11-20   PIP(12)   CV EXPONENTIAL DECREASE (IN |E| FOR POSITIVE',4XINPC-430
     B,'ECIS1770'/24X,'VALUES OF CV OR IN SQRT|E| FOR NEGATIVE VALUES) EINPC-431
     CCIS1771'/24X,'FOR LARGE ENERGY TERMS OF VOLUME POTENTIALS OR  ECISINPC-432
     D1772'/24X,'FV FRACTION OF THE FIRST TERM IF NV<0.',10X,'ECIS1773'/INPC-433
     E6X,'21-30   PIP(13)   BS CONSTANT FOR SURFACE OR VECTOR POTENTIAL.INPC-434
     F',4X,'ECIS1774'/6X,'31-40   PIP(14)   CS EXPONENTIAL DECREASE OF AINPC-435
     G SURFACE POTENTIAL. ECIS1775'/24X,'SECOND BS'' PARAMETER FOR SURFAINPC-436
     HCE POTENTIALS IF  ECIS1776'/24X,'NS<0 (DEFAULT VALUE 2*BW).',22X,'INPC-437
     IECIS1777'/6X,'41-50   PIP(15)   CR NON-LOCALITY RANGE PARAMETER OFINPC-438
     J SURFACE',6X,'ECIS1778'/24X,'POTENTIAL OR FRACTION IN THE FIRST TEINPC-439
     KRM IF NS<0.ECIS1779')                                             INPC-440
      WRITE (MW,1082)                                                   INPC-441
 1082 FORMAT (6X,'51-60   PIP(16)   BL CONSTANT FOR SPIN-ORBIT OR TENSORINPC-442
     1 POTENTIAL. ECIS1780'/6X,'61-70   PIP(17)   AHF EXPONENTIAL DECREAINPC-443
     2SE OF H.F. REAL VOLUME',4X,'ECIS1781'/24X,'POTENTIAL.',38X,'ECIS17INPC-444
     382'/'  NOTE:  THERE ARE NINE COEFFICIENTS FOR DISPERSION, WW(1) TOINPC-445
     4 WW(9),',4X,'ECIS1783'/'  **** COMPUTED IN SUBROUTINE DISP AND STOINPC-446
     5RE FROM WV(14) TO WV(22). THE ECIS1784'/7X,'POTENTIALS GIVEN BEEN INPC-447
     6VVR(R), VVI(R), VSR(R), VSI(R), VLR(R) AND ECIS1785'/7X,'VLI(R), TINPC-448
     7HE POTENTIALS USED ARE:',33X,'ECIS1786'/8X,'WVR(R)=VRR(R)*(1+WW(3)INPC-449
     8)+WW(2)*VRI(R)',5X,'WVI(R)=VVI(R)*(1+WW(1))ECIS1787'/8X,'WSR(R)=VSINPC-450
     9R(R)*(1+WW(6))+WW(5)*VSI(R)',5X,'WSI(R)=VSI(R)*(1+WW(4))ECIS1788'/INPC-451
     A8X,'WLR(R)=VLR(R)*(1+WW(9))+WW(8)*VLI(R)',5X,'WLI(R)=VLI(R)*(1+WW(INPC-452
     B7))ECIS1789'/7X,'NOTE THAT WW(6) IS ZERO IN THE MODELS USED IN THEINPC-453
     C CODE.',10X,'ECIS1790'/7X,'NOTE ALSO THAT THE DEPTHS READ FOR THE INPC-454
     DREAL POTENTIALS MUST BE   ECIS1791'/''/7X,'THE ONES NEEDED AT THEINPC-455
     E REFERENCE ENERGY, WITHOUT THE DISPERSIVE  ECIS1792'/7X,'CONTRIBUTINPC-456
     FIONS INVOLVING THE ADDITION OF THE IMAGINARY FORM',7X,'ECIS1793'/7INPC-457
     GX,'FACTORS AND THE DEPTHS OF IMAGINARY POTENTIAL THOSE NEEDED AT',INPC-458
     H4X,'ECIS1794'/7X,'THE REFERENCE ENERGY.',44X,'ECIS1795'/72X,'ECIS1INPC-459
     I796'/'EXPLANATION OF DISPERSION PARAMETERS:',35X,'ECIS1797'/'*****INPC-460
     J********************************',35X,'ECIS1798'/'FOR POSITIVE VALINPC-461
     KUES OF NV: THE VOLUME IMAGINARY POTENTIAL AT THE ENERGY ECIS1799')INPC-462
      WRITE (MW,1083)                                                   INPC-463
 1083 FORMAT ('************************** E IS ASSUMED TO BE SUCH THAT "INPC-464
     1V(2*EF-E)=V(E)"ECIS1800'/4X,'WITH "V(E)=V*(E-EF)**NV/((E-EF)**NV+BINPC-465
     2V**NV)" WITH ADDITION FOR',6X,'ECIS1801'/4X,'E>EF+EA OF "ALP*[SQRTINPC-466
     3(E)+.5*SQRT(EF+EA)*(EF+EA-3*E)/E" (USUALLY',5X,'ECIS1802'/4X,'WRITINPC-467
     4TEN "ALP*[SQRT(E)+.5*(EF+EA)**(3/2)/E-1.5*SQRT(EF+EA)]") AND',4X,'INPC-468
     5ECIS1803'/4X,'FOR E<EF-EA OF "-V(E)*(EF-E-EA)**N2/((EF-E-EA)**N2+EINPC-469
     6A**N2)" WHERE   ECIS1804'/4X,'V(E) WAS GIVEN ABOVE; FOR NEGATIVE VINPC-470
     7ALUES OF N2, V(E) IS REPLACED   ECIS1805'/4X,'V(E) SHOULD BE REPLAINPC-471
     8CED BY V(-INFINITY) TO GIVE A GOOD',14X,'ECIS1806'/4X,'APPROXIMATIINPC-472
     9ON. THESE EXPRESSION CAN BE DAMPED BY A FACTOR',11X,'ECIS1807'/4X,INPC-473
     A'"EXP[-|CV|*SQRT(E-EF-EA)]" IF "CV"<0 AND "EXP[-CV*SQRT(EF-EA-E)]"INPC-474
     B   ECIS1808'/4X,'IF "CV">0. THE VALUE OF "V" IS SUCH THAT THIS GIVINPC-475
     CES THE STRENGTH',4X,'ECIS1809'/4X,'OF V(E) READ (INCLUDING LARGE PINPC-476
     DOSITIVE ENERGY TERM) AT THE ENERGY   ECIS1810'/4X,'PIP(4). THE REAINPC-477
     EL VOLUME POTENTIAL WITH THE SAME GEOMETRY, OBTAINED  ECIS1811'/4X,INPC-478
     F'BY DISPERSION RELATION (AS DESCRIBED BY C. MAHAUX AND R. SARTOR IINPC-479
     GN  ECIS1812'/4X,'NUCL. PHYS A528 (1991) 253), IS ADDED TO THE REALINPC-480
     H POTENTIAL.',8X,'ECIS1813'/'FOR POSITIVE VALUES OF NS: THE SURFACEINPC-481
     I IMAGINARY POTENTIAL "W(E)" IN THEECIS1814'/'*********************INPC-482
     J***** SCHROEDINGER FORMALISM IS ASSUMED TO HAVE THEECIS1815')     INPC-483
      WRITE (MW,1084)                                                   INPC-484
 1084 FORMAT (4X,'SAME ENERGY DEPENDENCE AS "V(E)" GIVEN ABOVE MULTIPLIEINPC-485
     1D BY',10X,'ECIS1816'/4X,'"EXP[-CS*|E-EF|-CR*(E-EF)]". THE NON-LOCAINPC-486
     2LITY RANGE PARAMETER "CR"  ECIS1817'/4X,'IS THE INVERSE OF "EB" GIINPC-487
     3VEN BY EQUATIONS (3.17) AND (3.18) OF',6X,'ECIS1818'/4X,'C. MAHAUXINPC-488
     4 AND R. SARTOR IN NUCL. PHYS A458 (1986) 25. THE REAL',6X,'ECIS181INPC-489
     59'/4X,'SURFACE POTENTIAL WITH THE SAME GEOMETRY, OBTAINED BY DISPEINPC-490
     6RSION',4X,'ECIS1820'/4X,'RELATION IS ADDED TO THE REAL POTENTIAL. INPC-491
     7THERE IS NOT THE DEFAULT   ECIS1821'/4X,'VALUE CR=.0125 TO ALLOW TINPC-492
     8O USE 0.',35X,'ECIS1822'/'FOR POSITIVE VALUES OF NL: THE SPIN-ORBIINPC-493
     9T IMAGINARY POTENTIAL IS',8X,'ECIS1823'/'*************************INPC-494
     A* "LS(E)=LS*(E-EF)**NL/((E-EF)**NL+BL**NL)"',4X,'ECIS1824'/4X,'WITINPC-495
     BH THE CONSTANT "LS" SUCH THAT "LS(E)" BE EQUAL TO THE STRENGTH   EINPC-496
     CCIS1825'/4X,'OF THE IMAGINARY SPIN-ORBIT AT THE ENERGY PIP(4). THEINPC-497
     D REAL',10X,'ECIS1826'/4X,'SPIN-ORBIT POTENTIAL WITH THE SAME GEOMEINPC-498
     ETRY, OBTAINED BY DISPERSION ECIS1827'/4X,'RELATION IS ADDED TO THEINPC-499
     F REAL POTENTIAL WHICH IS DAMPED BY A FACTOR ECIS1828'/4X,'"EXP[-AVINPC-500
     GSO*(E-EF)]".',48X,'ECIS1829'/'FOR NEGATIVE VALUES OF NV: THE VOLUMINPC-501
     HE IMAGINARY POTENTIAL IS ASSUMED TO ECIS1830'/'*******************INPC-502
     I******* BE THE SUM OF TWO TERMS SIMILAR TO "V(E)"',4X,'ECIS1831'/4INPC-503
     JX,'USED FOR POSITIVE VALUES, WITH THE POWER |NV| AND THE PARAMETERINPC-504
     KS BV ECIS1832')                                                   INPC-505
      WRITE (MW,1085)                                                   INPC-506
 1085 FORMAT (4X,'AND BV'' RESPECTIVELY. THE STRENGTHS ARE SUCH THAT THEINPC-507
     1 FIRST TERM IS ECIS1833'/4X,'FV TIMES THE VALUE READ AT THE ENERGYINPC-508
     2 PIP(3).',23X,'ECIS1834'/'FOR NEGATIVE VALUES OF NS: THE SURFACE IINPC-509
     3MAGINARY POTENTIAL IS THE',7X,'ECIS1835'/'************************INPC-510
     4** DIFFERENCE OF TWO TERMS SIMILAR TO THOSE USEDECIS1836'/4X,'FOR INPC-511
     5POSITIVE VALUES OF NV, WITH THE POWER |NS|, THE PARAMETERS BS,  ECINPC-512
     6IS1837'/4X,'BS'' RESPECTIVELY AND THE SAME STRENGTH.',29X,'ECIS183INPC-513
     78'/'FOR NEGATIVE VALUES OF NL: THE SPIN-ORBIT IMAGINARY POTENTIAL INPC-514
     8IS THE',4X,'ECIS1839'/'************************** SAME AS FOR POSIINPC-515
     9TIVE VALUES OF NL. THE REAL  ECIS1840'/4X,'POTENTIAL IS DAMPED BY INPC-516
     AA FACTOR "EXP[-AVSO*(E-EF)]" BUT NO',10X,'ECIS1841'/4X,'DISPERSIVEINPC-517
     B CONTRIBUTION IS ADDED.',35X,'ECIS1842'/'FOR ZERO VALUES OF NL: THINPC-518
     CE SPIN-ORBIT REAL POTENTIAL IS AS FOR NEGATIVE ECIS1843'/'********INPC-519
     D************** VALUES OF NL. THE IMAGINARY POTENTIAL IS LINEAR  ECINPC-520
     EIS1844'/4X,'IN ENERGY WITH THE COEFFICIENT "AWSO".',30X,'ECIS1845'INPC-521
     F/6X,'THE VECTOR DISPERSIVE POTENTIAL OF THE DIRAC FORMALISM IS TREINPC-522
     GATED ECIS1846'/4X,'AS THE SCALAR ONE WITHOUT LARGE ENERGY TERMS.',INPC-523
     H23X,'ECIS1847'/6X,'THE POWERS NV, NS, NL AND N2 MUST BE EVEN. INPUINPC-524
     IT OF 0 SUPPRESSES  ECIS1848'/4X,'THE USE OF DISPERSION RELATION FOINPC-525
     JR THE CORRESPONDING POTENTIAL.',5X,'ECIS1849'/72X,'ECIS1850'/72X,'INPC-526
     KECIS1851'/'CARDS READ IN SUBROUTINE DISP',43X,'ECIS1852')         INPC-527
      WRITE (MW,1086)                                                   INPC-528
 1086 FORMAT ('*****************************',43X,'ECIS1853'/' ONLY IF LINPC-529
     1O(10)=.TRUE. AND IF FOR A LEVEL FOR WHICH THE DISPERSION',6X,'ECISINPC-530
     21854'/'PARAMETERS WERE READ WITH IPP(6) NOT 0, OTHERWISE GO TO "CAINPC-531
     3RDS READ IN  ECIS1855'/''/'SUBROUTINE EVAL". FOR EACH LEVEL:',39XINPC-532
     4,'ECIS1856'/72X,'ECIS1857'/'DISPERSION COEFFICIENTS',17X,'FORMAT (INPC-533
     56F10.5)',17X,'ECIS1858'/'***********************',49X,'ECIS1859'/7INPC-534
     6X,'1-10   WW(1)',5X,'INCREASE OF VOLUME/SCALAR IMAGINARY POTENTIALINPC-535
     7,  ECIS1860'/6X,'11-20   WW(2)',5X,'CORRECTION TO VOLUME/SCALAR REINPC-536
     8AL POTENTIAL,',5X,'ECIS1861'/6X,'21-30   WW(3)',5X,'INCREASE OF VOINPC-537
     9LUME/SCALAR REAL POTENTIAL,',7X,'ECIS1862'/6X,'31-40   WW(4)',5X,'INPC-538
     AINCREASE OF SURFACE/VECTOR IMAGINARY POTENTIAL, ECIS1863'/6X,'41-5INPC-539
     B0   WW(5)',5X,'CORRECTION TO SURFACE/VECTOR REAL POTENTIAL,',4X,'EINPC-540
     CCIS1864'/6X,'51-60   WW(6)',5X,'INCREASE OF SURFACE/VECTOR REAL POINPC-541
     DTENTIAL,',6X,'ECIS1865'/72X,'ECIS1866'/'ON NEXT CARD:',27X,'FORMATINPC-542
     E (3F10.5)',17X,'ECIS1867'/'*************',59X,'ECIS1868'/7X,'1-10 INPC-543
     F  WW(7)',5X,'INCREASE OF SP-O/TENSOR IMAGINARY POTENTIAL,',4X,'ECIINPC-544
     GS1869'/6X,'11-20   WW(8)',5X,'INCREASE OF SP-O/TENSOR REAL POTENTIINPC-545
     HAL.',9X,'ECIS1870'/6X,'21-30   WW(9)',5X,'CORRECTION TO SP-O/TENSOINPC-546
     IR REAL POTENTIAL.',7X,'ECIS1871'/'  NOTE:  SUCH SETS OF COEFFICIENINPC-547
     JTS HAVE TO BE GIVEN FOR ALL LEVELS USINGECIS1872')                INPC-548
      WRITE (MW,1087)                                                   INPC-549
 1087 FORMAT ('  ****  A POTENTIAL FOR WHICH IPP(6) IS NOT 0. FOR A COMPINPC-550
     1OUND CONTINUUM ECIS1873'/8X,'FOUR SUCH SETS FOR DIFFERENT ENERGIESINPC-551
     2 HAVE TO BE GIVEN FOR',6X,'ECIS1874'/8X,'INTERPOLATION AFTER THE FINPC-552
     3OLLOWING CARD:',25X,'ECIS1875'/72X,'ECIS1876'/'ENERGIES FOR INTERPINPC-553
     4OLATION',14X,'FORMAT (4F10.5)',17X,'ECIS1877'/'*******************INPC-554
     5*******',46X,'ECIS1878'/' ENERGIES FOR WHICH THE FOUR FOLLOWING SEINPC-555
     6TS OF COEFFICIENTS APPLY.',6X,'ECIS1879'/7X,'1-10   EN(1)',5X,'ENEINPC-556
     7RGY OF THE FIRST SET.',24X,'ECIS1880'/6X,'11-20   EN(2)',5X,'ENERGINPC-557
     8Y OF THE SECOND SET.',23X,'ECIS1881'/6X,'21-30   EN(3)',5X,'ENERGYINPC-558
     9 OF THE THIRD SET.',24X,'ECIS1882'/6X,'31-40   EN(4)',5X,'ENERGY OINPC-559
     AF THE FOURTH SET.',23X,'ECIS1883'/72X,'ECIS1884'/'FOR A COMPUTATIOINPC-560
     BN CHANGING ONLY ENERGY AND SOME PARAMETERS, THESE DATA  ECIS1885'/INPC-561
     C'MUST BE READ AGAIN. THESE DATA CANNOT BE IN SEARCH.',21X,'ECIS188INPC-562
     D6'/72X,'ECIS1887'/72X,'ECIS1888'/'CARDS READ IN SUBROUTINE EVAL',4INPC-563
     E3X,'ECIS1889'/'*****************************',43X,'ECIS1890'/3X,'IINPC-564
     FF LO(34)=.TRUE., OTHERWISE GO TO THE BEGINNING OF ANOTHER DATA SETINPC-565
     G. ECIS1891'/72X,'ECIS1892'/'NUMBER OF CHANGES',23X,'FORMAT (2L1,I3INPC-566
     H,I5,F10.5)',8X,'ECIS1893'/'*****************',55X,'ECIS1894'/10X,'INPC-567
     I1   LO(34)',5X,'.TRUE. FOR OTHER CALLS TO THIS SUBROUTINE',6X,'ECIINPC-568
     JS1895'/25X,'.FALSE. FOR THE LAST CALL.',21X,'ECIS1896'/10X,'2   LXINPC-569
     K',9X,'.TRUE. TO READ ANOTHER TITLE',19X,'ECIS1897')               INPC-570
      WRITE (MW,1088)                                                   INPC-571
 1088 FORMAT (7X,'3- 5   NIN',8X,'NUMBER OF PARAMETERS TO CHANGE.',16X,'INPC-572
     1ECIS1898'/7X,'6-10   NEX',8X,'INDICATION FOR THE USE OF THE VALUESINPC-573
     2 TO BE READECIS1899'/27X,'>0  INCREMENTS',31X,'ECIS1900'/27X,'=0  INPC-574
     3NEW VALUES',31X,'ECIS1901'/27X,'<0  PERCENTAGE OF INCREASE',19X,'EINPC-575
     4CIS1902'/6X,'11-20   ECH',8X,'NEW SEARCH SCALE. (DEFAULT VALUE 20.INPC-576
     5)',10X,'ECIS1903'/72X,'ECIS1904'/'CARD 1',34X,'FORMAT (18A4)',19X,INPC-577
     6'ECIS1905'/'******',66X,'ECIS1906'/'IF LX=.TRUE.  NEW TITLE WHICH INPC-578
     7WILL BE PRINTED AS HEADING OF RESULTS.',4X,'ECIS1907'/72X,'ECIS190INPC-579
     88'/'IDENTIFICATIONS',25X,'FORMAT (14I5)',19X,'ECIS1909'/'*********INPC-580
     9******',57X,'ECIS1910'/7X,'1- 5   INDEX OF FIRST PARAMETER.',33X,'INPC-581
     AECIS1911'/7X,'6-10   INDEX OF SECOND PARAMETER.',32X,'ECIS1912'/6XINPC-582
     B,'11-15   ........................',34X,'ECIS1913'/10X,'UP TO NIN INPC-583
     CVALUES, EVENTUALLY ON OTHER CARDS, STARTING IN 1-5. ECIS1914'/'  NINPC-584
     DOTE:  A NEGATIVE VALUE IS REPLACED BY ZERO.',26X,'ECIS1915'/'  ***INPC-585
     E*  INDEX ZERO IS THE TOTAL ENERGY.',33X,'ECIS1916'/9X,'THE OTHER IINPC-586
     FNDICES ARE THE SAME AS THE ONES USED FOR SEARCH,',4X,'ECIS1917'/8XINPC-587
     G,'WITH THE LIMITATIONS ALREADY DESCRIBED.',25X,'ECIS1918'/72X,'ECIINPC-588
     HS1919'/''/'NEW VALUES',30X,'FORMAT (7F10.5)',17X,'ECIS1920'/'****INPC-589
     I******',62X,'ECIS1921'/7X,'1-10   FIRST NEW PARAMETER.',38X,'ECIS1INPC-590
     J922'/6X,'11-20   SECOND NEW PARAMETER.',37X,'ECIS1923'/6X,'21-30  INPC-591
     K ....................',38X,'ECIS1924')                            INPC-592
      WRITE (MW,1089)                                                   INPC-593
 1089 FORMAT ('  IF LO(34)=.TRUE. GO AGAIN TO "CARDS READ IN SUBROUTINE INPC-594
     1EVAL".',9X,'ECIS1925'/'  IF LO(34)=.FALSE. GO TO THE BEGINNING OF INPC-595
     2NEXT DATA SET.',15X,'ECIS1926'/'  NOTE:  THERE ARE DIFFERENT USES INPC-596
     3OF THIS POSSIBILITY:',18X,'ECIS1927'/'  *****  1) AS A SEARCH STOPINPC-597
     4S USUALLY BEFORE THE MINIMUM, IT CAN BE',5X,'ECIS1928'/8X,'REFINEDINPC-598
     5 BY USING NEX POSITIVE AND INTRODUCING AN INCREMENT "0." ECIS1929'INPC-599
     6/8X,'FOR ANY PARAMETER, IN SEARCH OR NOT IN SEARCH.',18X,'ECIS1930INPC-600
     7'/9X,'2) WHEN SEARCHING THE MINIMUM OF THE CHI2 AS A FUNCTION OF SINPC-601
     8OMEECIS1931'/8X,'FIXED PARAMETER. THE NEXT SEARCH STARTS WITH THE INPC-602
     9VALUES OF THE  ECIS1932'/8X,'PARAMETERS IN SEARCH OBTAINED IN THE INPC-603
     ALAST SEARCH.',15X,'ECIS1933'/9X,'3) WHEN SOME RESULT MUST BE OBTAIINPC-604
     BNED FOR DIFFERENT VALUES OF   ECIS1934'/8X,'THE PARAMETERS.',49X,'INPC-605
     CECIS1935'/72X,'ECIS1936'/72X,'ECIS1937'/'RESTART INPUT: CARDS READINPC-606
     D IN SUBROUTINE REST',28X,'ECIS1938'/'*****************************INPC-607
     E***************',28X,'ECIS1939'/72X,'ECIS1940'/'RESTART CONDITIONSINPC-608
     F',22X,'FORMAT (L1,I4,5X,2F10.5)',8X,'ECIS1941'/'******************INPC-609
     G',54X,'ECIS1942'/10X,'1   LO(35)  THE ONLY CONTROL WHICH CAN BE CHINPC-610
     HANGED, ALL THE',4X,'ECIS1943'/14X,'OTHERS BEING THOSE OF LAST RUN.INPC-611
     I',27X,'ECIS1944'/7X,'2- 5   NEW MAXIMUM NUMBER OF EVALUATIONS.',24INPC-612
     JX,'ECIS1945'/6X,'11-20   NEW VALUE OF ECH.',41X,'ECIS1946'/6X,'11-INPC-613
     K20   NEW VALUE OF RAP.',41X,'ECIS1947')                           INPC-614
      WRITE (MW,1090)                                                   INPC-615
 1090 FORMAT (14X,'IF THEY ARE LESS THAN 1., ECH OR RAP ARE NOT CHANGED.INPC-616
     1',5X,'ECIS1948'/72X,'ECIS1949'/72X,'ECIS1950'/'*******************INPC-617
     2*****************************************************ECIS1951'/72XINPC-618
     3,'ECIS1952'/30X,'*******************',23X,'ECIS1953'/30X,'*  NEXT INPC-619
     4DATA SET  *',23X,'ECIS1954'/30X,'*******************',23X,'ECIS195INPC-620
     55'/72X,'ECIS1956'/6X,'"FIN" IN COLUMNS 1-3 TO STOP THE JOB WITHOUTINPC-621
     6 DIAGNOSTIC.',10X,'ECIS1957'/72X,'ECIS1958'/'FOR ANY TROUBLE, WRITINPC-622
     7E (AND EVEN SEND LISTINGS OF INPUT AND OUTPUT) TO: ECIS1959'/72X,'INPC-623
     8ECIS1960'/21X,'JACQUES RAYNAL/4 RUE DU BIEF',23X,'ECIS1961'/21X,'9INPC-624
     91380 CHILLY-MAZARIN/FRANCE',24X,'ECIS1962'/72X,'ECIS1963'/21X,'TELINPC-625
     A: 33-(0)-169096775',30X,'ECIS1964'/21X,'E-MAIL: JACQUES.RAYNAL@CEAINPC-626
     B.FR',22X,'ECIS1965'/72X,'ECIS1966')                               INPC-627
      RETURN                                                            INPC-628
      END                                                               INPC-629
C 29/09/12                                                      ECIS12  LECL-000
      SUBROUTINE LECL(NCOLX,NCOLL,NCONT,IDT,LO,IPI,IPH,WV,IPP,NPA,PA,NA,LECL-001
     1NB,NIMAX,NBET)                                                    LECL-002
C INPUT OF LEVEL DESCRIPTIONS.                                          LECL-003
C INPUT:     NCOLX:   TOTAL NUMBER OF NUCLEAR STATES                    LECL-004
C            NCOLL:   NUMBER OF COUPLED NUCLEAR STATES                  LECL-005
C            NCONT:   NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS          LECL-006
C            IDT:     FREE SPACE IN NPA,PA                              LECL-007
C            LO(I):   LOGICAL CONTROLS:                                 LECL-008
C               LO(1)  =.TRUE. ROTATIONAL MODEL-(.F.:VIBRATIONAL MODEL).LECL-009
C               LO(2)  =.TRUE. SECOND ORDER VIBRATIONAL OR CONSTRAINED  LECL-010
C                              ASYMMETRIC ROTATIONAL MODEL.             LECL-011
C               LO(3)  =.TRUE. ANHARMONIC VIBRATIONAL OR ASYMMETRIC     LECL-012
C                              ROTATIONAL MODEL.                        LECL-013
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    LECL-014
C               LO(8)  =.TRUE. RELATIVISTIC KINEMATICS.                 LECL-015
C               LO(10) =.TRUE. DISPERSION RELATIONS FOR POTENTIALS.     LECL-016
C               LO(15) =.TRUE. REDUCED NUCLEAR MATRIX ELEMENTS READ.    LECL-017
C               LO(18) =.TRUE. PROJECTILE-TARGET ANTISYMMETRISATION.    LECL-018
C               LO(98) =.TRUE. Q ADDED TO THE MASS OF RESIDUAL NUCLEUS  LECL-019
C                              OR OUTGOING PARTICLE.                    LECL-020
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      LECL-021
C               LO(109)=.TRUE. FOR DIRAC POTENTIALS.                    LECL-022
C               LO(122)=.TRUE. IDENTICAL PARTICLES WITHOUT SPIN.        LECL-023
C               LO(123)=.TRUE. IDENTICAL PARTICLES WITH SPIN.           LECL-024
C OUTPUT:    IPI:     DESCRIPTION OF LEVELS IN IPI(J,*):                LECL-025
C                     PARITY (0 FOR + AND 1 FOR -) FOR J=1.             LECL-026
C                     MULTIPLICITY OF INCIDENT PARTICLE FOR J=2.        LECL-027
C                     MULTIPLICITY OF THE TARGET FOR J=3.               LECL-028
C                     PRODUCT OF CHARGES FOR J=4.                       LECL-029
C                     INDEX OF POTENTIAL FOR J=5.                       LECL-030
C            IPH:     DESCRIPTION OF VIBRATIONAL LEVELS. FOR VIBRATIONALLECL-031
C                     MODEL, IPH(I,J) IS THE NUMBER OF PHONONS FOR      LECL-032
C                     I=1, J=1,NCOLL. IF IPH(1,J) IS 3, THE STATE       LECL-033
C                     IS A MIXTURE OF 1 AND 2-PHONONS STATES.           LECL-034
C                     FOR ROTATIONAL MODEL, IPH(1,J) IS 1 FOR A         LECL-035
C                     VIBRATIONAL BAND AND 2 FOR A MIXTURE WITH THE     LECL-036
C                     GROUND STATE BAND. SINGLE PHONON OR ADDRESS OF    LECL-037
C                     THE DESCRIPTION OF MIXED STATES IN IPH(2,J).      LECL-038
C            WV:      DESCRIPTION OF THE LEVELS IN WV(J,*):             LECL-039
C                     MASS OF INCIDENT PARTICLE FOR J=1.                LECL-040
C                     MASS OF THE TARGET FOR J=2.                       LECL-041
C                     ENERGY IN THE CENTRE OF MASS IN MEV FOR J=3.      LECL-042
C                     (TEMPORARY) PARTICLE EXCITATION FRACTION FOR J=4. LECL-043
C                     ENERGY IN THE LABORATORY SYSTEM IN MEV FOR J=13.  LECL-044
C            IPP(I,J):FIRST LEVEL USING POTENTIAL J FOR I=1 (TEMPORARY).LECL-045
C                     -1 TO READ DISPERSION PARAMETERS FOR I=2.         LECL-046
C            NPA,PA:  STORAGE OF NUCLEAR PARAMETERS EQUIVALENT BY CALL. LECL-047
C            NA:      NUMBER OF INTEGER PARAMETER INFORMATIONS.         LECL-048
C            NB:      STORAGE IN ROAM FOR ASYMMETRIC ROTATION.          LECL-049
C            NIMAX:   TWICE MAXIMUM SUM OF SPINS TARGET+PARTICLE.       LECL-050
C            NBET:    NUMBER OF DIFFERENT PHONONS.                      LECL-051
C            LO:      LOGICAL CONTROLS, DEFINED HERE:                   LECL-052
C                     LO(122) AND LO(123).                              LECL-053
C                                                                       LECL-054
C FOR THE COMMON  /COUPL/ SEE CALX.                                     LECL-055
C FOR THE COMMON  /DCONS/ SEE CALC.                                     LECL-056
C FOR THE COMMON  /POTE2/ SEE REDM.                                     LECL-057
C                                                                       LECL-058
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     LECL-059
C  CM:        ATOMIC MASS IN MEV.                                       LECL-060
C   USED:     CM.                                                       LECL-061
C                                                                       LECL-062
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     LECL-063
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             LECL-064
C  NVA:       NUMBER OF NUCLEAR PARAMETERS.                             LECL-065
C   DEFINED:  NVA.                                                      LECL-066
C   USED:     NPP.                                                      LECL-067
C                                                                       LECL-068
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     LECL-069
C  NPX:       NUMBER OF POTENTIALS TAKING INTO ACCOUNT DISPERSION.      LECL-070
C   DEFINED:  NTX.                                                      LECL-071
C                                                                       LECL-072
C***********************************************************************LECL-073
      IMPLICIT REAL*8 (A-H,O-Z)                                         LECL-074
      LOGICAL LO(150)                                                   LECL-075
      CHARACTER*1 CSIGM,SPI                                             LECL-076
      DIMENSION IPI(11,*),IPH(2,*),WV(22,NCOLX),IPP(34,*),NPA(2,*),PA(*)LECL-077
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   LECL-078
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            LECL-079
      COMMON /POTE2/ ITY(12),INVT,INTV,INSL,NPX                         LECL-080
      COMMON /INOUT/ MR,MW,MS                                           LECL-081
      DATA CSIGM /'-'/                                                  LECL-082
C OUTPUT OF NUCLEAR MODEL.                                              LECL-083
      IF (LO(7)) GO TO 3                                                LECL-084
      IF (LO(1)) GO TO 2                                                LECL-085
      IF (LO(3)) GO TO 1                                                LECL-086
      IF (.NOT.LO(2)) WRITE (MW,1000)                                   LECL-087
      IF (LO(2)) WRITE (MW,1001)                                        LECL-088
      GO TO 4                                                           LECL-089
    1 WRITE (MW,1002)                                                   LECL-090
      IF (.NOT.LO(15)) GO TO 29                                         LECL-091
      GO TO 4                                                           LECL-092
    2 IF (.NOT.LO(3)) WRITE (MW,1003)                                   LECL-093
      IF (LO(3)) WRITE (MW,1004)                                        LECL-094
      GO TO 4                                                           LECL-095
    3 WRITE (MW,1005)                                                   LECL-096
C INPUT OF LEVEL DESCRIPTION.                                           LECL-097
    4 NVA=0                                                             LECL-098
      NA=0                                                              LECL-099
      NB=0                                                              LECL-100
      NBET=0                                                            LECL-101
      NIMAX=0                                                           LECL-102
      DO 5 IV=1,NPP                                                     LECL-103
      IPP(1,IV)=-1                                                      LECL-104
    5 IPP(2,IV)=-1                                                      LECL-105
      IF (LO(98).AND.LO(8)) WRITE (MW,1006)                             LECL-106
      DO 27 IV=1,NCOLX                                                  LECL-107
      READ (MR,1007) SP2,N,K,SPI,E,SP1,WV(1,IV),WV(2,IV),SP3,WV(4,IV)   LECL-108
      IPI(2,IV)=1+IDINT(2.00001D0*SP1)                                  LECL-109
      IPI(3,IV)=1+IDINT(2.00001D0*SP2)                                  LECL-110
      IPI(4,IV)=IDINT(SP3)                                              LECL-111
      IF (IV.NE.1) GO TO 8                                              LECL-112
      WV(13,1)=E                                                        LECL-113
      IF (K.EQ.0) K=1                                                   LECL-114
      IF (LO(18).AND.((IPI(3,1).NE.IPI(2,1)).OR.(SPI.EQ.CSIGM).OR.LO(100LECL-115
     1))) GO TO 30                                                      LECL-116
      LO(122)=LO(18).AND.IPI(2,1)*IPI(3,1).EQ.1                         LECL-117
      LO(123)=LO(18).AND.IPI(2,1)*IPI(3,1).NE.1                         LECL-118
      IF (LO(8)) GO TO 6                                                LECL-119
      WV(3,1)=E*WV(2,1)/(WV(1,1)+WV(2,1))                               LECL-120
      WV(4,1)=DSQRT(CK*WV(3,1)*WV(1,1)*WV(2,1)/(WV(1,1)+WV(2,1)))       LECL-121
      GO TO 7                                                           LECL-122
C RELATIVISTIC C.-M. ENERGY ECM=SQRT((M1+M2)**2+2*M2*ELAB))-M1-M2.      LECL-123
    6 WV(3,1)=CM*(DSQRT((WV(1,1)+WV(2,1))**2+2.D0*WV(2,1)*E/CM)-WV(1,1)-LECL-124
     1WV(2,1))                                                          LECL-125
      WV(4,1)=DSQRT(0.125D0*CK*WV(3,1)*(WV(3,1)/CM+2.D0*WV(1,1)+2.D0*WV(LECL-126
     12,1))*(WV(3,1)/CM+2.D0*WV(1,1))*(WV(3,1)/CM+2.D0*WV(2,1)))/(WV(3,1LECL-127
     2)/CM+WV(1,1)+WV(2,1))                                             LECL-128
    7 AM3=WV(2,1)**.33333333333333D0                                    LECL-129
      BM3=WV(1,1)**.33333333333333D0                                    LECL-130
      WRITE (MW,1008) WV(2,1),SP3,AM3,WV(1,1),SP1,BM3                   LECL-131
      WRITE (MW,1009) E,WV(3,1)                                         LECL-132
      E=0.D0                                                            LECL-133
      GO TO 13                                                          LECL-134
    8 IF (WV(1,IV).EQ.0.D0) GO TO 9                                     LECL-135
      AM3=WV(2,IV)**.33333333333333D0                                   LECL-136
      BM3=WV(1,IV)**.33333333333333D0                                   LECL-137
      WRITE (MW,1008) WV(2,IV),SP3,AM3,WV(1,IV),SP1,BM3                 LECL-138
      GO TO 10                                                          LECL-139
    9 WV(1,IV)=WV(1,IV-1)                                               LECL-140
      WV(2,IV)=WV(2,IV-1)                                               LECL-141
      IPI(2,IV)=IPI(2,IV-1)                                             LECL-142
      IPI(4,IV)=IPI(4,IV-1)                                             LECL-143
      SP2=0.5D0*DFLOAT(IPI(3,IV)-1)                                     LECL-144
      SP3=IPI(4,IV)                                                     LECL-145
   10 WV(3,IV)=WV(3,1)-E                                                LECL-146
      IF (.NOT.(LO(98).AND.LO(8))) GO TO 11                             LECL-147
      EP=0.D0                                                           LECL-148
      ET=E-EP                                                           LECL-149
      WV(1,IV)=WV(1,1)+(WV(2,1)-WV(2,IV))+EP/CM                         LECL-150
      WV(2,IV)=WV(2,1)+(WV(1,1)-WV(1,IV))+ET/CM                         LECL-151
   11 IF (K.EQ.0) K=IPI(5,IV-1)                                         LECL-152
      IF (LO(8)) GO TO 12                                               LECL-153
      WV(13,IV)=WV(3,IV)*(WV(1,IV)+WV(2,IV))/WV(2,IV)                   LECL-154
      GO TO 13                                                          LECL-155
   12 WV(13,IV)=WV(3,IV)*(WV(3,IV)/(2.D0*CM)+WV(1,IV)+WV(2,IV))/WV(2,IV)LECL-156
   13 IF (LO(109).AND.IPI(2,IV).NE.2) GO TO 31                          LECL-157
      IF (K.GT.NPP.OR.K.LE.0) GO TO 32                                  LECL-158
      IPI(5,IV)=K                                                       LECL-159
      IF (IPP(1,K).EQ.-1) IPP(1,K)=IV                                   LECL-160
      NIMAX=MAX0(NIMAX,IPI(2,IV)+IPI(3,IV))                             LECL-161
      IPI(1,IV)=0                                                       LECL-162
      IF (SPI.EQ.CSIGM) IPI(1,IV)=1                                     LECL-163
      IF (IV.LE.NCOLL) GO TO 15                                         LECL-164
C UNCOUPLED STATES FOR COMPOUND NUCLEUS.                                LECL-165
      IF (NCONT+IV.GT.NCOLX) GO TO 14                                   LECL-166
      WRITE (MW,1010) IV,SP2,SPI,E,K                                    LECL-167
      GO TO 27                                                          LECL-168
C CONTINUUM FOR COMPOUND NUCLEUS.                                       LECL-169
   14 WRITE (MW,1011) IV,SP2,SPI,E,K                                    LECL-170
      GO TO 27                                                          LECL-171
   15 IF (LO(7)) GO TO 17                                               LECL-172
      NNPA=0                                                            LECL-173
      NNVA=0                                                            LECL-174
      IF ((LO(1).EQV.(N.EQ.0)).OR.(LO(3).AND.(.NOT.LO(1)))) GO TO 16    LECL-175
C INPUT OF PHONONS IN HARMONIC VIBRATIONAL OR SYMMETRIC ROTATIONAL MODELLECL-176
      READ (MR,1012) IPH(1,IV),IPH(2,IV),I2,I3                          LECL-177
      NBET=MAX0(NBET,IPH(2,IV),I2,I3)                                   LECL-178
      M=IPH(1,IV)+1                                                     LECL-179
      GO TO ( 17 , 19 , 20 , 20 ) , M                                   LECL-180
C GROUND STATE.                                                         LECL-181
   16 IPH(1,IV)=0                                                       LECL-182
      IF (LO(1)) GO TO 18                                               LECL-183
   17 WRITE (MW,1013) IV,SP2,SPI,E,K                                    LECL-184
      GO TO 27                                                          LECL-185
   18 WRITE (MW,1014) IV,SP2,SPI,E,K                                    LECL-186
      IF (.NOT.LO(3)) GO TO 27                                          LECL-187
      NNVA=(IPI(3,IV)-1)/4                                              LECL-188
      GO TO 21                                                          LECL-189
C 1 PHONON STATE.                                                       LECL-190
   19 IF (.NOT.LO(1)) WRITE (MW,1015) IV,SP2,SPI,E,K,IPH(2,IV)          LECL-191
      IF (LO(1)) WRITE (MW,1016) IV,SP2,SPI,E,K,IPH(2,IV)               LECL-192
      GO TO 27                                                          LECL-193
   20 NNPA=IPH(1,IV)-1                                                  LECL-194
      NNVA=M-2                                                          LECL-195
      IF (.NOT.LO(3)) NNVA=NNVA+1                                       LECL-196
   21 IF (NA+NVA+NNPA+2.GT.IDT) CALL MEMO('LECL',NA+NVA+NNPA+2,IDT)     LECL-197
      IF ((NVA.EQ.0).OR.(NNPA.EQ.0)) GO TO 23                           LECL-198
      DO 22 I=NVA,1,-1                                                  LECL-199
   22 PA(NNPA+NA+I)=PA(NA+I)                                            LECL-200
   23 IF (LO(3)) GO TO 26                                               LECL-201
      WRITE (MW,1013) IV,SP2,SPI,E,K                                    LECL-202
C 2 PHONON STATE.                                                       LECL-203
      NA=NA+1                                                           LECL-204
      NPA(1,NA)=IPH(2,IV)                                               LECL-205
      IF (LO(1)) GO TO 25                                               LECL-206
      IPH(2,IV)=NA                                                      LECL-207
      NPA(2,NA)=I2                                                      LECL-208
      IF (M.EQ.4) GO TO 24                                              LECL-209
      WRITE (MW,1017) NPA(1,NA),NPA(2,NA)                               LECL-210
      GO TO 27                                                          LECL-211
C MIXTURE OF 1 PHONON AND 2 PHONON STATE - INPUT OF MIXING PARAMETER.   LECL-212
   24 NA=NA+1                                                           LECL-213
      NPA(1,NA)=I3                                                      LECL-214
   25 NVA=NVA+1                                                         LECL-215
      NPA(2,NA)=NVA                                                     LECL-216
      READ (MR,1018) PA(NA+NVA)                                         LECL-217
      B1=0.0174532925199433D0*PA(NA+NVA)                                LECL-218
      C1=DCOS(B1)                                                       LECL-219
      C3=DSIN(B1)                                                       LECL-220
      IF (.NOT.LO(1)) WRITE (MW,1019) PA(NA+NVA),C3,NPA(1,NA-1),I2,C1,I3LECL-221
      IF (LO(1)) WRITE (MW,1020) PA(NA+NVA),C3,NPA(1,NA),C1             LECL-222
      GO TO 27                                                          LECL-223
C ASYMMETRIC ROTATIONAL MODEL - INPUT OF MIXING PARAMETERS.             LECL-224
   26 IF (.NOT.LO(1)) GO TO 27                                          LECL-225
      IPH(1,IV)=NNVA                                                    LECL-226
      IPH(2,IV)=NVA                                                     LECL-227
      NB=NB+NNVA+1                                                      LECL-228
      IF (NNVA.EQ.0) GO TO 27                                           LECL-229
      READ (MR,1018) (PA(NA+NVA+J),J=1,NNVA)                            LECL-230
      WRITE (MW,1021) (PA(NA+NVA+J),J=1,NNVA)                           LECL-231
      NVA=NVA+NNVA                                                      LECL-232
   27 IF (LO(1).AND.LO(2).AND.LO(3)) NVA=MAX0(NVA,5)                    LECL-233
      NPX=0                                                             LECL-234
      DO 28 I=1,NCOLL                                                   LECL-235
      IPI(11,I)=IPI(5,I)                                                LECL-236
      IF (LO(10)) IPI(11,I)=I                                           LECL-237
   28 NPX=MAX0(NPX,IPI(11,I))                                           LECL-238
      RETURN                                                            LECL-239
   29 WRITE (MW,1022)                                                   LECL-240
      GO TO 33                                                          LECL-241
   30 WRITE (MW,1023)                                                   LECL-242
      GO TO 33                                                          LECL-243
   31 SP1=0.5D0*DFLOAT(IPI(2,IV)-1)                                     LECL-244
      WRITE (MW,1024) SP1                                               LECL-245
      GO TO 33                                                          LECL-246
   32 WRITE (MW,1025) K,NPP                                             LECL-247
   33 WRITE (MW,1026)                                                   LECL-248
      STOP                                                              LECL-249
 1000 FORMAT (/' FIRST ORDER VIBRATIONAL MODEL.'/)                      LECL-250
 1001 FORMAT (/' SECOND ORDER VIBRATIONAL MODEL.'/)                     LECL-251
 1002 FORMAT (/' ANHARMONIC VIBRATIONAL MODEL.'/)                       LECL-252
 1003 FORMAT (/' SYMMETRIC ROTATIONAL MODEL.'/)                         LECL-253
 1004 FORMAT (/' ASYMMETRIC ROTATIONAL MODEL.'/)                        LECL-254
 1005 FORMAT (/' EXTERNAL FORM FACTOR MODEL.'/)                         LECL-255
 1006 FORMAT (/' MASSES OF INPUT FOR EXCITED STATES MODIFIED BY "Q" VALULECL-256
     1E.'/)                                                             LECL-257
 1007 FORMAT (F5.2,2I2,A1,6F10.5)                                       LECL-258
 1008 FORMAT (/' TARGET',14X,'MASS =',F10.5,11X,'PRODUCT OF CHARGES =',FLECL-259
     16.0,11X,'AT**1/3 =',1P,D15.6,0P/' INCIDENT PARTICLE',3X,'MASS =',FLECL-260
     210.5,3X,3X,'SPIN =',F4.1,3X,'AP**1/3 =',1P,D15.6)                 LECL-261
 1009 FORMAT (10X,'ENERGY(LAB) =',1P,D15.6,' MEV',10X,'ENERGY(C. M.) =',LECL-262
     1D15.6,' MEV.'/)                                                   LECL-263
 1010 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-264
     14,' MEV',10X,'POTENTIAL',I5,6X,'***** UNCOUPLED STATE *****')     LECL-265
 1011 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-266
     14,' MEV',10X,'POTENTIAL',I5,6X,'***** START OF A CONTINUUM *****')LECL-267
 1012 FORMAT (14I5)                                                     LECL-268
 1013 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-269
     14,' MEV',10X,'POTENTIAL',I5)                                      LECL-270
 1014 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-271
     14,' MEV',10X,'POTENTIAL',I5,6X,'GROUND STATE BAND.')              LECL-272
 1015 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-273
     14,' MEV',10X,'POTENTIAL',I5,6X,' PHONON STATE WITH PHONON',I3)    LECL-274
 1016 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-275
     14,' MEV',10X,'POTENTIAL',I5,6X,'VIBRATIONAL BAND OF PHONON',I3)   LECL-276
 1017 FORMAT (23X,'2 PHONONS STATE, WITH PHONONS',I3,' AND',I3)         LECL-277
 1018 FORMAT (7F10.5)                                                   LECL-278
 1019 FORMAT (23X,'MIXING OF 1 AND 2 PHONON STATES WITH',F9.3,' DEGREES'LECL-279
     1/23X,F10.5,' 2 PHONONS STATE, WITH PHONONS',I3,' AND',I3,'  + ',F1LECL-280
     20.5,' 1 PHONON STATE WITH PHONON',I3)                             LECL-281
 1020 FORMAT (23X,'MIXING OF VIBRATIONAL AND GROUND BANDS WITH',F9.3,' DLECL-282
     1EGREES'/23X,F10.5,' VIBRATIONAL BAND OF PHONON',I3,' AND',F10.5,' LECL-283
     2GROUND STATE BAND.')                                              LECL-284
 1021 FORMAT (23X,'BAND MIXING COEFF.',5F10.5)                          LECL-285
 1022 FORMAT (' THE NUCLEAR REDUCED MATRIX ELEMENTS MUST BE READ IN THISLECL-286
     1 MODEL.')                                                         LECL-287
 1023 FORMAT (' PROJECTILE-TARGET ANTISYMMETRISATION VALID ONLY FOR SPINLECL-288
     1 OF PARTICLE EQUAL TO SPIN OF TARGET AND POSITIVE PARITY'/49X,'ANDLECL-289
     2 SCHROEDINGER FORMALISM.')                                        LECL-290
 1024 FORMAT (' PARTICLE SPIN',F5.1,' NOT ALLOWED FOR DIRAC EQUATION.') LECL-291
 1025 FORMAT (' POTENTIAL',I3,' WILL NOT BE READ.TOTAL NUMBER IS:',I3)  LECL-292
 1026 FORMAT (//' IN LECL  ...  STOP  ...')                             LECL-293
      END                                                               LECL-294
C 26/06/13                                                      ECIS12  LECT-000
      SUBROUTINE LECT(NBET,IPI,IPP,WV,RM,IDT,LO,NBETA,BETA,VAL,FISS,GAM,LECT-001
     1ISM,SCN)                                                          LECT-002
C LECT READS ALL INPUT EXCEPT THE 5 FIRST DATA CARDS,THE LEVELS, THE    LECT-003
C EXPERIMENTAL DATA,THE SEARCH CONDITIONS,THE NUCLEAR REDUCED MATRIX    LECT-004
C ELEMENTS AND THE FORM FACTORS.                                        LECT-005
C INPUT:     NBET:    NUMBER OF PHONONS.                                LECT-006
C            IPI(J,*):MULTIPLICITY OF PARTICLE FOR J=2.                 LECT-007
C                     PRODUCT OF CHARGES FOR J=4.                       LECT-008
C            IPI(1,J):FIRST LEVEL USING POTENTIAL J.                    LECT-009
C            WV(J,*): MASS OF THE PARTICLE FOR J=1.                     LECT-010
C                     MASS OF THE TARGET FOR J=2.                       LECT-011
C                     ENERGY IN THE CENTRE OF MASS IN MEV FOR J=3.      LECT-012
C                     ENERGY IN THE LABORATORY SYSTEM IN MEV FOR J=13.  LECT-013
C            RM:      MATCHING RADIUS (VALUE READ).                     LECT-014
C            IDT:     LENGTH FREE FOR BETA.                             LECT-015
C            LO(I):   LOGICAL CONTROLS:                                 LECT-016
C               LO(1)  =.TRUE. ROTATIONAL MODEL-(.F.:VIBRATIONAL MODEL).LECT-017
C               LO(3)  =.TRUE. ANHARMONIC VIBRATIONAL OR ASYMMETRIC     LECT-018
C                              ROTATIONAL MODEL.                        LECT-019
C               LO(4)  =.TRUE. PARAMETRISED SPIN-ORBIT DEFORMATION.     LECT-020
C               LO(5)  =.TRUE  DIFFERENT DEFORMATION FOR EACH POTENTIAL.LECT-021
C               LO(6)  =.TRUE. USE DEFORMATION LENGTHS.                 LECT-022
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    LECT-023
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              LECT-024
C               LO(12) =.TRUE. DEFORMED IMAGINARY CENTRAL POTENTIAL.    LECT-025
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      LECT-026
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. LECT-027
C               LO(16) =.TRUE. HEAVY-ION DEFINITION OF REDUCED RADII ANDLECT-028
C                              DEFORMATIONS.                            LECT-029
C               LO(17) =.TRUE. FOLDING MODEL.                           LECT-030
C               LO(18) =.TRUE. PROJECTILE-TARGET ANTISYMMETRISATION.    LECT-031
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   LECT-032
C               LO(44) =.TRUE. COULOMB CORRECTIONS.                     LECT-033
C               LO(46) =.TRUE. RESTRICTED COULOMB CORRECTIONS.          LECT-034
C               LO(66) =.TRUE. NO CALCULATION AT EQUIDISTANT ANGLES.    LECT-035
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             LECT-036
C               LO(82) =.TRUE. OLD SIMPLIFIED COMPOUND NUCLEUS.         LECT-037
C               LO(85) =.TRUE. FISSION TRANSMISSION COEFFICIENTS.       LECT-038
C               LO(86) =.TRUE. GAMMA EMISSION IN COMPOUND NUCLEUS.      LECT-039
C               LO(87) =.TRUE. NO WIDTH FLUCTUATIONS.                   LECT-040
C               LO(99) =.TRUE. SCHROEDINGER EQUIVALENT TO DIRAC         LECT-041
C                              EQUATION.                                LECT-042
C               LO(101)=.TRUE. THERE IS A REAL SPIN-ORBIT POTENTIAL.    LECT-043
C               LO(102)=.TRUE. THERE IS AN IMAGINARY SPIN-ORBIT         LECT-044
C                              POTENTIAL.                               LECT-045
C               LO(103)=.TRUE. THERE IS A COULOMB SPIN-ORBIT POTENTIAL. LECT-046
C               LO(108)=.TRUE. DIAGONAL COULOMB CORRECTIONS ARE NEEDED. LECT-047
C               LO(109)=.TRUE. FOR DIRAC POTENTIALS.                    LECT-048
C               LO(129)=.TRUE. REAL SPIN-ORBIT OR DIRAC EQUATION.       LECT-049
C               LO(130)=.TRUE. IMAGINARY SPIN-ORBIT OR DIRAC EQUATION.  LECT-050
C                                                                       LECT-051
C OUTPUT:    NBET:    NUMBER OF PHONONS PLUS DEFORMATIONS.              LECT-052
C            RM:      MATCHING RADIUS (ACTUAL VALUE).                   LECT-053
C            NBETA:   QUANTUM NUMBERS OF DEFORMATIONS IN NBETA(J,*) FOR LECT-054
C                     J=17,18.                                          LECT-055
C            BETA:    IN EQUIVALENCE BY CALL WITH NBETA: NUCLEAR        LECT-056
C                     DEFORMATION FOR POTENTIALS IN BETA(J,*) FOR J=1,8.LECT-057
C            VAL:     (33 OPTICAL + 24 FOLDING PARAMETERS)* NPP         LECT-058
C            FISS:    FISSION DATA FOR COMPOUND NUCLEUS                 LECT-059
C            GAM:     GAMMA DATA FOR COMPOUND NUCLEUS                   LECT-060
C            ISM:     NUMBER OF INTEGRATION STEPS                       LECT-061
C            SCN:     DESCRIPTIONS OF LEVEL DENSITIES                   LECT-062
C            LO:      LOGICAL CONTROLS:                                 LECT-063
C               LO(11), LO(13), LO(14), LO(19), LO(86), LO(101),        LECT-064
C               LO(102), LO(103), LO(108), LO(129) AND LO(130) ARE      LECT-065
C                     DEFINED HERE.                                     LECT-066
C                                                                       LECT-067
C THE COMMON /ANGUL/ IS USED IN CALX, LECT, SCHE, LCSP, RESU AND REST.  LECT-068
C                                                                       LECT-069
C FOR THE COMMONS /CONVE/ AND /COUPL/ SEE CALX.                         LECT-070
C FOR THE COMMON  /POTE1/ SEE REFM.                                     LECT-071
C FOR THE COMMON  /NCOMP/ SEE CALC.                                     LECT-072
C                                                                       LECT-073
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /ANGUL/:                     LECT-074
C  THETA1:    FIRST ANGLE FOR COMPUTATION AT EQUIDISTANT ANGLES.        LECT-075
C  DTHETA:    STEP FOR COMPUTATION AT EQUIDISTANT ANGLES.               LECT-076
C  THETA2:    LAST ANGLE FOR COMPUTATION AT EQUIDISTANT ANGLES.         LECT-077
C  DTHE:      AVERAGING ANGLE.                                          LECT-078
C  NCJ:       NUMBER OF FACTORISATIONS OF 1/(1-COS(THETA)) IN AMPLITUDE.LECT-079
C  NL(1):     POWER OF (1-COS(THETA)) FOR THE EXPANSION IN LEGENDRE     LECT-080
C             POLYNOMIALS OF THE INTERFERENCE BETWEEN COULOMB AND       LECT-081
C             NUCLEAR ELASTIC SCATTERING. POWER OF (1-COS(THETA)**2)    LECT-082
C             IF LO(18) IS .TRUE..                                      LECT-083
C  NL(2):     NUMBER OF LEGENDRE POLYNOMIALS FOR ELASTIC SCATTERING OF  LECT-084
C             CHARGED PARTICLES.                                        LECT-085
C  NL(3):     NUMBER OF LEGENDRE POLYNOMIALS FOR ELASTIC SCATTERING OF  LECT-086
C             UNCHARGED PARTICLES, INELASTIC SCATTERING AND COMPOUND    LECT-087
C             NUCLEUS.                                                  LECT-088
C  JMM(1):    NUMBER OF CHANNEL SPINS USED FOR MINIMUM CHI2.            LECT-089
C  JMM(2):    NUMBER OF L FOR COMPOUND NUCLEUS FOR MINIMUM CHI2.        LECT-090
C   DEFINED:  THETA1,DTHETA,THETA2,DTHE                                 LECT-091
C   USED:     THETA1,DTHETA,THETA2,DTHE                                 LECT-092
C   NOT USED: NCJ,NL,JMM.                                               LECT-093
C                                                                       LECT-094
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /CONVE/:                     LECT-095
C  H:         STEP SIZE FOR INTEGRATION.                                LECT-096
C  ACONV:     CONVERGENCE CRITERION FOR POTENTIAL AND FUNCTION.         LECT-097
C   DEFINED:  H,ACONV.                                                  LECT-098
C   USED:     H,ACONV.                                                  LECT-099
C                                                                       LECT-100
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     LECT-101
C  IQM:       MAXIMUM L-VALUE OF DEFORMATION IN ROTATIONAL MODEL.       LECT-102
C  IQMAX:     MAXIMUM L-EXPANSION IN ROTATIONAL MODEL.                  LECT-103
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             LECT-104
C  NSPIN:     TWICE THE K-VALUE OF THE ROTATIONAL BAND.                 LECT-105
C   DEFINED:  IQM,IQMAX,NSPIN.                                          LECT-106
C   USED:     NPP.                                                      LECT-107
C                                                                       LECT-108
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE1/:                     LECT-109
C  NTO:       NUMBER OF SETS OF FOLDING PARAMETERS.                     LECT-110
C   DEFINED:  NFO.                                                      LECT-111
C                                                                       LECT-112
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     LECT-113
C  NFISS:     NUMBER OF FISSION TRANSMISSION COEFFICIENTS.              LECT-114
C  NRD:       NUMBER OF GAMMA TRANSMISSION COEFFICIENTS.                LECT-115
C  NCONT:     NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS.                 LECT-116
C  NCONS:     NUMBER OF LEVEL DENSITIES NEEDED.                         LECT-117
C  NCOLX:     TOTAL NUMBER OF LEVELS WITHOUT DISCRETISATION.            LECT-118
C  AZ(6):     DEFORMED SPIN-ORBIT PARAMETERS. SEE ALSO COMMENT IN       LECT-119
C             INPUT DESCRIPTION AND SUBROUTINE QUAN.                    LECT-120
C  BZ(6)      HAUSER-FESHBACH AND MOLDAUER'S PARAMETERS DESCRIBED BELOW.LECT-121
C   BZ(1):    SQUARE ROOT OF ELASTIC ENHANCEMENT.                       LECT-122
C   BZ(2):    IF LO(82)=.TRUE., SPIN CUT-OFF PARAMETER.                 LECT-123
C             IF LO(82)=.FALSE., PARTICLE DEGREES OF FREEDOM.           LECT-124
C   BZ(3):    SQUARE ROOT OF LEVEL DENSITY PARAMETER. IF LO(82)=LO(87)= LECT-125
C             .FALSE., PARAMETER BZ(3) IN MOLDAUER'S FORMULA OF INPUT   LECT-126
C             DESCRIPTION.                                              LECT-127
C   BZ(4):    IF LO(82)=LO(87)=.FALSE., PARAMETER BZ(4) IN SAME FORMULA.LECT-128
C   BZ(5):    IF LO(82)=LO(87)=.FALSE., PARAMETER BZ(5) IN SAME FORMULA.LECT-129
C  TG0:       SLOW S-WAVE NEUTRON GAMMA WIDTH/SPACING FOR NORMALISATION.LECT-130
C  BN:        NEUTRON SEPARATION ENERGY.                                LECT-131
C  FNUG:      RADIATIVE DEGREES OF FREEDOM.                             LECT-132
C  EGD:       ENERGY OF THE GIANT DIPOLE RESONANCE.                     LECT-133
C  GGD:       RESONANCE WIDTH.                                          LECT-134
C   DEFINED:  AZ,BZ,TG0,BN,FNUG,EGD,GGD.                                LECT-135
C   USED:     NFISS,NRD,NCONT,NCONS,NCOLX,AZ,BZ,TG0,BN,FNUG,EGD,GGD.    LECT-136
C                                                                       LECT-137
C***********************************************************************LECT-138
      IMPLICIT REAL*8 (A-H,O-Z)                                         LECT-139
      DIMENSION IPI(11,*),IPP(34,*),WV(22,*),NBETA(18,*),BETA(9,*),VAL(5LECT-140
     17,*),FISS(2,*),GAM(*),SCN(7,*),RO(8)                              LECT-141
      CHARACTER*4 ALEG(8),BLEG(2)                                       LECT-142
      CHARACTER*8 AB(5)                                                 LECT-143
      CHARACTER*32 BA(8,2)                                              LECT-144
      LOGICAL LO(150),LF                                                LECT-145
      COMMON /ANGUL/ THETA1,THETA2,DTHETA,DTHE,NCJ,NL(3),JMM(2)         LECT-146
      COMMON /CONVE/ H,BJM,EITER,ACONV,CONJ,HCONV                       LECT-147
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   LECT-148
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQLECT-149
     1,ACN1,ACN2,AZ(6),BZ(5),TG0,BN,FNUG,EGD,GGD,TG1,SGSQ               LECT-150
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM,NFO          LECT-151
      COMMON /INOUT/ MR,MW,MS                                           LECT-152
      DATA BLEG /'    ','NOT '/                                         LECT-153
      DATA AB /'      NO','  YUKAWA',' HULTHEN','GAUSSIAN','   SAXON'/  LECT-154
      DATA BA /' REAL VOLUME POTENTIAL          ',' IMAGINARY VOLUME POTLECT-155
     1ENTIAL     ',' REAL SURFACE POTENTIAL         ',' IMAGINARY SURFACLECT-156
     2E POTENTIAL    ',' REAL SPIN-ORBIT POTENTIAL      ',' IMAGINARY SPLECT-157
     3IN-ORBIT POTENTIAL ',' COULOMB POTENTIAL              ',' COULOMB LECT-158
     4SPIN-ORBIT POTENTIAL   ',' REAL SCALAR POTENTIAL          ',' IMAGLECT-159
     5INARY SCALAR POTENTIAL     ',' REAL VECTOR POTENTIAL          ',' LECT-160
     6IMAGINARY VECTOR POTENTIAL     ',' REAL TENSOR POTENTIAL          LECT-161
     7',' IMAGINARY TENSOR POTENTIAL     ',' COULOMB POTENTIAL          LECT-162
     8    ',' COULOMB SPIN-ORBIT POTENTIAL   '/                         LECT-163
      IQM=0                                                             LECT-164
      IF (NBET.EQ.0) GO TO 4                                            LECT-165
C INPUT OF PHONON DEFORMATIONS IN VIBRATIONAL AND ROTATIONAL MODELS     LECT-166
      DO 3 I=1,NBET                                                     LECT-167
      READ (MR,1000) NBETA(17,I),NBETA(18,I),BETA(1,I),K                LECT-168
      DO 1 J=2,8                                                        LECT-169
    1 BETA(J,I)=BETA(1,I)                                               LECT-170
      IF (LO(5)) READ (MR,1001) (BETA(J,I),J=2,8)                       LECT-171
      WRITE (MW,1002) I,NBETA(17,I),NBETA(18,I),(BETA(J,I),J=1,8)       LECT-172
      IF (.NOT.LO(16)) GO TO 3                                          LECT-173
      IF (K.EQ.0) K=1                                                   LECT-174
      K=MIN0(K,NCOLX)                                                   LECT-175
      AM3=WV(2,K)**.33333333333333D0                                    LECT-176
      BM3=WV(1,K)**.33333333333333D0                                    LECT-177
      CM3=AM3/(AM3+BM3)                                                 LECT-178
      DM3=1.D0                                                          LECT-179
      IF (LO(6)) DM3=CM3                                                LECT-180
      DO 2 J=1,6                                                        LECT-181
    2 BETA(J,I)=BETA(J,I)*CM3/DM3                                       LECT-182
      BETA(7,I)=BETA(7,I)*CM3**NBETA(17,I)/DM3                          LECT-183
      BETA(8,I)=BETA(8,I)*CM3**NBETA(17,I)/DM3                          LECT-184
      WRITE (MW,1003) K,(BETA(J,I),J=1,8)                               LECT-185
    3 CONTINUE                                                          LECT-186
    4 IF (LO(7)) GO TO 18                                               LECT-187
      IF (.NOT.LO(1)) GO TO 13                                          LECT-188
C INPUT OF DEFORMATIONS FOR THE ROTATIONAL MODEL                        LECT-189
      READ (MR,1000) IQM,IQMAX,ASPIN,K                                  LECT-190
      NSPIN=IDINT(2.D0*ASPIN+0.1D0)                                     LECT-191
      IQ=NBET+1                                                         LECT-192
      JQ=NBET+IQM/2                                                     LECT-193
      IF (.NOT.LO(3)) GO TO 5                                           LECT-194
      JQ=NBET+IQM                                                       LECT-195
      IF ((IQM.GT.35).OR.(IQMAX.GT.8)) GO TO 36                         LECT-196
    5 IF (9*JQ.GT.IDT) CALL MEMO('LECT',IDT,9*JQ)                       LECT-197
      READ (MR,1001) (BETA(1,I),I=IQ,JQ)                                LECT-198
      M=0                                                               LECT-199
      L=0                                                               LECT-200
      DO 9 I=IQ,JQ                                                      LECT-201
      IF (LO(3)) GO TO 6                                                LECT-202
      L=2*(I-NBET)                                                      LECT-203
      GO TO 7                                                           LECT-204
    6 M=M+2                                                             LECT-205
      IF (M.LE.L) GO TO 7                                               LECT-206
      L=L+2                                                             LECT-207
      M=0                                                               LECT-208
    7 NBETA(17,I)=L                                                     LECT-209
      NBETA(18,I)=M                                                     LECT-210
      DO 8 J=2,8                                                        LECT-211
    8 BETA(J,I)=BETA(1,I)                                               LECT-212
    9 CONTINUE                                                          LECT-213
      IF (LO(5)) READ (MR,1001) ((BETA(J,I),J=2,8),I=IQ,JQ)             LECT-214
      WRITE (MW,1004) IQMAX,ASPIN                                       LECT-215
      WRITE (MW,1005) (I,NBETA(17,I),NBETA(18,I),(BETA(J,I),J=1,8),I=IQ,LECT-216
     1JQ)                                                               LECT-217
      IF (.NOT.LO(16)) GO TO 12                                         LECT-218
      IF (K.EQ.0) K=1                                                   LECT-219
      K=MIN0(K,NCOLX)                                                   LECT-220
      AM3=WV(2,K)**.33333333333333D0                                    LECT-221
      BM3=WV(1,K)**.33333333333333D0                                    LECT-222
      CM3=AM3/(AM3+BM3)                                                 LECT-223
      DM3=1.D0                                                          LECT-224
      IF (LO(6)) DM3=CM3                                                LECT-225
      DO 11 I=IQ,JQ                                                     LECT-226
      IF (NBETA(18,I).NE.0) GO TO 11                                    LECT-227
      DO 10 K=1,6                                                       LECT-228
   10 BETA(K,I)=BETA(K,I)*CM3/DM3                                       LECT-229
      BETA(7,I)=BETA(7,I)*CM3**NBETA(17,I)/DM3                          LECT-230
      BETA(8,I)=BETA(8,I)*CM3**NBETA(17,I)/DM3                          LECT-231
   11 CONTINUE                                                          LECT-232
      WRITE (MW,1006) K                                                 LECT-233
      WRITE (MW,1005) (I,NBETA(17,I),NBETA(18,I),(BETA(J,I),J=1,8),I=IQ,LECT-234
     1JQ)                                                               LECT-235
   12 NBET=JQ                                                           LECT-236
      GO TO 18                                                          LECT-237
C ANHARMONIC VIBRATIONAL MODEL WITH DIFFERENT DEFORMATIONS.             LECT-238
   13 IF (.NOT.LO(3)) GO TO 18                                          LECT-239
      IF (36.GT.IDT) CALL MEMO('LECT',IDT,36)                           LECT-240
      WRITE (MW,1007)                                                   LECT-241
      DO 15 I=1,4                                                       LECT-242
      DO 14 J=1,8                                                       LECT-243
   14 BETA(J,I)=1.D0                                                    LECT-244
      NBETA(17,I)=0                                                     LECT-245
      NBETA(18,I)=0                                                     LECT-246
      IF (LO(5)) READ (MR,1001) (BETA(J,I),J=1,8)                       LECT-247
   15 WRITE (MW,1008) I,NBETA(17,I),(BETA(J,I),J=1,8)                   LECT-248
      NBET=4                                                            LECT-249
      IF (.NOT.LO(16)) GO TO 18                                         LECT-250
      READ (MR,1009) (NBETA(17,J),J=1,4),K                              LECT-251
      IF (K.EQ.0) K=1                                                   LECT-252
      K=MIN0(K,NCOLX)                                                   LECT-253
      AM3=WV(2,K)**.33333333333333D0                                    LECT-254
      BM3=WV(1,K)**.33333333333333D0                                    LECT-255
      CM3=AM3/(AM3+BM3)                                                 LECT-256
      DM3=1.D0                                                          LECT-257
      IF (LO(6)) DM3=CM3                                                LECT-258
      WRITE (MW,1006) K                                                 LECT-259
      DO 17 I=2,4                                                       LECT-260
      IF (NBETA(17,I).EQ.0) NBETA(17,I)=2                               LECT-261
      IF (NBETA(17,I).LT.0) NBETA(17,I)=0                               LECT-262
      DO 16 J=1,6                                                       LECT-263
   16 BETA(J,I)=BETA(J,I)*(CM3/DM3)**(I-1)                              LECT-264
      BETA(7,I)=BETA(7,I)*(CM3**NBETA(17,I)/DM3)**(I-1)                 LECT-265
      BETA(8,I)=BETA(8,I)*(CM3**NBETA(17,I)/DM3)**(I-1)                 LECT-266
   17 WRITE (MW,1010) I,NBETA(17,I),(BETA(J,I),J=1,8)                   LECT-267
C INPUT OF OPTICAL MODEL PARAMETERS.                                    LECT-268
   18 W2=10.D20                                                         LECT-269
      LO(108)=.TRUE.                                                    LECT-270
      W1=0.D0                                                           LECT-271
      W3=WV(4,1)/(ACONV*WV(3,1))                                        LECT-272
      NPN=1                                                             LECT-273
      IF (LO(109)) NPN=2                                                LECT-274
      NFO=0                                                             LECT-275
      IA=1                                                              LECT-276
      LO(101)=.FALSE.                                                   LECT-277
      LO(102)=.FALSE.                                                   LECT-278
      LO(103)=.FALSE.                                                   LECT-279
      DO 24 IP=1,NPP                                                    LECT-280
      IJ=IPP(1,IP)                                                      LECT-281
      IF (IJ.NE.-1) GO TO 19                                            LECT-282
      IPP(1,IP)=1                                                       LECT-283
      WRITE (MW,1011) IP                                                LECT-284
      IJ=1                                                              LECT-285
   19 IF (LO(7)) GO TO 24                                               LECT-286
      AM3=WV(2,IJ)**.33333333333333D0                                   LECT-287
      IF (LO(16)) AM3=AM3+WV(1,IJ)**.33333333333333D0                   LECT-288
      WRITE (MW,1012) IP,AM3                                            LECT-289
      DO 20 I=1,6                                                       LECT-290
      ALEG(I)=BLEG(IA)                                                  LECT-291
      READ (MR,1013) VAL(4*I-3,IP),RO(I),VAL(4*I-1,IP),VAL(4*I,IP)      LECT-292
      VAL(4*I-2,IP)=AM3*RO(I)                                           LECT-293
      IF (VAL(4*I-3,IP).EQ.0.D0) GO TO 20                               LECT-294
      W1=DMAX1(W1,VAL(4*I-2,IP)+DLOG(W3*DABS(VAL(4*I-3,IP)))*VAL(4*I-1,ILECT-295
     1P))                                                               LECT-296
      W2=DMIN1(W2,VAL(4*I-1,IP))                                        LECT-297
   20 CONTINUE                                                          LECT-298
      ALEG(7)=BLEG(IA)                                                  LECT-299
      ALEG(8)=BLEG(IA)                                                  LECT-300
      READ (MR,1013) RO(7),VAL(27,IP),VAL(33,IP),VAL(28,IP)             LECT-301
      READ (MR,1013) VAL(29,IP),RO(8),VAL(31,IP),VAL(32,IP)             LECT-302
      VAL(25,IP)=IPI(4,IJ)                                              LECT-303
      VAL(26,IP)=AM3*RO(7)                                              LECT-304
      VAL(30,IP)=AM3*RO(8)                                              LECT-305
      LO(101)=LO(101).OR.(VAL(17,IP).NE.0.D0).OR.LO(99)                 LECT-306
      LO(102)=LO(102).OR.(VAL(21,IP).NE.0.D0).OR.LO(99)                 LECT-307
      LO(103)=LO(103).OR.(VAL(29,IP).NE.0.D0)                           LECT-308
      IF (IP.NE.1) GO TO 21                                             LECT-309
      IF ((VAL(5,1).EQ.0.D0).AND.(VAL(13,1).EQ.0.D0)) LO(12)=.FALSE.    LECT-310
      IF ((.NOT.LO(12)).OR.(VAL(5,IP).EQ.0.D0)) ALEG(2)=BLEG(2)         LECT-311
      IF ((.NOT.LO(12)).OR.(VAL(13,IP).EQ.0.D0)) ALEG(4)=BLEG(2)        LECT-312
      IF (VAL(17,IP).EQ.0.D0) LO(13)=.FALSE.                            LECT-313
      IF (.NOT.LO(13)) ALEG(5)=BLEG(2)                                  LECT-314
      IF (VAL(21,IP).EQ.0.D0) LO(14)=.FALSE.                            LECT-315
      IF (.NOT.LO(14)) ALEG(6)=BLEG(2)                                  LECT-316
      IF (VAL(25,IP).EQ.0.D0) LO(11)=.FALSE.                            LECT-317
      IF (.NOT.LO(11)) ALEG(7)=BLEG(2)                                  LECT-318
      IF (VAL(29,IP).EQ.0.D0) LO(19)=.FALSE.                            LECT-319
      IF (.NOT.LO(19)) ALEG(8)=BLEG(2)                                  LECT-320
C OUTPUT OF OPTICAL PARAMETERS.                                         LECT-321
   21 WRITE (MW,1014) (ALEG(I),BA(I,NPN),VAL(4*I-3,IP),VAL(4*I-2,IP),RO LECT-322
     1(I),VAL(4*I-1,IP),VAL(4*I,IP),I=1,8)                              LECT-323
      WRITE (MW,1015) VAL(33,IP)                                        LECT-324
      LO(108)=(VAL(29,IP).NE.0.D0).OR.(LO(109).AND.(VAL(19,IP).NE.0.D0))LECT-325
      W1=DMAX1(W1,VAL(26,IP)+10.D0*VAL(27,IP),VAL(30,IP)+10.D0*VAL(31,IPLECT-326
     1))                                                                LECT-327
      IF (VAL(27,IP).NE.0.D0) W2=DMIN1(W2,VAL(27,IP))                   LECT-328
      IF (VAL(33,IP).NE.0.D0) W2=DMIN1(W2,VAL(33,IP))                   LECT-329
      DO 22 I=34,57                                                     LECT-330
   22 VAL(I,IP)=0.D0                                                    LECT-331
      IA=2                                                              LECT-332
      IF (.NOT.LO(17)) GO TO 24                                         LECT-333
C INPUT OF FOLDING PARAMETERS.                                          LECT-334
      WRITE (MW,1016)                                                   LECT-335
      READ (MR,1017) LF,F1,F2,F3                                        LECT-336
      DO 23 J=1,8                                                       LECT-337
      IF ((J.NE.1).AND.(.NOT.LF)) READ (MR,1018) F1,F2,F3               LECT-338
      VAL(31+3*J,IP)=F1                                                 LECT-339
      VAL(32+3*J,IP)=F2                                                 LECT-340
      VAL(33+3*J,IP)=F3                                                 LECT-341
      IF (VAL(4*J-3,IP).EQ.0.D0) VAL(31+3*J,IP)=0.D0                    LECT-342
      IX=2                                                              LECT-343
      IF (VAL(33+3*J,IP).NE.0.D0) IX=IX+1                               LECT-344
      IF (VAL(32+3*J,IP).NE.0.D0) IX=IX+2                               LECT-345
      IF (VAL(31+3*J,IP).EQ.0.D0) IX=1                                  LECT-346
      IF ((J.EQ.1).AND.LF) WRITE (MW,1019) (VAL(I,IP),I=34,36),AB(IX)   LECT-347
      IF (.NOT.LF) WRITE (MW,1020) BA(J,NPN),(VAL(I+3*J,IP),I=31,33),AB(LECT-348
     1IX)                                                               LECT-349
   23 CONTINUE                                                          LECT-350
      NFO=NFO+8                                                         LECT-351
   24 CONTINUE                                                          LECT-352
      IF (.NOT.LO(7)) GO TO 26                                          LECT-353
      IPMAX=1                                                           LECT-354
      DO 25 I=1,NPP                                                     LECT-355
   25 IPMAX=MAX0(IPMAX,IPI(2,I))                                        LECT-356
      LO(101)=IPMAX.NE.1                                                LECT-357
      LO(102)=LO(101)                                                   LECT-358
      LO(103)=LO(101)                                                   LECT-359
      W1=20.D0                                                          LECT-360
   26 LO(129)=LO(101).OR.LO(109)                                        LECT-361
      LO(130)=LO(102).OR.LO(109)                                        LECT-362
      IF (LO(19)) LO(11)=.TRUE.                                         LECT-363
      LO(108)=LO(108).OR.LO(44)                                         LECT-364
      IF ((.NOT.LO(44)).AND.LO(46)) LO(108)=.FALSE.                     LECT-365
C DEFAULT VALUE OF MATCHING RADIUS: MAX(R*A**1/3+10*A).                 LECT-366
C DEFAULT VALUE FOR INTEGRATION STEP: MIN(MIN(A)/2,1/(2*K)).            LECT-367
      IF (RM.LE.0.D0) RM=W1                                             LECT-368
      IF (H.LE.0.D0) H=DMIN1(W2/2.D0,0.5D0/WV(4,1))                     LECT-369
      ISM=IDINT(RM/H+0.5D0)                                             LECT-370
      H=DFLOAT(ISM)                                                     LECT-371
      H=RM/H                                                            LECT-372
      RM=H*ISM                                                          LECT-373
      WRITE (MW,1021) H,RM                                              LECT-374
      IF (LO(66)) GO TO 27                                              LECT-375
C INPUT OF LIMITS FOR CALCULATION AT EQUIDISTANT ANGLES.                LECT-376
      READ (MR,1001) THETA1,DTHETA,THETA2,DTHE                          LECT-377
      IF (DTHETA.EQ.0.D0) DTHETA=1.D0                                   LECT-378
      IF ((THETA2-THETA1)*DTHETA.LT.0.D0) DTHETA=-DTHETA                LECT-379
      WRITE (MW,1022) THETA1,DTHETA,THETA2,DTHE                         LECT-380
C INPUT OF DEFORMED SPIN-ORBIT PARAMETERS.                              LECT-381
   27 AZ(1)=0.D0                                                        LECT-382
      AZ(2)=1.D0                                                        LECT-383
      AZ(3)=1.D0                                                        LECT-384
      AZ(4)=0.D0                                                        LECT-385
      AZ(5)=1.D0                                                        LECT-386
      AZ(6)=1.D0                                                        LECT-387
      IF (.NOT.LO(4)) GO TO 28                                          LECT-388
      READ (MR,1001) AZ                                                 LECT-389
      WRITE (MW,1023) AZ                                                LECT-390
   28 IF (.NOT.LO(81)) GO TO 35                                         LECT-391
      READ (MR,1001) BZ                                                 LECT-392
      IF (BZ(1).EQ.0.D0) BZ(1)=1.4142D0                                 LECT-393
      IF (.NOT.LO(82)) GO TO 29                                         LECT-394
      IF (BZ(2).EQ.0.D0) BZ(2)=3.5D0                                    LECT-395
      IF (BZ(3).EQ.0.D0) BZ(3)=100.D0                                   LECT-396
      WRITE (MW,1024) (BZ(I),I=1,3)                                     LECT-397
      GO TO 35                                                          LECT-398
   29 IF (BZ(3).EQ.0.D0) BZ(3)=1.212D0                                  LECT-399
      IF (BZ(4).EQ.0.D0) BZ(4)=0.78D0                                   LECT-400
      IF (BZ(5).EQ.0.D0) BZ(5)=0.228D0                                  LECT-401
      WRITE (MW,1025) (BZ(I),I=1,5)                                     LECT-402
      IF (.NOT.LO(85)) GO TO 31                                         LECT-403
      WRITE (MW,1026) NFISS                                             LECT-404
      DO 30 I=1,NFISS                                                   LECT-405
      READ (MR,1001) FISS(1,I),FISS(2,I)                                LECT-406
      IF (FISS(2,I).LT.0.5D0) FISS(2,I)=0.D0                            LECT-407
   30 WRITE (MW,1027) FISS(1,I),FISS(2,I)                               LECT-408
   31 IF (.NOT.LO(86)) GO TO 33                                         LECT-409
      WRITE (MW,1028)                                                   LECT-410
      IF (NRD.GT.0) GO TO 32                                            LECT-411
      READ (MR,1001) TG0,BN,FNUG,EGD,GGD                                LECT-412
      READ (MR,1001) SCN(7,1),(SCN(I,1),I=1,6)                          LECT-413
      IF (BN.EQ.0.D0) BN=8.D0                                           LECT-414
      IF (FNUG.LT.1.D0) FNUG=20.D0                                      LECT-415
      IF (TG0.EQ.0.D0) LO(86)=.FALSE.                                   LECT-416
      WRITE (MW,1029) TG0,BN,FNUG,EGD,GGD                               LECT-417
      J=1                                                               LECT-418
      WRITE (MW,1030) J,(SCN(I,J),I=1,7)                                LECT-419
      NA=IDINT(WV(2,1)+WV(1,1)+.5D0)                                    LECT-420
      CALL LDEN(NA,SCN(1,1))                                            LECT-421
      GO TO 33                                                          LECT-422
C  32 READ (MR,1001) (GAM(I),I=1,NRD)                                   LECT-423
   32 READ (MR,1001) (GAM(I),I=1,NRD), FNUG                             RCN  RCN
      WRITE (MW,1031) (GAM(I),I=1,NRD)                                  LECT-424
      IF (FNUG.LT.1.D0) FNUG=20.D0                                      RCN  RCN
      WRITE (MW,10315) FNUG                                             RCN  RCN
   33 IF (NCONT.EQ.0) GO TO 35                                          LECT-425
      WRITE (MW,1032)                                                   LECT-426
      J1=1+NCONS-NCONT                                                  LECT-427
      DO 34 J=J1,NCONS                                                  LECT-428
      READ (MR,1001) SCN(7,J),(SCN(I,J),I=1,6)                          LECT-429
      WRITE (MW,1030) J,(SCN(I,J),I=1,7)                                LECT-430
      NA=IDINT(WV(2,NCOLX+J-NCONS)+.5D0)                                LECT-431
   34 CALL LDEN(NA,SCN(1,J))                                            LECT-432
   35 RETURN                                                            LECT-433
   36 WRITE (MW,1033) IQM,IQMAX                                         LECT-434
      WRITE (MW,1034)                                                   LECT-435
      STOP                                                              LECT-436
 1000 FORMAT (2I5,F10.5,I5)                                             LECT-437
 1001 FORMAT (7F10.5)                                                   LECT-438
 1002 FORMAT (10X,'PHONON',I3,5X,'L =',I3,5X,'K =',I3,5X,'BETA =',8F8.5)LECT-439
 1003 FORMAT (12X,'AFTER HEAVY ION CORRECTION I =',I2,'  BETA =',8F8.5) LECT-440
 1004 FORMAT (/10X,'MULTIPOLE EXPANSION UP TO IQMAX =',I3,20X,'K =',F7.2LECT-441
     1,' BAND.')                                                        LECT-442
 1005 FORMAT (/' BETA(I,J) FOR  L   K ',8X,'V',9X,'W',8X,'VS',8X,'WS',7XLECT-443
     1,'VSO',7X,'WSO',6X,'COUL S.O. COUL'/(5X,I5,5X,I2,2X,I2,2X,8F10.5))LECT-444
 1006 FORMAT (/10X,'AFTER HEAVY ION CORRECTION I =',I3/)                LECT-445
 1007 FORMAT (/10X,'RATIOS OF ANHARMONIC DEFORMATIONS'/25X,'V',9X,'W',8XLECT-446
     1,'VS',8X,'WS',7X,'VSO',7X,'WSO',6X,'COUL S.O. COUL')              LECT-447
 1008 FORMAT (' ORDER',I3,6X,I3,2X,8F10.5)                              LECT-448
 1009 FORMAT (14I5)                                                     LECT-449
 1010 FORMAT (' ORDER',I3,'  IQ =',I3,2X,8F10.5)                        LECT-450
 1011 FORMAT (/' ***** NO STATE FOR THE POTENTIAL',I3,' *** WE USE THE GLECT-451
     1ROUND STATE'/)                                                    LECT-452
 1012 FORMAT (//' OPTICAL POTENTIALS  **',I3,' **     REDUCED RADIUS MULLECT-453
     1TIPLIED BY  ',1P,D15.6)                                           LECT-454
 1013 FORMAT (4F10.5)                                                   LECT-455
 1014 FORMAT (/2X,A4,'DEFORMED',A32/'DEPTH',F12.6,' MEV   RADIUS',F10.6,LECT-456
     1' FERMI (REDUCED VALUE',F9.6,')   DIFFUSENESS',F9.6,' FERMI AT THELECT-457
     2 POWER (1+',F8.6,')')                                             LECT-458
 1015 FORMAT (14X,'THIRD CHARGE PARAMETER',F12.6)                       LECT-459
 1016 FORMAT (/' *** FOLDING MODEL ***')                                LECT-460
 1017 FORMAT (L1,F9.5,2F10.5)                                           LECT-461
 1018 FORMAT (1X,F9.5,2F10.5)                                           LECT-462
 1019 FORMAT (/' SAME PARAMETERS FOR ALL THE POTENTIALS'/'  V =',F10.4,6LECT-463
     1X,'R =',F10.4,6X,'A =',F10.4,5X,A8,' FOLDING'/)                   LECT-464
 1020 FORMAT (A32,'V =',F10.4,6X,' R =',F10.4,6X,'A =',F10.4,5X,A8,' FOLLECT-465
     1DING')                                                            LECT-466
 1021 FORMAT (/' INTEGRATION STEP SIZE =',F8.5,10X,'MATCHING RADIUS =',FLECT-467
     18.3,' FERMI')                                                     LECT-468
 1022 FORMAT (/' SCATTERING ANGLES FROM',F7.3,' IN STEPS OF',F7.3,' UP TLECT-469
     1O',F8.3,' DEGREES   AVERAGED WITH +/-',F8.3,' DEGREES.'/)         LECT-470
 1023 FORMAT (10X,'****** AZ ******',1P,D15.8)                          LECT-471
 1024 FORMAT (/' SQUARE ROOT OF ELASTIC ENHANCEMENT FACTOR',8X,1P,D15.8/LECT-472
     1' SPIN CUT-OFF PARAMETER',27X,D15.8/' SQUARE ROOT OF LEVEL DENSITYLECT-473
     2 PARAMETER',11X,D15.8)                                            LECT-474
 1025 FORMAT (/' SQUARE ROOT OF ELASTIC ENHANCEMENT FACTOR WITHOUT FLUCTLECT-475
     1UATIONS',7X,1P,D15.8/' PARTICLE WIDTH FLUCTUATION DEGREE OF FREEDOLECT-476
     2M',25X,D15.8/' PARAMETERS OF MOLDAUER''S FORMULA',22X,3D15.8)     LECT-477
 1026 FORMAT (/I5,' FISSION DATA:')                                     LECT-478
 1027 FORMAT (10X,1P,2D15.8)                                            LECT-479
 1028 FORMAT (/' GAMMA DATA:')                                          LECT-480
 1029 FORMAT (5X,'TG0:',1P,D13.6,6X,'BN:',D13.6,4X,'FNUG:',D13.6,5X,'EGDLECT-481
     1:',D13.6,5X,'GGD:',D13.6/' DENSITY OF STATES GIVEN BY')           LECT-482
 1030 FORMAT (' READ VALUES'/(1X,I3,'  SA:',1P,D13.6,6X,'UX:',D13.6,5X,'LECT-483
     1TAU:',D13.6,6X,'SG:',D13.6/28X,'E0:',D13.6,6X,'EX:',D13.6,7X,'Z:',LECT-484
     20P,F5.0))                                                         LECT-485
 1031 FORMAT (1P,8D15.8)                                                LECT-486
10315 FORMAT (/' RADIATIVE DEGREES OF FREEDOM ASSUMED:',F5.1)           RCN  RCN
 1032 FORMAT (' DENSITY OF STATES FOR CONTINUUM GIVEN BY')              LECT-487
 1033 FORMAT (' IQM =',I3,' OR IQMAX =',I3,' ARE LARGER THAN THE MAXIMUMLECT-488
     1 VALUES 36 OR 8 OF THE ASYMMETRIC ROTATIONAL MODEL')              LECT-489
 1034 FORMAT (//' IN LECT  ...  STOP  ...')                             LECT-490
      END                                                               LECT-491
C 31/08/06                                                      ECIS12  LDEN-000
      SUBROUTINE LDEN(NA,SCN)                                           LDEN-001
C COMPOUND NUCLEUS PREPARATORY COMPUTATIONS ADDED BY MOLDAUER WITH PRSL LDEN-002
C INPUT:     NA:      TOTAL MASS OF THE COMPOUND NUCLEUS.               LDEN-003
C            SCN:     DESCRIPTIONS OF LEVEL DENSITIES.                  LDEN-004
C OUTPUT:    SCN:     DESCRIPTIONS OF LEVEL DENSITIES.                  LDEN-005
C IN SCN:  1-SA  2-UX   3-TAU  4-SG   5-E0   6-EX   7-Z                 LDEN-006
C          AS DESCRIBED IN THE "DESCRIPTION OF INPUT".                  LDEN-007
C DATA PZ, PN, SZ AND SN ARE THE ONE USED BY THE CODE GNASH             LDEN-008
C***********************************************************************LDEN-009
      IMPLICIT REAL*8 (A-H,O-Z)                                         LDEN-010
      DIMENSION SCN(7)                                                  LDEN-011
      REAL*4 PZ(100),PN(150),SZ(100),SN(150)                            LDEN-012
      COMMON /INOUT/ MR,MW,MS                                           LDEN-013
      DATA PZ /0.,5.05,0.,4.50,0.,3.95,0.,3.40,0.,2.90,0.,2.46,0.,2.09,0LDEN-014
     1.,1.62,0.,1.62,0.,1.83,0.,1.73,0.,1.35,0.,1.54,0.,1.28,0.26,0.88,0LDEN-015
     2.19,1.35,-.05,1.52,-.09,1.17,.04,1.24,0.29,1.09,.26,1.17,.23,1.15,LDEN-016
     3-.08,1.35,0.34,1.05,.28,1.27,0.,1.05,0.,1.,.09,1.2,.2,1.4,.93,1.,-LDEN-017
     4.2,1.19,.09,.97,0.,.92,.11,.68,.05,.68,-.22,.79,.09,.69,.01,.72,0.LDEN-018
     5,.4,.16,.73,0.,.46,.17,.89,0.,.79,0.,.89,0.,.81,-.06,.69,-.2,.71,-LDEN-019
     6.12,.72,0.,.77,2*0./                                              LDEN-020
      DATA PN /0.,5.25,0.,4.70,0.,4.15,0.,3.58,0.,3.05,0.,2.67,0.,1.8,0.LDEN-021
     1,1.67,0.,1.86,0.,2.04,0.,1.64,0.,1.44,0.,1.54,0.,1.3,0.,1.27,0.,1.LDEN-022
     229,.08,1.41,-.08,1.5,-.05,2.24,-.47,1.43,-.15,1.44,.06,1.56,.25,1.LDEN-023
     357,-.16,1.46,0.,.93,.01,.62,-.5,1.42,.13,1.52,-.65,.8,-.08,1.29,-.LDEN-024
     447,1.25,-.44,.97,.08,1.65,-.11,1.26,-.46,1.06,0.22,1.55,-.07,1.37,LDEN-025
     50.1,1.2,-.27,.92,-.35,1.19,0.,1.05,-.25,1.61,-.21,.9,-.21,.74,-.38LDEN-026
     6,.72,-.34,.92,-.26,.94,.01,.65,-.36,.83,.11,.67,.05,1.,.51,1.04,.3LDEN-027
     73,.68,-.27,.81,.09,.75,.17,.86,.14,1.1,-.22,.84,-.47,.48,.02,.88,.LDEN-028
     824,.52,.27,.41,-.05,.38,.15,.67,0.,.61,0.,.78,0.,.67,0.,.67,0.,.79LDEN-029
     9,0.,.6,.04,.64,-.06,.45,.05,.26,-.22,.39,0.,.39/                  LDEN-030
      DATA SZ /.19,.38,.57,.75,.94,1.13,1.32,1.51,1.70,2.10,2.91,4.17,5.LDEN-031
     172,7.8,8.97,9.7,10.1,10.7,11.38,12.07,12.55,13.24,13.93,14.71,15.5LDEN-032
     23,16.37,17.36,18.6,18.7,18.01,17.87,17.08,16.6,16.75,16.5,16.35,16LDEN-033
     3.22,16.41,16.89,16.43,16.68,16.73,17.45,17.29,17.44,17.82,18.62,18LDEN-034
     4.27,19.39,19.91,19.14,18.26,17.4,16.42,15.77,14.37,13.91,13.1,13.1LDEN-035
     51,11.43,10.89,10.75,10.62,10.41,10.21,9.85,9.47,9.03,8.61,8.13,7.4LDEN-036
     66,7.48,7.2,7.13,7.06,6.78,6.64,6.64,7.68,7.89,8.41,8.49,7.88,6.3,5LDEN-037
     7.47,4.78,4.37,4.17,4.13,4.32,4.55,5.04,5.28,6.06,6.28,6.87,7.20,7.LDEN-038
     874,2*0./                                                          LDEN-039
      DATA SN /0.62,1.24,1.85,2.47,3.09,3.71,4.33,4.95,5.56,6.18,6.8,7.5LDEN-040
     13,7.55,7.21,7.44,8.07,8.94,9.81,10.6,11.39,12.54,13.68,14.34,14.19LDEN-041
     2,13.83,13.5,13.,12.13,12.6,13.26,14.13,14.92,15.52,16.38,17.16,17.LDEN-042
     355,18.03,17.59,19.03,18.71,18.8,18.99,18.46,18.25,17.76,17.38,16.7LDEN-043
     42,15.62,14.38,12.88,13.23,13.81,14.9,14.86,15.76,16.2,17.62,17.73,LDEN-044
     518.16,18.67,19.69,19.51,20.17,19.48,19.98,19.83,20.2,19.72,19.87,1LDEN-045
     69.24,18.44,17.61,17.1,16.16,15.9,15.33,14.76,13.54,12.63,10.65,10.LDEN-046
     71,8.89,10.25,9.79,11.39,11.72,12.43,12.96,13.43,13.37,12.96,12.11,LDEN-047
     811.92,11.,10.8,10.42,10.39,9.69,9.27,8.93,8.57,8.02,7.59,7.33,7.23LDEN-048
     9,7.05,7.42,6.75,6.6,6.38,6.36,6.49,6.25,5.85,5.48,4.53,4.3,3.39,2.LDEN-049
     A35,1.66,.81,0.46,-.96,-1.69,-2.53,-3.16,-1.87,-.41,.71,1.66,2.62,3LDEN-050
     B.22,3.76,4.1,4.46,4.83,5.09,5.18,5.17,5.1,5.01,4.97,5.09,5.03,4.93LDEN-051
     C,5.28,5.49,5.50,5.37,5.30/                                        LDEN-052
      NZ=IDINT(SCN(7)+.1D0)                                             LDEN-053
      IF (NZ.LE.0) NZ=NA/2                                              LDEN-054
      NN=NA-NZ                                                          LDEN-055
      AA=NA                                                             LDEN-056
      SC=0.D0                                                           LDEN-057
      PR=0.D0                                                           LDEN-058
C SA GIVEN BY P. J. BRANCAZIO AND A. G. W. CAMERON, CANADIAN JOURNAL OF LDEN-059
C PHYSICS 47 (1969) 1029.                                               LDEN-060
      IF (NZ.GT.100.OR.NN.GT.150) GO TO 1                               LDEN-061
      SC=DBLE(SN(NN)-SZ(NZ))                                            LDEN-062
      PR=DBLE(PN(NN)+PZ(NZ))                                            LDEN-063
      ND=MIN0(IABS(NZ-2),IABS(NZ-8),IABS(NZ-20),IABS(NZ-28),IABS(NZ-50),LDEN-064
     1IABS(NZ-82),IABS(NZ-126),IABS(NN-2),IABS(NN-8),IABS(NN-20),IABS(NNLDEN-065
     2-28),IABS(NN-50),IABS(NN-82),IABS(NN-126),IABS(NN-184))           LDEN-066
    1 SA=DABS((.0091D0*(SC-.23D0*DFLOAT(ND))+.143D0)*AA)                LDEN-067
      IF (SCN(1).EQ.0.D0) SCN(1)=SA                                     LDEN-068
      UX=2.5D0+150.D0/AA                                                LDEN-069
      IF (SCN(2).EQ.0.D0) SCN(2)=UX                                     LDEN-070
      TAU=1.D0/(DSQRT(SCN(1)/SCN(2))-1.5D0/SCN(2))                      LDEN-071
      IF (TAU.GT.0.D0) GO TO 2                                          LDEN-072
      SCN(3)=1.D0/(DSQRT(SA/UX)-1.5D0/UX)                               LDEN-073
      WRITE (MW,1000) TAU,SCN(3)                                        LDEN-074
    2 IF (SCN(3).EQ.0.D0) SCN(3)=TAU                                    LDEN-075
      SG=DSQRT(0.0888D0*DSQRT(SCN(1)*SCN(2))*AA**0.666666667D0)         LDEN-076
      IF (SCN(4).EQ.0.D0) SCN(4)=SG                                     LDEN-077
      EX=DABS(SCN(2)+PR)                                                LDEN-078
      E0=EX-SCN(3)*(2.D0*DSQRT(SCN(1)*SCN(2))+DLOG(SCN(3)/(16.9705627D0*LDEN-079
     1SCN(1)**.25D0*SCN(2)**1.25D0*SCN(4))))                            LDEN-080
      IF (SCN(5).EQ.0.D0) SCN(5)=E0                                     LDEN-081
      IF (SCN(6).EQ.0.D0) SCN(6)=EX                                     LDEN-082
      WRITE (MW,1001) (SCN(J),J=1,7)                                    LDEN-083
      RETURN                                                            LDEN-084
 1000 FORMAT (5X,'TEMPERATURE',F10.5,' REPLACED BY',F10.5)              LDEN-085
 1001 FORMAT (' USED VALUES'/(4X,'  SA:',1P,D13.6,6X,'UX:',D13.6,5X,'TAULDEN-086
     1:',D13.6,6X,'SG:',D13.6/28X,'E0:',D13.6,6X,'EX:',D13.6,0P,7X,'Z:',LDEN-087
     2F5.0))                                                            LDEN-088
      END                                                               LDEN-089
C 31/08/06                                                      ECIS12  DEPH-000
      SUBROUTINE DEPH(NCOL,WV,IPI,NGR,NPR,NMAX,LO,MF,KTGR,NIV,NJX,NJY)  DEPH-001
C HELICITY QUANTUM NUMBERS AND CHOICE OF OBSERVABLES FOR THE OUTPUT.    DEPH-002
C INPUT:     NCOL:    NUMBER OF COUPLED NUCLEAR LEVELS FOR DIMENSION OF DEPH-003
C                     ARRAY NIV, EQUAL TO NCOLL.                        DEPH-004
C            WV(I,*): MASS OF THE INCIDENT PARTICLE FOR J=1,            DEPH-005
C                     ENERGY IN THE CENTRE OF MASS SYSTEM FOR J=3.      DEPH-006
C            IPI(I,*):PARITY (0 FOR + AND 1 FOR -) FOR J=1,             DEPH-007
C                     MULTIPLICITY OF INCIDENT PARTICLE FOR J=2,        DEPH-008
C                     MULTIPLICITY OF THE TARGET FOR J=3,               DEPH-009
C                     PRODUCT OF CHARGES FOR J=4.                       DEPH-010
C            NGR:     INDICATION FOR PLOTS OF CROSS-SECTION: NUMBER     DEPH-011
C                     OF POWERS OF 10 BY 100 POINTS.                    DEPH-012
C            NPR:     INDICATIONS FOR PLOTS OF POLARISATIONS:           DEPH-013
C                     1 FIRST ONE,2 SECOND,3 FIRST AND SECOND ..ETC     DEPH-014
C                     ON A BINARY BASIS. THE FIRST VALUE OF NGR AND NPR DEPH-015
C                     IS FOR THE GROUND STATE AND THE SECOND ONE FOR THEDEPH-016
C                     EXCITED STATES                                    DEPH-017
C            NMAX:    MAXIMUM NUMBER OF AMPLITUDES.                     DEPH-018
C            LO(I):   LOGICAL CONTROLS:                                 DEPH-019
C               LO(44) =.TRUE. COULOMB CORRECTIONS.                     DEPH-020
C               LO(46) =.TRUE. RESTRICTED COULOMB CORRECTIONS.          DEPH-021
C               LO(66) =.TRUE. NO CALCULATION AT EQUIDISTANT ANGLES.    DEPH-022
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             DEPH-023
C               LO(92) =.TRUE. NON STANDARD OBSERVABLES AT EQUIDISTANT  DEPH-024
C                              ANGLES.                                  DEPH-025
C               LO(108)=.TRUE. DIAGONAL COULOMB CORRECTIONS ARE NEEDED. DEPH-026
C OUTPUT:    IPI(I,*):BEGINNING AND END FOR EACH LEVEL IN THE TWO PARTS DEPH-027
C                     OF THE TABLE MF FOR J=5 TO 8.                     DEPH-028
C            MF:      TABLE OF QUANTUM NUMBERS AND OBSERVABLES.         DEPH-029
C            KTGR:    LENGTH OF THE TABLE MF.                           DEPH-030
C            NIV:     ADDRESS OF COULOMB INTEGRALS IN NIV(*,*,3).       DEPH-031
C            NJX:     NUMBER OF SETS OF COULOMB FUNCTIONS AND INTEGRALS.DEPH-032
C            NJY:     MAXIMUM LABEL OF NON STANDARD OBSERVABLE.         DEPH-033
C                                                                       DEPH-034
C FOR THE COMMON  /INTEG/ SEE CALC.                                     DEPH-035
C                                                                       DEPH-036
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /INTEG/:                     DEPH-037
C  NCOLS:     NUMBER OF CHANNELS WITH ANGULAR DISTRIBUTIONS.            DEPH-038
C  NJC:       MAXIMUM NUMBER OF OBSERVABLES AT EQUIDISTANT ANGLES.      DEPH-039
C  JTX:       MAXIMUM NUMBER OF CALCULATED VALUES FOR A PLOT.           DEPH-040
C  KCC:       NUMBER OF INDEPENDENT AMPLITUDES WITH UNCOUPLED STATES.   DEPH-041
C  MS1:       LARGEST PARTICLE MULTIPLICITY.                            DEPH-042
C  MS2:       LARGEST TARGET MULTIPLICITY.                              DEPH-043
C  KBA:       NUMBER OF INDEPENDENT AMPLITUDES WITHOUT UNCOUPLED STATES.DEPH-044
C  KAB:       MAXIMUM NUMBER OF EQUATIONS.                              DEPH-045
C  KBC:       MAXIMUM NUMBER OF SOLUTIONS.                              DEPH-046
C  NCT(1):    NUMBER OF EQUATIONS FOR POSITIVE PARITY.                  DEPH-047
C  NCT(2):    NUMBER OF EQUATIONS FOR NEGATIVE PARITY.                  DEPH-048
C  NCT(3):    NUMBER OF SOLUTIONS FOR POSITIVE PARITY.                  DEPH-049
C  NCT(4):    NUMBER OF SOLUTIONS FOR NEGATIVE PARITY.                  DEPH-050
C  NCT(5):    NUMBER OF COMPOUND NUCLEUS COEFFICIENTS, POSITIVE PARITY. DEPH-051
C  NCT(6):    NUMBER OF COMPOUND NUCLEUS COEFFICIENTS, NEGATIVE PARITY. DEPH-052
C   DEFINED:  NJC,JTX,KCC,MS1,MS2,KBA,KAB,KBC,NCT.                      DEPH-053
C   USED:     NCOLS.                                                    DEPH-054
C                                                                       DEPH-055
C   **** TABLE MF **** FIRST PART                                       DEPH-056
C FOR EACH INDEPENDENT AMPLITUDE (WITH RESPECT TO PARITY ONLY):         DEPH-057
C  MF(1,*)  HELICITY OF THE OUTGOING PARTICLE,                          DEPH-058
C  MF(2,*)  HELICITY OF THE RESIDUAL TARGET,                            DEPH-059
C  MF(3,*)  HELICITY OF THE INCOMING PARTICLE,                          DEPH-060
C  MF(4,*)  HELICITY OF THE TARGET,                                     DEPH-061
C    (THESE HELICITIES ARE NUMBERED FROM THE LOWEST VALUE)              DEPH-062
C  MF(5,*)  TWICE THE MAGNETIC QUANTUM NUMBER OF THE ROTATION MATRIX    DEPH-063
C    ELEMENTS RELATED TO THE INITIAL STATE,                             DEPH-064
C  MF(6,*)  TWICE THE MAGNETIC QUANTUM NUMBER OF THE ROTATION MATRIX    DEPH-065
C    ELEMENTS FOR THE FINAL STATE,                                      DEPH-066
C    (HOWEVER, WITH ABSOLUTE VALUE 99999 IT INDICATES THAT THE LAST     DEPH-067
C    COMPUTED MATRIX ELEMENTS CAN BE USED WITH THE SIGN OF MF(10,*).    DEPH-068
C    A RE-ORDERING OF THE HELICITIES HAS BEEN DONE TO BE ABLE TO DO SO) DEPH-069
C  MF(7,*)  DIRECT ADDRESS OF THE AMPLITUDE IN AN ONE-ROW MATRIX,       DEPH-070
C  MF(8,*)  DIRECT ADDRESS OF PARITY RELATED AMPLITUDE OR 0 IF THERE IS DEPH-071
C    NONE,                                                              DEPH-072
C  MF(9,*)  RELATIVE SIGN BETWEEN THE AMPLITUDES MF(7,*) AND MF(8,*),   DEPH-073
C  MF(10,*) RELATIVE SIGN FOR ROTATION MATRIX ELEMENTS IF MF(6,*)=99999.DEPH-074
C***********************************************************************DEPH-075
      IMPLICIT REAL*8 (A-H,O-Z)                                         DEPH-076
      LOGICAL LO(150)                                                   DEPH-077
      DIMENSION WV(22,*),IPI(11,*),MF(10,*),NGR(2),NPR(2),NIV(NCOL,NCOL,DEPH-078
     13)                                                                DEPH-079
      COMMON /INOUT/ MR,MW,MS                                           DEPH-080
      COMMON /INTEG/ IDMT,NPLACE,NCOLL,NJMAX,ITERM,JDM,JIT,KMIN,KMAX,NCODEPH-081
     1LS,NCOLT,NBET,LMX,LMAX1,NLT,ISM,NJC,JTX,KCC,MS1,MS2,KBA,KAB,KBC,JTDEPH-082
     2H,NCOLR,NREC,NTOT,LMAX2,KE,ITEMM,KXT,LMAX3,NRZ,NTZ,IPM,IPK,MCM(2),DEPH-083
     3NCT(6)                                                            DEPH-084
      NJC=2                                                             DEPH-085
      NJY=0                                                             DEPH-086
      JTX=0                                                             DEPH-087
      NCT(5)=0                                                          DEPH-088
      NCT(6)=0                                                          DEPH-089
      KCC=0                                                             DEPH-090
      MS1=0                                                             DEPH-091
      MS2=0                                                             DEPH-092
      NI=IPI(2,1)                                                       DEPH-093
      MI=IPI(3,1)                                                       DEPH-094
C LOOP ON THE NUCLEAR LEVELS.                                           DEPH-095
      DO 13 I=1,NCOLS                                                   DEPH-096
      IP=MOD(IPI(1,I)+IPI(1,1),2)                                       DEPH-097
      KI=KCC+1                                                          DEPH-098
      IPI(6,I)=KI                                                       DEPH-099
      NJ=IPI(2,I)                                                       DEPH-100
      MJ=IPI(3,I)                                                       DEPH-101
      MS1=MAX0(MS1,NJ)                                                  DEPH-102
      MS2=MAX0(MS2,MJ)                                                  DEPH-103
      DO 10 I1=1,NJ                                                     DEPH-104
      J1=NJ+1-I1                                                        DEPH-105
      DO 9 I2=1,MJ                                                      DEPH-106
      J2=MJ+1-I2                                                        DEPH-107
      DO 8 I3=1,NI                                                      DEPH-108
      J3=NI+1-I3                                                        DEPH-109
      DO 7 I4=1,MI                                                      DEPH-110
      J4=MI+1-I4                                                        DEPH-111
      IF (KCC.LT.KI) GO TO 3                                            DEPH-112
C SEARCH FOR PARITY CONJUGATE AMONG THE AMPLITUDES ALREADY OBTAINED.    DEPH-113
      DO 1 J=KI,KCC                                                     DEPH-114
      IF ((MF(1,J).EQ.J1).AND.(MF(2,J).EQ.J2).AND.(MF(3,J).EQ.J3).AND.(MDEPH-115
     1F(4,J).EQ.J4)) GO TO 2                                            DEPH-116
    1 CONTINUE                                                          DEPH-117
      GO TO 3                                                           DEPH-118
    2 MF(8,J)=I1+NJ*(I2-1+MJ*(I4-1+MI*(I3-1)))                          DEPH-119
      MF(9,J)=1-2*MOD(IP+J1+I2+J3+I4,2)                                 DEPH-120
      GO TO 7                                                           DEPH-121
C NEW AMPLITUDE.                                                        DEPH-122
    3 KCC=KCC+1                                                         DEPH-123
      IF (5*KCC.GE.NMAX) CALL MEMO('DEPH',NMAX,5*KCC)                   DEPH-124
      MF(1,KCC)=I1                                                      DEPH-125
      MF(2,KCC)=I2                                                      DEPH-126
      MF(3,KCC)=I3                                                      DEPH-127
      MF(4,KCC)=I4                                                      DEPH-128
      MF(5,KCC)=2*(MF(3,KCC)-MF(4,KCC))-IPI(2,1)+IPI(3,1)               DEPH-129
      MF(6,KCC)=2*(MF(1,KCC)-MF(2,KCC))-IPI(2,I)+IPI(3,I)               DEPH-130
      MF(7,KCC)=I1+NJ*(I2-1+MJ*(I4-1+MI*(I3-1)))                        DEPH-131
      MF(8,KCC)=0                                                       DEPH-132
      MF(9,KCC)=0                                                       DEPH-133
      MF(10,KCC)=0                                                      DEPH-134
      IF (KCC.LE.KI) GO TO 7                                            DEPH-135
C SEARCH FOR RELATED ROTATION MATRIX ELEMENTS.                          DEPH-136
      KK=KCC-1                                                          DEPH-137
      M1=IABS(MF(5,KCC)+MF(6,KCC))/2                                    DEPH-138
      M2=IABS(MF(5,KCC)-MF(6,KCC))/2                                    DEPH-139
      DO 6 J=KI,KK                                                      DEPH-140
      IF (MF(6,J).EQ.99999) GO TO 6                                     DEPH-141
      M3=IABS(MF(5,J)+MF(6,J))/2                                        DEPH-142
      M4=IABS(MF(5,J)-MF(6,J))/2                                        DEPH-143
      IF (M1.NE.M3.OR.M2.NE.M4) GO TO 6                                 DEPH-144
      MF(10,KCC)=1-MOD(IABS(MF(5,J)-MF(5,KCC)+MF(6,KCC)-MF(6,J))/2,4)   DEPH-145
      MF(6,KCC)=99999                                                   DEPH-146
      JA=J+1                                                            DEPH-147
      IF (JA.EQ.KCC) GO TO 7                                            DEPH-148
C PERMUTATION OF AMPLITUDES.                                            DEPH-149
      DO 5 M1=1,10                                                      DEPH-150
      M2=MF(M1,KCC)                                                     DEPH-151
      DO 4 M3=JA,KCC                                                    DEPH-152
      M4=KCC+JA-M3                                                      DEPH-153
    4 MF(M1,M4)=MF(M1,M4-1)                                             DEPH-154
    5 MF(M1,JA)=M2                                                      DEPH-155
      GO TO 7                                                           DEPH-156
    6 CONTINUE                                                          DEPH-157
    7 CONTINUE                                                          DEPH-158
    8 CONTINUE                                                          DEPH-159
    9 CONTINUE                                                          DEPH-160
   10 CONTINUE                                                          DEPH-161
      IPI(7,I)=KCC                                                      DEPH-162
C COMPUTATION OF THE NUMBER OF COUPLED EQUATIONS.                       DEPH-163
      L=NJ*MJ                                                           DEPH-164
      KK1=L/2                                                           DEPH-165
      KK2=L-KK1                                                         DEPH-166
      IF (KK1.EQ.KK2) GO TO 11                                          DEPH-167
      N=MJ/2+NJ/2+IPI(1,I)                                              DEPH-168
      IF (2*(N/2).EQ.N) GO TO 11                                        DEPH-169
      KK1=KK1+1                                                         DEPH-170
      KK2=KK1-1                                                         DEPH-171
   11 NCT(5)=NCT(5)+KK2                                                 DEPH-172
      NCT(6)=NCT(6)+KK1                                                 DEPH-173
      IF (I.NE.1) GO TO 12                                              DEPH-174
      NCT(3)=NCT(5)                                                     DEPH-175
      NCT(4)=NCT(6)                                                     DEPH-176
   12 IF (I.NE.NCOLL) GO TO 13                                          DEPH-177
      NCT(1)=NCT(5)                                                     DEPH-178
      NCT(2)=NCT(6)                                                     DEPH-179
      KAB=MAX0(NCT(1),NCT(2))                                           DEPH-180
      KBC=MAX0(NCT(3),NCT(4))                                           DEPH-181
      IF (NCT(4).EQ.0) KAB=NCT(1)                                       DEPH-182
      IF (NCT(3).EQ.0) KAB=NCT(2)                                       DEPH-183
      KBA=KCC                                                           DEPH-184
   13 CONTINUE                                                          DEPH-185
      IF (KBA.EQ.KCC) WRITE (MW,1000) KBC,KAB,KBA                       DEPH-186
      IF (KBA.NE.KCC) WRITE (MW,1001) KBC,KAB,KBA,KCC                   DEPH-187
      KTGR=KCC                                                          DEPH-188
      IPI(9,NCOLS)=IPI(7,NCOLS)                                         DEPH-189
      IF (LO(66)) GO TO 25                                              DEPH-190
C***********************************************************************DEPH-191
C   **** TABLE MF-FM **** SECOND PART                                   DEPH-192
C  THIS PART OF THE TABLE IS PROLONGATED IN LECD FOR EACH ANGULAR       DEPH-193
C  DISTRIBUTION AND WILL BE UPDATED BY OBSE. MF(1,*), MF(2,*) AND       DEPH-194
C  MF(5,*) ONLY ARE DEFINED HERE.                                       DEPH-195
C                                                                       DEPH-196
C  - FOR EACH OBSERVABLE:                                               DEPH-197
C  MF(1,*)             LEVEL.                                           DEPH-198
C  MF(2,*)             KIND: SEE BELOW **** STANDARD DESCRIPTIONS ****  DEPH-199
C  MF(3,I), MF(4,I)    BEGINNING AND END OF THE DESCRIPTION IN THE ARRAYDEPH-200
C                      AM DEFINED IN SUBROUTINE OBSE,                   DEPH-201
C  MF(5,*)             INDICATION FOR PLOTS,                            DEPH-202
C  MF(6,*) TO M(10,*)  CONTAINS THE LEGEND (ADDED IN SUBROUTINE OBSE).  DEPH-203
C                                                                       DEPH-204
C  ****STANDARD OPTIONS****                                             DEPH-205
C FOR ALL STATES : CROSS SECTION.                                       DEPH-206
C FOR GROUND STATE WITH CHARGED PARTICLES: CROSS SECTION DIVIDED BY     DEPH-207
C       RUTHERFORD'S CROSS-SECTION.                                     DEPH-208
C FOR SPIN 1/2 - GROUND STATE  POLARISATION.                            DEPH-209
C FOR SPIN 1/2 EXCITED STATES  VECTOR ANALYSING POWER, POLARISATION     DEPH-210
C       AND SPIN-FLIP.                                                  DEPH-211
C FOR SPIN LARGER THAN 1/2  GROUND STATE IT11, T20, T21 AND T22.        DEPH-212
C FOR EXCITED STATES, IT11, VECTOR POLARISATION, T20, T21 AND T22.      DEPH-213
C                                                                       DEPH-214
C  *** NON-STANDARD OPTIONS ***                                         DEPH-215
C  THE FIRST ONE MUST BE THE CROSS-SECTION.                             DEPH-216
C ANY OBSERVABLE NOT DESCRIBED BELOW IS IDENTIFIED BY A NEGATIVE NUMBER DEPH-217
C  OF WHICH THE POSITIVE VALUE MUST BE FOUND BY THE SUBROUTINE OBSE     DEPH-218
C  FOLLOWED BY THE DESCRIPTION OF THE OBSERVABLE.                       DEPH-219
C                                                                       DEPH-220
C **** STANDARD DESCRIPTIONS ****                                       DEPH-221
C  0  CROSS SECTION.                                                    DEPH-222
C  1  CROSS SECTION DIVIDED BY RUTHERFORD'S CROSS SECTION.              DEPH-223
C  2  VECTOR ANALYSING POWER.                                           DEPH-224
C  3  VECTOR POLARISATION.                                              DEPH-225
C  4  T20.                                                              DEPH-226
C  5  T21.                                                              DEPH-227
C  6  T22.                                                              DEPH-228
C  7  KYY OR D  DEFINED AS -A(1100 1100)-A(1100 1-100).                 DEPH-229
C  8  KXX OR R  DEFINED AS  A(1100 1100)-A(1100 1-100).                 DEPH-230
C  9  KZZ OR A' DEFINED AS  A(1000 1000).                               DEPH-231
C 10  KXZ OR R' DEFINED AS -SQRT(2.) A(1100 1000).                      DEPH-232
C 11  KZX OR A  DEFINED AS -SQRT(2.) A(1000 1100).                      DEPH-233
C 12  SPIN-FLIP :  (A(0000,0000)+A(1100,1100)+A(1100,1-100))/2.         DEPH-234
C 13  VECTOR ANALYSING POWER OF THE TARGET.                             DEPH-235
C   (NOTE A RATIO SQRT(2.) WITH IT11 FOR SPIN 1/2 FOR 2, 3 AND 13).     DEPH-236
C 14  AYY  DEFINED AS -A(1111 0000)-A(111-1 0000).                      DEPH-237
C 15  AXX  DEFINED AS  A(1111 0000)-A(111-1 0000).                      DEPH-238
C 16  AZZ  DEFINED AS  A(1010 0000).                                    DEPH-239
C 17  AXZ  DEFINED AS -SQRT(2.) A(1110 0000).                           DEPH-240
C 18  AZX  DEFINED AS -SQRT(2.) A(1011 0000).                           DEPH-241
C 19  RESERVED FOR A SET OF EXPERIMENTAL DATA WHICH ARE REACTION        DEPH-242
C          CROSS-SECTIONS.                                              DEPH-243
C***********************************************************************DEPH-244
      KX=KCC                                                            DEPH-245
      IY=1                                                              DEPH-246
      IF (.NOT.LO(92)) GO TO 14                                         DEPH-247
      READ (MR,1002) (IPI(9,I),I=1,NCOLL)                               DEPH-248
      WRITE (MW,1003) (I,IPI(9,I),I=1,NCOLL)                            DEPH-249
   14 DO 24 I=1,NCOLL                                                   DEPH-250
      IF (LO(92)) GO TO 19                                              DEPH-251
C THERE MUST BE AT LEAST PLACE TO STORE SIX OBSERVABLES                 DEPH-252
      IF (5*KX+30.GE.NMAX) CALL MEMO('DEPH',NMAX,5*KX+30)               DEPH-253
      KX=KX+1                                                           DEPH-254
      IPI(9,I)=1                                                        DEPH-255
      MF(2,KX)=0                                                        DEPH-256
      IF ((I.NE.1).OR.(IPI(4,1).EQ.0)) GO TO 15                         DEPH-257
      IPI(9,1)=2                                                        DEPH-258
      KX=KX+1                                                           DEPH-259
      MF(2,KX)=1                                                        DEPH-260
   15 MF(5,KX)=NGR(IY)                                                  DEPH-261
      IF (NI.EQ.1) GO TO 19                                             DEPH-262
      IPI(9,I)=IPI(9,I)+1                                               DEPH-263
      KX=KX+1                                                           DEPH-264
      MF(2,KX)=2                                                        DEPH-265
      IX=NPR(IY)/2                                                      DEPH-266
      MF(5,KX)=NPR(1)-2*IX                                              DEPH-267
      IF (NI.GT.2) GO TO 17                                             DEPH-268
      IF (I.EQ.1) GO TO 19                                              DEPH-269
      IF (IPI(2,I).GT.3) GO TO 16                                       DEPH-270
      IF (IPI(2,I).EQ.1) GO TO 19                                       DEPH-271
      IPI(9,I)=IPI(9,I)+1                                               DEPH-272
      KX=KX+1                                                           DEPH-273
      MF(2,KX)=3                                                        DEPH-274
      MF(5,KX)=MOD(IX,2)                                                DEPH-275
      IX=IX/2                                                           DEPH-276
   16 KX=KX+1                                                           DEPH-277
      MF(2,KX)=12                                                       DEPH-278
      MF(5,KX)=MOD(IX,2)                                                DEPH-279
      IPI(9,I)=IPI(9,I)+1                                               DEPH-280
      GO TO 19                                                          DEPH-281
   17 IPI(9,I)=IPI(9,I)+3                                               DEPH-282
      DO 18 L=4,6                                                       DEPH-283
      KX=KX+1                                                           DEPH-284
      MF(2,KX)=L                                                        DEPH-285
      MF(5,KX)=MOD(IX,2)                                                DEPH-286
   18 IX=IX/2                                                           DEPH-287
   19 K1=KTGR+1                                                         DEPH-288
      IPI(8,I)=K1                                                       DEPH-289
      KTGR=KTGR+IPI(9,I)                                                DEPH-290
      IPI(9,I)=KTGR                                                     DEPH-291
      IF (5*KTGR.GE.NMAX) CALL MEMO('DEPH',NMAX,5*KTGR)                 DEPH-292
      DO 20 J=K1,KTGR                                                   DEPH-293
   20 MF(1,J)=I                                                         DEPH-294
      IF (.NOT.LO(92)) GO TO 22                                         DEPH-295
      READ (MR,1002) (MF(2,J),J=K1,KTGR)                                DEPH-296
      IF (MF(2,K1).NE.0) WRITE (MW,1004)                                DEPH-297
      READ (MR,1002) (MF(5,J),J=K1,KTGR)                                DEPH-298
      MF(2,K1)=0                                                        DEPH-299
      WRITE (MW,1005) I,(MF(2,J),J=K1,KTGR)                             DEPH-300
      WRITE (MW,1006) (MF(5,J),J=K1,KTGR)                               DEPH-301
      DO 21 J=K1,KTGR                                                   DEPH-302
      IF (MF(2,J).GT.18) GO TO 32                                       DEPH-303
   21 CONTINUE                                                          DEPH-304
   22 JT=0                                                              DEPH-305
      DO 23 J=K1,KTGR                                                   DEPH-306
      NJY=MAX0(NJY,-MF(2,J))                                            DEPH-307
      IF (MF(2,J).EQ.0.OR.MF(2,J).EQ.1) GO TO 23                        DEPH-308
      JT=JT+1                                                           DEPH-309
   23 CONTINUE                                                          DEPH-310
      JTX=MAX0(JTX,JT)                                                  DEPH-311
      NJC=MAX0(NJC,KTGR-K1+2)                                           DEPH-312
   24 IY=2                                                              DEPH-313
      IF (LO(81)) NJC=MAX0(NJC+2,6)                                     DEPH-314
   25 IY=0                                                              DEPH-315
      IF (LO(44)) IY=1                                                  DEPH-316
      IF (LO(46).AND.LO(44)) WRITE (MW,1007)                            DEPH-317
      DO 28 I=1,NCOLL                                                   DEPH-318
      IF (LO(46).AND.LO(44)) GO TO 27                                   DEPH-319
      DO 26 J=1,NCOLL                                                   DEPH-320
   26 NIV(I,J,3)=IY                                                     DEPH-321
      IF (LO(108)) NIV(I,I,3)=1                                         DEPH-322
      GO TO 28                                                          DEPH-323
   27 READ (MR,1002) (NIV(I,J,3),J=1,NCOLL)                             DEPH-324
      WRITE (MW,1008) I,(J,NIV(I,J,3),J=1,NCOLL)                        DEPH-325
   28 CONTINUE                                                          DEPH-326
      NJ=NJX                                                            DEPH-327
      DO 30 I=1,NCOLL                                                   DEPH-328
      DO 29 J=1,I                                                       DEPH-329
      L=NIV(I,J,3)                                                      DEPH-330
      NIV(I,J,3)=0                                                      DEPH-331
C NO COUL. CORR. WITH DIFF. PARTICLE MASS, CHARGES OR A CLOSED CHANNEL  DEPH-332
      IF (L.EQ.0.OR.IPI(4,I).NE.IPI(4,J).OR.(DABS(WV(1,I)-WV(1,J)).GT.1DDEPH-333
     10).OR.WV(3,I).LT.0.D0.OR.WV(3,J).LT.0.D0) GO TO 29                DEPH-334
      NJX=NJX+1                                                         DEPH-335
      NIV(I,J,3)=NJX                                                    DEPH-336
   29 NIV(J,I,3)=NIV(I,J,3)                                             DEPH-337
   30 CONTINUE                                                          DEPH-338
      IF (NJ.EQ.NJX) RETURN                                             DEPH-339
      WRITE (MW,1009)                                                   DEPH-340
      DO 31 I=1,NCOLL                                                   DEPH-341
   31 WRITE (MW,1010) I,(NIV(I,J,3),J,J=1,NCOLL)                        DEPH-342
      RETURN                                                            DEPH-343
   32 WRITE (MW,1011)                                                   DEPH-344
      STOP                                                              DEPH-345
 1000 FORMAT (/5X,I3,' SOLUTIONS',I10,' COUPLED EQUATIONS',I10,' INDEPENDEPH-346
     1DENT AMPLITUDES.'/)                                               DEPH-347
 1001 FORMAT (/5X,I3,' SOLUTIONS',I10,' COUPLED EQUATIONS',I10,' INDEPENDEPH-348
     1DENT AMPLITUDES',I10,' SETS OF COMPOUND COEFFICIENTS.'/)          DEPH-349
 1002 FORMAT (14I5)                                                     DEPH-350
 1003 FORMAT (/' EQUIDISTANT ANGLES OUTPUT:'//(10X,'CHANNEL',I3,5X,I3,' DEPH-351
     1OBSERVABLES.'))                                                   DEPH-352
 1004 FORMAT (' THE FIRST OBSERVABLE MUST BE THE CROSS SECTION: LABEL 0.DEPH-353
     1')                                                                DEPH-354
 1005 FORMAT (' OBSERVABLES FOR CHANNEL',I3,'  : ',18I5/(24X,18I5))     DEPH-355
 1006 FORMAT (12X,'GRAPH INFORMATION: ',18I5/(24X,18I5))                DEPH-356
 1007 FORMAT (/' COULOMB CORRECTIONS ( 1=YES, 0=NO):')                  DEPH-357
 1008 FORMAT (' I =',I2,4X,10(' J =',I2,':',I1,2X)/(10X,10(' J =',I2,':'DEPH-358
     1,I1,2X)))                                                         DEPH-359
 1009 FORMAT (/' STORAGE OF COULOMB CORRECTIONS:')                      DEPH-360
 1010 FORMAT (' I =',I2,2X,6(I6,' FOR J =',I2)/(10X,6(I6,' FOR J =',I2))DEPH-361
     1)                                                                 DEPH-362
 1011 FORMAT (//' THE STANDARD OBSERVABLES ARE ONLY 19 FOR ANY OTHER GIVDEPH-363
     1E A NEGATIVE INTEGER'///' IN DEPH  ...  STOP  ...')               DEPH-364
      END                                                               DEPH-365
C 28/02/07                                                      ECIS12  LECD-000
      SUBROUTINE LECD(WV,NP,KFIT,NESSAI,YY,NJY,NMAX,LO,MF,MFM,FM,DONN,DWLECD-001
     1,NW,NMX)                                                          LECD-002
C INPUT OF EXPERIMENTAL DATA AND SEARCH INFORMATIONS.                   LECD-003
C INPUT:     WV(J,*): ENERGY IN THE CENTRE OF MASS IN MEV FOR J=3.      LECD-004
C            NP:      INDICATIONS FOR PLOTS OF CROSS-SECTION            LECD-005
C            KFIT:    NUMBER OF FITS STORED IN A SEARCH.                LECD-006
C            NESSAI:  MAXIMUM NUMBER OF EVALUATIONS IN THE SEARCH.      LECD-007
C            YY(3):   PARAMETERS FOR THE SEARCH.                        LECD-008
C            NJY:     MAXIMUM INDEX OF NON STANDARD OBSERVABLE.         LECD-009
C            NMAX:    MAXIMUM NUMBER OF DATA FOR THE WORKING SPACE.     LECD-010
C            LO(I):   LOGICAL CONTROLS:                                 LECD-011
C               LO(32) =.TRUE. AUTOMATIC SEARCH ON SOME PARAMETERS.     LECD-012
C               LO(72) =.TRUE. NO OUTPUT OF EXPERIMENTAL DATA WHEN THEY LECD-013
C                              ARE READ.                                LECD-014
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             LECD-015
C               LO(85) =.TRUE. FISSION TRANSMISSION COEFFICIENTS.       LECD-016
C               LO(86) =.TRUE. GAMMA EMISSION IN COMPOUND NUCLEUS.      LECD-017
C OUTPUT:    NMX:     NUMBER OF INDEXES.                                LECD-018
C            MF:      CONTINUATION OF THE SECOND PART OF MF AS DESCRIBEDLECD-019
C                     IN SUBROUTINE DEPH.                               LECD-020
C            MFM,FM:  IN EQUIVALENCE BY CALL:                           LECD-021
C                     MFM(1,*) CHANNEL,                                 LECD-022
C                     MFM(2,*), MFM(3,*) BEGINNING AND END OF DATA,     LECD-023
C                     MFM(4,*) INDICATION CENTRE OF MASS OR LABORATORY  LECD-024
C                              SYSTEM BY 0 OR 1,                        LECD-025
C                     FM(3,*) WEIGHT,                                   LECD-026
C                     FM(4,*) AND FM(5,*) NORM AND ITS ERROR,           LECD-027
C                     FM(6,*) PLACE FOR CALCULATED NORMALISATION,       LECD-028
C                     FM(7,*) PLACE FOR CALCULATED CHI2.                LECD-029
C            DONN:    EXPERIMENTAL DATA: ANGLE, VALUE, ERROR,           LECD-030
C                     ANGULAR WIDTH AND PLACE FOR CORRECTED ERROR.      LECD-031
C            DW:      ACCURACY OF PARAMETERS IN SEARCH.                 LECD-032
C            NW:      INDEXES OF PARAMETERS IN SEARCH.                  LECD-033
C            NJY:     MAXIMUM INDEX OF NON STANDARD OBSERVABLE.         LECD-034
C                                                                       LECD-035
C      IF THE NUMBER OF DATA FOR AN OBSERVABLE IS 0, IT IS SUMMED       LECD-036
C      WITH THE NEXT OBSERVABLE WHICH MUST BE OF THE SAME KIND.         LECD-037
C                                                                       LECD-038
C FOR THE COMMON  /INTEG/ SEE CALC.                                     LECD-039
C                                                                       LECD-040
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /INTEG/:                     LECD-041
C  NCOLS:     NUMBER OF CHANNELS WITH ANGULAR DISTRIBUTIONS.            LECD-042
C  NCOLT:     NUMBER OF CHANNELS INCLUDING UNCOUPLED STATES.            LECD-043
C  JTH:       MAXIMUM NUMBER OF ANGLES FOR A PLOT.                      LECD-044
C  NCOLR:     NUMBER OF EXPERIMENTAL ANGULAR DISTRIBUTIONS.             LECD-045
C  NREC:      NUMBER OF VARIABLES IN SEARCH.                            LECD-046
C  NTOT:      NUMBER OF EXPERIMENTAL DATA.                              LECD-047
C   DEFINED:  NTOT.                                                     LECD-048
C   USED:                                                               LECD-049
C                                                                       LECD-050
C***********************************************************************LECD-051
      IMPLICIT REAL*8 (A-H,O-Z)                                         LECD-052
      LOGICAL LO(150),LT,LX                                             LECD-053
      DIMENSION WV(22,*),MF(10,*),MFM(14,*),FM(7,*),DONN(6,*),NP(2),DW(*LECD-054
     1),NW(*),YY(3)                                                     LECD-055
      COMMON /INOUT/ MR,MW,MS                                           LECD-056
      COMMON /INTEG/ IDMT,NPLACE,NCOLL,NJMAX,ITERM,JDM,JIT,KMIN,KMAX,NCOLECD-057
     1LS,NCOLT,NBET,LMX,LMAX1,NLT,ISM,NJC,JTX,KCC,MS1,MS2,KBA,KAB,KBC,JTLECD-058
     2H,NCOLR,NREC,NTOT,LMAX2,KE,ITEMM,KXT,LMAX3,NRZ,NTZ,IPM,IPK,MCM(2),LECD-059
     3NCT(6)                                                            LECD-060
      LT=.TRUE.                                                         LECD-061
      NTOT=0                                                            LECD-062
      NCLR=0                                                            LECD-063
      NMX=NREC+1                                                        LECD-064
      DO 5 IV=1,NCOLR                                                   LECD-065
C INPUT OF THE DEFINITION OF THE ANGULAR DISTRIBUTION.                  LECD-066
      LX=.FALSE.                                                        LECD-067
      READ (MR,1000) LX,MFM(4,IV),NT,MFM(1,IV),MF(2,IV),(FM(J,IV),J=3,5)LECD-068
      IF (MFM(1,IV).GT.NCOLS) GO TO 8                                   LECD-069
      IF (WV(3,MFM(1,IV)).LE.0.D0) GO TO 9                              LECD-070
      IF (MF(2,IV).GT.19) GO TO 10                                      LECD-071
      IF (FM(3,IV).EQ.0.D0) FM(3,IV)=1.D0                               LECD-072
      IF (FM(4,IV).EQ.0.D0) FM(4,IV)=1.D0                               LECD-073
      FM(6,IV)=1.D0                                                     LECD-074
      FM(7,IV)=0.D0                                                     LECD-075
      MF(1,IV)=MFM(1,IV)                                                LECD-076
      JTH=MAX0(JTH,NT)                                                  LECD-077
      NJY=MAX0(NJY,-MF(2,IV))                                           LECD-078
      MF(5,IV)=1                                                        LECD-079
      MF2=MIN0(2,MFM(1,IV))                                             LECD-080
      IF (MF(2,IV).EQ.0.OR.MF(2,IV).EQ.1) MF(5,IV)=NP(MF2)              LECD-081
      IF (.NOT.LO(72).AND.NT.EQ.0) WRITE (MW,1001) IV,NT,MFM(1,IV),MF(2,LECD-082
     1IV)                                                               LECD-083
      IF (IV.EQ.1) GO TO 1                                              LECD-084
      IF ((.NOT.LT).AND.(MF(2,IV).NE.MF(2,IV-1))) GO TO 11              LECD-085
    1 LT=NT.NE.0                                                        LECD-086
      NS=NTOT+1                                                         LECD-087
      NTOT=NTOT+NT                                                      LECD-088
      MFM(2,IV)=NS                                                      LECD-089
      MFM(3,IV)=NTOT                                                    LECD-090
      IF (.NOT.LT) GO TO 5                                              LECD-091
      NCLR=NCLR+1                                                       LECD-092
      IF (.NOT.LO(72)) WRITE (MW,1002) IV,NT,MFM(1,IV),MF(2,IV),(FM(I,IVLECD-093
     1),I=3,5)                                                          LECD-094
      IF (.NOT.LO(72).AND.(MF(2,IV).EQ.19)) WRITE (MW,1003)             LECD-095
      LX=LX.AND.(MF(2,IV).EQ.0.OR.MF(2,IV).EQ.1.OR.MF(2,IV).EQ.19)      LECD-096
      IF (.NOT.LO(72).AND.LX) WRITE (MW,1004)                           LECD-097
      IF (.NOT.LO(72).AND.MFM(4,IV).EQ.1) WRITE (MW,1005)               LECD-098
      IF (3*NTOT+3.GE.NMAX) CALL MEMO('LECD',NMAX,3*NTOT+3)             LECD-099
C INPUT OF THE ANGULAR DISTRIBUTION DATA.                               LECD-100
      DO 2 I=NS,NTOT                                                    LECD-101
      READ (MR,1006) (DONN(J,I),J=1,5)                                  LECD-102
      IF (LX) DONN(3,I)=DONN(2,I)*DONN(3,I)*.01D0                       LECD-103
      DONN(6,I)=DONN(3,I)                                               LECD-104
      IF (.NOT.LO(72)) WRITE (MW,1007) I,(DONN(J,I),J=1,5)              LECD-105
    2 CONTINUE                                                          LECD-106
      IF (MF(2,IV).LT.19) GO TO 4                                       LECD-107
C CHECK OF TOTAL CROSS-SECTION DATA.                                    LECD-108
      DO 3 I=NS,NTOT                                                    LECD-109
      J=IDINT(DONN(1,I)+.1D0)                                           LECD-110
      IF (J.LT.0.OR.J.GT.NCOLT+2) GO TO 12                              LECD-111
      IF (J.GT.0.AND.J.LE.NCOLT.AND.WV(3,J).LE.0.D0) GO TO 13           LECD-112
      IF (LO(81).AND.J.GT.NCOLS) GO TO 12                               LECD-113
      IF ((.NOT.LO(85)).AND.J.EQ.NCOLT+1) GO TO 12                      LECD-114
      IF ((.NOT.LO(86)).AND.J.EQ.NCOLT+2) GO TO 12                      LECD-115
    3 CONTINUE                                                          LECD-116
    4 IF (FM(5,IV).EQ.0.D0) GO TO 5                                     LECD-117
      NTOT=NTOT+1                                                       LECD-118
C NORMALISATION AS A DATA FOR THE SEARCH.                               LECD-119
      DONN(2,NTOT)=FM(4,IV)                                             LECD-120
      DONN(3,NTOT)=FM(5,IV)                                             LECD-121
      IF (.NOT.LO(72)) WRITE (MW,1008) NTOT,DONN(2,NTOT),DONN(3,NTOT)   LECD-122
    5 CONTINUE                                                          LECD-123
      IF ((.NOT.LO(72)).AND.(NCOLR.NE.NCLR)) WRITE (MW,1009) NCLR,NCOLR LECD-124
      IF ((.NOT.LO(32)).OR.(NREC.EQ.0)) GO TO 7                         LECD-125
      WRITE (MW,1010) NREC,KFIT,NESSAI,YY(1),YY(2)                      LECD-126
      NISE=12*NTOT+2*NREC                                               LECD-127
      IF (NISE+NMX.GE.2*NMAX) CALL MEMO('LECD',NMAX,(NISE+NMX)/2)       LECD-128
      READ (MR,1006) (DW(6*NTOT+I),I=1,NREC)                            LECD-129
      READ (MR,1011) (NW(NISE+I),I=1,NREC)                              LECD-130
      WRITE (MW,1012) (I,NW(NISE+I),DW(6*NTOT+I),I=1,NREC)              LECD-131
      DO 6 I=1,NREC                                                     LECD-132
C A NEGATIVE VALUE -K INSTEAD OF INDEXES OF PARAMETERS MEANS THAT K     LECD-133
C PARAMETERS WILL BE KEPT PROPORTIONAL - INPUT OF THEIR INDEXES.        LECD-134
      K=-NW(NISE+I)                                                     LECD-135
      IF (K.LT.0) GO TO 6                                               LECD-136
      NW(NISE+NMX)=K                                                    LECD-137
      IF (NISE+NMX+K.GE.2*NMAX) CALL MEMO('LECD',NMAX,(NISE+NMX+K)/2)   LECD-138
      READ (MR,1011) (NW(NISE+NMX+J),J=1,K)                             LECD-139
      WRITE (MW,1013) I,(NW(NISE+NMX+J),J=1,K)                          LECD-140
      NW(NISE+I)=-NMX                                                   LECD-141
      NMX=NMX+K+1                                                       LECD-142
    6 CONTINUE                                                          LECD-143
    7 IF (LT) RETURN                                                    LECD-144
      WRITE (MW,1014)                                                   LECD-145
      GO TO 14                                                          LECD-146
    8 WRITE (MW,1015) MFM(1,IV)                                         LECD-147
      GO TO 14                                                          LECD-148
    9 WRITE (MW,1016) MFM(1,IV)                                         LECD-149
      GO TO 14                                                          LECD-150
   10 WRITE (MW,1017)                                                   LECD-151
      GO TO 14                                                          LECD-152
   11 WRITE (MW,1018) MF(2,IV),MF(2,IV-1)                               LECD-153
      GO TO 14                                                          LECD-154
   12 WRITE (MW,1019) DONN(1,I),I                                       LECD-155
      GO TO 14                                                          LECD-156
   13 WRITE (MW,1020) DONN(1,I),I                                       LECD-157
   14 WRITE (MW,1021)                                                   LECD-158
      STOP                                                              LECD-159
 1000 FORMAT (L1,I1,I3,2I5,5X,3F10.5)                                   LECD-160
 1001 FORMAT (/'  ANG. DISTR.',I3,I9,' DATA   LEVEL =',I3,5X,'KIND =',I3LECD-161
     1,' UNRESOLVED WITH THE FOLLOWING ONE.'/)                          LECD-162
 1002 FORMAT (/'  ANG. DISTR.',I3,I9,' DATA   LEVEL =',I3,5X,'KIND =',I3LECD-163
     1//5X,'WEIGHT',1P,D12.4,5X,'NORM',D12.4,'  WITH ERROR',D12.4//23X,'LECD-164
     2ANGLE',14X,'VALUE',15X,'ERROR',12X,'ANG. WIDTH',10X,'ANG. ERROR'/)LECD-165
 1003 FORMAT (' THESE DATA ARE TOTAL CROSS-SECTIONS.')                  LECD-166
 1004 FORMAT (' INPUT OF PERCENTAGE ERRORS.')                           LECD-167
 1005 FORMAT (' ANGLES IN THE LABORATORY SYSTEM.')                      LECD-168
 1006 FORMAT (7F10.5)                                                   LECD-169
 1007 FORMAT (5X,I5,1P,5D20.6)                                          LECD-170
 1008 FORMAT (5X,I5,' DATA WHICH IS A NORMALISATION',1P,D20.6,' WITH ERRLECD-171
     1OR',D20.6)                                                        LECD-172
 1009 FORMAT (/5X,I5,' DIFFERENT ANGULAR DISTRIBUTIONS INSTEAD OF',I5/) LECD-173
 1010 FORMAT (//5X,I5,' PARAMETERS IN SEARCH'/5X,I5,' RESULTS STORED'/5XLECD-174
     1,I5,' RUNS    STARTING SCALE',F10.2/12X,'MULTIPLICATION FACTOR',F1LECD-175
     20.2/)                                                             LECD-176
 1011 FORMAT (14I5)                                                     LECD-177
 1012 FORMAT (5X,I5,5X,I5,5X,F15.8)                                     LECD-178
 1013 FORMAT (5X,I5,' VARIABLE DEFINED AS',20I5/(18X,20I5))             LECD-179
 1014 FORMAT (//'  THE LAST ANGULAR DISTRIBUTION INCLUDE NO DATA.')     LECD-180
 1015 FORMAT (//' LEVEL NUMBER',I4,' TOO LARGE.')                       LECD-181
 1016 FORMAT (//' LEVEL',I4,' CLOSED.')                                 LECD-182
 1017 FORMAT (//' THERE ARE ONLY 20 KIND OF PROGRAMMED OBSERVABLES'//'  LECD-183
     1FOR OTHER KINDS, INTRODUCE A NEGATIVE NUMBER AND, LATER, THEIR DESLECD-184
     2CRIPTION.')                                                       LECD-185
 1018 FORMAT (//' THE KIND =',I3,' OF THIS OBSERVABLE IS NOT THE SAME ASLECD-186
     1 THE KIND =',I3,' OF THE PREVIOUS ONE WHICH WAS EMPTY.')          LECD-187
 1019 FORMAT (' ANGULAR DATA',F10.5,' FOR',I4,' DATA NOT ALLOWED FOR TOTLECD-188
     1AL CROSS-SECTION.')                                               LECD-189
 1020 FORMAT (' ANGULAR DATA',F10.5,' FOR',I4,' DATA NOT ALLOWED FOR CLOLECD-190
     1SED CHANNEL.')                                                    LECD-191
 1021 FORMAT (//' IN LECD  ...  STOP  ...')                             LECD-192
      END                                                               LECD-193
C 21/02/07                                                      ECIS12  OBSE-000
      SUBROUTINE OBSE(MF,CMF,NT,NCOLR,IPI,JTN,LO,AM,JCAL,ITX,ITZ,BM,CBM,OBSE-001
     1NX,DM,NY)                                                         OBSE-002
C COMPUTES FOR EACH OBSERVABLE ALL THE INDICATIONS FOR DO LOOPS AND THE OBSE-003
C GEOMETRICAL COEFFICIENTS NEEDED IN SUBROUTINE SCAT.                   OBSE-004
C INPUT:     MF,CMF:  EQUIVALENT BY CALL, INFORMATIONS COMING FROM      OBSE-005
C                     SUBROUTINES DEPH AND LECD.                        OBSE-006
C            NT:      NUMBER OF ROWS OF MF.                             OBSE-007
C            NCOLR :  NUMBER OF EXPERIMENTAL ANGULAR DISTRIBUTIONS.     OBSE-008
C            IPI(J,*):MULTIPLICITY OF PARTICLE AND TARGET FOR J+2 AND 3.OBSE-009
C            JTN:     LENGTH AVAILABLE IN AM.                           OBSE-010
C            LO(I):   LOGICAL CONTROLS:                                 OBSE-011
C               LO(31) =.TRUE. INPUT OF EXPERIMENTAL DATA AND CHI2      OBSE-012
C                              CALCULATION.                             OBSE-013
C               LO(92) =.TRUE. NON STANDARD OBSERVABLES AT EQUIDISTANT  OBSE-014
C                              ANGLES.                                  OBSE-015
C               LO(126)=.TRUE. SOME OBSERVABLES IN LABORATORY SYSTEM.   OBSE-016
C OUTPUT:    MF,CMF:  SECOND PART DESCRIBED IN SUBROUTINE DEPH UPDATED. OBSE-017
C            AM:      CHARACTER*4 FOR TRANSFER, SEE DESCRIPTION BELOW.  OBSE-018
C            JCAL:    LENGTH OF AM.                                     OBSE-019
C            LO(I):   LOGICAL CONTROLS: LO(126) IS DEFINED HERE.        OBSE-020
C WORKING AREAS:                                                        OBSE-021
C            ITX:     EQUIVALENT WITH AM BY CALL, TO STORE QUANTUM      OBSE-022
C                     NUMBERS OF OBSERVABLES.                           OBSE-023
C            ITZ:     EQUIVALENT WITH AM BY CALL, TO STORE LEGENDS OF   OBSE-024
C                     OBSERVABLES.                                      OBSE-025
C            BM(9,*): IN EQUIVALENCE WITH AM SHIFTED OF 4 TIMES THE     OBSE-026
C                     NUMBER OF STANDARD AND NON STANDARD OBSERVABLES.  OBSE-027
C                     USED FOR COMPUTATION OF CLEBSCH-GORDAN            OBSE-028
C                     COEFFICIENTS BY RECURRENCE.                       OBSE-029
C            CBM:     IN EQUIVALENCE BY CALL WITH BM. USED FOR TRANSFER OBSE-030
C                     OF DATA TO AM.                                    OBSE-031
C            NX(18,*):IN EQUIVALENCE BY CALL WITH BM. USED FOR          OBSE-032
C                     MANIPULATION OF QUANTUM NUMBERS.                  OBSE-033
C            NY(*):   IN EQUIVALENCE BY CALL WITH NX.                   OBSE-034
C                                                                       OBSE-035
C***********************************************************************OBSE-036
C  ALL THE OBSERVABLES (AS GIVEN FOR SOME OF THEM IN SUBROUTINE DEPH FOROBSE-037
C     THE DESCRIPTION OF THE SECOND PART OF TABLE MF) ARE DEFINED AS A  OBSE-038
C     SUM OF OPERATORS "A(L1,M1,L2,M2 L1,M1,L2,M2)" WITH SOME NUMERICAL OBSE-039
C     COEFFICIENT. WITH SCATTERING AMPLITUDE B(I1,I2,I3,I4) FOR A GIVEN OBSE-040
C     ANGLE, THE CONTRIBUTION OF "A" IS GIVEN BY A QUADRUPLE SUM ON     OBSE-041
C     I1, I2, I3 AND I4 FROM IM1 TO IP1, IM2 TO IP2, IM3 TO IP3, IM4 TO OBSE-042
C     IP4 RESPECTIVELY OF:                                              OBSE-043
C     B(I1,I2,I3,I4)(COMPLEX CONJUGATE)*B(I1-NM1,I2-NM2,I3-NM3,I4-NM4)* OBSE-044
C     AM(IL1+I1)*AM(IL2-I2)*AM(IL3+I3)*AM(IL4-I4)                       OBSE-045
C     WITH AM(IL1+I1), AM(IL2-I2),... CLEBSCH-GORDAN COEFFICIENTS STOREDOBSE-046
C     IN THE SECOND PART OF TABLE AM ASSUMED TO BE DOUBLE PRECISION.    OBSE-047
C        DUE TO FREQUENT REDUCTION OF THESE CLEBSCH-GORDAN COEFFICIENTS OBSE-048
C     TO UNITY, THERE IS A LOGICAL FOR EACH DO LOOP WHICH ARE .TRUE. IF OBSE-049
C     THERE IS A TENSOR OPERATOR FOR THE RELATED DO LOOP,.FALSE. FOR    OBSE-050
C     IDENTITY OPERATOR; A FIFTH LOGICAL IS .TRUE. FOR NO TENSOR        OBSE-051
C     OPERATOR AT ALL AND A SIXTH IS .TRUE. FOR PURE IMAGINARY          OBSE-052
C     COEFFICIENT. THESE SIX LOGICALS ARE STORED ON A BINARY BASIS      OBSE-053
C     IN "JQ".                                                          OBSE-054
C        INDICATION FOR CHANGE OF FRAME, N1 FOR THE PARTICLE AND N2 THE OBSE-055
C     TARGET:                                                           OBSE-056
C            1 FOR LABORATORY SYSTEM,                                   OBSE-057
C            2 FOR AXIS ALONG THE INCIDENT DIRECTION,                   OBSE-058
C     ARE STORED UNDER THE FORM "JT"=N1+1000*N2.                        OBSE-059
C                                                                       OBSE-060
C  **** THE FIRST PART OF THE AM TABLE IS SETS OF 20 INTEGERS, EACH OF  OBSE-061
C     THEM RELATED TO A SINGLE "A" - THE 16 FIRST ARE INDICATIONS FOR   OBSE-062
C     THE 4 DO LOOPS: IM1, IP1, NM1, IL1, IM2, IP2, NM2, IL2, IM3, IP3, OBSE-063
C     NM3, IL3, IM4, IP4, NM4 AND IL4. THERE ARE FOLLOWED BY "JQ" AND   OBSE-064
C     "JT" AND THE COEFFICIENT OF THIS "A" IN DOUBLE PRECISION.         OBSE-065
C  **** THE SECOND PART ARE TENSOR OPERATOR MATRIX ELEMENTS WHICH ARE   OBSE-066
C     QUITE PURELY CLEBSCH-GORDAN COEFFICIENTS.                         OBSE-067
C                                                                       OBSE-068
C***********************************************************************OBSE-069
      IMPLICIT REAL*8 (A-H,O-Z)                                         OBSE-070
      LOGICAL LT1,LT2,LZ(6),LO(150)                                     OBSE-071
      DIMENSION MF(10,*),IPI(11,*),ITX(7,*),BM(9,*),IY(2,20),MT(4),NX(18OBSE-072
     1,*),MX(8,24),NZ(2),CX(24),DM(*),NY(*)                             OBSE-073
      CHARACTER*4 CMF(10,*),AM(*),ITZ(7,* ),CBM(*),IZ(5,20)             OBSE-074
      COMMON /INOUT/ MR,MW,MS                                           OBSE-075
      DATA IY /4*1,2*2,2*3,2*4,2*5,2*6,7,8,9,10,2*11,2*12,2*13,14,16,2*1OBSE-076
     17,18,19,20,21,2*22,2*23,2*24,2*1/                                 OBSE-077
      DATA CX /6*1.D0,2*-1.D0,1.D0,-1.D0,1.D0,2*-1.4142136573791504D0,3*OBSE-078
     1.5D0,1.4142136999999999D0,2*-1.D0,1.D0,-1.D0,1.D0,2*-1.41421365737OBSE-079
     291504D0/                                                          OBSE-080
      DATA MX,JTS /8*0,2*1,10*0,2*1,2*0,2,7*0,2,1,6*0,2*2,6*0,2*1,2*0,2*OBSE-081
     11,2*0,2*1,2*0,1,-1,2*0,2*1,2*0,2*1,2*0,2*1,2*0,1,-1,2*0,1,3*0,1,3*OBSE-082
     20,2*1,2*0,1,3*0,1,3*0,2*1,10*0,2*1,2*0,2*1,2*0,2*1,2*0,1,-1,4*0,2*OBSE-083
     31,4*0,4*1,4*0,3*1,-1,4*0,4*1,4*0,3*1,-1,4*0,1,0,1,5*0,3*1,5*0,1,0,OBSE-084
     42*1,5*0/                                                          OBSE-085
      DATA IZ /'   C','ROSS','-SEC','TION','    ','   C','. S.','/RUT','OBSE-086
     1HER.','    ','   A','SYM.',' OR ','IT11',2*'    ','VECT','. PO','LOBSE-087
     2AR.',4*'    ',' T20',4*'    ',' T21',4*'    ',' T22',3*'    ','KYYOBSE-088
     3 ','OR D',3*'    ','KXX ','OR R',2*'    ','   K','ZZ O','R A''',3*OBSE-089
     4'    ','KZX ','OR A',2*'    ','   K','XZ O','R R''',2*'    ','   SOBSE-090
     5','PIN-','FLIP',2*'    ','TARG','ET A','SYM.',4*'    ',' AYY',4*' OBSE-091
     6   ',' AXX',4*'    ' ,' AZZ',4*'    ',' AXZ',4*'    ',' AZX',2*'  OBSE-092
     7  ',' TOT','AL C','.-S.','    '/                                  OBSE-093
      IF (JTN.LT.270) CALL MEMO('OBSE',JTN,270)                         OBSE-094
C TRANSFER OF STANDARD DESCRIPTIONS.                                    OBSE-095
      DO 2 I=1,24                                                       OBSE-096
      DO 1 J=1,8                                                        OBSE-097
    1 NX(J+6,I)=MX(J,I)                                                 OBSE-098
    2 BM(3,I)=CX(I)                                                     OBSE-099
      DO 4 I=1,20                                                       OBSE-100
      ITX(1,I)=IY(1,I)                                                  OBSE-101
      ITX(2,I)=IY(2,I)                                                  OBSE-102
      DO 3 J=3,7                                                        OBSE-103
    3 ITZ(J,I)=IZ(J-2,I)                                                OBSE-104
    4 CONTINUE                                                          OBSE-105
      LO(126)=.FALSE.                                                   OBSE-106
      KIT=20                                                            OBSE-107
      KNX=24                                                            OBSE-108
      JCAL=0                                                            OBSE-109
      MT(1)=IPI(2,1)                                                    OBSE-110
      MT(2)=IPI(3,1)                                                    OBSE-111
C VERIFICATION OF INDICATIONS ALREADY IN MF(1,I).                       OBSE-112
      DO 5 I=1,NT                                                       OBSE-113
      IF (MF(2,I).LE.18) GO TO 5                                        OBSE-114
      IF (MF(2,I).EQ.19.AND.NT-I.GE.NCOLR) GO TO 83                     OBSE-115
      IF (MF(2,I).GT.19) GO TO 84                                       OBSE-116
    5 MF(6,I)=0                                                         OBSE-117
      IF (.NOT.(LO(92).OR.LO(31))) GO TO 56                             OBSE-118
C SEARCH FOR NON STANDARD OBSERVABLES.                                  OBSE-119
    6 DO 7 L=1,NT                                                       OBSE-120
      IF (MF(2,L).LT.0) GO TO 8                                         OBSE-121
    7 CONTINUE                                                          OBSE-122
      GO TO 56                                                          OBSE-123
    8 KZ=KIT                                                            OBSE-124
      KIT=KIT+1                                                         OBSE-125
C INPUT OF THE DESCRIPTION OF NON STANDARD OBSERVABLES.                 OBSE-126
      LT1=.FALSE.                                                       OBSE-127
      LT2=.FALSE.                                                       OBSE-128
      READ (MR,1000) LT1,LT2,LT3,KX,K,(ITZ(J,KIT),J=3,7)                OBSE-129
      K1=KNX+1                                                          OBSE-130
      KNX=KNX+K                                                         OBSE-131
      IF (9*KNX.GT.JTN) CALL MEMO('OBSE',JTN,9*KNX)                     OBSE-132
      READ (MR,1001) ((NX(J,I),J=7,14),I=K1,KNX)                        OBSE-133
      READ (MR,1002) (BM(3,I),I=K1,KNX)                                 OBSE-134
      IF (LT1.OR.LT2) READ (MR,1002) (BM(1,I),I=K1,KNX)                 OBSE-135
    9 K2=K1                                                             OBSE-136
      WRITE (MW,1003) KX,(ITZ(J,KIT),J=3,7),K                           OBSE-137
      IF (LT1) WRITE (MW,1004)                                          OBSE-138
      IF (LT3.EQ.1) WRITE (MW,1005)                                     OBSE-139
      IF (LT3.EQ.2) WRITE (MW,1006)                                     OBSE-140
      IF (.NOT.LT2) GO TO 22                                            OBSE-141
C OUTPUT OF THE DESCRIPTION NOT COMPLETELY IN TENSOR NOTATION           OBSE-142
C IF LT2=.TRUE. , OBSERVABLES CAN BE DEFINED AS MATRIX ELEMENTS         OBSE-143
C (MI,MF). IN THIS CASE,THE VALUES READ ARE (MI-S-1,MF-S-1) INSTEAD OF  OBSE-144
C THE QUANTUM NUMBERS OF TENSOR OPERATOR.                               OBSE-145
      WRITE (MW,1007)                                                   OBSE-146
   10 K3=MIN0(K2+5,KNX)                                                 OBSE-147
      WRITE (MW,1008) ((NX(I,J),I=11,14),J=K2,K3)                       OBSE-148
      WRITE (MW,1009) (BM(3,I),I=K2,K3)                                 OBSE-149
      WRITE (MW,1010) ((NX(I,J),I=7,10),J=K2,K3)                        OBSE-150
      WRITE (MW,1011) (BM(1,I),I=K2,K3)                                 OBSE-151
      K2=K3+1                                                           OBSE-152
      IF (K2.LE.KNX) GO TO 10                                           OBSE-153
      IV=MF(1,L)                                                        OBSE-154
      MT(3)=IPI(2,IV)                                                   OBSE-155
      MT(4)=IPI(3,IV)                                                   OBSE-156
      KLTTMP=1                                                          OBSE-157
C SEARCH FOR NON TENSOR DESCRIPTION - PSEUDO-LOOP FOR IJ.               OBSE-158
      IJ=1                                                              OBSE-159
   11 K2=K1                                                             OBSE-160
      K6=KNX                                                            OBSE-161
   12 IF (K2.GT.K6) GO TO 14                                            OBSE-162
      DO 13 K=K2,K6                                                     OBSE-163
      IF (NX(2*IJ+5,K).LT.0) GO TO 15                                   OBSE-164
   13 CONTINUE                                                          OBSE-165
   14 IF (K6.NE.KNX) GO TO 27                                           OBSE-166
      GO TO 20                                                          OBSE-167
C RECURRENCE COMPUTATION OF (-)**(S-MF)*<S S MI -MF|L M>/SQRT(2*S+1)    OBSE-168
C STARTING WITH THE MINIMUM VALUE OF L.                                 OBSE-169
   15 M1=MT(IJ)+NX(2*IJ+5,K)                                            OBSE-170
      M2=MT(IJ)+NX(2*IJ+6,K)                                            OBSE-171
      IF (M1.LT.0.OR.M2.LT.0) GO TO 85                                  OBSE-172
      M4=M1-M2                                                          OBSE-173
      M3=IABS(M4)+1                                                     OBSE-174
      M5=MT(IJ)                                                         OBSE-175
      E2=0.D0                                                           OBSE-176
      E3=1.D0                                                           OBSE-177
      C1=DFLOAT(M1+M2-MT(IJ)+1)                                         OBSE-178
      D2=0.D0                                                           OBSE-179
      C2=0.D0                                                           OBSE-180
      DO 18 M=M3,M5                                                     OBSE-181
      IF (M.EQ.M3) GO TO 16                                             OBSE-182
      E1=E2                                                             OBSE-183
      E2=E3                                                             OBSE-184
      D1=D2                                                             OBSE-185
      F1=DFLOAT(((M-1)**2-M4**2)*(MT(IJ)**2-(M-1)**2))                  OBSE-186
      F2=DFLOAT((2*M-1)*(2*M-3))                                        OBSE-187
      D2=DSQRT(F1/F2)                                                   OBSE-188
      E3=(C1*E2-D1*E1)/D2                                               OBSE-189
   16 KNX=KNX+1                                                         OBSE-190
      DO 17 JI=7,14                                                     OBSE-191
   17 NX(JI,KNX)=NX(JI,K)                                               OBSE-192
      NX(2*IJ+5,KNX)=M-1                                                OBSE-193
      NX(2*IJ+6,KNX)=M4                                                 OBSE-194
      C2=C2+E3*E3                                                       OBSE-195
   18 BM(1,KNX)=E3                                                      OBSE-196
C NORMALISATION AND SIGN GIVEN BY COEFFICIENT FOR MAXIMUM VALUE OF L.   OBSE-197
      C2=C2*DFLOAT(MT(IJ))                                              OBSE-198
      C2=1.D0/DSQRT(C2)                                                 OBSE-199
      IF (E3.LT.0.D0) C2=-C2                                            OBSE-200
      IF (MOD(NX(2*IJ+6,K),2).EQ.0) C2=-C2                              OBSE-201
      DO 19 M=M3,M5                                                     OBSE-202
      JI=KNX+M-M5                                                       OBSE-203
      BM(3,JI)=BM(3,K)*BM(1,JI)*C2                                      OBSE-204
   19 BM(1,JI)=BM(1,K)*BM(1,JI)*C2                                      OBSE-205
      BM(3,K)=0.D0                                                      OBSE-206
      BM(1,K)=0.D0                                                      OBSE-207
      K2=K+1                                                            OBSE-208
      GO TO 12                                                          OBSE-209
   20 IJ=IJ+1                                                           OBSE-210
      IF (IJ.LE.4) GO TO 11                                             OBSE-211
      K2=K1                                                             OBSE-212
      LT2=.FALSE.                                                       OBSE-213
      IF (LT1) GO TO 22                                                 OBSE-214
C IF AXIS OF QUANTIFICATION NOT IN VERTICAL PLANE, TAKE IMAGINARY       OBSE-215
C AMPLITUDE FOR PURE IMAGINARY TENSORS.                                 OBSE-216
      DO 21 K=K1,KNX                                                    OBSE-217
      M1=NX(7,K)+NX(9,K)+NX(11,K)+NX(13,K)                              OBSE-218
      IF (MOD(M1,2).NE.0) BM(3,K)=BM(1,K)                               OBSE-219
   21 CONTINUE                                                          OBSE-220
   22 IF (LT1) GO TO 35                                                 OBSE-221
C THE FIRST NON ZERO MAGNETIC QUANTUM NUMBER MUST BE POSITIVE.          OBSE-222
      DO 26 K4=K1,KNX                                                   OBSE-223
      BM(1,K4)=0.D0                                                     OBSE-224
      DO 23 J=8,14,2                                                    OBSE-225
      IF (NX(J,K4)) 24 , 23 , 26                                        OBSE-226
   23 CONTINUE                                                          OBSE-227
      GO TO 26                                                          OBSE-228
   24 IK=0                                                              OBSE-229
      DO 25 J=8,14,2                                                    OBSE-230
      IK=IK+NX(J-1,K4)+NX(J,K4)                                         OBSE-231
   25 NX(J,K4)=-NX(J,K4)                                                OBSE-232
      IF (2*(IK/2).NE.IK) BM(3,K4)=-BM(3,K4)                            OBSE-233
   26 CONTINUE                                                          OBSE-234
      KLTTMP=2                                                          OBSE-235
C REDUCTION OF THE DESCRIPTION:                                         OBSE-236
C FOR CHANGE INTO TENSORS IF KLTTMP=1, FOR HERE IF KLTTMP=2,            OBSE-237
C FOR CHANGE TO AXIS IN THE REACTION PLANE IF KLTTMP=3.                 OBSE-238
   27 IF (K1.GT.KNX) GO TO 86                                           OBSE-239
      DO 30 K4=K1,KNX                                                   OBSE-240
      IF (DABS(BM(3,K4))+DABS(BM(1,K4)).LT..1D-6) GO TO 32              OBSE-241
      K5=K4-1                                                           OBSE-242
      IF (K1.GT.K5) GO TO 30                                            OBSE-243
      DO 29 J=K1,K5                                                     OBSE-244
      DO 28 I=7,14                                                      OBSE-245
      IF (NX(I,J).NE.NX(I,K4)) GO TO 29                                 OBSE-246
   28 CONTINUE                                                          OBSE-247
      GO TO 31                                                          OBSE-248
   29 CONTINUE                                                          OBSE-249
   30 CONTINUE                                                          OBSE-250
      GO TO ( 20 , 35 , 50 ),KLTTMP                                     OBSE-251
   31 BM(3,J)=BM(3,J)+BM(3,K4)                                          OBSE-252
      BM(1,J)=BM(1,J)+BM(1,K4)                                          OBSE-253
   32 KNX=KNX-1                                                         OBSE-254
      IF (KNX.LT.K4) GO TO 27                                           OBSE-255
      DO 34 K=K4,KNX                                                    OBSE-256
      DO 33 J=7,14                                                      OBSE-257
   33 NX(J,K)=NX(J,K+1)                                                 OBSE-258
      BM(1,K)=BM(1,K+1)                                                 OBSE-259
   34 BM(3,K)=BM(3,K+1)                                                 OBSE-260
      GO TO 27                                                          OBSE-261
C OUTPUT OF THE DESCRIPTION.                                            OBSE-262
   35 K3=MIN0(K2+5,KNX)                                                 OBSE-263
      WRITE (MW,1008) ((NX(I,J),I=11,14),J=K2,K3)                       OBSE-264
      WRITE (MW,1012) (BM(3,I),I=K2,K3)                                 OBSE-265
      WRITE (MW,1010) ((NX(I,J),I=7,10),J=K2,K3)                        OBSE-266
      IF (LT1) WRITE (MW,1011) (BM(1,I),I=K2,K3)                        OBSE-267
      K2=K3+1                                                           OBSE-268
      IF (K2.LE.KNX) GO TO 35                                           OBSE-269
      DO 37 K=K1,KNX                                                    OBSE-270
      DO 36 I=8,14,2                                                    OBSE-271
      IF (IABS(NX(I,K)).GT.NX(I-1,K).OR.NX(I-1,K).LT.0) GO TO 87        OBSE-272
   36 CONTINUE                                                          OBSE-273
   37 CONTINUE                                                          OBSE-274
      IF (.NOT.LT1) GO TO 54                                            OBSE-275
C CHANGE FROM VERTICAL AXIS OF QUANTIFICATION TO HELICITY DESCRIPTION   OBSE-276
C BY THE ROTATION R(PI/2,PI/2,PI/2).                                    OBSE-277
      DO 39 I=K1,KNX                                                    OBSE-278
      M1=IABS(NX(8,I))+IABS(NX(10,I))+IABS(NX(12,I))+IABS(NX(14,I))     OBSE-279
      M2=M1/2                                                           OBSE-280
      IF (2*M2.NE.M1) GO TO 88                                          OBSE-281
      IF (2*(M2/2).EQ.M2) GO TO 38                                      OBSE-282
      BM(3,I)=-BM(3,I)                                                  OBSE-283
      BM(1,I)=-BM(1,I)                                                  OBSE-284
   38 IF (M1.EQ.0) BM(1,I)=0.D0                                         OBSE-285
   39 CONTINUE                                                          OBSE-286
      KLTTMP=3                                                          OBSE-287
C PSEUDO-LOOP ON IJ TO 50.                                              OBSE-288
      IJ=7                                                              OBSE-289
   40 J1=KNX                                                            OBSE-290
      DO 47 K3=K1,KNX                                                   OBSE-291
      K=NX(IJ,K3)                                                       OBSE-292
      N1=K+NX(IJ+1,K3)+1                                                OBSE-293
      N=2*K+1                                                           OBSE-294
      E3=1.D0                                                           OBSE-295
      IF (K.EQ.0) GO TO 42                                              OBSE-296
C ROTATION MATRIX ELEMENTS FOR PI/2.                                    OBSE-297
      DO 41 I=1,K                                                       OBSE-298
   41 E3=E3*.5D0                                                        OBSE-299
   42 C1=0.D0                                                           OBSE-300
      E2=0.D0                                                           OBSE-301
      FJ=DFLOAT(K)                                                      OBSE-302
      FS=-FJ                                                            OBSE-303
      DO 43 I=1,N1                                                      OBSE-304
      IF (I.EQ.1) GO TO 43                                              OBSE-305
      C2=C1                                                             OBSE-306
      C1=DSQRT(DFLOAT((I-1)*(1+N-I)))                                   OBSE-307
      E1=E2                                                             OBSE-308
      E2=E3                                                             OBSE-309
      E3=(2.D0*FJ*E2-E1*C2)/C1                                          OBSE-310
      FS=FS+1.D0                                                        OBSE-311
   43 F2=0.D0                                                           OBSE-312
      F3=E3                                                             OBSE-313
      D1=0.D0                                                           OBSE-314
      DO 46 J=1,N                                                       OBSE-315
      IF (J.EQ.1) GO TO 44                                              OBSE-316
      D2=D1                                                             OBSE-317
      D1=DSQRT(DFLOAT((J-1)*(1+N-J)))                                   OBSE-318
      F1=F2                                                             OBSE-319
      F2=F3                                                             OBSE-320
      F3=(2.D0*FS*F2-F1*D2)/D1                                          OBSE-321
   44 J1=J1+1                                                           OBSE-322
      IF (9*J1.GT.JTN) CALL MEMO('OBSE',JTN,9*J1)                       OBSE-323
      DO 45 L=7,14                                                      OBSE-324
   45 NX(L,J1)=NX(L,K3)                                                 OBSE-325
      BM(3,J1)=F3*BM(3,K3)                                              OBSE-326
      BM(1,J1)=F3*BM(1,K3)                                              OBSE-327
   46 NX(IJ+1,J1)=J-1-K                                                 OBSE-328
   47 CONTINUE                                                          OBSE-329
C REDUCTION OF THE DESCRIPTION.                                         OBSE-330
      J2=K1-1                                                           OBSE-331
      J3=KNX+1                                                          OBSE-332
      DO 49 J4=J3,J1                                                    OBSE-333
      J2=J2+1                                                           OBSE-334
      DO 48 L=7,14                                                      OBSE-335
   48 NX(L,J2)=NX(L,J4)                                                 OBSE-336
      BM(3,J2)=BM(3,J4)                                                 OBSE-337
   49 BM(1,J2)=BM(1,J4)                                                 OBSE-338
      KNX=J2                                                            OBSE-339
      GO TO 27                                                          OBSE-340
   50 IJ=IJ+2                                                           OBSE-341
      IF (IJ.LE.13) GO TO 40                                            OBSE-342
      DO 53 J1=K1,KNX                                                   OBSE-343
      M1=NX(7,J1)+NX(9,J1)+NX(11,J1)+NX(13,J1)                          OBSE-344
      M2=NX(8,J1)+NX(10,J1)+NX(12,J1)+NX(14,J1)+4*M1                    OBSE-345
      M3=M2/2                                                           OBSE-346
      IF (2*(M1/2).EQ.M1) GO TO 51                                      OBSE-347
      IF (2*M3.NE.M2) GO TO 52                                          OBSE-348
      BM(3,J1)=BM(1,J1)                                                 OBSE-349
      GO TO 52                                                          OBSE-350
   51 IF (2*M3.EQ.M2) GO TO 52                                          OBSE-351
      BM(3,J1)=-BM(1,J1)                                                OBSE-352
   52 IF (2*(M3/2).NE.M3) BM(3,J1)=-BM(3,J1)                            OBSE-353
   53 CONTINUE                                                          OBSE-354
      LT1=.FALSE.                                                       OBSE-355
      WRITE (MW,1013)                                                   OBSE-356
      K=KNX+1-K1                                                        OBSE-357
      GO TO 9                                                           OBSE-358
C STORAGE OF THE DESCRIPTION.                                           OBSE-359
   54 L1=0                                                              OBSE-360
      ITX(1,KIT)=K1                                                     OBSE-361
      ITX(2,KIT)=KNX                                                    OBSE-362
      DO 55 I=1,NT                                                      OBSE-363
      IF (MF(2,I).NE.-KX) GO TO 55                                      OBSE-364
      MF(2,I)=KZ                                                        OBSE-365
      MF(6,I)=LT3                                                       OBSE-366
      L1=L1+1                                                           OBSE-367
   55 CONTINUE                                                          OBSE-368
      IF (L1.EQ.0) WRITE (MW,1014) KX                                   OBSE-369
      GO TO 6                                                           OBSE-370
C COMPUTATION OF ALL THE INDICATIONS NEEDED FOR THE OBSERVABLES.        OBSE-371
C (BEGINNING AND END OF DO LOOPS,GEOMETRICAL COEFFICIENTS ...)          OBSE-372
   56 DO 57 I=1,NT                                                      OBSE-373
      I1=MF(2,I)+1                                                      OBSE-374
      MF(3,I)=ITX(1,I1)                                                 OBSE-375
   57 MF(4,I)=ITX(2,I1)                                                 OBSE-376
      LT1=.FALSE.                                                       OBSE-377
   58 LT1=.NOT.LT1                                                      OBSE-378
C LT1=.TRUE.  FIRST PASSAGE: NUMBER OF INFORMATIONS NEEDED FOR DO LOOPS OBSE-379
C LT1=.FALSE. SECOND ONE: COMPUTATION OF GEOMETRICAL COEFFICIENTS WHICH OBSE-380
C ARE STORED AFTER THE INDICATIONS FOR DO LOOPS.                        OBSE-381
      ICAL=0                                                            OBSE-382
      NCAL=0                                                            OBSE-383
      DO 78 I=1,NT                                                      OBSE-384
      IV=MF(1,I)                                                        OBSE-385
      MT(3)=IPI(2,IV)                                                   OBSE-386
      MT(4)=IPI(3,IV)                                                   OBSE-387
      IF (MF(2,I).LE.0.OR.MF(2,I).EQ.19) GO TO 78                       OBSE-388
      IF (MF(2,I).NE.1) GO TO 59                                        OBSE-389
      IF (IV.NE.1) GO TO 89                                             OBSE-390
      GO TO 78                                                          OBSE-391
   59 IF ((MF(2,I).EQ.2.AND.MT(1).LE.3).OR.(MF(2,I).EQ.3.AND.MT(3).LE.3)OBSE-392
     1) GO TO 62                                                        OBSE-393
      IF (I.EQ.1) GO TO 63                                              OBSE-394
      I1=I-1                                                            OBSE-395
      DO 60 J=1,I1                                                      OBSE-396
      IF (MF(1,I).EQ.MF(1,J).AND.MF(2,I).EQ.MF(2,J)) GO TO 61           OBSE-397
   60 CONTINUE                                                          OBSE-398
      GO TO 63                                                          OBSE-399
   61 MF(3,I)=MF(3,J)                                                   OBSE-400
      MF(4,I)=MF(4,J)                                                   OBSE-401
      GO TO 78                                                          OBSE-402
   62 MF(2,I)=-MF(2,I)                                                  OBSE-403
      IF ((MF(2,I).EQ.-2.AND.MT(1).EQ.0).OR.(MF(2,I).EQ.-3.AND.MT(3).EQ.OBSE-404
     10)) GO TO 90                                                      OBSE-405
      GO TO 78                                                          OBSE-406
   63 I1=MF(3,I)                                                        OBSE-407
      I2=MF(4,I)                                                        OBSE-408
      DO 77 KI=I1,I2                                                    OBSE-409
      KT=0                                                              OBSE-410
      DO 73 L=1,4                                                       OBSE-411
      K=NX(2*L+5,KI)                                                    OBSE-412
      NM=NX(2*L+6,KI)                                                   OBSE-413
      KT=KT+K                                                           OBSE-414
      IF (K.GT.MT(L)) GO TO 91                                          OBSE-415
      IF (ICAL.EQ.0) GO TO 65                                           OBSE-416
      DO 64 N=1,ICAL                                                    OBSE-417
      IF (MT(L).EQ.NX(15,N).AND.K.EQ.NX(16,N).AND.NM.EQ.NX(17,N)) GO TO OBSE-418
     1 71                                                               OBSE-419
   64 CONTINUE                                                          OBSE-420
   65 ICAL=ICAL+1                                                       OBSE-421
      IF (9*ICAL.GT.JTN) CALL MEMO('OBSE',JTN,9*ICAL)                   OBSE-422
      NX(15,ICAL)=MT(L)                                                 OBSE-423
      NX(16,ICAL)=K                                                     OBSE-424
      NX(17,ICAL)=NM                                                    OBSE-425
      NX(18,ICAL)=JCAL                                                  OBSE-426
      IF (LT1) GO TO 73                                                 OBSE-427
      IL=MT(L)                                                          OBSE-428
      NX(1,ICAL)=MAX0(1,1+NM)                                           OBSE-429
      NX(2,ICAL)=MIN0(IL,IL+NM)                                         OBSE-430
      NX(3,ICAL)=NM                                                     OBSE-431
      NX(4,ICAL)=JCAL-NX(1,ICAL)+1                                      OBSE-432
      IF (NX(16,ICAL).EQ.0) GO TO 70                                    OBSE-433
C RECURRENCE COMPUTATION OF GEOMETRICAL COEFFICIENTS.                   OBSE-434
      F3=DSQRT(DFLOAT(2*K+1))                                           OBSE-435
      DO 66 J=1,K                                                       OBSE-436
   66 F3=-F3*DSQRT(DFLOAT(IL-J)/DFLOAT(IL+J))                           OBSE-437
      JNM=NM                                                            OBSE-438
      INM=IABS(JNM)                                                     OBSE-439
      IF (JNM.EQ.0) GO TO 68                                            OBSE-440
      IF (INM.NE.JNM.AND.2*(INM/2).NE.INM) F3=-F3                       OBSE-441
      DO 67 J=1,INM                                                     OBSE-442
   67 F3=F3*DSQRT(DFLOAT((K+J)*(K-J+1))/DFLOAT(J*(IL-J)))               OBSE-443
   68 JCAL=JCAL+1                                                       OBSE-444
      IS=NX(2,ICAL)-NX(1,ICAL)                                          OBSE-445
      IF (JCAL+IS.GT.JTS) CALL MEMO('OBSE',JTS,JCAL+IS)                 OBSE-446
      DM(JCAL+KX)=F3                                                    OBSE-447
      IF (IS.LT.1) GO TO 70                                             OBSE-448
      F2=0.D0                                                           OBSE-449
      D1=K*(K+1)-(IL+1)*(INM-1)                                         OBSE-450
      C2=0.D0                                                           OBSE-451
      DO 69 J=1,IS                                                      OBSE-452
      C1=C2                                                             OBSE-453
      C2=DSQRT(DFLOAT(J*(IL-J)*(J+INM)*(IL-J-INM)))                     OBSE-454
      D1=D1+DFLOAT(2*(2*J-2-IL+INM))                                    OBSE-455
      F1=F2                                                             OBSE-456
      F2=F3                                                             OBSE-457
      F3=-(D1*F2+C1*F1)/C2                                              OBSE-458
      JCAL=JCAL+1                                                       OBSE-459
      DM(JCAL+KX)=F3                                                    OBSE-460
   69 CONTINUE                                                          OBSE-461
   70 N=ICAL                                                            OBSE-462
   71 IF (LT1) GO TO 73                                                 OBSE-463
      DO 72 MA=1,4                                                      OBSE-464
      MC=20*NCAL+4*L+MA-4                                               OBSE-465
   72 NY(MC+2*KX)=NX(MA,N)                                              OBSE-466
      LZ(L)=NX(16,N).NE.0                                               OBSE-467
   73 CONTINUE                                                          OBSE-468
      IF (LT1) GO TO 76                                                 OBSE-469
      LZ(5)=KT.EQ.0                                                     OBSE-470
      LZ(6)=2*(KT/2).NE.KT                                              OBSE-471
      NZ(1)=0                                                           OBSE-472
      NZ(2)=0                                                           OBSE-473
      IF (LZ(4)) NZ(2)=MF(6,I)                                          OBSE-474
      IF (LZ(3).OR.LZ(4)) NZ(1)=MF(6,I)                                 OBSE-475
      LO(126)=LO(126).OR.NZ(1).NE.0                                     OBSE-476
      IA1=0                                                             OBSE-477
      IA2=1                                                             OBSE-478
      DO 74 LI=1,6                                                      OBSE-479
      IF (LZ(LI)) IA1=IA1+IA2                                           OBSE-480
   74 IA2=2*IA2                                                         OBSE-481
      NY(20*NCAL+17+2*KX)=IA1                                           OBSE-482
      NY(20*NCAL+18+2*KX)=NZ(1)+1000*NZ(2)                              OBSE-483
      DM(10*NCAL+10+KX)=BM(3,KI)                                        OBSE-484
      DO 75 LI=2,4,2                                                    OBSE-485
      IF (.NOT.LZ(LI)) GO TO 75                                         OBSE-486
      IM=NY(20*NCAL+4*LI-3+2*KX)                                        OBSE-487
      NY(20*NCAL+4*LI-3+2*KX)=MT(LI)-NY(20*NCAL+4*LI-2+2*KX)+1          OBSE-488
      NY(20*NCAL+4*LI-2+2*KX)=MT(LI)-IM+1                               OBSE-489
      NY(20*NCAL+4*LI-1+2*KX)=-NY(20*NCAL+4*LI-1+2*KX)                  OBSE-490
      NY(20*NCAL+4*LI+2*KX)=NY(20*NCAL+4*LI+2*KX)+IM+NY(20*NCAL+4*LI-2+2OBSE-491
     1*KX)                                                              OBSE-492
   75 CONTINUE                                                          OBSE-493
   76 NCAL=NCAL+1                                                       OBSE-494
   77 CONTINUE                                                          OBSE-495
      IF (LT1) GO TO 78                                                 OBSE-496
      MF(4,I)=NCAL                                                      OBSE-497
      MF(3,I)=NCAL+I1-I2                                                OBSE-498
   78 CONTINUE                                                          OBSE-499
      IF (.NOT.LT1) GO TO 79                                            OBSE-500
      KX=9*MAX0(KNX,ICAL)                                               OBSE-501
      JCAL=10*NCAL                                                      OBSE-502
      JTS=JTN-18*(KX-1)                                                 OBSE-503
      IF (JCAL.GT.JTS) CALL MEMO('OBSE',JTS,JCAL)                       OBSE-504
      GO TO 58                                                          OBSE-505
C STORAGE OF LEGENDS AND COPY OF RESULTS.                               OBSE-506
   79 DO 81 I=1,NT                                                      OBSE-507
      I5=IABS(MF(2,I))+1                                                OBSE-508
      DO 80 J=3,7                                                       OBSE-509
   80 CMF(J+3,I)=ITZ(J,I5)                                              OBSE-510
   81 CONTINUE                                                          OBSE-511
      JN=2*JCAL                                                         OBSE-512
      DO 82 I=1,JN                                                      OBSE-513
   82 AM(I)=CBM(I+2*KX)                                                 OBSE-514
      RETURN                                                            OBSE-515
   83 WRITE (MW,1015) I,MF(2,I)                                         OBSE-516
      GO TO 92                                                          OBSE-517
   84 WRITE (MW,1016) I,MF(2,I)                                         OBSE-518
      GO TO 92                                                          OBSE-519
   85 WRITE (MW,1017) NX(2*IJ+5,K),NX(2*IJ+6,K),MT(IJ)                  OBSE-520
      GO TO 92                                                          OBSE-521
   86 WRITE (MW,1018)                                                   OBSE-522
      GO TO 92                                                          OBSE-523
   87 WRITE (MW,1019) NX(2*I-1,K1),NX(2*I,K1)                           OBSE-524
      GO TO 92                                                          OBSE-525
   88 WRITE (MW,1020)                                                   OBSE-526
      GO TO 92                                                          OBSE-527
   89 WRITE (MW,1021) MF(1,I)                                           OBSE-528
      GO TO 92                                                          OBSE-529
   90 WRITE (MW,1022) MF(1,I)                                           OBSE-530
      GO TO 92                                                          OBSE-531
   91 WRITE (MW,1023) MT(L),MF(2,I),L,K                                 OBSE-532
   92 WRITE (MW,1024)                                                   OBSE-533
      STOP                                                              OBSE-534
 1000 FORMAT (2L1,I1,I2,I5,5A4)                                         OBSE-535
 1001 FORMAT (8I5)                                                      OBSE-536
 1002 FORMAT (6F10.5)                                                   OBSE-537
 1003 FORMAT (/' OBSERVABLE',I3,' LABELLED',5X,5A4,10X,I3,' COMPONENTS')OBSE-538
 1004 FORMAT (' DEFINED WITH AN AXIS PERPENDICULAR TO THE REACTION PLANEOBSE-539
     1')                                                                OBSE-540
 1005 FORMAT (' DEFINED IN THE LABORATORY SYSTEM')                      OBSE-541
 1006 FORMAT (' DEFINED WITH RESPECT TO THE INCIDENT BEAM')             OBSE-542
 1007 FORMAT (' NOT COMPLETELY DEFINED BY TENSORS')                     OBSE-543
 1008 FORMAT (/6(11X,4I2,2X))                                           OBSE-544
 1009 FORMAT (6(' +',F8.4,'*M',9X))                                     OBSE-545
 1010 FORMAT (6(11X,4I2,2X))                                            OBSE-546
 1011 FORMAT (' IMAGINARY PARTS'/6(1X,F8.5,12X))                        OBSE-547
 1012 FORMAT (6(' +',F8.4,'*A',9X))                                     OBSE-548
 1013 FORMAT (//' AFTER TRANSFORMATION:'/)                              OBSE-549
 1014 FORMAT (' THE OBSERVABLE READ WITH NUMBER',I4,' IS NOT USED.')    OBSE-550
 1015 FORMAT (' THE',I4,'TH OBSERVABLE, OF KIND',I2,' MUST BE FOR EXPERIOBSE-551
     1MENTAL DATA.')                                                    OBSE-552
 1016 FORMAT (' THE',I4,'TH OBSERVABLE, OF KIND',I2,' IS NOT DEFINED.') OBSE-553
 1017 FORMAT (' NON TENSOR INDICATIONS',I4,' AND',I4,' INCORRECT FOR (2*OBSE-554
     1S+1) =',I3)                                                       OBSE-555
 1018 FORMAT (' ZERO OBSERVABLE.')                                      OBSE-556
 1019 FORMAT (/' TOO LARGE MAGNETIC QUANTUM NUMBER OR NEGATIVE MULTIPOLAOBSE-557
     1RITY',2I6)                                                        OBSE-558
 1020 FORMAT (' THE SUM OF MAGNETIC QUANTUM NUMBERS IS ODD FOR ONE COMPOOBSE-559
     1NENT.')                                                           OBSE-560
 1021 FORMAT (' NO CROSS SECTION DIVIDED BY RUTHERFORD''S FOR THE INELASOBSE-561
     1TIC CHANNEL',I3)                                                  OBSE-562
 1022 FORMAT (' NO POLARISATION FOR A ZERO SPIN IN THE CHANNEL',I3)     OBSE-563
 1023 FORMAT (5X,I5,' IS A TOO SMALL SPIN IN CHANNEL',I4,' AND PARTICLE'OBSE-564
     1,I4,' FOR A POLARISATION OF TENSOR ORDER',I4)                     OBSE-565
 1024 FORMAT (//' IN OBSE  ...  STOP  ...')                             OBSE-566
      END                                                               OBSE-567
C 20/10/12                                                      ECIS12  COLF-000
      SUBROUTINE COLF(NCOLT,NCOLL,IPI,WV,ISM,LMAX1,LMAX2,H,LM,NIV,LO,FG,COLF-001
     1XG,LMAX3,KXT,IEXP,Z)                                              COLF-002
C COULOMB FUNCTIONS AT THE MATCHING POINT RM=ISM*H.                     COLF-003
C INPUT:     NCOLT:   NUMBER OF NUCLEAR STATES (COUPLED OR NOT)         COLF-004
C                     AND CONTINUA FOR COMPOUND NUCLEUS.                COLF-005
C            NCOLL:   NUMBER OF COUPLED STATES.                         COLF-006
C            IPI(J,I):MULTIPLICITY OF PARTICLE AND TARGET FOR J=1 AND 2,COLF-007
C                     PRODUCT OF CHARGES FOR J=4,                       COLF-008
C                     NUMBER OF ANGULAR MOMENTA FOR I=1 AND J=10.       COLF-009
C            WV(J,*): MASS OF PARTICLE AND TARGET FOR J=1,2,            COLF-010
C                     CENTRE OF MASS ENERGY IN MEV FOR J=3.             COLF-011
C            ISM:     NUMBER OF POINTS FOR INTEGRATION.                 COLF-012
C            LMAX1:   MAXIMUM NUMBER OF COULOMB FUNCTIONS.              COLF-013
C            LMAX2:   MAXIMUM NUMBER OF COULOMB PHASE SHIFTS.           COLF-014
C            H:       INTEGRATION STEP SIZE IN FERMIS.                  COLF-015
C            LM:      LENGTH OF WORKING SPACE Z.                        COLF-016
C            NIV:     ADDRESSES OF COULOMB INTEGRALS IN NIV(*,*,3).     COLF-017
C            LO(I):   LOGICAL CONTROLS:                                 COLF-018
C               LO(108)=.TRUE. DIAGONAL COULOMB CORRECTIONS ARE NEEDED. COLF-019
C               LO(109)=.TRUE. FOR DIRAC POTENTIALS.                    COLF-020
C               LO(133)=.TRUE. STORE SCALAR AND COULOMB POTENTIAL       COLF-021
C                              INDEPENDENTLY.                           COLF-022
C OUTPUT:    IPI(J,I):STARTING ADDRESS OF PENETRABILITIES FOR I=NCOLL+1 COLF-023
C                     TO NCOLT AND J=8.                                 COLF-024
C                     NUMBER OF ANGULAR MOMENTA FOR J=10.               COLF-025
C            WV(J,*): OUTPUT OF SUBROUTINE KHCO FOR J=4 TO 11.          COLF-026
C            FG:      IN FG(I,J,K), COULOMB WAVE FUNCTIONS F, FP, G, GP COLF-027
C                     RESPECTIVELY FOR J=1 TO 4, FOR ANGULAR MOMENTUM   COLF-028
C                     I-1 AND CHANNEL K. IF COULOMB CORRECTIONS ARE     COLF-029
C                     REQUESTED, INTEGRALS OF F*F, F*G, G*F AND G*G     COLF-030
C                     DIVIDED BY R**2 FROM MATCHING RADIUS TO INFINITY  COLF-031
C                     WITH THE SAME ANGULAR MOMENTUM I-1 RESPECTIVELY   COLF-032
C                     FOR J+1 TO 4 AND K GIVEN BY NIV(*,*,3).           COLF-033
C            XG:      IN XG(I,K), SIGMA(I-1)-SIGMA(0) FOR ANGULAR       COLF-034
C                     MOMENTUM I-1 AND CHANNEL K. IF COULOMB CORRECTIONSCOLF-035
C                     ARE REQUESTED, INTEGRALS OF F*F DIVIDED BY R**2   COLF-036
C                     FROM ZERO TO INFINITY AND K GIVEN BY NIV(*,*,3).  COLF-037
C            LMAX3:   EFFECTIVE MAXIMUM NUMBER OF COULOMB FUNCTIONS.    COLF-038
C            KXT:     NUMBER OF PENETRABILITIES FOR UNCOUPLED STATES.   COLF-039
C WORKING AREA:                                                         COLF-040
C            IEXP:    POWERS OF 10 FOR LARGE VALUES OF FUNCTIONS        COLF-041
C                     (MULTIPLES OF 10**15).                            COLF-042
C            Z:       WORKING AREA FOR SUBROUTINE CORI.                 COLF-043
C                                                                       COLF-044
C FOR THE COMMON  /DCONS/ SEE CALC.                                     COLF-045
C                                                                       COLF-046
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     COLF-047
C  CM:        ATOMIC MASS IN MEV.                                       COLF-048
C  CHB:       PLANCK CONSTANT /(2*PI) IN MEV*FERMI.                     COLF-049
C  CCZ:       COULOMB ALPHA CONSTANT.                                   COLF-050
C  CK:        H-BAR*C.                                                  COLF-051
C  XZ:        CONVERSION FACTOR TO MILLIBARNS.                          COLF-052
C   DEFINED:  XZ.                                                       COLF-053
C   USED:     CM,CHB,CCZ,CK.                                            COLF-054
C                                                                       COLF-055
C***********************************************************************COLF-056
      IMPLICIT REAL*8 (A-H,O-Z)                                         COLF-057
      LOGICAL LO(150)                                                   COLF-058
      DIMENSION IPI(11,*),WV(22,*),FG(LMAX1,4,*),XG(LMAX2,*),IEXP(*),Z(*COLF-059
     1),NIV(NCOLL,NCOLL,3)                                              COLF-060
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            COLF-061
      COMMON /INOUT/ MR,MW,MS                                           COLF-062
      KXT=0                                                             COLF-063
      LO(133)=.FALSE.                                                   COLF-064
      WRITE (MW,1000)                                                   COLF-065
C CHECK OF THE LENGTH OF WORKING FIELD FOR IEXP.                        COLF-066
      IF (LM.LT.LMAX1) CALL MEMO('COLF',LM,LMAX1)                       COLF-067
      LMAX3=LMAX1                                                       COLF-068
C WAVE NUMBER,COULOMB PARAMETER AND CALL TO COULOMB SUBROUTINES.        COLF-069
      CALL KHCO(NCOLT,WV(1,1),IPI,WV(1,1),H,LO)                         COLF-070
      XZ=10.D0/DFLOAT(IPI(2,1)*IPI(3,1))/WV(4,1)**2                     COLF-071
      RM=ISM*H                                                          COLF-072
      DO 6 I=1,NCOLT                                                    COLF-073
      LO(133)=LO(133).OR.((WV(5,I).NE.0.D0).AND.(WV(9,I).NE.WV(10,I)))  COLF-074
      IF (I.GT.NCOLL) GO TO 5                                           COLF-075
      WRITE (MW,1001) I,(WV(J,I),J=4,8)                                 COLF-076
      RAU=RM*WV(11,I)                                                   COLF-077
      ETA=WV(5,I)                                                       COLF-078
      IF (WV(3,I).GT.0.D0) GO TO 1                                      COLF-079
      CALL COCL(ETA,RAU,LMAX1-1,FG(1,1,I),FG(1,2,I),FG(1,3,I),FG(1,4,I),COLF-080
     1XG(1,I))                                                          COLF-081
      GO TO 2                                                           COLF-082
    1 LX=LMAX1                                                          COLF-083
      CALL FCOU(LX-1,ETA,RAU,FG(1,1,I),FG(1,2,I),FG(1,3,I),FG(1,4,I),IEXCOLF-084
     1P,XG(1,I))                                                        COLF-085
    2 IPI(10,I)=IPI(10,1)                                               COLF-086
      IF (WV(3,I).LT.0.D0) GO TO 6                                      COLF-087
C COMPUTATION OF COULOMB PHASE-SHIFTS.                                  COLF-088
      LMX1=LMAX3                                                        COLF-089
C CORRECTION OF LARGE VALUE AND SEARCH FOR MAXIMUM EFFECTIVE NUMBER     COLF-090
C OF COULOMB FUNCTIONS.                                                 COLF-091
      DO 3 J=1,LMX1                                                     COLF-092
      IF (IEXP(J).EQ.0) GO TO 3                                         COLF-093
      IF (LO(108).OR.IEXP(J).GT.15) LMAX3=MIN0(LMAX3,J)                 COLF-094
      FG(J,1,I)=FG(J,1,I)*1.D-15                                        COLF-095
      FG(J,2,I)=FG(J,2,I)*1.D-15                                        COLF-096
      FG(J,3,I)=FG(J,3,I)*1.D15                                         COLF-097
      FG(J,4,I)=FG(J,4,I)*1.D15                                         COLF-098
    3 CONTINUE                                                          COLF-099
      IF (LMX1.NE.LMAX3) WRITE (MW,1002) LMX1,LMAX3                     COLF-100
      IF (.NOT.LO(108)) IPI(10,I)=MIN0(LMAX3-1,IPI(10,1))               COLF-101
C COMPUTATION OF COULOMB INTEGRALS.                                     COLF-102
      XI=XG(1,I)                                                        COLF-103
      SI=WV(11,I)                                                       COLF-104
      DO 4 J=1,I                                                        COLF-105
      K=NIV(I,J,3)                                                      COLF-106
      IF (K.EQ.0) GO TO 4                                               COLF-107
      XJ=XG(1,J)                                                        COLF-108
      EJ=WV(5,J)                                                        COLF-109
      SJ=WV(11,J)                                                       COLF-110
      CALL CORI(ETA,EJ,RM*SI,RM*SJ,XG(1,K),XI,XJ,FG(1,1,I),FG(1,1,J),Z,LCOLF-111
     1MAX1,LMAX2,LM,LMAX3,FG(1,1,K))                                    COLF-112
    4 CONTINUE                                                          COLF-113
      GO TO 6                                                           COLF-114
    5 LY=0                                                              COLF-115
      IF (WV(3,I).GT.0.D0) LY=MIN0(IDINT(4.D0+3.3D0*DSQRT(WV(3,I))),LMAXCOLF-116
     11)                                                                COLF-117
      IPI(10,I)=LY-1                                                    COLF-118
      IPI(8,I)=KXT                                                      COLF-119
      KXT=KXT+LY*IPI(2,I)                                               COLF-120
    6 CONTINUE                                                          COLF-121
      DO 8 I=1,NCOLL                                                    COLF-122
      XG(1,I)=0.D0                                                      COLF-123
      DO 7 J=2,LMAX2                                                    COLF-124
    7 XG(J,I)=XG(J-1,I)+DATAN2(WV(5,I),DFLOAT(J-1))                     COLF-125
    8 CONTINUE                                                          COLF-126
      LO(133)=LO(133).AND.(.NOT.LO(109))                                COLF-127
      RETURN                                                            COLF-128
 1000 FORMAT (/' LEVEL       WAVE NUMBER  COULOMB PARAMETER   REDUCED MACOLF-129
     1SS       REDUCED ENERGY     STEP SIZE')                           COLF-130
 1001 FORMAT (1X,I5,5F18.10)                                            COLF-131
 1002 FORMAT (' NUMBER OF FINITE COULOMB INTEGRALS REDUCED FROM',I6,' TOCOLF-132
     1',I6)                                                             COLF-133
      END                                                               COLF-134
C 03/06/07                                                      ECIS12  KHCO-000
      SUBROUTINE KHCO(NCOLT,WV,IPI,WW,H,LO)                             KHCO-001
C INPUT:     NCOLT:   NUMBER OF NUCLEAR STATES (COUPLED OR NOT) WHEN    KHCO-002
C                     CALLED FROM COLF OR NUMBER OF CONTINUA FOR        KHCO-003
C                     COMPOUND NUCLEUS WHEN CALLED FROM CONU.           KHCO-004
C            WV(J,*): MASS OF THE PARTICLE FOR J=1,                     KHCO-005
C                     MASS OF THE TARGET FOR J=2,                       KHCO-006
C                     ENERGY IN THE CENTRE OF MASS IN MEV FOR J=3.      KHCO-007
C                     ENERGY IN THE LABORATORY SYSTEM IN MEV FOR J=12.  KHCO-008
C            IPI(J,I):PRODUCT OF CHARGES FOR J=4.                       KHCO-009
C            WW:      WV FOR THE GROUND STATE.                          KHCO-010
C            H:       INTEGRATION STEP SIZE IN FERMIS.                  KHCO-011
C            LO(I):   LOGICAL CONTROLS:                                 KHCO-012
C               LO(8)  =.TRUE. RELATIVISTIC KINEMATICS.                 KHCO-013
C               LO(93) =.TRUE. NO RECOIL CORRECTION FOR REACTIONS WITH  KHCO-014
C                              SMALL DIFFERENCES (LESS THAN .5) OF      KHCO-015
C                              TARGET MASSES.                           KHCO-016
C               LO(94) =.TRUE. NON RELATIVISTIC "REDUCED MASS" FOR DIRACKHCO-017
C                              EQUATION.                                KHCO-018
C               LO(95) =.TRUE. "REDUCED ENERGY" FOR NON COULOMB         KHCO-019
C                              INTERACTION IN RELATIVISTIC SCHROEDINGER KHCO-020
C                              EQUATION OR USE OF REST MASS IN DIRAC    KHCO-021
C                              EQUATION.                                KHCO-022
C               LO(96) =.TRUE. "REDUCED MASS" FOR COULOMB INTERACTION   KHCO-023
C                              IN RELATIVISTIC SCHROEDINGER EQUATION.   KHCO-024
C               LO(97) =.TRUE. SAME REDUCED MASS FOR ALL THE STATES     KHCO-025
C                              WITH SMALL DIFFERENCES (LESS THAN .5)    KHCO-026
C                              OF TARGET MASSES.                        KHCO-027
C               LO(109)=.TRUE. FOR DIRAC POTENTIALS.                    KHCO-028
C OUTPUT:    WV(J,*): WAVE NUMBER IN 1/FERMI FOR J=4,                   KHCO-029
C                     COULOMB PARAMETER FOR J=5,                        KHCO-030
C                     REDUCED MASS FOR J=6.                             KHCO-031
C                     REDUCED ENERGY FOR J=7.                           KHCO-032
C                     STEP SIZE FOR THIS LEVEL FOR J=8.                 KHCO-033
C                     SQUARE ROOT OF COEF. OF SCALAR POTENTIALS FOR J=9.KHCO-034
C                     SQUARE ROOT OF COEF. OF COUL. POTENTIALS FOR J109.KHCO-035
C                     K MULTIPLIED BY RATIO OF STEP SIZES FOR J=11.     KHCO-036
C                     REDUCED ENERGY TERM FOR J=12.                     KHCO-037
C                     SET TO 0. FOR J=14 TO 19.                         KHCO-038
C                                                                       KHCO-039
C FOR THE COMMON  /DCONS/ SEE CALC.                                     KHCO-040
C                                                                       KHCO-041
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     KHCO-042
C  CM:        ATOMIC MASS IN MEV.                                       KHCO-043
C  CHB:       PLANCK CONSTANT /(2*PI) IN MEV*FERMI.                     KHCO-044
C  CMB:       ATOMIC MASS CM DIVIDED BY H-BAR*C.                        KHCO-045
C  CCZ:       COULOMB ALPHA CONSTANT.                                   KHCO-046
C  CK:        H-BAR*C.                                                  KHCO-047
C   USED:     CM,CHB,CCZ,CK.                                            KHCO-048
C                                                                       KHCO-049
C***********************************************************************KHCO-050
      IMPLICIT REAL*8 (A-H,O-Z)                                         KHCO-051
      LOGICAL LO(150)                                                   KHCO-052
      DIMENSION IPI(11,*),WV(22,*),WW(22)                               KHCO-053
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            KHCO-054
      COMMON /INOUT/ MR,MW,MS                                           KHCO-055
      AMT1=DMAX1(WW(1),WW(2))                                           KHCO-056
      AMR=WW(3)/CM+WW(1)+WW(2)                                          KHCO-057
C WAVE NUMBER,COULOMB PARAMETER AND CALL TO COULOMB SUBROUTINES.        KHCO-058
      DO 6 I=1,NCOLT                                                    KHCO-059
      AMT2=DMAX1(WV(1,I),WV(2,I))                                       KHCO-060
      RC=1.D0                                                           KHCO-061
      IF ((.NOT.LO(93)).OR.(DABS(AMT1-AMT2).GT.0.5D0)) RC=AMT1/AMT2     KHCO-062
      HREC=H*RC                                                         KHCO-063
      IF ((.NOT.LO(97)).OR.(DABS(AMT1-AMT2).GT.0.5D0)) GO TO 1          KHCO-064
      AMP=WW(1)                                                         KHCO-065
      AMT=WW(2)                                                         KHCO-066
      GO TO 2                                                           KHCO-067
    1 AMP=WV(1,I)                                                       KHCO-068
      AMT=WV(2,I)                                                       KHCO-069
    2 IF (LO(8)) GO TO 3                                                KHCO-070
C NON RELATIVISTIC KINEMATICS: NO MASS CORRECTION.                      KHCO-071
      AMRE=AMP*AMT/(AMP+AMT)                                            KHCO-072
      AMRM=AMRE                                                         KHCO-073
      WSK2=CK*WV(3,I)*AMRM                                              KHCO-074
      GO TO 5                                                           KHCO-075
    3 WSK2=0.125D0*CK*WV(3,I)*(WV(3,I)/CM+2.D0*WV(1,I)+2.D0*AMT)*(WV(3,IKHCO-076
     1)/CM+2.D0*WV(1,I))*(WV(3,I)/CM+2.D0*AMT)/AMR**2                   KHCO-077
      WV(4,I)=DSQRT(DABS(WSK2))                                         KHCO-078
      AMRM=AMP*AMT/AMR                                                  KHCO-079
      IF (LO(109)) GO TO 4                                              KHCO-080
C RELATIVISTIC KINEMATICS FOR SCHROEDINGER EQUATION.                    KHCO-081
      AMRD=(AMR**4-(WV(1,I)**2-AMT**2)**2)/(4.D0*AMR**3)                KHCO-082
      AMRE=AMRD                                                         KHCO-083
      IF (LO(96)) AMRE=AMRM                                             KHCO-084
      IF (LO(95)) AMRM=AMRE                                             KHCO-085
      GO TO 5                                                           KHCO-086
    4 IF (LO(94)) AMRM=AMP*AMT/(AMP+AMT)                                KHCO-087
      IF (LO(95)) AMRM=AMP                                              KHCO-088
      AMRE=DSQRT(WSK2/CMB**2+AMRM**2)                                   KHCO-089
      IF (LO(96)) AMRE=DSQRT(WSK2/CMB**2+AMP**2)                        KHCO-090
    5 WV(4,I)=DSQRT(DABS(WSK2))                                         KHCO-091
      WV(5,I)=CM*CCZ*AMRE*IPI(4,I)/WV(4,I)/CHB**2                       KHCO-092
      WV(6,I)=CM*AMRM                                                   KHCO-093
      WV(7,I)=CM*AMRE                                                   KHCO-094
      WV(8,I)=HREC                                                      KHCO-095
      WV(9,I)=HREC*DSQRT(CK*AMRM)                                       KHCO-096
      WV(10,I)=HREC*DSQRT(CK*AMRE)                                      KHCO-097
      WV(11,I)=WV(4,I)*RC                                               KHCO-098
      WV(12,I)=HREC*HREC*WSK2                                           KHCO-099
      IF (DABS(WV(5,I)).LE.400.D0) GO TO 6                              KHCO-100
      WRITE (MW,1000) I,WV(5,I)                                         KHCO-101
      WV(5,I)=400.D0*WV(5,I)/DABS(WV(5,I))                              KHCO-102
    6 CONTINUE                                                          KHCO-103
      RETURN                                                            KHCO-104
 1000 FORMAT (' **** BEWARE ****'/' THE ABSOLUTE VALUE OF THE COULOMB PAKHCO-105
     1RAMETER OF LEVEL',I3,' WHICH IS',D16.8,' IS REDUCED TO 400.')     KHCO-106
      END                                                               KHCO-107
C 31/08/06                                                      ECIS12  COCL-000
      SUBROUTINE COCL(ETA,R,L,G,GD,F,FD,SIGMA)                          COCL-001
C COMPUTATION OF LOGARITHMIC DERIVATIVE AT THE MATCHING RADIUS OF       COCL-002
C INCREASING AND DECREASING SOLUTIONS WITH WRONSKIAN EQUAL TO UNITY     COCL-003
C FOR CLOSED CHANNELS..                                                 COCL-004
C INPUT:     ETA:     COULOMB PARAMETER.                                COCL-005
C            R:       |K|*R VALUE.                                      COCL-006
C            L:       MAXIMUM L VALUE.                                  COCL-007
C OUTPUT:    F:       DECREASING SOLUTION AT (ETA,RHO) FOR I = 1 TO L+1.COCL-008
C            FD:      DERIVATIVE OF F(I) FOR I = 1 TO L+1.              COCL-009
C            G:       INCREASING SOLUTION FOR I = 1 TO L+1.             COCL-010
C            GD:      DERIVATIVE OF F(I) FOR I = 1 TO L+1.              COCL-011
C            SIGMA:   RETURNS 0 AT THE SAME NUMBER.                     COCL-012
C                                                                       COCL-013
C FOR NEGATIVE VALUES OF ETA, THE LOGARITHMIC DERIVATIVE OF THE         COCL-014
C DECREASING SOLUTION IS COMPUTED, THE LOGARITHMIC DERIVATIVE OF THE    COCL-015
C INCREASING FUNCTION IS ASSUMED OPPOSITE. IF A NEGATIVE ETA DIFFERS    COCL-016
C BY LESS THAN 1/4 PERCENT OF AN INTEGER THE NEXT INTEGER VALUE IS      COCL-017
C USED (LAGUERRE POLYNOMIAL); IN OTHER CASES, BACKWARDS INTEGRATION     COCL-018
C STARTING BEYOND THE OSCILLATIONS ESTIMATED UP TO 2*|ETA| IS USED.     COCL-019
C                                                                       COCL-020
C THE FUNCTIONS ARE RENORMALISED TO F=G AND SUCH THAT  F*GD-G*FD=1      COCL-021
C***********************************************************************COCL-022
      IMPLICIT REAL*8 (A-H,O-Z)                                         COCL-023
      DIMENSION G(*),GD(*),F(*),FD(*),SIGMA(*),S(7)                     COCL-024
      DATA GAMA /0.577215664901533D0/                                   COCL-025
C FOR L=0.                                                              COCL-026
      IF (ETA.LE.-1.D-6) GO TO 17                                       COCL-027
      IF (ETA.GT.1.D-6) GO TO 1                                         COCL-028
C NO COULOMB POTENTIAL.                                                 COCL-029
      FP=-1.D0                                                          COCL-030
      GP=1.D0                                                           COCL-031
      GO TO 14                                                          COCL-032
C POSITIVE VALUES OF ETA.                                               COCL-033
    1 IF ((ETA+1.D0)*R.GT.8.D0) GO TO 9                                 COCL-034
C SERIES EXPANSION.                                                     COCL-035
      R2=-R*R                                                           COCL-036
      ET2=ETA+ETA                                                       COCL-037
      U0=0.D0                                                           COCL-038
      U1=R                                                              COCL-039
      V0=1.D0                                                           COCL-040
      V1=0.D0                                                           COCL-041
      U=U0+U1                                                           COCL-042
      V=V0+V1                                                           COCL-043
      UP=1.D0                                                           COCL-044
      VP=0.D0                                                           COCL-045
      DO 3 N=2,10000                                                    COCL-046
      XN=DFLOAT(N)                                                      COCL-047
      XN1=XN*(XN-1.D0)                                                  COCL-048
      U2=(ET2*R*U1-R2*U0)/XN1                                           COCL-049
      U=U+U2                                                            COCL-050
      V2=(ET2*R*V1-R2*V0-ET2*(2.D0*XN-1.D0)*U2)/XN1                     COCL-051
      V=V+V2                                                            COCL-052
      UP=UP+XN*U2/R                                                     COCL-053
      VP=VP+XN*V2/R                                                     COCL-054
      IF (DABS(U2).GT.1.D-16*DABS(U)) GO TO 2                           COCL-055
      IF (DABS(V2).LE.1.D-16*DABS(V)) GO TO 4                           COCL-056
    2 U0=U1                                                             COCL-057
      U1=U2                                                             COCL-058
      V0=V1                                                             COCL-059
    3 V1=V2                                                             COCL-060
    4 XX=DABS(ETA)                                                      COCL-061
      IF (XX.LT.1.D-8) GO TO 7                                          COCL-062
      Y=XX                                                              COCL-063
      K=0                                                               COCL-064
      IF (XX.LE.7.5D0) K=IDINT(8.5D0-XX)                                COCL-065
      X=1.D0+XX+DFLOAT(K)                                               COCL-066
      UU=1.D0/X**2                                                      COCL-067
      PSR=DLOG(X)-.5D0/X-UU/12.D0+UU**2/120.D0-UU**3/252.D0+UU**4/240.D0COCL-068
     1-UU**5/132.D0+UU**6*691.D0/32760.D0                               COCL-069
      IF (K.EQ.0) GO TO 6                                               COCL-070
      DO 5 I=1,K                                                        COCL-071
    5 PSR=PSR-1.D0/(X-DFLOAT(I))                                        COCL-072
    6 PSR=PSR-.5D0/Y+2.D0*GAMA-1.D0                                     COCL-073
      GO TO 8                                                           COCL-074
    7 PSR=GAMA-1.D0                                                     COCL-075
    8 CE=ET2*(PSR+DLOG(2.D0*R))                                         COCL-076
      FP=(VP+UP*CE+ET2*U/R)/(V+U*CE)                                    COCL-077
      GO TO 14                                                          COCL-078
    9 IF (R.LT.10.D0*(ETA+1.D0)) GO TO 11                               COCL-079
C ASYMPTOTIC EXPANSION.                                                 COCL-080
      C=1.D0/R                                                          COCL-081
      A=1.D0                                                            COCL-082
      B=A                                                               COCL-083
      D=0.D0                                                            COCL-084
      DO 10 M=1,26                                                      COCL-085
      AM=DFLOAT(M)                                                      COCL-086
      A=-A*0.5D0*(ETA+AM-1.D0)*(ETA+AM)*C/AM                            COCL-087
      B=B+A                                                             COCL-088
   10 D=D-A*AM*C                                                        COCL-089
      FP=D/B-1.D0-ETA/R                                                 COCL-090
      GO TO 14                                                          COCL-091
C LONG RANGE INTEGRATION.                                               COCL-092
   11 HTMP=DMIN1(.001953125D0,.25D0*R)                                  COCL-093
      N=1+IDINT(10.D0/HTMP)                                             COCL-094
      S(6)=DEXP(-HTMP)                                                  COCL-095
      S(7)=1.D0                                                         COCL-096
      V2=HTMP**2*(1.D0+2.D0*ETA/(R+HTMP*DFLOAT(N)))/12.D0               COCL-097
      V3=HTMP**2*(1.D0+2.D0*ETA/(R+HTMP*DFLOAT(N-1)))/12.D0             COCL-098
      DO 13 I=N-2,-3,-1                                                 COCL-099
      DO 12 J=1,6                                                       COCL-100
   12 S(J)=S(J+1)/S(7)                                                  COCL-101
      V1=V2                                                             COCL-102
      V2=V3                                                             COCL-103
      V3=HTMP**2*(1.D0+2.D0*ETA/(R+HTMP*DFLOAT(I)))/12.D0               COCL-104
   13 S(7)=(S(6)*(2.D0+10.D0*V2)-S(5)*(1.D0-V1))/(1.D0-V3)              COCL-105
      FP=((S(1)-S(7))/60.D0+.15D0*(S(6)-S(2))+.75D0*(S(3)-S(5)))/HTMP/S(COCL-106
     14)                                                                COCL-107
   14 XX=1.D0                                                           COCL-108
      MP=L+25+IDINT(5.D0*DABS(ETA))                                     COCL-109
      DO 15 M=MP,1,-1                                                   COCL-110
      XM=DFLOAT(M)                                                      COCL-111
      A=ETA/XM                                                          COCL-112
      B=A+XM/R                                                          COCL-113
      XX=-(A*A-1.D0)/(B+XX)+B                                           COCL-114
      IF (M.LE.L) GD(M)=XX                                              COCL-115
   15 CONTINUE                                                          COCL-116
      DO 16 M=1,L+1                                                     COCL-117
      X=DSQRT(DABS(GD(M)-FP))                                           COCL-118
      XM=DFLOAT(M)                                                      COCL-119
      F(M)=1.D0/X                                                       COCL-120
      FD(M)=FP/X                                                        COCL-121
      G(M)=1.D0/X                                                       COCL-122
      GD(M)=GD(M)/X                                                     COCL-123
      A=ETA/XM                                                          COCL-124
      B=A+XM/R                                                          COCL-125
   16 FP=(A*A-1.D0)/(B-FD(M)/F(M))-B                                    COCL-126
      GO TO 25                                                          COCL-127
C NEGATIVE VALUES OF ETA.                                               COCL-128
   17 LP=IDINT(-ETA+.5D0)                                               COCL-129
      IF (DABS((DFLOAT(LP)+ETA)/ETA).LT..0025D0) GO TO 22               COCL-130
      LL=MIN0(L,IDINT(-ETA))                                            COCL-131
      RP=DMAX1(-2.D0*ETA-R,0.D0)                                        COCL-132
      DO 20 M=0,LL                                                      COCL-133
      AL=M*(M+1)                                                        COCL-134
      HTMP=DMIN1(.001953125D0,R/DFLOAT(4+M))                            COCL-135
      N=IDINT(1.D0+(40.D0+RP)/HTMP)                                     COCL-136
      RR=R+DFLOAT(N)*HTMP                                               COCL-137
      V2=HTMP**2*(1.D0+AL/RR**2+2.D0*ETA/RR)/12.D0                      COCL-138
      RR=R+DFLOAT(N-1)*HTMP                                             COCL-139
      V3=HTMP**2*(1.D0+AL/RR**2+2.D0*ETA/RR)/12.D0                      COCL-140
      S(6)=DEXP(-HTMP)                                                  COCL-141
      S(7)=1.D0                                                         COCL-142
      DO 19 I=N-2,-3,-1                                                 COCL-143
      DO 18 J=1,6                                                       COCL-144
   18 S(J)=S(J+1)/S(7)                                                  COCL-145
      V1=V2                                                             COCL-146
      V2=V3                                                             COCL-147
      RR=R+DFLOAT(I)*HTMP                                               COCL-148
      V3=HTMP**2*(1.D0+AL/RR**2+2.D0*ETA/RR)/12.D0                      COCL-149
   19 S(7)=(S(6)*(2.D0+10.D0*V2)-S(5)*(1.D0-V1))/(1.D0-V3)              COCL-150
      FP=((S(1)-S(7))/60.D0+.15D0*(S(6)-S(2))+.75D0*(S(3)-S(5)))/HTMP   COCL-151
      FF=S(4)                                                           COCL-152
      GP=1.D0                                                           COCL-153
      IF (FP.NE.0.D0) GP=-FP                                            COCL-154
      GG=1.D0                                                           COCL-155
      IF (FF.NE.0.D0) GG=FF                                             COCL-156
      X=DSQRT(DABS(GP*FF-GG*FP))                                        COCL-157
      F(M+1)=FF/X                                                       COCL-158
      FD(M+1)=FP/X                                                      COCL-159
      G(M+1)=GG/X                                                       COCL-160
      GD(M+1)=GP/X                                                      COCL-161
   20 CONTINUE                                                          COCL-162
      IF (LL.EQ.L) GO TO 25                                             COCL-163
      FP=FD(LL+1)/F(LL+1)                                               COCL-164
      DO 21 M=LL+1,L                                                    COCL-165
      XM=DFLOAT(M)                                                      COCL-166
      A=ETA/XM                                                          COCL-167
      B=A+XM/R                                                          COCL-168
      FP=(A*A-1.D0)/(B-FD(M)/F(M))-B                                    COCL-169
      X=DSQRT(DABS(2.D0*FP))                                            COCL-170
      F(M+1)=1.D0/X                                                     COCL-171
      FD(M+1)=FP/X                                                      COCL-172
      G(M+1)=1.D0/X                                                     COCL-173
   21 GD(M+1)=-FP/X                                                     COCL-174
      GO TO 25                                                          COCL-175
   22 FF=1.D0                                                           COCL-176
      FP=1.D0                                                           COCL-177
      MP=L+50-IDINT(5.D0*ETA)                                           COCL-178
      DO 24 M=MP,1,-1                                                   COCL-179
      FFM=DFLOAT(M)                                                     COCL-180
      A=ETA/FFM                                                         COCL-181
      B=A+FFM/R                                                         COCL-182
      Z=FP+B*FF                                                         COCL-183
      FP=B*Z-(A*A-1.D0)*FF                                              COCL-184
      FF=Z                                                              COCL-185
      IF (DABS(FF).LT.1.D0) GO TO 23                                    COCL-186
      FP=FP/FF                                                          COCL-187
      FF=1.D0                                                           COCL-188
   23 IF (M.GT.L+1) GO TO 24                                            COCL-189
      GP=1.D0                                                           COCL-190
      IF (FP.NE.0.D0) GP=-FP                                            COCL-191
      GG=1.D0                                                           COCL-192
      IF (FF.NE.0.D0) GG=FF                                             COCL-193
      X=DSQRT(DABS(GP*FF-GG*FP))                                        COCL-194
      F(M)=FF/X                                                         COCL-195
      FD(M)=FP/X                                                        COCL-196
      G(M)=GG/X                                                         COCL-197
      GD(M)=GP/X                                                        COCL-198
   24 CONTINUE                                                          COCL-199
   25 DO 26 M=0,L                                                       COCL-200
   26 SIGMA(M+1)=0.D0                                                   COCL-201
      RETURN                                                            COCL-202
      END                                                               COCL-203
C 19/11/05                                                      ECIS12  FCOU-000
      SUBROUTINE FCOU(L,ETA,RO,F,FP,G,GP,IEXP,SIGMA)                    FCOU-001
C COULOMB FUNCTIONS FOR RHO > 0 AND -500 < ETA < 500  FROM - DFCOUL     FCOU-002
C FOR THE MATHEMATICAL DESCRIPTION SEE CHR. BARDIN ET. AL. CEA-N-906    FCOU-003
C OR BARDIN ET AL. COMP. PHYSICS COMM. VOL 3 (1972) PAGES 73-87         FCOU-004
C NUMERICAL PRECISION: AT LEAST 8 SIGNIFICANT FIGURES, EXCEPT FOR       FCOU-005
C THE REGION -8 < ETA < -6 AND RO < 125/6                               FCOU-006
C THE COMPUTATION OF THE PHASE SHIFTS HAS BEEN REMOVED EXCEPT FOR L=0   FCOU-007
C INPUT:     L:       FINAL ANGULAR MOMENTUM REQUIRED.                  FCOU-008
C            ETA:     COULOMB PARAMETER.                                FCOU-009
C            RO:      RADIUS.                                           FCOU-010
C OUTPUT:    F:       REGULAR FUNCTION.                                 FCOU-011
C            FP:      DERIVATIVE OF THE REGULAR FUNCTION.               FCOU-012
C            G:       IRREGULAR FUNCTION.                               FCOU-013
C            GP:      DERIVATIVE OF THE IRREGULAR FUNCTION.             FCOU-014
C            IEXP:    POWERS OF 10 BY WHICH TO MULTIPLY THE IRREGULAR   FCOU-015
C                     FUNCTIONS AND DIVIDE THE REGULAR , IF THIS POWER  FCOU-016
C                     EXCEEDS 15.                                       FCOU-017
C            SIGMA:   COULOMB PHASE-SHIFT FOR L=0.                      FCOU-018
C                                                                       FCOU-019
C SUBROUTINES FCOU, FCZ0, YFRI, YFCL, YFAS, YFIR AND FUNCTIONS SIGM AND FCOU-020
C PSI WILL BE KEPT THE SAME FOR DWBA AND ECIS.                          FCOU-021
C***********************************************************************FCOU-022
      IMPLICIT REAL*8 (A-H,O-Z)                                         FCOU-023
      DIMENSION F(*),FP(*),G(*),GP(*),IEXP(*),SIGMA(*)                  FCOU-024
      COMMON /INOUT/ MR,MW,MS                                           FCOU-025
      IF (RO.GT.0.D0.AND.DABS(ETA).LE.500.D0) GO TO 1                   FCOU-026
      WRITE (MW,1000) ETA,RO                                            FCOU-027
      STOP                                                              FCOU-028
C COMPUTATION OF THE COULOMB FUNCTIONS FOR L=0.                         FCOU-029
    1 CALL FCZ0(ETA,RO,F1,FP1,G1,GP1,IEXP1,SIGMA1)                      FCOU-030
      F(1)=F1                                                           FCOU-031
      FP(1)=FP1                                                         FCOU-032
      G(1)=G1                                                           FCOU-033
      GP(1)=GP1                                                         FCOU-034
      IEXP(1)=IEXP1                                                     FCOU-035
      SIGMA(1)=SIGMA1                                                   FCOU-036
      IF (L.LE.0) RETURN                                                FCOU-037
      LINF=0                                                            FCOU-038
      LIN=1                                                             FCOU-039
      IND=0                                                             FCOU-040
      L1=L+1                                                            FCOU-041
      ETAC=ETA*ETA                                                      FCOU-042
      IF ((ETA.GT.0.D0.AND.RO.LT.ETA+ETA.OR.RO.LT.ETA+DSQRT(ETAC+1.D0)))FCOU-043
     1 GO TO 7                                                          FCOU-044
      IF (RO.GE.ETA+DSQRT(ETAC+DFLOAT(L*(L+1)))) GO TO 5                FCOU-045
    2 ROINF=ETA+DSQRT(ETAC+DFLOAT(LINF*(LINF+1)))                       FCOU-046
      IF (RO.LT.ROINF) GO TO 3                                          FCOU-047
      IF (LINF.GE.L) GO TO 4                                            FCOU-048
      LINF=LINF+1                                                       FCOU-049
      GO TO 2                                                           FCOU-050
    3 IND=1                                                             FCOU-051
    4 LIN=LINF+1                                                        FCOU-052
    5 XM=1.D0                                                           FCOU-053
      IF (IND.EQ.0) LIN=L1                                              FCOU-054
C UPWARD RECURSION FOR THE REGULAR AND IRREGULAR FUNCTIONS.             FCOU-055
      DO 6 J=2,LIN                                                      FCOU-056
      ZIG=(DSQRT(ETAC+XM*XM))/XM                                        FCOU-057
      ZAG=ETA/XM+XM/RO                                                  FCOU-058
      F(J)=(ZAG*F(J-1)-FP(J-1))/ZIG                                     FCOU-059
      FP(J)=ZIG*F(J-1)-ZAG*F(J)                                         FCOU-060
      G(J)=(ZAG*G(J-1)-GP(J-1))/ZIG                                     FCOU-061
      GP(J)=ZIG*G(J-1)-ZAG*G(J)                                         FCOU-062
      IEXP(J)=IEXP(1)                                                   FCOU-063
    6 XM=XM+1.D0                                                        FCOU-064
      IF (IND.EQ.0) RETURN                                              FCOU-065
C DESCENDING RECURSION FOR THE REGULAR FUNCTION.                        FCOU-066
    7 FTEST=F(LIN)                                                      FCOU-067
      FPTEST=FP(LIN)                                                    FCOU-068
      LMAX=LINF+25+IDINT(5.D0*DABS(ETA))                                FCOU-069
      IF (LMAX.LT.L) LMAX=L                                             FCOU-070
      FI=1.D0                                                           FCOU-071
      FPI=1.D0                                                          FCOU-072
C ANGULAR MOMENTUM GREATER THAN THE MAXIMUM REQUIRED.                   FCOU-073
    8 XM=DFLOAT(LMAX+1)                                                 FCOU-074
      ZIG=(DSQRT(ETAC+XM*XM))/XM                                        FCOU-075
      ZAG=ETA/XM+XM/RO                                                  FCOU-076
      FL=(ZAG*FI+FPI)/ZIG                                               FCOU-077
      FPL=ZAG*FL-ZIG*FI                                                 FCOU-078
      IF (DABS(FL).LT.1.D15.AND.DABS(FPL).LT.1.D15) GO TO 9             FCOU-079
      FL=FL*1.D-15                                                      FCOU-080
      FPL=FPL*1.D-15                                                    FCOU-081
    9 FI=FL                                                             FCOU-082
      FPI=FPL                                                           FCOU-083
      IF (LMAX.LE.L) GO TO 11                                           FCOU-084
   10 LMAX=LMAX-1                                                       FCOU-085
      GO TO 8                                                           FCOU-086
C ANGULAR MOMENTUM SMALLER THAN THAT REQUIRED.                          FCOU-087
   11 F(LMAX+1)=FL                                                      FCOU-088
      FP(LMAX+1)=FPL                                                    FCOU-089
      IF (LMAX.GT.LINF) GO TO 10                                        FCOU-090
      FACT=FTEST/F(LIN)                                                 FCOU-091
      FACTP=FPTEST/FP(LIN)                                              FCOU-092
      INDICE=IEXP(1)/15                                                 FCOU-093
      XM=DFLOAT(LINF)                                                   FCOU-094
C NORMALISATION OF THE RESULTS OF THE DESCENDING RECURSION AND          FCOU-095
C UPWARDS RECURSION FOR THE IRREGULAR FUNCTION.                         FCOU-096
      DO 13 J=LIN,L1                                                    FCOU-097
      F(J)=F(J)*FACT                                                    FCOU-098
      FP(J)=FP(J)*FACTP                                                 FCOU-099
      IF (J.EQ.1) GO TO 13                                              FCOU-100
      ZIG=(DSQRT(ETAC+XM*XM))/XM                                        FCOU-101
      ZAG=ETA/XM+XM/RO                                                  FCOU-102
      G(J)=(ZAG*G(J-1)-GP(J-1))/ZIG                                     FCOU-103
      GP(J)=ZIG*G(J-1)-ZAG*G(J)                                         FCOU-104
      IF (DABS(G(J)).LT.1.D15.AND.DABS(GP(J)).LT.1.D15) GO TO 12        FCOU-105
      G(J)=G(J)/1.D15                                                   FCOU-106
      GP(J)=GP(J)/1.D15                                                 FCOU-107
      INDICE=INDICE+1                                                   FCOU-108
   12 IEXP(J)=INDICE*15                                                 FCOU-109
      A=DLOG10(DABS(FP(J)))+DLOG10(DABS(G(J)))                          FCOU-110
      B=0.D0                                                            FCOU-111
      IF (A.GE.0.D0) B=1.D0                                             FCOU-112
      I1=IDINT(B+A)                                                     FCOU-113
      I2=IDINT(B+DLOG10(DABS(GP(J)))+DLOG10(DABS(F(J))))                FCOU-114
      F(J)=F(J)*1.D1**(-I2)                                             FCOU-115
      FP(J)=FP(J)*1.D1**(-I1)                                           FCOU-116
   13 XM=XM+1.D0                                                        FCOU-117
      RETURN                                                            FCOU-118
 1000 FORMAT ('  FCOU   ***  ETA =',1P,D13.5,',  RHO =',D13.5,'   ARGUMEFCOU-119
     1NT OUT OFF RANGE.')                                               FCOU-120
      END                                                               FCOU-121
C 20/05/07                                                      ECIS12  FCZ0-000
      SUBROUTINE FCZ0(ETA,RO,F0,FP0,G0,GP0,IEXP,SIGMA)                  FCZ0-001
C COMPUTATION OF THE COULOMB FUNCTIONS FOR L=0.                         FCZ0-002
C INPUT:     ETA,RO:  COULOMB PARAMETER AND RADIUS.                     FCZ0-003
C OUTPUT:    F,FP:    REGULAR FUNCTION AND DERIVATIVE.                  FCZ0-004
C            G,GP:    IRREGULAR FUNCTION AND DERIVATIVE.                FCZ0-005
C            IEXP:    POWER OF 10.                                      FCZ0-006
C            SIGMA:   COULOMB PHASE SHIFT FOR L=0.                      FCZ0-007
C***********************************************************************FCZ0-008
      IMPLICIT REAL*8 (A-H,O-Z)                                         FCZ0-009
      DATA PI /3.1415926535897932D0/                                    FCZ0-010
      SIGMA=SIGM(ETA)                                                   FCZ0-011
      IEXP=0                                                            FCZ0-012
      IF (ETA.LE.28.D0.AND.ETA.GE.-8.D0) GO TO 1                        FCZ0-013
      CALL YFRI(ETA,RO,F0,FP0,G0,GP0,IEXP,SIGMA)                        FCZ0-014
      RETURN                                                            FCZ0-015
    1 IF (ETA.NE.0.D0) GO TO 2                                          FCZ0-016
C BESSEL FUNCTIONS.                                                     FCZ0-017
      F0=DSIN(RO)                                                       FCZ0-018
      G0=DCOS(RO)                                                       FCZ0-019
      FP0=G0                                                            FCZ0-020
      GP0=-F0                                                           FCZ0-021
      GO TO 19                                                          FCZ0-022
    2 BORNE=1.666666666666667D0*DABS(ETA)+7.5D0                         FCZ0-023
      IF (RO.LT.BORNE) GO TO 3                                          FCZ0-024
      CALL YFAS(ETA,RO,F0,FP0,G0,GP0,SIGMA)                             FCZ0-025
      GO TO 19                                                          FCZ0-026
    3 IF (ETA.GE.10.D0) GO TO 4                                         FCZ0-027
      IF (ETA.LE.0.D0) GO TO 5                                          FCZ0-028
      IF (RO-2.D0) 15 , 5 , 5                                           FCZ0-029
    4 IF (ETA.GT.(5.D0*RO+6.D1)/7.D0) GO TO 15                          FCZ0-030
C RS=-1 FOR NORMALISATION AT THE ORIGIN,RS=1 AT RO=BORNE(THE BOUNDARY). FCZ0-031
    5 IF (ETA.LT.2.5D0) GO TO 6                                         FCZ0-032
      RS=1.D0                                                           FCZ0-033
      CALL YFAS(ETA,BORNE,F0,FP0,G0,GP0,SIGMA)                          FCZ0-034
      GO TO 8                                                           FCZ0-035
    6 RS=-1.D0                                                          FCZ0-036
C          CLENSHAW ORIGIN.                                             FCZ0-037
      IF (ETA) 7 , 8 , 8                                                FCZ0-038
    7 N=IDINT(-0.5D0*ETA+5.D0)                                          FCZ0-039
      GO TO 9                                                           FCZ0-040
    8 N=IDINT(ETA/5.D0+5.D0)                                            FCZ0-041
    9 N=10*(N/2+1)                                                      FCZ0-042
      TM1=1.D0                                                          FCZ0-043
      T=2.D0*RO/BORNE-1.D0                                              FCZ0-044
      X=T+T                                                             FCZ0-045
      DO 10 I=1,N                                                       FCZ0-046
      TP1=X*T-TM1                                                       FCZ0-047
      TM1=T                                                             FCZ0-048
   10 T=TP1                                                             FCZ0-049
      T=TM1                                                             FCZ0-050
      A1=1.D-30                                                         FCZ0-051
      A2=0.D0                                                           FCZ0-052
      B1=0.D0                                                           FCZ0-053
      B2=A1                                                             FCZ0-054
      S=1.D0                                                            FCZ0-055
      SA=0.D0                                                           FCZ0-056
      SB=0.D0                                                           FCZ0-057
      Z1=0.D0                                                           FCZ0-058
      Z1P=0.D0                                                          FCZ0-059
      AP12=0.D0                                                         FCZ0-060
      AP11=0.D0                                                         FCZ0-061
      BP11=0.D0                                                         FCZ0-062
      Z2=0.D0                                                           FCZ0-063
      Z2P=0.D0                                                          FCZ0-064
      AP22=0.D0                                                         FCZ0-065
      AP21=0.D0                                                         FCZ0-066
      BP21=0.D0                                                         FCZ0-067
      A0=8.D0*ETA/BORNE-1.D0                                            FCZ0-068
      BD=4.D0/(BORNE*BORNE)                                             FCZ0-069
      B0=BD*DFLOAT(N+2)                                                 FCZ0-070
      B4=BD*DFLOAT(N-1)                                                 FCZ0-071
      R4=4.D0*DFLOAT(N)                                                 FCZ0-072
C          DOWNWARDS RECURSION.                                         FCZ0-073
   11 AM11=A0*(A1-AP11)+AP12-B0*B1-B4*BP11                              FCZ0-074
      AM21=A0*(A2-AP21)+AP22-B0*B2-B4*BP21                              FCZ0-075
      SA=SA+S*A1                                                        FCZ0-076
      SB=SB+S*A2                                                        FCZ0-077
      Z1=Z1+A1*T                                                        FCZ0-078
      Z1P=Z1P+B1*T                                                      FCZ0-079
      Z2=Z2+A2*T                                                        FCZ0-080
      Z2P=Z2P+B2*T                                                      FCZ0-081
      IF (R4.EQ.0.D0) GO TO 12                                          FCZ0-082
      BM11=R4*A1+BP11                                                   FCZ0-083
      AP12=AP11                                                         FCZ0-084
      AP11=A1                                                           FCZ0-085
      A1=AM11                                                           FCZ0-086
      BP11=B1                                                           FCZ0-087
      B1=BM11                                                           FCZ0-088
      BM21=R4*A2+BP21                                                   FCZ0-089
      AP22=AP21                                                         FCZ0-090
      AP21=A2                                                           FCZ0-091
      A2=AM21                                                           FCZ0-092
      BP21=B2                                                           FCZ0-093
      B2=BM21                                                           FCZ0-094
      B4=B4-BD                                                          FCZ0-095
      B0=B0-BD                                                          FCZ0-096
      R4=R4-4.D0                                                        FCZ0-097
      S=S*RS                                                            FCZ0-098
      TM1=X*T-TP1                                                       FCZ0-099
      TP1=T                                                             FCZ0-100
      T=TM1                                                             FCZ0-101
      GO TO 11                                                          FCZ0-102
   12 A=AP21-AM21                                                       FCZ0-103
      B=AM11-AP11                                                       FCZ0-104
      SA=A*SA+B*SB                                                      FCZ0-105
      A1=A*A1+B*A2                                                      FCZ0-106
      B1=A*B1+B*B2                                                      FCZ0-107
      Z1=A*Z1+B*Z2                                                      FCZ0-108
      Z1P=A*Z1P+B*Z2P                                                   FCZ0-109
      SA=(SA-0.5D0*A1)/T                                                FCZ0-110
      Z1=Z1-0.5D0*A1                                                    FCZ0-111
      Z1P=Z1P-0.5D0*B1                                                  FCZ0-112
      IF (RS.LT.0.D0) GO TO 13                                          FCZ0-113
      S=F0/(BORNE*SA)                                                   FCZ0-114
      GO TO 14                                                          FCZ0-115
   13 PIETA=PI*ETA                                                      FCZ0-116
      S=DEXP(PIETA)                                                     FCZ0-117
      S=DEXP(-PIETA/2.D0)*DSQRT(2.D0*PIETA/(S-1.D0/S))/SA               FCZ0-118
   14 F0=S*RO*Z1                                                        FCZ0-119
      FP0=S*(Z1+RO*Z1P/BORNE)                                           FCZ0-120
      GO TO 18                                                          FCZ0-121
C   SERIES REGULAR AT THE ORIGIN.                                       FCZ0-122
   15 PI=3.141592653589793D0                                            FCZ0-123
      RO2=RO*RO                                                         FCZ0-124
      ETAP=ETA+ETA                                                      FCZ0-125
      PIETA=PI*ETA                                                      FCZ0-126
      B=DEXP(PIETA)                                                     FCZ0-127
      B=DEXP(0.5D0*PIETA)*DSQRT((B-1.D0/B)/(2.D0*PIETA))                FCZ0-128
      U0=0.D0                                                           FCZ0-129
      U1=RO                                                             FCZ0-130
      U=U0+U1                                                           FCZ0-131
      UP=1.D0                                                           FCZ0-132
      XN=2.D0                                                           FCZ0-133
      DO 16 N=2,10000                                                   FCZ0-134
      XN1=XN*(XN-1.D0)                                                  FCZ0-135
      U2=(ETAP*RO*U1-RO2*U0)/XN1                                        FCZ0-136
      U=U+U2                                                            FCZ0-137
      UP=UP+XN*U2/RO                                                    FCZ0-138
      IF (DABS(U1)+DABS(U2).LT.1.D-10*DABS(U)) GO TO 17                 FCZ0-139
      U0=U1                                                             FCZ0-140
      U1=U2                                                             FCZ0-141
   16 XN=XN+1.D0                                                        FCZ0-142
   17 F0=U/B                                                            FCZ0-143
      FP0=UP/B                                                          FCZ0-144
   18 CALL YFIR(ETA,RO,G0,GP0,SIGMA)                                    FCZ0-145
   19 IF (DABS(G0).LT.1.D15.AND.DABS(GP0).LT.1.D15) RETURN              FCZ0-146
      F0=F0*1.D15                                                       FCZ0-147
      FP0=FP0*1.D15                                                     FCZ0-148
      G0=G0/1.D15                                                       FCZ0-149
      GP0=GP0/1.D15                                                     FCZ0-150
      INDICE=INDICE+1                                                   FCZ0-151
      IEXP=IEXP+15                                                      FCZ0-152
      GO TO 19                                                          FCZ0-153
      END                                                               FCZ0-154
C 13/11/05                                                      ECIS12  YFRI-000
      SUBROUTINE YFRI(ETA,RAU,FO,FPO,GO,GPO,IDIV,SIGMA)                 YFRI-001
C COMPUTATION OF THE COULOMB FUNCTIONS FOR L=0.                         YFRI-002
C RICCATI METHOD.  SAME ARGUMENTS AS FCZ0.                              YFRI-003
C INPUT:     ETA,RAU: COULOMB PARAMETER AND RADIUS.                     YFRI-004
C            SIGMA:   COULOMB PHASE SHIFT FOR L=0.                      YFRI-005
C OUTPUT:    FO,FPO:  REGULAR FUNCTION AND DERIVATIVE.                  YFRI-006
C            GO,GPO:  IRREGULAR FUNCTION AND DERIVATIVE.                YFRI-007
C            IDIV:    POWER OF 10.                                      YFRI-008
C***********************************************************************YFRI-009
      IMPLICIT REAL*8 (A-H,O-Z)                                         YFRI-010
      DIMENSION Q(5),QP(5)                                              YFRI-011
C        RICCATI COEFFICIENTS.                                          YFRI-012
      DATA G61,G62,G63,G64,G65,G66,G67,G68,G69,G610,G611/ 1.159057617187YFRI-013
     15D-2,3.863525390625D-2,4.6600341796875D-2,4.8583984375D-2,1.156514YFRI-014
     248567708D0,5.6874755859375D0,1.323888288225445D1,1.713083224826384YFRI-015
     3D1,1.269003295898436D1,5.05523681640625D0,8.42539464010415D-1/    YFRI-016
      DATA G81,G82,G83,G84,G85,G86,G87,G88,G89,G810,G811,G812,G813,G814,YFRI-017
     1G815/ 1.851092066083633D-2,8.63842964172363D-2,1.564757823944092D-YFRI-018
     21,1.430139541625977D-1,1.924622058868408D-1,8.500803152720129D0,7.YFRI-019
     3265429720878595D1,3.057942376817972D2,7.699689544836672D2,1.254157YFRI-020
     4054424285D3,1.361719536066055D3,9.831831171035763D2,4.547869927883YFRI-021
     5148D2,1.222640538215636D2,1.455524450256709D1/                    YFRI-022
      DATA GP61,GP62,GP63,GP64,GP65,GP66/ 0.289764404296875D-1,0.2318115YFRI-023
     1234375D0,0.8056640625D0,1.6015625D0,0.3046875D0,5.625D0/          YFRI-024
      DATA GP81,GP82,GP83,GP84,GP85,GP86,GP87,GP88/ 0.647882223129272D-1YFRI-025
     1,0.6910743713378906D0,0.3322952270507811D1,0.94830322265625D1,17.6YFRI-026
     296533203125D0,34.787109375D0,50.203125D0,78.75D0/                 YFRI-027
      DATA Q/ 0.4959570165D-1,0.8888888889D-2,0.2455199181D-2,0.91089580YFRI-028
     161D-3,0.2534684115D-3/                                            YFRI-029
      DATA QP,HO,HPO/ 0.1728260369D0,0.3174603174D-3,0.3581214850D-2,0.3YFRI-030
     1117824680D-3,0.9073966427D-3,2*0.D0/                              YFRI-031
      ETAC=ETA*ETA                                                      YFRI-032
      ETA2=ETA+ETA                                                      YFRI-033
      ETARO=ETA*RAU                                                     YFRI-034
      IND=0                                                             YFRI-035
      JND=0                                                             YFRI-036
      IG=0                                                              YFRI-037
      IDIV=0                                                            YFRI-038
      IF (ETA.GT.0.D0) GO TO 1                                          YFRI-039
      IF (-ETARO-14.0625D0) 3 , 15 , 15                                 YFRI-040
    1 IF (DABS(RAU-ETA2).LE.1.D-9) GO TO 14                             YFRI-041
      IF (RAU-ETA2) 6 , 14 , 2                                          YFRI-042
    2 IF (RAU-ETA2-2.D1*(ETA**0.25D0)) 4 , 15 , 15                      YFRI-043
    3 NN=1                                                              YFRI-044
      GO TO 5                                                           YFRI-045
    4 NN=0                                                              YFRI-046
    5 CALL YFCL(ETA,RAU,FO,FPO,GO,GPO,SIGMA,IDIV,NN)                    YFRI-047
      RETURN                                                            YFRI-048
    6 IF (ETARO.LE.12.D0) GO TO 3                                       YFRI-049
      TRA=ETA2-6.75D0*(ETA**0.4D0)                                      YFRI-050
      IF (RAU.LE.TRA) GO TO 7                                           YFRI-051
      IND=1                                                             YFRI-052
      JND=1                                                             YFRI-053
      RO=RAU                                                            YFRI-054
      RAU=TRA                                                           YFRI-055
      RAU0=TRA                                                          YFRI-056
C             RICCATI   1.                                              YFRI-057
    7 X=RAU/ETA2                                                        YFRI-058
      U=(1.D0-X)/X                                                      YFRI-059
      X2=X*X                                                            YFRI-060
      RU=DSQRT(U)                                                       YFRI-061
      RX=DSQRT(X)                                                       YFRI-062
      TRE=1.D0/(U*RU*ETA2)                                              YFRI-063
      TRB=TRE*TRE                                                       YFRI-064
      FI=(DSQRT((1.D0-X)*X)+DATAN2(RX,DSQRT(1.D0-RX*RX))-1.5707963267948YFRI-065
     197D0)*ETA2                                                        YFRI-066
      TR1=-0.25D0*DLOG(U)                                               YFRI-067
      TR2=-((9.D0*U+6.D0)*U+5.D0)/48.D0                                 YFRI-068
      TR3=((((-3.D0*U-4.D0)*U+6.D0)*U+12.D0)*U+5.D0)/64.D0              YFRI-069
      TR4=-((((((U+2.D0)*945.D0*U+1395.D0)*U+12300.D0)*U+25191.D0)*U+198YFRI-070
     190.D0)*U+5525.D0)/46080.D0                                        YFRI-071
      TR5=((((((((-27.D0*U-72.D0)*U-68.D0)*U+360.D0)*U+2190.D0)*U+4808.DYFRI-072
     10)*U+5148.D0)*U+2712.D0)*U+565.D0)/2048.D0                        YFRI-073
      TR6=-((((((((((G61*U+G62)*U+G63)*U+G64)*U+G65)*U+G66)*U+G67)*U+G68YFRI-074
     1)*U+G69)*U+G610)*U+G611)                                          YFRI-075
      TR7=((((((((((((-81.D0*U-324.D0)*U-486.D0)*U-404.D0)*U+4509.D0)*U+YFRI-076
     152344.D0)*U+233436.D0)*U+567864.D0)*U+838521.D0)*U+775884.D0)*U+44YFRI-077
     21450.D0)*U+141660.D0)*U+19675.D0)/6144.D0                         YFRI-078
      TR8=(((((((((((((G81*U+G82)*U+G83)*U+G84)*U+G85)*U+G86)*U+G87)*U+GYFRI-079
     188)*U+G89)*U+G810)*U+G811)*U+G812)*U+G813)*U+G814)*U+G815         YFRI-080
      FI=FI+TRE*(TR2+TRB*(TR4+TRB*(TR6+TRB*TR8)))                       YFRI-081
      PSITMP=-FI                                                        YFRI-082
      TRA=TR1+TRB*(TR3+TRB*(TR5+TRB*TR7))                               YFRI-083
      FI=FI+TRA                                                         YFRI-084
      PSITMP=PSITMP+TRA                                                 YFRI-085
      FIP=RU*ETA2                                                       YFRI-086
      TRA=1.D0/(X2*U)                                                   YFRI-087
      TR1=0.25D0                                                        YFRI-088
      TRE=TRE/(X2*X2*U)                                                 YFRI-089
      TRB=TRB/(X2*X2)                                                   YFRI-090
      TR2=-(8.D0*X-3.D0)/32.D0                                          YFRI-091
      TR3=((24.D0*X-12.D0)*X+3.D0)/64.D0                                YFRI-092
      TR4=(((-1536.D0*X+704.D0)*X-336.D0)*X+63.D0)/2048.D0              YFRI-093
      TR5=((((1920.D0*X-576.D0)*X+504.D0)*X-180.D0)*X+27.D0)/1024.D0    YFRI-094
      TR6=((((-GP66*X+GP65)*X-GP64)*X+GP63)*X-GP62)*X+GP61              YFRI-095
      TR7=-((((((-40320.D0*X-10560.D0)*X-13248.D0)*X+7560.D0)*X-3132.D0)YFRI-096
     1*X+756.D0)*X-81.D0)/2048.D0                                       YFRI-097
      TR8=-(((((((GP88*X+GP87)*X+GP86)*X-GP85)*X+GP84)*X-GP83)*X+GP82)*XYFRI-098
     1-GP81)                                                            YFRI-099
      FIP=FIP+TRE*(TR2+TRB*(TR4+TRB*(TR6+TRB*TR8)))                     YFRI-100
      PSIP=-FIP                                                         YFRI-101
      TRA=TRA*(TR1+TRB*(TR3+TRB*(TR5+TRB*TR7)))                         YFRI-102
      FIP=FIP+TRA                                                       YFRI-103
      PSIP=PSIP+TRA                                                     YFRI-104
      XXX=34.588776394910686D0                                          YFRI-105
      INDG=IDINT(PSITMP/XXX)                                            YFRI-106
      IDIV=15*INDG                                                      YFRI-107
      IF (INDG.EQ.0) GO TO 8                                            YFRI-108
      PSITMP=PSITMP-XXX*INDG                                            YFRI-109
      FI=FI+XXX*INDG                                                    YFRI-110
    8 FO=0.5D0*DEXP(FI)                                                 YFRI-111
      GO=DEXP(PSITMP)                                                   YFRI-112
      FPO=FO*FIP/ETA2                                                   YFRI-113
      GPO=GO*PSIP/ETA2                                                  YFRI-114
      IF (JND.EQ.0) RETURN                                              YFRI-115
      RAU=RO                                                            YFRI-116
      GO=FO                                                             YFRI-117
      GPO=FPO                                                           YFRI-118
    9 X=RAU0-RO                                                         YFRI-119
      X2=X*X                                                            YFRI-120
      X3=X*X2                                                           YFRI-121
      UNR=1.D0/RAU0                                                     YFRI-122
      ETR0=1.D0-2.D0*ETA*UNR                                            YFRI-123
      U0=GO                                                             YFRI-124
      U1=-X*GPO                                                         YFRI-125
      U2=-0.5D0*ETR0*X2*U0                                              YFRI-126
      S=U0+U1+U2                                                        YFRI-127
      V1=U1/X                                                           YFRI-128
      V2=2.D0*U2/X                                                      YFRI-129
      T=V1+V2                                                           YFRI-130
      XN=3.D0                                                           YFRI-131
      DO 11 N=3,10000                                                   YFRI-132
      XN1=XN-1.D0                                                       YFRI-133
      XN1=XN*XN1                                                        YFRI-134
      U3=X*U2*UNR*(1.D0-2.D0/XN)-ETR0*U1*X2/XN1+X3*U0*UNR/XN1           YFRI-135
      S=S+U3                                                            YFRI-136
      V3=XN*U3/X                                                        YFRI-137
      T=T+V3                                                            YFRI-138
      IF (DABS(U3).GT.1.D-10*DABS(S)) GO TO 10                          YFRI-139
      IF (DABS(V3).LE.1.D-10*DABS(T)) GO TO 12                          YFRI-140
   10 U0=U1                                                             YFRI-141
      U1=U2                                                             YFRI-142
      U2=U3                                                             YFRI-143
   11 XN=XN+1.D0                                                        YFRI-144
   12 IF (IG.EQ.0) GO TO 13                                             YFRI-145
      GO=S                                                              YFRI-146
      GPO=-T                                                            YFRI-147
      FO=HO                                                             YFRI-148
      FPO=HPO                                                           YFRI-149
      RETURN                                                            YFRI-150
   13 HO=S                                                              YFRI-151
      HPO=-T                                                            YFRI-152
   14 ET0=ETA**(0.1666666666666667D0)                                   YFRI-153
      ETAD=ETAC*ETAC                                                    YFRI-154
      ET=ETA**(0.6666666666666667D0)                                    YFRI-155
      ET1=ET*ET                                                         YFRI-156
      ET2=ET1*ET1                                                       YFRI-157
      ET3=ET2*ET                                                        YFRI-158
      ET4=ETAD*ET                                                       YFRI-159
      ET5=ET4*ET                                                        YFRI-160
      FO=1.D0-Q(1)/ET1-Q(2)/ETAC-Q(3)/ET3-Q(4)/ETAD-Q(5)/ET5            YFRI-161
      GO=1.D0+Q(1)/ET1-Q(2)/ETAC+Q(3)/ET3-Q(4)/ETAD+Q(5)/ET5            YFRI-162
      FPO=1.D0+QP(1)/ET+QP(2)/ETAC+QP(3)/ET2+QP(4)/ETAD+QP(5)/ET4       YFRI-163
      GPO=1.D0-QP(1)/ET+QP(2)/ETAC-QP(3)/ET2+QP(4)/ETAD-QP(5)/ET4       YFRI-164
      FO=0.7063326373D0*ET0*FO                                          YFRI-165
      GO=1.223404016D0*ET0*GO                                           YFRI-166
      FPO=0.4086957323D0*FPO/ET0                                        YFRI-167
      GPO=-0.7078817734D0*GPO/ET0                                       YFRI-168
      IDIV=0                                                            YFRI-169
      IF (IND.EQ.0) RETURN                                              YFRI-170
      IG=1                                                              YFRI-171
      RAU0=ETA2                                                         YFRI-172
      GO TO 9                                                           YFRI-173
C        RICCATI 2 AND 3.                                               YFRI-174
   15 X=ETA2/RAU                                                        YFRI-175
      X2=X*X                                                            YFRI-176
      U=1.D0-X                                                          YFRI-177
      RU=DSQRT(U)                                                       YFRI-178
      U3=U*U*U                                                          YFRI-179
      TRD=1.D0/(U3*ETA2*ETA2)                                           YFRI-180
      TRC=X2*TRD                                                        YFRI-181
      TRE=1.D0/(U*RU*ETA2)                                              YFRI-182
      FI=-0.25D0*DLOG(U)                                                YFRI-183
      TRB=TRD/64.D0                                                     YFRI-184
      TR3=(((3.D0*U-4.D0)*U-6.D0)*U+12.D0)*U-5.D0                       YFRI-185
      TR5=((((((((-27.D0*U+72.D0)*U-68.D0)*U-360.D0)*U+2190.D0)*U-4808.DYFRI-186
     10)*U+5148.D0)*U-2712.D0)*U+565.D0)/32.D0                          YFRI-187
      TR7=((((((((((((81.D0*U-324.D0)*U+486.D0)*U-404.D0)*U-4509.D0)*U+5YFRI-188
     12344.D0)*U-233436.D0)*U+567864.D0)*U-838521.D0)*U+775884.D0)*U-441YFRI-189
     2450.D0)*U+141660.D0)*U-19675.D0)/96.D0                            YFRI-190
      FI=FI+TRB*(TR3+TRD*(TR5+TRD*TR7))                                 YFRI-191
      FIP=0.25D0/U                                                      YFRI-192
      TRB=3.D0*TRC/(64.D0*U)                                            YFRI-193
      TR3=(4.D0-X)*X-8.D0                                               YFRI-194
      TR5=((((9.D0*X-60.D0)*X+168.D0)*X-192.D0)*X+640.D0)/16.D0         YFRI-195
      TR7=((((((-27.D0*X+252.D0)*X-1044.D0)*X+2520.D0)*X-4416.D0)*X-3520YFRI-196
     1.D0)*X-13440.D0)/32.D0                                            YFRI-197
      FIP=FIP+TRB*(TR3+TRC*(TR5+TRC*TR7))                               YFRI-198
      TRA=DABS((RU-1.D0)/(RU+1.D0))                                     YFRI-199
      PSITMP=(0.5D0*DLOG(TRA)+RU/X)*ETA2+0.785398163397448D0            YFRI-200
      TR2=-((9.D0*U-6.D0)*U+5.D0)/48.D0                                 YFRI-201
      TR4=((((((U-2.D0)*945.D0*U+1395.D0)*U-12300.D0)*U+25191.D0)*U-1989YFRI-202
     10.D0)*U+5525.D0)/46080.D0                                         YFRI-203
      TR6=(((((((((-G61*U+G62)*U-G63)*U+G64)*U-G65)*U+G66)*U-G67)*U+G68)YFRI-204
     1*U-G69)*U+G610)*U-G611                                            YFRI-205
      TR8=(((((((((((((G81*U-G82)*U+G83)*U-G84)*U+G85)*U-G86)*U+G87)*U-GYFRI-206
     188)*U+G89)*U-G810)*U+G811)*U-G812)*U+G813)*U-G814)*U+G815         YFRI-207
      PSITMP=PSITMP+TRE*(TR2+TRD*(TR4+TRD*(TR6+TRD*TR8)))               YFRI-208
      PSIP=-RU*ETA2/X2                                                  YFRI-209
      TRB=TRE*X/U                                                       YFRI-210
      TR2=(3.D0*X-8.D0)/32.D0                                           YFRI-211
      TR4=-(((63.D0*X-336.D0)*X+704.D0)*X-1536.D0)/2048.D0              YFRI-212
      TR6=((((GP61*X-GP62)*X+GP63)*X-GP64)*X+GP65)*X-GP66               YFRI-213
      TR8=((((((-GP81*X+GP82)*X-GP83)*X+GP84)*X-GP85)*X+GP86)*X+GP87)*X+YFRI-214
     1GP88                                                              YFRI-215
      PSIP=PSIP+TRB*(TR2+TRC*(TR4+TRC*(TR6+TRC*TR8)))                   YFRI-216
      TRA=DEXP(FI)                                                      YFRI-217
      FO=TRA*DSIN(PSITMP)                                               YFRI-218
      GO=TRA*DCOS(PSITMP)                                               YFRI-219
      IF (ETA.GT.0.D0) GO TO 16                                         YFRI-220
      TRA=FO                                                            YFRI-221
      FO=-GO                                                            YFRI-222
      GO=TRA                                                            YFRI-223
   16 TRA=-ETA2/(RAU*RAU)                                               YFRI-224
      FPO=(FIP*FO+PSIP*GO)*TRA                                          YFRI-225
      GPO=(FIP*GO-PSIP*FO)*TRA                                          YFRI-226
      RETURN                                                            YFRI-227
      END                                                               YFRI-228
C 12/01/07                                                      ECIS12  YFCL-000
      SUBROUTINE YFCL(ETA,RO,U,UP,V,VP,SIGMA,IDIV,NN)                   YFCL-001
C COMPUTATION OF THE COULOMB FUNCTIONS FOR L=0.                         YFCL-002
C CLENSHAW METHOD.  SAME ARGUMENTS AS FCZ0, PLUS NN.                    YFCL-003
C INPUT:     ETA,RO:  COULOMB PARAMETER AND RADIUS.                     YFCL-004
C            SIGMA:   COULOMB PHASE SHIFT FOR L=0.                      YFCL-005
C            NN:      0 FOR ASYMPTOTIC, 1 FOR SERIES AT THE ORIGIN.     YFCL-006
C OUTPUT:    U,UP:    REGULAR FUNCTION AND DERIVATIVE.                  YFCL-007
C            V,VP:    IRREGULAR FUNCTION AND DERIVATIVE.                YFCL-008
C            IDIV:    POWER OF 10.                                      YFCL-009
C***********************************************************************YFCL-010
      IMPLICIT REAL*8 (A-H,O-Z)                                         YFCL-011
      DATA PI /3.1415926535897932D0/                                    YFCL-012
      IDIV=0                                                            YFCL-013
      ETAP=ETA+ETA                                                      YFCL-014
      RO2=RO*RO                                                         YFCL-015
      IF (NN.EQ.1) GO TO 4                                              YFCL-016
C          CLENSHAW ASYMPTOTIC.                                         YFCL-017
      E2=ETA*ETA                                                        YFCL-018
      M=IDINT(40.D0+ETA/4.D0)                                           YFCL-019
      M=2*(M/2)                                                         YFCL-020
      I=1                                                               YFCL-021
      R=DFLOAT(M)                                                       YFCL-022
      D4=4.D0*R                                                         YFCL-023
      TM1=1.D0                                                          YFCL-024
      T=4.D0*ETA/RO-1.D0                                                YFCL-025
      Z=T+T                                                             YFCL-026
      DO 1 J=1,M                                                        YFCL-027
      TP1=Z*T-TM1                                                       YFCL-028
      TM1=T                                                             YFCL-029
    1 T=TP1                                                             YFCL-030
      T=TM1                                                             YFCL-031
      GR=0.D0                                                           YFCL-032
      GPR=0.D0                                                          YFCL-033
      SCR=0.D0                                                          YFCL-034
      EP1R=0.D0                                                         YFCL-035
      ER=0.D0                                                           YFCL-036
      DP1R=0.D0                                                         YFCL-037
      DR=1.D-25                                                         YFCL-038
      C1R=R+1.D0                                                        YFCL-039
      C0R=E2-R*(R+1.D0)                                                 YFCL-040
      GI=0.D0                                                           YFCL-041
      GPI=0.D0                                                          YFCL-042
      SCI=0.D0                                                          YFCL-043
      EP1I=0.D0                                                         YFCL-044
      EI=0.D0                                                           YFCL-045
      DP1I=0.D0                                                         YFCL-046
      DI=0.D0                                                           YFCL-047
      C1I=-3.D0*ETA                                                     YFCL-048
      C0I=-(R+R+1.D0)*ETA                                               YFCL-049
C          BACKWARDS RECURRENCE.                                        YFCL-050
    2 SCZ=C0R*C0R+C0I*C0I                                               YFCL-051
      C2R=C1R*DR-C1I*DI+0.5D0*(DP1R+ER+EP1R)-ETA*DP1I                   YFCL-052
      C2I=C1R*DI+C1I*DR+0.5D0*(DP1I+EI+EP1I)+ETA*DP1R                   YFCL-053
      CR=(C2R*C0R+C2I*C0I)/SCZ                                          YFCL-054
      CI=(C0R*C2I-C0I*C2R)/SCZ                                          YFCL-055
      GR=GR+CR*T                                                        YFCL-056
      GPR=GPR+DR*T                                                      YFCL-057
      SCR=SCR+I*CR                                                      YFCL-058
      GI=GI+CI*T                                                        YFCL-059
      GPI=GPI+DI*T                                                      YFCL-060
      SCI=SCI+I*CI                                                      YFCL-061
      IF (R.EQ.0.D0) GO TO 3                                            YFCL-062
      EM1R=D4*DR+EP1R                                                   YFCL-063
      DM1R=D4*CR+DP1R                                                   YFCL-064
      EP1R=ER                                                           YFCL-065
      ER=EM1R                                                           YFCL-066
      DP1R=DR                                                           YFCL-067
      DR=DM1R                                                           YFCL-068
      EM1I=D4*DI+EP1I                                                   YFCL-069
      DM1I=D4*CI+DP1I                                                   YFCL-070
      EP1I=EI                                                           YFCL-071
      EI=EM1I                                                           YFCL-072
      DP1I=DI                                                           YFCL-073
      DI=DM1I                                                           YFCL-074
      TM1=Z*T-TP1                                                       YFCL-075
      TP1=T                                                             YFCL-076
      T=TM1                                                             YFCL-077
      C0R=C0R+R+R                                                       YFCL-078
      C0I=C0I+ETAP                                                      YFCL-079
      C1R=C1R-1.D0                                                      YFCL-080
      I=-I                                                              YFCL-081
      D4=D4-4.D0                                                        YFCL-082
      R=R-1.D0                                                          YFCL-083
      GO TO 2                                                           YFCL-084
    3 SCR=SCR-0.5D0*CR                                                  YFCL-085
      GR=GR-0.5D0*CR                                                    YFCL-086
      GPR=GPR-0.5D0*DR                                                  YFCL-087
      SCI=SCI-0.5D0*CI                                                  YFCL-088
      GI=GI-0.5D0*CI                                                    YFCL-089
      GPI=GPI-0.5D0*DI                                                  YFCL-090
      Z=SIGMA+RO-ETA*DLOG(RO+RO)                                        YFCL-091
      SCZ=SCR*SCR+SCI*SCI                                               YFCL-092
      CR=DCOS(Z)                                                        YFCL-093
      CI=DSIN(Z)                                                        YFCL-094
      DR=(CR*SCR+CI*SCI)/SCZ                                            YFCL-095
      DI=(CI*SCR-CR*SCI)/SCZ                                            YFCL-096
      SCI=1.D0-ETA/RO                                                   YFCL-097
      SCR=ETAP/RO2                                                      YFCL-098
      CR=-GI*SCI-GPR*SCR                                                YFCL-099
      CI=GR*SCI-GPI*SCR                                                 YFCL-100
      VP=DR*CR-DI*CI                                                    YFCL-101
      UP=DR*CI+DI*CR                                                    YFCL-102
      V=DR*GR-DI*GI                                                     YFCL-103
      U=DR*GI+DI*GR                                                     YFCL-104
      RETURN                                                            YFCL-105
C          SERIES AT THE ORIGIN.                                        YFCL-106
    4 PIETA=PI*ETA                                                      YFCL-107
      IF (DABS(PIETA).GT.36.D0) GO TO 5                                 YFCL-108
      P=DSQRT((DEXP(2.D0*PIETA)-1.D0)/(2.D0*PIETA))                     YFCL-109
      GO TO 7                                                           YFCL-110
    5 IF (PIETA.GT.0.D0) GO TO 6                                        YFCL-111
      P=1.D0/DSQRT(-PIETA-PIETA)                                        YFCL-112
      GO TO 7                                                           YFCL-113
    6 Z=34.588776394910686D0                                            YFCL-114
      IDIV=IDINT(PIETA/Z)                                               YFCL-115
      P=DEXP(PIETA-IDIV*Z)/DSQRT(PIETA+PIETA)                           YFCL-116
      IDIV=15*IDIV                                                      YFCL-117
    7 Z1=ETAP*(PSI(ETA)+.6931471805599453D0)                            YFCL-118
      U0=0.D0                                                           YFCL-119
      U1=RO                                                             YFCL-120
      V0=1.D0                                                           YFCL-121
      V1=Z1*RO                                                          YFCL-122
      U=U0+U1                                                           YFCL-123
      V=V0+V1                                                           YFCL-124
      UP=1.D0                                                           YFCL-125
      VP=Z1                                                             YFCL-126
      XN=2.D0                                                           YFCL-127
      DO 9 N=2,10000                                                    YFCL-128
      XN1=XN*(XN-1.D0)                                                  YFCL-129
      U2=(ETAP*RO*U1-RO2*U0)/XN1                                        YFCL-130
      U=U+U2                                                            YFCL-131
      V2=(ETAP*RO*V1-RO2*V0-ETAP*(XN+XN-1.D0)*U2)/XN1                   YFCL-132
      V=V+V2                                                            YFCL-133
      UP=UP+XN*U2/RO                                                    YFCL-134
      VP=VP+XN*V2/RO                                                    YFCL-135
      IF (DABS(U2).GT.1.D-14*DABS(U)) GO TO 8                           YFCL-136
      IF (DABS(V2).LE.1.D-14*DABS(V)) GO TO 10                          YFCL-137
    8 U0=U1                                                             YFCL-138
      U1=U2                                                             YFCL-139
      V0=V1                                                             YFCL-140
      V1=V2                                                             YFCL-141
    9 XN=XN+1.D0                                                        YFCL-142
   10 PP=V+ETAP*U*DLOG(RO)                                              YFCL-143
      W=U/P                                                             YFCL-144
      WP=UP/P                                                           YFCL-145
      V=P*PP                                                            YFCL-146
      VP=P*(VP+ETAP*(UP*DLOG(RO)+U/RO))                                 YFCL-147
      U=W                                                               YFCL-148
      UP=WP                                                             YFCL-149
      RETURN                                                            YFCL-150
      END                                                               YFCL-151
C 13/11/05                                                      ECIS12  YFAS-000
      SUBROUTINE YFAS(ETA,RAU,FO,FPO,GO,GPO,SIGO)                       YFAS-001
C COMPUTATION OF THE COULOMB FUNCTIONS FOR L=0.                         YFAS-002
C     ASYMPTOTIC EXPANSION. SAME ARGUMENTS AS FCZ0 EXCEPT FOR IEXP.     YFAS-003
C INPUT:     ETA,RAU: COULOMB PARAMETER AND RADIUS.                     YFAS-004
C            SIGO:    COULOMB PHASE SHIFT FOR L=0.                      YFAS-005
C OUTPUT:    FO,FPO:  REGULAR FUNCTION AND DERIVATIVE.                  YFAS-006
C            GO,GPO:  IRREGULAR FUNCTION AND DERIVATIVE.                YFAS-007
C***********************************************************************YFAS-008
      IMPLICIT REAL*8 (A-H,O-Z)                                         YFAS-009
      TRB=0.D0                                                          YFAS-010
      RAU2=RAU+RAU                                                      YFAS-011
      ETAC=ETA*ETA                                                      YFAS-012
      N=0                                                               YFAS-013
      PS=1.D0                                                           YFAS-014
      GS=0.D0                                                           YFAS-015
      PT=0.D0                                                           YFAS-016
      GT=1.D0-ETA/RAU                                                   YFAS-017
      SF=PS                                                             YFAS-018
      SG=GS                                                             YFAS-019
      SPF=PT                                                            YFAS-020
      SPG=GT                                                            YFAS-021
    1 DENOM=DFLOAT(N+1)*RAU2                                            YFAS-022
      AN=DFLOAT(N+N+1)*ETA/DENOM                                        YFAS-023
      BNTMP=(ETAC-DFLOAT(N*(N+1)))/DENOM                                YFAS-024
      PS1=AN*PS-BNTMP*PT                                                YFAS-025
      GS1=AN*GS-BNTMP*GT-PS1/RAU                                        YFAS-026
      PT1=AN*PT+BNTMP*PS                                                YFAS-027
      GT1=AN*GT+BNTMP*GS-PT1/RAU                                        YFAS-028
      SF=SF+PS1                                                         YFAS-029
      SG=SG+GS1                                                         YFAS-030
      SPF=SPF+PT1                                                       YFAS-031
      SPG=SPG+GT1                                                       YFAS-032
      N=N+1                                                             YFAS-033
      IF (DABS(PS1).GT.TRB) TRB=DABS(PS1)                               YFAS-034
      IF (DABS(PS1).LT.1.D-10*TRB.OR.BNTMP.LT.-1.D0) GO TO 2            YFAS-035
      PS=PS1                                                            YFAS-036
      GS=GS1                                                            YFAS-037
      PT=PT1                                                            YFAS-038
      GT=GT1                                                            YFAS-039
      GO TO 1                                                           YFAS-040
    2 TETAO=RAU-ETA*DLOG(RAU2)+SIGO                                     YFAS-041
      TRA=DSIN(TETAO)                                                   YFAS-042
      TRB=DCOS(TETAO)                                                   YFAS-043
      GO=SF*TRB-SPF*TRA                                                 YFAS-044
      GPO=SG*TRB-SPG*TRA                                                YFAS-045
      FO=SPF*TRB+SF*TRA                                                 YFAS-046
      FPO=SPG*TRB+SG*TRA                                                YFAS-047
      RETURN                                                            YFAS-048
      END                                                               YFAS-049
C 12/01/07                                                      ECIS12  YFIR-000
      SUBROUTINE YFIR(ETA,RO,G0,GP0,SIGMA)                              YFIR-001
C COMPUTATION OF THE COULOMB IRREGULAR FUNCTION FOR L=0.                YFIR-002
C INPUT:     ETA,RO:  COULOMB PARAMETER AND RADIUS.                     YFIR-003
C            SIGMA:   COULOMB PHASE SHIFT FOR L=0.                      YFIR-004
C OUTPUT:    GO,GPO:  REGULAR FUNCTION AND DERIVATIVE.                  YFIR-005
C***********************************************************************YFIR-006
      IMPLICIT REAL*8(A-H,O-Z)                                          YFIR-007
      DATA PI /3.1415926535897932D0/                                    YFIR-008
      IF (ETA.LE.0.D0) GO TO 9                                          YFIR-009
      IF ((RO.LE.(54.D0-ETA)/80.D0).OR.(ETA.LE.22.D0.AND.RO.LE.(30.D0-ETYFIR-010
     1A)/20.D0).OR.(ETA.LE.18.D0.AND.RO.LE.0.075D0*(26.D0-ETA)).OR.(ETA.YFIR-011
     2LE.10.D0.AND.RO.LE..15D0*(18.D0-ETA)).OR.(ETA.LE.3.D0.AND.RO.LE.2.YFIR-012
     325D0+7.35D0*(3.D0-ETA))) GO TO 5                                  YFIR-013
C   TAYLOR SERIES STARTING AT RAU0.                                     YFIR-014
    1 RAU0=1.666666666666667D0*DABS(ETA)+7.5D0                          YFIR-015
      CALL YFAS(ETA,RAU0,F0,FP0,G0,GP0,SIGMA)                           YFIR-016
      X=RAU0-RO                                                         YFIR-017
      X2=X*X                                                            YFIR-018
      X3=X*X2                                                           YFIR-019
      UNR=1.D0/RAU0                                                     YFIR-020
      ETR0=1.D0-2.D0*ETA*UNR                                            YFIR-021
      U0=G0                                                             YFIR-022
      U1=-X*GP0                                                         YFIR-023
      U2=-0.5D0*ETR0*X2*U0                                              YFIR-024
      S=U0+U1+U2                                                        YFIR-025
      V1=U1/X                                                           YFIR-026
      V2=2.D0*U2/X                                                      YFIR-027
      T=V1+V2                                                           YFIR-028
      XN=3.D0                                                           YFIR-029
      DO 3 N=3,10000                                                    YFIR-030
      XN1=XN-1.D0                                                       YFIR-031
      XN1=XN*XN1                                                        YFIR-032
      U3=X*U2*UNR*(1.D0-2.D0/XN)-ETR0*U1*X2/XN1+X3*U0*UNR/XN1           YFIR-033
      S=S+U3                                                            YFIR-034
      V3=XN*U3/X                                                        YFIR-035
      T=T+V3                                                            YFIR-036
      IF (DABS(U3).GT.1.D-11*DABS(S)) GO TO 2                           YFIR-037
      IF (DABS(V3).LE.1.D-11*DABS(T)) GO TO 4                           YFIR-038
    2 U0=U1                                                             YFIR-039
      U1=U2                                                             YFIR-040
      U2=U3                                                             YFIR-041
    3 XN=XN+1.D0                                                        YFIR-042
    4 G0=S                                                              YFIR-043
      GP0=-T                                                            YFIR-044
      RETURN                                                            YFIR-045
C   SERIES ORIGIN.                                                      YFIR-046
    5 RO2=RO*RO                                                         YFIR-047
      ETAP=ETA+ETA                                                      YFIR-048
      PIETA=PI*ETA                                                      YFIR-049
      PIETA2=0.5D0*PIETA                                                YFIR-050
      B=DEXP(PIETA)                                                     YFIR-051
      B=DEXP(PIETA2)*DSQRT((B-1.D0/B)/(2.D0*PIETA))                     YFIR-052
      C1=ETAP*(PSI(ETA)+.6931471805599453D0)                            YFIR-053
      U0=0.D0                                                           YFIR-054
      U1=RO                                                             YFIR-055
      V0=1.D0                                                           YFIR-056
      V1=C1*RO                                                          YFIR-057
      U=U0+U1                                                           YFIR-058
      V=V0+V1                                                           YFIR-059
      UP=1.D0                                                           YFIR-060
      VP=C1                                                             YFIR-061
      XN=2.D0                                                           YFIR-062
      DO 7 N=2,10000                                                    YFIR-063
      XN1=XN*(XN-1.D0)                                                  YFIR-064
      U2=(ETAP*RO*U1-RO2*U0)/XN1                                        YFIR-065
      U=U+U2                                                            YFIR-066
      V2=(ETAP*RO*V1-RO2*V0-ETAP*(XN+XN-1.D0)*U2)/XN1                   YFIR-067
      V=V+V2                                                            YFIR-068
      UP=UP+XN*U2/RO                                                    YFIR-069
      VP=VP+XN*V2/RO                                                    YFIR-070
      IF (DABS(U2).GT.1.D-14*DABS(U)) GO TO 6                           YFIR-071
      IF (DABS(V2).LE.1.D-14*DABS(V)) GO TO 8                           YFIR-072
    6 U0=U1                                                             YFIR-073
      U1=U2                                                             YFIR-074
      V0=V1                                                             YFIR-075
      V1=V2                                                             YFIR-076
    7 XN=XN+1.D0                                                        YFIR-077
    8 GP=V+ETAP*U*DLOG(RO)                                              YFIR-078
      G0=B*GP                                                           YFIR-079
      GP0=B*(VP+ETAP*(UP*DLOG(RO)+U/RO))                                YFIR-080
      RETURN                                                            YFIR-081
    9 IF (RO.LE.0.5D0*ETA+9.D0) GO TO 5                                 YFIR-082
      GO TO 1                                                           YFIR-083
      END                                                               YFIR-084
C 10/05/07                                                      ECIS12  SIGM-000
      FUNCTION SIGM(ETA)                                                SIGM-001
C  COULOMB PHASE SHIFT SIGMA0.                                          SIGM-002
C***********************************************************************SIGM-003
      IMPLICIT REAL*8 (A-H,O-Z)                                         SIGM-004
      DIMENSION C(2,13)                                                 SIGM-005
      DATA C1,C2,C3,C4,C5,C6,C7,C /8.333333333333333D-2,-2.7777777777777SIGM-006
     178D-3,7.936507936507937D-4,-5.952380952380952D-4,8.417508417508417SIGM-007
     2D-4,-1.917526917526918D-3,6.41025641025641D-3,1.D-16,1.4D-15,-5.4DSIGM-008
     3-15,-2.07D-14,5.1D-13,-3.6968D-12,7.7823D-12,1.043427D-10,-1.18127SIGM-009
     446D-9,5.0020075D-9,6.116095D-9,-2.056338417D-7,1.133027232D-6,-1.2SIGM-010
     5504934821D-6,-2.01348547807D-5,1.280502823882D-4,-2.152416741149D-SIGM-011
     64,-1.1651675918591D-3,7.218943246663D-3,-9.621971527877D-3,-4.2197SIGM-012
     77345555443D-2,.1665386113822915D0,-4.20026350340952D-2,-.655878071SIGM-013
     85202538D0,.5772156649015329D0,1.D0/                               SIGM-014
      IF (DABS(ETA).GT.1.D-16) GO TO 1                                  SIGM-015
      SIGM=-C(1,13)*ETA                                                 SIGM-016
      GO TO 5                                                           SIGM-017
    1 E=ETA*ETA                                                         SIGM-018
      IF (E.GT.1.D0) GO TO 3                                            SIGM-019
      X=C(1,1)                                                          SIGM-020
      Y=C(2,1)                                                          SIGM-021
      DO 2 I=2,13                                                       SIGM-022
      X=C(1,I)-E*X                                                      SIGM-023
    2 Y=C(2,I)-E*Y                                                      SIGM-024
      SIGM=-DATAN2(ETA*X,Y)                                             SIGM-025
      GO TO 5                                                           SIGM-026
    3 L=1                                                               SIGM-027
      IF (E.LT.64.D0) L=IDINT(2.D0+DSQRT(64.D0-E))                      SIGM-028
      Z=DFLOAT(L)                                                       SIGM-029
      X=DSQRT(Z*Z+E)                                                    SIGM-030
      Y=DATAN2(ETA,Z)                                                   SIGM-031
      E=1.D0/(Z*Z+E)                                                    SIGM-032
      SIGM=ETA*(DLOG(X)-1.D0)+(Z-.5D0)*Y-(C1*DSIN(Y)+E*(C2*DSIN(3.D0*Y)+SIGM-033
     1E*(C3*DSIN(5.D0*Y)+E*(C4*DSIN(7.D0*Y)+E*(C5*DSIN(9.D0*Y)+E*(C6*DSISIGM-034
     2N(11.D0*Y)+E*C7*DSIN(13.D0*Y)))))))/X                             SIGM-035
      IF (L.EQ.1) GO TO 5                                               SIGM-036
      J=L-1                                                             SIGM-037
      DO 4 I=1,J                                                        SIGM-038
      Z=Z-1.D0                                                          SIGM-039
    4 SIGM=SIGM-DATAN2(ETA,Z)                                           SIGM-040
    5 RETURN                                                            SIGM-041
      END                                                               SIGM-042
C 12/11/05                                                      ECIS12  PSI_-000
      FUNCTION PSI(ETA)                                                 PSI_-001
C  REAL PART OF PSI(1-I*ETA)-PSI(1)-PSI(I)                              PSI_-002
C  WITH PSI(Z) = LOGARITHMIC DERIVATIVE OF THE GAMMA FUNCTION           PSI_-003
C***********************************************************************PSI_-004
      IMPLICIT REAL*8 (A-H,O-Z)                                         PSI_-005
      DIMENSION B(13)                                                   PSI_-006
      DATA C/.5772156649015329D0/,C1/8.333333333333333D-2/,C2/-8.3333333PSI_-007
     133333333D-3/,C3/3.968253968253968D-3/,C4/-4.166666666666667D-3/,C5PSI_-008
     2/7.575757575757576D-3/,C6/-2.109279609279609D-2/,B/7.4507117898354PSI_-009
     328D-9,2.980350351465228D-8,1.192199259653110D-7,4.769329867878064DPSI_-010
     4-7,1.908212716553938D-6,7.637197637899762D-6,3.058823630702049D-5,PSI_-011
     51.227133475784893D-4,4.941886041194665D-4,2.008392826082234D-3,8.3PSI_-012
     649277381922945D-3,3.692775514337036D-2,2.020569031595948D-1/      PSI_-013
      IF (DABS(ETA).GT.1.D-8) GO TO 1                                   PSI_-014
      PSI=C-1.D0                                                        PSI_-015
      GO TO 5                                                           PSI_-016
    1 E=ETA*ETA                                                         PSI_-017
      IF (E.GT..25D0) GO TO 3                                           PSI_-018
      X=B(1)                                                            PSI_-019
      DO 2 I=2,13                                                       PSI_-020
    2 X=B(I)-E*X                                                        PSI_-021
      PSI=C-1.D0/(1.D0+E)+E*X                                           PSI_-022
      GO TO 5                                                           PSI_-023
    3 L=1                                                               PSI_-024
      IF (E.LT.64.D0) L=2+IDINT(DSQRT(64.D0-E))                         PSI_-025
      X=DSQRT(DFLOAT(L*L)+E)                                            PSI_-026
      Y=DATAN(ETA/DFLOAT(L))                                            PSI_-027
      E=1.D0/(DFLOAT(L*L)+E)                                            PSI_-028
      PSI=DLOG(X)-.5D0*DFLOAT(L)*E-E*(C1*DCOS(2.D0*Y)+E*(C2*DCOS(4.D0*Y)PSI_-029
     1+E*(C3*DCOS(6.D0*Y)+E*(C4*DCOS(8.D0*Y)+E*(C5*DCOS(10.D0*Y)+E*(C6*DPSI_-030
     2COS(12.D0*Y)+E*C1*DCOS(14.D0*Y)))))))+C+C-1.D0                    PSI_-031
      IF (L.EQ.1) GO TO 5                                               PSI_-032
      J=L-1                                                             PSI_-033
      E=ETA*ETA                                                         PSI_-034
      DO 4 I=1,J                                                        PSI_-035
    4 PSI=PSI-1.D0/(DFLOAT(I)+E/DFLOAT(I))                              PSI_-036
    5 RETURN                                                            PSI_-037
      END                                                               PSI_-038
C 13/06/07                                                      ECIS12  CORI-000
      SUBROUTINE CORI(EI,EF,SI,SF,T,SSI,SSF,FGI,FGF,Z,LM1,LM2,LM3,LM,W) CORI-001
C    COMPUTATION OF THE INTEGRALS FROM RS TO INFINITY OF PRODUCTS OF    CORI-002
C REGULAR OR IRREGULAR COULOMB FUNCTIONS OF SAME L-VALUE DIVIDED BY R**2CORI-003
C FOR L=0 TO L=LM-1 AND OF REGULAR FUNCTIONS OF SAME L DIVIDED BY R**2  CORI-004
C L=0 TO L=LM2-1.CALLS CORZ IF THERE IS NO CHARGE.                      CORI-005
C INPUT:     EI,EF:   COULOMB PARAMETERS.                               CORI-006
C            SI,SF:   WAVE NUMBERS MULTIPLIED BY MATCHING RADIUS.       CORI-007
C            SSI,SSF: COULOMB PHASE-SHIFTS FOR L=0.                     CORI-008
C            FGI,FGF: REGULAR AND IRREGULAR COULOMB FUNCTIONS.          CORI-009
C            LM1:     MAXIMUM NUMBER OF INTEGRALS FROM RS TO INF.       CORI-010
C            LM2:     NUMBER OF INTEGRALS FROM 0 TO INFINITY            CORI-011
C            LM3:     DIMENSION OF WORKING AREA.                        CORI-012
C            LM:      ACTUAL NUMBER OF INTEGRALS FROM RS TO INF.        CORI-013
C OUTPUT:    T:       INTEGRALS FROM 0 TO INFINITY FOR PRODUCTS OF      CORI-014
C                           REGULAR FUNCTIONS.                          CORI-015
C            W:       INTEGRALS FROM RS TO INFINITY.                    CORI-016
C WORKING AREA:                                                         CORI-017
C            Z:       FOR THE COMPUTATION OF HYPERGEOMETRIC F3.         CORI-018
C                                                                       CORI-019
C THE SUBROUTINES CORI, CORO, CORZ AND CORA FOR COULOMB CORRECTIONS     CORI-020
C ARE IDENTICAL IN THE CODES ECIS AND DWBA.                             CORI-021
C THE PRESENT VERSION IS OF FEBRUARY 2006. FOR DWBA, THE NO-CHARGE      CORI-022
C PART AND ODD INTEGRALS COULD BE SUPPRESSED.                           CORI-023
C***********************************************************************CORI-024
      IMPLICIT REAL*8 (A-H,O-Z)                                         CORI-025
      LOGICAL LL(4)                                                     CORI-026
      DIMENSION FGI(LM1,*),FGF(LM1,*),Z(4,*),W(LM1,*),X1(4),X2(4),X3(4),CORI-027
     1X4(4),T(*),Y(4,4),AZTMP(2),CC(4,4)                                CORI-028
      COMMON /INOUT/ MR,MW,MS                                           CORI-029
      DATA PI /3.1415926535897932D0/                                    CORI-030
      IF ((EI.EQ.0.D0).AND.(EF.EQ.0.D0)) GO TO 38                       CORI-031
C COMPUTATION OF SOME CONSTANTS.                                        CORI-032
      IF (SI.GT.2.2D0*SF) GO TO 39                                      CORI-033
      RS=DSQRT(SI*SF)                                                   CORI-034
      FS=DSQRT(SF/SI)                                                   CORI-035
      FI=EI**2                                                          CORI-036
      FF=EF**2                                                          CORI-037
      EIF=EI*EF                                                         CORI-038
      EX=EF-EI                                                          CORI-039
      SIF=SI/SF+SF/SI                                                   CORI-040
      CX=FI*SI**2+FF*SF**2                                              CORI-041
      DX=FI*SI**2-FF*SF**2                                              CORI-042
      IF (DABS(DX).GT.1.D-10) GO TO 1                                   CORI-043
      DT=1.D0                                                           CORI-044
      DX=0.D0                                                           CORI-045
      DY=EIF                                                            CORI-046
      GO TO 2                                                           CORI-047
    1 DT=SI**2-SF**2                                                    CORI-048
      DY=(FI*SI**4-FF*SF**4)/(SI*SF)                                    CORI-049
      IF (DABS(DT).LT.1.D-10) GO TO 2                                   CORI-050
      DX=DX/DT                                                          CORI-051
      DY=DY/DT                                                          CORI-052
      DT=1.D0                                                           CORI-053
    2 RM=DMAX1((5.D0*DABS(EI)+22.5D0)*FS,(5.D0*DABS(EF)+22.5D0)/FS,.18D0CORI-054
     1*EIF)/3.D0                                                        CORI-055
      IF (RM.LT.RS) RM=RS                                               CORI-056
C COMPUTATION OF INTEGRALS FROM RS TO INFINITY FOR L=0 AND L=1.         CORI-057
      CALL COR0(EI,EF,SSI,SSF,ZR,ZI,Z,LM3,RM,RS,FS,FI,FF,EX,CC)         CORI-058
C COMPUTATION OF INTEGRALS FROM 0 TO INFINITY FOR L=0 AND L=1.          CORI-059
      IF (EI.NE.EF.OR.SI.NE.SF) GO TO 4                                 CORI-060
C WHEN EI=EF=E   I(L,L,2)=(PI-PI*COTH(PI*E)-1/E+SUM ON N FROM 0 TO L OF CORI-061
C                2*E/(N**2+E**2))/2/(2*L+1).                            CORI-062
      A2=PI*.5D0                                                        CORI-063
      B2=DEXP(-2.D0*PI*EI)                                              CORI-064
      IF (EI.NE.0.D0) A2=A2-.5D0*PI*(B2+1.D0)/(1.D0-B2)+.5D0/EI         CORI-065
      B3=0.D0                                                           CORI-066
      DO 3 I=1,LM2                                                      CORI-067
      B2=B3                                                             CORI-068
      B3=B3+1.D0                                                        CORI-069
      T(I)=A2/(B2+B3)                                                   CORI-070
    3 A2=A2+EI/(B3**2+FI)                                               CORI-071
      LL(1)=.TRUE.                                                      CORI-072
      LL(2)=.TRUE.                                                      CORI-073
      GO TO 13                                                          CORI-074
C COMPUTATION OF I(0,0,1) AND I(1,1,1)                                  CORI-075
C  I(L,L,1) = 2*(SI*SF)**(1/2)/(SI+SF)**2 * EXP( PI*SIGN(SF-SI)*EX/2) * CORI-076
C REAL PART OF (|SF-SI|/(SF+SI))**(I*EX)*GAMMA(-I*EX)*EXP(I*(XEF-XEI))* CORI-077
C   2F1(L+1-I*EI,L+1+I*EF;1+I*EF-I*EI;((SF-SI)/(SF+SI))**2)             CORI-078
C  WHERE EX=EF-EI.                                                      CORI-079
    4 A2=EX**2                                                          CORI-080
      B2=((SI-SF)/(SI+SF))**2                                           CORI-081
      A3=2.D0*DEXP(ZR-PI*.5D0*EX)/(SI+SF)**2*RS                         CORI-082
      IF (SF.GT.SI) A3=A3*DEXP(PI*EX)                                   CORI-083
      A4=ZI+SSF-SSI+.5D0*DLOG(B2)*EX                                    CORI-084
      A5=A3*DCOS(A4)                                                    CORI-085
      A6=A3*DSIN(A4)                                                    CORI-086
      A3=A5                                                             CORI-087
      A4=A6                                                             CORI-088
      A7=0.D0                                                           CORI-089
      DO 7 L=1,2                                                        CORI-090
      AZTMP(L)=A3                                                       CORI-091
      A8=0.D0                                                           CORI-092
      DO 5 N=1,500                                                      CORI-093
      A8=A8+1.D0                                                        CORI-094
      B3=(A7+A8)**2+EIF                                                 CORI-095
      B4=(A7+A8)*EX                                                     CORI-096
      B7=B2/(A8*(A8**2+A2))                                             CORI-097
      B5=(B3*A8+B4*EX)*B7                                               CORI-098
      B6=(A8*B4-EX*B3)*B7                                               CORI-099
      A9=A3*B5-A4*B6                                                    CORI-100
      A4=A3*B6+A4*B5                                                    CORI-101
      A3=A9                                                             CORI-102
      AZTMP(L)=AZTMP(L)+A3                                              CORI-103
      IF (DABS(A3)+DABS(A4).LT.DABS(AZTMP(L))*1.D-16) GO TO 6           CORI-104
    5 CONTINUE                                                          CORI-105
      LI=L-1                                                            CORI-106
      WRITE (MW,1000) LI,LI,EI,EF,AZTMP(L),A3,A4                        CORI-107
    6 B3=1.D0+EIF                                                       CORI-108
      B5=(1.D0-B2)/DSQRT(B3*B3+EX*EX)                                   CORI-109
      A7=1.D0                                                           CORI-110
      A3=B5*(A5*B3-A6*EX)                                               CORI-111
    7 A4=B5*(A6*B3+A5*EX)                                               CORI-112
C COMPUTATION OF I(0,0,2) AND I(1,1,2) . ONLY THE FIRST IS NEEDED       CORI-113
C   FOR BACKWARD RECURRENCE:                                            CORI-114
C I(L,L,2) = PI/(2*SH(PI*EX)*( (Y/SI-1/(Y*SF))/(2*L+1)+((SI-SF)/(SF*SI))CORI-115
C  *EXP(-PI*EX/2) * REAL PART OF EXP(I*(XEI-XEF))*((SI-SF)/2)**(-I*EX)  CORI-116
C  *SF**(I*EF)*SI**(-I*EI)*F3(-L+I*EI,-L-I*EF,L+1+I*EI,L+1-I*EF,2-I*EX; CORI-117
C  (SI-SF)/(2*SI),(SF-SI)/(2*SF))                                       CORI-118
C   WHERE  Y=EXP(PI*EX/2)*(SI/SF)**L*|GAMMA(L+1+I*EF)/GAMMA(L+1+I*EI)|. CORI-119
      IF (EI.GT.EF) GO TO 8                                             CORI-120
      EEF=EF                                                            CORI-121
      EEI=EI                                                            CORI-122
      SXF=SF                                                            CORI-123
      SXI=SI                                                            CORI-124
      SSS=SSI-SSF-ZI                                                    CORI-125
      GO TO 9                                                           CORI-126
    8 EEF=EI                                                            CORI-127
      EEI=EF                                                            CORI-128
      SXF=SI                                                            CORI-129
      SXI=SF                                                            CORI-130
      SSS=SSF-SSI+ZI                                                    CORI-131
    9 EEX=EEF-EEI                                                       CORI-132
      SFI=SXI-SXF                                                       CORI-133
      A2=EEX/(2.D0*EEF)                                                 CORI-134
      A3=-A2*SFI/(2.D0*SXF)                                             CORI-135
      A4=A2*SFI/(2.D0*SXI)                                              CORI-136
      LL(1)=DFLOAT(LM2)*DABS(EX).GT.3.D0*DABS(EI+EF)                    CORI-137
      LL(2)=.NOT.LL(1)                                                  CORI-138
      B3=DEXP(-ZR)/EEX/DSQRT(1.D0+EX**2)                                CORI-139
      IF (SFI.LT.0.D0) B3=B3*DEXP(EEX*PI)                               CORI-140
      B4=SSS+DATAN(EEX)-.5D0*PI+EEF*DLOG(SXF)-EEI*DLOG(SXI)-EEX*DLOG(.5DCORI-141
     10*DABS(SFI))                                                      CORI-142
      A5=B3*DCOS(B4)                                                    CORI-143
      A6=B3*DSIN(B4)                                                    CORI-144
      B5=A5                                                             CORI-145
      B6=A6                                                             CORI-146
      B2I=-2.D0*PI+4.D0*PI**2*EEI                                       CORI-147
      B2F=-2.D0*PI+4.D0*PI**2*EEF                                       CORI-148
      IF (DABS(EEI).GT.1.D-8) B2I=(DEXP(-2.D0*PI*EEI)-1.D0)/EEI         CORI-149
      IF (DABS(EEF).GT.1.D-8) B2F=(DEXP(-2.D0*PI*EEF)-1.D0)/EEF         CORI-150
      B2=DSQRT(B2I/B2F)                                                 CORI-151
      A7=DEXP(-.5D0*PI*EEX)                                             CORI-152
      A8=PI*A7**2/(1.D0-A7**4)*RS                                       CORI-153
      A7=-A7*SFI/(SF*SI)                                                CORI-154
      Z(1,1)=1.D0                                                       CORI-155
      Z(2,1)=0.D0                                                       CORI-156
      Z(3,1)=1.D0                                                       CORI-157
      Z(4,1)=0.D0                                                       CORI-158
      DO 12 L=1,2                                                       CORI-159
      LI=L-1                                                            CORI-160
      T(L)=B5                                                           CORI-161
      N=0                                                               CORI-162
   10 N=N+1                                                             CORI-163
      IF (2*N.GT.LM3) CALL MEMO('CORI',LM3,2*N)                         CORI-164
      B4=DFLOAT(N+1)**2+EX**2                                           CORI-165
      B9=(B5*DFLOAT(N+1)-EEX*B6)/(B4*A2)                                CORI-166
      B6=(B5*EEX+B6*DFLOAT(N+1))/(B4*A2)                                CORI-167
      B5=B9                                                             CORI-168
      B3=DFLOAT((L+N-1)*(N-L))-EEI**2                                   CORI-169
      B4=EEI*DFLOAT(2*N-1)                                              CORI-170
      Z(1,N+1)=(Z(1,N)*B3-Z(2,N)*B4)*A4/DFLOAT(N)                       CORI-171
      Z(2,N+1)=(Z(1,N)*B4+Z(2,N)*B3)*A4/DFLOAT(N)                       CORI-172
      B3=DFLOAT((L+N-1)*(N-L))-EEF**2                                   CORI-173
      B4=-EEF*DFLOAT(2*N-1)                                             CORI-174
      Z(3,N+1)=(Z(3,N)*B3-Z(4,N)*B4)*A3/DFLOAT(N)                       CORI-175
      Z(4,N+1)=(Z(3,N)*B4+Z(4,N)*B3)*A3/DFLOAT(N)                       CORI-176
      B7=Z(1,N+1)                                                       CORI-177
      B8=Z(2,N+1)                                                       CORI-178
      DO 11 J=1,N                                                       CORI-179
      M=N+2-J                                                           CORI-180
      B7=B7+Z(1,J)*Z(3,M)-Z(2,J)*Z(4,M)                                 CORI-181
   11 B8=B8+Z(2,J)*Z(3,M)+Z(1,J)*Z(4,M)                                 CORI-182
      IF (DABS(B7)+DABS(B8).GT.1.D30) GO TO 40                          CORI-183
      B7=B7*B5-B8*B6                                                    CORI-184
      T(L)=T(L)+B7                                                      CORI-185
      IF (DABS(B7).GT.DABS(T(L))*1.D-16) GO TO 10                       CORI-186
      T(L)=A8*(A7*T(L)+(B2/SXI-1.D0/(B2*SXF))/DFLOAT(2*L-1))            CORI-187
      IF (LL(1)) GO TO 13                                               CORI-188
      B2=B2*SXF/SXI*DSQRT((1.D0+EEF**2)/(1.D0+EEI**2))                  CORI-189
      B4=DSQRT((1.D0+EEI**2)*(1.D0+EEF**2))                             CORI-190
      B3=(1.D0+EIF)/B4                                                  CORI-191
      B4=-EEX/B4                                                        CORI-192
      B5=B3*A5-B4*A6                                                    CORI-193
   12 B6=B3*A6+B4*A5                                                    CORI-194
C COMP. OF THE INTEGRALS FROM 0 TO INFINITY.                            CORI-195
C UPWARDS RECURRENCES FOR THE OTHER INTEGRALS:  STARTING VALUES:        CORI-196
   13 DO 14 J=1,4                                                       CORI-197
      W(1,J)=CC(J,3)                                                    CORI-198
      W(2,J)=CC(J,4)                                                    CORI-199
      X2(J)=CC(J,1)/RS                                                  CORI-200
   14 X3(J)=CC(J,2)/RS                                                  CORI-201
      RM=RS**2                                                          CORI-202
      IM=1                                                              CORI-203
      LX=LM                                                             CORI-204
      IF (.NOT.LL(1)) LX=MAX0(LX,LM2)                                   CORI-205
      LL(3)=LL(1)                                                       CORI-206
      I=2                                                               CORI-207
      A1=DSQRT(1.D0+FI)                                                 CORI-208
      B1=DSQRT(1.D0+FF)                                                 CORI-209
      IF (LL(1)) GO TO 15                                               CORI-210
      C4=AZTMP(1)                                                       CORI-211
      C5=AZTMP(2)                                                       CORI-212
   15 I=I+1                                                             CORI-213
      A2=A1                                                             CORI-214
      B2=B1                                                             CORI-215
      A=DFLOAT(I-1)                                                     CORI-216
      A1=DSQRT(A**2+FI)                                                 CORI-217
      B1=DSQRT(A**2+FF)                                                 CORI-218
      LL(4)=I.GT.LM                                                     CORI-219
   16 A9=(A-1.D0)**2*DT+DX                                              CORI-220
      A3=(2.D0*A-3.D0)*(A**2*DT+DX)*A2*B2                               CORI-221
      A4=-(2.D0*A-1.D0)*(DX*CX/RM+DY*((A-1.D0)**2+A**2)+DT*(A*A-A)**2*SICORI-222
     1F)                                                                CORI-223
      A5=(2.D0*A+1.D0)*A9*A1*B1                                         CORI-224
      C1=DT*(2.D0*A-1.D0)*(EI*SI+EF*SF)*A2*B2/(A-1.D0)                  CORI-225
      C2=DT*(A-.5D0)*(B2**2*((A-1.D0)*EF*SF-(A+1.D0)*EI*SI)*SF/SI+A2**2*CORI-226
     1((A-1.D0)*EI*SI-(A+1.D0)*EF*SF)*SI/SF)/(A-1.D0)                   CORI-227
      A6=A*A2*B2                                                        CORI-228
      A7=-(2.D0*A-1.D0)*(EIF+(A-1.D0)*A*SIF*.5D0)                       CORI-229
      A8=(A-1.D0)*A1*B1                                                 CORI-230
      IF (LL(4)) GO TO 17                                               CORI-231
      B6=(A-.5D0)/(RM*RS*(A-1.D0)**2)                                   CORI-232
      B3=-2.D0*RM*DX*B6*A2*B2                                           CORI-233
      B4=B6*A9*SF*(2.D0*(A*A-A)*A+(A+1.D0)*EI*SI-(A-1.D0)*EF*SF)*B2     CORI-234
      B5=B6*A9*SI*(2.D0*(A*A-A)*A+(A+1.D0)*EF*SF-(A-1.D0)*EI*SI)*A2     CORI-235
      B6=-B6*(A9*(2.D0*(A*A-A)**2*(2.D0*A-1.D0)+(EI*SI+EF*SF)*(A-1.D0)*(CORI-236
     1A+1.D0)*(2.D0*A-1.D0)+2.D0*EIF*RM*A)-(A-1.D0)*(CX*DX+(A-1.D0)*((A+CORI-237
     21.D0)*CX*DT-2.D0*RM*DY)))                                         CORI-238
      B9=(A-.5D0)*A/RS                                                  CORI-239
      B7=B9*B2/SI                                                       CORI-240
      B8=B9*A2/SF                                                       CORI-241
      B9=B9*(-(2.D0*A-1.D0)*(A-1.D0)-(EI*SI+EF*SF))/RM                  CORI-242
   17 IF (IM.NE.1) GO TO 26                                             CORI-243
      IF (LL(3)) GO TO 18                                               CORI-244
      T(I)=-(A3*T(I-2)+A4*T(I-1)+C1*C4+C2*C5)/A5                        CORI-245
      C3=C4                                                             CORI-246
      C4=C5                                                             CORI-247
      C5=-(A6*C3+A7*C4)/A8                                              CORI-248
   18 IF (LL(4)) GO TO 23                                               CORI-249
      DO 20 J=1,4                                                       CORI-250
      J1=MOD(J+1,2)+I-2                                                 CORI-251
      J2=(J+1)/2+I-3                                                    CORI-252
      DO 19 K=1,4                                                       CORI-253
      K1=MOD(K+1,2)*2+1                                                 CORI-254
      K2=2*((K+1)/2)-1                                                  CORI-255
   19 Y(K,J)=FGI(J1,K1)*FGF(J2,K2)                                      CORI-256
   20 CONTINUE                                                          CORI-257
C RECURRENCE FOR (0,2;L).                                               CORI-258
      DO 21 J=1,4                                                       CORI-259
      X1(J)=X2(J)                                                       CORI-260
      X2(J)=X3(J)                                                       CORI-261
   21 W(I,J)=-(B3*Y(J,1)+B4*Y(J,2)+B5*Y(J,3)+B6*Y(J,4)+A3*W(I-2,J)+A4*W(CORI-262
     1I-1,J)+C1*X1(J)+C2*X2(J))/A5                                      CORI-263
      DO 22 J=1,4                                                       CORI-264
   22 X3(J)=-(B7*Y(J,2)+B8*Y(J,3)+B9*Y(J,4)+A6*X1(J)+A7*X2(J))/A8       CORI-265
   23 IF (I.LT.LX) GO TO 15                                             CORI-266
      LN=MAX0(LM,IDINT(RS))+50                                          CORI-267
      LX=LN                                                             CORI-268
      IF (.NOT.LL(2)) LX=MAX0(LX,LM2+6*MIN0(IDINT((SI+SF)/DABS(SI-SF)),5CORI-269
     100))                                                              CORI-270
      LL(3)=LL(2)                                                       CORI-271
      IM=2                                                              CORI-272
      X4(1)=1.D0                                                        CORI-273
      X4(2)=0.D0                                                        CORI-274
      X4(3)=0.D0                                                        CORI-275
      X4(4)=0.D0                                                        CORI-276
      A1=LX-1                                                           CORI-277
      A2=DSQRT(A1**2+FI)                                                CORI-278
      B2=DSQRT(A1**2+FF)                                                CORI-279
      DO 24 J=1,4                                                       CORI-280
      X2(J)=0.D0                                                        CORI-281
   24 X3(J)=0.D0                                                        CORI-282
      X3(1)=1.D-20                                                      CORI-283
      X3(2)=1.D-20                                                      CORI-284
   25 LX=LX-1                                                           CORI-285
      A=LX                                                              CORI-286
      A1=A2                                                             CORI-287
      B1=B2                                                             CORI-288
      A3=DFLOAT(LX-1)                                                   CORI-289
      LL(4)=LX.GT.LN                                                    CORI-290
      A2=DSQRT(A3**2+FI)                                                CORI-291
      B2=DSQRT(A3**2+FF)                                                CORI-292
      GO TO 16                                                          CORI-293
   26 IF (LL(3)) GO TO 27                                               CORI-294
      X4(1)=-A6/(A7+A8*X4(1))                                           CORI-295
      X4(3)=X4(1)*X4(2)                                                 CORI-296
      X4(2)=-(A4*X4(3)+A5*X4(4)*X4(1)+C1+C2*X4(1))/A3                   CORI-297
      X4(4)=X4(3)                                                       CORI-298
      IF (LX.LE.LM2) T(LX)=X4(3)/X4(2)                                  CORI-299
   27 IF (LL(4)) GO TO 33                                               CORI-300
C DOWNWARD RECURRENCE FOR F(EI) AND F(EF).                              CORI-301
      DO 28 J=1,4                                                       CORI-302
      X1(J)=X2(J)                                                       CORI-303
   28 X2(J)=X3(J)                                                       CORI-304
      X3(1)=((2.D0*A-1.D0)*(EI+(A-1.D0)*A/SI)*X2(1)-(A-1.D0)*A1*X1(1))/(CORI-305
     1A*A2)                                                             CORI-306
      X3(2)=((2.D0*A-1.D0)*(EF+(A-1.D0)*A/SF)*X2(2)-(A-1.D0)*B1*X1(2))/(CORI-307
     1A*B2)                                                             CORI-308
C DOWNWARDS RECURRENCE FOR (1,2;L).                                     CORI-309
      X3(4)=-(A7*X2(4)+A8*X1(4)+B7*X2(1)*X3(2)+B8*X3(1)*X2(2)+B9*X2(1)*XCORI-310
     12(2))/A6                                                          CORI-311
C DOWNWARD RECURRENCE FOR (0,2;L).                                      CORI-312
      X3(3)=-(A4*X2(3)+A5*X1(3)+C1*X3(4)+C2*X2(4)+B3*X3(1)*X3(2)+B4*X2(1CORI-313
     1)*X3(2)+B5*X3(1)*X2(2)+B6*X2(1)*X2(2))/A3                         CORI-314
      I=LX-1                                                            CORI-315
      IF (I.LE.LM) W(I,1)=X3(3)                                         CORI-316
      IF (DABS(X3(1)).LT.1.D10) GO TO 29                                CORI-317
      X3(1)=X3(1)*1.D-20                                                CORI-318
      X2(1)=X2(1)*1.D-20                                                CORI-319
      GO TO 30                                                          CORI-320
   29 IF (DABS(X3(2)).LT.1.D10) GO TO 33                                CORI-321
      X2(2)=X2(2)*1.D-20                                                CORI-322
      X3(2)=X3(2)*1.D-20                                                CORI-323
   30 DO 31 J=3,4                                                       CORI-324
      X3(J)=X3(J)*1.D-20                                                CORI-325
   31 X2(J)=X2(J)*1.D-20                                                CORI-326
      IF (I.GT.LM) GO TO 33                                             CORI-327
      DO 32 J=I,LM                                                      CORI-328
   32 W(J,1)=W(J,1)*1.D-20                                              CORI-329
   33 IF (LX.GT.2) GO TO 25                                             CORI-330
      IF (LL(2)) GO TO 36                                               CORI-331
C COMPUTATION OF THE MIXTURE OF THE DECREASING SOLUTION OF HOMOGENEOUS  CORI-332
C EQUATION  (S2/S1)**L * |GAMMA(L+1+I*E2)/GAMMA(L+1+I*E1)|/(2*L+1)      CORI-333
C WHERE S2 IS THE SMALLER OF THE TWO VALUES SI AND SF.                  CORI-334
      A1=X4(2)*AZTMP(1)                                                 CORI-335
      A2=T(1)-A1                                                        CORI-336
      A3=0.D0                                                           CORI-337
      DO 35 I=2,LM2                                                     CORI-338
      A3=A3+1.D0                                                        CORI-339
      A1=T(I)*A1                                                        CORI-340
      A4=SF*DSQRT((A3**2+FF)/(A3**2+FI))/SI                             CORI-341
      IF (SI.GT.SF) GO TO 34                                            CORI-342
      A2=A2/A4                                                          CORI-343
      GO TO 35                                                          CORI-344
   34 A2=A2*A4                                                          CORI-345
   35 T(I)=A1+A2/(2.D0*A3+1.D0)                                         CORI-346
C THE VALUES OBTAINED ARE UNNORMALISED INTEGRALS FROM RS TO 0.          CORI-347
C NORMALISATION AND TRANSFORMATION TO INTEGRAL FROM RS TO INFINITY.     CORI-348
   36 A1=FGI(1,1)*FGF(1,1)/(X3(1)*X3(2))                                CORI-349
      DO 37 J=1,LM                                                      CORI-350
   37 W(J,1)=A1*W(J,1)+T(J)                                             CORI-351
      IF ((SI.NE.SF).OR.(DABS(CC(1,3)-W(1,1))/(DABS(CC(1,3))+DABS(W(1,1)CORI-352
     1)).GT.1.D-4).OR.(DABS(CC(1,4)-W(2,1))/(DABS(CC(1,4))+DABS(W(2,1)))CORI-353
     2.GT.1.D-4)) WRITE (MW,1001) CC(1,3),W(1,1),CC(1,4),W(2,1)         CORI-354
      RETURN                                                            CORI-355
   38 CALL CORZ(SI,SF,T,FGI,FGF,LM1,LM2,LM,W)                           CORI-356
      RETURN                                                            CORI-357
   39 WRITE (MW,1002) SF,SI                                             CORI-358
      GO TO 41                                                          CORI-359
   40 WRITE (MW,1003) N,LI,LI,EI,EF,T(L),B5,B6                          CORI-360
   41 WRITE (MW,1004)                                                   CORI-361
      STOP                                                              CORI-362
 1000 FORMAT (' NO CONVERGENCE WITH 500 TERMS FOR I(',I1,',',I1,') WITH CORI-363
     1EI =',F15.6,31X,'AND EF =',F15.6,5X,'IN CORI'/5X,'VALUE =',D15.8,5CORI-364
     2X,'LAST TERM =',2D16.8/' ... CONTINUE ...')                       CORI-365
 1001 FORMAT (' INTEGRALS WITH REGULAR FUNCTIONS: (L+1)       DIRECT:   CORI-366
     1   BACKWARDS RECURRENCE:'/37X,'1',2D20.10/37X,'2',2D20.10)        CORI-367
 1002 FORMAT (' TOO LARGE RATIO SF/SI =',F15.6,1H/,F15.6,5X,'IN CORI.') CORI-368
 1003 FORMAT (' THE',I4,' TERM IS TOO LARGE IN THE COMPUTATION OF I(',I1CORI-369
     1,',',I1,',2)    WITH EI =',F15.6,5X,'AND EF =',F15.6,5X,'IN CORH:'CORI-370
     2/5X,'VALUE =',D15.8,5X,'LAST TERM =',2D16.8)                      CORI-371
 1004 FORMAT (//' IN CORI  ...  STOP  ...')                             CORI-372
      END                                                               CORI-373
C 02/06/07                                                      ECIS12  COR0-000
      SUBROUTINE COR0(EI,EF,SSI,SSF,ZR,ZI,Z,LM3,RM,RS,FS,FI,FF,EX,CC)   COR0-001
C    COMPUTATION OF THE INTEGRALS FROM RS TO INFINITY OF PRODUCTS OF    COR0-002
C REGULAR OR IRREGULAR COULOMB FUNCTIONS OF L=0 AND L=1 DIVIDED BY R**2 COR0-003
C INPUT:     EI,EF:   COULOMB PARAMETERS.                               COR0-004
C            SSI,SSF: COULOMB PHASE-SHIFTS FOR L=0.                     COR0-005
C            LM3:     DIMENSION OF WORKING AREA.                        COR0-006
C            RM:      ACTUAL MATCHING RADIUS FOR INTEGRALS.             COR0-007
C            RS:      NEEDED MATCHING RADIUS FOR INTEGRALS.             COR0-008
C            FS:      SQUARE ROOT OF RATIO OF WAVE NUMBERS.             COR0-009
C            FI,FF:   SQUARES OF COULOMB PARAMETERS.                    COR0-010
C            EX:      DIFFERENCE OF COULOMB PARAMETERS.                 COR0-011
C OUTPUT:    CC:      INTEGRALS FROM RS TO INFINITY.                    COR0-012
C            ZR,ZI:   REAL, IMAGINARY PART OF LOG(GAMMA(0.,EI-EF))      COR0-013
C WORKING AREA:                                                         COR0-014
C            Z:       FOR THE COMPUTATION OF F AND G.                   COR0-015
C***********************************************************************COR0-016
      IMPLICIT REAL*8 (A-H,O-Z)                                         COR0-017
      DIMENSION Z(4,*),X1(4),X2(4),X3(4),X4(4),X5(4),C(2,2,2),Y(4,4),IE(COR0-018
     12,2),ABSC(20),P(20),B(7),CC(4,4),YYTMP(8,2)                       COR0-019
      EQUIVALENCE (Y,YYTMP)                                             COR0-020
      DATA PI /3.1415926535897932D0/                                    COR0-021
      DATA B /.8333333333333333D-01,-.2777777777777778D-2,.7936507936507COR0-022
     19365D-3,-.5952380952380952D-3,.84175084175D-3,-.19175269D-2,.641D-COR0-023
     202/                                                               COR0-024
      DATA ABSC( 1),P( 1) / 0.88114514472040D-03, 0.22606385492666D-02/ COR0-025
      DATA ABSC( 2),P( 2) / 0.46368806502715D-02, 0.52491422655764D-02/ COR0-026
      DATA ABSC( 3),P( 3) / 0.11370025008113D-01, 0.82105291909539D-02/ COR0-027
      DATA ABSC( 4),P( 4) / 0.21041590393104D-01, 0.11122924597084D-01/ COR0-028
      DATA ABSC( 5),P( 5) / 0.33593595860662D-01, 0.13968503490012D-01/ COR0-029
      DATA ABSC( 6),P( 6) / 0.48950596515563D-01, 0.16730097641274D-01/ COR0-030
      DATA ABSC( 7),P( 7) / 0.67020248393870D-01, 0.19391083987236D-01/ COR0-031
      DATA ABSC( 8),P( 8) / 0.87693884583344D-01, 0.21935454092836D-01/ COR0-032
      DATA ABSC( 9),P( 9) / 0.11084717428674D+00, 0.24347903817536D-01/ COR0-033
      DATA ABSC(10),P(10) / 0.13634087240504D+00, 0.26613923491968D-01/ COR0-034
      DATA ABSC(11),P(11) / 0.16402165769291D+00, 0.28719884549696D-01/ COR0-035
      DATA ABSC(12),P(12) / 0.19372305516601D+00, 0.30653121246465D-01/ COR0-036
      DATA ABSC(13),P(13) / 0.22526643745244D+00, 0.32402006728300D-01/ COR0-037
      DATA ABSC(14),P(14) / 0.25846209915691D+00, 0.33956022907617D-01/ COR0-038
      DATA ABSC(15),P(15) / 0.29311039781420D+00, 0.35305823695643D-01/ COR0-039
      DATA ABSC(16),P(16) / 0.32900295458712D+00, 0.36443291197902D-01/ COR0-040
      DATA ABSC(17),P(17) / 0.36592390749637D+00, 0.37361584528984D-01/ COR0-041
      DATA ABSC(18),P(18) / 0.40365120964931D+00, 0.38055180950313D-01/ COR0-042
      DATA ABSC(19),P(19) / 0.44195796466237D+00, 0.38519909082124D-01/ COR0-043
      DATA ABSC(20),P(20) / 0.48061379124697D+00, 0.38752973989212D-01/ COR0-044
C COMPUTATION OF THE INTEGRALS FROM RM TO INFINITY FOR L=0,1 BY         COR0-045
C RAWITSCHER'S METHOD. (COMP. PHYSICS COMM., VOL.11,183,1976)           COR0-046
C EXPANSIONS OF COULOMB WAVE FUNCTIONS ARE Z(N,2*M-1)+I*Z(N,2*M)=G+I*F  COR0-047
C   N=1: L=0,E=EI     N=2: L=0,E=EF     N=3: L=1,E=EI     N=4: L=1,E=EF COR0-048
      A1=RM/FS                                                          COR0-049
      B1=RM*FS                                                          COR0-050
      X1(1)=A1-EI*DLOG(2.D0*A1)+SSI                                     COR0-051
      X1(3)=B1-EF*DLOG(2.D0*B1)+SSF                                     COR0-052
      X1(2)=X1(1)+DATAN(EI)-.5D0*PI                                     COR0-053
      X1(4)=X1(3)+DATAN(EF)-.5D0*PI                                     COR0-054
C FIRST TERM OF ASYMPTOTIC EXPANSION OF H(+/-) FOR L=0,1.               COR0-055
      DO 1 I=1,4                                                        COR0-056
      X5(I)=0.D0                                                        COR0-057
      Z(I,1)=DCOS(X1(I))                                                COR0-058
    1 Z(I,2)=DSIN(X1(I))                                                COR0-059
      X1(1)=-A1-B1                                                      COR0-060
      X2(1)=EI+EF                                                       COR0-061
      X1(2)=B1-A1                                                       COR0-062
      X2(2)=-EX                                                         COR0-063
      IF (DABS(X2(2)).LT.1.D-8) X2(2)=0.D0                              COR0-064
      IF (X2(2).EQ.0.D0) GO TO 4                                        COR0-065
C COMPUTATION OF LOG(GAMMA(0.,EI-EF)).                                  COR0-066
      B2=-DATAN(EX/11.D0)                                               COR0-067
      B3=121.D0+EX**2                                                   COR0-068
      A2=.5D0*DLOG(B3)                                                  COR0-069
      ZR=.91893853320467274D0+10.5D0*A2+EX*B2-11.D0-DLOG(DABS(EX))      COR0-070
      ZI=10.5D0*B2+EX-EX*A2+0.5D0*PI                                    COR0-071
      IF (EX.LT.0.D0) ZI=ZI-PI                                          COR0-072
      A2=11.D0/B3                                                       COR0-073
      B2=EX/B3                                                          COR0-074
      A3=A2**2-B2**2                                                    COR0-075
      B3=2.D0*A2*B2                                                     COR0-076
      DO 2 I=1,7                                                        COR0-077
      ZR=ZR+B(I)*A2                                                     COR0-078
      ZI=ZI+B(I)*B2                                                     COR0-079
      C1=A2*A3-B2*B3                                                    COR0-080
      B2=A2*B3+B2*A3                                                    COR0-081
    2 A2=C1                                                             COR0-082
      DO 3 I=1,10                                                       COR0-083
      A2=DFLOAT(I)                                                      COR0-084
      ZR=ZR-.5D0*DLOG(A2**2+EX**2)                                      COR0-085
    3 ZI=ZI+DATAN(EX/A2)                                                COR0-086
    4 IF (DABS(X1(2)).GT.2.D0) GO TO 9                                  COR0-087
C COMPUTATION OF THE FIRST CONFLUENT HYPERGEOMETRIC FUNCTION.           COR0-088
      IF (X1(2).EQ.0.D0) GO TO 8                                        COR0-089
      IF (DABS(X2(2)).LT.1.D-3) GO TO 5                                 COR0-090
      A2=DEXP(-DSIGN(0.5D0*PI,X1(2))*X2(2)+ZR)                          COR0-091
      B2=DSIGN(ZI,X2(2))+X2(2)*DLOG(DABS(X1(2)))                        COR0-092
      X5(2)=A2*DCOS(B2)                                                 COR0-093
      X5(4)=A2*DSIN(B2)-1.D0/X2(2)                                      COR0-094
      GO TO 6                                                           COR0-095
C EXPANSION FOR SMALL EX.                                               COR0-096
    5 A2=DLOG(DABS(X1(2)))                                              COR0-097
      B2=PI*.5D0                                                        COR0-098
      IF (X1(2).LT.0.D0) B2=-B2                                         COR0-099
      A3=A2*(1.D0+EX*(B2-EX*((A2**2-3.D0*B2**2)/6.D0+EX*B2*(A2**2-B2**2)COR0-100
     1/6.D0)))                                                          COR0-101
      B3=B2-EX*((A2**2-B2**2)/2.D0+EX*(B2*(3.D0*A2**2-B2**2)/6.D0-EX*(A2COR0-102
     1**4-6.D0*A2**2*B2**2+B2**4)/24.D0))                               COR0-103
      A2=.5772156649015329D0-.400685634386331D0*EX**2                   COR0-104
      B2=-EX*(.822467033424113D0-0.270580808427784D0*EX**2)             COR0-105
      A4=A2*(1.D0+EX*(B2-EX*((A2**2-3.D0*B2**2)/6.D0+EX*B2*(A2**2-B2**2)COR0-106
     1/6.D0)))                                                          COR0-107
      B4=B2-EX*((A2**2-B2**2)/2.D0+EX*(B2*(3.D0*A2**2-B2**2)/6.D0-EX*(A2COR0-108
     1**4-6.D0*A2**2*B2**2+B2**4)/24.D0))                               COR0-109
      X5(2)=-A3-A4-EX*(A3*B4+B3*A4)                                     COR0-110
      X5(4)=-B3-B4+EX*(A3*A4-B3*B4)                                     COR0-111
    6 A2=X5(2)                                                          COR0-112
      B2=X5(4)                                                          COR0-113
      A3=1.D0                                                           COR0-114
      B3=0.D0                                                           COR0-115
      DO 7 J=1,1000                                                     COR0-116
      B4=J                                                              COR0-117
      C1=-X1(2)*(B4*B3-EX*A3)/(B4**2+EX**2)                             COR0-118
      B3=X1(2)*(B4*A3+EX*B3)/(B4**2+EX**2)                              COR0-119
      A3=C1                                                             COR0-120
      C2=(-X1(2)*B2+A3)/B4                                              COR0-121
      B2=(X1(2)*A2+B3)/B4                                               COR0-122
      A2=C2                                                             COR0-123
      X5(2)=X5(2)+A2                                                    COR0-124
      X5(4)=X5(4)+B2                                                    COR0-125
      IF (DABS(A2)+DABS(B2).LT.1.D-12*(DABS(X5(2))+DABS(X5(4)))) GO TO 9COR0-126
    7 CONTINUE                                                          COR0-127
      GO TO 9                                                           COR0-128
    8 X5(4)=-.5D0*PI                                                    COR0-129
      X5(2)=0.D0                                                        COR0-130
    9 DO 11 K=1,4                                                       COR0-131
      DO 10 J=1,4                                                       COR0-132
   10 Y(J,K)=0.D0                                                       COR0-133
   11 CONTINUE                                                          COR0-134
      N=IDINT(DMIN1(A1+DSQRT(A1**2-FI),B1+DSQRT(B1**2-FF))+2.D0)        COR0-135
      A3=0.D0                                                           COR0-136
      B3=0.D0                                                           COR0-137
C LOOP OF THE ASYMPTOTIC EXPANSION.                                     COR0-138
      DO 27 I=1,N                                                       COR0-139
      IF (4*I.GT.LM3) CALL MEMO('COR0',LM3,4*I)                         COR0-140
      A4=DFLOAT(I)-2                                                    COR0-141
      IF (I.EQ.1) GO TO 19                                              COR0-142
      IF (I.EQ.2) GO TO 13                                              COR0-143
      B4=1.D0-.5D0/A4                                                   COR0-144
      X3(1)=EI*B4/A1                                                    COR0-145
      X3(2)=X3(1)                                                       COR0-146
      X3(3)=EF*B4/B1                                                    COR0-147
      X3(4)=X3(3)                                                       COR0-148
      X4(1)=(FI-A4*(A4-1.D0))/(2.D0*A4*A1)                              COR0-149
      X4(2)=(FI-(A4+1.D0)*(A4-2.D0))/(2.D0*A4*A1)                       COR0-150
      X4(3)=(FF-A4*(A4-1.D0))/(2.D0*A4*B1)                              COR0-151
      X4(4)=(FF-(A4+1.D0)*(A4-2.D0))/(2.D0*A4*B1)                       COR0-152
C NEW TERM OF ASYMPTOTIC EXPANSION.                                     COR0-153
      DO 12 J=1,4                                                       COR0-154
      Z(J,2*I-3)=Z(J,2*I-5)*X3(J)-Z(J,2*I-4)*X4(J)                      COR0-155
   12 Z(J,2*I-2)=Z(J,2*I-5)*X4(J)+Z(J,2*I-4)*X3(J)                      COR0-156
   13 DO 16 L=1,2                                                       COR0-157
      DO 15 K=1,2                                                       COR0-158
      DO 14 J=1,2                                                       COR0-159
   14 C(J,K,L)=0.D0                                                     COR0-160
   15 CONTINUE                                                          COR0-161
   16 CONTINUE                                                          COR0-162
C PRODUCT OF THE ASYMPTOTIC EXPANSIONS IN C(1,N,M)+I*C(2,N,M)           COR0-163
C  N=1: H0(+)(EI)*H0(+)(EF)     N=2: H1(+)(EI)*H1(+)(EF)                COR0-164
C  M=1: HL(+)(EI)*HL(+)(EF)     M=2: HL(+)(EI)*HL(+)(EF).               COR0-165
      I1=I-1                                                            COR0-166
      DO 18 J=1,I1                                                      COR0-167
      M=I-J                                                             COR0-168
      DO 17 L=1,2                                                       COR0-169
      C(1,L,1)=C(1,L,1)+Z(L,2*J-1)*Z(L+2,2*M-1)-Z(L,2*J)*Z(L+2,2*M)     COR0-170
      C(2,L,1)=C(2,L,1)+Z(L,2*J-1)*Z(L+2,2*M)+Z(L,2*J)*Z(L+2,2*M-1)     COR0-171
      C(1,L,2)=C(1,L,2)+Z(L,2*J-1)*Z(L+2,2*M-1)+Z(L,2*J)*Z(L+2,2*M)     COR0-172
   17 C(2,L,2)=C(2,L,2)-Z(L,2*J-1)*Z(L+2,2*M)+Z(L,2*J)*Z(L+2,2*M-1)     COR0-173
   18 CONTINUE                                                          COR0-174
   19 B4=A4+2.D0                                                        COR0-175
      A5=0.D0                                                           COR0-176
      B5=0.D0                                                           COR0-177
C INTEGRATION FROM RS TO INFINITY.                                      COR0-178
      DO 26 M=1,2                                                       COR0-179
C TRANSFER OF PREVIOUS INTEGRALS.                                       COR0-180
      X4(M)=X5(M)*RM                                                    COR0-181
      X4(M+2)=X5(M+2)*RM                                                COR0-182
      IF (DABS(X1(M)).LE.2.D0.AND.M.EQ.2) GO TO 23                      COR0-183
C PADE METHOD FOR OMEGA FUNCTION.                                       COR0-184
C INSTEAD OF FORMULA (44), WE COMPUTE I*K*R*OMEGA IN TERMS OF I*K*R.    COR0-185
      A9=B4**2+(X2(M)+X1(M))**2                                         COR0-186
      A6=B4/A9                                                          COR0-187
      B6=-(X2(M)+X1(M))/A9                                              COR0-188
      A7=-B6*X1(M)                                                      COR0-189
      B7=A6*X1(M)                                                       COR0-190
      A8=A6                                                             COR0-191
      B8=B6+1.D0/X1(M)                                                  COR0-192
      B9=1.D0                                                           COR0-193
C STEED'S ALGORITHM.                                                    COR0-194
      DO 20 J=1,1000                                                    COR0-195
      C2=B7+X1(M)/B9                                                    COR0-196
      A9=(A7**2+C2**2)*B9                                               COR0-197
      C1=A7/A9                                                          COR0-198
      C2=-C2/A9                                                         COR0-199
      C3=-(C2*X1(M)+1.D0)*A8-C1*X1(M)*B8                                COR0-200
      C4=C1*X1(M)*A8-B8*(C2*X1(M)+1.D0)                                 COR0-201
      A7=1.D0+C1*(B4+B9)-C2*X2(M)                                       COR0-202
      B7=C1*X2(M)+(B4+B9)*C2                                            COR0-203
      A9=A7**2+B7**2                                                    COR0-204
      A7=A7/A9                                                          COR0-205
      B7=-B7/A9                                                         COR0-206
      A8=(A7-1.D0)*C3-B7*C4                                             COR0-207
      B8=(A7-1.D0)*C4+B7*C3                                             COR0-208
      B9=B9+1.D0                                                        COR0-209
      IF (DABS(C3)+DABS(C4)+DABS(A8)+DABS(B8).LT.1.D-12*(DABS(B6)+DABS(ACOR0-210
     16))) GO TO 21                                                     COR0-211
      A6=A6+A8+C3                                                       COR0-212
   20 B6=B6+B8+C4                                                       COR0-213
   21 X5(M)=0.D0                                                        COR0-214
      X5(M+2)=0.D0                                                      COR0-215
      J=J+1                                                             COR0-216
C DIRECT COMPUTATION OF PADE APPROXIMANT FOR MORE PRECISION.            COR0-217
      DO 22 K=1,J                                                       COR0-218
      C1=1.D0+B9*X5(M)                                                  COR0-219
      C2=B9*X5(M+2)                                                     COR0-220
      A9=C1**2+C2**2                                                    COR0-221
      B9=B9-1.D0                                                        COR0-222
      A7=((B4+B9)*C1+X2(M)*C2)/A9                                       COR0-223
      B7=X1(M)+(C1*X2(M)-C2*(B4+B9))/A9                                 COR0-224
      A9=A7**2+B7**2                                                    COR0-225
      X5(M)=A7/A9                                                       COR0-226
   22 X5(M+2)=-B7/A9                                                    COR0-227
      GO TO 24                                                          COR0-228
C TAYLOR EXPANSION OF CONFLUENT HYPERGEOMETRIC FUNCTION.                COR0-229
   23 IF (I.EQ.1) GO TO 26                                              COR0-230
      A7=1.D0+X1(M)*X5(M+2)                                             COR0-231
      B7=-X1(M)*X5(M)                                                   COR0-232
      A9=((B4-1.D0)**2+X2(M)**2)                                        COR0-233
      X5(M)=(A7*(B4-1.D0)+X2(M)*B7)/A9                                  COR0-234
      X5(M+2)=(B7*(B4-1.D0)-X2(M)*A7)/A9                                COR0-235
   24 IF (I.EQ.1) GO TO 26                                              COR0-236
C STORAGE OF INTEGRALS TO A FACTOR R IN Y(J,M)                          COR0-237
C  J=1 AND J=2  REAL AND IMAGINARY PARTS OF INTEGRAL OF H0(EI)*H0(EF)   COR0-238
C  J=3 AND J=4  REAL AND IMAGINARY PARTS OF INTEGRAL OF H1(EI)*H1(EF)   COR0-239
C  M=1 AND M=2 FOR H*H   M=3 AND M=4 FOR H*H*                           COR0-240
C  M=1 AND M=3 FOR 1/R   M=2 AND M=4 FOR 1/R**2                         COR0-241
      DO 25 J=1,2                                                       COR0-242
      A6=C(1,J,M)*X4(M)-C(2,J,M)*X4(M+2)                                COR0-243
      B6=C(1,J,M)*X4(M+2)+C(2,J,M)*X4(M)                                COR0-244
      A5=DMAX1(A5,A6**2+B6**2)                                          COR0-245
      Y(2*J-1,2*M-1)=Y(2*J-1,2*M-1)+A6                                  COR0-246
      Y(2*J,2*M-1)=Y(2*J,2*M-1)+B6                                      COR0-247
      A3=DMAX1(A3,Y(2*J-1,2*M-1)**2+Y(2*J,2*M-1)**2)                    COR0-248
      A6=C(1,J,M)*X5(M)-C(2,J,M)*X5(M+2)                                COR0-249
      B6=C(1,J,M)*X5(M+2)+C(2,J,M)*X5(M)                                COR0-250
      B5=DMAX1(B5,A6**2+B6**2)                                          COR0-251
      Y(2*J-1,2*M)=Y(2*J-1,2*M)+A6                                      COR0-252
      Y(2*J,2*M)=Y(2*J,2*M)+B6                                          COR0-253
   25 B3=DMAX1(B3,Y(2*J-1,2*M)**2+Y(2*J,2*M)**2)                        COR0-254
   26 CONTINUE                                                          COR0-255
      IF (I.NE.1.AND.A5.LT.A3*1.D-30.AND.B5.LT.B3*1.D-30) GO TO 28      COR0-256
   27 CONTINUE                                                          COR0-257
   28 A1=2.D0*RM                                                        COR0-258
C TRANSFORMATION FROM H(+/-) TO F AND G.                                COR0-259
      DO 29 I=1,4                                                       COR0-260
      CC(1,I)=(YYTMP(2*I-1,2)-YYTMP(2*I-1,1))/A1                        COR0-261
      CC(4,I)=(YYTMP(2*I-1,2)+YYTMP(2*I-1,1))/A1                        COR0-262
      CC(3,I)=(YYTMP(2*I,1)+YYTMP(2*I,2))/A1                            COR0-263
   29 CC(2,I)=(YYTMP(2*I,1)-YYTMP(2*I,2))/A1                            COR0-264
      IF (RM.EQ.RS) GO TO 35                                            COR0-265
C IF RM IS NOT RS, 40 POINTS GAUSS INTEGRATION FROM RS TO RM            COR0-266
C EACH GAUSS INTEGRATION IS FOR VARIATION OF R LESS THAN 20.            COR0-267
      IL=MIN0(1+IDINT(DABS(RM-RS)*.05D0),50)                            COR0-268
      A1=DFLOAT(IL)                                                     COR0-269
      A1=(RM-RS)/A1                                                     COR0-270
      A2=RM                                                             COR0-271
      DO 34 IT=1,IL                                                     COR0-272
      A3=A2-A1                                                          COR0-273
      DO 33 II=1,40                                                     COR0-274
      I=MIN0(II,41-II)                                                  COR0-275
      A4=ABSC(I)                                                        COR0-276
      IF (I.NE.II) A4=1.D0-A4                                           COR0-277
      A5=A3+A1*A4                                                       COR0-278
      CALL FCOU(1,EI,A5/FS,Y,Y(1,3),Y(3,1),Y(3,3),IE(1,1),X1)           COR0-279
      CALL FCOU(1,EF,A5*FS,Y(1,2),Y(1,4),Y(3,2),Y(3,4),IE(1,2),X1)      COR0-280
      DO 32 M=1,2                                                       COR0-281
      NI1=-IE(M,1)                                                      COR0-282
      DO 31 J=1,2                                                       COR0-283
      NI2=-IE(M,2)                                                      COR0-284
      DO 30 L=1,2                                                       COR0-285
      NII=MIN0(NI1+NI2,60)                                              COR0-286
      A6=P(I)*Y(2*J+M-2,1)*Y(2*L+M-2,2)/A5*A1*1.D1**NII                 COR0-287
      CC(2*L+J-2,M)=CC(2*L+J-2,M)+A6                                    COR0-288
      CC(2*L+J-2,M+2)=CC(2*L+J-2,M+2)+A6/A5                             COR0-289
   30 NI2=-NI2                                                          COR0-290
   31 NI1=-NI1                                                          COR0-291
   32 CONTINUE                                                          COR0-292
   33 CONTINUE                                                          COR0-293
   34 A2=A3                                                             COR0-294
   35 RETURN                                                            COR0-295
      END                                                               COR0-296
C 27/06/06                                                      ECIS12  CORZ-000
      SUBROUTINE CORZ(XI,XF,T,FGI,FGF,LM1,LM2,LM,W)                     CORZ-001
C    COMPUTATION OF THE INTEGRALS FROM 1 TO INFINITY OF PRODUCTS OF     CORZ-002
C REGULAR OR IRREGULAR BESSEL FUNCTIONS OF SAME L-VALUE AND ARGUMENT    CORZ-003
C XI*R AND XF*R RESPECTIVELY, DIVIDED BY R**3 FOR L=1 TO LM, AND OF     CORZ-004
C INTEGRALS FROM 0 TO INFINITY OF REGULAR FUNCTIONS OF THESE ARGUMENTS  CORZ-005
C DIVIDED BY R**3.                                                      CORZ-006
C    THE LIMIT OF STABILITY OF THE UPWARDS RECURRENCE HAS               CORZ-007
C     BEEN FOUND TO BE   LM2*(1-XI/XF) < 3 .                            CORZ-008
C INPUT:     XI,XF:   WAVE NUMBERS MULTIPLIED BY THE MATCHING RADIUS.   CORZ-009
C            FGI,FGF: REGULAR AND IRREGULAR BESSEL FUNCTIONS.           CORZ-010
C            LM1:     MAXIMUM NUMBER OF INTEGRALS FROM 1 TO INFINITY.   CORZ-011
C            LM2:     NUMBER OF INTEGRALS FROM 0 TO INFINITY.           CORZ-012
C            LM:      ACTUAL NUMBER OF INTEGRALS FROM 1 TO INFINITY.    CORZ-013
C OUTPUT:    T:       INTEGRALS FROM 0 TO INFINITY.                     CORZ-014
C            W:       INTEGRALS FROM RS TO INFINITY.                    CORZ-015
C***********************************************************************CORZ-016
      IMPLICIT REAL*8 (A-H,O-Z)                                         CORZ-017
      DIMENSION T(*),FGI(LM1,*),FGF(LM1,*),W(LM1,*),B(4),C(2),D(2)      CORZ-018
C INTEGRALS FROM 0 TO INFINITY.                                         CORZ-019
C THE RECURRENCE RELATION STARTS FROM L=0 WITH L*(0,3;L)=1/3 FOR L=0.   CORZ-020
      T(1)=1.D0/3.D0                                                    CORZ-021
      IF (XI.NE.XF) GO TO 2                                             CORZ-022
C WHEN KI=KF   (0,3;L)=1/(2*L*(L+1)).                                   CORZ-023
      A1=0.D0                                                           CORZ-024
      DO 1 I=2,LM2                                                      CORZ-025
      A1=A1+1.D0                                                        CORZ-026
    1 T(I)=.5D0/(A1*(A1+1.D0))                                          CORZ-027
      GO TO 11                                                          CORZ-028
    2 X=XI/XF                                                           CORZ-029
      IF (X.GT.1.D0) X=1.D0/X                                           CORZ-030
C (0,3;L) = X**L GT(1/2) GT(L+1)/2/GT(L+3/2) 2F1(L,-1/2;L+3/2;X**2).    CORZ-031
      IF (X.GE..9D0) GO TO 4                                            CORZ-032
C DIRECT EXPANSION OF THE 2F1 FUNCTION.                                 CORZ-033
      A1=X**2                                                           CORZ-034
      T(2)=X/3.D0                                                       CORZ-035
      A2=T(2)                                                           CORZ-036
      A3=0.D0                                                           CORZ-037
      DO 3 J=1,2000                                                     CORZ-038
      A3=A3+1.D0                                                        CORZ-039
      A2=A2*A1*(A3-1.5D0)/(A3+1.5D0)                                    CORZ-040
      T(2)=T(2)+A2                                                      CORZ-041
      IF (DABS(A2).LT.1.D-15*DABS(T(2))) GO TO 6                        CORZ-042
    3 CONTINUE                                                          CORZ-043
      GO TO 6                                                           CORZ-044
C ANALYTIC CONTINUATION OF THE 2F1 FUNCTION - ERDELYI,.... 15.3.11.     CORZ-045
    4 A1=1.D0-X**2                                                      CORZ-046
      A2=X*A1**2/16.D0                                                  CORZ-047
      A3=DLOG(A1/4.D0)+2.D0                                             CORZ-048
      T(2)=X*(2.D0+A1)/8.D0+A2*A3                                       CORZ-049
      A4=0.D0                                                           CORZ-050
      DO 5 J=1,2000                                                     CORZ-051
      A4=A4+1.D0                                                        CORZ-052
      A3=A3-.5D0/((A4+.5D0)*A4)                                         CORZ-053
      A2=A2*A1*(A4+.5D0)/A4                                             CORZ-054
      A5=A2*A3                                                          CORZ-055
      T(2)=T(2)+A5                                                      CORZ-056
      IF (DABS(A5).LT.1.D-15*DABS(T(2))) GO TO 6                        CORZ-057
    5 CONTINUE                                                          CORZ-058
C RECURRENCE RELATION FOR  (0,3;L) :                                    CORZ-059
C  2*(L-1)*(0,3;L-1)-(2*L+1)*(X+1/X)*(0,3;L)+2*(L+2)*(0,3;L+1)=0.       CORZ-060
C UPWARDS RECURRENCE.                                                   CORZ-061
    6 A1=X+1.D0/X                                                       CORZ-062
      XX=LM2*(1-X)                                                      CORZ-063
      IF (XX.GT.3.D0) GO TO 8                                           CORZ-064
      T(3)=.5D0*(A1*T(2)-T(1))                                          CORZ-065
      A2=0.D0                                                           CORZ-066
      DO 7 I=4,LM2                                                      CORZ-067
      A2=A2+1.D0                                                        CORZ-068
    7 T(I)=((A2+1.5D0)*A1*T(I-1)-A2*T(I-2))/(A2+3.D0)                   CORZ-069
      GO TO 11                                                          CORZ-070
C DOWNWARDS RECURRENCE.                                                 CORZ-071
    8 LK=4*LM2                                                          CORZ-072
      A2=DFLOAT(LK-1)                                                   CORZ-073
      A3=A2/(A2+2.D0)                                                   CORZ-074
      DO 9 I=3,LK                                                       CORZ-075
      J=LK-I+3                                                          CORZ-076
      A2=A2-1.D0                                                        CORZ-077
      A3=A2/((A2+1.5D0)*A1-(A2+3.D0)*A3)                                CORZ-078
      IF (J.LE.LM2) T(J)=A3                                             CORZ-079
    9 CONTINUE                                                          CORZ-080
      DO 10 I=3,LM2                                                     CORZ-081
   10 T(I)=T(I)*T(I-1)                                                  CORZ-082
   11 B(1)=XI+XF                                                        CORZ-083
      B(2)=XI-XF                                                        CORZ-084
C COMPUTATION OF THE INTEGRALS FROM 1 TO INFINITY OF EXP(I*B*R)/R**3 DR.CORZ-085
      DO 17 I=1,2                                                       CORZ-086
      IF (B(I).LT.5.D0) GO TO 13                                        CORZ-087
C USE OF PADE APPROXIMANT.                                              CORZ-088
      A1=0.D0                                                           CORZ-089
      A2=0.D0                                                           CORZ-090
      A3=21.D0                                                          CORZ-091
      DO 12 J=1,20                                                      CORZ-092
      A3=A3-1.D0                                                        CORZ-093
      A2=A2-B(I)                                                        CORZ-094
      B1=A1**2+A2**2                                                    CORZ-095
      B2=A1*A3/B1+1.D0                                                  CORZ-096
      B3=-A2*A3/B1                                                      CORZ-097
      B1=B2**2+B3**2                                                    CORZ-098
      A1=B2*(A3+2.D0)/B1                                                CORZ-099
   12 A2=-B3*(A3+2.D0)/B1                                               CORZ-100
      A2=A2-B(I)                                                        CORZ-101
      B1=A1**2+A2**2                                                    CORZ-102
      C(I)=(DCOS(B(I))*A1+DSIN(B(I))*A2)/B1                             CORZ-103
      D(I)=(DSIN(B(I))*A1-DCOS(B(I))*A2)/B1                             CORZ-104
      GO TO 17                                                          CORZ-105
   13 IF (B(I).EQ.0.D0) GO TO 16                                        CORZ-106
C USE OF THE TAYLOR EXPANSION.                                          CORZ-107
      A1=DABS(B(I))                                                     CORZ-108
      C(I)=.5D0*(1.D0-A1**2*(.922784335098467D0-DLOG(A1)))              CORZ-109
      D(I)=A1*(1.D0-.78539816339744831D0*A1)                            CORZ-110
      A2=A1**2/2.D0                                                     CORZ-111
      A3=0.D0                                                           CORZ-112
      DO 14 J=2,20                                                      CORZ-113
      A3=A3+1.D0                                                        CORZ-114
      A2=A2*A1/(2.D0*A3+1.D0)                                           CORZ-115
      D(I)=D(I)+A2/(2.D0*A3-1.D0)                                       CORZ-116
      A2=-A2*A1/(2.D0*A3+2.D0)                                          CORZ-117
      C(I)=C(I)+A2/(2.D0*A3)                                            CORZ-118
      IF (DABS(A2).LT.1.D-16) GO TO 15                                  CORZ-119
   14 CONTINUE                                                          CORZ-120
   15 IF (A1.NE.B(I)) D(I)=-D(I)                                        CORZ-121
      GO TO 17                                                          CORZ-122
   16 C(I)=.5D0                                                         CORZ-123
      D(I)=0.D0                                                         CORZ-124
   17 CONTINUE                                                          CORZ-125
C STORAGE OF THE TWO FIRST INTEGRALS.                                   CORZ-126
      A1=2.D0*XI*XF                                                     CORZ-127
      DO 18 I=1,2                                                       CORZ-128
      W(I,1)=(C(2)-C(1))/A1                                             CORZ-129
      W(I,2)=(D(1)-D(2))/A1                                             CORZ-130
      W(I,3)=(D(1)+D(2))/A1                                             CORZ-131
      W(I,4)=(C(2)+C(1))/A1                                             CORZ-132
      IF (I.EQ.2) GO TO 18                                              CORZ-133
      C(1)=C(1)*B(2)**2+DCOS(B(1))+B(1)*DSIN(B(1))                      CORZ-134
      D(1)=D(1)*B(2)**2+DSIN(B(1))-B(1)*DCOS(B(1))                      CORZ-135
      C(2)=C(2)*B(1)**2+DCOS(B(2))+B(2)*DSIN(B(2))                      CORZ-136
      D(2)=D(2)*B(1)**2+DSIN(B(2))-B(2)*DCOS(B(2))                      CORZ-137
      A1=2.D0*A1**2                                                     CORZ-138
   18 CONTINUE                                                          CORZ-139
C UPWARDS RECURRENCE.                                                   CORZ-140
      A1=XI/XF+XF/XI                                                    CORZ-141
      A2=2.D0*XI*XF                                                     CORZ-142
      A3=2.D0                                                           CORZ-143
      DO 20 J=3,LM                                                      CORZ-144
      A3=A3+1.D0                                                        CORZ-145
      B(2)=(FGI(J-2,3)*FGF(J-2,1)-FGI(J,3)*FGF(J,1))/A2                 CORZ-146
      B(3)=(FGI(J-2,1)*FGF(J-2,3)-FGI(J,1)*FGF(J,3))/A2                 CORZ-147
      B(4)=(FGI(J-2,3)*FGF(J-2,3)-FGI(J,3)*FGF(J,3))/A2                 CORZ-148
      DO 19 I=2,4                                                       CORZ-149
   19 W(J,I)=((A3-1.5D0)*A1*W(J-1,I)-(A3-3.D0)*W(J-2,I)-B(I))/A3        CORZ-150
   20 CONTINUE                                                          CORZ-151
      LN=MAX0(LM,IDINT(DMAX1(XI,XF)))+50                                CORZ-152
      B2=0.D0                                                           CORZ-153
      B3=0.D0                                                           CORZ-154
      C2=0.D0                                                           CORZ-155
      C3=1.D-15                                                         CORZ-156
      D2=0.D0                                                           CORZ-157
      D3=1.D-15                                                         CORZ-158
      A3=LN                                                             CORZ-159
      DO 24 I=2,LN                                                      CORZ-160
      J=LN-I+2                                                          CORZ-161
      A3=A3-1.D0                                                        CORZ-162
      B1=B2                                                             CORZ-163
      B2=B3                                                             CORZ-164
      C1=C2                                                             CORZ-165
      C2=C3                                                             CORZ-166
      D1=D2                                                             CORZ-167
      D2=D3                                                             CORZ-168
      C3=(2.D0*A3+3.D0)*C2/XI-C1                                        CORZ-169
      D3=(2.D0*A3+3.D0)*D2/XF-D1                                        CORZ-170
      B3=((A3+1.5D0)*A1*B2-(A3+3.D0)*B1-(C3*D3-C1*D1)/A2)/A3            CORZ-171
      IF (J.LE.LM) W(J,1)=B3                                            CORZ-172
      IF (D3.LT.1.D15) GO TO 21                                         CORZ-173
      D2=D2*1.D-30                                                      CORZ-174
      D3=D3*1.D-30                                                      CORZ-175
      GO TO 22                                                          CORZ-176
   21 IF (C3.LT.1.D15) GO TO 24                                         CORZ-177
      C2=C2*1.D-30                                                      CORZ-178
      C3=C3*1.D-30                                                      CORZ-179
   22 B2=B2*1.D-30                                                      CORZ-180
      B3=B3*1.D-30                                                      CORZ-181
      IF (J.GT.LM) GO TO 24                                             CORZ-182
      DO 23 K=J,LM                                                      CORZ-183
   23 W(K,1)=W(K,1)*1.D-30                                              CORZ-184
   24 CONTINUE                                                          CORZ-185
      A1=FGI(2,1)*FGF(2,1)/(C3*D3)                                      CORZ-186
      DO 25 I=2,LM                                                      CORZ-187
   25 W(I,1)=W(I,1)*A1+T(I)                                             CORZ-188
      RETURN                                                            CORZ-189
      END                                                               CORZ-190
C 22/10/12                                                      ECIS12  REDM-000
      SUBROUTINE REDM(IPI,NCOLL,NBETA,BETA,IPH,NVAR,VAR,FAC,IDT,LO,NIV,IREDM-001
     1Q,JQ,T,IT,IM)                                                     REDM-002
C REDUCED NUCLEAR MATRIX ELEMENTS.                                      REDM-003
C INPUT:     IPI(J,*):PARITY OF NUCLEAR STATES FOR J=1,                 REDM-004
C                     MULTIPLICITY OF THE PARTICLE FOR J=2,             REDM-005
C                     MULTIPLICITY OF THE TARGET FOR J=3.               REDM-006
C            NCOLL:   NUMBER OF COUPLED STATES                          REDM-007
C            NBETA:   QUANTUM NUMBERS OF DEFORMATIONS.                  REDM-008
C            BETA:    DEFORMATIONS, EQUIVALENT BY CALL WITH NBETA.      REDM-009
C            IPH:     DESCRIPTION OF VIBRATIONAL MODEL (SEE VIBM).      REDM-010
C            NVAR,VAR:EQUIVALENT BY CALL, PARAMETERS FOR SOME MODELS.   REDM-011
C            NVA:     NUMBER OF THESE PARAMETERS.                       REDM-012
C            FAC:     TABLE AND NUMBER OF LOGARITHMS OF FACTORIALS.     REDM-013
C            IDT:     LENGTH AVAILABLE IN THIS SUBROUTINE.              REDM-014
C            LO(I):   LOGICAL CONTROLS:                                 REDM-015
C               LO(1)  =.TRUE. ROTATIONAL MODEL-(.F.:VIBRATIONAL MODEL).REDM-016
C               LO(3)  =.TRUE. ANHARMONIC VIBRATIONAL OR ASYMMETRIC     REDM-017
C                              ROTATIONAL MODEL.                        REDM-018
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    REDM-019
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              REDM-020
C               LO(12) =.TRUE. DEFORMED IMAGINARY CENTRAL POTENTIAL.    REDM-021
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      REDM-022
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. REDM-023
C               LO(15) =.TRUE. REDUCED NUCLEAR MATRIX ELEMENTS READ.    REDM-024
C               LO(17) =.TRUE. FOLDING MODEL.                           REDM-025
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   REDM-026
C               LO(20) =.TRUE. DISPERSION RELATIONS FOR TRANSITION      REDM-027
C                              FORM-FACTORS.                            REDM-028
C               LO(52) =.TRUE. REDUCED NUCLEAR MATRIX ELEMENTS OUTPUT.  REDM-029
C               LO(61) =.TRUE. REDUCED NUCLEAR MATRIX ELEMENTS WRITTEN  REDM-030
C                              ON FILE 61.                              REDM-031
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      REDM-032
C               LO(101)=.TRUE. THERE IS A REAL SPIN-ORBIT POTENTIAL.    REDM-033
C               LO(103)=.TRUE. THERE IS A COULOMB SPIN-ORBIT POTENTIAL. REDM-034
C               LO(117)=.TRUE. FOR ALL CALCULATIONS EXCEPT THE FIRST.   REDM-035
C               LO(120)=.TRUE. OUTPUT AND LAST CALCULATION BEST ONE.    REDM-036
C               LO(121)=.TRUE. OPTICAL MODEL WITHOUT COUPLING.          REDM-037
C               LO(133)=.TRUE. STORE SCALAR AND COULOMB POTENTIAL       REDM-038
C                              INDEPENDENTLY.                           REDM-039
C OUTPUT:    NIV:     NUMBER AND REFERENCES OF INTERACTION FORM FACTORS REDM-040
C                     BETWEEN EACH CHANNELS. NIV(I1,I2,K): FIRST I OF   REDM-041
C                     T(3,I) FOR THE PAIR OF NUCLEAR STATES I1,I2 FOR   REDM-042
C                     K=1 AND LAST ONE FOR K=2.                         REDM-043
C            IQ,JQ,T: EQUIVALENT BY CALL OF IQ(6,I), JQ(I) AND T(3,I).  REDM-044
C            IT:      NUMBER OF NUCLEAR MATRIX ELEMENTS IN IQ,T. FOR A  REDM-045
C                     GIVEN VALUE OF I:                                 REDM-046
C                     IQ(1,I): REFERENCE TO TABLE OF FORM FACTORS,      REDM-047
C                     IQ(2,I): REFERENCE TO TABLE OF ANGULAR MOMENTA,   REDM-048
C                     IQ(3,I): ADDRESS OF THE ASSOCIATED SPIN-ORBIT FORMREDM-049
C                              FACTOR OR 0,                             REDM-050
C                     IQ(4,I): UNUSED,                                  REDM-051
C                     T(3,I):  REDUCED NUCLEAR MATRIX ELEMENT MULTIPLIEDREDM-052
C                              BY (-)**(L/2) WHERE L IS THE TRANSFERRED REDM-053
C                              ANGULAR MOMENTUM                         REDM-054
C            IM:      NUMBER OF ANGULAR MOMENTA.                        REDM-055
C***********************************************************************REDM-056
C BEYOND IQ(6,IT) ARE STORED IN JQ(*) THE TABLES:                       REDM-057
C            IVQ:     3*"IM" DATA, DESCRIPTION OF ANGULAR MOMENTA:      REDM-058
C                     1) L  TRANSFERRED ANGULAR MOMENTUM,               REDM-059
C                     2) 2*S WHERE S IS THE TRANSFER OF SPIN,           REDM-060
C                     3) 2*J WHERE J IS THE TRANSFER OF TOTAL           REDM-061
C                            SPIN OR 0 IF S=0.                          REDM-062
C            IVY:     7*"INTC", TABLE OF FORM FACTOR INDEPENDENT OF     REDM-063
C                     DISPERSION RELATIONS:                             REDM-064
C                     1) FORM FACTOR CONTROL NUMBER,                    REDM-065
C                     2) REFERENCE TO THE TABLE OF MULTIPOLES,          REDM-066
C                     3) 0 OR ADDRESS OF FIRST SPIN-ORBIT FORM FACTOR,  REDM-067
C                     4) 0 OR ADDRESS OF TEMPORARY COULOMB FORM FACTOR, REDM-068
C                     5) 0 OR ADDRESS OF TEMPORARY COULOMB SPIN-ORBIT,  REDM-069
C                     6) 0 OR ADDRESS OF CORRECTION TERM (POSITIVE FOR  REDM-070
C                        CORRECTED TERM, NEGATIVE FOR CORRECTION TERM), REDM-071
C                     7) ANGULAR MOMENTUM.                              REDM-072
C            IVZ:     4*"INTV" TABLE FORM FACTOR DEPENDENT OF DISPERSIONREDM-073
C                     RELATIONS:                                        REDM-074
C                     1) ADDRESS OF COMPUTATION (WITHOUT DISPERSION),   REDM-075
C                     2) FORM FACTOR CONTROL NUMBER FOR DISPERSION,     REDM-076
C                     3) 0 OR ADDRESS OF THE FIRST SPIN-ORBIT FORM      REDM-077
C                        FACTOR,                                        REDM-078
C                     4) ANGULAR MOMENTUM.                              REDM-079
C "INTC" AND "INTC" ARE IN COMMON /POTE1/. THE ADDRESSES OF THE TABLES  REDM-080
C "IVQ", "IVY" AND "IVZ" ARE DEFINED AFTER RETURN FROM THIS SUBROUTINE. REDM-081
C IF LO(15)=.TRUE. THE REDUCED MATRIX ELEMENTS ARE READ AT THE FIRST    REDM-082
C CALL AND THE PARAMETERS "VAR" ARE NOT USED - IN ANY CASE WHERE "VAR"  REDM-083
C ARE NOT USED,THE SUBROUTINE IS SKIPPED.                               REDM-084
C IF LO(61)=.TRUE. THE MATRIX ELEMENTS ARE PUNCHED AT THE LAST CALL     REDM-085
C OF A SEARCH IN THIS SUBROUTINE.                                       REDM-086
C***********************************************************************REDM-087
C                                                                       REDM-088
C THE COMMON /POTE2/ IS USED IN CALC, LECL, REDM, POTE, QUAN, MTCH,     REDM-089
C                               INTI, INSH, INSI, INCH AND REST.        REDM-090
C THE COMMON /POTE1/ IS USED IN CALC, LECT, REDM, EXTP, POTE, ROTP,     REDM-091
C                               STDP, FOLD AND REST.                    REDM-092
C FOR THE COMMON  /COUPL/ SEE CALX.                                     REDM-093
C                                                                       REDM-094
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     REDM-095
C  NBT1:      NUMBER OF PHONONS (VIBRATIONS).                           REDM-096
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             REDM-097
C  NVA:       NUMBER OF NUCLEAR PARAMETERS.                             REDM-098
C   USED:     NBT1,NPP,NVA.                                             REDM-099
C                                                                       REDM-100
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE1/:                     REDM-101
C  ITX(16):   STARTING ADDRESS OF DIFFERENT FORM FACTORS.               REDM-102
C             FOR SCHROEDINGER EQUATION, ITX(I)+1 IS THE STARTING       REDM-103
C             ADDRESS OF THE FORM FACTOR READ IN EXTP WITH ITYP=I       REDM-104
C             (POTENTIAL FOR I=1 TO 8, TRANSITION FOR I=9 TO 16).       REDM-105
C             FOR DIRAC EQUATIONS, ITX(1)=0,                            REDM-106
C             ITX(2)+1=ADDRESS OFF FIRST TRANSITION FORM FACTOR,        REDM-107
C             ITX(7)=ADDRESS OF LAST TRANSITION FORM FACTOR,            REDM-108
C             ITX(3)=ADDRESS OF LAST TEMPORARY CENTRAL POTENTIAL,       REDM-109
C             ITX(4)=ITX(7)-24,ITX(5)=ITX(3)-11,ITX(6)=ITX(2)-4.        REDM-110
C             ALL ARE USED FOR SCHROEDINGER, THE FIRST 8 FOR DIRAC.     REDM-111
C  IMAX:      MAXIMUM ANGULAR MOMENTUM.                                 REDM-112
C  INTC:      NUMBER OF FORM FACTORS WITHOUT DEFORMED SPIN-ORBIT        REDM-113
C             INCLUDING CORRECTION TERMS.                               REDM-114
C  INLS:      NUMBER OF SPIN-ORBIT FORM FACTORS NOT TAKING INTO ACCOUNT REDM-115
C             MULTIPLICATION BY 2.                                      REDM-116
C  INVC:      NUMBER OF COULOMB TRANSITION FORM FACTORS.                REDM-117
C  INVD:      IDEM FOR COULOMB SPIN-ORBIT.                              REDM-118
C  ITXM:      TOTAL NUMBER OF FORM FACTORS.                             REDM-119
C  NFO:       NUMBER OF SETS OF FOLDING PARAMETERS.                     REDM-120
C   DEFINED:  ITX,IMAX,INTC,INLS,INVC,INVD,ITXM.                        REDM-121
C                                                                       REDM-122
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     REDM-123
C  ITY(1):    STARTING ADDRESS OF REAL CENTRAL POTENTIAL (IT IS 0).     REDM-124
C  ITY(2):    STARTING ADDRESS OF IMAGINARY CENTRAL POTENTIAL.          REDM-125
C  ITY(3):    STARTING ADDRESS OF REAL SPIN-ORBIT POTENTIAL.            REDM-126
C  ITY(4):    STARTING ADDRESS OF IMAGINARY SPIN-ORBIT POTENTIAL.       REDM-127
C  ITY(5):    STARTING ADDRESS OF REAL CENTRAL TRANSITION.              REDM-128
C  ITY(6):    STARTING ADDRESS OF IMAGINARY CENTRAL TRANSITION.         REDM-129
C  ITY(7):    STARTING ADDRESS OF REAL SPIN-ORBIT TRANSITION.           REDM-130
C  ITY(8):    STARTING ADDRESS OF IMAGINARY SPIN-ORBIT TRANSITION.      REDM-131
C  ITY(9):    STARTING ADDRESS OF COULOMB CENTRAL POTENTIAL.            REDM-132
C  ITY(10):   STARTING ADDRESS OF COULOMB SPIN-ORBIT POTENTIAL.         REDM-133
C  ITY(11):   STARTING ADDRESS OF COULOMB CENTRAL TRANSITION.           REDM-134
C  ITY(12):   STARTING ADDRESS OF COULOMB SPIN-ORBIT TRANSITION.        REDM-135
C        ITY(2)=14*NCOLL AND ITY(5)=0 ONLY ARE USED FOR DIRAC EQUATIONS.REDM-136
C  INVT:      NUMBER OF TRANSITION FORM FACTORS WITHOUT SPIN-ORBIT.     REDM-137
C  INTV:      SAME AS INVT, TAKING INTO ACCOUNT DISPERSION.             REDM-138
C  INSL:      NUMBER OF SPIN-ORBIT FORM TRANSITION FACTORS NOT TAKING   REDM-139
C                  INTO ACCOUNT MULTIPLICATION BY 2.                    REDM-140
C  NPX:       NUMBER OF POTENTIALS TAKING INTO ACCOUNT DISPERSION.      REDM-141
C   DEFINED:  ITY,INVT,INTV,INSL.                                       REDM-142
C   USED:     ITY,INVT,INTV,INSL,NPX.                                   REDM-143
C                                                                       REDM-144
C***********************************************************************REDM-145
      IMPLICIT REAL*8 (A-H,O-Z)                                         REDM-146
      LOGICAL LO(150),LT                                                REDM-147
      DIMENSION NIV(NCOLL,NCOLL,*),IQ(6,*),JQ(*),T(3,*),IPI(11,*),NBETA(REDM-148
     118,*),BETA(9,*),IPH(2,*),NVAR(2,*),VAR(*),FAC(*)                  REDM-149
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   REDM-150
      COMMON /INOUT/ MR,MW,MS                                           REDM-151
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM,NFO          REDM-152
      COMMON /POTE2/ ITY(12),INVT,INTV,INSL,NPX                         REDM-153
      IF (LO(120)) GO TO 42                                             REDM-154
      IF (LO(7).OR.LO(15)) GO TO 3                                      REDM-155
C STANDARD COMPUTATION OF THE REDUCED MATRIX ELEMENTS IN T(3,I)         REDM-156
C WITH FORM FACTOR IDENTIFICATION IN IQ(1,I), MULTIPOLE IN IQ(2,I)      REDM-157
C AND 0 OR 1 IN IQ(3,I) IF SPIN-ORBIT IS NOT OR IS DEFORMED.            REDM-158
C THEY ARE CALLED AT THE FIRST RUN OR IF "VAR" HAS BEEN CHANGED.        REDM-159
      IF (LO(1)) GO TO 1                                                REDM-160
      CALL VIBM(NIV,IQ,T,IPI,NCOLL,IT,IPH,NVAR,VAR,NBETA,FAC,IDT,LO)    REDM-161
      GO TO 17                                                          REDM-162
    1 IF (LO(3)) GO TO 2                                                REDM-163
      CALL ROTM(NIV,IQ,T,IPI,NCOLL,IPH,NBETA,NVAR,VAR,IT,FAC,IDT,LO)    REDM-164
      GO TO 17                                                          REDM-165
    2 CALL ROAM(NIV,IQ,T,IPI,NCOLL,IT,BETA,IPH,VAR,VAR(NVA+1),FAC,IDT,LOREDM-166
     1)                                                                 REDM-167
      GO TO 17                                                          REDM-168
C INPUT OF NUCLEAR MATRIX ELEMENTS FROM CARDS.                          REDM-169
    3 IF (LO(117)) GO TO 42                                             REDM-170
      IT=0                                                              REDM-171
      I=0                                                               REDM-172
      DO 16 I1=1,NCOLL                                                  REDM-173
      DO 15 I2=I1,NCOLL                                                 REDM-174
      NIV(I1,I2,1)=IT+1                                                 REDM-175
      READ (MR,1000) J1,J2,K                                            REDM-176
      WRITE (MW,1001) J1,J2,K                                           REDM-177
      IF ((J1.NE.I1).OR.(J2.NE.I2)) GO TO 46                            REDM-178
      IF (K.EQ.0) GO TO 15                                              REDM-179
      IJL=IABS(IPI(3,I1)-IPI(3,I2))                                     REDM-180
      JIL=(IPI(3,I1)+IPI(3,I2))                                         REDM-181
      IJS=IABS(IPI(2,I1)-IPI(2,I2))                                     REDM-182
      JIS=IPI(2,I1)+IPI(2,I2)                                           REDM-183
      IF (2*(IT+K).GT.IDT) CALL MEMO('REDM',IDT,2*(IT+K))               REDM-184
      DO 14 K1=1,K                                                      REDM-185
      IT=IT+1                                                           REDM-186
      READ (MR,1002) J,IQ(2,IT),NN,M,T(3,IT)                            REDM-187
      IF (NN.EQ.-1.AND.(.NOT.LO(11))) GO TO 47                          REDM-188
      N=NN                                                              REDM-189
      IF (NN.EQ.-1) N=0                                                 REDM-190
      IF (MOD(IQ(2,IT)+IPI(1,I1)+IPI(1,I2),2).NE.0) GO TO 48            REDM-191
      IF ((N.GT.JIS).OR.(N.LT.IJS).OR.(MOD(JIS+N,2).NE.0)) GO TO 49     REDM-192
      IF (LO(7)) GO TO 7                                                REDM-193
      IF (LO(1)) GO TO 5                                                REDM-194
      IF (LO(3)) GO TO 4                                                REDM-195
      IQP=J/(NBT1+1)                                                    REDM-196
      IPQ=MOD(J,NBT1+1)                                                 REDM-197
      IF ((IPQ.LE.0).OR.(MAX0(IPQ,IQP).GT.NBT1).OR.(IQP.LT.0)) GO TO 50 REDM-198
      GO TO 11                                                          REDM-199
    4 IF (J.LE.0.OR.J.GT.3) GO TO 51                                    REDM-200
      GO TO 11                                                          REDM-201
    5 IQP=J/1000                                                        REDM-202
      IF (LO(3)) GO TO 6                                                REDM-203
      IF (IQP.NE.1+IQ(2,IT)) GO TO 52                                   REDM-204
      GO TO 11                                                          REDM-205
    6 IQY=IQ(2,IT)/2+1                                                  REDM-206
      IQZ=(IQY*(IQY-1))/2                                               REDM-207
      IF (IQP.LE.IQZ.OR.IQP.GT.IQZ+IQY) GO TO 53                        REDM-208
      GO TO 11                                                          REDM-209
    7 IF (J.EQ.0) GO TO 10                                              REDM-210
      IF (IABS(J)-I-1) 8 , 10 , 54                                      REDM-211
    8 IF (IT.EQ.1) GO TO 11                                             REDM-212
      DO 9 II=2,IT                                                      REDM-213
      IF (J.EQ.IQ(1,II-1)) GO TO 11                                     REDM-214
    9 CONTINUE                                                          REDM-215
      GO TO 55                                                          REDM-216
   10 I=I+1                                                             REDM-217
      IF (J.EQ.0) J=I                                                   REDM-218
   11 IQ(1,IT)=J                                                        REDM-219
      IF (N.EQ.0) GO TO 12                                              REDM-220
      IF (2*IQ(2,IT).LT.IABS(N-M).OR.2*IQ(2,IT).GT.N+M.OR.MOD(N+M,2).NE.REDM-221
     10) GO TO 56                                                       REDM-222
      NM=M                                                              REDM-223
      IQ(3,IT)=10*M+10000*N                                             REDM-224
      GO TO 13                                                          REDM-225
   12 IF (M.LT.0) GO TO 57                                              REDM-226
      IQ(3,IT)=10*M                                                     REDM-227
      NM=2*IQ(2,IT)                                                     REDM-228
   13 IF (NM.LT.IJL.OR.NM.GT.JIL) GO TO 58                              REDM-229
      IF (NN.EQ.-1) IQ(3,IT)=IQ(3,IT)+1                                 REDM-230
   14 WRITE (MW,1003) IQ(1,IT),IQ(2,IT),NN,M,T(3,IT)                    REDM-231
   15 NIV(I1,I2,2)=IT                                                   REDM-232
   16 CONTINUE                                                          REDM-233
   17 K=NIV(NCOLL,NCOLL,2)                                              REDM-234
      DO 19 I1=1,NCOLL                                                  REDM-235
      DO 18 I2=I1,NCOLL                                                 REDM-236
      NIV(I2,I1,1)=NIV(I1,I2,1)                                         REDM-237
      NIV(I2,I1,2)=NIV(I1,I2,2)                                         REDM-238
   18 CONTINUE                                                          REDM-239
   19 CONTINUE                                                          REDM-240
C CHECK THAT THERE IS ENOUGH PLACE.                                     REDM-241
      IF (7*IT.GT.IDT) CALL MEMO('REDM',IDT,7*IT)                       REDM-242
      IM=0                                                              REDM-243
      INVT=0                                                            REDM-244
      INTV=0                                                            REDM-245
      INLS=0                                                            REDM-246
      INSL=0                                                            REDM-247
      INVC=0                                                            REDM-248
      INVD=0                                                            REDM-249
      INTC=0                                                            REDM-250
      IMAX=0                                                            REDM-251
C TABLE OF MULTIPOLES.                                                  REDM-252
      IF (IT.EQ.0) GO TO 40                                             REDM-253
      ITN=6*IT                                                          REDM-254
      DO 23 J=1,IT                                                      REDM-255
      IS=IQ(3,J)/10000                                                  REDM-256
      IJ=MOD(IQ(3,J),1000)/10                                           REDM-257
      IL=MOD(IQ(3,J),10)                                                REDM-258
      IF (IS.EQ.0) IJ=2*IQ(2,J)                                         REDM-259
      IF (IJ.EQ.0) IS=2*IQ(2,J)                                         REDM-260
      IF (IL.EQ.1) IS=-2                                                REDM-261
      IF (IS.NE.0) IQ(3,J)=0                                            REDM-262
      IF (IM.EQ.0) GO TO 21                                             REDM-263
      DO 20 K=1,IM,3                                                    REDM-264
      IF ((JQ(ITN+K).EQ.IQ(2,J)).AND.(JQ(ITN+K+1).EQ.IS).AND.(JQ(ITN+K+2REDM-265
     1).EQ.IJ)) GO TO 22                                                REDM-266
   20 CONTINUE                                                          REDM-267
   21 JQ(ITN+IM+1)=IQ(2,J)                                              REDM-268
      JQ(ITN+IM+2)=IS                                                   REDM-269
      JQ(ITN+IM+3)=IJ                                                   REDM-270
      IMAX=MAX0(IMAX,IQ(2,J))                                           REDM-271
      IM=IM+3                                                           REDM-272
      IQ(2,J)=IM/3                                                      REDM-273
      GO TO 23                                                          REDM-274
   22 IQ(2,J)=1+K/3                                                     REDM-275
   23 CONTINUE                                                          REDM-276
      ITM=ITN+IM+MOD(IM,2)                                              REDM-277
C TABLE OF FORM FACTORS.                                                REDM-278
C LT IS TRUE IF THE MULTIPOLE ORDER MATTERS FOR FORM FACTORS.           REDM-279
      LT=(LO(1).OR.LO(11).OR.LO(17).OR.LO(19)).AND.(.NOT.LO(7))         REDM-280
      DO 26 J=1,IT                                                      REDM-281
      IF (INVT.EQ.0) GO TO 25                                           REDM-282
      DO 24 L=1,INVT,7                                                  REDM-283
      IF (JQ(ITM+L).NE.IQ(1,J)) GO TO 24                                REDM-284
      IF (LT.AND.(JQ(ITM+L+1).NE.IQ(2,J))) GO TO 24                     REDM-285
      IQ(1,J)=1+L/7                                                     REDM-286
      JQ(ITM+L+2)=MAX0(IQ(3,J),JQ(ITM+L+2))                             REDM-287
      GO TO 26                                                          REDM-288
   24 CONTINUE                                                          REDM-289
   25 K=IQ(2,J)                                                         REDM-290
      K1=JQ(ITN+3*K-2)                                                  REDM-291
      JQ(ITM+INVT+1)=IQ(1,J)                                            REDM-292
      JQ(ITM+INVT+2)=K                                                  REDM-293
      JQ(ITM+INVT+3)=IQ(3,J)                                            REDM-294
      JQ(ITM+INVT+4)=0                                                  REDM-295
      JQ(ITM+INVT+5)=0                                                  REDM-296
      JQ(ITM+INVT+6)=0                                                  REDM-297
      JQ(ITM+INVT+7)=K1                                                 REDM-298
      IF ((IQ(1,J).LT.0).OR.((IQ(1,J).GT.1000).AND.(K1.LE.1).AND.(MOD(IQREDM-299
     1(1,J),1000).NE.0))) JQ(ITM+INVT+6)=1                              REDM-300
      IF (LO(11).AND.(MOD(JQ(ITN+3*K-1),2).EQ.0)) JQ(ITM+INVT+4)=1      REDM-301
      IF (LO(19)) JQ(ITM+INVT+5)=JQ(ITM+INVT+3)                         REDM-302
      INVT=INVT+7                                                       REDM-303
      IQ(1,J)=INVT/7                                                    REDM-304
   26 CONTINUE                                                          REDM-305
C SEARCH ON CORRECTION TERMS.                                           REDM-306
      INTC=INVT                                                         REDM-307
      DO 28 J=1,INVT,7                                                  REDM-308
      IF (JQ(ITM+J+5).EQ.0) GO TO 28                                    REDM-309
      K1=ITM+J-1                                                        REDM-310
      DO 27 L=1,7                                                       REDM-311
   27 JQ(ITM+INTC+L)=JQ(K1+L)                                           REDM-312
      JQ(ITM+INTC+6)=-(1+J/7)                                           REDM-313
      INTC=INTC+7                                                       REDM-314
      JQ(K1+6)=INTC/7                                                   REDM-315
   28 CONTINUE                                                          REDM-316
      DO 30 J=1,INTC,7                                                  REDM-317
      IF (JQ(ITM+J+3).EQ.0) GO TO 29                                    REDM-318
      INVC=INVC+1                                                       REDM-319
      JQ(ITM+J+3)=INVC                                                  REDM-320
   29 IF ((JQ(ITM+J+2).EQ.0).AND.(JQ(ITM+J+4).EQ.0)) GO TO 30           REDM-321
      INLS=INLS+1                                                       REDM-322
      JQ(ITM+J+2)=INLS                                                  REDM-323
      IF (JQ(ITM+J+4).EQ.0) GO TO 30                                    REDM-324
      INVD=INVD+1                                                       REDM-325
      JQ(ITM+J+4)=INVD                                                  REDM-326
   30 CONTINUE                                                          REDM-327
      ITP=ITM+INTC+MOD(INTC,2)                                          REDM-328
      NTC=INVT/7                                                        REDM-329
      DO 31 J=1,NTC                                                     REDM-330
      JQ(ITP+4*J-3)=J                                                   REDM-331
      JQ(ITP+4*J-2)=0                                                   REDM-332
      JQ(ITP+4*J-1)=JQ(ITM+7*J-4)                                       REDM-333
      JQ(ITP+4*J)=JQ(ITM+7*J)                                           REDM-334
   31 CONTINUE                                                          REDM-335
      INTV=4*NTC                                                        REDM-336
      IF (.NOT.LO(20)) GO TO 37                                         REDM-337
      DO 36 I1=1,NCOLL                                                  REDM-338
      DO 35 I2=I1,NCOLL                                                 REDM-339
      K1=NIV(I1,I2,1)                                                   REDM-340
      K2=NIV(I1,I2,2)                                                   REDM-341
      IF (K1.GT.K2) GO TO 35                                            REDM-342
      KK=I1*(NCOLL+1)+I2                                                REDM-343
      DO 34 K=K1,K2                                                     REDM-344
      J=IQ(1,K)                                                         REDM-345
      IF (JQ(ITP+4*J-2).NE.0) GO TO 32                                  REDM-346
      JQ(ITP+4*J-2)=KK                                                  REDM-347
      GO TO 34                                                          REDM-348
   32 DO 33 L=1,4                                                       REDM-349
   33 JQ(ITP+INTV+L)=JQ(ITP+4*J+L-4)                                    REDM-350
      JQ(ITP+INTV+2)=KK                                                 REDM-351
      INTV=INTV+4                                                       REDM-352
      IQ(1,K)=INTV/4                                                    REDM-353
   34 CONTINUE                                                          REDM-354
   35 CONTINUE                                                          REDM-355
   36 CONTINUE                                                          REDM-356
   37 IM=IM/3                                                           REDM-357
      INTV=INTV/4                                                       REDM-358
      INVT=INVT/7                                                       REDM-359
      INTC=INTC/7                                                       REDM-360
      INSL=0                                                            REDM-361
      DO 39 J=1,INTV                                                    REDM-362
      L=JQ(ITP+4*J-1)                                                   REDM-363
      INSL=MAX0(INSL,L)                                                 REDM-364
      DO 38 K=1,IT                                                      REDM-365
      IF (IQ(1,K).EQ.J) IQ(3,K)=L                                       REDM-366
   38 CONTINUE                                                          REDM-367
   39 CONTINUE                                                          REDM-368
C NUMBER OF REAL AND IMAGINARY FORM FACTORS.                            REDM-369
   40 NV=INTC                                                           REDM-370
      IF (LO(13).OR.LO(19)) NV=NV+2*INLS                                REDM-371
      ITY(1)=0                                                          REDM-372
      LO(121)=IM.EQ.0                                                   REDM-373
      IF (LO(100)) GO TO 41                                             REDM-374
      ITY(3)=NPX                                                        REDM-375
      ITY(5)=ITY(3)+NPX                                                 REDM-376
      IF (.NOT.(LO(101).OR.LO(103))) ITY(5)=ITY(3)                      REDM-377
      ITY(7)=ITY(5)+INTV                                                REDM-378
      ITY(2)=ITY(7)+2*INSL                                              REDM-379
      ITY(4)=ITY(2)+NPX                                                 REDM-380
      ITY(6)=ITY(4)+NPX                                                 REDM-381
      IF (.NOT.(LO(101).OR.LO(103))) ITY(6)=ITY(4)                      REDM-382
      ITY(8)=ITY(6)+INTV                                                REDM-383
      IF (.NOT.LO(12)) ITY(8)=ITY(6)                                    REDM-384
      ITX1=ITY(8)+2*INSL                                                REDM-385
      IF (.NOT.LO(14)) ITX1=ITY(8)                                      REDM-386
      INTXC=ITX1                                                        REDM-387
      IF (.NOT.LO(133)) INTXC=0                                         REDM-388
      ITY(9)=ITY(1)+INTXC                                               REDM-389
      ITY(10)=ITY(3)+INTXC                                              REDM-390
      ITY(11)=ITY(5)+INTXC                                              REDM-391
      ITY(12)=ITY(7)+INTXC                                              REDM-392
      IF (.NOT.(LO(103).OR.LO(11).OR.LO(19))) ITY(11)=ITY(10)           REDM-393
      IF (.NOT.(LO(11).OR.LO(19))) ITY(12)=ITY(11)                      REDM-394
      ITX2=ITY(12)+2*INSL                                               REDM-395
      IF (.NOT.LO(19)) ITX2=ITY(12)                                     REDM-396
      ITX(1)=MAX0(ITX1,ITX2)                                            REDM-397
      ITX(5)=ITX(1)+NPP                                                 REDM-398
      ITX(9)=ITX(5)+NPP                                                 REDM-399
      IF (.NOT.(LO(101).OR.LO(103))) ITX(9)=ITX(5)                      REDM-400
      ITX(13)=ITX(9)+INTC                                               REDM-401
      ITX(2)=ITX(13)+2*INLS                                             REDM-402
      ITX(6)=ITX(2)+NPP                                                 REDM-403
      ITX(10)=ITX(6)+NPP                                                REDM-404
      IF (.NOT.(LO(101).OR.LO(103))) ITX(10)=ITX(6)                     REDM-405
      ITX(14)=ITX(10)+INTC                                              REDM-406
      ITX(7)=ITX(14)+2*INLS                                             REDM-407
      IF (.NOT.LO(14)) ITX(7)=ITX(14)                                   REDM-408
      IF (.NOT.LO(12)) ITX(7)=ITX(10)                                   REDM-409
      ITX(8)=ITX(7)+NPP                                                 REDM-410
      ITX(3)=ITX(8)+NPP                                                 REDM-411
      ITX(4)=ITX(3)+NPP                                                 REDM-412
      ITX(11)=ITX(4)+NPP                                                REDM-413
      ITX(12)=ITX(11)+INTC                                              REDM-414
      ITX(15)=ITX(12)+INTC                                              REDM-415
      IF (.NOT.LO(12)) ITX(15)=ITX(12)                                  REDM-416
      ITX(16)=ITX(15)+INVC                                              REDM-417
      ITXM=ITX(16)+2*INVD+INTC                                          REDM-418
      GO TO 42                                                          REDM-419
   41 ITY(5)=0                                                          REDM-420
      ITX(1)=0                                                          REDM-421
      ITX(2)=14*NCOLL                                                   REDM-422
      ITY(2)=ITX(2)                                                     REDM-423
      ITX(7)=ITX(2)+4*(INTV+INSL)                                       REDM-424
      ITX(3)=ITX(7)+24*NPP                                              REDM-425
      ITX(4)=ITX(7)-24                                                  REDM-426
      ITX(5)=ITX(3)-11                                                  REDM-427
      ITX(6)=ITX(2)-4                                                   REDM-428
      ITXM=ITX(3)+11*INTC                                               REDM-429
   42 IF (.NOT.(LO(52).OR.LO(61))) RETURN                               REDM-430
C REDUCED MATRIX ELEMENTS PUNCHED ON CARDS ON REQUEST.                  REDM-431
C OUTPUT OF REDUCED MATRIX ELEMENTS ON REQUEST.                         REDM-432
      IT=NIV(NCOLL,NCOLL,2)                                             REDM-433
      ITM=6*IT-3                                                        REDM-434
      ITN=ITM+3*IM-4+MOD(IM,2)                                          REDM-435
      IF (LO(52)) WRITE (MW,1004)                                       REDM-436
      DO 45 I1=1,NCOLL                                                  REDM-437
      DO 44 I2=I1,NCOLL                                                 REDM-438
      K1=NIV(I1,I2,1)                                                   REDM-439
      K2=NIV(I1,I2,2)                                                   REDM-440
      IF (LO(52)) WRITE (MW,1005) I1,I2,K1,K2                           REDM-441
      K=K2-K1+1                                                         REDM-442
      IF (LO(61)) WRITE (61,1000) I1,I2,K                               REDM-443
      IF (K.EQ.0) GO TO 44                                              REDM-444
      DO 43 K=K1,K2                                                     REDM-445
      IF (LO(52)) WRITE (MW,1006) K,(IQ(J,K),J=1,3),T(3,K)              REDM-446
      IF (.NOT.LO(61)) GO TO 43                                         REDM-447
      M=IQ(2,K)                                                         REDM-448
      NM=JQ(ITN+7*M+1)                                                  REDM-449
      NS=JQ(ITM+3*M+2)                                                  REDM-450
      NJ=JQ(ITM+3*M+3)                                                  REDM-451
      IF (NS.LE.0) NJ=0                                                 REDM-452
      IF (NS.EQ.-2) NS=-1                                               REDM-453
      IF (NJ.EQ.0.AND.IQ(3,K).NE.0) NJ=1                                REDM-454
      WRITE (61,1007) NM,JQ(ITM+3*M+1),NS,NJ,T(3,K)                     REDM-455
   43 CONTINUE                                                          REDM-456
   44 CONTINUE                                                          REDM-457
   45 CONTINUE                                                          REDM-458
      IF (IT.EQ.0.OR.(.NOT.LO(52))) RETURN                              REDM-459
      WRITE (MW,1008) (I,(JQ(ITM+3*I+J),J=1,3),I=1,IM)                  REDM-460
      WRITE (MW,1009) (I,(JQ(ITN+7*I+J),J=1,7),I=1,INTC)                REDM-461
      ITP=ITN+7*INTC+3+MOD(INTC,2)                                      REDM-462
      WRITE (MW,1010) (I,(JQ(ITP+4*I+J),J=1,4),I=1,INTV)                REDM-463
      RETURN                                                            REDM-464
   46 WRITE (MW,1011) J1,J2,I1,I2                                       REDM-465
      GO TO 59                                                          REDM-466
   47 WRITE (MW,1012) NN                                                REDM-467
      GO TO 59                                                          REDM-468
   48 WRITE (MW,1013) IQ(2,IT),IPI(1,I1),IPI(1,I2)                      REDM-469
      GO TO 59                                                          REDM-470
   49 WRITE (MW,1014)                                                   REDM-471
      GO TO 59                                                          REDM-472
   50 WRITE (MW,1015)                                                   REDM-473
      GO TO 59                                                          REDM-474
   51 WRITE (MW,1016)                                                   REDM-475
      GO TO 59                                                          REDM-476
   52 WRITE (MW,1017)                                                   REDM-477
      GO TO 59                                                          REDM-478
   53 WRITE (MW,1018) N,IJS,JIS                                         REDM-479
      GO TO 59                                                          REDM-480
   54 WRITE (MW,1019) I,J                                               REDM-481
      GO TO 59                                                          REDM-482
   55 WRITE (MW,1020) J                                                 REDM-483
      GO TO 59                                                          REDM-484
   56 WRITE (MW,1021) M,IQ(2,IT),N                                      REDM-485
      GO TO 59                                                          REDM-486
   57 WRITE (MW,1022) M                                                 REDM-487
      GO TO 59                                                          REDM-488
   58 WRITE (MW,1023) NM,IJL,JIL                                        REDM-489
      GO TO 59                                                          REDM-490
   59 WRITE (MW,1024)                                                   REDM-491
      STOP                                                              REDM-492
 1000 FORMAT (3I5)                                                      REDM-493
 1001 FORMAT (' FOR I =',I4,'  AND IP =',I4,I8,' REDUCED MATRIX ELEMENTSREDM-494
     1')                                                                REDM-495
 1002 FORMAT (4I5,F20.12)                                               REDM-496
 1003 FORMAT (10X,'FORM FACTOR =',I4,' L =',I4,4X,'2*S =',I4,4X,'2*J =',REDM-497
     1I4,4X,' REDUCED MATRIX ELEMENT',D20.6)                            REDM-498
 1004 FORMAT (//' NUCLEAR REDUCED MATRIX ELEMENTS:'/)                   REDM-499
 1005 FORMAT (/' STATE',I3,'  WITH STATE',I3,10X,' FROM',I4,' TO',I4/)  REDM-500
 1006 FORMAT (10X,'N =',I3,3X,'FORM FACTOR =',I3,3X,'MULT. =',I3,3X,'SP.REDM-501
     1-O. =',I3,6X,'MATRIX ELEMENT',1P,D15.6)                           REDM-502
 1007 FORMAT (4I5,F20.12)                                               REDM-503
 1008 FORMAT (//5X,' CORRESPONDENCE TO MULTIPOLES:'//(20X,'N =',I3,5X,'LREDM-504
     1 =',I3,5X,'2*S =',I3,5X,'2*J =',I3))                              REDM-505
 1009 FORMAT (//4X,' CORRESPONDENCE TO FORM FACTORS IN THEIR COMPUTATIONREDM-506
     1:'//(10X,'N =',I3,4X,'F.F. =',I6,4X,'MULT. =',I4,4X,'SP.-O. =',I4,REDM-507
     24X,'COUL =',I4,4X,'SPDO =',I4,4X,'COR =',I4,4X,'L =',I4))         REDM-508
 1010 FORMAT (//4X,' CORRESPONDENCE TO FORM FACTORS IN THEIR USE:'//(10XREDM-509
     1,'N =',I3,4X,'ABOVE =',I4,4X,'DISP. =',I4,4X,'SP.-O. =',I4,4X,'L =REDM-510
     2',I4))                                                            REDM-511
 1011 FORMAT (//' INCORRECT ORDER OF INPUT FOR REDUCED MATRIX ELEMENTS :REDM-512
     1',2I6,' INSTEAD OF',2I6)                                          REDM-513
 1012 FORMAT (//' A MAGNETIC COULOMB INTERACTION CANNOT BE USED IF THE CREDM-514
     1OULOMB INTERACTION IS NOT DEFORMED:',I3)                          REDM-515
 1013 FORMAT (/' MULTIPOLE ORDER',I4,' NOT OF THE SAME PARITY AS',2I4)  REDM-516
 1014 FORMAT (' ERROR FOR HARMONIC VIBRATIONAL MODEL.')                 REDM-517
 1015 FORMAT (' ERROR FOR ANHARMONIC VIBRATIONAL MODEL.')               REDM-518
 1016 FORMAT (' ERROR FOR SYMMETRIC ROTATIONAL MODEL.')                 REDM-519
 1017 FORMAT (' ERROR FOR ASYMMETRIC ROTATIONAL MODEL.')                REDM-520
 1018 FORMAT (/' 2*S =',I4,' INCORRECT BETWEEN CHANNELS WITH 2*S =',2I4)REDM-521
 1019 FORMAT (/' LAST FORM FACTOR IDENTIFICATION',I3,'  NEW FORM FACTOR REDM-522
     1IDENTIFICATION',I3,'  TOO LARGE.')                                REDM-523
 1020 FORMAT (/' LAST FORM FACTOR IDENTIFICATION',I3,'  WAS NOT ALREADY REDM-524
     1READ WITH THIS SIGN.')                                            REDM-525
 1021 FORMAT (/' 2*J =',I4,' INCORRECT WITH L =',I4,' AND 2*S =',I4)    REDM-526
 1022 FORMAT (/' J-VALUE =',I4,'  USED AS DEFORMED SPIN-ORBIT CONTROL INREDM-527
     1CORRECT. LIMIT:',I2)                                              REDM-528
 1023 FORMAT (/' 2*TRANSFER OF ANG. MOMENTUM',I4,' NOT BETWEEN',I4,' ANDREDM-529
     1',I4)                                                             REDM-530
 1024 FORMAT (//' IN REDM  ...  STOP  ...')                             REDM-531
      END                                                               REDM-532
C 15/08/12                                                      ECIS12  VIBM-000
      SUBROUTINE VIBM(NIV,IQ,T,IPI,NCOLL,IT,IPH,NVAR,VAR,NBETA,FAC,IDT,LVIBM-001
     1O)                                                                VIBM-002
C NUCLEAR REDUCED MATRIX ELEMENTS FOR THE HARMONIC VIBRATIONAL MODEL.   VIBM-003
C INPUT:     IPI(J,*):PARITY OF NUCLEAR STATES FOR J=1,                 VIBM-004
C                     MULTIPLICITY OF THE PARTICLE FOR J=2,             VIBM-005
C                     MULTIPLICITY OF THE TARGET FOR J=3.               VIBM-006
C            NCOLL:   NUMBER OF COUPLED STATES                          VIBM-007
C            IPH(I,J):DESCRIPTION OF VIBRATIONAL MODEL FOR LEVEL J:     VIBM-008
C                     NUMBER OF PHONONS (0, 1, 2 PHONONS OR 3 FOR       VIBM-009
C                     MIXTURE OF 1 AND 2 PHONONS STATES) FOR I=1.       VIBM-010
C                     ADDRESS OF THE DESCRIPTION OF TWO PHONONS AND     VIBM-011
C                     MIXED STATES WHICH ARE IN THE NVAR,VAR FOR I=2.   VIBM-012
C            NVAR,VAR:EQUIVALENT BY CALL, 1 AND 2 PHONONS MIXING        VIBM-013
C                     COEFFICIENTS.                                     VIBM-014
C            NBETA:   QUANTUM NUMBERS OF DEFORMATIONS IN NBETA(17,*),   VIBM-015
C                     0 IN NBETA(18,*) TO BE USED IN SECOND ORDER       VIBM-016
C                     MONOPOLE CORRECTION, ANYTHING NOT TO BE USED/     VIBM-017
C            NBT1:    NUMBER OF PHONONS.                                VIBM-018
C            FAC:     TABLE AND NUMBER OF LOGARITHMS OF FACTORIALS.     VIBM-019
C            IDT:     LENGTH AVAILABLE IN THIS SUBROUTINE.              VIBM-020
C            LO(I):   LOGICAL CONTROLS:                                 VIBM-021
C               LO(2)  =.TRUE. SECOND ORDER VIBRATIONAL OR CONSTRAINED  VIBM-022
C                              ASYMMETRIC ROTATIONAL MODEL.             VIBM-023
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      VIBM-024
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. VIBM-025
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   VIBM-026
C               LO(117)=.TRUE. FOR ALL CALCULATIONS EXCEPT THE FIRST.   VIBM-027
C OUTPUT:    NIV:     NUMBER AND REFERENCES OF INTERACTION FORM FACTORS VIBM-028
C                     BETWEEN EACH CHANNELS. NIV(I1,I2,K): FIRST I OF   VIBM-029
C                     T(3,I) FOR THE PAIR OF NUCLEAR STATES I1,I2 FOR   VIBM-030
C                     K=1 AND LAST ONE FOR K=2.                         VIBM-031
C            IQ,T:    EQUIVALENT BY CALL OF IQ(6,I) AND T(3,I).         VIBM-032
C            IT:      NUMBER OF NUCLEAR MATRIX ELEMENTS IN IQ,T. FOR A  VIBM-033
C                     GIVEN VALUE OF I:                                 VIBM-034
C                     IQ(1,I): REFERENCE TO TABLE OF FORM FACTORS:      VIBM-035
C                              I FOR BETA(I) AND I+J*(NBT1+1) FOR       VIBM-036
C                              BETA(I)*BETA(J) WITH J LARGER THAN I IN  VIBM-037
C                              THE HARMONIC VIBRATIONAL MODEL (ORDER OF VIBM-038
C                              DERIVATIVE IN THE ANHARMONIC VIBRATIONAL VIBM-039
C                              MODEL)                                   VIBM-040
C                     IQ(2,I): REFERENCE TO TABLE OF ANGULAR MOMENTA,   VIBM-041
C                     IQ(3,I): ADDRESS OF THE ASSOCIATED SPIN-ORBIT FORMVIBM-042
C                              FACTOR OR 0,                             VIBM-043
C                     IQ(4,I): UNUSED,                                  VIBM-044
C                     T(3,I):  REDUCED NUCLEAR MATRIX ELEMENT MULTIPLIEDVIBM-045
C                              BY (-)**(L/2) WHERE L IS THE TRANSFERRED VIBM-046
C                              ANGULAR MOMENTUM                         VIBM-047
C                                                                       VIBM-048
C***********************************************************************VIBM-049
C  THE DEFORMATIONS BETA AND FACTORS 1/SQRT(4*PI) ARE NOT INCLUDED IN   VIBM-050
C THE MATRIX ELEMENTS WHICH ARE COMPUTED HERE. THE FULL EXPRESSIONS ARE:VIBM-051
C (0||Q2||0) = SUM ON BETA**2/(4*PI) WITH IQ=0,                         VIBM-052
C (0||Q1||I) = (-)**I BETA(I)/SQRT(4*PI) WITH IQ=I,                     VIBM-053
C (I||Q1||0) SAME VALUE WITHOUT (-)**I,                                 VIBM-054
C (IP||Q2||I) = (-)**I BETA(I)*BETA(IP)*DJCG(I,IP,0,0|IQ,0)/(2*PI)      VIBM-055
C    PLUS SUM ON BETA**2*SQRT(2*I+1)/(4*PI) WITH IQ=0 WHEN I=IP,        VIBM-056
C (0||Q2||L1,L2,I) = (-)**I BETA(L1)*BETA(L2) DJCG(L1,L2,0,0|I,0)/      VIBM-057
C    (2*PI*SQRT(1+DELTA(L1,L2)))   WITH IQ=I,                           VIBM-058
C (L1,L2,I||Q2||0) SAME VALUE WITHOUT (-)**I,                           VIBM-059
C (IP||Q1||L1,L2,I) = (-)**IQ BETA(*)*(DELTA(IQ,L1)*DELTA(IP,L2)+(-)**  VIBM-060
C    (IP+I+IQ)*DELTA(IQ,L2)*DELTA(IP,L1)) * SQRT((2*I+1)/((2*IQ+1)*     VIBM-061
C    (1+DELTA(L1,L2))*SQRT(4*PI)),                                      VIBM-062
C (L1,L2,I||Q1||IP) SAME EXPRESSION BUT WITH (-)**IP+I+IQ  IN FRONT,    VIBM-063
C (L3,L4,IP||Q2||L1,L2,I)  SUM ON BETA**2*(DELTA(L1,L3)*DELTA(L2,L4)+   VIBM-064
C    (-)**(L1+L2-I)*DELTA(L1,L4)*DELTA(L2,L3)) * SQRT(2*IP+1)/(4*PI*SQRTVIBM-065
C    ((1+DELTA(L1,L2))*(1+DELTA(L3,L4))) WITH IQ=0,WHEN I=IP            VIBM-066
C    PLUS,WHEN TWO PHONONS ARE IDENTICAL,SUM WITH ALL THE POSSIBLE VA-  VIBM-067
C    LUES FOR IQ OF BETA(L5)*BETA(L6)*DJCG(L5,L6,0,0|IQ,0)*DJ6J(L6,IP,  VIBM-068
C    L7,I,L5,IQ) * SQRT((2*I+1)*(2*IP+1))/(2*PI*SQRT((1+DELTA(L1,L2)*(1+VIBM-069
C    DELTA(L3,L4))   WHERE  L7 IS THE COMMON PHONON ,L5 AND L6 THE OTHERVIBM-070
C    PHONONS IN I AND IP, MULTIPLIED BY THE PHASE:                      VIBM-071
C      *(-)**(IP-L1)   IF L1=L3,        *(-)**(L3)       IF L1=L4,      VIBM-072
C      *(-)**(IP+L1-I) IF L2=L3,      *(-)**(L1+L3+L4-I) IF L2=L4.      VIBM-073
C (J||L=IQ||I) IS MULTIPLIED BY A PHASE (-)**((IQ+IPI(I)-IPI(J))/2)     VIBM-074
C AND THE FACTORS BETA/SQRT(4*PI) ARE SHIFTED ON THE FORM FACTORS.      VIBM-075
C                                                                       VIBM-076
C FOR THE COMMON  /COUPL/ SEE CALX.                                     VIBM-077
C                                                                       VIBM-078
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     VIBM-079
C  NBT1:      NUMBER OF PHONONS (VIBRATIONS).                           VIBM-080
C  NFA:       NUMBER OF LOGARITHMS OF FACTORIALS.                       VIBM-081
C  NVA:       NUMBER OF NUCLEAR PARAMETERS.                             VIBM-082
C   USED:     NBT1,NFA,NVA.                                             VIBM-083
C                                                                       VIBM-084
C***********************************************************************VIBM-085
      IMPLICIT REAL*8 (A-H,O-Z)                                         VIBM-086
      LOGICAL LIB(4),LO(150)                                            VIBM-087
      DIMENSION NIV(NCOLL,NCOLL,*),IQ(6,*),T(3,*),IPI(11,*),IPH(2,*),NVAVIBM-088
     1R(2,*),VAR(*),NBETA(18,*),FAC(*),IA(6,4),B(4),AA(2,2)             VIBM-089
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   VIBM-090
      COMMON /INOUT/ MR,MW,MS                                           VIBM-091
      IT=1                                                              VIBM-092
      NSP=0                                                             VIBM-093
      IF (LO(13).OR.LO(14).OR.LO(19)) NSP=10                            VIBM-094
      DO 39 I1=1,NCOLL                                                  VIBM-095
      AA(1,1)=1.D0                                                      VIBM-096
      AA(1,2)=0.D0                                                      VIBM-097
      IF (IPH(1,I1).LE.2) GO TO 1                                       VIBM-098
      JVAR=IPH(2,I1)+1                                                  VIBM-099
      IVAR=NVAR(2,JVAR)                                                 VIBM-100
      AY=1.74532925D-02*VAR(IVAR)                                       VIBM-101
      AA(1,1)=DCOS(AY)                                                  VIBM-102
      AA(1,2)=DSIN(AY)                                                  VIBM-103
      IF (.NOT.LO(117)) WRITE (MW,1000) I1,VAR(IVAR),AA(1,1),AA(1,2)    VIBM-104
    1 AA(2,1)=AA(1,1)                                                   VIBM-105
      AA(2,2)=AA(1,2)                                                   VIBM-106
      DO 38 I2=I1,NCOLL                                                 VIBM-107
      IF (I1.EQ.I2) GO TO 2                                             VIBM-108
      AA(2,1)=1.D0                                                      VIBM-109
      AA(2,2)=0.D0                                                      VIBM-110
      IF (IPH(1,I2).LE.2) GO TO 2                                       VIBM-111
      IVAR=IPH(2,I2)+1                                                  VIBM-112
      JVAR=NVAR(2,IVAR)                                                 VIBM-113
      IF (JVAR.GT.NVA) GO TO 40                                         VIBM-114
      AY=1.74532925D-02*VAR(JVAR)                                       VIBM-115
      AA(2,1)=DCOS(AY)                                                  VIBM-116
      AA(2,2)=DSIN(AY)                                                  VIBM-117
    2 NIV(I1,I2,1)=IT                                                   VIBM-118
      L1=IPH(1,I1)                                                      VIBM-119
      AX=AA(1,1)                                                        VIBM-120
      IF (L1.GT.2) L1=1                                                 VIBM-121
      IF (DABS(AX).LT.1.D-6) GO TO 27                                   VIBM-122
    3 L2=IPH(1,I2)                                                      VIBM-123
      IF (L2.GT.2) L2=1                                                 VIBM-124
      AY=AX*AA(2,1)                                                     VIBM-125
      IF (DABS(AY).LT.1.D-6) GO TO 26                                   VIBM-126
    4 I=L1+L2+1                                                         VIBM-127
      IF (I.EQ.3.AND.L1.NE.L2) I=6                                      VIBM-128
      IF (L1.GT.L2) GO TO 5                                             VIBM-129
      J1=I1                                                             VIBM-130
      J2=I2                                                             VIBM-131
      GO TO 6                                                           VIBM-132
    5 J1=I2                                                             VIBM-133
      J2=I1                                                             VIBM-134
C  TRANSPOSITION.                                                       VIBM-135
      AY=AY*DFLOAT(1-MOD(IPI(3,I1)+IPI(3,I2)+2*(IPI(1,I1)+IPI(1,I2)+1),4VIBM-136
     1))                                                                VIBM-137
    6 GO TO ( 7 , 9 , 10 , 14 , 18 , 24 ) , I                           VIBM-138
C  (0||Q||0).                                                           VIBM-139
    7 IF ((IPI(3,J1).NE.1).OR.(IPI(3,J2).NE.1)) GO TO 41                VIBM-140
      IF (.NOT.LO(2)) GO TO 26                                          VIBM-141
      DO 8 L=1,NBT1                                                     VIBM-142
      IF (NBETA(18,L).NE.0) GO TO 8                                     VIBM-143
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT)                       VIBM-144
      IQ(1,IT)=L*(NBT1+2)                                               VIBM-145
      IQ(2,IT)=0                                                        VIBM-146
      IQ(3,IT)=NSP                                                      VIBM-147
      T(3,IT)=AY                                                        VIBM-148
      IT=IT+1                                                           VIBM-149
    8 CONTINUE                                                          VIBM-150
      GO TO 26                                                          VIBM-151
C  (IP||Q||0)  WITH IP=J2.                                              VIBM-152
    9 IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT)                       VIBM-153
      N2=IPH(2,J2)                                                      VIBM-154
      IF (IPH(1,J2).GT.2) N2=NVAR(1,N2+1)                               VIBM-155
      IF ((IPI(3,J2).NE.(2*NBETA(17,N2)+1)).OR.(IPI(3,J1).NE.1)) GO     VIBM-156
     1TO 41                                                             VIBM-157
      IQ(1,IT)=N2                                                       VIBM-158
      IQ(2,IT)=NBETA(17,N2)                                             VIBM-159
      IQ(3,IT)=NSP                                                      VIBM-160
      T(3,IT)=AY                                                        VIBM-161
      IF (MOD(IABS(IQ(2,IT)+IPI(1,J1)-IPI(1,J2)),4).NE.0) T(3,IT)=-T(3,IVIBM-162
     1T)                                                                VIBM-163
      GO TO 25                                                          VIBM-164
C  (IP||Q||I).                                                          VIBM-165
   10 IF (.NOT.LO(2)) GO TO 26                                          VIBM-166
      N1=IPH(2,J1)                                                      VIBM-167
      IF (IPH(1,J1).GT.2) N1=NVAR(1,N1+1)                               VIBM-168
      N2=IPH(2,J2)                                                      VIBM-169
      IF (IPH(1,J2).GT.2) N2=NVAR(1,N2+1)                               VIBM-170
      IF ((IPI(3,J2).NE.(2*NBETA(17,N2)+1)).OR.(IPI(3,J1).NE.(2*NBETA(17VIBM-171
     1,N1)+1))) GO TO 41                                                VIBM-172
      IF (N1.NE.N2) GO TO 12                                            VIBM-173
      AQ=DSQRT(DFLOAT(2*NBETA(17,N1)+1))                                VIBM-174
      DO 11 L=1,NBT1                                                    VIBM-175
      IF (NBETA(18,L).NE.0) GO TO 11                                    VIBM-176
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT)                       VIBM-177
      IQ(1,IT)=L*(NBT1+2)                                               VIBM-178
      IQ(2,IT)=0                                                        VIBM-179
      IQ(3,IT)=NSP                                                      VIBM-180
      T(3,IT)=AQ*AY                                                     VIBM-181
      IT=IT+1                                                           VIBM-182
   11 CONTINUE                                                          VIBM-183
C FACTOR 2 FOR NON IDENTICAL PHONONS ADDED ON THE 10/03/81.             VIBM-184
   12 K1=IABS(NBETA(17,N2)-NBETA(17,N1))+1                              VIBM-185
      K2=NBETA(17,N2)+NBETA(17,N1)+1                                    VIBM-186
      FS=DFLOAT(2*(1-2*MOD(NBETA(17,N1)+IABS(IPI(1,J1)-IPI(1,J2)+K1-1)/2VIBM-187
     1,2)))                                                             VIBM-188
      DO 13 K=K1,K2,2                                                   VIBM-189
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT)                       VIBM-190
      J=K-1                                                             VIBM-191
      AQ=FS*DJCG(IPI(3,J1)-1,IPI(3,J2)-1,2*J,0,0,FAC,NFA)               VIBM-192
      IQ(1,IT)=MAX0(N1,N2)*(NBT1+1)+MIN0(N1,N2)                         VIBM-193
      IQ(2,IT)=J                                                        VIBM-194
      IQ(3,IT)=NSP                                                      VIBM-195
      T(3,IT)=AQ*AY                                                     VIBM-196
      FS=-FS                                                            VIBM-197
   13 IT=IT+1                                                           VIBM-198
      GO TO 26                                                          VIBM-199
C  (L1,L2,IP||Q||I) WITH I=J1 AND IP=J2.                                VIBM-200
   14 I=IPH(2,J2)                                                       VIBM-201
      LB1=NVAR(1,I)                                                     VIBM-202
      LB2=NVAR(2,I)                                                     VIBM-203
      N1=IPH(2,J1)                                                      VIBM-204
      IF (IPH(1,J1).GT.2) N1=NVAR(1,N1+1)                               VIBM-205
      IF (IPI(3,J1).NE.(2*NBETA(17,N1)+1)) GO TO 41                     VIBM-206
      LIB(1)=LB1.EQ.N1                                                  VIBM-207
      LIB(2)=LB2.EQ.N1                                                  VIBM-208
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT)                       VIBM-209
      IF (LIB(1).AND.LIB(2)) GO TO 16                                   VIBM-210
      IF (LIB(2)) GO TO 15                                              VIBM-211
      IF (.NOT.LIB(1)) GO TO 26                                         VIBM-212
      IQ(1,IT)=LB2                                                      VIBM-213
      IQ(2,IT)=NBETA(17,LB2)                                            VIBM-214
      IQ(3,IT)=NSP                                                      VIBM-215
      T(3,IT)=AY*DFLOAT(1-2*MOD(IABS(IPI(1,J1)-IPI(1,J2)+IQ(2,IT))/2,2))VIBM-216
      GO TO 17                                                          VIBM-217
   15 IQ(1,IT)=LB1                                                      VIBM-218
      IQ(2,IT)=NBETA(17,LB1)                                            VIBM-219
      IQ(3,IT)=NSP                                                      VIBM-220
      T(3,IT)=AY*DFLOAT(1-MOD(IABS(IPI(3,J1)+IPI(3,J2)-2+IPI(1,J1)-IPI(1VIBM-221
     1,J2)-IQ(2,IT)),4))                                                VIBM-222
      GO TO 17                                                          VIBM-223
   16 IF (MOD(IPI(3,J2),4).NE.1) GO TO 26                               VIBM-224
      IQ(1,IT)=N1                                                       VIBM-225
      IQ(2,IT)=NBETA(17,N1)                                             VIBM-226
      IQ(3,IT)=NSP                                                      VIBM-227
      T(3,IT)=DSQRT(2.D0)*AY*DFLOAT(1-MOD(IABS(IPI(1,J1)-IPI(1,J2)+IQ(2,VIBM-228
     1IT)),4))                                                          VIBM-229
   17 T(3,IT)=T(3,IT)*DSQRT(DFLOAT(IPI(3,J2))/DFLOAT(2*IQ(2,IT)+1))     VIBM-230
      GO TO 25                                                          VIBM-231
C  (L3,L4,IP||Q||L1,L2,I).                                              VIBM-232
   18 IF (.NOT.LO(2)) GO TO 26                                          VIBM-233
      I=IPH(2,I1)                                                       VIBM-234
      LB1=NVAR(1,I)                                                     VIBM-235
      LB2=NVAR(2,I)                                                     VIBM-236
      I=IPH(2,I2)                                                       VIBM-237
      LB3=NVAR(1,I)                                                     VIBM-238
      LB4=NVAR(2,I)                                                     VIBM-239
      LIB(1)=LB1.NE.LB3                                                 VIBM-240
      LIB(2)=LB2.NE.LB4                                                 VIBM-241
      LIB(3)=LB1.NE.LB4                                                 VIBM-242
      LIB(4)=LB2.NE.LB3                                                 VIBM-243
      IF (LIB(1).AND.LIB(2).AND.LIB(3).AND.LIB(4)) GO TO 26             VIBM-244
      JA1=(IPI(3,J1)-1)/2                                               VIBM-245
      JA2=(IPI(3,J2)-1)/2                                               VIBM-246
      IA(1,1)=NBETA(17,LB2)                                             VIBM-247
      IA(2,1)=NBETA(17,LB4)                                             VIBM-248
      IA(1,2)=NBETA(17,LB1)                                             VIBM-249
      IA(2,2)=NBETA(17,LB3)                                             VIBM-250
      IA(1,3)=IA(1,1)                                                   VIBM-251
      IA(2,3)=IA(2,2)                                                   VIBM-252
      IA(1,4)=IA(1,2)                                                   VIBM-253
      IA(2,4)=IA(2,1)                                                   VIBM-254
      IA(3,1)=IA(1,2)                                                   VIBM-255
      IA(3,2)=IA(1,1)                                                   VIBM-256
      IA(3,3)=IA(1,2)                                                   VIBM-257
      IA(3,4)=IA(1,1)                                                   VIBM-258
      IA(6,1)=MAX0(LB2,LB4)*(NBT1+1)+MIN0(LB2,LB4)                      VIBM-259
      IA(6,2)=MAX0(LB1,LB3)*(NBT1+1)+MIN0(LB1,LB3)                      VIBM-260
      IA(6,3)=MAX0(LB2,LB3)*(NBT1+1)+MIN0(LB2,LB3)                      VIBM-261
      IA(6,4)=MAX0(LB1,LB4)*(NBT1+1)+MIN0(LB1,LB4)                      VIBM-262
      IMIN=1000                                                         VIBM-263
      IMAX=0                                                            VIBM-264
      DO 19 I=1,4                                                       VIBM-265
      IF (LIB(I)) GO TO 19                                              VIBM-266
      IA(4,I)=IABS(IA(1,I)-IA(2,I))                                     VIBM-267
      IA(5,I)=IA(1,I)+IA(2,I)                                           VIBM-268
      IF (IA(4,I).LT.IMIN) IMIN=IA(4,I)                                 VIBM-269
      IF (IA(5,I).GT.IMAX) IMAX=IA(5,I)                                 VIBM-270
   19 CONTINUE                                                          VIBM-271
      B(1)=DFLOAT(1-2*MOD(JA2+IA(1,2),2))                               VIBM-272
      B(2)=DFLOAT(1-2*MOD(IA(1,2)+IA(2,2)+IA(2,1)+JA1,2))               VIBM-273
      B(3)=DFLOAT(1-2*MOD(IA(2,2),2))                                   VIBM-274
      B(4)=DFLOAT(1-2*MOD(JA2+JA1+IA(1,2),2))                           VIBM-275
      T0=DSQRT(DFLOAT((2*JA1+1)*(2*JA2+1)))*2.D0                        VIBM-276
      IF (LB1.EQ.LB2) T0=DSQRT(0.5D0)*T0                                VIBM-277
      IF (LB3.EQ.LB4) T0=DSQRT(0.5D0)*T0                                VIBM-278
      IF (JA1.NE.JA2) GO TO 21                                          VIBM-279
      TKQ=0.D0                                                          VIBM-280
      IF ((LB1.EQ.LB3).AND.(LB2.EQ.LB4)) TKQ=1.D0                       VIBM-281
      IF ((LB1.EQ.LB4).AND.(LB2.EQ.LB3)) TKQ=TKQ+DFLOAT(1-2*MOD(JA1+IA(1VIBM-282
     1,1)+IA(1,2),2))                                                   VIBM-283
      IF (TKQ.EQ.0.D0) GO TO 21                                         VIBM-284
      IF (LB1.EQ.LB2) TKQ=0.5D0*TKQ                                     VIBM-285
      DO 20 L=1,NBT1                                                    VIBM-286
      IF (NBETA(18,L).NE.0) GO TO 20                                    VIBM-287
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT)                       VIBM-288
      IQ(1,IT)=L*(NBT1+2)                                               VIBM-289
      IQ(2,IT)=0                                                        VIBM-290
      IQ(3,IT)=NSP                                                      VIBM-291
      T(3,IT)=TKQ*DSQRT(2.D0*JA1+1.D0)*AY                               VIBM-292
      IT=IT+1                                                           VIBM-293
   20 CONTINUE                                                          VIBM-294
   21 IMIN=MAX0(IMIN,IABS(JA1-JA2))+1                                   VIBM-295
      IMAX=MIN0(IMAX,JA1+JA2)+1                                         VIBM-296
      DO 23 M=IMIN,IMAX                                                 VIBM-297
      J=M-1                                                             VIBM-298
      DO 22 K=1,4                                                       VIBM-299
      IF (LIB(K)) GO TO 22                                              VIBM-300
      IF ((J.LT.IA(4,K)).OR.(J.GT.IA(5,K)).OR.(MOD(J+IA(5,K),2).NE.0)) GVIBM-301
     1O TO 22                                                           VIBM-302
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT)                       VIBM-303
      T3=B(K)*DJ6J(2*IA(1,K),2*IA(2,K),2*J,2*JA2,2*JA1,2*IA(3,K),FAC,NFAVIBM-304
     1)*DJCG(2*IA(1,K),2*IA(2,K),2*J,0,0,FAC,NFA)*DFLOAT(1-MOD(IABS(IPI(VIBM-305
     21,J1)-IPI(1,J2)+J),4))                                            VIBM-306
      IF (DABS(T3).LT.1.D-6) GO TO 22                                   VIBM-307
      IQ(1,IT)=IA(6,K)                                                  VIBM-308
      IQ(2,IT)=J                                                        VIBM-309
      IQ(3,IT)=NSP                                                      VIBM-310
      T(3,IT)=T3*T0*AY                                                  VIBM-311
      IT=IT+1                                                           VIBM-312
   22 CONTINUE                                                          VIBM-313
   23 CONTINUE                                                          VIBM-314
      GO TO 26                                                          VIBM-315
C  (L1,L2,IP||Q||0) WITH IP=J2.                                         VIBM-316
   24 IF (.NOT.LO(2)) GO TO 26                                          VIBM-317
      K3=(IPI(3,J2)-1)/2                                                VIBM-318
      IQ(2,IT)=K3                                                       VIBM-319
      I=IPH(2,J2)                                                       VIBM-320
      K1=NVAR(1,I)                                                      VIBM-321
      K2=NVAR(2,I)                                                      VIBM-322
      IQ(1,IT)=MAX0(K1,K2)*(NBT1+1)+MIN0(K1,K2)                         VIBM-323
      IQ(3,IT)=NSP                                                      VIBM-324
      W1=2.D0                                                           VIBM-325
      IF (K1.EQ.K2) W1=DSQRT(W1)                                        VIBM-326
      T(3,IT)=AY*DJCG(2*NBETA(17,K1),2*NBETA(17,K2),IPI(3,J2)-1,0,0,FAC,VIBM-327
     1NFA)*DFLOAT(1-MOD(IABS(IPI(1,J1)-IPI(1,J2)+K3),4))*W1             VIBM-328
   25 IT=IT+1                                                           VIBM-329
   26 IF ((AA(2,2).EQ.0.D0).OR.(L2.EQ.2)) GO TO 27                      VIBM-330
      L2=2                                                              VIBM-331
      AY=AX*AA(2,2)                                                     VIBM-332
      GO TO 4                                                           VIBM-333
   27 IF ((AA(1,2).EQ.0.D0).OR.(L1.EQ.2)) GO TO 28                      VIBM-334
      L1=2                                                              VIBM-335
      AX=AA(1,2)                                                        VIBM-336
      GO TO 3                                                           VIBM-337
   28 ITI=NIV(I1,I2,1)                                                  VIBM-338
      IF (ITI.EQ.IT) GO TO 37                                           VIBM-339
      ITF=IT-1                                                          VIBM-340
      IF (ITF.EQ.ITI) GO TO 32                                          VIBM-341
      IT1=ITI+1                                                         VIBM-342
      IT=ITI                                                            VIBM-343
      DO 31 I=IT1,ITF                                                   VIBM-344
      DO 29 J=ITI,IT                                                    VIBM-345
      IF ((IQ(1,I).NE.IQ(1,J)).OR.(IQ(2,I).NE.IQ(2,J)).OR.(IQ(3,I).NE.IQVIBM-346
     1(3,J))) GO TO 29                                                  VIBM-347
      T(3,J)=T(3,J)+T(3,I)                                              VIBM-348
      GO TO 31                                                          VIBM-349
   29 CONTINUE                                                          VIBM-350
      IT=IT+1                                                           VIBM-351
      DO 30 K=1,3                                                       VIBM-352
   30 IQ(K,IT)=IQ(K,I)                                                  VIBM-353
      T(3,IT)=T(3,I)                                                    VIBM-354
   31 CONTINUE                                                          VIBM-355
      IT=IT+1                                                           VIBM-356
   32 ITF=IT-1                                                          VIBM-357
      DO 36 I=ITI,ITF                                                   VIBM-358
      IF (IT.LE.I) GO TO 37                                             VIBM-359
   33 IF (DABS(T(3,I)).GT.1.D-12) GO TO 36                              VIBM-360
      IT1=I+1                                                           VIBM-361
      IT=IT-1                                                           VIBM-362
      IF (IT1.GT.IT) GO TO 37                                           VIBM-363
      DO 35 J=IT1,IT                                                    VIBM-364
      DO 34 K=1,3                                                       VIBM-365
   34 IQ(K,J-1)=IQ(K,J)                                                 VIBM-366
   35 T(3,J-1)=T(3,J)                                                   VIBM-367
      GO TO 33                                                          VIBM-368
   36 CONTINUE                                                          VIBM-369
   37 NIV(I1,I2,2)=IT-1                                                 VIBM-370
   38 CONTINUE                                                          VIBM-371
   39 CONTINUE                                                          VIBM-372
      IT=IT-1                                                           VIBM-373
      RETURN                                                            VIBM-374
   40 WRITE (MW,1001) JVAR,NVA                                          VIBM-375
      GO TO 42                                                          VIBM-376
   41 WRITE (MW,1002) I1,I2                                             VIBM-377
   42 WRITE (MW,1003)                                                   VIBM-378
      STOP                                                              VIBM-379
 1000 FORMAT (' STATE',I4,F15.5,' DEGREES      AMPLITUDES =',F15.7,'  1 VIBM-380
     1PHONON AND',F15.7,'  2 PHONONS.')                                 VIBM-381
 1001 FORMAT (' NUMBER OF VARIABLES USED:',I5,5X,'EXCEEDS NUMBER OF VARIVIBM-382
     1ABLES READ:',I6)                                                  VIBM-383
 1002 FORMAT (' INCORRECT DESCRIPTION OF LEVEL',I3,'  OR',I3)           VIBM-384
 1003 FORMAT (//' IN VIBM  ...  STOP  ...')                             VIBM-385
      END                                                               VIBM-386
C 15/08/12                                                      ECIS12  ROTM-000
      SUBROUTINE ROTM(NIV,IQ,T,IPI,NCOLL,IPH,NBETA,NVAR,VAR,IT,FAC,IDT,LROTM-001
     1O)                                                                ROTM-002
C NUCLEAR REDUCED MATRIX ELEMENTS FOR THE SYMMETRIC ROTATIONAL MODEL.   ROTM-003
C INPUT:     IPI(J,*):PARITY OF NUCLEAR STATES FOR J=1,                 ROTM-004
C                     MULTIPLICITY OF THE PARTICLE FOR J=2,             ROTM-005
C                     MULTIPLICITY OF THE TARGET FOR J=3.               ROTM-006
C            NCOLL:   NUMBER OF COUPLED STATES                          ROTM-007
C            IPH:     DESCRIPTION OF VIBRATIONAL MODEL (SEE VIBM).      ROTM-008
C            NBETA:   L QUANTUM NUMBERS OF DEFORMATIONS IN NBETA(17,*), ROTM-009
C                     K QUANTUM NUMBERS OF DEFORMATIONS IN NBETA(18,*),.ROTM-010
C            NVAR,VAR:EQUIVALENT BY CALL, MIXTURE COEFFICIENTS OF BANDS.ROTM-011
C                     MODEL.                                            ROTM-012
C            FAC:     TABLE AND NUMBER OF LOGARITHMS OF FACTORIALS.     ROTM-013
C            IDT:     LENGTH AVAILABLE IN THIS SUBROUTINE.              ROTM-014
C            LO(I):   LOGICAL CONTROLS:                                 ROTM-015
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      ROTM-016
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. ROTM-017
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   ROTM-018
C               LO(117)=.TRUE. FOR ALL CALCULATIONS EXCEPT THE FIRST.   ROTM-019
C OUTPUT:    NIV:     NUMBER AND REFERENCES OF INTERACTION FORM FACTORS ROTM-020
C                     BETWEEN EACH CHANNELS. NIV(I1,I2,K): FIRST I OF   ROTM-021
C                     T(3,I) FOR THE PAIR OF NUCLEAR STATES I1,I2 FOR   ROTM-022
C                     K=1 AND LAST ONE FOR K=2.                         ROTM-023
C            IQ,T:    EQUIVALENT BY CALL OF IQ(6,I) AND T(3,I).         ROTM-024
C            IT:      NUMBER OF NUCLEAR MATRIX ELEMENTS IN IQ,T. FOR A  ROTM-025
C                     GIVEN VALUE OF I:                                 ROTM-026
C                     IQ(1,I): REFERENCE TO TABLE OF FORM FACTORS,      ROTM-027
C                              THE CONTROL NUMBER FOR THE FORM FACTOR   ROTM-028
C                              WITH THE VIBRATION N1 AND THE            ROTM-029
C                              MULTIPOLARITY L IS 1000*(L+1)+N1.        ROTM-030
C                     IQ(2,I): REFERENCE TO TABLE OF ANGULAR MOMENTA,   ROTM-031
C                     IQ(3,I): ADDRESS OF THE ASSOCIATED SPIN-ORBIT FORMROTM-032
C                              FACTOR OR 0,                             ROTM-033
C                     IQ(4,I): UNUSED,                                  ROTM-034
C                     T(3,I):  REDUCED NUCLEAR MATRIX ELEMENT:          ROTM-035
C                     (IP||Q||I)=SQRT(2*I+1)*CG(I,IQ,IP,K,0,K),         ROTM-036
C                     (IP+V||Q||I)=SQRT(2*I+1)*CG(I,IQ,IP,K,V,K+V),     ROTM-037
C                     (IP+V||Q||I+V)=SQRT(2*I+1)*CG(I,IQ,IP,K+V,0,K+V). ROTM-038
C                                                                       ROTM-039
C FOR THE COMMON  /COUPL/ SEE CALX.                                     ROTM-040
C                                                                       ROTM-041
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     ROTM-042
C  IQMAX:     MAXIMUM L-EXPANSION IN ROTATIONAL MODEL.                  ROTM-043
C  NFA:       NUMBER OF LOGARITHMS OF FACTORIALS.                       ROTM-044
C  NSPIN:     TWICE THE K-VALUE OF THE ROTATIONAL BAND.                 ROTM-045
C  NVA:       NUMBER OF NUCLEAR PARAMETERS.                             ROTM-046
C   USED:     IQMAX,NFA,NSPIN,NVA.                                      ROTM-047
C                                                                       ROTM-048
C***********************************************************************ROTM-049
      IMPLICIT REAL*8 (A-H,O-Z)                                         ROTM-050
      LOGICAL LO(150)                                                   ROTM-051
      DIMENSION NIV(NCOLL,NCOLL,*),IQ(6,*),T(3,*),IPI(11,*),IPH(2,*),NBEROTM-052
     1TA(18,*),NVAR(2,*),VAR(*),FAC(*),AA(2,2)                          ROTM-053
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   ROTM-054
      COMMON /INOUT/ MR,MW,MS                                           ROTM-055
      IT=1                                                              ROTM-056
      NSP=0                                                             ROTM-057
      IF (LO(13).OR.LO(14).OR.LO(19)) NSP=10                            ROTM-058
      DO 24 I1=1,NCOLL                                                  ROTM-059
      IA1=IPI(3,I1)-1                                                   ROTM-060
      AA(1,1)=1.D0                                                      ROTM-061
      AA(1,2)=0.D0                                                      ROTM-062
      IF (IPH(1,I1).LE.1) GO TO 1                                       ROTM-063
      JVAR=IPH(2,I1)                                                    ROTM-064
      IVAR=NVAR(2,JVAR)                                                 ROTM-065
      AY=1.74532925D-02*VAR(IVAR)                                       ROTM-066
      AA(1,1)=DCOS(AY)                                                  ROTM-067
      AA(1,2)=DSIN(AY)                                                  ROTM-068
      IF (.NOT.LO(117)) WRITE (MW,1000) I1,VAR(IVAR),AA(1,1),AA(1,2)    ROTM-069
    1 AA(2,1)=AA(1,1)                                                   ROTM-070
      AA(2,2)=AA(1,2)                                                   ROTM-071
      DO 23 I2=I1,NCOLL                                                 ROTM-072
      IA2=IPI(3,I2)-1                                                   ROTM-073
      IF (I1.EQ.I2) GO TO 2                                             ROTM-074
      AA(2,1)=1.D0                                                      ROTM-075
      AA(2,2)=0.D0                                                      ROTM-076
      IF (IPH(1,I2).LE.1) GO TO 2                                       ROTM-077
      IVAR=IPH(2,I2)                                                    ROTM-078
      JVAR=NVAR(2,IVAR)                                                 ROTM-079
      IF (JVAR.GT.NVA) GO TO 25                                         ROTM-080
      AY=1.74532925D-02*VAR(JVAR)                                       ROTM-081
      AA(2,1)=DCOS(AY)                                                  ROTM-082
      AA(2,2)=DSIN(AY)                                                  ROTM-083
    2 NIV(I1,I2,1)=IT                                                   ROTM-084
      L1=IPH(1,I1)                                                      ROTM-085
      AX=AA(1,1)                                                        ROTM-086
      IF (L1.GT.1) L1=0                                                 ROTM-087
      IF (DABS(AX).LT.1.D-6) GO TO 12                                   ROTM-088
    3 L2=IPH(1,I2)                                                      ROTM-089
      IF (L2.GT.1) L2=0                                                 ROTM-090
      AY=AX*AA(2,1)                                                     ROTM-091
      IF (DABS(AY).LT.1.D-6) GO TO 11                                   ROTM-092
    4 IF (L1.NE.L2) GO TO 7                                             ROTM-093
      NSJ=NSPIN                                                         ROTM-094
      IF (L1.EQ.0) GO TO 5                                              ROTM-095
      N3=IPH(2,I1)                                                      ROTM-096
      IF (N3.NE.IPH(2,I2)) GO TO 11                                     ROTM-097
      NSJ=2*NBETA(18,N3)+NSJ                                            ROTM-098
    5 IF (IPI(1,I1).NE.IPI(1,I2)) GO TO 26                              ROTM-099
      IF ((IABS(NSJ).GT.IA2).OR.(IABS(NSJ).GT.IA1)) GO TO 27            ROTM-100
      IQ1=MIN0(IQMAX,(IA1+IA2)/2)                                       ROTM-101
      IQ2=MAX0(2,IABS(IA1-IA2)/2)                                       ROTM-102
      IF (2*(IQ2/2).NE.IQ2) IQ2=IQ2+1                                   ROTM-103
      IF (IQ2.GT.IQ1) GO TO 11                                          ROTM-104
      DO 6 IQZ=IQ2,IQ1,2                                                ROTM-105
      IF (2*IT.GT.IDT) CALL MEMO('ROTM',IDT,2*IT)                       ROTM-106
      IQ(1,IT)=1000*(IQZ+1)                                             ROTM-107
      IQ(2,IT)=IQZ                                                      ROTM-108
      IQ(3,IT)=NSP                                                      ROTM-109
      T(3,IT)=DFLOAT(1-MOD(IQZ,4))*DSQRT(IA1+1.D0)*DJCG(IA1,2*IQZ,IA2,NSROTM-110
     1J,0,FAC,NFA)*AY                                                   ROTM-111
      IF (DABS(T(3,IT)).GT.1.D-6) IT=IT+1                               ROTM-112
    6 CONTINUE                                                          ROTM-113
      GO TO 11                                                          ROTM-114
    7 IF (L1.GT.L2) GO TO 8                                             ROTM-115
      N3=IPH(2,I2)                                                      ROTM-116
      GO TO 9                                                           ROTM-117
C  TRANSPOSITION.                                                       ROTM-118
    8 AY=AY*DFLOAT(1-MOD(IPI(3,I1)+IPI(3,I2)+2*(IPI(1,I1)+IPI(1,I2)+1),4ROTM-119
     1))                                                                ROTM-120
      N3=IPH(2,I1)                                                      ROTM-121
C 0 PHONONS -1 PHONON.                                                  ROTM-122
    9 NSJ=2*NBETA(18,N3)                                                ROTM-123
      IF (MOD(IPI(1,I1)+IPI(1,I2)+NBETA(17,N3),2).NE.0) GO TO 28        ROTM-124
      IF (IABS(NSJ+NSPIN).GT.IA2) GO TO 27                              ROTM-125
      IQ1=(IA1+IA2)/2                                                   ROTM-126
      IQ2=MAX0(IABS(NSJ),IABS(IA1-IA2))/2                               ROTM-127
      IF (MOD(IQ2+NBETA(17,N3),2).NE.0) IQ2=IQ2+1                       ROTM-128
      IF (IQ2.GT.IQ1) GO TO 11                                          ROTM-129
      DO 10 IQZ=IQ2,IQ1,2                                               ROTM-130
      IF (3*IT.GT.IDT) CALL MEMO('ROTM',IDT,3*IT)                       ROTM-131
      IQ(1,IT)=1000*(IQZ+1)+N3                                          ROTM-132
      IQ(2,IT)=IQZ                                                      ROTM-133
      IQ(3,IT)=NSP                                                      ROTM-134
      T(3,IT)=DFLOAT(1-MOD(IQZ+IPI(1,I1)+IPI(1,I2),4))*DSQRT(IA1+1.D0)*DROTM-135
     1JCG(IA1,2*IQZ,IA2,NSPIN,NSJ,FAC,NFA)*AY                           ROTM-136
      IF (DABS(T(3,IT)).GT.1.D-6) IT=IT+1                               ROTM-137
   10 CONTINUE                                                          ROTM-138
   11 IF ((AA(2,2).EQ.0.D0).OR.(L2.EQ.1)) GO TO 12                      ROTM-139
      L2=1                                                              ROTM-140
      AY=AX*AA(2,2)                                                     ROTM-141
      GO TO 4                                                           ROTM-142
   12 IF ((AA(1,2).EQ.0.D0).OR.(L1.EQ.1)) GO TO 13                      ROTM-143
      L1=1                                                              ROTM-144
      AX=AA(1,2)                                                        ROTM-145
      GO TO 3                                                           ROTM-146
   13 ITI=NIV(I1,I2,1)                                                  ROTM-147
      IF (ITI.EQ.IT) GO TO 22                                           ROTM-148
      ITF=IT-1                                                          ROTM-149
      IF (ITF.EQ.ITI) GO TO 17                                          ROTM-150
      IT1=ITI+1                                                         ROTM-151
      IT=ITI                                                            ROTM-152
      DO 16 I=IT1,ITF                                                   ROTM-153
      DO 14 J=ITI,IT                                                    ROTM-154
      IF ((IQ(1,I).NE.IQ(1,J)).OR.(IQ(2,I).NE.IQ(2,J)).OR.(IQ(3,I).NE.IQROTM-155
     1(3,J))) GO TO 14                                                  ROTM-156
      T(3,J)=T(3,J)+T(3,I)                                              ROTM-157
      GO TO 16                                                          ROTM-158
   14 CONTINUE                                                          ROTM-159
      IT=IT+1                                                           ROTM-160
      DO 15 K=1,3                                                       ROTM-161
   15 IQ(K,IT)=IQ(K,I)                                                  ROTM-162
      T(3,IT)=T(3,I)                                                    ROTM-163
   16 CONTINUE                                                          ROTM-164
      IT=IT+1                                                           ROTM-165
   17 ITF=IT-1                                                          ROTM-166
      DO 21 I=ITI,ITF                                                   ROTM-167
      IF (IT.LE.I) GO TO 22                                             ROTM-168
   18 IF (DABS(T(3,I)).GT.1.D-12) GO TO 21                              ROTM-169
      IT1=I+1                                                           ROTM-170
      IT=IT-1                                                           ROTM-171
      IF (IT1.GT.IT) GO TO 22                                           ROTM-172
      DO 20 J=IT1,IT                                                    ROTM-173
      DO 19 K=1,3                                                       ROTM-174
   19 IQ(K,J-1)=IQ(K,J)                                                 ROTM-175
   20 T(3,J-1)=T(3,J)                                                   ROTM-176
      GO TO 18                                                          ROTM-177
   21 CONTINUE                                                          ROTM-178
   22 NIV(I1,I2,2)=IT-1                                                 ROTM-179
   23 CONTINUE                                                          ROTM-180
   24 CONTINUE                                                          ROTM-181
      IT=IT-1                                                           ROTM-182
      RETURN                                                            ROTM-183
   25 WRITE (MW,1001) JVAR,NVA                                          ROTM-184
      GO TO 29                                                          ROTM-185
   26 WRITE (MW,1002) I1,I2                                             ROTM-186
      GO TO 29                                                          ROTM-187
   27 WRITE (MW,1003) I1,I2                                             ROTM-188
      GO TO 29                                                          ROTM-189
   28 WRITE (MW,1004) I1,I2,N3                                          ROTM-190
      GO TO 29                                                          ROTM-191
   29 WRITE (MW,1005)                                                   ROTM-192
      STOP                                                              ROTM-193
 1000 FORMAT (' STATE',I4,F15.5,' DEGREES      AMPLITUDES =',F15.7,' GROROTM-194
     1UND STATE BAND AND',F15.5,' VIBRATIONAL BAND.')                   ROTM-195
 1001 FORMAT (' NUMBER OF VARIABLES USED:',I5,5X,'EXCEEDS NUMBER OF VARIROTM-196
     2ABLES READ:',I6)                                                  ROTM-197
 1002 FORMAT (/' PARITIES OF STATES',I4,'  AND',I4,'  INCORRECT FOR THE ROTM-198
     1ROTATIONAL MODEL.')                                               ROTM-199
 1003 FORMAT (' TOO LARGE MAGNETIC QUANTUM NUMBER BETWEEN LEVELS',I4,' AROTM-200
     1ND',I4)                                                           ROTM-201
 1004 FORMAT (/' PARITIES OF STATES',I4,'  AND',I4,'  INCORRECT FOR THE ROTM-202
     1ROTATIONAL MODEL WITH THE VIBRATION',I4)                          ROTM-203
 1005 FORMAT (//' IN ROTM  ...  STOP  ...')                             ROTM-204
      END                                                               ROTM-205
C 15/06/12                                                      ECIS12  ROAM-000
      SUBROUTINE ROAM(NIV,IQ,T,IPI,NCOLL,IT,BETA,IPH,VAR,VA,FAC,IDT,LO) ROAM-001
C NUCLEAR REDUCED MATRIX ELEMENTS FOR THE ASYMMETRIC ROTATIONAL MODEL.  ROAM-002
C INPUT:     IPI(J,*):PARITY OF NUCLEAR STATES FOR J=1,                 ROAM-003
C                     MULTIPLICITY OF THE PARTICLE FOR J=2,             ROAM-004
C                     MULTIPLICITY OF THE TARGET FOR J=3.               ROAM-005
C            NCOLL:   NUMBER OF COUPLED STATES                          ROAM-006
C            BETA:    DEFORMATIONS FOR L=2 ARE IN BETA(*,1),            ROAM-007
C                     GAMMA VALUES FOR L=2 ARE IN BETA(*,2),            ROAM-008
C                     DEFORMATIONS FOR L=4 ARE IN BETA(*,3),            ROAM-009
C                     ... ETC (SEE DESCRIPTION OF INPUT).               ROAM-010
C            IPH(I,*):NUMBER OF NUCLEAR PARAMETERS FOR I=1,             ROAM-011
C                     THEIR ADDRESS FOR I=2.                            ROAM-012
C            VAR:     EQUIVALENT BY CALL, PARAMETERS FOR SOME MODELS.   ROAM-013
C            FAC:     TABLE AND NUMBER OF LOGARITHMS OF FACTORIALS.     ROAM-014
C            IDT:     LENGTH AVAILABLE IN THIS SUBROUTINE.              ROAM-015
C            LO(I):   LOGICAL CONTROLS:                                 ROAM-016
C               LO(2)  =.TRUE. SECOND ORDER VIBRATIONAL OR CONSTRAINED  ROAM-017
C                              ASYMMETRIC ROTATIONAL MODEL.             ROAM-018
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      ROAM-019
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. ROAM-020
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   ROAM-021
C               LO(117)=.TRUE. FOR ALL CALCULATIONS EXCEPT THE FIRST.   ROAM-022
C OUTPUT:    NIV:     NUMBER AND REFERENCES OF INTERACTION FORM FACTORS ROAM-023
C                     BETWEEN EACH CHANNELS. NIV(I1,I2,K): FIRST I OF   ROAM-024
C                     T(3,I) FOR THE PAIR OF NUCLEAR STATES I1,I2 FOR   ROAM-025
C                     K=1 AND LAST ONE FOR K=2.                         ROAM-026
C            IQ,T:    EQUIVALENT BY CALL OF IQ(6,I) AND T(3,I).         ROAM-027
C            IT:      NUMBER OF NUCLEAR MATRIX ELEMENTS IN IQ,T. FOR A  ROAM-028
C                     GIVEN VALUE OF I:                                 ROAM-029
C                     IQ(1,I): REFERENCE TO TABLE OF FORM FACTORS,      ROAM-030
C                              THE CONTROL NUMBER FOR FORM FACTOR       ROAM-031
C                              (L=2,K=0) IS 2,FOR (L=2,K=2) IS 3, FOR   ROAM-032
C                              (L=4,K=0) IS 4,FOR (L=4,K=2) IS 5 ...    ROAM-033
C                              AND SO ON...                             ROAM-034
C                     IQ(2,I): REFERENCE TO TABLE OF ANGULAR MOMENTA,   ROAM-035
C                     IQ(3,I): ADDRESS OF THE ASSOCIATED SPIN-ORBIT FORMROAM-036
C                              FACTOR OR 0,                             ROAM-037
C                     IQ(4,I): UNUSED,                                  ROAM-038
C                     T(3,I):  REDUCED NUCLEAR MATRIX ELEMENT:          ROAM-039
C                     (IP||Q(IQ,KQ)||I)=SQRT(2*I+1)*CG(I,IQ,IP,K,KQ,KP) ROAM-040
C            VA:      BAND MIXING COEFFICIENTS FOR L=2.                 ROAM-041
C                                                                       ROAM-042
C FOR THE COMMON  /COUPL/ SEE CALX.                                     ROAM-043
C                                                                       ROAM-044
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     ROAM-045
C  IQMAX:     MAXIMUM L-EXPANSION IN ROTATIONAL MODEL.                  ROAM-046
C  NFA:       NUMBER OF LOGARITHMS OF FACTORIALS.                       ROAM-047
C   USED:     IQMAX,NFA.                                                ROAM-048
C                                                                       ROAM-049
C***********************************************************************ROAM-050
      IMPLICIT REAL*8 (A-H,O-Z)                                         ROAM-051
      LOGICAL LO(150)                                                   ROAM-052
      DIMENSION NIV(NCOLL,NCOLL,*),IQ(6,*),T(3,*),IPI(11,*),BETA(9,*),IPROAM-053
     1H(2,*),VAR(*),VA(*),FAC(*)                                        ROAM-054
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   ROAM-055
      COMMON /INOUT/ MR,MW,MS                                           ROAM-056
      IVAR=0                                                            ROAM-057
      I2=1                                                              ROAM-058
      IF (.NOT.LO(2)) GO TO 4                                           ROAM-059
C VAR(1) IS THE ANGLE GAMMA OF DAVYDOV AND FILIPPOV MODEL.              ROAM-060
C THE SECOND LEVEL MUST BE A THE FIRST 2+ AND THE THIRD ONE,IF PRESENT, ROAM-061
C THE SECOND 2+ .THEIR MIXING COEFFICIENTS ARE COMPUTED FROM VAR(1).    ROAM-062
C THERE CAN BE ANY NUMBER OF LEVELS AFTER THE THIRD ONE.                ROAM-063
      G=VAR(1)-BETA(1,2)                                                ROAM-064
      IF (.NOT.LO(117)) WRITE (MW,1000) G,(BETA(I,2),I=1,8)             ROAM-065
      DO 1 I=1,8                                                        ROAM-066
    1 BETA(I,2)=BETA(I,2)+G                                             ROAM-067
      IF (.NOT.LO(117)) WRITE (MW,1001) (BETA(I,2),I=1,8)               ROAM-068
      G=0.0174532925199433D0*VAR(1)                                     ROAM-069
      G1=DSIN(G)                                                        ROAM-070
      G2=DCOS(G)                                                        ROAM-071
      G3=DSIN(3.D0*G)                                                   ROAM-072
      G4=DCOS(3.D0*G)                                                   ROAM-073
      G=DSQRT(9.D0-8.D0*G3*G3)                                          ROAM-074
      G5=-(G1*G3+3.D0*G2*G4+G)                                          ROAM-075
      G6=3.D0*G1*G4-G2*G3                                               ROAM-076
      VA(1)=1.D0                                                        ROAM-077
      IF (NCOLL.EQ.1) GO TO 2                                           ROAM-078
      G=DSQRT(G6*G6+G5*G5)                                              ROAM-079
      VA(2)=G5/G                                                        ROAM-080
      VA(3)=G6/G                                                        ROAM-081
      IF (NCOLL.EQ.2) GO TO 2                                           ROAM-082
      VA(4)=-VA(3)                                                      ROAM-083
      VA(5)=VA(2)                                                       ROAM-084
    2 I2=MIN0(NCOLL,3)                                                  ROAM-085
      DO 3 I1=1,I2                                                      ROAM-086
      IF (I1.EQ.1.AND.IPI(3,I1).NE.1) GO TO 14                          ROAM-087
      IF (I1.EQ.1) GO TO 3                                              ROAM-088
      IF (IPI(3,I1).NE.5) GO TO 14                                      ROAM-089
      IF (.NOT.LO(117)) WRITE (MW,1002) I1,VA(2*I1-2),VA(2*I1-1)        ROAM-090
    3 CONTINUE                                                          ROAM-091
      IVAR=I2-1                                                         ROAM-092
      I2=4                                                              ROAM-093
      IF (I2.GT.NCOLL) GO TO 7                                          ROAM-094
C LEVELS NOT RELATED TO THE GAMMA DEFORMATION.                          ROAM-095
    4 DO 6 I1=I2,NCOLL                                                  ROAM-096
      IF (IPI(3,I1).EQ.3) GO TO 16                                      ROAM-097
      IVAR=IPH(2,I1)                                                    ROAM-098
      IF (MOD(IPI(3,I1),4).NE.1) VAR(IVAR+1)=90.D0                      ROAM-099
      K1=IVAR+I1                                                        ROAM-100
      VA(K1)=1.D0                                                       ROAM-101
      IF (IPH(1,I1).EQ.0) GO TO 6                                       ROAM-102
      K2=K1+IPH(1,I1)-1                                                 ROAM-103
      DO 5 K=K1,K2                                                      ROAM-104
      IVAR=IVAR+1                                                       ROAM-105
      G=0.0174532925199433D0*VAR(IVAR)                                  ROAM-106
      VA(K+1)=VA(K)*DSIN(G)                                             ROAM-107
    5 VA(K)=VA(K)*DCOS(G)                                               ROAM-108
      IF (.NOT.LO(117)) WRITE (MW,1002) I1,(VA(K),K=K1,K2),VA(K2+1)     ROAM-109
    6 CONTINUE                                                          ROAM-110
C COMPUTATION OF RED. MAT. ELE. FOR I=/<IP AT THE FIRST CALL.           ROAM-111
    7 IT=1                                                              ROAM-112
      NSP=0                                                             ROAM-113
      IF (LO(13).OR.LO(14).OR.LO(19)) NSP=10                            ROAM-114
      DO 13 I1=1,NCOLL                                                  ROAM-115
      NT=IPH(1,I1)+1                                                    ROAM-116
      NV=IPH(2,I1)+I1-1                                                 ROAM-117
      IA1=IPI(3,I1)-1                                                   ROAM-118
      NX=IA1/2-2*(IA1/4)                                                ROAM-119
      DO 12 I2=I1,NCOLL                                                 ROAM-120
      IF (IPI(1,I1).NE.IPI(1,I2)) GO TO 15                              ROAM-121
      NIV(I1,I2,1)=IT                                                   ROAM-122
      MT=IPH(1,I2)+1                                                    ROAM-123
      MV=IPH(2,I2)+I2-1                                                 ROAM-124
      IA2=IPI(3,I2)-1                                                   ROAM-125
      MX=IA2/2-2*(IA2/4)                                                ROAM-126
      IQ1=MIN0(IQMAX,(IA1+IA2)/2,8)                                     ROAM-127
      IQ2=MAX0(2,2*((IABS(IA1-IA2)/2+1)/2))                             ROAM-128
      IF (IQ2.GT.IQ1) GO TO 11                                          ROAM-129
C COMPUTATION OF REDUCED MATRIX ELEMENTS.                               ROAM-130
      DO 10 IQZ=IQ2,IQ1,2                                               ROAM-131
      FS=DFLOAT(IQZ-4*((IQZ+2)/4)+1)                                    ROAM-132
      IQY=IQZ/2+1                                                       ROAM-133
      DO 9 MQZ=1,IQY                                                    ROAM-134
      IF (2*IT.GT.IDT) CALL MEMO('ROAM',IDT,2*IT)                       ROAM-135
      IQ(1,IT)=1000*((IQY*(IQY-1))/2+MQZ)                               ROAM-136
      B=0.D0                                                            ROAM-137
      IQ(2,IT)=IQZ                                                      ROAM-138
      IQ(3,IT)=NSP                                                      ROAM-139
      MQ=2*MQZ-2                                                        ROAM-140
      DO 8 N1=1,NT                                                      ROAM-141
      IF (N1-NX.EQ.0) GO TO 8                                           ROAM-142
      N=2*N1-2                                                          ROAM-143
      LM=N-MQ                                                           ROAM-144
      IF (IABS(LM).GE.2*MT) GO TO 8                                     ROAM-145
      L1=1+IABS(LM)/2                                                   ROAM-146
      FQ=DJCG(IA1,2*IQZ,IA2,2*N,-2*MQ,FAC,NFA)*VA(NV+N1)*VA(MV+L1)      ROAM-147
      IF (LM.LT.0.AND.MX.EQ.1) FQ=-FQ                                   ROAM-148
      IF (MQ*N*LM.NE.0) FQ=.7071068D0*FQ                                ROAM-149
      B=B+FQ                                                            ROAM-150
      IF (N*MQ.EQ.0) GO TO 8                                            ROAM-151
      LM=MQ+N                                                           ROAM-152
      IF (LM.GE.2*MT) GO TO 8                                           ROAM-153
      L1=1+LM/2                                                         ROAM-154
      FQ=DJCG(IA1,2*IQZ,IA2,2*N,2*MQ,FAC,NFA)*VA(NV+N1)*VA(MV+L1)       ROAM-155
      IF (MQ*N*LM.NE.0) FQ=.7071068D0*FQ                                ROAM-156
      B=B+FQ                                                            ROAM-157
    8 CONTINUE                                                          ROAM-158
      IF (MQ.NE.0) B=.7071068D0*B                                       ROAM-159
      T(3,IT)=DSQRT(DFLOAT(IA1+1))*B*FS                                 ROAM-160
      IF (DABS(T(3,IT)).GT.1.D-6) IT=IT+1                               ROAM-161
    9 CONTINUE                                                          ROAM-162
   10 CONTINUE                                                          ROAM-163
   11 NIV(I1,I2,2)=IT-1                                                 ROAM-164
   12 CONTINUE                                                          ROAM-165
   13 CONTINUE                                                          ROAM-166
      IT=IT-1                                                           ROAM-167
      RETURN                                                            ROAM-168
   14 WRITE (MW,1003)                                                   ROAM-169
      GO TO 17                                                          ROAM-170
   15 WRITE (MW,1004) I1,I2                                             ROAM-171
      GO TO 17                                                          ROAM-172
   16 WRITE (MW,1005)                                                   ROAM-173
   17 WRITE (MW,1006)                                                   ROAM-174
      STOP                                                              ROAM-175
 1000 FORMAT (/' FOR CONSTRAINED ASYMMETRIC ROTATIONAL MODEL THE BETA(I,ROAM-176
     12) ARE INCREASED BY',F10.5//23X,'V',9X,'W',8X,'VS',8X,'WS',7X,'VSOROAM-177
     2',7X,'WSO',6X,'COUL S.O. COUL'/' INITIAL VALUES ',8F10.5)         ROAM-178
 1001 FORMAT (' MODIFIED VALUES',8F10.5)                                ROAM-179
 1002 FORMAT (/' BAND MIXING COEFFICIENTS FOR THE LEVEL',I4/(6D20.7))   ROAM-180
 1003 FORMAT (/' LEVEL ORDER INCORRECT FOR LINK BETWEEN DEFORMATION AND ROAM-181
     1BAND MIXING'/' USE 0+-2+-2+ AND THEN THE OTHER LEVELS.')          ROAM-182
 1004 FORMAT (/' PARITIES OF STATES',I4,'  AND',I4,'  INCORRECT FOR THE ROAM-183
     1ROTATIONAL MODEL.')                                               ROAM-184
 1005 FORMAT (/' NO SPIN-1 STATE IN THIS MODEL.')                       ROAM-185
 1006 FORMAT (//' IN ROAM  ...  STOP  ...')                             ROAM-186
      END                                                               ROAM-187
C 13/04/06                                                      ECIS12  DJCG-000
      FUNCTION DJCG(J1,J2,J3,M1,M2,FAC,NFA)                             DJCG-001
C CLEBSCH-GORDAN COEFFICIENTS ( J1  J2  M1  M2 | J3  M1+M2 ).           DJCG-002
C INPUT:     J1,..M2: INTEGER DOUBLED VALUES.                           DJCG-003
C            FAC:     TABLE OF LOGARITHM OF FACTORIALS.                 DJCG-004
C            NFA:     LENGTH OF FAC.                                    DJCG-005
C***********************************************************************DJCG-006
      IMPLICIT REAL*8(A-F)                                              DJCG-007
      DIMENSION FAC(*)                                                  DJCG-008
      COMMON /INOUT/ MR,MW,MS                                           DJCG-009
      DJCG=0.D0                                                         DJCG-010
      M3=M1+M2                                                          DJCG-011
      IF (J1+J2+J3.GT.2*NFA) GO TO 18                                   DJCG-012
      IF ((J1.LT.0).OR.(J2.LT.0).OR.(J3.LT.0)) GO TO 16                 DJCG-013
      IY1=J1+M1+2                                                       DJCG-014
      IX1=IY1/2                                                         DJCG-015
      IY2=J2+M2+2                                                       DJCG-016
      IX2=IY2/2                                                         DJCG-017
      IY3=J3-M3+2                                                       DJCG-018
      IX3=IY3/2                                                         DJCG-019
      IF ((IX1.LE.0).OR.(IX2.LE.0).OR.(IX3.LE.0)) RETURN                DJCG-020
      IF ((2*IX1.NE.IY1).OR.(2*IX2.NE.IY2).OR.(2*IX3.NE.IY3)) GO TO 17  DJCG-021
      IY1=IX1-M1                                                        DJCG-022
      IY2=IX2-M2                                                        DJCG-023
      IY3=IX3+M3                                                        DJCG-024
      IF ((IY1.LE.0).OR.(IY2.LE.0).OR.(IY3.LE.0)) RETURN                DJCG-025
C AT THIS POINT IX1,IX2,IX3 ARE TWICE J+M AND IY1,IY2,IY3 TWICE J-M     DJCG-026
C SEARCH FOR A ZERO ARGUMENT.                                           DJCG-027
      IF (J3.EQ.0) GO TO 4                                              DJCG-028
      IF ((J1.EQ.0).OR.(J2.EQ.0)) GO TO 5                               DJCG-029
      IF (M3.EQ.0) GO TO 6                                              DJCG-030
      IF (M2.EQ.0) GO TO 7                                              DJCG-031
      IF (M1.EQ.0) GO TO 8                                              DJCG-032
C GENERAL CASE.                                                         DJCG-033
    1 NX=IX1+IX2+IX3                                                    DJCG-034
      IZ1=NX-IX1-IY1                                                    DJCG-035
      IZ2=NX-IX2-IY2                                                    DJCG-036
      IZ3=NX-IX3-IY3                                                    DJCG-037
      IF ((IZ1.LE.0).OR.(IZ2.LE.0).OR.(IZ3.LE.0)) RETURN                DJCG-038
      NXY=NX-1                                                          DJCG-039
      I1=IX2-IY3                                                        DJCG-040
      I2=IY1-IX3                                                        DJCG-041
C K1 AND K2 ARE THE LIMITS OF THE SUM.                                  DJCG-042
C M1,M2,M3,K1,K3,K4 HAVE THEIR FACTORIALS IN THE DENOMINATOR            DJCG-043
C NXY=J1+J2+J3+1      IZ1,IZ2,IZ3  ARE J1+J2-J3, J1-J2+J3 AND -J1+J2+J3.DJCG-044
      K1=MAX0(I1,I2,0)+1                                                DJCG-045
      K2=MIN0(IY1,IX2,IZ3)                                              DJCG-046
      K3=K1-I1                                                          DJCG-047
      K4=K1-I2                                                          DJCG-048
      N1=IY1-K1+1                                                       DJCG-049
      N2=IX2-K1+1                                                       DJCG-050
      N3=IZ3-K1+1                                                       DJCG-051
      DJCG=DEXP(0.5D0*(FAC(IX3+IY3)-FAC(IX3+IY3-1)-FAC(NXY)+FAC(IZ1)+FACDJCG-052
     1(IZ2)+FAC(IZ3)+FAC(IX1)+FAC(IX2)+FAC(IX3)+FAC(IY1)+FAC(IY2)+FAC(IYDJCG-053
     23))-FAC(N1)-FAC(N2)-FAC(N3)-FAC(K1)-FAC(K3)-FAC(K4))              DJCG-054
      IF (2*(K1/2).EQ.K1) DJCG=-DJCG                                    DJCG-055
      IF (K1.EQ.K2) GO TO 3                                             DJCG-056
      A4=DJCG                                                           DJCG-057
      K=K2-K1                                                           DJCG-058
      K3=K2-I1                                                          DJCG-059
      K4=K2-I2                                                          DJCG-060
      N1=IY1-K2                                                         DJCG-061
      N2=IX2-K2                                                         DJCG-062
      N3=IZ3-K2                                                         DJCG-063
C K2,K3,K4,N1,N2,N3 ARE THE ARGUMENTS OF THE FACTORIALS IN THE LAST TERMDJCG-064
      DO 2 I=1,K                                                        DJCG-065
      A1=DFLOAT((K2-I)*(K3-I)*(K4-I))                                   DJCG-066
      A2=DFLOAT((N1+I)*(N2+I)*(N3+I))                                   DJCG-067
    2 DJCG=A4-DJCG*A2/A1                                                DJCG-068
    3 RETURN                                                            DJCG-069
C J1,J2 OR J3  IS ZERO.                                                 DJCG-070
    4 IF (J1.NE.J2) RETURN                                              DJCG-071
      A1=DFLOAT(J1+1)                                                   DJCG-072
      DJCG=1.D0/DSQRT(A1)                                               DJCG-073
      IF (MOD(IY1,2).EQ.0) DJCG=-DJCG                                   DJCG-074
      RETURN                                                            DJCG-075
    5 IF (J1+J2.NE.J3) RETURN                                           DJCG-076
      DJCG=1.D0                                                         DJCG-077
      RETURN                                                            DJCG-078
C M1,M2 OR M3 IS ZERO; IF THE OTHERS M ARE LARGER THAN 1/2,GENERAL CASE.DJCG-079
    6 IF (IABS(M1)-1) 9 , 10 , 1                                        DJCG-080
    7 IF (IABS(M1).GT.1) GO TO 1                                        DJCG-081
      GO TO 11                                                          DJCG-082
    8 IF (IABS(M3).GT.1) GO TO 1                                        DJCG-083
      GO TO 12                                                          DJCG-084
C ALL THE M ARE ZEROS.                                                  DJCG-085
    9 N5=IX1+IX2+IX3-1                                                  DJCG-086
      IF (2*(N5/2).NE.N5) RETURN                                        DJCG-087
      N2=IX1+IX2-IX3                                                    DJCG-088
      N3=IX2+IX3-IX1                                                    DJCG-089
      N4=IX3+IX1-IX2                                                    DJCG-090
      A1=FAC(2*IX3)-FAC(2*IX3-1)                                        DJCG-091
      KC=1                                                              DJCG-092
      GO TO 14                                                          DJCG-093
C ONE M IS ZERO AND THE OTHERS +-1/2  FORMULA OF DCGS.                  DJCG-094
   10 IQ=IX3-1                                                          DJCG-095
      IZ1=IX1+IX2-2                                                     DJCG-096
      IZ2=IX1-IY2                                                       DJCG-097
      LZ1=J1                                                            DJCG-098
      LZ2=J2                                                            DJCG-099
      LW2=M2                                                            DJCG-100
      LW1=IY1                                                           DJCG-101
      GO TO 13                                                          DJCG-102
   11 IQ=IX2-1                                                          DJCG-103
      IZ1=IX1+IX3-2                                                     DJCG-104
      IZ2=IX3-IY1                                                       DJCG-105
      LZ1=J1                                                            DJCG-106
      LZ2=J3                                                            DJCG-107
      LW2=M1                                                            DJCG-108
      LW1=IY3                                                           DJCG-109
      GO TO 13                                                          DJCG-110
   12 IQ=IX1-1                                                          DJCG-111
      IZ1=IX2+IX3-2                                                     DJCG-112
      IZ2=IX2-IY3                                                       DJCG-113
      LZ1=J2                                                            DJCG-114
      LZ2=J3                                                            DJCG-115
      LW2=-M3                                                           DJCG-116
      LW1=IY2                                                           DJCG-117
   13 N2=IZ1-IQ+1                                                       DJCG-118
      N3=IQ+IZ2+1                                                       DJCG-119
      N4=IQ-IZ2+1                                                       DJCG-120
      IF (N2.LT.1.OR.N3.LT.1.OR.N4.LT.1) RETURN                         DJCG-121
      N5=IZ1+IQ+2                                                       DJCG-122
      A1=FAC(J3+2)-FAC(J3+1)-FAC(LZ1+2)+FAC(LZ1+1)-FAC(LZ2+2)+FAC(LZ2+1)DJCG-123
      KC=2                                                              DJCG-124
C SIMPLE FORMULA.                                                       DJCG-125
   14 IF (N5-1.GT.NFA) GO TO 18                                         DJCG-126
      L1=(N5+1)/2                                                       DJCG-127
      L2=(N2+1)/2                                                       DJCG-128
      L3=(N3+1)/2                                                       DJCG-129
      L4=(N4+1)/2                                                       DJCG-130
      DJCG=DEXP(0.5D0*(A1+FAC(N2)+FAC(N3)+FAC(N4)-FAC(N5))+FAC(L1)-FAC(LDJCG-131
     12)-FAC(L3)-FAC(L4))                                               DJCG-132
      IF (KC.EQ.2) GO TO 15                                             DJCG-133
      IF (MOD(L1+IX1-IX2,2).EQ.0) DJCG=-DJCG                            DJCG-134
      RETURN                                                            DJCG-135
   15 IF (LW2.GT.0) L4=L4+N5+1                                          DJCG-136
      DJCG=2.D0*DJCG                                                    DJCG-137
      IF (MOD(L4+LW1+IX1-IY2,2).NE.0) DJCG=-DJCG                        DJCG-138
      RETURN                                                            DJCG-139
   16 WRITE (MW,1000)                                                   DJCG-140
      RETURN                                                            DJCG-141
   17 WRITE (MW,1001)                                                   DJCG-142
      RETURN                                                            DJCG-143
   18 WRITE (MW,1002)                                                   DJCG-144
      RETURN                                                            DJCG-145
 1000 FORMAT (' NEGATIVE ANGULAR MOMENTUM IN DJCG.')                    DJCG-146
 1001 FORMAT (' INTEGER/HALF-INTEGER RULE BETWEEN QUANTUM NUMBERS TRANSGDJCG-147
     1RESSED IN DJCG.')                                                 DJCG-148
 1002 FORMAT (' FACTORIAL TOO LARGE IN DJCG.')                          DJCG-149
      END                                                               DJCG-150
C 13/04/06                                                      ECIS12  DJ6J-000
      FUNCTION DJ6J(J1,J2,J3,J4,J5,J6,FAC,NFA)                          DJ6J-001
C COMPUTATION OF SIX-J COEFFICIENTS.                                    DJ6J-002
C INPUT:     J1..J6:  DOUBLE VALUE OF ANGULAR MOMENTA.                  DJ6J-003
C            FAC:     TABLE OF LOGARITHM OF FACTORIALS.                 DJ6J-004
C            NFA:     LENGTH OF FAC.                                    DJ6J-005
C OUTPUT:                                                               DJ6J-006
C                                  ( J1  J2  J3 )                       DJ6J-007
C            6-J COEFFICIENTS      )            (                       DJ6J-008
C                                  ( J4  J5  J6 )                       DJ6J-009
C                                                                       DJ6J-010
C***********************************************************************DJ6J-011
      IMPLICIT REAL*8(A-F)                                              DJ6J-012
      DIMENSION IX(6),IA(3,4),IY(4),FAC(*)                              DJ6J-013
      COMMON /INOUT/ MR,MW,MS                                           DJ6J-014
      DATA IA /1,2,3,1,5,6,4,2,6,4,5,3/                                 DJ6J-015
      DJ6J=0.D0                                                         DJ6J-016
      IX(1)=J1                                                          DJ6J-017
      IX(2)=J2                                                          DJ6J-018
      IX(3)=J3                                                          DJ6J-019
      IX(4)=J4                                                          DJ6J-020
      IX(5)=J5                                                          DJ6J-021
      IX(6)=J6                                                          DJ6J-022
C THE QUANTUM NUMBERS MULTIPLIED BY 2 ARE IN THE TABLE IX.              DJ6J-023
C SEARCH FOR A ZERO QUANTUM NUMBER.                                     DJ6J-024
      DO 1 I=1,6                                                        DJ6J-025
      IF (IX(I).LT.0) GO TO 14                                          DJ6J-026
      IF (IX(I).EQ.0) GO TO ( 5 , 6 , 7 , 8 , 9, 10 ),I                 DJ6J-027
    1 CONTINUE                                                          DJ6J-028
C GENERAL CASE.                                                         DJ6J-029
C CHECK OF THE TRIANGULAR RELATIONS AND COMPUTATION OF DELTA.           DJ6J-030
      DO 2 K=1,4                                                        DJ6J-031
      IZ1=IA(1,K)                                                       DJ6J-032
      IZ2=IA(2,K)                                                       DJ6J-033
      IZ3=IA(3,K)                                                       DJ6J-034
      IX1=IX(IZ1)                                                       DJ6J-035
      IX2=IX(IZ2)                                                       DJ6J-036
      IX3=IX(IZ3)                                                       DJ6J-037
      N=IX1+IX2+IX3+2                                                   DJ6J-038
      I1=N/2                                                            DJ6J-039
      IF (2*I1.NE.N) GO TO 12                                           DJ6J-040
      IF (I1.GT.NFA) GO TO 13                                           DJ6J-041
      N1=I1-IX3                                                         DJ6J-042
      N2=I1-IX2                                                         DJ6J-043
      N3=I1-IX1                                                         DJ6J-044
      IF ((I1.LE.0).OR.(N1.LE.0).OR.(N2.LE.0).OR.(N3.LE.0)) GO TO 15    DJ6J-045
      IY(K)=I1+1                                                        DJ6J-046
    2 DJ6J=DJ6J+FAC(N1)-FAC(I1+1)+FAC(N2)+FAC(N3)                       DJ6J-047
      N1=(IX(1)+IX(2)+IX(4)+IX(5))/2                                    DJ6J-048
      N2=(IX(1)+IX(3)+IX(4)+IX(6))/2                                    DJ6J-049
      N3=(IX(2)+IX(3)+IX(5)+IX(6))/2                                    DJ6J-050
C K1 AND K2 ARE THE LIMITS OF THE SUM.                                  DJ6J-051
C K1, L1, L2, L3, L4, M1, M2, M3 ARE THE FACTORIALS OF THE FIRST TERM.  DJ6J-052
      K1=MAX0(IY(1),IY(2),IY(3),IY(4))                                  DJ6J-053
      K2=MIN0(N1,N2,N3)+2                                               DJ6J-054
      L1=K1-IY(1)+1                                                     DJ6J-055
      L2=K1-IY(2)+1                                                     DJ6J-056
      L3=K1-IY(3)+1                                                     DJ6J-057
      L4=K1-IY(4)+1                                                     DJ6J-058
      M1=N1-K1+3                                                        DJ6J-059
      M2=N2-K1+3                                                        DJ6J-060
      M3=N3-K1+3                                                        DJ6J-061
      DJ6J=DEXP(.5D0*DJ6J+FAC(K1)-FAC(L1)-FAC(L2)-FAC(L3)-FAC(L4)-FAC(M1DJ6J-062
     1)-FAC(M2)-FAC(M3))                                                DJ6J-063
      IF (2*(K1/2).NE.K1) DJ6J=-DJ6J                                    DJ6J-064
      IF (K2.EQ.K1) GO TO 4                                             DJ6J-065
      A2=DJ6J                                                           DJ6J-066
      K=K2-K1                                                           DJ6J-067
    3 A1=DFLOAT((M1-K)*(M2-K)*(M3-K))                                   DJ6J-068
      K=K-1                                                             DJ6J-069
      A3=DFLOAT((L1+K)*(L2+K)*(L3+K)*(L4+K))                            DJ6J-070
      DJ6J=A2-DFLOAT(K1+K)*A1*DJ6J/A3                                   DJ6J-071
      IF (K.GT.0) GO TO 3                                               DJ6J-072
    4 RETURN                                                            DJ6J-073
C ONE QUANTUM NUMBER IS ZERO; VERIFICATION OF THE TRIANGULAR RELATION.  DJ6J-074
    5 IF (IX(2).NE.IX(3).OR.IX(5).NE.IX(6)) GO TO 15                    DJ6J-075
      IX(6)=IX(4)                                                       DJ6J-076
      IX(1)=IX(2)                                                       DJ6J-077
      IX(4)=IX(5)                                                       DJ6J-078
      GO TO 11                                                          DJ6J-079
    6 IF (IX(1).NE.IX(3).OR.IX(4).NE.IX(6)) GO TO 15                    DJ6J-080
      IX(6)=IX(5)                                                       DJ6J-081
      GO TO 11                                                          DJ6J-082
    7 IF (IX(1).NE.IX(2).OR.IX(4).NE.IX(5)) GO TO 15                    DJ6J-083
      IF (IX(4).NE.IX(5)) GO TO 15                                      DJ6J-084
      GO TO 11                                                          DJ6J-085
    8 IF (IX(2).NE.IX(6).OR.IX(3).NE.IX(5)) GO TO 15                    DJ6J-086
      IX(6)=IX(1)                                                       DJ6J-087
      IX(1)=IX(5)                                                       DJ6J-088
      IX(4)=IX(2)                                                       DJ6J-089
      GO TO 11                                                          DJ6J-090
    9 IF (IX(1).NE.IX(6).OR.IX(3).NE.IX(4)) GO TO 15                    DJ6J-091
      IX(6)=IX(2)                                                       DJ6J-092
      GO TO 11                                                          DJ6J-093
   10 IF (IX(1).NE.IX(5).OR.IX(2).NE.IX(4)) GO TO 15                    DJ6J-094
      IX(6)=IX(3)                                                       DJ6J-095
C VALUE OF 6-J COEFFICIENT WITH ONE QUANTUM NUMBER ZERO.                DJ6J-096
   11 IF (MIN0(IX(1),IX(4),IX(6)).LT.0) GO TO 14                        DJ6J-097
      IF (IX(6).GT.IX(1)+IX(4).OR.IX(6).LT.IABS(IX(1)-IX(4))) GO TO 15  DJ6J-098
      IF (MAX0(IX(1),IX(4)).GT.NFA) GO TO 13                            DJ6J-099
      K=IX(1)+IX(4)+IX(6)                                               DJ6J-100
      N=K/2                                                             DJ6J-101
      IF (2*N.NE.K) GO TO 12                                            DJ6J-102
      DJ6J=DFLOAT(1-2*MOD(N,2))/DSQRT(DFLOAT((IX(1)+1)*(IX(4)+1)))      DJ6J-103
      RETURN                                                            DJ6J-104
   12 WRITE (MW,1000)                                                   DJ6J-105
      GO TO 15                                                          DJ6J-106
   13 WRITE (MW,1001)                                                   DJ6J-107
      GO TO 15                                                          DJ6J-108
   14 WRITE (MW,1002)                                                   DJ6J-109
   15 DJ6J=0.D0                                                         DJ6J-110
      RETURN                                                            DJ6J-111
 1000 FORMAT (' VIOLATION OF THE INTEGER/HALF-INTEGER RULE BETWEEN QUANTDJ6J-112
     1UM NUMBERS IN DJ6J.')                                             DJ6J-113
 1001 FORMAT (' FACTORIAL TOO LARGE FOR DJ6J.')                         DJ6J-114
 1002 FORMAT (' NEGATIVE ANGULAR MOMENTUM IN DJ6J.')                    DJ6J-115
      END                                                               DJ6J-116
C 27/06/06                                                      ECIS12  DJ9J-000
      FUNCTION DJ9J(J1,J2,J3,J4,J5,J6,J7,J8,J9,AA,ITO)                  DJ9J-001
C COMPUTATION OF 9-J COEFFICIENTS.                                      DJ9J-002
C INPUT:     J1,..J9: INTEGER DOUBLED VALUES.                           DJ9J-003
C OUTPUT:                             | J1  J2  J3 |                    DJ9J-004
C                                     |            |                    DJ9J-005
C   9J(J1,J2,J3,J4,J5,J6,J7,J8,J9) =  | J4  J5  J6 |                    DJ9J-006
C                                     |            |                    DJ9J-007
C                                     | J7  J8  J9 |                    DJ9J-008
C                                                                       DJ9J-009
C WORKING AREA:                                                         DJ9J-010
C            AA:      FOR COMPUTATION OF UNNORMALISED 6-J COEFFICIENTS  DJ9J-011
C                     BY RECURRENCE.                                    DJ9J-012
C            ITO:     LENGTH OF AA.                                     DJ9J-013
C***********************************************************************DJ9J-014
      IMPLICIT REAL*8 (A-H,O-Z)                                         DJ9J-015
      DIMENSION AA(*),J(5),IX(9),JX(3,3),JS(3),JF(3),IA(5,3),IB(3)      DJ9J-016
      EQUIVALENCE (IX(1),JX(1,1)),(IB(1),IB1),(IB(2),IB2),(IB(3),IB3)   DJ9J-017
      COMMON /INOUT/ MR,MW,MS                                           DJ9J-018
      DATA IA /1,2,3,6,9,6,4,5,8,2,8,9,7,1,4/                           DJ9J-019
      DJ9J=0.D0                                                         DJ9J-020
      IX(1)=J1                                                          DJ9J-021
      IX(2)=J2                                                          DJ9J-022
      IX(3)=J3                                                          DJ9J-023
      IX(4)=J4                                                          DJ9J-024
      IX(5)=J5                                                          DJ9J-025
      IX(6)=J6                                                          DJ9J-026
      IX(7)=J7                                                          DJ9J-027
      IX(8)=J8                                                          DJ9J-028
      IX(9)=J9                                                          DJ9J-029
      DO 2 I=1,3                                                        DJ9J-030
      DO 1 K=1,3                                                        DJ9J-031
      IF (JX(K,I).LT.0) GO TO 13                                        DJ9J-032
    1 CONTINUE                                                          DJ9J-033
C CHECK OF TRIANGULAR RELATIONS.                                        DJ9J-034
      IF (MOD(JX(1,I)+JX(2,I)+JX(3,I),2).NE.0.OR.MOD(JX(I,1)+JX(I,2)+JX(DJ9J-035
     1I,3),2).NE.0) GO TO 11                                            DJ9J-036
      IF (IABS(JX(1,I)-JX(2,I)).GT.JX(3,I).OR.JX(1,I)+JX(2,I).LT.JX(3,I)DJ9J-037
     1) RETURN                                                          DJ9J-038
      IF (IABS(JX(I,1)-JX(I,2)).GT.JX(I,3).OR.JX(I,1)+JX(I,2).LT.JX(I,3)DJ9J-039
     1) RETURN                                                          DJ9J-040
    2 CONTINUE                                                          DJ9J-041
C SEARCH OF THE CONFIGURATION FOR WHICH THE SUM ON PRODUCTS OF 6-J      DJ9J-042
C COEFFICIENTS IS THE SMALLEST ONE.                                     DJ9J-043
      K1=MIN0(IX(3),IX(5),IX(7))                                        DJ9J-044
      K2=MIN0(IX(2),IX(4),IX(9))                                        DJ9J-045
      K3=MIN0(IX(1),IX(6),IX(8))                                        DJ9J-046
      KT=MAX0(K1,K2,K3)                                                 DJ9J-047
      IF (KT.EQ.K1) GO TO 6                                             DJ9J-048
      IF (K2.GT.K3) GO TO 4                                             DJ9J-049
      DO 3 I=1,3                                                        DJ9J-050
      II=IX(I)                                                          DJ9J-051
      IX(I)=IX(I+3)                                                     DJ9J-052
      IX(I+3)=IX(I+6)                                                   DJ9J-053
    3 IX(I+6)=II                                                        DJ9J-054
      GO TO 6                                                           DJ9J-055
    4 DO 5 I=1,3                                                        DJ9J-056
      II=IX(I+6)                                                        DJ9J-057
      IX(I+6)=IX(I+3)                                                   DJ9J-058
      IX(I+3)=IX(I)                                                     DJ9J-059
    5 IX(I)=II                                                          DJ9J-060
    6 DO 7 K=1,3                                                        DJ9J-061
      IA1=IA(1,K)                                                       DJ9J-062
      IA2=IA(2,K)                                                       DJ9J-063
      IA4=IA(4,K)                                                       DJ9J-064
      IA5=IA(5,K)                                                       DJ9J-065
      JS(K)=MAX0(IABS(IX(IA1)-IX(IA5)),IABS(IX(IA4)-IX(IA2)))+1         DJ9J-066
    7 JF(K)=MIN0(IX(IA1)+IX(IA5),IX(IA2)+IX(IA4))+1                     DJ9J-067
      KF=MIN0(JF(1),JF(2),JF(3))                                        DJ9J-068
      KT=2+(KF-MAX0(JS(1),JS(2),JS(3)))/2                               DJ9J-069
C LOOP ON THE THREE 6-J COEFFICIENTS.                                   DJ9J-070
      ITXTMP=0                                                          DJ9J-071
      AZTMP=1.D0                                                        DJ9J-072
      DO 9 K=1,3                                                        DJ9J-073
      IJ=ITXTMP                                                         DJ9J-074
      IB(K)=ITXTMP+(JF(K)-KF)/2                                         DJ9J-075
      DO 8 I=1,5                                                        DJ9J-076
      IA1=IA(I,K)                                                       DJ9J-077
    8 J(I)=IX(IA1)                                                      DJ9J-078
      JT=2+(JF(K)-JS(K))/2                                              DJ9J-079
      ITXTMP=ITXTMP+JT                                                  DJ9J-080
      IF (ITXTMP.GT.ITO) GO TO 12                                       DJ9J-081
      AT=DFLOAT(JF(K))                                                  DJ9J-082
      CALL DX6J(AA(1+IJ),AT,J,JT)                                       DJ9J-083
    9 AZTMP=AZTMP*AT*DFLOAT(J(3)+1)                                     DJ9J-084
C SUMMATION ON PRODUCTS OF 6-J.                                         DJ9J-085
      AF=DFLOAT(KF)                                                     DJ9J-086
      DO 10 I=2,KT                                                      DJ9J-087
      DJ9J=DJ9J+AF*AA(I+IB1)*AA(I+IB2)*AA(I+IB3)                        DJ9J-088
   10 AF=AF-2.D0                                                        DJ9J-089
C NORMALISATION.                                                        DJ9J-090
      DJ9J=DJ9J/DSQRT(AZTMP)                                            DJ9J-091
      RETURN                                                            DJ9J-092
   11 WRITE (MW,1000)                                                   DJ9J-093
      RETURN                                                            DJ9J-094
   12 WRITE (MW,1001)                                                   DJ9J-095
      RETURN                                                            DJ9J-096
   13 WRITE (MW,1002)                                                   DJ9J-097
      RETURN                                                            DJ9J-098
 1000 FORMAT (' INTEGER/HALF-INTEGER RULE BETWEEN QUANTUM NUMBERS TRANSGDJ9J-099
     1RESSED IN DJ9J.')                                                 DJ9J-100
 1001 FORMAT (' TOO MANY 6-J NEEDED IN DJ9J.')                          DJ9J-101
 1002 FORMAT (' NEGATIVE ANGULAR MOMENTUM IN DJ9J.')                    DJ9J-102
      END                                                               DJ9J-103
C 27/06/06                                                      ECIS12  DX6J-000
      SUBROUTINE DX6J(AA,AT,J,JT)                                       DX6J-001
C RECURRENCE COMPUTATION OF UNNORMALISED 6-J COEFFICIENTS.              DX6J-002
C                       ( J(1)  J(2)  J(3) )                            DX6J-003
C 6-J COEFFICIENTS      )                  ( FOR ALL VALUES OF JJ.      DX6J-004
C                       ( J(4)  J(5)   JJ  )                            DX6J-005
C INPUT:     J:       INTEGER DOUBLED VALUES.                           DX6J-006
C            JT:      NUMBER OF 6J COEFFICIENTS PLUS ONE.               DX6J-007
C OUTPUT:    AA:      UNNORMALISED 6J COEFFICIENTS IN AA(2) TO AA(JT)   DX6J-008
C                     STARTING FROM THE LARGEST VALUE OF JJ; AA(1)=0.   DX6J-009
C            AT:      NORMALISATION: THE VALUES AA MUST BE DIVIDED BY   DX6J-010
C                     (-)**(J(1)+J(2)+J(4)+J(5))*SQRT((J(3)+1)*AT).     DX6J-011
C***********************************************************************DX6J-012
      IMPLICIT REAL*8 (A-H,O-Z)                                         DX6J-013
      DIMENSION AA(*),J(5)                                              DX6J-014
      AA(1)=0.D0                                                        DX6J-015
      AA(2)=1.D0                                                        DX6J-016
      IF (JT.LE.2) RETURN                                               DX6J-017
      AL=AT                                                             DX6J-018
      C2=0.D0                                                           DX6J-019
      BK1=DFLOAT(J(1)-J(5))**2                                          DX6J-020
      BK3=DFLOAT(J(2)-J(4))**2                                          DX6J-021
      BK2=DFLOAT(J(1)+J(5)+2)**2                                        DX6J-022
      BK4=DFLOAT(J(2)+J(4)+2)**2                                        DX6J-023
      D1=DFLOAT(J(1)-J(5))*DFLOAT(J(1)+J(5)+2)*DFLOAT(J(4)-J(2))*DFLOAT(DX6J-024
     1J(2)+J(4)+2)/16.D0                                                DX6J-025
      D2=(BK1+BK2+BK3+BK4-DFLOAT(4*J(3)*(J(3)+2)))/8.D0-1.D0            DX6J-026
      BK=(AL+1.D0)**2                                                   DX6J-027
      DO 2 I=3,JT                                                       DX6J-028
      C1=C2                                                             DX6J-029
      BK=BK-AL*4.D0                                                     DX6J-030
      C2=.03125D0*DSQRT((BK3-BK)*(BK1-BK)*(BK2-BK)*(BK4-BK))            DX6J-031
      D4=.5D0*(AL+.5D0*BK-1.D0)                                         DX6J-032
      AA(I)=-(AL*(D1+(D2-D4)*D4)*AA(I-1)+(AL-1.D0)*C1*AA(I-2))/(C2*(AL+1DX6J-033
     1.D0))                                                             DX6J-034
      AL=AL-2.D0                                                        DX6J-035
      AT=AT+AL*AA(I)*AA(I)                                              DX6J-036
      IF (AT.LT.1.D12) GO TO 2                                          DX6J-037
      AT=AT*1.D-24                                                      DX6J-038
      DO 1 II=2,I                                                       DX6J-039
    1 AA(II)=AA(II)*1.D-12                                              DX6J-040
    2 CONTINUE                                                          DX6J-041
      RETURN                                                            DX6J-042
      END                                                               DX6J-043
C 26/06/13                                                      ECIS12  EXTP-000
      SUBROUTINE EXTP(NCOLL,NCOLT,WV,NIV,IQ,IVY,IVQ,IPI,FAC,VAL,NVAL,LL,EXTP-001
     1IPP,PIP,IDT,LO)                                                   EXTP-002
C INPUT AND SETUP OF EXTERNAL FORM FACTORS, ELASTIC AND TRANSITIONS.    EXTP-003
C INPUT:     NCOLL:   NUMBER OF COUPLED NUCLEAR STATES.                 EXTP-004
C            NCOLT:   NUMBER OF NUCLEAR STATES INCLUDING UNCOUPLED ONES.EXTP-005
C            WV:      MASSES OF PARTICLE AND TARGET IN WV(1/2,*).       EXTP-006
C            NIV:     ADDRESSES IN TABLE OF NUCLEAR MATRIX ELEMENTS.    EXTP-007
C            IQ:      TABLE OF REDUCED NUCLEAR MATRIX ELEMENTS.         EXTP-008
C            IVY:     TABLE OF FORM FACTORS (SEE REDM).                 EXTP-009
C            IVQ:     TABLE OF ANGULAR MOMENTA (SEE REDM).              EXTP-010
C            IPI(5,*):REFERENCE TO POTENTIALS.                          EXTP-011
C            FAC:     TABLE OF LOGARITHM OF FACTORIALS.                 EXTP-012
C            IPP,PIP: DISPERSION RELATIONS, EQUIVALENT BY CALL.         EXTP-013
C            IDT:     SIZE OF AVAILABLE WORKING SPACE.                  EXTP-014
C            LO(I):   LOGICAL CONTROLS:                                 EXTP-015
C               LO(6)  =.TRUE. USE DEFORMATION LENGTHS.                 EXTP-016
C               LO(10) =.TRUE. DISPERSION RELATIONS FOR POTENTIALS.     EXTP-017
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              EXTP-018
C               LO(12) =.TRUE. DEFORMED IMAGINARY CENTRAL POTENTIAL.    EXTP-019
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      EXTP-020
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. EXTP-021
C               LO(16) =.TRUE. HEAVY-ION DEFINITION OF REDUCED RADII ANDEXTP-022
C                              DEFORMATIONS.                            EXTP-023
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   EXTP-024
C               LO(73) =.TRUE. NO OUTPUT OF EXTERNAL POTENTIALS WHEN    EXTP-025
C                              THEY ARE READ.                           EXTP-026
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      EXTP-027
C               LO(101)=.TRUE. THERE IS A REAL SPIN-ORBIT POTENTIAL.    EXTP-028
C               LO(102)=.TRUE. THERE IS AN IMAGINARY SPIN-ORBIT         EXTP-029
C                              POTENTIAL.                               EXTP-030
C               LO(103)=.TRUE. THERE IS A COULOMB SPIN-ORBIT POTENTIAL. EXTP-031
C OUTPUT:    VAL,NVAL:IN EQUIVALENCE BY CALL, FOR PARAMETERS READ HERE. EXTP-032
C                     NVA(1) FIRST ADDRESS AFTER LL.                    EXTP-033
C                     NVA(2) NUMBER OF SETS OF FOLDING PARAMETERS.      EXTP-034
C                     NVA(3) FIRST ADDRESS OF FOLDING PARAMETERS.       EXTP-035
C                     NVA(4) LAST ADDRESS OF FOLDING PARAMETERS.        EXTP-036
C            LL:      ADDRESSES IN VA IN EQUIVALENCE WITH NVA(1,3):     EXTP-037
C                     LL(1,ITYP,K) FIRST ADDRESS OF PARAMETERS WHICH CANEXTP-038
C                     BE VARIED FOR ITYP AND FORM FACTOR K, 1 FOR FORM  EXTP-039
C                     FACTORS NOT USED.                                 EXTP-040
C                     LL(2,ITYP,K) LAST ADDRESS FOR ITYP AND FORM FACTOREXTP-041
C                     K, -1 FOR FORM FACTORS NOT USED.                  EXTP-042
C                                                                       EXTP-043
C FOR THE COMMON  /COUPL/ SEE CALX.                                     EXTP-044
C FOR THE COMMON  /POTE1/ SEE REDM.                                     EXTP-045
C                                                                       EXTP-046
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     EXTP-047
C  NFA:       NUMBER OF LOGARITHMS OF FACTORIALS.                       EXTP-048
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             EXTP-049
C   USED:     NFA,NPP                                                   EXTP-050
C                                                                       EXTP-051
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE1/:                     EXTP-052
C  INTC:      NUMBER OF FORM FACTORS WITHOUT DEFORMED SPIN-ORBIT        EXTP-053
C             INCLUDING CORRECTION TERMS.                               EXTP-054
C  INLS:      NUMBER OF SPIN-ORBIT FORM FACTORS NOT TAKING INTO ACCOUNT EXTP-055
C             MULTIPLICATION BY 2.                                      EXTP-056
C  INVC:      NUMBER OF COULOMB TRANSITION FORM FACTORS.                EXTP-057
C  INVD:      IDEM FOR COULOMB SPIN-ORBIT.                              EXTP-058
C  NFO:       NUMBER OF SETS OF FOLDING PARAMETERS.                     EXTP-059
C   USED:     INTC,INLS,INVC,INVD,NFO.                                  EXTP-060
C                                                                       EXTP-061
C***********************************************************************EXTP-062
C ITYP 1 REAL VOLUME OR DIRAC SCALAR POTENTIAL.                         EXTP-063
C      2 IMAGINARY VOLUME OR DIRAC SCALAR POTENTIAL.                    EXTP-064
C      3 REAL SURFACE OR DIRAC VECTOR POTENTIAL.                        EXTP-065
C      4 IMAGINARY SURFACE OR DIRAC VECTOR POTENTIAL.                   EXTP-066
C      5 REAL SPIN-ORBIT OR DIRAC TENSOR POTENTIAL.                     EXTP-067
C      6 IMAGINARY SPIN-ORBIT OR DIRAC TENSOR POTENTIAL.                EXTP-068
C      7 COULOMB POTENTIAL.                                             EXTP-069
C      8 COULOMB SPIN-ORBIT POTENTIAL.                                  EXTP-070
C                                                                       EXTP-071
C L1,L2 CONTROLS THE LEVEL TO POTENTIAL ASSIGNMENT.                     EXTP-072
C ML    IS 0 FOR THE POTENTIAL OR THE PLACE OF THE TRANSITION FORM.     EXTP-073
C       FACTOR IN THE SEQUENCE OF REDUCED MATRIX ELEMENTS.              EXTP-074
C       THE FORM FACTORS CONTAIN THE DEFORMATION.                       EXTP-075
C L1X,L2X,MLX  FORM FACTOR COPIED TO L1,L2,ML.                          EXTP-076
C                                                                       EXTP-077
C THE SPIN-ORBIT TRANSITION FORM FACTOR TO BE READ IS THE SECOND ONE    EXTP-078
C MULTIPLIED BY R**2. (MULTIPOLE OF AN ORDINARY WOODS-SAXON POTENTIAL). EXTP-079
C                                                                       EXTP-080
C ITYPX  -1  WOODS-SAXON POTENTIAL.                                     EXTP-081
C        -2  FIRST DERIVATIVE   MULTIPLIED BY R/SQRT(4*PI).             EXTP-082
C        -3  SECOND DERIVATIVE  MULTIPLIED BY R**2/(8*PI).              EXTP-083
C        -4  THIRD DERIVATIVE   MULTIPLIED BY R**3/(48*PI**(3/2)).      EXTP-084
C        -5  DEFORMED WOODS-SAXON POTENTIAL.                            EXTP-085
C        -6  DERIVATIVE OF DEFORMED WOODS-SAXON POTENTIAL.              EXTP-086
C        -7  LAGUERRE POLYNOMIAL.                                       EXTP-087
C        -8  SOLUTION IN REAL WOODS-SAXON POTENTIAL.                    EXTP-088
C        -9  BESSEL EXPANSION.                                          EXTP-089
C       -10  LAGUERRE EXPANSION.                                        EXTP-090
C L2X GIVES THE NUMBER OF DEFORMATIONS, OF NODES, OF BESSEL FUNCTIONS,  EXTP-091
C                      OF LAGUERRE POLYNOMIALS.                         EXTP-092
C MLX IS THE L-VALUE OF BESSEL OR LAGUERRE EXPANSION, OR NUMBER OF BOUNDEXTP-093
C FUNCTIONS: =0 OR 1 FOR ONE WITH THE QUANTUM NUMBERS OF THE TRANSITION,EXTP-094
C            =2 FOR TWO FUNCTIONS WITH THE SAME ITYPX,                  EXTP-095
C            =3 WHEN ITYPX=-8 FOR LAGUERRE POLYNOMIAL AS THE SECOND ONE.EXTP-096
C MLX AND -L1X ARE QUANTUM NUMBERS OF VIBRATIONAL BAND:                 EXTP-097
C -L1X GIVES THE MULTIPLICATION OF STEP IN COMPUTING BOUND FUNCTION,    EXTP-098
C -L1X IS THE ORDER OF DERIVATION OF BESSEL OR LAGUERRE EXPANSION.      EXTP-099
C                                                                       EXTP-100
C ALLOWED VALUES OF ITYPX FOR STANDARD POTENTIALS                       EXTP-101
C ***********************************************                       EXTP-102
C **** ML IS 0 ****                                                     EXTP-103
C ITYPX =    -1       -2,-4    -5       -6       -7,-8    -9,-10        EXTP-104
C ITYP = 1   YES      NO       YES      NO       NO       YES           EXTP-105
C ITYP = 2   YES      NO       YES      NO       NO       YES           EXTP-106
C ITYP = 3   YES      NO       YES      NO       NO       YES           EXTP-107
C ITYP = 4   YES      NO       YES      NO       NO       YES           EXTP-108
C ITYP = 5   YES      NO       YES      NO       NO       YES           EXTP-109
C ITYP = 6   YES      NO       YES      NO       NO       YES           EXTP-110
C ITYP = 7   YES      NO       YES      NO       NO       YES           EXTP-111
C ITYP = 8   YES      NO       YES      NO       NO       YES           EXTP-112
C **** ML IS NOT 0 ****                                                 EXTP-113
C ITYP = 1   YES      YES      YES      YES      YES      YES           EXTP-114
C ITYP = 2   YES      YES      YES      YES      YES      YES           EXTP-115
C ITYP = 3   YES      YES      YES      YES      NO       YES           EXTP-116
C ITYP = 4   YES      YES      YES      YES      NO       YES           EXTP-117
C ITYP = 5   YES      YES      YES      YES      NO       YES           EXTP-118
C ITYP = 6   YES      YES      YES      YES      NO       YES           EXTP-119
C ITYP = 7   NO       YES      YES      YES      NO       YES           EXTP-120
C ITYP = 8   NO       YES      YES      YES      NO       YES           EXTP-121
C NUMBER OF PARAMETERS TO STORE:                                        EXTP-122
C ITYPX = -1,-4       -5        -6        -7        -8        -9,-10    EXTP-123
C INTEGER 6           7         8         15        15       10         EXTP-124
C REAL*8  4           4+L2X     4+L2X     1         23        2+L2X     EXTP-125
C THE ODD NUMBER OF INTEGER NEEDED IS ROUNDED TO NEXT EVEN VALUE        EXTP-126
C THERE IS ONE MORE FOR COULOMB POTENTIALS AND ITYPX=-1 TO -6.          EXTP-127
C THERE ARE 5 MORE PARAMETERS FOR ITYPX=-7 AND MLX=2.                   EXTP-128
C THERE ARE 16 OR 6 MORE PARAMETERS FOR ITYPX=-8 AND MLX=2 OR MLX=3.    EXTP-129
C                                                                       EXTP-130
C FOR THE COMMON  /COUPL/ SEE CALC.                                     EXTP-131
C                                                                       EXTP-132
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     EXTP-133
C  NFA:       NUMBER OF LOGARITHMS OF FACTORIALS.                       EXTP-134
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             EXTP-135
C   USED:     NFA,NPP.                                                  EXTP-136
C                                                                       EXTP-137
C***********************************************************************EXTP-138
      IMPLICIT REAL*8 (A-H,O-Z)                                         EXTP-139
      LOGICAL LO(150)                                                   EXTP-140
      DIMENSION WV(22,*),NIV(NCOLL,NCOLL,*),IQ(6,*),IVY(7,*),IVQ(3,*),IPEXTP-141
     1I(11,*),FAC(*),VAL(*),NVAL(*),LL(2,8,5),IPP(2,18,*),PIP(18,*),ITZ(EXTP-142
     210)                                                               EXTP-143
      CHARACTER*8 AA(3,8),AB(5)                                         EXTP-144
      CHARACTER*4 IERM,LAST                                             EXTP-145
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   EXTP-146
      COMMON /INOUT/ MR,MW,MS                                           EXTP-147
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM,NFO          EXTP-148
      DATA AA /'      RE','AL VOLUM','E/SCALAR',' IMAGINA','RY VOLUM','EEXTP-149
     1/SCALAR','     REA','L SURFAC','E/VECTOR','  IMAGIN','. SURFAC','EEXTP-150
     2/VECTOR','  REAL S','PIN-ORBI','T/TENSOR',' IMAG. S','PIN-ORBI','TEXTP-151
     3/TENSOR','        ','        ',' COULOMB','      SP','IN-ORBIT',' EXTP-152
     4COULOMB'/                                                         EXTP-153
      DATA AB /'      NO','  YUKAWA',' HULTHEN','GAUSSIAN','   SAXON'/  EXTP-154
      DATA ITZ /2,2,2,2,3,4,7,7,4,4/                                    EXTP-155
      DATA IERM /'LAST'/                                                EXTP-156
      NPX=NPP+INTC                                                      EXTP-157
      NMA=3+8*NPX                                                       EXTP-158
      NVAL(1)=NMA                                                       EXTP-159
      IF (NMA.GT.IDT) CALL MEMO('EXTP',IDT,NMA)                         EXTP-160
C SETTING THE CONTROLS OF INPUT                                         EXTP-161
      NTOT=0                                                            EXTP-162
      DO 5 I=1,NPX                                                      EXTP-163
      DO 1 J=1,8                                                        EXTP-164
      LL(1,J,I)=-1                                                      EXTP-165
    1 LL(2,J,I)=-1                                                      EXTP-166
      IF (I.GT.NPP) GO TO 2                                             EXTP-167
      IF (.NOT.LO(101)) LL(1,5,i)=1                                     EXTP-168
      IF (.NOT.LO(102)) LL(1,6,i)=1                                     EXTP-169
      IF (.NOT.LO(103)) LL(1,8,i)=1                                     EXTP-170
      GO TO 3                                                           EXTP-171
    2 IF (.NOT.LO(12)) LL(1,2,I)=1                                      EXTP-172
      IF (.NOT.LO(12)) LL(1,4,I)=1                                      EXTP-173
      IF (.NOT.LO(13)) LL(1,5,I)=1                                      EXTP-174
      IF (.NOT.LO(14)) LL(1,6,I)=1                                      EXTP-175
      IF (.NOT.LO(11)) LL(1,7,I)=1                                      EXTP-176
      IF (.NOT.LO(19)) LL(1,8,I)=1                                      EXTP-177
C COUNT OF FORM FACTORS TO BE READ                                      EXTP-178
    3 DO 4 J=1,8                                                        EXTP-179
      IF (LL(1,J,I).EQ.-1) NTOT=NTOT+1                                  EXTP-180
    4 CONTINUE                                                          EXTP-181
    5 CONTINUE                                                          EXTP-182
      NFO=0                                                             EXTP-183
    6 IF (NTOT.LE.0) GO TO 38                                           EXTP-184
C INPUT OF A FORM FACTOR                                                EXTP-185
      READ (MR,1000,ERR= 40 ) L1,L2,ML,ITYP,L1X,L2X,MLX,ITYPX,NST,NFOLD,EXTP-186
     1NINTZ                                                             EXTP-187
      IF (ITYP.GT.8.OR.IABS(NST).GT.NCOLT.OR.ITYP.LE.0) GO TO 41        EXTP-188
      NFO=MAX0(NFO,NFOLD)                                               EXTP-189
      IF (IABS(ML).NE.0) GO TO 7                                        EXTP-190
C TEST FOR A POTENTIAL                                                  EXTP-191
      IF (L1.NE.L2.OR.L1.GT.NCOLT) GO TO 42                             EXTP-192
      LZ=IPI(5,L1)                                                      EXTP-193
      IF (NST.EQ.0) NST=L1                                              EXTP-194
      IF (.NOT.LO(73)) WRITE (MW,1001) (AA(K,ITYP),K=1,3),LZ            EXTP-195
      GO TO 10                                                          EXTP-196
C TEST FOR A TRANSITION                                                 EXTP-197
    7 IF (L1.GT.NCOLL.OR.L2.GT.NCOLL) GO TO 43                          EXTP-198
      LY=NIV(L1,L2,1)+IABS(ML)-1                                        EXTP-199
      IF (LY.GT.NIV(L1,L2,2)) GO TO 44                                  EXTP-200
      LX=IQ(1,LY)                                                       EXTP-201
      IF (ML.GT.0) GO TO 8                                              EXTP-202
      LX=IVY(6,LX)                                                      EXTP-203
      IF (LX.LE.0) GO TO 45                                             EXTP-204
    8 IF (LO(100)) GO TO 9                                              EXTP-205
      IF ((ITYP.EQ.5).OR.(ITYP.EQ.6)) LX=IVY(3,LX)                      EXTP-206
      IF (ITYP.GE.7) LX=IVY(ITYP-3,LX)                                  EXTP-207
    9 LZ=LX+NPP                                                         EXTP-208
      IF (NST.EQ.0) NST=1                                               EXTP-209
      IF (.NOT.LO(73)) WRITE (MW,1002) (AA(K,ITYP),K=1,3),L1,L2,ML      EXTP-210
C TEST IT IS NOT ALREADY READ AND THAT THERE IS PLACE                   EXTP-211
   10 IF (LL(1,ITYP,LZ).NE.-1) GO TO 46                                 EXTP-212
      IF (NMA+31.GT.IDT) CALL MEMO('EXTP',IDT,NMA+32)                   EXTP-213
      NTOT=NTOT-1                                                       EXTP-214
      NNA=2*NMA-1                                                       EXTP-215
      NVAL(NNA)=8*LZ+ITYP                                               EXTP-216
      NVAL(NNA+2)=NFOLD                                                 EXTP-217
      IF (ITYPX.LT.0.OR.L1X.LE.0) GO TO 17                              EXTP-218
      NVAL(NNA+5)=NMA                                                   EXTP-219
      NMD=NMA+3                                                         EXTP-220
      LL(1,ITYP,LZ)=NMD                                                 EXTP-221
      VAL(NMD)=1.D0                                                     EXTP-222
      IF (NINTZ.LT.0) READ (MR,1003,ERR= 57 ) VAL(NMD)                  EXTP-223
C USE OF ALREADY STORED FORM FACTOR/TEST EXISTENCE OF COPIED FORM FACTOREXTP-224
      IF (ITYP.NE.ITYPX) GO TO 47                                       EXTP-225
      IF (ML.NE.0) GO TO 11                                             EXTP-226
      IF (L1X.NE.L2X.OR.L1X.GT.NCOLT) GO TO 48                          EXTP-227
      LZX=IPI(5,L1X)                                                    EXTP-228
      IF (.NOT.LO(73)) WRITE (MW,1004) L1X,ITYPX,L1                     EXTP-229
      GO TO 13                                                          EXTP-230
   11 IF (L1X.GT.NCOLL.OR.L2X.GT.NCOLL) GO TO 49                        EXTP-231
      LYY=NIV(L1X,L2X,1)+MLX-1                                          EXTP-232
      IF (LYY.GT.NIV(L1X,L2X,2)) GO TO 50                               EXTP-233
      LXX=IQ(1,LYY)                                                     EXTP-234
      IF (LO(100)) GO TO 12                                             EXTP-235
      IF ((ITYP.EQ.5).OR.(ITYP.EQ.6)) LXX=IVY(3,LXX)                    EXTP-236
      IF (ITYP.GE.7) LXX=IVY(ITYP-3,LXX)                                EXTP-237
   12 LZX=LXX+NPP                                                       EXTP-238
      IF (.NOT.LO(73)) WRITE (MW,1005) L1X,L2X,MLX,ITYPX,L1,L2,ML       EXTP-239
   13 NMC=LL(1,ITYP,LZX)                                                EXTP-240
      IF (NMC.EQ.-1) GO TO 51                                           EXTP-241
C USE OF ALREADY STORED FORM FACTOR/TEST POSSIBILITY TO COPY            EXTP-242
      NMB=NVAL(2*NMC-2)                                                 EXTP-243
      ITYPX=-NVAL(2*NMB)                                                EXTP-244
      IF (NVAL(2*NMB+1).EQ.0.AND.NFOLD.NE.0) NVAL(2*NMB+1)=-1           EXTP-245
      IF (NVAL(2*NMB+1).NE.0.AND.NFOLD.EQ.0) NVAL(2*NMA+1)=-1           EXTP-246
      IF (ITYPX.NE.-16) GO TO 14                                        EXTP-247
      LZX=(NVAL(2*NMB+2)-1)/8                                           EXTP-248
      GO TO 13                                                          EXTP-249
   14 IF (ITYPX.GT.-5.OR.ML.EQ.0) GO TO 16                              EXTP-250
      IF (ITYPX.NE.-7.AND.ITYPX.NE.-8) GO TO 15                         EXTP-251
      LL(1,ITYP+2,LZ)=1                                                 EXTP-252
      NTOT=NTOT-1                                                       EXTP-253
      NMB=NMB+ITZ(-ITYPX)                                               EXTP-254
      IF (NVAL(2*NMB-1).EQ.1) GO TO 15                                  EXTP-255
      IF (NVAL(2*NMB+2).NE.1.OR.NVAL(2*NMB+6).NE.1) GO TO 16            EXTP-256
      K=IQ(2,LY)                                                        EXTP-257
      VAL(NMD)=DCGS(2*IVQ(1,K),NVAL(2*NMB+3),NVAL(2*NMB+7),FAC,NFA)*DSQREXTP-258
     1T(2.D0*IVQ(1,K)+1.D0)/VAL(NMC)                                    EXTP-259
      IF (VAL(NMD).EQ.0.D0) GO TO 52                                    EXTP-260
      GO TO 16                                                          EXTP-261
   15 IF (IQ(2,LY).NE.IQ(2,LYY)) GO TO 53                               EXTP-262
   16 NVAL(NNA+1)=16                                                    EXTP-263
      NVAL(NNA+3)=8*LZX+ITYP                                            EXTP-264
      NVAL(NNA+6)=NMA                                                   EXTP-265
      NMB=NMA+2                                                         EXTP-266
      IF (.NOT.LO(73)) WRITE (MW,1006) NMA,NMB,(NVAL(NNA+I),I=0,4),NMD,VEXTP-267
     1AL(NMD)                                                           EXTP-268
      LL(2,ITYP,LZ)=NMD                                                 EXTP-269
      NMA=NMD+1                                                         EXTP-270
      GO TO 37                                                          EXTP-271
   17 NVAL(NNA+3)=NINTZ                                                 EXTP-272
      NVAL(NNA+4)=NST                                                   EXTP-273
      IF (ITYPX.LT.0) GO TO 19                                          EXTP-274
      NVAL(NNA+7)=NMA                                                   EXTP-275
      LL(1,ITYP,LZ)=NMA+3                                               EXTP-276
C FORM FACTOR READ BY POINTS.                                           EXTP-277
      READ (MR,1008,ERR= 54 ) (VAL(NMA+I),I=4,5)                        EXTP-278
      NVAL(NNA+5)=L2X                                                   EXTP-279
      NVAL(NNA+6)=MLX                                                   EXTP-280
      IF (VAL(NMA+4).EQ.0.D0) VAL(NMA+4)=1.D0                           EXTP-281
      IF (VAL(NMA+5).EQ.0.D0) VAL(NMA+5)=1.D0                           EXTP-282
      NM=NMA+6                                                          EXTP-283
   18 NMB=NM+3                                                          EXTP-284
      IF (NMB.GT.IDT) CALL MEMO('EXTP',IDT,NMB)                         EXTP-285
      READ (MR,1007,ERR= 54 ) (VAL(I),I=NM,NMB),LAST                    EXTP-286
      NM=NMB+1                                                          EXTP-287
      IF (LAST.NE.IERM) GO TO 18                                        EXTP-288
      NVN=NMA+3                                                         EXTP-289
      NM1=NVN+1                                                         EXTP-290
      NM2=NVN+2                                                         EXTP-291
      NM3=NVN+3                                                         EXTP-292
      NVAL(2*NMA)=1-(NMB-NVN)/2                                         EXTP-293
      IF (((ITYP.LE.4).OR.(ITYP.EQ.5).OR.LO(100)).AND.(ML.NE.0)) NVAL(NNEXTP-294
     1A+5)=0                                                            EXTP-295
      IF (ITYP.LE.6) NVAL(NNA+6)=0                                      EXTP-296
      IF (.NOT.LO(73)) WRITE (MW,1009) NMA,NVN,(NVAL(NNA+I-1),I=1,8)    EXTP-297
      IF ((.NOT.LO(73)).AND.(NVAL(NNA+5).NE.0)) WRITE (MW,1010)         EXTP-298
      IF ((.NOT.LO(73)).AND.(NVAL(NNA+6).NE.0)) WRITE (MW,1011)         EXTP-299
      IF (.NOT.LO(73)) WRITE (MW,1012) NM1,NM2,VAL(NM1),VAL(NM2),NM3,NMBEXTP-300
     1,(VAL(I),I=NM3,NMB)                                               EXTP-301
      IF (NVAL(2*NMA).GT.-4) GO TO 55                                   EXTP-302
      IF (NVAL(NNA+6)*NFOLD.NE.0) GO TO 56                              EXTP-303
      LL(2,ITYP,LZ)=NMB                                                 EXTP-304
      NMA=NMB+1                                                         EXTP-305
      GO TO 37                                                          EXTP-306
C STANDARD FORM FACTORS                                                 EXTP-307
   19 IF (ITYPX.LT.-10) GO TO 57                                        EXTP-308
      ITYPY=-ITYPX                                                      EXTP-309
      IF (ITYPY.LT.9) GO TO 20                                          EXTP-310
      IF ((ML.NE.0).AND.(MLX.EQ.0)) MLX=IVY(7,LX)                       EXTP-311
      IF (MLX.LT.0) MLX=0                                               EXTP-312
      GO TO 21                                                          EXTP-313
   20 IF (((ITYPY-1)*(ITYPY-5).NE.0).AND.ML.EQ.0) GO TO 58              EXTP-314
      IF ((ITYPY.EQ.1).AND.(ML.NE.0).AND.(ITYP.GE.7)) GO TO 59          EXTP-315
      IF ((ITYPY.GE.7).AND.(ITYP.GT.2)) GO TO 60                        EXTP-316
   21 NVAL(NNA+1)=ITYPY                                                 EXTP-317
      NMB=NMA+ITZ(ITYPY)                                                EXTP-318
      IF (ITYPY.LT.5) GO TO 22                                          EXTP-319
      NVAL(NNA+5)=L2X                                                   EXTP-320
      NVAL(NNA+6)=MLX                                                   EXTP-321
      NVAL(NNA+7)=-L1X                                                  EXTP-322
      IF (ITYPY.EQ.7.OR.ITYPY.EQ.8) GO TO 28                            EXTP-323
      NVAL(2*NMB-1)=NMA                                                 EXTP-324
   22 NVAL(2*NMB)=NMA                                                   EXTP-325
      LL(1,ITYP,LZ)=NMB+1                                               EXTP-326
      IF (LO(73)) GO TO 23                                              EXTP-327
      IF (ITYPY.GE.9) WRITE (MW,1013) NMA,NMB,(NVAL(NNA+I-1),I=1,9)     EXTP-328
      IF (ITYPY.EQ.6) WRITE (MW,1014) NMA,NMB,(NVAL(NNA+I-1),I=1,9)     EXTP-329
      IF (ITYPY.EQ.5) WRITE (MW,1015) NMA,NMB,(NVAL(NNA+I-1),I=1,7)     EXTP-330
      IF (ITYPY.LT.5) WRITE (MW,1016) NMA,NMB,(NVAL(NNA+I-1),I=1,6)     EXTP-331
   23 IF (ITYPY.GE.9) GO TO 25                                          EXTP-332
      NMA=NMB+1                                                         EXTP-333
      NMB=NMB+4                                                         EXTP-334
      IF (ITYP.GT.6) NMB=NMB+1                                          EXTP-335
      READ (MR,1003,ERR= 54 ) (VAL(I),I=NMA,NMB)                        EXTP-336
      IF (ITYPY.GT.6) GO TO 24                                          EXTP-337
      K=IABS(NST)                                                       EXTP-338
      IF (K.EQ.NST) GO TO 24                                            EXTP-339
      IF (.NOT.LO(73)) WRITE (MW,1017) VAL(NMA),VAL(NMA+1)              EXTP-340
      EX=WV(2,K)**.33333333333333D0                                     EXTP-341
      EY=EX                                                             EXTP-342
      IF (LO(16)) EX=EX+WV(1,K)**.33333333333333D0                      EXTP-343
      EY=EY/EX                                                          EXTP-344
      VAL(NMA+1)=VAL(NMA+1)*EX                                          EXTP-345
      IF ((.NOT.LO(16)).OR.ML.EQ.0) GO TO 24                            EXTP-346
      ITYZ=ITYPY                                                        EXTP-347
      IF (ITYZ.GE.5) ITYZ=ITYZ-4                                        EXTP-348
      ITYW=1                                                            EXTP-349
      K=IQ(2,LY)                                                        EXTP-350
      IF (ITYP.GT.6) ITYW=ITYW*IVQ(1,K)                                 EXTP-351
      IF (LO(6)) ITYW=ITYW-1                                            EXTP-352
      IF (ITYZ.GT.1) VAL(NMA)=VAL(NMA)*EY**((ITYZ-1)*ITYW)              EXTP-353
   24 IF (.NOT.LO(73)) WRITE (MW,1018) NMA,NMB,(VAL(I),I=NMA,NMB)       EXTP-354
      IF (ITYPY.LT.5) GO TO 36                                          EXTP-355
   25 NMA=NMB+1                                                         EXTP-356
      NMC=NMA                                                           EXTP-357
      IF (ITYPY.GE.9) NMC=NMC+2                                         EXTP-358
      NMB=NMC+L2X-1                                                     EXTP-359
      IF (NMB.GT.IDT) CALL MEMO('EXTP',IDT,NMB)                         EXTP-360
      READ (MR,1003,ERR= 54 ) (VAL(I),I=NMA,NMB)                        EXTP-361
      IF ((ITYPY.GE.9).AND.(VAL(NMA).EQ.0.D0)) VAL(NMA)=1.D0            EXTP-362
      IF (NST.GT.0.OR.ITYPY.GE.9) GO TO 27                              EXTP-363
      IF (.NOT.LO(73)) WRITE (MW,1019) (VAL(I),I=NMA,NMB)               EXTP-364
      DO 26 I=NMA,NMB                                                   EXTP-365
      J=I-NMA                                                           EXTP-366
      IF (ITYP.LT.7) J=0                                                EXTP-367
      IF (.NOT.LO(6)) J=J+1                                             EXTP-368
   26 VAL(I)=VAL(I)*EY**J                                               EXTP-369
   27 IF (LO(73)) GO TO 36                                              EXTP-370
      IF (ITYPY.GE.9) WRITE (MW,1020) NMA,NMB,VAL(NMA),VAL(NMA+1),L2X,(IEXTP-371
     1,VAL(I),I=NMC,NMB)                                                EXTP-372
      IF (ITYPY.LT.9) WRITE (MW,1021) NMA,NMB,L2X,(I,VAL(I),I=NMA,NMB)  EXTP-373
      GO TO 36                                                          EXTP-374
   28 LL(1,ITYP+2,LZ)=1                                                 EXTP-375
      NTOT=NTOT-1                                                       EXTP-376
      IF (LO(100)) GO TO 61                                             EXTP-377
      NVAL(NNA+7)=-L1X                                                  EXTP-378
      IF (MLX.EQ.0) MLX=1                                               EXTP-379
      IF ((MLX.LT.0.OR.MLX.GT.3).OR.(MLX.EQ.3.AND.ITYPY.EQ.7)) GO TO 62 EXTP-380
      NVAL(NNA+6)=MLX                                                   EXTP-381
      MLY=MLX                                                           EXTP-382
      NMD=NMA+2                                                         EXTP-383
      IF (.NOT.LO(73)) WRITE (MW,1022) NMA,NMD,(NVAL(NNA+I-1),I=1,6)    EXTP-384
      NMD=NMD+1                                                         EXTP-385
      K=IQ(2,LY)                                                        EXTP-386
      IF (MLX.GT.1) GO TO 30                                            EXTP-387
      DO 29 I=1,3                                                       EXTP-388
   29 NVAL(NNA+7+I)=IVQ(I,K)                                            EXTP-389
      NVAL(NNA+11)=NMA                                                  EXTP-390
      NMB=NMD+2                                                         EXTP-391
      IF (.NOT.LO(73)) WRITE (MW,1023) NMD,NMB,(NVAL(NNA+I),I=6,11)     EXTP-392
      NMC=NMB                                                           EXTP-393
      GO TO 32                                                          EXTP-394
   30 READ (MR,1000) (NVAL(NNA+I),I=7,14),NVC                           EXTP-395
      IF (NVAL(NNA+9).EQ.1.AND.NVC.EQ.0) NVAL(NNA+9)=-3                 EXTP-396
      NMB=NMA+7                                                         EXTP-397
      NVAL(NNA+15)=NMA                                                  EXTP-398
      NMC=NMB+1                                                         EXTP-399
      VAL(NMC)=1.D0                                                     EXTP-400
      IF (NVAL(NNA+9).NE.1.OR.NVAL(NNA+13).NE.1.OR.NVC.EQ.0) GO TO 31   EXTP-401
      VAL(NMC)=DCGS(2*IVQ(1,K),NVAL(NNA+10),NVAL(NNA+14),FAC,NFA)*DSQRT(EXTP-402
     1DFLOAT(2*IVQ(1,K)+1))                                             EXTP-403
      IF (VAL(NMC).EQ.0.D0) GO TO 52                                    EXTP-404
   31 IF (.NOT.LO(73)) WRITE (MW,1024) NMD,NMB,(NVAL(NNA+I),I=6,15),NMC,EXTP-405
     1VAL(NMC)                                                          EXTP-406
   32 NMC=NMC+1                                                         EXTP-407
      LL(1,ITYP,LZ)=NMB+1                                               EXTP-408
      IF (ITYPY.EQ.8) GO TO 35                                          EXTP-409
   33 READ (MR,1003,ERR= 54 ) (VAL(NMC+I-1),I=1,3*MLX)                  EXTP-410
      IF (VAL(NMC+1).EQ.0.D0) VAL(NMC+1)=WV(2,L1)                       EXTP-411
      IF (VAL(NMC+2).EQ.0.D0) VAL(NMC+2)=1.D0                           EXTP-412
      IF (MLX.EQ.1) GO TO 34                                            EXTP-413
      IF (VAL(NMC+3).EQ.0.D0) VAL(NMC+3)=VAL(NMC)                       EXTP-414
      IF (VAL(NMC+4).EQ.0.D0) VAL(NMC+4)=WV(2,L1)                       EXTP-415
      IF (VAL(NMC+5).EQ.0.D0) VAL(NMC+5)=1.D0                           EXTP-416
   34 NMB=NMC+3*MLX-1                                                   EXTP-417
      IF (.NOT.LO(73)) WRITE (MW,1025) NMC,NMB,(VAL(I),I=NMC,NMB)       EXTP-418
      GO TO 36                                                          EXTP-419
   35 NMB=NMC+10                                                        EXTP-420
      READ (MR,1003,ERR= 54 ) (VAL(I),I=NMC,NMB)                        EXTP-421
      IF (VAL(NMC+1).EQ.0.D0) VAL(NMC+1)=WV(2,L1)                       EXTP-422
      IF (VAL(NMC+2).EQ.0.D0) VAL(NMC+2)=1.D0                           EXTP-423
      IF (VAL(NMC+4).EQ.0.D0) VAL(NMC+4)=35.D0                          EXTP-424
      IF (.NOT.LO(73)) WRITE (MW,1026) NMC,NMB,(VAL(I),I=NMC,NMB)       EXTP-425
      IF (MLX.EQ.1.AND.MLY.EQ.2.AND.VAL(NMC-10).LT.0.D0.AND.VAL(NMC).LT.EXTP-426
     10.D0) GO TO 63                                                    EXTP-427
      NMC=NMB+1                                                         EXTP-428
      MLX=MLX-2                                                         EXTP-429
      IF (MLX.EQ.1) GO TO 33                                            EXTP-430
      IF (MLX.EQ.0) GO TO 35                                            EXTP-431
   36 LL(2,ITYP,LZ)=NMB                                                 EXTP-432
      NMA=NMB+1                                                         EXTP-433
   37 IF ((.NOT.LO(10)).OR.LZ.GT.NPP) GO TO 6                           EXTP-434
      NMC=LL(1,ITYP,LZ)                                                 EXTP-435
      EX=VAL(NMC)                                                       EXTP-436
      IF (IPP(1,2,LZ).NE.0.AND.EX.EQ.0.D0.AND.ITYP.EQ.2) GO TO 64       EXTP-437
      IF (IPP(2,2,LZ).NE.0.AND.EX.EQ.0.D0.AND.ITYP.EQ.4) GO TO 65       EXTP-438
      IF (PIP(15,LZ).NE.0.D0.AND.EX.EQ.0.D0.AND.ITYP.EQ.1) GO TO 66     EXTP-439
      IF (PIP(7,LZ).NE.0.D0.AND.EX.EQ.0.D0.AND.ITYP.EQ.5) GO TO 67      EXTP-440
      IF (PIP(8,LZ).NE.0.D0.AND.EX.EQ.0.D0.AND.ITYP.EQ.6) GO TO 68      EXTP-441
      GO TO 6                                                           EXTP-442
   38 NVAL(2)=NFO                                                       EXTP-443
      NVAL(3)=NMA                                                       EXTP-444
      NVAL(4)=NMA                                                       EXTP-445
      IF (NFO.EQ.0) RETURN                                              EXTP-446
C INPOT OF FOLDING PARAMETERS                                           EXTP-447
      IF (.NOT.LO(73)) WRITE (MW,1027) NFOLD                            EXTP-448
      DO 39 I=1,NFO                                                     EXTP-449
      READ (MR,1003,ERR= 73 ) VAL(NMA),VAL(NMA+1),VAL(NMA+2)            EXTP-450
      IX=2                                                              EXTP-451
      IF (VAL(NMA+2).NE.0.D0) IX=IX+1                                   EXTP-452
      IF (VAL(NMA+1).NE.0.D0) IX=IX+2                                   EXTP-453
      IF (VAL(NMA).EQ.0.D0) IX=1                                        EXTP-454
      IF (.NOT.LO(73)) WRITE (MW,1028) I,VAL(NMA),VAL(NMA+1),VAL(NMA+2),EXTP-455
     1AB(IX)                                                            EXTP-456
   39 NMA=NMA+3                                                         EXTP-457
      NVAL(4)=NMA                                                       EXTP-458
      RETURN                                                            EXTP-459
   40 WRITE (MW,1029)                                                   EXTP-460
      GO TO 69                                                          EXTP-461
   41 WRITE (MW,1030) ITYP,NST,NCOLT                                    EXTP-462
      GO TO 69                                                          EXTP-463
   42 WRITE (MW,1031) ML,L1,L2,NCOLT                                    EXTP-464
      GO TO 69                                                          EXTP-465
   43 WRITE (MW,1032) ML,L1,L2,NCOLL                                    EXTP-466
      GO TO 69                                                          EXTP-467
   44 WRITE (MW,1033) ML,L1,L2                                          EXTP-468
      GO TO 69                                                          EXTP-469
   45 WRITE (MW,1034) L1,L2,ML                                          EXTP-470
      GO TO 69                                                          EXTP-471
   46 WRITE (MW,1035) L1,L2,ML,ITYP                                     EXTP-472
      GO TO 69                                                          EXTP-473
   47 WRITE (MW,1036) L1,L2,ML,ITYP,L1X,L2X,MLX,ITYPX                   EXTP-474
      GO TO 69                                                          EXTP-475
   48 WRITE (MW,1037) MLX,L1X,L2X,NCOLT                                 EXTP-476
      GO TO 69                                                          EXTP-477
   49 WRITE (MW,1038) MLX,L1X,L2X,NCOLL                                 EXTP-478
      GO TO 69                                                          EXTP-479
   50 WRITE (MW,1039) MLX,L1X,L2X,NCOLL                                 EXTP-480
      GO TO 69                                                          EXTP-481
   51 WRITE (MW,1040) MLX,L1X,L2X,ITYPX                                 EXTP-482
      GO TO 69                                                          EXTP-483
   52 WRITE (MW,1041) NVAL(NNA+8),NVAL(NNA+12),K                        EXTP-484
      GO TO 69                                                          EXTP-485
   53 WRITE (MW,1042) ITYPX,IQ(2,LYY),IQ(2,LY)                          EXTP-486
      GO TO 69                                                          EXTP-487
   54 WRITE (MW,1043) ITYP,LZ                                           EXTP-488
      GO TO 69                                                          EXTP-489
   55 K=-NVAL(2*NMA)                                                    EXTP-490
      WRITE (MW,1044) K                                                 EXTP-491
      GO TO 69                                                          EXTP-492
   56 WRITE (MW,1045)                                                   EXTP-493
      GO TO 69                                                          EXTP-494
   57 WRITE (MW,1046) ITYPX                                             EXTP-495
      GO TO 69                                                          EXTP-496
   58 WRITE (MW,1047) ITYPX,ITYP                                        EXTP-497
      GO TO 69                                                          EXTP-498
   59 WRITE (MW,1048) ITYPX,ITYP                                        EXTP-499
      GO TO 69                                                          EXTP-500
   60 WRITE (MW,1049) ITYPX,ITYP                                        EXTP-501
      GO TO 69                                                          EXTP-502
   61 WRITE (MW,1050) ITYPX                                             EXTP-503
      GO TO 69                                                          EXTP-504
   62 WRITE (MW,1051) MLX,ITYPX                                         EXTP-505
      GO TO 69                                                          EXTP-506
   63 WRITE (MW,1052) VAL(NMC-10),VAL(NMC)                              EXTP-507
      GO TO 69                                                          EXTP-508
   64 WRITE (MW,1053) LZ,IPP(1,2,LZ),EX                                 EXTP-509
      GO TO 69                                                          EXTP-510
   65 WRITE (MW,1054) LZ,IPP(2,2,LZ),EX                                 EXTP-511
      GO TO 69                                                          EXTP-512
   66 WRITE (MW,1055) LZ,LZ,PIP(15,LZ),EX                               EXTP-513
      GO TO 69                                                          EXTP-514
   67 WRITE (MW,1056) LZ,LZ,PIP(7,LZ),EX                                EXTP-515
      GO TO 69                                                          EXTP-516
   68 WRITE (MW,1057) LZ,LZ,PIP(8,LZ),EX                                EXTP-517
   69 IF (NTOT.EQ.0) GO TO 74                                           EXTP-518
      WRITE (MW,1058) NTOT,NPP                                          EXTP-519
      DO 72 J=1,NPX                                                     EXTP-520
      DO 71 I=1,8                                                       EXTP-521
      IF (LL(1,I,J).NE.-1) GO TO 71                                     EXTP-522
      IF (J.GT.NPP) GO TO 70                                            EXTP-523
      WRITE (MW,1059) (AA(K,I),K=1,3),J                                 EXTP-524
      GO TO 71                                                          EXTP-525
   70 WRITE (MW,1060) (AA(K,I),K=1,3),J-NPP                             EXTP-526
   71 CONTINUE                                                          EXTP-527
   72 CONTINUE                                                          EXTP-528
      GO TO 74                                                          EXTP-529
   73 WRITE (MW,1061) I,NFOLD                                           EXTP-530
   74 WRITE (MW,1062)                                                   EXTP-531
      STOP                                                              EXTP-532
 1000 FORMAT (12I5)                                                     EXTP-533
 1001 FORMAT (/3A8,' POTENTIAL NR(',I2,')')                             EXTP-534
 1002 FORMAT (/3A8,' TRANSITION POTENTIAL FROM LEVEL(',I2,') TO LEVEL(',EXTP-535
     1I2,') AND THE ORDER ML =',I2)                                     EXTP-536
 1003 FORMAT (7F10.5)                                                   EXTP-537
 1004 FORMAT (' THE ELASTIC POTENTIAL NR(',I2,') TYP(',I1,') IS COPIED TEXTP-538
     1O NR(',I2,')')                                                    EXTP-539
 1005 FORMAT (' TRANSITION POTENTIAL L1(',I2,') L2(',I2,') ML(',I2,') TYEXTP-540
     1P(',I2,') IS COPIED TO L1(',I2,') L2(',I2,') ML(',I2,')')         EXTP-541
 1006 FORMAT (' USING PARAMETERS',I6,' TO',I6,' FOR COPY TO:',I5,5X,'(COEXTP-542
     1PY):',I3,5X,'FOLD =',I3,5X,'FROM:',I5,5X,'START:',I5/' USING PARAMEXTP-543
     2ETER',I6,' FOR MULTIPLICATIVE FACTOR',D15.8)                      EXTP-544
 1007 FORMAT (F10.5,F20.10,F10.5,F20.10,A4)                             EXTP-545
 1008 FORMAT (2F10.5)                                                   EXTP-546
 1009 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/I5,5X,'NB POIEXTP-547
     1NTS:',I5,5X,'FOLD:',I2,5X,'INTG:',I2,5X,'STEP:',I2,5X,'KIND',2I5,5EXTP-548
     2X,'START:',I5)                                                    EXTP-549
 1010 FORMAT (25X,'1/R D/DR(V(R)) READ INSTEAD OF V(R)')                EXTP-550
 1011 FORMAT (25X,'COULPMB POTENTIAL READ INSTEAD OF CHARGE DISTRIBUTIONEXTP-551
     1')                                                                EXTP-552
 1012 FORMAT (25X,'PARAMETERS',I6,' TO',I6,' TO STORE:'/20X,'STRENGTH:',EXTP-553
     1F15.6,10X,'SCALE:',F15.6/' AND PARAMETERS',I6,' TO',I6,' TO STORE:EXTP-554
     2'/4(6X,'RADIUS',7X,'POTENTIAL',2X)/(4(2X,0P,F10.5,3X,1P,D15.7)))  EXTP-555
 1013 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/I5,3X,'TYPE:'EXTP-556
     1,I2,3X,'FOLD:',I2,3X,'INTG:',I2,3X,'STEP:',I2,I6,' FUNCTIONS  L:',EXTP-557
     2I3,I4,' DERIVATIONS  START:',I5)                                  EXTP-558
 1014 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/I5,3X,'TYPE:'EXTP-559
     1,I2,3X,'FOLD:',I2,3X,'INTG:',I2,3X,'STEP:',I2,I6,' DEFORMATIONS   EXTP-560
     2LBET:',I5,5X,'KBET:',I5,5X,'START:',I5)                           EXTP-561
 1015 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/I5,3X,'TYPE:'EXTP-562
     1,I2,3X,'FOLD:',I2,3X,'INTG:',I2,3X,'STEP:',I2,I6,' DEFORMATIONS',5EXTP-563
     2X,'START:',I5)                                                    EXTP-564
 1016 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:',I4,3X,'TYPE:'EXTP-565
     1,I2,3X,'FOLD:',I2,3X,'INTG:',I2,3X,'STEP:',I2,5X,'START:',I5)     EXTP-566
 1017 FORMAT (' VALUES READ:',F12.6,3X,F9.6)                            EXTP-567
 1018 FORMAT (' USING PARAMETERS',I6,' TO',I6,' FOR'/' DEPTH',F12.6,' MEEXTP-568
     1V  RADIUS',F10.6,' F  DIFFUSENESS',F9.6,' F AT THE POWER (1.+',F9.EXTP-569
     26,')'/40X,F9.6,' (THIRD CHARGE PARAMETER)'/)                      EXTP-570
 1019 FORMAT (' DEFORMATIONS READ:',8F10.5/(19X,8F10.5))                EXTP-571
 1020 FORMAT (' USING PARAMETERS',I6,' TO',I6,' FOR STRENGTH:',F12.6,10XEXTP-572
     1,'SCALE:',F12.6/' AND TO STORE',I5,' BESSEL FUNCTION OR LEGENDRE PEXTP-573
     2OLYNOMIALS COEFFICIENTS:'/(6(3X,I5,F10.5)))                       EXTP-574
 1021 FORMAT (' USING PARAMETERS',I6,' TO',I6,' FOR',I5,' DEFORMATIONS:'EXTP-575
     1/(6(3X,I5,F10.5)))                                                EXTP-576
 1022 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:',I4,3X,'TYPE:'EXTP-577
     1,I2,3X,'FOLD:',I2,3X,'INTG:',I2,3X,'STEP:',I2,5X,'MULT:',I3)      EXTP-578
 1023 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:',I2,' FUNCTIONEXTP-579
     1S   N =',I2,3X,'L =',I3,3X,'2*S =',I2,3X,'2*J =',I3,5X,'START:',I5EXTP-580
     2)                                                                 EXTP-581
 1024 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/I5,' FUNCTIONEXTP-582
     1S',2(2X,'N =',I2,3X,'L =',I3,3X,'2*S =',I2,3X,'2*J =',I3),5X,'STAREXTP-583
     2T:',I5/' USING PARAMETER',I6,' FOR MULTIPLICATIVE FACTOR',D18.8)  EXTP-584
 1025 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/(' OSCILLATOREXTP-585
     1 PARAMETER',F10.6,2X,'TOTAL MASS',F12.6,2X,'PARTICLE MASS',F12.6))EXTP-586
 1026 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/' **** BINDINEXTP-587
     1G ENERGY',F12.6,' MEV ****',2X,'TOTAL MASS',F12.6,2X,'PARTICLE MASEXTP-588
     2S',F12.6,2X,'PRODUCT OF CHARGES',F8.2/' SEARCH ON DEPTH OF REAL POEXTP-589
     3TENTIAL FROM',F12.6,' WITH REDUCED RADIUS',F10.6,' FERMI AND DIFFUEXTP-590
     4SENESS',F10.6,' FERMI'/' SPIN-ORBIT POTENTIAL  DEPTH:',F12.6,' MEVEXTP-591
     5  RADIUS:',F10.6,' F  DIFFUSENESS:',F9.6,' F  COULOMB RADIUS:',F10EXTP-592
     6.6,' F'/)                                                         EXTP-593
 1027 FORMAT (/2X,I3,' SETS OF FOLDING PARAMETERS')                     EXTP-594
 1028 FORMAT (2X,I2,5X,' V =',F12.6,5X,' R =',F9.6,5X,' A =',F9.6,5X,A8,EXTP-595
     1' FOLDING')                                                       EXTP-596
 1029 FORMAT (' INPUT ERROR IN THE FIRST CARD DEFINING THE POTENTIAL')  EXTP-597
 1030 FORMAT (/' ITYP =',I5,' NOT ALLOWED OR NST =',I5,' LARGER THAN NCOEXTP-598
     1LT =',I3)                                                         EXTP-599
 1031 FORMAT (' WITH ML =',I2,' L1 =',I3,' IS NOT EQUAL TO L2 =',I3,' OREXTP-600
     1 IS LARGER THAN NCOLT =',I3)                                      EXTP-601
 1032 FORMAT (' WITH ML =',I3,' L1 =',I3,' OR L2 =',I3,' IS LARGER THAN EXTP-602
     1NCOLL =',I3)                                                      EXTP-603
 1033 FORMAT (' ML =',I3,' TOO LARGE BETWEEN LEVELS L1 =',I3,' AND L2 ='EXTP-604
     1,I3)                                                              EXTP-605
 1034 FORMAT (' THERE IS NO CORRECTION TERM OF THE FORM FACTOR FOR L1 ='EXTP-606
     1,I3,'  L2 =',I3,'  ML =',I3)                                      EXTP-607
 1035 FORMAT (' THE FORM FACTOR FOR L1 =',I3,'  L2 =',I3,'  ML =',I3,'  EXTP-608
     1AND ITYP =',I2,' IS ALREADY READ OR DOES NOT HAVE TO BE READ')    EXTP-609
 1036 FORMAT (/' DIFFERENT TYPES NOT ALLOWED TO COPY FOR FORM FACTORS L1EXTP-610
     1/L2/ML/ITYP/L1X/L2X/MLX/ITYPX :'/30X,8I5)                         EXTP-611
 1037 FORMAT (' WITH MLX =',I2,' L1X =',I3,' IS NOT EQUAL TO L2X =',I3,'EXTP-612
     1 OR IS LARGER THAN NCOLT =',I3)                                   EXTP-613
 1038 FORMAT (' WITH MLX =',I3,' L1X =',I3,' OR L2X =',I3,' IS LARGER THEXTP-614
     1AN NCOLL =',I3)                                                   EXTP-615
 1039 FORMAT (' MLX =',I3,' TOO LARGE BETWEEN LEVELS L1X =',I3,' AND L2XEXTP-616
     1 =',I5)                                                           EXTP-617
 1040 FORMAT (' FORM FACTOR DEFINED BY L1X =',I3,'  L2X =',I3,'  MLX =',EXTP-618
     1I3,'  ITYPX =',I3,' NOT YET DEFINED')                             EXTP-619
 1041 FORMAT (' NO PARTICLE-HOLE COUPLING WITH 2*JP =',I3,' AND 2*JH =',EXTP-620
     1I3,' TO L =',I3)                                                  EXTP-621
 1042 FORMAT (' COPY WITH ITYPX =',I3,' NOT ALLOWED BETWEEN TRANSITIONS EXTP-622
     1WITH QUANTUM NUMBERS',I2,' AND',I2)                               EXTP-623
 1043 FORMAT (' INPUT ERROR FOR THE POTENTIAL (',I2,',',I2,')')         EXTP-624
 1044 FORMAT (' NUMBER OF DATA',I4,' LESS THAN 4 WHICH ARE NECESSARY TO EXTP-625
     1INTERPOLATE.')                                                    EXTP-626
 1045 FORMAT (' COULOMB POTENTIAL CANNOT BE FOLDED.'/' ONLY CHARGE DISTREXTP-627
     1IBUTION CAN BE FOLDED')                                           EXTP-628
 1046 FORMAT (/' ITYPX =',I5,' NOT ALLOWED FOR STANDARD FORM FACTORS')  EXTP-629
 1047 FORMAT (' ITYPX,ITYP =',2I5,'  NOT ALLOWED: CENTRAL POTENTIAL CANNEXTP-630
     1OT BE DERIVATIVE OR BOUND FUNCTION')                              EXTP-631
 1048 FORMAT (' ITYPX,ITYP =',2I5,'  NOT ALLOWED: COULOMB TRANSITION FOREXTP-632
     1M FACTOR MUST BE DERIVATIVE')                                     EXTP-633
 1049 FORMAT (' ITYPX,ITYP =',2I5,'  NOT ALLOWED: BOUND STATE FUNCTION CEXTP-634
     1AN BE ONLY REAL OR IMAGINARY TRANSITION POTENTIAL')               EXTP-635
 1050 FORMAT (' ITYPX =',I3,'  NOT ALLOWED IN DIRAC FORMALISM')         EXTP-636
 1051 FORMAT (' L2X =',I3,'  NOT ALLOWED WITH ITYPX =',I4)              EXTP-637
 1052 FORMAT (' FOR ITYP=-8 AND TWO FUNCTIONS, BOTH ARE UNBOUNDED',2F12.EXTP-638
     16)                                                                EXTP-639
 1053 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED FOR DISPERSION RELATIEXTP-640
     1ONS BECAUSE THE VOLUME IMAGINARY STRENGTH IS 0:'/10X,'NV =',I3,'  EXTP-641
     1WV =',D13.6)                                                      EXTP-642
 1054 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED FOR DISPERSION RELATIEXTP-643
     1ONS BECAUSE THE SURFACE IMAGINARY STRENGTH IS 0:'/10X,'NS =',I3,' EXTP-644
     2 WS =',D13.6)                                                     EXTP-645
 1055 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THEEXTP-646
     1 HARTREE-FOCK POTENTIAL OF WHICH THE STRENGTH IS 0':/10X,'PIP(15,'EXTP-647
     2,I2,') =',D13.6,'  V =',D13.6)                                    EXTP-648
 1056 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THEEXTP-649
     1 REAL SPIN-ORBIT OF WHICH THE STRENGTH IS 0':/10X,'PIP(7,',I2,') =EXTP-650
     2',D13.6,'  VLS =',D13.6)                                          EXTP-651
 1057 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THEEXTP-652
     1 IMAGINARY SPIN-ORBIT OF WHICH THE STRENGTH IS 0':/10X,'PIP(8,',I2EXTP-653
     2,') =',D13.6,'  WLS =',D13.6)                                     EXTP-654
 1058 FORMAT (I6,' FORM FACTORS TO READ, FOR (ITYP, N  )  ( POTENTIALS FEXTP-655
     1OR N SMALLER THAN',I2,' TRANSITIONS AFTER)')                      EXTP-656
 1059 FORMAT (10X,3A8,' MISSING FOR POTENTIAL',I4)                      EXTP-657
 1060 FORMAT (10X,3A8,' MISSING FOR TRANSITION',I4)                     EXTP-658
 1061 FORMAT (' INPUT ERROR FOR THE',I4,'TH SET OF THE',I4,' SETS OF FOLEXTP-659
     1DING PARAMETERS TO BE READ')                                      EXTP-660
 1062 FORMAT (//' IN EXTP  ...  STOP  ...')                             EXTP-661
      END                                                               EXTP-662
C 27/06/06                                                      ECIS12  DCGS-000
      FUNCTION DCGS(L,J1,J2,FAC,NFA)                                    DCGS-001
C COMPUTATION OF SINGULAR CLEBSCH-GORDAN COEFFICIENTS.                  DCGS-002
C INPUT:     L,J1,J2: DOUBLE VALUE OF ANGULAR MOMENTA.                  DCGS-003
C            FAC:     TABLE OF LOGARITHM OF FACTORIALS.                 DCGS-004
C            NFA:     LENGTH OF FAC.                                    DCGS-005
C OUTPUT:                                                               DCGS-006
C                                                                       DCGS-007
C                                 /~~~~~~~~~~~~~~~~   ( J2   L   J1  )  DCGS-008
C  CGS(L,J1,J2) = (-)**(J1+1/2)  / (2*J1+1)*(2*J2+1)  (              )  DCGS-009
C                                                     (-1/2  0   1/2 )  DCGS-010
C  WHEN J1 AND J2 ARE HALF-INTEGERS,                                    DCGS-011
C                              ( J2  L  J1 )                            DCGS-012
C  CGS(L,J1,J2) = (-)**(J1-1)  (           )                            DCGS-013
C                              (  0  0  0  )                            DCGS-014
C  WHEN J1 AND J2  ARE INTEGERS.                                        DCGS-015
C                                                                       DCGS-016
C***********************************************************************DCGS-017
      IMPLICIT REAL*8 (A-H,O-Z)                                         DCGS-018
      DIMENSION FAC(*)                                                  DCGS-019
      IF (L.LT.0.OR.J1.LT.0.OR.J2.LT.0) GO TO 1                         DCGS-020
      LL=L+J1+J2+2                                                      DCGS-021
      LT=LL/2                                                           DCGS-022
      IF (2*LT.NE.LL) GO TO 1                                           DCGS-023
      IF (LT.GE.NFA) GO TO 1                                            DCGS-024
      L1=LT-J1                                                          DCGS-025
      L2=LT-J2                                                          DCGS-026
      L3=LT-L                                                           DCGS-027
      IF (L1.LE.0.OR.L2.LE.0.OR.L3.LE.0) GO TO 1                        DCGS-028
      L4=LT+1                                                           DCGS-029
      N1=(L1+1)/2                                                       DCGS-030
      N2=(L2+1)/2                                                       DCGS-031
      N3=(L3+1)/2                                                       DCGS-032
      N4=(L4+1)/2                                                       DCGS-033
      DCGS=DEXP(FAC(N4)-FAC(N1)-FAC(N2)-FAC(N3)-.5D0*(FAC(L4)-FAC(L1)-FADCGS-034
     1C(L2)-FAC(L3)))                                                   DCGS-035
      IF (2*(N1/2).NE.N1) DCGS=-DCGS                                    DCGS-036
      IF (N4-N1-N2-N3+1) 3 , 2 , 1                                      DCGS-037
    1 DCGS=0.D0                                                         DCGS-038
    2 DCGS=2.D0*DCGS                                                    DCGS-039
    3 RETURN                                                            DCGS-040
      END                                                               DCGS-041
C 20/10/12                                                      ECIS12  CONU-000
      SUBROUTINE CONU(IX,IPI,WV,IPIM,WVM,NCI,XD,SCN,KXT,LO)             CONU-001
C DISCRETISATION OF CONTINUA FOR COMPOUND NUCLEUS.                      CONU-002
C INPUT:     IX:      0 FOR COUNT OF POINTS,                            CONU-003
C                     NOT 0 FOR COMPUTATION OF POINTS, WEIGHTS, ...     CONU-004
C            IPI:     INTEGER VALUES FOR THE DESCRIPTION OF CHANNELS    CONU-005
C                     (SEE CALX).                                       CONU-006
C            WV:      FLOATING VALUES FOR THE DESCRIPTION OF CHANNELS   CONU-007
C                     (SEE CALX).                                       CONU-008
C            SCN:     DESCRIPTIONS OF LEVEL DENSITIES:                  CONU-009
C                     1-SA  2-UX   3-TAU  4-SG   5-E0   6-EX   7-NZ     CONU-010
C                     (SEE INPUT DESCRIPTION).                          CONU-011
C            LO(I):   LOGICAL CONTROLS:                                 CONU-012
C               LO(8)  =.TRUE. RELATIVISTIC KINEMATICS.                 CONU-013
C OUTPUT:    IPIM:    IPI FOR CONTINUA OF COMPOUND NUCLEUS.             CONU-014
C            WVM:     WV FOR CONTINUA OF COMPOUND NUCLEUS.              CONU-015
C            NCI:     STARTING AND FINAL ADDRESSES FOR CONTINUA.        CONU-016
C            XD:      STEPS OF DISCRETISATION OF CONTINUA,              CONU-017
C                     ENERGY AND SPIN DEPENDENCE OF LEVEL DENSITIES     CONU-018
C            KXT:     NUMBER OF TRANSMISSION COEFFICIENTS               CONU-019
C                                                                       CONU-020
C FOR THE COMMON  /DCONS/ SEE CALC.                                     CONU-021
C FOR THE COMMON  /NCOMP/ SEE CALX.                                     CONU-022
C                                                                       CONU-023
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     CONU-024
C  CM:        ATOMIC MASS IN MEV.                                       CONU-025
C   USED:     CM.                                                       CONU-026
C                                                                       CONU-027
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     CONU-028
C  NCONT:     NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS.                 CONU-029
C  NCONS:     NUMBER OF LEVEL DENSITIES NEEDED.                         CONU-030
C  NIE:       NUMBER OF UNCOUPLED STATES ADDED FOR DISCRETISATION.      CONU-031
C  NCOLX:     TOTAL NUMBER OF LEVELS WITHOUT DISCRETISATION.            CONU-032
C  ACN1:      RATIO SIZE/STEP FOR DISCRETISATION OF A CONTINUUM.        CONU-033
C  ACN2:      MAXIMUM NUMBER OF STEPS BY MEV FOR A CONTINUUM.           CONU-034
C   DEFINED:  NIE.                                                      CONU-035
C   USED:     NCONT,NCONS,NIE,NCOLX,ACN1,ACN2.                          CONU-036
C***********************************************************************CONU-037
      IMPLICIT REAL*8 (A-H,O-Z)                                         CONU-038
      LOGICAL LO(150)                                                   CONU-039
      DIMENSION IPI(11,*),WV(22,*),IPIM(11,*),WVM(22,*),NCI(2,*),XD(3,*)CONU-040
     1,SCN(7,*)                                                         CONU-041
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            CONU-042
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQCONU-043
     1,ACN1,ACN2,AZ(18)                                                 CONU-044
      COMMON /INOUT/ MR,MW,MS                                           CONU-045
C DISCRETISATION OF CONTINUUM FOR COMPOUND NUCLEUS.                     CONU-046
      NIE=0                                                             CONU-047
      IF (IX.EQ.0) GO TO 1                                              CONU-048
      KXT=IPI(8,NCOLX+1-NCONT)                                          CONU-049
    1 DO 12 I=1,NCONT                                                   CONU-050
      J=I+NCONS-NCONT                                                   CONU-051
      SCNB=DEXP(2.D0*DSQRT(SCN(1,J)*SCN(2,J))-(SCN(6,J)-SCN(5,J))/SCN(3,CONU-052
     1J))*SCN(3,J)/(SCN(1,J)**.5D0*SCN(2,J)**1.5D0)                     CONU-053
      IV=I-NCONT+NCOLX                                                  CONU-054
      NCI(1,I)=NIE+1                                                    CONU-055
      IF (WV(3,IV).LE.0.D0) GO TO 11                                    CONU-056
      NE=0                                                              CONU-057
      E=WV(3,IV)                                                        CONU-058
      ACN3=1.D0/ACN2                                                    CONU-059
      IF (E*ACN2.LT.1.D0) ACN3=E/1.9D0                                  CONU-060
    2 IF (E.LE.0.D0) GO TO 11                                           CONU-061
      NIE=NIE+1                                                         CONU-062
      IF (NE.NE.0) GO TO 4                                              CONU-063
      IF (E.LT.ACN1*ACN3) GO TO 3                                       CONU-064
      ESTP=E/ACN1                                                       CONU-065
      GO TO 5                                                           CONU-066
    3 NE=IDINT(E/ACN3+1.D0)                                             CONU-067
      IF (NE.EQ.1) NE=2                                                 CONU-068
      ACN3=E/DFLOAT(NE)*1.000001D0                                      CONU-069
    4 ESTP=ACN3                                                         CONU-070
    5 IF (E.LT.ESTP) ESTP=E                                             CONU-071
      ECN=E-.5D0*ESTP                                                   CONU-072
      E=E-ESTP                                                          CONU-073
      IF (IX.EQ.0) GO TO 2                                              CONU-074
      DO 6 K=1,22                                                       CONU-075
    6 WVM(K,NIE)=WV(K,IV)                                               CONU-076
      DO 7 K=1,11                                                       CONU-077
    7 IPIM(K,NIE)=IPI(K,IV)                                             CONU-078
      WVM(3,NIE)=ECN                                                    CONU-079
      XD(2,NIE)=ESTP                                                    CONU-080
      IF (LO(8)) GO TO 8                                                CONU-081
      WVM(13,NIE)=WVM(3,NIE)*(WVM(1,NIE)+WVM(2,NIE))/WVM(2,NIE)         CONU-082
      GO TO 9                                                           CONU-083
    8 WVM(13,NIE)=WVM(3,NIE)*(WVM(3,NIE)/(2.D0*CM)+WVM(1,NIE)+WVM(2,NIE)CONU-084
     1)/WVM(2,NIE)                                                      CONU-085
    9 LY=4+IDINT(3.3D0*DSQRT(WVM(3,NIE)))                               CONU-086
      IPIM(10,NIE)=LY-1                                                 CONU-087
      IPIM(8,NIE)=KXT                                                   CONU-088
      KXT=KXT+LY*IPIM(2,NIE)                                            CONU-089
      IF (WV(3,1)-WVM(3,NIE).GT.SCN(6,J)) GO TO 10                      CONU-090
      XD(1,NIE)=XD(2,NIE)*DEXP((WV(3,1)-WVM(3,NIE)-SCN(5,J))/SCN(3,J))/SCONU-091
     1CN(3,J)                                                           CONU-092
      XD(3,NIE)=2.D0*SCN(4,J)**2                                        CONU-093
      GO TO 2                                                           CONU-094
   10 EXD=WV(3,1)-WVM(3,NIE)+SCN(2,J)-SCN(6,J)                          CONU-095
      EBYT=DSQRT(SCN(1,J)*EXD)                                          CONU-096
      XD(1,NIE)=XD(2,NIE)*DEXP(2.D0*EBYT)/(EBYT*EXD*SCNB)               CONU-097
      XD(3,NIE)=2.D0*SCN(4,J)**2*DSQRT(EXD/SCN(2,J))                    CONU-098
      GO TO 2                                                           CONU-099
   11 IF (IX.EQ.0) GO TO 12                                             CONU-100
      JY=NIE-NCI(1,I)+1                                                 CONU-101
      WRITE (MW,1000) I,JY                                              CONU-102
      NCI(2,I)=NIE                                                      CONU-103
   12 CONTINUE                                                          CONU-104
      IF (IX.NE.0) CALL KHCO(NIE,WVM,IPIM,WV(1,1),WV(8,1),LO)           CONU-105
      RETURN                                                            CONU-106
 1000 FORMAT (' ***** START OF',I4,'TH CONTINUUM *****',5X,I5,' DISCRETICONU-107
     1SATION POINTS.')                                                  CONU-108
      END                                                               CONU-109
C 20/08/06                                                      ECIS12  GGDR-000
      SUBROUTINE GGDR(IPI,WV,SCN,LO)                                    GGDR-001
C CALCULATIONS RELATED TO GIANT DIPOLE RESONANCE.                       GGDR-002
C INPUT:     IPI(3,*):MULTIPLICITY OF THE TARGET.                       GGDR-003
C            WV(J,*): MASS OF PARTICLE AND TARGET FOR J=1 AND 2,        GGDR-004
C                     CENTRE OF MASS ENERGY IN MEV FOR J=3.             GGDR-005
C            SCN:     DESCRIPTIONS OF LEVEL DENSITIES:                  GGDR-006
C                     1-SA  2-UX   3-TAU  4-SG   5-E0   6-EX   7-NZ     GGDR-007
C            LO(I):   LOGICAL CONTROLS:                                 GGDR-008
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             GGDR-009
C               LO(82) =.TRUE. OLD SIMPLIFIED COMPOUND NUCLEUS.         GGDR-010
C               LO(86) =.TRUE. GAMMA EMISSION IN COMPOUND NUCLEUS.      GGDR-011
C               LO(112)=.TRUE. SPIN-ORBIT OR COMPOUND NUCLEUS PARAMETERSGGDR-012
C                              ARE CHANGED IN SEARCH.                   GGDR-013
C               LO(115)=.TRUE. FIRST COMPUTATION FOR THIS ENERGY.       GGDR-014
C               LO(116)=.TRUE. NO OUTPUT.                               GGDR-015
C OUTPUT:    IN COMMON /NCOMP/.                                         GGDR-016
C                                                                       GGDR-017
C FOR THE COMMON  /NCOMP/ SEE CALX.                                     GGDR-018
C                                                                       GGDR-019
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     GGDR-020
C  NRD:       NUMBER OF GAMMA TRANSMISSION COEFFICIENTS.                GGDR-021
C  NCONT:     NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS.                 GGDR-022
C  BZ:        HAUSER-FESHBACH AND MOLDAUER'S PARAMETERS DESCRIBED BELOW.GGDR-023
C   BZ(1):    SQUARE ROOT OF ELASTIC ENHANCEMENT.                       GGDR-024
C   BZ(2):    IF LO(82)=.TRUE., SPIN CUT-OFF PARAMETER.                 GGDR-025
C             IF LO(82)=.FALSE., PARTICLE DEGREES OF FREEDOM.           GGDR-026
C   BZ(3):    SQUARE ROOT OF LEVEL DENSITY PARAMETER. IF LO(82)=LO(87)= GGDR-027
C             .FALSE., PARAMETER BZ(3) IN MOLDAUER'S FORMULA OF INPUT   GGDR-028
C             DESCRIPTION.                                              GGDR-029
C   BZ(4):    IF LO(82)=LO(87)=.FALSE., PARAMETER BZ(4) IN SAME FORMULA.GGDR-030
C   BZ(5):    IF LO(82)=LO(87)=.FALSE., PARAMETER BZ(5) IN SAME FORMULA.GGDR-031
C  TG0:       SLOW S-WAVE NEUTRON GAMMA WIDTH/SPACING FOR NORMALISATION.GGDR-032
C  BN:        NEUTRON SEPARATION ENERGY.                                GGDR-033
C  FNUG:      RADIATIVE DEGREES OF FREEDOM.                             GGDR-034
C  EGD:       ENERGY OF THE GIANT DIPOLE RESONANCE.                     GGDR-035
C  GGD:       RESONANCE WIDTH.                                          GGDR-036
C  TG1:       DERIVED DATA FOR GAMMA IN COMPOUND NUCLEUS.               GGDR-037
C  SGSQ:      DERIVED DATA FOR GAMMA IN COMPOUND NUCLEUS.               GGDR-038
C   DEFINED:  BZ,EGD,GGD,SGSQ.                                          GGDR-039
C   USED:     NRD,NCONT,BZ,TGO,BN,FNUG,EGD,GGD,TG1,SGSQ.                GGDR-040
C                                                                       GGDR-041
C***********************************************************************GGDR-042
      IMPLICIT REAL*8 (A-H,O-Z)                                         GGDR-043
      LOGICAL LO(150)                                                   GGDR-044
      DIMENSION IPI(11,*),WV(22,*),SCN(7)                               GGDR-045
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQGGDR-046
     1,ACN1,ACN2,AZ(6),BZ(5),TG0,BN,FNUG,EGD,GGD,TG1,SGSQ               GGDR-047
      COMMON /INOUT/ MR,MW,MS                                           GGDR-048
      IF (.NOT.LO(81)) RETURN                                           GGDR-049
      BZ(2)=DABS(BZ(2))                                                 GGDR-050
      IF (LO(82)) BZ(3)=BZ(1)*BZ(1)-1.D0                                GGDR-051
      IF (.NOT.(LO(112).OR.LO(115))) RETURN                             GGDR-052
C  GAMMA RAY INPUT.                                                     GGDR-053
      IF ((.NOT.LO(86)).OR.(NRD.NE.0)) RETURN                           GGDR-054
      XFR=0.5D0                                                         GGDR-055
      NA=IDINT(WV(2,1)+WV(1,1)+.5D0)                                    GGDR-056
      AA=DFLOAT(NA)                                                     GGDR-057
      NZ=IDINT(SCN(7)+.1D0)                                             GGDR-058
      NN=NA-NZ                                                          GGDR-059
      ZZ=DFLOAT(NZ*NN)                                                  GGDR-060
      KGD=0                                                             GGDR-061
      IF (EGD.EQ.0.D0) EGD=163.D0*DSQRT(ZZ)/(AA**1.3333333D0)           GGDR-062
      IF (EGD.LT.0.D0) GO TO 1                                          GGDR-063
      KGD=1                                                             GGDR-064
      IF (GGD.LE.0.D0) GGD=5.D0                                         GGDR-065
    1 IF (.NOT.LO(116)) WRITE (MW,1000) NA,NZ,NN,BN,FNUG,SCN(4)         GGDR-066
      ATG0=DABS(TG0)                                                    GGDR-067
      IF (.NOT.LO(116)) WRITE (MW,1001) ATG0                            GGDR-068
      IF (KGD.EQ.0.AND..NOT.LO(116)) WRITE (MW,1002)                    GGDR-069
      IF (KGD.EQ.1.AND..NOT.LO(116)) WRITE (MW,1003) EGD,GGD,XFR        GGDR-070
      SGSQ=2.D0*SCN(4)**2                                               GGDR-071
      ROJ=0.D0                                                          GGDR-072
      ECM=0.D0                                                          GGDR-073
    2 TG=0.D0                                                           GGDR-074
      ELIM=BN+ECM                                                       GGDR-075
      ELO=0.D0                                                          GGDR-076
    3 EHI=ELO+0.05D0                                                    GGDR-077
      IF (EHI.GE.ELIM) EHI=ELIM                                         GGDR-078
      EPS=(EHI+ELO)/2.D0                                                GGDR-079
      ESQ=EPS*EPS                                                       GGDR-080
      TINT=(EHI-ELO)*EPS*ESQ                                            GGDR-081
      EEE=-EGD*EGD+ESQ                                                  GGDR-082
      IF (KGD.EQ.1) TINT=TINT*EPS/(ESQ*GGD*GGD+EEE*EEE)                 GGDR-083
      EXC=BN+ECM-EPS                                                    GGDR-084
      IF (EXC.GT.SCN(6)) GO TO 4                                        GGDR-085
      EBYT=(EXC-SCN(5))/SCN(3)                                          GGDR-086
      TINT=TINT*DEXP(EBYT)/SCN(3)                                       GGDR-087
      GO TO 5                                                           GGDR-088
    4 EXD=EXC+SCN(2)-SCN(6)                                             GGDR-089
      EBYT=DSQRT(SCN(1)*EXD)                                            GGDR-090
      SCNB=DEXP(2.D0*DSQRT(SCN(1)*SCN(2))-(SCN(6)-SCN(5))/SCN(3))*SCN(3)GGDR-091
     1/(SCN(1)**.5D0*SCN(2)**1.5D0)                                     GGDR-092
      TINT=TINT*DEXP(2.D0*EBYT)/(EBYT*EXD*SCNB)                         GGDR-093
    5 TG=TG+TINT                                                        GGDR-094
      IF (EHI.EQ.ELIM) GO TO 6                                          GGDR-095
      ELO=EHI                                                           GGDR-096
      GO TO 3                                                           GGDR-097
    6 IF (ECM.NE.0.D0) GO TO 9                                          GGDR-098
      TEMP=TG                                                           GGDR-099
      JD=IPI(3,1)-1                                                     GGDR-100
      N1=IABS(JD-1)                                                     GGDR-101
      N2=JD+1                                                           GGDR-102
      DO 8 I=N1,N2,2                                                    GGDR-103
      N3=IABS(I-2)                                                      GGDR-104
      N4=I+2                                                            GGDR-105
      DO 7 J=N3,N4,2                                                    GGDR-106
      DEX=-DFLOAT(J+1)**2/(SGSQ*4.D0)                                   GGDR-107
    7 ROJ=ROJ+DEXP(DEX)*DFLOAT(J+1)/SGSQ                                GGDR-108
    8 CONTINUE                                                          GGDR-109
      CTG=ATG0/(TEMP*ROJ)                                               GGDR-110
      ECM=WV(3,1)                                                       GGDR-111
      GO TO 2                                                           GGDR-112
    9 TG1=TG*CTG                                                        GGDR-113
      RETURN                                                            GGDR-114
 1000 FORMAT (/'    GAMMA RAY CHANNEL PARAMETERS :'//'   A=',I3,'  Z=',IGGDR-115
     13,'  N=',I3,5X,F9.3,' MEV  NEUTRON BINDING',5X,F6.2,' RADIATIVE D.GGDR-116
     2 OF F.',5X,'SIGMA=',F6.3)                                         GGDR-117
 1001 FORMAT ('   NORMALISED TO SLOW S-WAVE NEUTRON GAMMA WIDTHS/SPACINGGGDR-118
     1S =',D12.4)                                                       GGDR-119
 1002 FORMAT ('   E1 STRONG COUPLING MODEL.')                           GGDR-120
 1003 FORMAT ('   E1 GIANT RESONANCE AT ',F7.2,' MEV   WIDTH=',F7.2,' MEGGDR-121
     1V',5X,'EXCHANGE FRACTION=',F5.2)                                  GGDR-122
      END                                                               GGDR-123
C 15.08/12                                                      ECIS12  DISP-000
      SUBROUTINE DISP(IPI,WV,IPP,PIP,NVAL,VAL,NIE,LO)                   DISP-001
C COMPUTATION OF THE DEPTHS OF REAL SURFACE AND VOLUME CONTRIBUTIONS    DISP-002
C OBTAINED BY DISPERSION RELATIONS FROM THE IMAGINARY VOLUME AND        DISP-003
C SURFACE POTENTIALS. COMPUTATION OF THE CORRECTIONS TO THE IMAGINARY   DISP-004
C POTENTIALS DUE TO DIFFERENCES OF ENERGY. VARIATION OF HARTREE-FOCK ANDDISP-005
C SPIN-ORBIT POTENTIALS.                                                DISP-006
C INPUT:     IPI(5,I):POTENTIAL FOR THE LEVEL I.                        DISP-007
C            WV(3,I): CENTRE OF MASS ENERGY OF THE LEVEL I.             DISP-008
C            IPP,PIP: EQUIVALENT BY CALL, PARAMETERS OF THE DISPERSION  DISP-009
C                     RELATIONS (SEE INPUT DESCRIPTION).                DISP-010
C            NVAL,VAL:OPTICAL POTENTIALS.                               DISP-011
C            NIE:     TOTAL NUMBER OF LEVELS, NEGATIVE VALUE FOR        DISP-012
C                     COMPOUND CONTINUA.                                DISP-013
C            LO(I):   LOGICAL CONTROLS:                                 DISP-014
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    DISP-015
C               LO(10) =.TRUE. DISPERSION RELATIONS FOR POTENTIALS.     DISP-016
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      DISP-017
C               LO(116)=.TRUE. NO OUTPUT.                               DISP-018
C OUTPUT:    WV(J,I): CORRECTION TO POTENTIALS:                         DISP-019
C                     TO VOLUME/SCALAR IMAGINARY POTENTIAL FOR J=14,    DISP-020
C                     TO VOLUME/SCALAR REAL POTENTIAL FOR J=15,         DISP-021
C                     TO SURFACE/VECTOR IMAGINARY POTENTIAL FOR J=16,   DISP-022
C                     TO SURFACE/VECTOR REAL POTENTIAL FOR J=17,        DISP-023
C                     TO SP-O/TENSOR IMAGINARY POTENTIAL FOR J=18,      DISP-024
C                     TO SP-O/TENSOR REAL POTENTIAL FOR J=19.           DISP-025
C***********************************************************************DISP-026
      IMPLICIT REAL*8 (A-H,O-Z)                                         DISP-027
      LOGICAL LO(150)                                                   DISP-028
      DIMENSION IPI(11,*),WV(22,*),IPP(34,*),PIP(17,*),NVAL(2,*),VAL(57,DISP-029
     1*),WW(9),AV(3,2,3),VV(3),EN(4),WX(9,4)                            DISP-030
      COMMON /INOUT/ MR,MW,MS                                           DISP-031
C INPUT OF DISPERSION COEFFICIENTS.                                     DISP-032
      IF (LO(10).AND.(IPP(2,1).EQ.-1)) CALL LDIS(WV,IPP,PIP,NVAL,VAL,LO)DISP-033
      NCOLT=IABS(NIE)                                                   DISP-034
      IPZ=0                                                             DISP-035
      IF (.NOT.LO(116).AND.LO(10)) WRITE (MW,1000)                      DISP-036
C LOOP ON LEVELS.                                                       DISP-037
      DO 23 IV=1,NCOLT                                                  DISP-038
      DO 1 I=1,9                                                        DISP-039
    1 WW(I)=0.D0                                                        DISP-040
      IPI(11,IV)=MAX0(1,IPI(11,IV))                                     DISP-041
      IP=IPI(5,IV)                                                      DISP-042
      IF (.NOT.LO(10)) GO TO 21                                         DISP-043
      IZ=3                                                              DISP-044
      IF (IPP(1,IP).GE.0) IZ=13                                         DISP-045
      IF (IPP(6,IP).EQ.0) GO TO 7                                       DISP-046
      IF (NCOLT.EQ.NIE) GO TO 6                                         DISP-047
C INPUT OF PARAMETERS FOR A CONTINUUM.                                  DISP-048
      IF (IP.EQ.IPZ) GO TO 2                                            DISP-049
      READ (MR,1001) EN                                                 DISP-050
      READ (MR,1002) WX                                                 DISP-051
      IF (.NOT.LO(116)) WRITE (MW,1003) (EN(I),(WX(J,I),J=1,9),I=1,4)   DISP-052
C INTERPOLATION OF PARAMETERS FOR A CONTINUUM.                          DISP-053
    2 Y=WV(IZ,IV)                                                       DISP-054
      DO 5 L=1,4                                                        DISP-055
      X=0.D0                                                            DISP-056
      DO 3 K=1,4                                                        DISP-057
      IF (K.EQ.L) GO TO 3                                               DISP-058
      X=X*(Y-EN(K))/(EN(L)-EN(K))                                       DISP-059
    3 CONTINUE                                                          DISP-060
      DO 4 I=1,9                                                        DISP-061
    4 WW(I)=WW(I)+X*WX(I,L)                                             DISP-062
    5 CONTINUE                                                          DISP-063
      GO TO 21                                                          DISP-064
C INPUT OF PARAMETERS FOR A STATE.                                      DISP-065
    6 READ (MR,1002) WW                                                 DISP-066
      GO TO 21                                                          DISP-067
C SEARCH ON DEPTHS OF REAL VOLUME, IMAGINARY VOLUME AND IMAGINARY       DISP-068
C SPIN-ORBIT POTENTIALS                                                 DISP-069
    7 IF (LO(7)) GO TO 8                                                DISP-070
      VV(1)=VAL(1,IP)                                                   DISP-071
      VV(2)=VAL(5,IP)                                                   DISP-072
      VV(3)=VAL(21,IP)                                                  DISP-073
      GO TO 9                                                           DISP-074
    8 VV(1)=VAL(NVAL(1,8*IP-5),1)                                       DISP-075
      VV(2)=VAL(NVAL(1,8*IP-4),1)                                       DISP-076
      VV(3)=VAL(NVAL(1,8*IP),1)                                         DISP-077
    9 EF=PIP(5,IP)                                                      DISP-078
      EP=PIP(6,IP)                                                      DISP-079
      EO=EP-EF                                                          DISP-080
      YYTMP=PIP(4,IP)-EF                                                DISP-081
      Y=WV(IZ,IV)-EF                                                    DISP-082
C SPIN-ORBIT OR TENSOR POTENTIAL.                                       DISP-083
      IF (PIP(9,IP).NE.0.D0) WW(7)=-PIP(9,IP)*(Y-YYTMP)/VV(3)           DISP-084
      IF (PIP(8,IP).NE.0.D0) WW(9)=DEXP(-PIP(8,IP)*(Y-YYTMP))-1.D0      DISP-085
C WORKING ARRAY AV(I,J,K) WITH I=1,2,3 FOR VOLUME/SCALAR/VECTOR         DISP-086
C FORM-FACTOR, J=1,2 FOR TWO TERMS, K=1 FOR REFERENCE POTENTIAL,        DISP-087
C K=2 FOR ACTUAL POTENTIAL, K=3 FOR INTERMEDIATE RESULTS.               DISP-088
      DO 20 I=1,3                                                       DISP-089
      NM=IPP(I+2,IP)                                                    DISP-090
      IF (NM.EQ.0) GO TO 18                                             DISP-091
      N=IABS(NM)                                                        DISP-092
      DO 13 K=1,2                                                       DISP-093
      B=PIP(3*I+K+6,IP)                                                 DISP-094
      DO 10 L=1,2                                                       DISP-095
   10 AV(I,K,L)=0.D0                                                    DISP-096
      IF (DABS(YYTMP).GT.EO) AV(I,K,1)=(DABS(YYTMP)-EO)**N/((DABS(YYTMP)DISP-097
     1-EO)**N+B**N)                                                     DISP-098
      IF (DABS(Y).GT.EO) AV(I,K,2)=(DABS(Y)-EO)**N/((DABS(Y)-EO)**N+B**NDISP-099
     1)                                                                 DISP-100
      IF (LO(100).OR.(I.NE.2)) GO TO 11                                 DISP-101
      IF ((N.GT.0).AND.((PIP(14,IP).NE.0.D0).OR.(PIP(15,IP).NE.0.D0))) GDISP-102
     1O TO 19                                                           DISP-103
   11 AV(I,K,3)=DVWI(Y,EO,N,B,0.D0,0.D0)                                DISP-104
      IF ((I.EQ.3).OR.(N.EQ.NM)) GO TO 14                               DISP-105
      IF (K.EQ.1) GO TO 13                                              DISP-106
C SUM OR DIFFERENCE OF TWO VOLUME TERMS.                                DISP-107
      DO 12 J=1,3                                                       DISP-108
   12 AV(I,1,J)=PIP(3*I+9,IP)*AV(I,1,J)+(1.D0-PIP(3*I+9,IP))*AV(I,2,J)  DISP-109
   13 CONTINUE                                                          DISP-110
   14 IF ((N.LT.0).OR.(I.EQ.2)) GO TO 17                                DISP-111
C VOLUME CORRECTION FOR LARGE ENERGY CONTRIBUTIONS.                     DISP-112
      EA=PIP(7,IP)                                                      DISP-113
      IF (EA.EQ.0.D0) GO TO 17                                          DISP-114
      CN=PIP(12,IP)                                                     DISP-115
      IF (IPP(2,IP).EQ.0) GO TO 15                                      DISP-116
C LARGE NEGATIVE ENERGIES.                                              DISP-117
      N2=IABS(IPP(2,IP))                                                DISP-118
      IF (YYTMP.LT.-EA) AV(1,1,1)=AV(1,1,1)*(1.D0-(YYTMP+EA)**N2/((YYTMPDISP-119
     1+EA)**N2+EA**N2)*DEXP(CN*(DSQRT(EA+EF)-DSQRT(-YYTMP+EF))))        DISP-120
      IF (Y.LT.-EA) AV(1,1,2)=AV(1,1,2)*(1.D0-(Y+EA)**N2/((Y+EA)**N2+EA*DISP-121
     1*N2)*DEXP(CN*(DSQRT(EA+EF)-DSQRT(-Y+EF))))                        DISP-122
      AV(1,1,3)=AV(1,1,3)+DLNE(IPP(2,IP),N,EA,EF,EP,B,CN,WV(IZ,IV))     DISP-123
   15 IF (PIP(11,IP).EQ.0.D0) GO TO 17                                  DISP-124
C LARGE POSITIVE ENERGY TERM.                                           DISP-125
      EL=EF+EA                                                          DISP-126
      ELL=DSQRT(EL)                                                     DISP-127
      AV(1,2,1)=0.D0                                                    DISP-128
      AV(1,2,2)=0.D0                                                    DISP-129
      IF (YYTMP.GT.EA) AV(1,2,1)=(DSQRT(YYTMP+EF)+ELL*(EL/(YYTMP+EF)-3.DDISP-130
     10)/2.D0)*DEXP(-CN*(DSQRT(YYTMP+EF)-ELL))                          DISP-131
      IF (Y.GT.EA) AV(1,2,2)=(DSQRT(Y+EF)+ELL*(EL/(Y+EF)-3.D0)/2.D0)*DEXDISP-132
     1P(-CN*(DSQRT(Y+EF)-ELL))                                          DISP-133
      AV(1,2,3)=DLPE(EL,Y+EF,EF,CN)                                     DISP-134
      XX=(VV(2)-AV(1,2,1)*PIP(11,IP))/AV(1,1,1)                         DISP-135
      DO 16 K=1,3                                                       DISP-136
   16 AV(1,1,K)=XX*AV(1,1,K)+PIP(11,IP)*AV(1,2,K)                       DISP-137
   17 WW(3*I-2)=AV(I,1,2)/AV(I,1,1)-1.D0                                DISP-138
      IF ((I.NE.3).OR.(NM.GT.0)) WW(3*I-1)=AV(I,1,3)/AV(I,1,1)          DISP-139
   18 IF ((I.EQ.1).AND.(PIP(17,IP).NE.0.D0)) WW(3)=DEXP(-PIP(17,IP)*(Y-YDISP-140
     1YTMP))-1.D0                                                       DISP-141
      GO TO 20                                                          DISP-142
C SURFACE FORM-FACTOR.                                                  DISP-143
   19 CS=PIP(14,IP)                                                     DISP-144
      CN=PIP(15,IP)                                                     DISP-145
      AV(2,1,1)=AV(2,1,1)*DEXP(-CN*YYTMP-CS*DABS(YYTMP))                DISP-146
      AV(2,1,2)=AV(2,1,2)*DEXP(-CN*Y-CS*DABS(Y))                        DISP-147
      WW(4)=AV(2,1,2)/AV(2,1,1)-1.D0                                    DISP-148
      WW(5)=DVWI(Y,EO,N,B,CS,CN)/AV(2,1,1)                              DISP-149
   20 CONTINUE                                                          DISP-150
   21 DO 22 I=1,9                                                       DISP-151
   22 WV(I+13,IV)=WW(I)                                                 DISP-152
      IPZ=IP                                                            DISP-153
      IF (.NOT.LO(116).AND.LO(10)) WRITE (MW,1004) IP,IV,PIP(4,IP),WV(IZDISP-154
     1,IV),WW                                                           DISP-155
   23 CONTINUE                                                          DISP-156
      RETURN                                                            DISP-157
 1000 FORMAT (' POTENTIAL REFER. ENERGY  ACTUAL ENERGY',10X,'VOLUME/SCALDISP-158
     1AR CORRECTION',21X,'SURFACE/VECTOR CORRECTION'/5X,'LEVEL',37X,'SPIDISP-159
     2N-ORBIT/TENSOR CORRECTION'/38X,2('   IMAGINARY      DISPERSION    DISP-160
     3 REAL',8X))                                                       DISP-161
 1001 FORMAT (4F10.5)                                                   DISP-162
 1002 FORMAT (6F10.5/3F10.5)                                            DISP-163
 1003 FORMAT (' ENERGY FOR INTERPOLATION',20X,'COEFFICIENTS'/1P,7D15.6/6DISP-164
     10X,3D15.6)                                                        DISP-165
 1004 FORMAT (1X,I4,I5,1P,2D14.6,6D15.8/38X,3D15.8)                     DISP-166
      END                                                               DISP-167
C 02/06/07                                                      ECIS12  LDIS-000
      SUBROUTINE LDIS(WV,IPP,PIP,NVAL,VAL,LO)                           LDIS-001
C INPUT OF DISPERSION PARAMETERS.                                       LDIS-002
C INPUT:     WV(J,I): CENTRE OF MASS ENERGY OF THE LEVEL I FOR J=3.     LDIS-003
C                     LABORATORY ENERGY OF THE LEVEL I FOR J=13.        LDIS-004
C            IPP(I,J):FIRST LEVEL USING POTENTIAL J FOR I=1 (TEMPORARY).LDIS-005
C                     -1 TO READ DISPERSION PARAMETERS FOR I=2.         LDIS-006
C            NVAL,VAL:OPTICAL POTENTIALS.                               LDIS-007
C            LO(I):   LOGICAL CONTROLS:                                 LDIS-008
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    LDIS-009
C               LO(109)=.TRUE. FOR DIRAC POTENTIALS.                    LDIS-010
C OUTPUT:    IPP,PIP: EQUIVALENT BY CALL, PARAMETERS OF THE DISPERSION  LDIS-011
C                     RELATIONS (SEE INPUT DESCRIPTION).                LDIS-012
C                                                                       LDIS-013
C FOR THE COMMON  /COUPL/ SEE CALX.                                     LDIS-014
C                                                                       LDIS-015
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     LDIS-016
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             LDIS-017
C   USED:     NPP.                                                      LDIS-018
C                                                                       LDIS-019
C***********************************************************************LDIS-020
      IMPLICIT REAL*8 (A-H,O-Z)                                         LDIS-021
      LOGICAL LO(150)                                                   LDIS-022
      CHARACTER*4 CLEG(6)                                               LDIS-023
      DIMENSION WV(22,*),IPP(34,*),PIP(17,*),NVAL(2,*),VAL(42,*),VV(6)  LDIS-024
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   LDIS-025
      COMMON /INOUT/ MR,MW,MS                                           LDIS-026
      DATA CLEG /' VOL','UME ',' SCA','LAR ',' VEC','TOR '/             LDIS-027
      DO 13 IJ=1,NPP                                                    LDIS-028
C COLLECT SIX DEPTHS OF POTENTIALS.                                     LDIS-029
      IP=IPP(1,IJ)                                                      LDIS-030
      IF (LO(7)) GO TO 2                                                LDIS-031
      DO 1 I=1,6                                                        LDIS-032
    1 VV(I)=VAL(4*I-3,IP)                                               LDIS-033
      GO TO 4                                                           LDIS-034
    2 DO 3 I=1,6                                                        LDIS-035
    3 VV(I)=VAL(NVAL(1,8*IP+I-6),1)                                     LDIS-036
C INPUT OF DISPERSION PARAMETERS.                                       LDIS-037
    4 READ (MR,1000) IPPIP,(IPP(J,IJ),J=2,6)                            LDIS-038
      IF (IPP(6,IJ).NE.1) GO TO 5                                       LDIS-039
      WRITE (MW,1001) IJ                                                LDIS-040
      GO TO 13                                                          LDIS-041
    5 IF (IPPIP.NE.1) IPP(1,IJ)=-IPP(1,IJ)                              LDIS-042
      IF (MOD(IPP(2,IJ),2).NE.0) GO TO 14                               LDIS-043
      READ (MR,1002) (PIP(J,IJ),J=4,17)                                 LDIS-044
      DO 6 I=1,3                                                        LDIS-045
      IF (MOD(IPP(I+2,IJ),2).NE.0) GO TO 14                             LDIS-046
      IF ((IPP(I+2,IJ).NE.0).AND.(VV(2*I).EQ.0.D0)) GO TO 15            LDIS-047
    6 CONTINUE                                                          LDIS-048
      IF ((PIP(8,IJ).NE.0.D0).AND.(VV(5).EQ.0.D0)) GO TO 16             LDIS-049
      IF ((PIP(9,IJ).NE.0.D0).AND.(VV(6).EQ.0.D0)) GO TO 17             LDIS-050
      IF ((PIP(17,IJ).NE.0.D0).AND.(VV(1).EQ.0.D0)) GO TO 18            LDIS-051
      IF (IPP(1,IJ).GT.0) GO TO 7                                       LDIS-052
      WRITE (MW,1003)                                                   LDIS-053
      IZ=3                                                              LDIS-054
      GO TO 8                                                           LDIS-055
    7 WRITE (MW,1004)                                                   LDIS-056
      IZ=13                                                             LDIS-057
    8 IF (PIP(4,IJ).EQ.0.D0) PIP(4,IJ)=WV(IZ,IP)                        LDIS-058
      IF (PIP(5,IJ).EQ.0.D0) PIP(5,IJ)=-6.8D0                           LDIS-059
      IF (PIP(6,IJ).EQ.0.D0) PIP(6,IJ)=PIP(5,IJ)                        LDIS-060
      WRITE (MW,1005) (PIP(I,IP),I=4,6)                                 LDIS-061
      IF (PIP(8,IJ).NE.0.D0) WRITE (MW,1006) VV(5),PIP(8,IJ),PIP(4,IJ)  LDIS-062
      IF (PIP(9,IJ).NE.0.D0) WRITE (MW,1007) VV(6),PIP(9,IJ),PIP(4,IJ)  LDIS-063
      IF (PIP(17,IJ).NE.0.D0) WRITE (MW,1008) VV(1),PIP(17,IJ),PIP(4,IJ)LDIS-064
      I1=1                                                              LDIS-065
      IF (LO(109)) I1=3                                                 LDIS-066
      IF (IPP(3,IJ).LT.0) GO TO 9                                       LDIS-067
      WRITE (MW,1009) CLEG(I1),CLEG(I1+1),IPP(3,IJ),PIP(10,IJ)          LDIS-068
      IF ((IPP(2,IJ).NE.0).OR.(PIP(11,IJ).NE.0.D0)) WRITE (MW,1010) PIP(LDIS-069
     15,IP),PIP(7,IJ),IPP(2,IJ),PIP(11,IJ),PIP(12,IJ)                   LDIS-070
      GO TO 10                                                          LDIS-071
    9 WRITE (MW,1011) CLEG(I1),CLEG(I1+1),IPP(3,IJ),PIP(10,IJ),PIP(11,IPLDIS-072
     1),PIP(12,IJ)                                                      LDIS-073
   10 IF (LO(109)) GO TO 12                                             LDIS-074
      IF (IPP(4,IJ).LT.0) GO TO 11                                      LDIS-075
      WRITE (MW,1012) IPP(4,IJ),PIP(13,IJ),PIP(14,IJ),PIP(15,IJ)        LDIS-076
      GO TO 13                                                          LDIS-077
   11 IF (PIP(14,IJ).EQ.0.D0) PIP(14,IJ)=2.D0*PIP(13,IJ)                LDIS-078
      WRITE (MW,1013) IPP(4,IJ),PIP(13,IJ),PIP(14,IJ)                   LDIS-079
      GO TO 13                                                          LDIS-080
   12 IF (IPP(4,IJ).GE.0) WRITE (MW,1009) CLEG(5),CLEG(6),IPP(4,IJ),PIP(LDIS-081
     113,IJ)                                                            LDIS-082
      IF (IPP(4,IJ).LT.0) WRITE (MW,1011) CLEG(5),CLEG(6),IPP(4,IJ),PIP(LDIS-083
     113,IJ),PIP(14,IJ),PIP(15,IJ)                                      LDIS-084
   13 CONTINUE                                                          LDIS-085
      RETURN                                                            LDIS-086
   14 WRITE (MW,1014) IJ,(IPP(I,IJ),I=2,5)                              LDIS-087
      GO TO 20                                                          LDIS-088
   15 WRITE (MW,1015) IJ,(IPP(I+2,IJ),VV(2*I),I=1,3)                    LDIS-089
      GO TO 19                                                          LDIS-090
   16 WRITE (MW,1016) IJ,IP,PIP(7,IJ),VV(5)                             LDIS-091
      GO TO 19                                                          LDIS-092
   17 WRITE (MW,1017) IJ,IP,PIP(8,IJ),VV(6)                             LDIS-093
      GO TO 19                                                          LDIS-094
   18 WRITE (MW,1018) IJ,IP,PIP(15,IJ),VV(1)                            LDIS-095
   19 WRITE (MW,1019)                                                   LDIS-096
   20 WRITE (MW,1020)                                                   LDIS-097
      STOP                                                              LDIS-098
 1000 FORMAT (14I5)                                                     LDIS-099
 1001 FORMAT (' DISPERSION COEFFICIENTS READ FOR EACH LEVEL: DATA=',I5) LDIS-100
 1002 FORMAT (7F10.5)                                                   LDIS-101
 1003 FORMAT (' USE OF CENTRE OF MASS ENERGIES.')                       LDIS-102
 1004 FORMAT (' USE OF LABORATORY ENERGIES.')                           LDIS-103
 1005 FORMAT (' IMAGINARY DEPTHS READ FOR',F12.6,' MEV   FERMI ENERGY:',LDIS-104
     1F12.6,' MEV   TRESHOLD ENERGY:',F12.6)                            LDIS-105
 1006 FORMAT (' EXPONENTIAL DECREASE OF REAL SPIN-ORBIT POTENTIAL:',3X,FLDIS-106
     112.6,'*EXP(-',F10.6,'(E-',F10.6,')) MEV')                         LDIS-107
 1007 FORMAT (' LINEAR DECREASE OF IMAGINARY SPIN-ORBIT POTENTIAL:',3X,FLDIS-108
     112.6,'-',F10.6,'*(E-',F10.6,') MEV')                              LDIS-109
 1008 FORMAT (' EXPONENTIAL DECREASE OF HARTREE-FOCK POTENTIAL:',6X,F12.LDIS-110
     16,'*EXP(-',F10.6,'(E-',F10.6,')) MEV')                            LDIS-111
 1009 FORMAT (2A4,':   POWER =',I3,5X,'B =',F10.4)                      LDIS-112
 1010 FORMAT (' FOR ENERGIES ''E'' SUCH THAT |',F12.6,'-''E''| >',F12.6,LDIS-113
     1' MEV'/' CORRECTIONS WITH POWER',I3,' FOR NEGATIVES ENERGIES AND CLDIS-114
     2OEFFICIENT',F12.6,' FOR POSITIVE ENERGIES'/15X,'DAMPING FACTOR',F1LDIS-115
     32.6)                                                              LDIS-116
 1011 FORMAT (2A4,':   POWER =',I3,5X,'SUM OF B1 =',F10.4,5X,'AND B2 =',LDIS-117
     1F10.4,5X,'CONTRIBUTION OF B1 =',F10.5)                            LDIS-118
 1012 FORMAT (' SURFACE:   POWER =',I3,5X,'B =',F10.4,5X,' DECREASING RALDIS-119
     1TE =',F10.6,5X,' NON LOCALITY PARAMETER =',F10.4)                 LDIS-120
 1013 FORMAT (' SURFACE:   POWER =',I3,5X,'DIFFERENCE OF B1 =',F10.4,5X,LDIS-121
     1'AND B2 =',F10.4)                                                 LDIS-122
 1014 FORMAT (' FOR DISPERSION RELATIONS OF POTENTIAL',I3,' ALL THE FOLLLDIS-123
     1OWING INTEGERS MUST BE EVEN'/10X,'N2 =',I4,10X,'NV =',I4,10X,'NS =LDIS-124
     2',I4,10X,'NL =',I4)                                               LDIS-125
 1015 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED FOR DISPERSION RELATILDIS-126
     1ONS BECAUSE AN IMAGINARY STRENGTH IS 0:'/10X,'NV =',I3,'  WV =',1PLDIS-127
     2,D13.6,10X,'NS =',I3,'  WS =',D13.6,10X,'NL =',I3,'  LS =',D13.6) LDIS-128
 1016 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THELDIS-129
     1 REAL SPIN-ORBIT OF WHICH THE STRENGTH IS 0':/10X,'PIP(7,',I2,') =LDIS-130
     2',1P,D13.6,'  VLS =',D13.6)                                       LDIS-131
 1017 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THELDIS-132
     1 IMAGINARY SPIN-ORBIT OF WHICH THE STRENGTH IS 0':/10X,'PIP(8,',I2LDIS-133
     2,') =',1P,D13.6,'  WLS =',D13.6)                                  LDIS-134
 1018 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THELDIS-135
     1 HARTREE-FOCK POTENTIAL OF WHICH THE STRENGTH IS 0':/10X,'PIP(15,'LDIS-136
     2,I2,') =',1P,D13.6,'  V =',D13.6)                                 LDIS-137
 1019 FORMAT (' GIVE VALUES FOR ANOTHER ENERGY'/)                       LDIS-138
 1020 FORMAT (//' IN LDIS  ...  STOP  ...')                             LDIS-139
      END                                                               LDIS-140
C 14/04/06                                                      ECIS12  DCEI-000
      SUBROUTINE DCEI(AR,AI,ZR,ZI)                                      DCEI-001
C COMPLEX EXPONENTIAL INTEGRAL FUNCTION MULTIPLIED BY EXPONENTIAL FOR   DCEI-002
C COMPLEX ARGUMENT: Z = EXP(X)*EI(X).                                   DCEI-003
C INPUT:     AR,AI:   REAL AND IMAGINARY PART OF THE ARGUMENT X.        DCEI-004
C OUTPUT:    ZR,ZI:   REAL AND IMAGINARY PART OF THE RESULT Z.          DCEI-005
C***********************************************************************DCEI-006
      IMPLICIT REAL*8 (A-H,O-Z)                                         DCEI-007
      ZR=0.D0                                                           DCEI-008
      ZI=0.D0                                                           DCEI-009
      IF ((AR.EQ.0.D0).AND.(AI.EQ.0.D0)) RETURN                         DCEI-010
      IF (DABS(AR)+18.5D0.GE.32.D0) GO TO 3                             DCEI-011
      IF (DSQRT(1024.D0-(AR+18.5D0)**2)/1.665D0.LT.DABS(AI)) GO TO 3    DCEI-012
C SERIES EXPANSION.                                                     DCEI-013
      ZR=-.57721566490153D0-DLOG(AR**2+AI**2)*0.5D0                     DCEI-014
      ZI=-DATAN2(AI,AR)                                                 DCEI-015
      YR=1.D0                                                           DCEI-016
      YI=0.D0                                                           DCEI-017
      DO 1 M=1,2000                                                     DCEI-018
      AJ=DFLOAT(M)                                                      DCEI-019
      YZ=YR                                                             DCEI-020
      YR=-(YZ*AR-YI*AI)/AJ                                              DCEI-021
      YI=-(YZ*AI+YI*AR)/AJ                                              DCEI-022
      IF (YR**2+YI**2.LT.1.D-30*(AR**2+AI**2)) GO TO 2                  DCEI-023
      ZR=ZR-YR/AJ                                                       DCEI-024
    1 ZI=ZI-YI/AJ                                                       DCEI-025
    2 YR=DEXP(AR)                                                       DCEI-026
      YI=YR*ZI                                                          DCEI-027
      YR=YR*ZR                                                          DCEI-028
      ZR=YR*DCOS(AI)-YI*DSIN(AI)                                        DCEI-029
      ZI=YI*DCOS(AI)+YR*DSIN(AI)                                        DCEI-030
      RETURN                                                            DCEI-031
C CONTINUED FRACTION.                                                   DCEI-032
    3 DO 4 I=1,20                                                       DCEI-033
      AJ=DFLOAT(21-I)                                                   DCEI-034
      ZR=ZR+AR                                                          DCEI-035
      ZI=ZI+AI                                                          DCEI-036
      Z=ZR**2+ZI**2                                                     DCEI-037
      ZR=AJ*ZR/Z                                                        DCEI-038
      ZI=-AJ*ZI/Z                                                       DCEI-039
      ZR=ZR+1.D0                                                        DCEI-040
      Z=ZR**2+ZI**2                                                     DCEI-041
      ZR=AJ*ZR/Z                                                        DCEI-042
    4 ZI=-AJ*ZI/Z                                                       DCEI-043
      ZR=ZR+AR                                                          DCEI-044
      ZI=ZI+AI                                                          DCEI-045
      Z=ZR**2+ZI**2                                                     DCEI-046
      ZR=ZR/Z                                                           DCEI-047
      ZI=-ZI/Z                                                          DCEI-048
      RETURN                                                            DCEI-049
      END                                                               DCEI-050
C 11/01/07                                                      ECIS12  DREI-000
      FUNCTION DREI(AR)                                                 DREI-001
C REAL EXPONENTIAL INTEGRAL FUNCTION MULTIPLIED BY EXPONENTIAL.         DREI-002
C INPUT:     AR:      ARGUMENT.                                         DREI-003
C***********************************************************************DREI-004
      IMPLICIT REAL*8 (A-H,O-Z)                                         DREI-005
      DREI=0.D0                                                         DREI-006
      IF (AR.EQ.0.D0) RETURN                                            DREI-007
      IF (DABS(AR)+18.5D0.GE.32.D0) GO TO 3                             DREI-008
C SERIES EXPANSION.                                                     DREI-009
      DREI=-.57721566490153D0-DLOG(DABS(AR))                            DREI-010
      YR=1.D0                                                           DREI-011
      DO 1 M=1,2000                                                     DREI-012
      AJ=DFLOAT(M)                                                      DREI-013
      YR=-YR*AR/AJ                                                      DREI-014
      IF (DABS(YR).LT.1.D-15*DABS(AR)) GO TO 2                          DREI-015
    1 DREI=DREI-YR/AJ                                                   DREI-016
    2 DREI=DREI*DEXP(AR)                                                DREI-017
      RETURN                                                            DREI-018
C CONTINUED FRACTION.                                                   DREI-019
    3 DO 4 I=1,20                                                       DREI-020
      AJ=DFLOAT(21-I)                                                   DREI-021
      DREI=DREI+AR                                                      DREI-022
      DREI=AJ/DREI                                                      DREI-023
    4 DREI=AJ/(DREI+1.D0)                                               DREI-024
      DREI=1.D0/(DREI+AR)                                               DREI-025
      RETURN                                                            DREI-026
      END                                                               DREI-027
C 10/05/07                                                      ECIS12  DLNE-000
      FUNCTION DLNE(I2,NV,EA,EF,EP,B,CV,EX)                             DLNE-001
C CONTRIBUTION TO THE REAL VOLUME POTENTIAL OF THE LARGE NEGATIVE       DLNE-002
C ENERGIES.                                                             DLNE-003
C INPUT:     I2:      POWER FOR NEGATIVE CORRECTION, NEGATIVE VALUE     DLNE-004
C                     TO TAKE INTO ACCOUNT THE IMAGINARY POTENTIAL      DLNE-005
C                     ONLY AT THE FIRST POINT.                          DLNE-006
C            NV:      POWER FOR VOLUME OR SCALAR POTENTIAL.             DLNE-007
C            EA:      LARGE ENERGY STARTING VALUE ABOVE FERMI ENERGY.   DLNE-008
C            EF:      FERMI ENERGY.                                     DLNE-009
C            EP:      THRESHOLD ENERGY.                                 DLNE-010
C            B:       CONSTANT FOR VOLUME OR SCALAR POTENTIAL.          DLNE-011
C            CV:      EXPONENTIAL DECREASE IN |EX-EF-EA| FOR LARGE      DLNE-012
C                     ENERGY TERMS, NEGATIVE FOR DECREASE IN            DLNE-013
C                     SQRT|EX-EF-EA|.                                   DLNE-014
C            EX:      ENERGY.                                           DLNE-015
C***********************************************************************DLNE-016
      IMPLICIT REAL*8 (A-H,O-Z)                                         DLNE-017
      DATA PI /3.1415926535897932D0/                                    DLNE-018
      N2=IABS(I2)                                                       DLNE-019
      M2=N2/2                                                           DLNE-020
      MV=NV/2                                                           DLNE-021
      EL=EA-EF                                                          DLNE-022
      AG1X=(EL+EX)**N2/((EL+EX)**N2+EA**N2)                             DLNE-023
      AG2X=(2*EF-EP-EX)**NV/((2*EF-EP-EX)**NV+B**NV)                    DLNE-024
      AG2F=(EF-EP)**NV/((EF-EP)**NV+B**NV)                              DLNE-025
      IF (CV.NE.0.D0) GO TO 1                                           DLNE-026
      IF (I2.LT.0) DLNE=.5D0*DLOG(EA)-AG1X*DLOG(EX+EL)                  DLNE-027
      IF (I2.GT.0) DLNE=.5D0*AG2F*DLOG(EA)-AG1X*AG2X*DLOG(EX+EL)        DLNE-028
      GO TO 3                                                           DLNE-029
    1 IF (CV.GT.0.D0) GO TO 2                                           DLNE-030
      CALL DCEI(0.D0,-CV*DSQRT(EX+EL),BRF,BIF)                          DLNE-031
      CALL DCEI(0.D0,-CV*DSQRT(EA),CRF,CIF)                             DLNE-032
      IF (I2.LT.0) DLNE=2*AG1X*BRF-CRF                                  DLNE-033
      IF (I2.GT.0) DLNE=2*AG1X*AG2X*BRF-AG2F*CRF                        DLNE-034
      GO TO 3                                                           DLNE-035
    2 IF (I2.LT.0) DLNE=AG1X*DREI(CV*(EX+EL))-.5D0*DREI(CV*EA)          DLNE-036
      IF (I2.GT.0) DLNE=(AG1X*AG2X*DREI(CV*(EX+EL))-.5D0*AG2F*DREI(CV*EADLNE-037
     1))                                                                DLNE-038
    3 BNTMP=PI/DFLOAT(2*M2)                                             DLNE-039
      KB=1                                                              DLNE-040
      MP=M2                                                             DLNE-041
      MQ=MV                                                             DLNE-042
      AMP=-EL                                                           DLNE-043
      BMP=EA                                                            DLNE-044
      AMQ=2*EF-EP                                                       DLNE-045
      BMQ=B                                                             DLNE-046
    4 DO 9 I=1,MP                                                       DLNE-047
      CN=(2*I-1)*BNTMP                                                  DLNE-048
      AZR=DCOS(CN)*BMP/MP                                               DLNE-049
      AZI=DSIN(CN)*BMP/MP                                               DLNE-050
      BPR=AMP+BMP*DCOS(CN)                                              DLNE-051
      BPI=BMP*DSIN(CN)                                                  DLNE-052
C RESIDUE AZR+I*AZI, POLE BPR+I*BPI                                     DLNE-053
      CTX=(BPR-EX)**2+BPI**2                                            DLNE-054
      CTF=(BPR-EF)**2+BPI**2                                            DLNE-055
      CR=(BPR-EX)/CTX-(BPR-EF)/CTF                                      DLNE-056
      CI=BPI*(1/CTF-1/CTX)                                              DLNE-057
      BR=CR*AZR-CI*AZI                                                  DLNE-058
      BI=CR*AZI+CI*AZR                                                  DLNE-059
C RESIDUE*(1/(P1(I)-EX)-1/(P1(I)-EF))  BR+I*BI                          DLNE-060
      IF (I2.LT.0) GO TO 5                                              DLNE-061
      AT=(((AMQ-BPR)**2+BPI**2)/BMQ**2)**MQ                             DLNE-062
      CN=DATAN2(-BPI,AMQ-BPR)*MQ*2.D0                                   DLNE-063
      CT=AT**2+2*AT*DCOS(CN)+1.D0                                       DLNE-064
      ER=(AT*DCOS(CN)+AT**2)/CT                                         DLNE-065
      EI=AT*DSIN(CN)/CT                                                 DLNE-066
C VALUE OF THE OTHER FUNCTION AT THE POLE ER+I*EI                       DLNE-067
    5 IF (CV.NE.0.D0) GO TO 6                                           DLNE-068
      CR=-DLOG((EL+BPR)**2+BPI**2)*.5D0                                 DLNE-069
      CI=-DATAN2(BPI,EL+BPR)                                            DLNE-070
      GO TO 8                                                           DLNE-071
    6 IF (CV.GT.0.D0) GO TO 7                                           DLNE-072
      AT=CV*((EL+BPR)**2+BPI**2)**.25D0                                 DLNE-073
      CN=DATAN2(BPI,EL+BPR)/2.D0                                        DLNE-074
      CALL DCEI(-AT*DSIN(CN),AT*DCOS(CN),CR,CI)                         DLNE-075
      CALL DCEI(AT*DSIN(CN),-AT*DCOS(CN),DR,DI)                         DLNE-076
      CR=CR+DR                                                          DLNE-077
      CI=CI+DI                                                          DLNE-078
      GO TO 8                                                           DLNE-079
    7 CALL DCEI(CV*(EL+BPR),CV*BPI,CR,CI)                               DLNE-080
    8 DR=(CR*BR-CI*BI)                                                  DLNE-081
      DI=(CR*BI+CI*BR)                                                  DLNE-082
      IF (I2.GT.0) DR=DR*ER-DI*EI                                       DLNE-083
    9 DLNE=DLNE+DR                                                      DLNE-084
      IF (KB.EQ.2) GO TO 11                                             DLNE-085
      IF (I2.LT.0) GO TO 10                                             DLNE-086
      KB=KB+1                                                           DLNE-087
      BNTMP=PI/DFLOAT(NV)                                               DLNE-088
      MP=MV                                                             DLNE-089
      MQ=M2                                                             DLNE-090
      AMP=2*EF-EP                                                       DLNE-091
      BMP=B                                                             DLNE-092
      AMQ=-EL                                                           DLNE-093
      BMQ=EA                                                            DLNE-094
      GO TO 4                                                           DLNE-095
   10 DLNE=DLNE*(EF-EP+EA)**NV/((EF-EP+EA)**NV+B**NV)                   DLNE-096
   11 DLNE=DLNE/PI                                                      DLNE-097
      RETURN                                                            DLNE-098
      END                                                               DLNE-099
C 11/01/07                                                      ECIS12  DLPE-000
      FUNCTION DLPE(EL,EX,EF,CN)                                        DLPE-001
C CONTRIBUTION TO THE REAL VOLUME POTENTIAL OF THE LARGE POSITIVE       DLPE-002
C ENERGIES.                                                             DLPE-003
C INPUT:     EA:      LARGE ENERGY STARTING VALUE ABOVE ZERO ENERGY.    DLPE-004
C            EX:      ENERGY.                                           DLPE-005
C            EF:      FERMI ENERGY.                                     DLPE-006
C            CN:      EXPONENTIAL DECREASE IN |EX-EF-EA| FOR LARGE      DLPE-007
C                     ENERGY TERMS, NEGATIVE FOR DECREASE IN            DLPE-008
C                     SQRT|EX-EF-EA|.                                   DLPE-009
C***********************************************************************DLPE-010
      IMPLICIT REAL*8 (A-H,O-Z)                                         DLPE-011
      DATA PI /3.1415926535897932D0/                                    DLPE-012
      DLPE=0.D0                                                         DLPE-013
      IF (EX.EQ.EF) RETURN                                              DLPE-014
      FF=DSQRT(DABS(EF))                                                DLPE-015
      FL=DSQRT(DABS(EL))                                                DLPE-016
      FX=DSQRT(DABS(EX))                                                DLPE-017
      IF (CN.NE.0.D0) GO TO 5                                           DLPE-018
      DLPE=2.D0*FF*DATAN2(FF,FL)+0.5D0*EL*FL/EF*DLOG(1.D0-EF/EL)-1.5D0*FDLPE-019
     1L*DLOG(DABS(EL-EF))                                               DLPE-020
      IF (EX.GT.0.D0) GO TO 3                                           DLPE-021
      IF (DABS(EX).GT.EL*1.D-5) GO TO 1                                 DLPE-022
      DLPE=DLPE+.5D0*FL*(1.D0+EX/EL/2.D0+(EX/EL)**2/3.D0)               DLPE-023
      GO TO 2                                                           DLPE-024
    1 DLPE=DLPE-0.5D0*EL*FL/EX*DLOG(DABS(1-EX/EL))                      DLPE-025
    2 DLPE=DLPE-2.D0*FX*(DATAN2(FX,FL))+1.5D0*FL*DLOG(DABS(EL-EX))      DLPE-026
      GO TO 16                                                          DLPE-027
    3 IF (DABS(EX).GT.EL*1.D-5) GO TO 4                                 DLPE-028
      DLPE=DLPE+.5D0*FL*(1.D0+EX/EL/2.D0+(EX/EL)**2/3.D0)-FX*(DLOG(DABS(DLPE-029
     1FL-FX)/(FL+FX)))+1.5D0*FL*(DLOG(DABS(EL-EX)))                     DLPE-030
      GO TO 16                                                          DLPE-031
    4 DLPE=DLPE+(FX+1.5D0*FL-0.5D0*EL*FL/EX)*DLOG(FL+FX)+EL*FL/EX*DLOG(FDLPE-032
     1L)                                                                DLPE-033
      IF (DABS(EX-EL).GT.1.D-3) DLPE=DLPE-(FX-1.5D0*FL+0.5D0*EL*FL/EX)*DDLPE-034
     1LOG(DABS(FL-FX))                                                  DLPE-035
      GO TO 16                                                          DLPE-036
    5 IF (CN.GT.0.D0) GO TO 9                                           DLPE-037
      A1=DREI(-CN*FL)                                                   DLPE-038
      A2=DREI(CN*(FX-FL))                                               DLPE-039
      IF (EX.GT.0.D0) GO TO 6                                           DLPE-040
      CALL DCEI(-CN*FL,-CN*FX,A3,A4)                                    DLPE-041
      DLPE=2.D0*FX*A4-3.D0*FL*A3                                        DLPE-042
      IF (EX.GT.-1.D-4) GO TO 7                                         DLPE-043
      DLPE=DLPE+EL*FL/EX*(A3-A1)                                        DLPE-044
      GO TO 8                                                           DLPE-045
    6 A3=DREI(-CN*(FL+FX))                                              DLPE-046
      DLPE=FX*(A2-A3)-1.5D0*FL*(A2+A3)                                  DLPE-047
      IF (EX.LT.1.D-4) GO TO 7                                          DLPE-048
      DLPE=DLPE+.5D0*EL*FL/EX*(A2+A3-2.D0*A1)                           DLPE-049
      GO TO 8                                                           DLPE-050
C USING UP TO THE FOURTH DERIVATIVE OF THE EXPONENTIAL FUNCTION.        DLPE-051
    7 DLPE=DLPE+.5D0*EL*FL*((A1*CN**2+CN/FL+1.D0/EL)*(1.D0+CN**2*EX/12.DDLPE-052
     10)+(CN/FL+3.D0/EL)/EL*EX/6.D0)                                    DLPE-053
    8 CALL DCEI(-CN*FL,-CN*FF,B1,B2)                                    DLPE-054
      DLPE=DLPE-FF*2.D0*B2-EL*FL/EF*(B1-A1)+3.D0*FL*B1                  DLPE-055
      GO TO 16                                                          DLPE-056
    9 IF (EX.LT.0.D0) FX=0.D0                                           DLPE-057
      AV=FX-1.5D0*FL                                                    DLPE-058
      AW=.5D0*EL*FL                                                     DLPE-059
      A2=DREI(CN*(EL-EF))                                               DLPE-060
      A3=DREI(CN*(EL-EX))                                               DLPE-061
      A8=DREI(CN*(EL))                                                  DLPE-062
      A4=(A8-A2)*AW/EF+(A3-A2)*AV                                       DLPE-063
      IF (DABS(EX).GT.1.D-4) GO TO 10                                   DLPE-064
      A4=A4-((A8*CN-1.D0/EL)*(1.D0-.5D0*EX*CN)-0.5D0/EL**2*EX)*AW       DLPE-065
      GO TO 11                                                          DLPE-066
   10 A4=A4-(A8-A3)*AW/EX                                               DLPE-067
   11 A5=A4                                                             DLPE-068
      IMAXTM=32                                                         DLPE-069
      DO 14 J=1,15                                                      DLPE-070
      A1=0.D0                                                           DLPE-071
      GX=1.D0/EL/DFLOAT(IMAXTM)                                         DLPE-072
      GY=GX*1.5D0                                                       DLPE-073
      GU=0.D0                                                           DLPE-074
      DO 13 I=1,IMAXTM                                                  DLPE-075
      IF (I.EQ.IMAXTM) GY=GX/2.D0                                       DLPE-076
      GU=GU+GX                                                          DLPE-077
      IF (DABS((1.D0-GU*EF)*GU).LT.1.D-6) GO TO 13                      DLPE-078
      IF (EX.GT.0.D0) GO TO 12                                          DLPE-079
      A1=A1+GY*(DSQRT(1.D0/GU))*(1.D0/(1.D0-GU*EX)-1.D0/(1.D0-GU*EF))*DEDLPE-080
     1XP(-CN*(1/GU-EL))/GU                                              DLPE-081
      GO TO 13                                                          DLPE-082
   12 A1=A1+GY/(DSQRT(1.D0/GU)+FX)*DEXP(-CN*(1/GU-EL))/GU**2            DLPE-083
      A1=A1-GY*(DSQRT(1.D0/GU)-FX)/(1.D0-GU*EF)*DEXP(-CN*(1/GU-EL))/GU  DLPE-084
   13 GY=GX                                                             DLPE-085
      DLPE=A1+A4                                                        DLPE-086
      IF (DABS(1.D0-A5/DLPE).LT.1.D-5) GO TO 15                         DLPE-087
      A5=DLPE                                                           DLPE-088
   14 IMAXTM=2*IMAXTM                                                   DLPE-089
   15 DLPE=(DLPE-A5)/2+DLPE                                             DLPE-090
   16 DLPE=DLPE/PI                                                      DLPE-091
      RETURN                                                            DLPE-092
      END                                                               DLPE-093
C 12/01/07                                                      ECIS12  DVWI-000
      FUNCTION DVWI(E,EO,NV,B,CS,CR)                                    DVWI-001
C CONTRIBUTION TO THE REAL POTENTIAL OF A DISPERSIVE IMAGINARY TERM     DVWI-002
C '(E-EO)**NV/((E-EO)**NV+BV**NV)' WITH A DAMPING FACTOR                DVWI-003
C 'EXP[-CS*|E-EO|-CR*(E-EO)]'. WITH 'EY=E-E0' FOR POSITIVE VALUES AND   DVWI-004
C 'EY=-E-E0' FOR NEGATIVE VALUES, THE POLES ARE:                        DVWI-005
C 'EY+B*DEXP( I *PI*(2*J-1)/NV)' FOR J=1 TO NV AND THEIR RESIDUES ARE:  DVWI-006
C '2 B*DEXP( I *PI*(2*J-1)/NV)/NV' EVENTUALLY MULTIPLIED BY THE DAMPING DVWI-007
C FACTOR.                                                               DVWI-008
C INPUT:     E:       ENERGY MINUS THE FERMI ENERGY.                    DVWI-009
C            EO:      THRESHOLD ENERGY MINUS THE FERMI ENERGY.          DVWI-010
C            NV:      POWER IN THE EXPRESSION GIVEN ABOVE.              DVWI-011
C            B:       CONSTANT IN THE EXPRESSION GIVEN ABOVE.           DVWI-012
C            CS:      EXPONENTIAL DECREASE IN |E-EF|.                   DVWI-013
C            CR:      EXPONENTIAL DECREASE IN (E-EF).                   DVWI-014
C***********************************************************************DVWI-015
      IMPLICIT REAL*8 (A-H,O-Z)                                         DVWI-016
      DATA PI /3.1415926535897932D0/                                    DVWI-017
      M=NV/2                                                            DVWI-018
      IF ((CR.NE.0.D0).OR.(CS.NE.0.D0)) GO TO 2                         DVWI-019
C WITHOUT DAMPING. NO INTEGRAL BETWEEN -E-EO AND E-EO.                  DVWI-020
      DVWI=(DLOG(DABS(E+EO)/B)*(E+EO)**NV/((E+EO)**NV+B**NV)-DLOG(DABS(EDVWI-021
     1-EO)/B)*(E-EO)**NV/((E-EO)**NV+B**NV))                            DVWI-022
C LOOP ON POLES IN THE COMPLEX UPPER PLANE.                             DVWI-023
      DO 1 J=1,M                                                        DVWI-024
      BT=PI*DFLOAT(2*J-1)/DFLOAT(NV)                                    DVWI-025
      HTMP=((E-EO)**2+2.D0*B*(E-EO)*DCOS(BT)+B**2)*M/B                  DVWI-026
      G=((E+EO)**2-2.D0*B*(E+EO)*DCOS(BT)+B**2)*M/B                     DVWI-027
    1 DVWI=DVWI+((E-EO)/HTMP+(E+EO)/G)*DSIN(BT)*BT                      DVWI-028
      GO TO 4                                                           DVWI-029
    2 HTMP=DFLOAT(M)*(E-EO)**NV/((E-EO)**NV+B**NV)*DREI((CS+CR)*(EO-E)) DVWI-030
      G=-DFLOAT(M)*(E+EO)**NV/((E+EO)**NV+B**NV)*DREI((CS-CR)*(EO+E))   DVWI-031
C LOOP ON POLES IN THE COMPLEX UPPER PLANE.                             DVWI-032
      DO 3 J=1,M                                                        DVWI-033
      BT=PI*DFLOAT(2*J-1)/DFLOAT(NV)                                    DVWI-034
      AT=B*DCOS(BT)                                                     DVWI-035
      AZTMP=B*DSIN(BT)                                                  DVWI-036
      CALL DCEI((CS+CR)*AT,(CS+CR)*AZTMP,BR,BI)                         DVWI-037
      HTMP=HTMP+((BR*AT-BI*AZTMP)*(E-EO)+BR*B**2)/((E-EO+AT)**2+AZTMP**2DVWI-038
     1) 
      CALL DCEI((CS-CR)*AT,(CS-CR)*AZTMP,BR,BI)                         DVWI-039
    3 G=G+((BR*AT-BI*AZTMP)*(E+EO)-BR*B**2)/((E+EO-AT)**2+AZTMP**2)     DVWI-040
      DVWI=(DEXP(-(CS+CR)*EO)*HTMP+DEXP(-(CS-CR)*EO)*G)/DFLOAT(M)       DVWI-041
    4 DVWI=DVWI/PI                                                      DVWI-042
      RETURN                                                            DVWI-043
      END                                                               DVWI-044
C 29/10/12                                                      ECIS12  CAL1-000
      SUBROUTINE CAL1(NW,CW,DW,LO)                                      CAL1-001
C THIS SUBROUTINE COMPUTES FORM FACTORS (POTE), LOOKS FOR QUANTUM       CAL1-002
C NUMBERS (QUAN), CHECKS FOR CONVERGENCE WITH RESPECT TO TOTAL SPIN,    CAL1-003
C COMPUTES HELICITY AMPLITUDES (SCHE) AND COMPUTES CHI2 (RESU).         CAL1-004
C INPUT:     NW:      WORKING AREA FOR INTEGERS.                        CAL1-005
C            CW:      WORKING AREA FOR CHARACTERS.                      CAL1-006
C            DW:      WORKING AREA FOR DOUBLE PRECISION.                CAL1-007
C                     NW,CW,DW ARE IN EQUIVALENCE BY CALL.              CAL1-008
C            LO(I):   LOGICAL CONTROLS:                                 CAL1-009
C               LO(21) =.TRUE. USUAL COUPLED EQUATIONS.                 CAL1-010
C               LO(22) =.TRUE. NO USE OF PADE APPROXIMANTS.             CAL1-011
C               LO(23) =.TRUE. NO USE OF PADE AND SHIFT TO USUAL COUPLEDCAL1-012
C                              EQUATIONS WHEN THERE IS NO CONVERGENCE.  CAL1-013
C               LO(24) =.TRUE. COMPUTE THE COUPLINGS AT EACH ITERATION. CAL1-014
C               LO(25) =.TRUE. COMPLETE CALCULATION UP TO THE END - (F: CAL1-015
C                              ONE ITERATION IF TWO ARE ENOUGH).        CAL1-016
C               LO(28) =.TRUE. COMPUTATION UP TO J-CONVERGENCE-(F: STOP CAL1-017
C                              WHEN ALL COUPLING TERMS NEGLIGIBLE).     CAL1-018
C               LO(43) =.TRUE. INTERPOLATION ON TOTAL SPIN.             CAL1-019
C               LO(44) =.TRUE. COULOMB CORRECTIONS.                     CAL1-020
C               LO(51) =.TRUE. OUTPUT OF POTENTIALS.                    CAL1-021
C               LO(54) =.TRUE. OUTPUT LENGTH USED IN THE WORKING FIELD. CAL1-022
C               LO(63) =.TRUE. PENETRABILITIES WRITTEN ON FILE 63.      CAL1-023
C               LO(74) =.TRUE. OUTPUT OF TIME IN DIFFERENT STEPS.       CAL1-024
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             CAL1-025
C               LO(82) =.TRUE. OLD SIMPLIFIED COMPOUND NUCLEUS.         CAL1-026
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      CAL1-027
C               LO(104)=.TRUE. CONVERGENCE IS OBTAINED IN THE ITERATION.CAL1-028
C               LO(107)=.TRUE. ALL THE COUPLINGS CALCULATED BEFOREHAND. CAL1-029
C               LO(108)=.TRUE. DIAGONAL COULOMB CORRECTIONS ARE NEEDED. CAL1-030
C               LO(110)=.TRUE. DERIVATIVES ARE NEEDED.                  CAL1-031
C               LO(115)=.TRUE. FIRST COMPUTATION FOR THIS ENERGY.       CAL1-032
C               LO(117)=.TRUE. FOR ALL CALCULATIONS EXCEPT THE FIRST.   CAL1-033
C               LO(118)=.TRUE. FOR LAST RESULTS.                        CAL1-034
C               LO(119)=.TRUE. RESULTS WITH THE LAST CALCULATION.       CAL1-035
C               LO(120)=.TRUE. OUTPUT AND LAST CALCULATION BEST ONE.    CAL1-036
C               LO(122)=.TRUE. IDENTICAL PARTICLES WITHOUT SPIN.        CAL1-037
C               LO(124)=.TRUE. COMPUTE TRANSMISSION COEFFICIENTS.       CAL1-038
C               LO(125)=.TRUE. USUAL COUPLED EQUATIONS.                 CAL1-039
C               LO(127)=.TRUE. COULOMB CORRECTIONS IN ASYMPTOTIC REGION.CAL1-040
C               LO(128)=.TRUE. NO COPY OF UNCOUPLED FUNCTIONS AND       CAL1-041
C                              PHASE-SHIFTS.                            CAL1-042
C               LO(131)=.TRUE. TOTAL SPIN IS TOO LARGE FOR COMPOUND     CAL1-043
C                              NUCLEUS.                                 CAL1-044
C               LO(133)=.TRUE. STORE SCALAR AND COULOMB POTENTIAL       CAL1-045
C                              INDEPENDENTLY.                           CAL1-046
C OUTPUT:     LO:     LOGICAL CONTROLS. DEFINED HERE:                   CAL1-047
C                     LO(24), LO(107), LO(115), LO(117), LO(125),       CAL1-048
C                     LO(127), LO(128) AND LO(131).                     CAL1-049
C                                                                       CAL1-050
C FOR THE COMMONS /ADDRE/ AND /INTEG/ SEE CALC.                         CAL1-051
C FOR THE COMMONS /CONVE/ AND /COUPL/ SEE CALX.                         CAL1-052
C FOR THE COMMON  /NOEQU/ SEE QUAN.                                     CAL1-053
C                                                                       CAL1-054
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /ADDRE/:                     CAL1-055
C  NJIT:      DATA FOR INTERPOLATION ON TOTAL SPIN.                     CAL1-056
C  NWV:       NON INTEGER VALUES FOR THE CHANNELS.                      CAL1-057
C  NIPP:      DISPERSION PARAMETERS.                                    CAL1-058
C  NFIS:      FISSION DATA FOR COMPOUND NUCLEUS.                        CAL1-059
C  NGAM:      GAMMA DATA FOR COMPOUND NUCLEUS.                          CAL1-060
C  NNIV:      ADDRESSES OF REDUCED NUCLEAR MATRIX ELEMENTS AND COULOMB  CAL1-061
C             INTEGRALS IN NIV(NCOLL,NCOLL,3).                          CAL1-062
C  NPOT:      OPTICAL POTENTIAL PARAMETERS.                             CAL1-063
C  NBETA:     DEFORMATION PARAMETERS.                                   CAL1-064
C  NFM:       HELICITIES AND OBSERVABLES (SEE DEPH,LECD AND OBSE).      CAL1-065
C  NTGX:      BEGINNING OF CHI2 AND NORMALISATION OF DATA.              CAL1-066
C  NDONN:     EXPERIMENTAL DATA.                                        CAL1-067
C  NNVI:      TABLE OF ADDRESSES OF COUPLING COEFFICIENTS.              CAL1-068
C  NNWI:      SAME AS NNVI FOR SYMMETRISED EQUATIONS.                   CAL1-069
C  NCC:       TABLE OF ENERGIES, L*(L+1) AND L*S  (SEE QUAN).           CAL1-070
C  MCC:       SAME AS NCC FOR SYMMETRISED EQUATIONS.                    CAL1-071
C  NXA:       TABLE OF COEFFICIENTS OF SYMMETRISATION.                  CAL1-072
C  NAM1:      COMPUTATION OF OBSERVABLES (SEE OBSE).                    CAL1-073
C  NFAC:      TABLE OF LOG OF FACTORIALS FOR GEOMETRIC COEFFICIENTS.    CAL1-074
C  NFG:       COULOMB FUNCTIONS AND FINITE INTEGRALS.                   CAL1-075
C  NXG:       COULOMB PHASES AND INFINITE INTEGRALS.                    CAL1-076
C  NRES:      FUNCTIONS FOR THE SEARCH.                                 CAL1-077
C  NT:        TABLE OF REDUCED NUCLEAR MATRIX ELEMENTS.                 CAL1-078
C  NIVQ:      TABLE OF MULTIPOLES.                                      CAL1-079
C  NIVY:      TABLE OF FORM FACTOR IDENTIFICATION IVY (FOR COMPUTATION).CAL1-080
C  NIVZ:      TABLE OF FORM FACTOR IDENTIFICATION IVZ (FOR USE).        CAL1-081
C  NCOI:      ADDRESS OF THE TABLE FOR DISCRETISATION OF CONTINUUM.     CAL1-082
C  MIPI:      ADDRESS OF "IPIM" FOR THE DISCRETISATION OF CONTINUUM.    CAL1-083
C  NXD:       ADDRESS OF WEIGHTS AND STEPS OF CONTINUUM.                CAL1-084
C  MWV:       SAME AS NWV FOR THE DISCRETISATION OF CONTINUUM.          CAL1-085
C  NIXT:      TRANSMISSION COEFFICIENTS OF UNCOUPLED STATES.            CAL1-086
C  NTY:       TEMPORARY RESULTS OF COMPOUND NUCLEUS FOR INTERPOLATION.  CAL1-087
C  NSM:       STANDARD AND HELICITY SCATTERING MATRIX ELEMENTS.         CAL1-088
C  NTX:       PARTIAL REACTION CROSS SECTIONS AND COMPOUND NUCLEUS.     CAL1-089
C  NRY:       COMPOUND NUCLEUS COEFFICIENTS.                            CAL1-090
C  NRCO:      STRENGTH OF COULOMB CENTRAL POTENTIALS FOR CORRECTIONS.   CAL1-091
C  NRDO:      STRENGTH OF COULOMB TRANSITION POTENTIALS FOR CORRECTIONS.CAL1-092
C  NVC1:      REAL POTENTIALS.                                          CAL1-093
C  NVC2:      IMAGINARY POTENTIALS.                                     CAL1-094
C  NNC:       FIRST FREE ADDRESS AFTER COMPUTATION OF POTENTIALS.       CAL1-095
C  NCX:       FIRST FREE ADDRESS FOR COMPUTATION OF POTENTIALS.         CAL1-096
C   USED:     NJIT,NWV,NIPP,NFIS,NGAM,NNIV,NPOT,NBETA,NFM,NTGX,NDONN,   CAL1-097
C             NNVI,NNWI,NCC,MCC,NXA,NAM1,NFAC,NFG,NXG,NRES,NT,NIVQ,NIVY,CAL1-098
C             NIVZ,NCOI,MIPI,NXD,MWV,NIXT,NTY,NSM,NTX,NRY,NRCO,NRDO,    CAL1-099
C             NVC1,NVC2,NNC,NCX.                                        CAL1-100
C                                                                       CAL1-101
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /CONVE/:                     CAL1-102
C  H:         STEP SIZE FOR INTEGRATION.                                CAL1-103
C  BJM:       CONVERGENCE COEFFICIENT OF IMAGINARY POTENTIAL.           CAL1-104
C  EITER:     CONVERGENCE CRITERION FOR S-MATRIX.                       CAL1-105
C  CONJ:      CONVERGENCE CRITERION FOR THE SCATTERING AMPLITUDES.      CAL1-106
C   USED:     H,BJM,EITER,CONJ.                                         CAL1-107
C                                                                       CAL1-108
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     CAL1-109
C  NBT1:      NUMBER OF PHONONS (VIBRATIONS).                           CAL1-110
C  NFA:       NUMBER OF LOGARITHMS OF FACTORIALS.                       CAL1-111
C   USED:     NBT1,NFA.                                                 CAL1-112
C                                                                       CAL1-113
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /INTEG/:                     CAL1-114
C  IDMT:      TOTAL WORKING FIELD LENGTH AS DOUBLE PRECISION.           CAL1-115
C  NPLACE:    MAXIMUM WORKING FIELD USED.                               CAL1-116
C  NCOLL:     NUMBER OF COUPLED CHANNELS.                               CAL1-117
C  NJMAX:     MAXIMUM NUMBER OF J-VALUES.                               CAL1-118
C  ITERM:     MAXIMUM NUMBER OF ITERATIONS.                             CAL1-119
C  JDM:       MINIMUM NUMBER OF TOTAL SPIN.                             CAL1-120
C  JIT:       NUMBER OF RATES OF INTERPOLATION ON TOTAL SPIN.           CAL1-121
C  KMIN:      MINIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUS.          CAL1-122
C  KMAX:      MAXIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUS.          CAL1-123
C  NCOLS:     NUMBER OF CHANNELS WITH ANGULAR DISTRIBUTIONS.            CAL1-124
C  NCOLT:     NUMBER OF CHANNELS INCLUDING UNCOUPLED STATES.            CAL1-125
C  LMX:       DIFFERENCE BETWEEN NUMBER OF J AND OF COULOMB FUNCTIONS.  CAL1-126
C  LMAX1:     NUMBER OF L-VALUES FOR COULOMB FUNCTIONS.                 CAL1-127
C  NLT:       MEMORIES NEEDED FOR LEGENDRE POLYNOMIALS.                 CAL1-128
C  ISM:       NUMBER OF INTEGRATION STEPS.                              CAL1-129
C  NJC:       MAXIMUM NUMBER OF OBSERVABLES AT EQUIDISTANT ANGLES.      CAL1-130
C  JTX:       MAXIMUM NUMBER OF CALCULATED VALUES FOR A PLOT.           CAL1-131
C  KCC:       NUMBER OF INDEPENDENT AMPLITUDES WITH UNCOUPLED STATES.   CAL1-132
C  MS1:       LARGEST PARTICLE MULTIPLICITY.                            CAL1-133
C  MS2:       LARGEST TARGET MULTIPLICITY.                              CAL1-134
C  KBA:       NUMBER OF INDEPENDENT AMPLITUDES WITHOUT UNCOUPLED STATES.CAL1-135
C  KAB:       MAXIMUM NUMBER OF EQUATIONS.                              CAL1-136
C  KBC:       MAXIMUM NUMBER OF SOLUTIONS.                              CAL1-137
C  JTH:       MAXIMUM NUMBER OF ANGLES FOR A PLOT.                      CAL1-138
C  NCOLR:     NUMBER OF EXPERIMENTAL ANGULAR DISTRIBUTIONS.             CAL1-139
C  LMAX2:     NUMBER OF L VALUES FOR COULOMB PHASES.                    CAL1-140
C  ITEMM:     MAXIMUM NUMBER OF ITERATIONS AT THE BEGINNING OF A RUN.   CAL1-141
C  KXT:       NUMBER OF PENETRABILITIES FOR UNCOUPLED STATES.           CAL1-142
C  LMAX3:     EFFECTIVE NUMBER OF COULOMB FUNCTIONS.                    CAL1-143
C  NRZ:       NUMBER OF RESULTS TO SAVE FOR MINIMUM CHI2..              CAL1-144
C  NTZ:       NUMBER OF MEMORIES TO INITIALISE TO ZERO FOR SCATTERING   CAL1-145
C             MATRIX AND COMPOUND NUCLEUS RESULTS..                     CAL1-146
C  IPM:       NUMBER PF J VALUES USED FOR SCATTERING MATRIX (IN CAL1).  CAL1-147
C  IPK:       NUMBER PF J VALUES USED FOR COMPOUND NUCLEUS (IN CAL1).   CAL1-148
C  MCM(1):    MAXIMUM ANGULAR MOMENTUM FOR CENTRAL COULOMB CORRECTIONS. CAL1-149
C  MCM(2):    MAXIMUM ANGULAR MOMENTUM FOR SPIN-ORBIT COULOMB CORRECT.  CAL1-150
C  NCT(1):    NUMBER OF EQUATIONS FOR POSITIVE PARITY.                  CAL1-151
C  NCT(2):    NUMBER OF EQUATIONS FOR NEGATIVE PARITY.                  CAL1-152
C  NCT(3):    NUMBER OF SOLUTIONS FOR POSITIVE PARITY.                  CAL1-153
C  NCT(4):    NUMBER OF SOLUTIONS FOR NEGATIVE PARITY.                  CAL1-154
C  NCT(5):    NUMBER OF COMPOUND NUCLEUS COEFFICIENTS, POSITIVE PARITY. CAL1-155
C  NCT(6):    NUMBER OF COMPOUND NUCLEUS COEFFICIENTS, NEGATIVE PARITY. CAL1-156
C   DEFINED:  NPLACE,ITERM,IPM,IPK.                                     CAL1-157
C   USED:     IDMT,NPLACE,NCOLL,NJMAX,ITERM,JDM,JIT,KMIN,KMAX,NCOLS,    CAL1-158
C             NCOLT,LMX,LMAX1,NLT,ISM,NJC,JTX,KCC,MS1,MS2,KBA,KAB,KBC,  CAL1-159
C             JTH,NCOLR,LMAX2,ITEMM,KXT,LMAX3,NRZ,NTZ,IPM,IPK,MCM,NCT.  CAL1-160
C                                                                       CAL1-161
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NOEQU/:                     CAL1-162
C  NCXN:      NUMBER OF SOLUTIONS NEEDED.                               CAL1-163
C  NC:        NUMBER OF EQUATIONS FOR IDENTICAL PARTICLES.              CAL1-164
C  NCIN:      NUMBER OF SOLUTIONS FOR IDENTICAL PARTICLES.              CAL1-165
C  NIN:       NUMBER OF COUPLING POTENTIALS.                            CAL1-166
C  JPI:       PARITY 0 OR 1.                                            CAL1-167
C  IPJ:       VALUE OF J+1 OR J+1/2 WHERE J IS THE CHANNEL SPIN.        CAL1-168
C  R1(2):     MAXIMUM OF SCATTERING AND COMPOUND COEFFICIENT.           CAL1-169
C  NAJ:       TWICE THE CHANNEL SPIN J.                                 CAL1-170
C   DEFINED:  NCXN,NIN,JPI,IPJ,NAJ.                                     CAL1-171
C   USED:     NCXN,NC,NCIN,NIN,R1.                                      CAL1-172
C                                                                       CAL1-173
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     CAL1-174
C  NPX:       NUMBER OF POTENTIALS TAKING INTO ACCOUNT DISPERSION.      CAL1-175
C   USED:     NPX.                                                      CAL1-176
C                                                                       CAL1-177
C***********************************************************************CAL1-178
      IMPLICIT REAL*8 (A-H,O-Z)                                         CAL1-179
      LOGICAL LO(150)                                                   CAL1-180
      CHARACTER*4 CW(2,*)                                               CAL1-181
      CHARACTER*1 JP                                                    CAL1-182
      DIMENSION NW(2,*),DW(*)                                           CAL1-183
      COMMON /ADDRE/ NIPH,NJIT,NWV,NIPP,NPAR,NPAA,NSCN,NFIS,NGAM,NNIV,NPCAL1-184
     1OT,NBETA,NFM,NTGX,NDONN,NNVI,NDE,NISE,NRC,NIW,NNWI,NCC,MCC,NXA,NAMCAL1-185
     21,NFAC,NFG,NXG,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,NXD,MWV,NIXT,NCAL1-186
     3TY,NSM,NTX,NRY,NRCO,NRDO,NVC1,NVC2,NNC,NCX                        CAL1-187
      COMMON /CONVE/ H,BJM,EITER,ACONV,CONJ,HCONV                       CAL1-188
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   CAL1-189
      COMMON /INOUT/ MR,MW,MS                                           CAL1-190
      COMMON /INTEG/ IDMT,NPLACE,NCOLL,NJMAX,ITERM,JDM,JIT,KMIN,KMAX,NCOCAL1-191
     1LS,NCOLT,NBET,LMX,LMAX1,NLT,ISM,NJC,JTX,KCC,MS1,MS2,KBA,KAB,KBC,JTCAL1-192
     2H,NCOLR,NREC,NTOT,LMAX2,KE,ITEMM,KXT,LMAX3,NRZ,NTZ,IPM,IPK,MCM(2),CAL1-193
     3NCT(6)                                                            CAL1-194
      COMMON /NCOMP/ NSP(5),NCONT,NCOJ(3),NCOLX,NDP,NDQ,ACN(20)         CAL1-195
      COMMON /NOEQU/ NCXN,NIC,NCI,NC,NCIN,NIN,JPI,IPJ,R1(2),NAJ         CAL1-196
      CHARACTER*20 fname                                                RCN  RCN
      LOGICAL unformat                                                  RCN  RCN
      COMMON /NFORM/unformat,fname                                      RCN  RCN
      LMD=2                                                             CAL1-197
      IF (LO(100).OR.LO(133)) LMD=3                                     CAL1-198
      JMIN=MOD(NW(2,1)+NW(1,2),2)                                       CAL1-199
      NFAM=NNC                                                          CAL1-200
      NPAD=NFAM+KAB*(2*KBC+10)                                          CAL1-201
      IF (LO(124)) NPAD=NFAM+KAB*(2*KAB+10)                             CAL1-202
      NR5=NPAD+2*ITEMM*(KAB+2)                                          CAL1-203
      IF (LO(21).OR.LO(22)) NR5=NPAD                                    CAL1-204
      NWW=NR5+2*KAB                                                     CAL1-205
      NXC=NWW+4*ISM*KAB                                                 CAL1-206
      IF (LO(120).AND.(.NOT.(LO(51).OR.LO(62)))) GO TO 2                CAL1-207
      IF (LO(119)) GO TO 22                                             CAL1-208
      IF (LO(100)) NXC=NXC+4*ISM*KAB                                    CAL1-209
      IF (LO(21)) NXC=NR5                                               CAL1-210
      ID1=IDMT-NCX                                                      CAL1-211
C COMPUTATION OF POTENTIALS AND FORM FACTORS.                           CAL1-212
      N=NCX-1                                                           CAL1-213
      DO 1 I=NRCO,N                                                     CAL1-214
    1 DW(I)=0.D0                                                        CAL1-215
      CALL POTE(DW(NBETA),NW(1,NBETA),NW(1,NIVQ),NW(1,NIVY),NW(1,NIVZ),DCAL1-216
     1W(NPOT),NW(1,NPOT),DW(NWV),DW(MWV),ISM,NCOLL,NCOLX-NCONT,NCOLT,ID1CAL1-217
     2,NW,NW(1,MIPI),NW(1,NIPP),MCM,LO,DW(NVC1),DW(NRCO),DW(NRDO),DW(NIXCAL1-218
     3T),DW(NCX),NW(1,NCX))                                             CAL1-219
    2 IF (LO(120)) GO TO 22                                             CAL1-220
      NPLACE=MAX0(NPLACE,NXC+ID1)                                       CAL1-221
      JPI=0                                                             CAL1-222
      IP1=1                                                             CAL1-223
      IF (LO(122)) IP1=2                                                CAL1-224
      NPT=0                                                             CAL1-225
      N=NTY+NTZ-1                                                       CAL1-226
      DO 3 I=NTY,N                                                      CAL1-227
    3 DW(I)=0.D0                                                        CAL1-228
      IF ((.NOT.LO(81)).OR.LO(82)) GO TO 4                              CAL1-229
      NX=NNC+2*ISM                                                      CAL1-230
      N=NX+2*(ISM+2)                                                    CAL1-231
      IF (N.GT.IDMT) CALL MEMO('CAL1',IDMT,N)                           CAL1-232
      NPLACE=MAX0(NPLACE,N)                                             CAL1-233
C LOOP ON THE PARITIES  JPI IS THE PARITY (0 OR 1).                     CAL1-234
    4 IPJ=1                                                             CAL1-235
      AJM=-1.D0                                                         CAL1-236
      LO(127)=.FALSE.                                                   CAL1-237
      LO(131)=.NOT.LO(81)                                               CAL1-238
      ITERM=ITEMM                                                       CAL1-239
      KB=(KAB+1)/2                                                      CAL1-240
      DO 5 K=1,KB                                                       CAL1-241
      NW(1,NCC+K-1)=0                                                   CAL1-242
    5 NW(2,NCC+K-1)=0                                                   CAL1-243
C LOOP ON THE VALUES OF J.                                              CAL1-244
C SEARCH FOR QUANTUM NUMBERS AND COUPLING COEFFICIENTS.                 CAL1-245
    6 LO(125)=LO(21)                                                    CAL1-246
      NAJ=JMIN+2*IPJ-2                                                  CAL1-247
      AJ=0.5D0*DFLOAT(NAJ)                                              CAL1-248
      ITERR=0                                                           CAL1-249
    7 CALL QUAN(NCOLL,DW(NWV),NW,NW(1,NNIV),NW(1,NT),DW(NT),NW(1,NIVQ),NCAL1-250
     1W(1,NIVZ),NW(1,NCC),NW(1,NXC),DW(NXC),IU,NW(1,NNVI),KAB,KBC,DW(NXACAL1-251
     2),DW(NFAC),NFA,IDMT-NXC-200,LMD,LO)                               CAL1-252
      IF (NCIN.EQ.0) GO TO 15                                           CAL1-253
      AJM=AJ                                                            CAL1-254
      NX=NXC+IU*LMD                                                     CAL1-255
      IPX=IPJ                                                           CAL1-256
      LO(131)=LO(131).OR.IPJ.GT.KMAX                                    CAL1-257
      NX1=NX                                                            CAL1-258
      NCXN=NCIN                                                         CAL1-259
      IF (LO(124)) NCXN=NC                                              CAL1-260
      NWR=2*NX1+20*KAB*KAB-1                                            CAL1-261
      IF (NWR+10*KAB**2.GT.IDMT) CALL MEMO('CAL1',IDMT,NWR+10*KAB**2)   CAL1-262
      CALL MTCH(NW(1,NNWI),NCOLL,KAB,DW(NWV),NW(1,MCC),DW(NXG),NW(1,NXC)CAL1-263
     1,DW(NXC),DW(NX1),ISM,LMAX2,NW(1,NNIV),NW(1,NIVZ),DW(NFG),LMAX1,LMACAL1-264
     2X3,NW(1,NWR),DW(NRCO),DW(NRDO),DW(NFAM),LMD,LO)                   CAL1-265
      IF (LO(127)) GO TO 12                                             CAL1-266
      IF (LO(44)) NX=NX+4*KAB*KAB                                       CAL1-267
      IF (LO(74)) CALL HORA                                             CAL1-268
C NX FIRST ADDRESS WHICH CAN BE USED.                                   CAL1-269
      IF (LO(125)) GO TO 12                                             CAL1-270
C ITERATIONS.                                                           CAL1-271
      NFAR=NFAM+10*KAB                                                  CAL1-272
      NFAI=NFAR+NCXN*KAB                                                CAL1-273
      IF (LO(100)) GO TO 8                                              CAL1-274
      NWR=2*NX+4*(ISM+2)-1                                              CAL1-275
      NR4=NWR+2*NC*ISM                                                  CAL1-276
      IF (LO(110)) NR4=NWR+4*NC*ISM                                     CAL1-277
      N=NR4+2*ISM                                                       CAL1-278
      GO TO 9                                                           CAL1-279
    8 NWR=NX+2*(ISM+2)                                                  CAL1-280
      NR4=NWR+4*NC*ISM                                                  CAL1-281
      NIN=4*NIN                                                         CAL1-282
C  N IS THE FIRST FREE ADDRESS AND NIN THE NUMBER OF COUPLING POTENTIALSCAL1-283
C WHICH CAN BE STORED.                                                  CAL1-284
      N=NR4+4*ISM                                                       CAL1-285
    9 N3=N                                                              CAL1-286
      IF (N.GT.IDMT) CALL MEMO('CAL1',IDMT,N)                           CAL1-287
      LO(107)=(.NOT.LO(24)).AND.ITERM.GT.1                              CAL1-288
      IF (BJM.NE.0.D0) NIN=NIN+NC                                       CAL1-289
      IF (LO(107)) N3=N3+NIN*ISM                                        CAL1-290
      IF (LO(54)) WRITE (MW,1000) N3,AJM                                CAL1-291
      IF (N3.LE.IDMT) GO TO 10                                          CAL1-292
      LO(107)=.FALSE.                                                   CAL1-293
      LO(24)=.TRUE.                                                     CAL1-294
      N3=N                                                              CAL1-295
      WRITE (MW,1001)                                                   CAL1-296
   10 NPLACE=MAX0(NPLACE,N3)                                            CAL1-297
      IF (LO(100)) GO TO 11                                             CAL1-298
      CALL INTI(DW(NFAM),DW(NX),DW(NWW),DW(NWR),DW(NR4),DW(NPAD),NW(1,NRCAL1-299
     15),ISM,KAB,DW(N),ITERM,NC,DW(NVC1),NW(1,NNWI),NW(1,MCC),NW(1,NXC),CAL1-300
     2DW(NXC),LMD,DW(NX1),NCXN,NNI,ITERR,LO)                            CAL1-301
      IF (LO(104).OR.ITERM.EQ.1) GO TO 13                               CAL1-302
      IF (.NOT.LO(23)) GO TO 13                                         CAL1-303
      IF (LO(110)) WRITE (MW,1002) AJM,JPI                              CAL1-304
      LO(125)=.TRUE.                                                    CAL1-305
      LO(128)=.TRUE.                                                    CAL1-306
      GO TO 7                                                           CAL1-307
   11 CALL INTR(DW(NFAM),DW(NX),DW(NWW),DW(NWR),DW(NR4),DW(NPAD),NW(1,NRCAL1-308
     15),ISM,KAB,DW(N),ITERM,NC,DW(NVC1),DW(NVC2),NW(1,NNWI),NW(1,MCC),NCAL1-309
     2W(1,NXC),DW(NXC),DW(NX1),NCXN,NNI,ITERR,LO)                       CAL1-310
      GO TO 13                                                          CAL1-311
C USUAL COUPLED CHANNELS CALCULATION.                                   CAL1-312
C NWR IS THE FIRST ADDRESS TO STORE POTENTIALS AND NM THE MAXIMUM       CAL1-313
C NUMBER OF POINTS   FOR ARGUMENTS  SEE INCH.                           CAL1-314
   12 NWR=NX+6*KAB*KAB                                                  CAL1-315
      IF (LO(54)) WRITE (MW,1000) NWR,AJM                               CAL1-316
      NFAI=NX+KAB*KAB                                                   CAL1-317
      NFAR=NFAI+3*KAB*KAB                                               CAL1-318
      IF (LO(127)) GO TO 13                                             CAL1-319
      N=NWR+2*NC*NC*(ISM+1)                                             CAL1-320
      IF (N.GT.IDMT) CALL MEMO('CAL1',IDMT,N)                           CAL1-321
      NM=(IDMT-NWR)/(2*NC*NC)-1                                         CAL1-322
      NM=MIN0(NM,ISM)                                                   CAL1-323
      IF (LO(54).AND.NM.NE.ISM) WRITE (MW,1003) NM                      CAL1-324
      N3=NWR+2*(NM+1)*NC*NC                                             CAL1-325
      NPLACE=MAX0(NPLACE,N3,NFAR+3*KAB*KAB)                             CAL1-326
      CALL INCH(DW(NVC1),NW(1,MCC),NW(1,NXC),DW(NXC),LMD,NW(1,NNWI),DW(NCAL1-327
     1FAM),DW(NX1),DW(NX),DW(NWR),ISM,KAB,NC,NCXN,NM,ITERM,NW(1,NWR),LO)CAL1-328
   13 IF (LO(74)) CALL HORA                                             CAL1-329
C NFAR AND NFAI  ADDRESSES OF REAL AND IMAGINARY PARTS OF S-MATRIX.     CAL1-330
      NMX=NWR+(4+NCIN)*(NC+KXT)                                         CAL1-331
      N=NMX+MAX0(4*NC*NC,LMAX2+4*IPJ)                                   CAL1-332
      IF (N.GT.IDMT) CALL MEMO('CAL1',IDMT,N)                           CAL1-333
      NPT=NPT+1                                                         CAL1-334
      CALL SCAM(DW(NSM),DW(NTY),DW(NTX),DW(NRY),NJMAX,KMAX,NW(1,MCC),NW(CAL1-335
     11,NCC),DW(NFAR),DW(NFAI),DW(NWV),NCOLL,NCOLS,KAB,KCC,NW,NW(1,MIPI)CAL1-336
     2,DW(NGAM),DW(NFIS),DW(NIXT),NW(1,NCOI),DW(NXD),DW(NMX),DW(NMX),DW(CAL1-337
     3NWR),NCT,NCIN+4,DW(NXA),KBC,IDMT-NMX,LO)                          CAL1-338
      IF (LO(131)) GO TO 14                                             CAL1-339
      LO(131)=R1(2).LT.CONJ.AND.IPJ.GT.KMIN                             CAL1-340
      IF (.NOT.LO(131)) IPK=IPJ                                         CAL1-341
      IF (LO(131).AND.(LO(118).OR.LO(115))) WRITE (MW,1004) AJM,R1(2)   CAL1-342
   14 IF (LO(74)) CALL HORA                                             CAL1-343
      IF (LO(21)) GO TO 15                                              CAL1-344
C REDUCTION OF MAXIMUM NUMBER OF ITERATIONS IF 2 WHERE SUFFICIENT(ITERR)CAL1-345
      IF ((.NOT.LO(25)).AND.(ITERR.LE.2).AND.(IPJ.GT.JDM)) ITERM=1      CAL1-346
C CHECKS OF CONVERGENCE.                                                CAL1-347
      IF ((NNI.EQ.NC).AND.(IPJ.GT.JDM)) LO(127)=.TRUE.                  CAL1-348
      IF ((.NOT.LO(28)).AND.NNI.EQ.NC.AND.IPJ.GT.JDM+1) GO TO 18        CAL1-349
C INCREASE OF THE TOTAL ANGULAR MOMENTUM.                               CAL1-350
   15 IF (.NOT.LO(43)) GO TO 17                                         CAL1-351
      DO 16 I=1,JIT                                                     CAL1-352
      IF (IPJ.LE.NW(1,NJIT+I-1)) GO TO 17                               CAL1-353
   16 IPJ=IPJ+NW(2,NJIT+I-1)*IP1                                        CAL1-354
   17 IPJ=IPJ+IP1                                                       CAL1-355
      IF (IPJ.GT.LMAX3-LMX) LO(127)=.TRUE.                              CAL1-356
      IF (.NOT.LO(108)) LO(127)=.FALSE.                                 CAL1-357
      IF ((IPJ.LE.NJMAX).AND.((R1(1).GE.CONJ).OR.(IPJ.LE.JDM).OR.(NCIN.ECAL1-358
     1Q.0))) GO TO 6                                                    CAL1-359
C CHANGE OF PARITY.                                                     CAL1-360
   18 NAJ=JMIN+2*IPX-2                                                  CAL1-361
      IF (LO(118).OR.LO(115)) WRITE (MW,1005) AJM,R1(1)                 CAL1-362
      IF (JPI.EQ.1) GO TO 19                                            CAL1-363
      JPI=JPI+1                                                         CAL1-364
      IPY=IPX                                                           CAL1-365
      IPZ=IPK                                                           CAL1-366
      GO TO 4                                                           CAL1-367
   19 IPM=MAX0(IPX,IPY)                                                 CAL1-368
      IPK=MAX0(IPK,IPZ)                                                 CAL1-369
      IF (.NOT.LO(63)) GO TO 22                                         CAL1-370
      if (.not.unformat)                                                RCN  RCN
     >  WRITE (63,1006) DW(NWV),DW(NWV+12),DW(NWV+1),NW(2,2),NPT        CAL1-371
C     RCN commented, add. information not needed if binary file		  RCN  RCN
C     WRITE (63) DW(NWV),DW(NWV+12),DW(NWV+1),NW(2,2),NPT               !zv-2013
      REWIND (94,ERR=592)                                               RCN  RCN
      IF(unformat) then                                                 RCN  RCN
        DO 211 I=1,NPT                                                  RCN  RCN
          READ (94,ERR=592,END=592) U1,JP,K3                            RCN  RCN
          WRITE (63) U1,JP,K3                                           RCN  RCN
          DO 201 K=1,K3                                                 RCN  RCN
          READ (94,ERR=592,END=592) K1,K2,U1,U2                         RCN  RCN
  201     WRITE (63) K1,K2,U1,U2                                        RCN  RCN
  211   CONTINUE                                                        RCN  RCN
      ELSE                                                              RCN  RCN
        DO 21 I=1,NPT                                                   CAL1-373
          READ (94,1007,ERR=592,END=592) U1,JP,K3                       RCN  RCN
          WRITE (63,1007) U1,JP,K3                                      CAL1-375
          DO 20 K=1,K3                                                  CAL1-376
          READ (94,1008,ERR=592,END=592) K1,K2,U1,U2                    RCN  RCN
   20     WRITE (63,1008) K1,K2,U1,U2                                   CAL1-378
   21   CONTINUE                                                        CAL1-379
      ENDIF                                                             RCN  RCN
  592 CONTINUE                                                       	  RCN  RCN
C     CLOSE (94)                                                        CAL1-380
   22 KCB=MAX0(NCT(5),NCT(6))                                           CAL1-381
      NDX=NXC+4*KCB                                                     CAL1-382
      NDY=NDX+JTH                                                       CAL1-383
      NDZ=NDY+JTH                                                       CAL1-384
      NMY=NDZ+JTX                                                       CAL1-385
      NGA=NMY+3*NJC                                                     CAL1-386
      NMA=NGA+4*KBC*KAB                                                 CAL1-387
      NMC=NMA+MS1*MS2*KCB                                               CAL1-388
      N=NMC+2*IPM                                                       CAL1-389
      IF (N.GT.IDMT) CALL MEMO('CAL1',IDMT,N)                           CAL1-390
      CALL SCHE(DW(NSM),NJMAX,KMAX,NW,MS1,MS2,NW(1,NFM),DW(NTX),DW(NMC),CAL1-391
     1NW(1,NXC),DW(NGA),DW(NXG),LMAX2,DW(NWV),KAB,KBA,KCB,JMIN,IPM,IPK,DCAL1-392
     2W(NTY),NCOLL,NCOLS,NCT,DW(NRY),DW(NMA),JIT,NW(1,NJIT),NLT,IDMT-NMCCAL1-393
     3,LO)                                                              CAL1-394
      ID1=IDMT-NGA                                                      CAL1-395
C FOR ARGUMENTS    SEE CALX AND RESU.                                   CAL1-396
      CALL RESU(NW,DW(NSM),DW(NTX),DW(NSM),NJMAX,KMAX,NCOLL,NCOLS,NW(1,NCAL1-397
     1FM),CW(1,NFM),NW(1,NTGX),DW(NTGX),IPM,IPK,DW(NDONN),NCOLR,NW(1,NAMCAL1-398
     21),DW(NAM1),DW(NWV),DW(MWV),DW(NRY),NW(1,NCOI),DW(NXD),JMIN,NRZ,NJCAL1-399
     3C,DW(NRES),DW(NGA),DW(NMY),DW(NDX),DW(NDY),DW(NDZ),ID1,LO)        CAL1-400
      NPLACE=MAX0(NPLACE,NGA+ID1)                                       CAL1-401
      IF (LO(74)) CALL HORA                                             CAL1-402
      LO(117)=.TRUE.                                                    CAL1-403
      LO(115)=.FALSE.                                                   CAL1-404
      RETURN                                                            CAL1-405
 1000 FORMAT (10X,'REQUIRED WORKING FIELD',I10,'  FOR J =',F7.1)        CAL1-406
 1001 FORMAT (/' WORKING FIELD TOO SMALL TO STORE ALL THE POTENTIALS'/1XCAL1-407
     1,52('*')//' THE 24TH CONTROL IS SET .TRUE.'//)                    CAL1-408
 1002 FORMAT (' WARNING: FOR J =',F6.1,' PARITY (-1)**',I1,' THE DERIVATCAL1-409
     1IVE TERMS ARE NEGLECTED.')                                        CAL1-410
 1003 FORMAT ('+',60X,'COMPUTATION OF POTENTIALS BY',I5,'  AT A TIME')  CAL1-411
 1004 FORMAT (' MAXIMUM J-VALUE =',F6.1,' FOR COMPOUND NUCLEUS',6X,'MAXICAL1-412
     1MUM COEFFICIENT AT THE END',D12.3)                                CAL1-413
 1005 FORMAT (' MAXIMUM J-VALUE =',F6.1,16X,'MAXIMUM SCATTERING COEFFICICAL1-414
     1ENT AT THE END',D12.3)                                            CAL1-415
 1006 FORMAT ('<TLJ     >',F10.2,1P,D20.8,0P,F10.2,2I5)                 CAL1-416
 1007 FORMAT (1X,F9.1,4X,A1,1X,I4)                                      CAL1-417
 1008 FORMAT (1X,I2,I6,F9.1,2X,1P,D18.8,0P)                             CAL1-418
      END                                                               CAL1-419
C 14/11/12                                                      ECIS12  POTE-000
      SUBROUTINE POTE(BETA,NBETA,IVQ,IVY,IVZ,VAL,NVAL,WV,WVM,ISM,NCOLL,NPOTE-001
     1COLD,NCOLT,IDT,IPI,IPIM,IPP,MCM,LO,V,VCO,VDO,TL,Q,NP)             POTE-002
C COMPUTATION AND OUTPUT OF FORM FACTORS.                               POTE-003
C INPUT:     BETA:    DEFORMATIONS OF THE TARGET.                       POTE-004
C            NBETA:   EQUIVALENT BY CALL WITH BETA.                     POTE-005
C            IVQ:     TABLE OF ANGULAR MOMENTA OF FORM FACTORS.         POTE-006
C            IVY:     TABLE FOR COMPUTATION OF FORM FACTORS.            POTE-007
C            IVZ:     TABLE FOR USE OF FORM FACTORS.                    POTE-008
C            VAL,NVAL:OPTICAL MODEL AND FOLDING PARAMETERS.             POTE-009
C            WV,WVM:  DESCRIPTION OF THE CHANNELS (SEE CALX).           POTE-010
C            ISM:     NUMBER OF POINTS.                                 POTE-011
C            NCOLL:   NUMBER OF COUPLED NUCLEAR STATES.                 POTE-012
C            NCOLD:   TOTAL NUMBER OF STATES WITHOUT CONTINUUM.         POTE-013
C            NCOLT:   TOTAL NUMBER OF STATES WITH CONTINUUM.            POTE-014
C            IDT:     MAXIMUM WORKING FIELD Q.                          POTE-015
C            IPI,IPIM:DESCRIPTION OF THE CHANNELS (SEE CALX).           POTE-016
C            IPP:     CROSS-REFERENCE TO POTENTIALS IN IPI(1,*).        POTE-017
C            MCM:     ANGULAR MOMENTUM LIMITS ON COULOMB CORRECTIONS.   POTE-018
C            LO:      LOGICAL CONTROLS:                                 POTE-019
C               LO(1)  =.TRUE. ROTATIONAL MODEL-(.F.:VIBRATIONAL MODEL).POTE-020
C               LO(3)  =.TRUE. ANHARMONIC VIBRATIONAL OR ASYMMETRIC     POTE-021
C                              ROTATIONAL MODEL.                        POTE-022
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    POTE-023
C               LO(10) =.TRUE. DISPERSION RELATIONS FOR POTENTIALS.     POTE-024
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              POTE-025
C               LO(12) =.TRUE. DEFORMED IMAGINARY CENTRAL POTENTIAL.    POTE-026
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      POTE-027
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. POTE-028
C               LO(17) =.TRUE. FOLDING MODEL.                           POTE-029
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   POTE-030
C               LO(51) =.TRUE. OUTPUT OF POTENTIALS.                    POTE-031
C               LO(62) =.TRUE. POTENTIALS WRITTEN ON FILE 62.           POTE-032
C               LO(74) =.TRUE. OUTPUT OF TIME IN DIFFERENT STEPS.       POTE-033
C               LO(93) =.TRUE. NO RECOIL CORRECTION FOR REACTIONS WITH  POTE-034
C                              SMALL DIFFERENCES (LESS THAN .5) OF      POTE-035
C                              TARGET MASSES.                           POTE-036
C               LO(99) =.TRUE. SCHROEDINGER EQUIVALENT TO DIRAC         POTE-037
C                              EQUATION.                                POTE-038
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      POTE-039
C               LO(101)=.TRUE. THERE IS A REAL SPIN-ORBIT POTENTIAL.    POTE-040
C               LO(102)=.TRUE. THERE IS AN IMAGINARY SPIN-ORBIT         POTE-041
C                              POTENTIAL.                               POTE-042
C               LO(103)=.TRUE. THERE IS A COULOMB SPIN-ORBIT POTENTIAL. POTE-043
C               LO(117)=.TRUE. FOR ALL CALCULATIONS EXCEPT THE FIRST.   POTE-044
C               LO(130)=.TRUE. IMAGINARY SPIN-ORBIT OR DIRAC EQUATION.  POTE-045
C               LO(133)=.TRUE. STORE SCALAR AND COULOMB POTENTIAL       POTE-046
C                              INDEPENDENTLY.                           POTE-047
C OUTPUT:    TL:      TRANSMISSION COEFFICIENTS FOR UNCOUPLED STATES.   POTE-048
C            V(I,J):  POTENTIAL AND TRANSITION FORM FACTORS.            POTE-049
C            VCO(2,I):STRENGTH OF COULOMB POTENTIAL TAILS, SCALAR IN    POTE-050
C                     VCO(1,I), SPIN-ORBIT IN VCO(2,I).                 POTE-051
C            VDO(2,I):STRENGTH OF COULOMB TRANSITION TAILS, SCALAR IN   POTE-052
C                     VDO(1,I), SPIN-ORBIT IN VDO(2,I).                 POTE-053
C            IDT:     RETURNS THE PLACE USED.                           POTE-054
C WORKING AREA:                                                         POTE-055
C            NP,Q:    IN EQUIVALENCE BY CALL.                           POTE-056
C                                                                       POTE-057
C***********************************************************************POTE-058
C     DISPOSITION OF FORM-FACTORS IN THE AREA V(I,*):                   POTE-059
C                                                                       POTE-060
C                     FOR SCHROEDINGER EQUATIONS:                       POTE-061
C     AFTER ITY(1) (=0) REAL CENTRAL POTENTIALS IN ORDER IPI(11,*)      POTE-062
C     AFTER ITY(3) REAL SPIN-ORBIT FORM FACTORS IN THE SAME ORDER.      POTE-063
C     AFTER ITY(5) REAL TRANSITION FORM FACTORS IN ORDER IVZ(1,*).      POTE-064
C     AFTER ITY(7) REAL DERIVED SPIN-ORBIT FORM FACTORS IN ORDER        POTE-065
C           IVZ(1,*) WITH THE R**-2 FORM FACTOR AT THE SAME ADDRESS+INLSPOTE-066
C     AFTER ITY(9) COULOMB CENTRAL POTENTIAL IF NEEDED SEPARATED IN THE POTE-067
C           ORDER OF REAL POTENTIALS.                                   POTE-068
C     AFTER ITY(10) COULOMB SPIN-ORBIT POTENTIAL IF NEEDED SEPARATED IN POTE-069
C           THE ORDER OF SPIN-ORBIT POTENTIALS.                         POTE-070
C     IMAGINARY POTENTIALS AND FORM FACTOR FOLLOW WITH THE SAME ORDER   POTE-071
C           FROM ITY(2), ITY(4), ITY(6) AND ITY(8)                      POTE-072
C                                                                       POTE-073
C                     FOR DIRAC EQUATIONS:                              POTE-074
C     AFTER ITY(1) (=0) FOR EACH LEVEL, 14 FORM FACTORS V(*,I,*) WHICH  POTE-075
C           ARE CENTRAL POTENTIAL FOR I=1,2   SPIN-ORBIT POTENTIAL FOR  POTE-076
C           I=3,4  D=E+M+V-W FOR I=5,6   E-M-V-W FOR I=7,8  D**(1/2) FORPOTE-077
C           I=9,10 D**(-1) FOR I=11,12  AND  - D( TENSOR ) FOR I=13,14  POTE-078
C     AFTER ITX(6) THE INVT SETS OF COMPLEX SCALAR + VECTOR FORM FACTORSPOTE-079
C           FOLLOWED BY THE INSL SETS OF TENSOR FORM FACTORS            POTE-080
C***********************************************************************POTE-081
C                                                                       POTE-082
C FOR THE COMMON  /COUPL/ SEE CALX.                                     POTE-083
C FOR THE COMMON  /DCONS/ SEE CALC.                                     POTE-084
C FOR THE COMMONS /POTE1/ AND /POTE2/ SEE REDM.                         POTE-085
C                                                                       POTE-086
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     POTE-087
C  CHB:       PLANCK CONSTANT /(2*PI) IN MEV*FERMI.                     POTE-088
C  CCZ:       COULOMB ALPHA CONSTANT.                                   POTE-089
C   USED:     CHB,CCZ.                                                  POTE-090
C                                                                       POTE-091
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     POTE-092
C  IQM:       MAXIMUM L-VALUE OF DEFORMATION IN ROTATIONAL MODEL.       POTE-093
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             POTE-094
C   USED:     IQM,NPP.                                                  POTE-095
C                                                                       POTE-096
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE1/:                     POTE-097
C  ITX(16):   STARTING ADDRESS OF DIFFERENT FORM FACTORS.               POTE-098
C             FOR SCHROEDINGER EQUATION, ITX(I)+1 IS THE STARTING       POTE-099
C             ADDRESS OF THE FORM FACTOR READ IN EXTP WITH ITYP=I       POTE-100
C             (POTENTIAL FOR I=1 TO 8, TRANSITION FOR I=9 TO 16).       POTE-101
C             FOR DIRAC EQUATIONS, ITX(1)=0,                            POTE-102
C             ITX(2)+1=ADDRESS OFF FIRST TRANSITION FORM FACTOR,        POTE-103
C             ITX(7)=ADDRESS OF LAST TRANSITION FORM FACTOR,            POTE-104
C             ITX(3)=ADDRESS OF LAST TEMPORARY CENTRAL POTENTIAL,       POTE-105
C             ITX(4)=ITX(7)-24,ITX(5)=ITX(3)-11,ITX(6)=ITX(2)-4.        POTE-106
C             ALL ARE USED FOR SCHROEDINGER, THE FIRST 8 FOR DIRAC.     POTE-107
C  IMAX:      MAXIMUM ANGULAR MOMENTUM.                                 POTE-108
C  INTC:      NUMBER OF FORM FACTORS WITHOUT DEFORMED SPIN-ORBIT        POTE-109
C             INCLUDING CORRECTION TERMS.                               POTE-110
C  INLS:      NUMBER OF SPIN-ORBIT FORM FACTORS NOT TAKING INTO ACCOUNT POTE-111
C             MULTIPLICATION BY 2.                                      POTE-112
C  INVD:      IDEM FOR COULOMB SPIN-ORBIT.                              POTE-113
C  ITXM:      TOTAL NUMBER OF FORM FACTORS.                             POTE-114
C  NFO:       NUMBER OF SETS OF FOLDING PARAMETERS.                     POTE-115
C   USED:     ITX,IMAX,INTC,INLS,INVD,ITXM.                             POTE-116
C                                                                       POTE-117
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     POTE-118
C  ITY(1):    STARTING ADDRESS OF REAL CENTRAL POTENTIAL (IT IS 0).     POTE-119
C  ITY(2):    STARTING ADDRESS OF IMAGINARY CENTRAL POTENTIAL.          POTE-120
C  ITY(3):    STARTING ADDRESS OF REAL SPIN-ORBIT POTENTIAL.            POTE-121
C  ITY(4):    STARTING ADDRESS OF IMAGINARY SPIN-ORBIT POTENTIAL.       POTE-122
C  ITY(5):    STARTING ADDRESS OF REAL CENTRAL TRANSITION.              POTE-123
C  ITY(6):    STARTING ADDRESS OF IMAGINARY CENTRAL TRANSITION.         POTE-124
C  ITY(7):    STARTING ADDRESS OF REAL SPIN-ORBIT TRANSITION.           POTE-125
C  ITY(8):    STARTING ADDRESS OF IMAGINARY SPIN-ORBIT TRANSITION.      POTE-126
C  ITY(9):    STARTING ADDRESS OF COULOMB CENTRAL POTENTIAL.            POTE-127
C  ITY(10):   STARTING ADDRESS OF COULOMB SPIN-ORBIT POTENTIAL.         POTE-128
C  ITY(11):   STARTING ADDRESS OF COULOMB CENTRAL TRANSITION.           POTE-129
C  ITY(12):   STARTING ADDRESS OF COULOMB SPIN-ORBIT TRANSITION.        POTE-130
C        ITY(2)=14*NCOLL AND ITY(5)=0 ONLY ARE USED FOR DIRAC EQUATIONS.POTE-131
C  INVT:      NUMBER OF TRANSITION FORM FACTORS WITHOUT SPIN-ORBIT.     POTE-132
C  INTV:      SAME AS INVT, TAKING INTO ACCOUNT DISPERSION.             POTE-133
C  INSL:      NUMBER OF SPIN-ORBIT FORM TRANSITION FACTORS NOT TAKING   POTE-134
C             INTO ACCOUNT MULTIPLICATION BY 2.                         POTE-135
C  NPX:       NUMBER OF POTENTIALS TAKING INTO ACCOUNT DISPERSION.      POTE-136
C   USED:     ITY,INVT,INTV,INSL,NPX.                                   POTE-137
C                                                                       POTE-138
C***********************************************************************POTE-139
      IMPLICIT REAL*8 (A-H,O-Z)                                         POTE-140
      LOGICAL LO(150)                                                   POTE-141
      DIMENSION BETA(9,*),NBETA(18,*),V(ISM,*),IVQ(3,*),IVY(7,*),IVZ(4,*POTE-142
     1),NP(2,*),ILO(16),Q(*),VAL(57,*),NVAL(*),VCO(2,*),VDO(2,*),WV(22,*POTE-143
     2),WVM(22,*),IPI(11,*),IPIM(11,*),IPP(34,*),TL(*),MCM(*),IPIX(11),PPOTE-144
     3GN(10),XGN(10),W(24),WVX(22)                                      POTE-145
      CHARACTER*4 BB(2)                                                 POTE-146
      CHARACTER*8 AA(3,8)                                               POTE-147
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   POTE-148
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            POTE-149
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM,NFO          POTE-150
      COMMON /POTE2/ ITY(12),INVT,INTV,INSL,NPX                         POTE-151
      COMMON /INOUT/ MR,MW,MS                                           POTE-152
      DATA PGN( 1),PGN( 2) / 1.52753387130726D-01, 1.49172986472604D-01/POTE-153
      DATA PGN( 3),PGN( 4) / 1.42096109318382D-01, 1.31688638449177D-01/POTE-154
      DATA PGN( 5),PGN( 6) / 1.18194531961518D-01, 1.01930119817240D-01/POTE-155
      DATA PGN( 7),PGN( 8) / 8.32767415767047D-02, 6.26720483341091D-02/POTE-156
      DATA PGN( 9),PGN(10) / 4.06014298003869D-02, 1.76140071391521D-02/POTE-157
      DATA XGN( 1),XGN( 2) / 7.65265211334973D-02, 2.27785851141645D-01/POTE-158
      DATA XGN( 3),XGN( 4) / 3.73706088715420D-01, 5.10867001950827D-01/POTE-159
      DATA XGN( 5),XGN( 6) / 6.36053680726515D-01, 7.46331906460151D-01/POTE-160
      DATA XGN( 7),XGN( 8) / 8.39116971822219D-01, 9.12234428251326D-01/POTE-161
      DATA XGN( 9),XGN(10) / 9.63971927277914D-01, 9.93128599185095D-01/POTE-162
      DATA BB /'    ','LAST'/                                           POTE-163
      DATA AA/'      RE','AL VOLUM','E/SCALAR',' IMAGINA','RY VOLUM','E/POTE-164
     1SCALAR','     REA','L SURFAC','E/VECTOR','  IMAGIN','. SURFAC','E/POTE-165
     2VECTOR','  REAL S','PIN-ORBI','T/TENSOR',' IMAG. S','PIN-ORBI','T/POTE-166
     3TENSOR','        ','        ',' COULOMB','      SP','IN-ORBIT',' CPOTE-167
     4OULOMB'/                                                          POTE-168
      DATA ILO /62,62,62,62,101,102,62,103,62,12,62,12,13,14,11,19/     POTE-169
      IDY=0                                                             POTE-170
      ITM=ITXM                                                          POTE-171
      IF (LO(7)) GO TO 3                                                POTE-172
      INVZ=INTC                                                         POTE-173
      INY=1                                                             POTE-174
      IF (LO(100)) INY=3                                                POTE-175
      INVY=INVZ+INY                                                     POTE-176
      N1=(INVY+1)/2+1                                                   POTE-177
      N2=N1+MAX0(IMAX,IQM)+1                                            POTE-178
      ID1=INVY+27                                                       POTE-179
      IDX=10                                                            POTE-180
      IF (LO(3)) IDX=36                                                 POTE-181
      IF (.NOT.LO(1)) IDX=1                                             POTE-182
      IDX=MAX0(IDX*ID1+10*INVY,6*ISM)+N2                                POTE-183
      IF (IDX.GT.IDT) CALL MEMO('POTE',IDT,IDX)                         POTE-184
      CALL ROTP(BETA,NBETA,IPP,IVY,VAL,ID1,ISM,WV,INVZ,INY,INVY         POTE-185
     1,PGN,XGN,LO,V,NP,Q(N1),Q(N2),Q(10*INVY+N2))                       POTE-186
      IF (LO(74)) CALL HORA                                             POTE-187
      IF (.NOT.LO(17)) GO TO 2                                          POTE-188
C  *******  FOLDING MODEL  **********                                   POTE-189
C THE WORKING SPACE IN P IS SHIFTED FROM V WITH THE ORIGINS IN TABLE IT.POTE-193
      NNF=1+ISM*ITM                                                     POTE-194
      IDZ=NNF+4*ITM                                                     POTE-195
      IDX=IDZ+4*(ISM+5)                                                 POTE-196
      IF (INVZ.NE.0) IDX=IDX+2*(ISM+5)*IMAX                             POTE-197
      IDY=MAX0(IDY,IDX)                                                 POTE-198
      IF (IDX.GT.IDT) CALL MEMO('POTE',IDT,IDX)                         POTE-199
      DO 1 J=1,NNF                                                      POTE-200
    1 Q(J)=0.D0                                                         POTE-201
      IK=1                                                              POTE-202
      IF (LO(100)) IK=ITX(4)+24*NPP+1                                   POTE-203
      CALL FOLD(V(1,IK),Q,VAL(34,1 ),IP,ISM,IVY,INVZ,Q(IDZ),PGN,XGN,WV,NPOTE-204
     1P(1,NNF),LO)                                                      POTE-205
      IF (LO(74)) CALL HORA                                             POTE-206
    2 CALL POTC(IPP,IVY,VAL,CCZ,ISM,WV,NPP,ITX,INTC,V,Q(N1),LO)         POTE-207
      GO TO 4                                                           POTE-208
    3 NNF=2*ITM                                                         POTE-209
      IF (NNF.GT.IDT) CALL MEMO('POTE',IDT,NNF)                         POTE-210
      IDZ=IDT-NNF                                                       POTE-211
      CALL STDP(V,IVY,ISM,VAL,NVAL,IDZ,IDX,Q(NNF+1),WV,PGN,XGN,NPP,NP,Q(POTE-212
     1NNF+1),IPP,CCZ,LO)                                                POTE-213
      IDY=MAX0(IDY,IDX+2*NNF)                                           POTE-214
    4 IF (.NOT.LO(99)) GO TO 5                                          POTE-215
      IDX=(16+24*INTC)*ISM                                              POTE-216
      IF (IDX.GT.IDT) CALL MEMO('POTE',IDT,IDX)                         POTE-217
      CALL ROTZ(ISM,WV,INTC,V,Q,CHB,ITX,LO)                             POTE-218
    5 IF (.NOT.LO(62)) GO TO 13                                         POTE-219
      NPQ=8*(NPP+INTC)                                                  POTE-220
      NPT=NPQ                                                           POTE-221
      IF (.NOT.LO(101)) NPT=NPT-NPP                                     POTE-222
      IF (.NOT.LO(102)) NPT=NPT-NPP                                     POTE-223
      IF (.NOT.LO(103)) NPT=NPT-NPP                                     POTE-224
      IF (.NOT.LO(11)) NPT=NPT-INTC                                     POTE-225
      IF (.NOT.LO(12)) NPT=NPT-2*INTC                                   POTE-226
      IF (.NOT.LO(13)) NPT=NPT-INTC                                     POTE-227
      IF (.NOT.LO(14)) NPT=NPT-INTC                                     POTE-228
      IF (.NOT.LO(19)) NPT=NPT-INTC                                     POTE-229
      WRITE (62,1000) WV(1,1),WV(13,1),WV(2,1),IPI(4,1),NPT,NPQ         POTE-230
      IST=2*(ISM/2)                                                     POTE-231
      IDX=IST                                                           POTE-232
      IDY=MAX0(IDY,IDX)                                                 POTE-233
      IF (IDX.GT.IDT) CALL MEMO('POTE',IDT,IDX)                         POTE-234
C PUNCH THE FORM FACTORS.                                               POTE-235
      DO 6 I=1,IST                                                      POTE-236
    6 Q(I)=I*WV(8,1)                                                    POTE-237
      IR=0                                                              POTE-238
      DO 9 IP=1,NPP                                                     POTE-239
      DO 8 IJ=1,8                                                       POTE-240
      IR=IR+1                                                           POTE-241
      IS=1                                                              POTE-242
      IL=ILO(IJ)                                                        POTE-243
      IF (.NOT.LO(IL)) GO TO 8                                          POTE-244
      JI=IP+ITX(IJ)                                                     POTE-245
      IF (LO(100)) JI=ITX(7)+IJ+24*(IP-1)                               POTE-246
      WRITE (MW,1001) (AA(J,IJ),J=1,3),IP,IR                            POTE-247
      WRITE (62,1001) (AA(J,IJ),J=1,3),IP,IR                            POTE-248
      DO 7 I=1,IST,2                                                    POTE-249
      IF (I.EQ.IST-1) IS=2                                              POTE-250
      WRITE (MW,1002) Q(I),V(I,JI),Q(I+1),V(I+1,JI),BB(IS),IR           POTE-251
    7 WRITE (62,1003) Q(I),V(I,JI),Q(I+1),V(I+1,JI),BB(IS),IR           POTE-252
    8 CONTINUE                                                          POTE-253
    9 CONTINUE                                                          POTE-254
      IF (INTC.EQ.0) GO TO 13                                           POTE-255
      DO 12 IQ=1,INTC                                                   POTE-256
      DO 11 IJ=9,16                                                     POTE-257
      IR=IR+1                                                           POTE-258
      IS=1                                                              POTE-259
      IL=ILO(IJ)                                                        POTE-260
      IF (.NOT.LO(IL)) GO TO 11                                         POTE-261
      IP=IQ                                                             POTE-262
      IF ((IJ.EQ.13).OR.(IJ.EQ.14)) IP=IVY(3,IQ)+INLS                   POTE-263
      IF (IJ.GE.15) IP=IVY(IJ-11,IQ)                                    POTE-264
      IF (IJ.EQ.16) IP=IP+INVD                                          POTE-265
      IF (IP.LE.0) GO TO 11                                             POTE-266
      JI=IP+ITX(IJ)                                                     POTE-267
      IF (LO(100)) JI=ITX(7)+24*NPP+11*IQ+IJ-19                         POTE-268
      WRITE (MW,1004) (AA(J,IJ-8),J=1,3),IQ,IR                          POTE-269
      WRITE (62,1004) (AA(J,IJ-8),J=1,3),IQ,IR                          POTE-270
      DO 10 I=1,IST,2                                                   POTE-271
      IF (I.EQ.IST-1) IS=2                                              POTE-272
      WRITE (MW,1002) Q(I),V(I,JI),Q(I+1),V(I+1,JI),BB(IS),IR           POTE-273
   10 WRITE (62,1003) Q(I),V(I,JI),Q(I+1),V(I+1,JI),BB(IS),IR           POTE-274
   11 CONTINUE                                                          POTE-275
   12 CONTINUE                                                          POTE-276
   13 CALL POTV(ISM,IPP,WV,INTC,V,NPP,ITX,LO)                           POTE-277
      IF (INTC.EQ.INVT) GO TO 25                                        POTE-278
C ADDITION OF CORRECTION TERMS OF FORM FACTORS.                         POTE-279
      DO 24 K=1,INVT                                                    POTE-280
      IF (IVY(6,K).LE.0) GO TO 24                                       POTE-281
      K1=IVY(6,K)                                                       POTE-282
      L=IVY(7,K)+2                                                      POTE-283
      DO 23 N=1,8                                                       POTE-284
      IL=ILO(N+8)                                                       POTE-285
      IF ((IL.NE.62).AND.(.NOT.LO(IL))) GO TO 23                        POTE-286
      L1=L                                                              POTE-287
      M=0                                                               POTE-288
      IF (LO(100)) GO TO 16                                             POTE-289
      IF (N.GT.6) GO TO 15                                              POTE-290
      IF (N.GT.4) GO TO 14                                              POTE-291
      K2=ITX(N+8)+K                                                     POTE-292
      K3=ITX(N+8)+K1                                                    POTE-293
      GO TO 18                                                          POTE-294
   14 IF (IVY(3,K).EQ.0) GO TO 23                                       POTE-295
      K2=ITX(N+8)+IVY(3,K)+INLS                                         POTE-296
      K3=ITX(N+8)+IVY(3,K1)+INLS                                        POTE-297
      L1=L1+2                                                           POTE-298
      M=-INLS                                                           POTE-299
      GO TO 18                                                          POTE-300
   15 IF (IVY(N-3,K).EQ.0) GO TO 23                                     POTE-301
      K2=ITX(N+8)+IVY(N-3,K)                                            POTE-302
      K3=ITX(N+8)+IVY(N-3,K1)                                           POTE-303
      IF (N.EQ.8) M=INVD                                                POTE-304
      GO TO 17                                                          POTE-305
   16 IF ((N.GT.4).AND.(N.NE.7)) M=MIN0(11-N,4)                         POTE-306
      K2=ITX(5)+11*K+N                                                  POTE-307
      K3=K2+11*(K1-K)                                                   POTE-308
      IF (N.LE.6) GO TO 18                                              POTE-309
   17 CI=V(ISM,K3)                                                      POTE-310
      CR=V(ISM,K2)                                                      POTE-311
      GO TO 20                                                          POTE-312
   18 DD=0.D0                                                           POTE-313
      CI=0.D0                                                           POTE-314
      CR=0.D0                                                           POTE-315
      DO 19 IS=1,ISM                                                    POTE-316
      DD=DD+WV(8,1)                                                     POTE-317
      CI=CI+V(IS,K3)*DD**L1                                             POTE-318
   19 CR=CR+V(IS,K2)*DD**L1                                             POTE-319
   20 IF ((CI.EQ.0.D0).OR.(CR.EQ.0.D0)) GO TO 23                        POTE-320
      CR=CR/CI                                                          POTE-321
      IF (.NOT.LO(117)) WRITE (MW,1005) K,N,CR                          POTE-322
   21 DO 22 IS=1,ISM                                                    POTE-323
   22 V(IS,K2)=V(IS,K2)-CR*V(IS,K3)                                     POTE-324
      IF (M.EQ.0) GO TO 23                                              POTE-325
      K2=K2+M                                                           POTE-326
      K3=K3+M                                                           POTE-327
      M=0                                                               POTE-328
      GO TO 21                                                          POTE-329
   23 CONTINUE                                                          POTE-330
   24 CONTINUE                                                          POTE-331
   25 RM=ISM*WV(8,1)                                                    POTE-332
      IF (LO(74)) CALL HORA                                             POTE-333
C STORAGE OF OPTICAL POTENTIALS.                                        POTE-334
      DO 43 KJ=1,NCOLT                                                  POTE-335
      JJ=MOD(KJ+NCOLL-1,NCOLT)+1                                        POTE-336
      IF (JJ.GT.NCOLD) GO TO 28                                         POTE-337
      DO 26 I=1,11                                                      POTE-338
   26 IPIX(I)=IPI(I,JJ)                                                 POTE-339
      DO 27 I=1,22                                                      POTE-340
   27 WVX(I)=WV(I,JJ)                                                   POTE-341
      GO TO 31                                                          POTE-342
   28 DO 29 I=1,11                                                      POTE-343
   29 IPIX(I)=IPIM(I,JJ-NCOLD)                                          POTE-344
      DO 30 I=1,22                                                      POTE-345
   30 WVX(I)=WVM(I,JJ-NCOLD)                                            POTE-346
   31 XP=CHB/(2.D0*WVX(6))                                              POTE-347
      XQ=XP**2                                                          POTE-348
      IF (LO(100)) GO TO 37                                             POTE-349
C POTENTIALS FOR SCHROEDINGER EQUATION.                                 POTE-350
      IF (JJ.GT.NCOLL) GO TO 32                                         POTE-351
      I1=IPIX(11)                                                       POTE-352
      I2=I1+ITY(2)                                                      POTE-353
      I3=I1+ITY(3)                                                      POTE-354
      I4=I1+ITY(4)                                                      POTE-355
      I5=I1+ITY(9)                                                      POTE-356
      I6=I1+ITY(10)                                                     POTE-357
      IF (LO(133)) GO TO 33                                             POTE-358
      GO TO 35                                                          POTE-359
   32 I1=1                                                              POTE-360
      I2=2                                                              POTE-361
      I3=3                                                              POTE-362
      I4=4                                                              POTE-363
      I5=5                                                              POTE-364
      I6=6                                                              POTE-365
      IF (LO(133)) GO TO 33                                             POTE-366
      I5=1                                                              POTE-367
      I6=3                                                              POTE-368
      GO TO 35                                                          POTE-369
   33 DO 34 IS=1,ISM                                                    POTE-370
      IF (LO(103)) V(IS,I6)=0.D0                                        POTE-371
   34 V(IS,I5)=0.D0                                                     POTE-372
   35 J=IPIX(5)                                                         POTE-373
      DO 36 IS=1,ISM                                                    POTE-374
      V(IS,I1)=V(IS,J+ITX(1))*(1.D0+WVX(16))+V(IS,J+ITX(3))*(1.D0+WVX(19POTE-375
     1))+WVX(15)*V(IS,J+ITX(2))+WVX(18)*V(IS,J+ITX(4))                  POTE-376
      V(IS,I2)=V(IS,J+ITX(2))*(1.D0+WVX(14))+V(IS,J+ITX(4))*(1.D0+WVX(17POTE-377
     1))                                                                POTE-378
      IF (LO(129)) V(IS,I3)=V(IS,J+ITX(5))*(1.D0+WVX(22))+WVX(21)*V(IS,JPOTE-379
     1+ITX(6))                                                          POTE-380
      IF (LO(130)) V(IS,I4)=V(IS,J+ITX(6))*(1.D0+WVX(20))               POTE-381
      IF (LO(103)) V(IS,I6)=V(IS,I6)+V(IS,J+ITX(8))*XQ                  POTE-382
   36 V(IS,I5)=V(IS,I5)-V(IS,J+ITX(7))                                  POTE-383
      IF (LO(103)) VCO(2,I1)=V(ISM,J+ITX(8))*RM**3/WVX(6)               POTE-384
      IF (.NOT.LO(99)) GO TO 42                                         POTE-385
      VCO(1,I1)=RM*V(ISM,J+ITX(7))*WVX(6)/(WVX(7)*CHB)                  POTE-386
      VCO(2,I1)=VCO(2,I1)+VCO(1,I1)*CHB/(WVX(6)+WVX(7))                 POTE-387
      GO TO 42                                                          POTE-388
C POTENTIALS FOR DIRAC EQUATION:                                        POTE-389
C AT THIS POINT:   AFTER V(1,ITX(7)),                                   POTE-390
C V(*,N,1) SCALAR POTENTIAL V FOR N=1,2 VECTOR POTENTIAL W FOR N=3,4    POTE-391
C          TENSOR POTENTIAL T FOR N=5,6 COULOMB POTENTIALS FOR N=7,8    POTE-392
C          THEIR FIRST DERIVATIVES FOR N=9,16                           POTE-393
C          THEIR SECOND DERIVATIVES FOR N=17,24                         POTE-394
C THE FIRST DERIVATIVES OF NON-COULOMB POTENTIALS HAVE A REVERSED SIGN. POTE-395
   37 M=ITX(4)+24*IPIX(5)                                               POTE-396
      J=JJ                                                              POTE-397
      IF (J.GT.NCOLL) J=1                                               POTE-398
      N=14*J-14                                                         POTE-399
      RR=0.D0                                                           POTE-400
      DO 41 IS=1,ISM                                                    POTE-401
      RR=RR+WVX(8)                                                      POTE-402
      DO 38 K=1,24                                                      POTE-403
   38 W(K)=V(IS,K+M)                                                    POTE-404
      IF (.NOT.LO(10)) GO TO 40                                         POTE-405
      DO 39 K=1,24,8                                                    POTE-406
      W(K)=(1.D0+WVX(16))*W(K)+WVX(15)*W(K+1)                           POTE-407
      W(K+1)=W(K+1)+WVX(14)*W(K+1)                                      POTE-408
      W(K+2)=(1.D0+WVX(19))*W(K+2)+WVX(18)*W(K+3)                       POTE-409
      W(K+3)=W(K+3)+WVX(17)*W(K+3)                                      POTE-410
      W(K+4)=(1.D0+WVX(22))*W(K+4)+WVX(21)*W(K+5)                       POTE-411
   39 W(K+5)=(1.D0+WVX(20))*W(K+5)                                      POTE-412
   40 W(3)=W(3)+W(7)                                                    POTE-413
      W(11)=W(11)+W(15)                                                 POTE-414
      W(19)=W(19)+W(23)                                                 POTE-415
      W(13)=(W(13)+W(16))/WVX(6)                                        POTE-416
      W(21)=(W(21)+W(24))/WVX(6)                                        POTE-417
      W(14)=W(14)/WVX(6)                                                POTE-418
      W(22)=W(22)/WVX(6)                                                POTE-419
      W(15)=WVX(6)+WVX(7)+W(1)-W(3)                                     POTE-420
      W(16)=W(2)-W(4)                                                   POTE-421
      V(IS,N+7)=(WVX(7)-WVX(6)-W(1)-W(3))/CHB                           POTE-422
      V(IS,N+8)=-(W(2)+W(4))/CHB                                        POTE-423
      DD=W(15)**2+W(16)**2                                              POTE-424
      W(5)=W(15)/DD                                                     POTE-425
      W(6)=-W(16)/DD                                                    POTE-426
      DD=DSQRT(DSQRT(DD)/(WVX(6)+WVX(7)))                               POTE-427
      AR=.5D0*DATAN2(W(16),W(15))                                       POTE-428
      V(IS,N+9)=DD*DCOS(AR)                                             POTE-429
      V(IS,N+10)=DD*DSIN(AR)                                            POTE-430
      AR=W(11)-W(9)                                                     POTE-431
      AI=W(12)-W(10)                                                    POTE-432
      BR=W(17)-W(19)                                                    POTE-433
      BI=W(18)-W(20)                                                    POTE-434
      CR=AR*W(5)-AI*W(6)+W(13)                                          POTE-435
      CI=AR*W(6)+AI*W(5)+W(14)                                          POTE-436
      ER=BR*W(5)-BI*W(6)+W(13)*(CR+CR-W(13))-W(14)*(CI+CI-W(14))-W(21)+2POTE-437
     1.D0*CR/RR                                                         POTE-438
      EI=BR*W(6)+BI*W(5)+W(13)*(CI+CI-W(14))+W(14)*(CR+CR-W(13))-W(22)+2POTE-439
     1.D0*CI/RR                                                         POTE-440
      V(IS,N+1)=-W(1)-W(3)*WVX(7)/WVX(6)-(W(1)*W(1)-W(2)*W(2)-W(3)*W(3)+POTE-441
     1W(4)*W(4))/(2.D0*WVX(6))-(.75D0*(CR**2-CI**2)-.5D0*ER)*XP*CHB     POTE-442
      V(IS,N+2)=-W(2)-W(4)*WVX(7)/WVX(6)-(W(1)*W(2)-W(3)*W(4))/WVX(6)-(1POTE-443
     1.5D0*CR*CI-.5D0*EI)*XP*CHB                                        POTE-444
      V(IS,N+3)=.5D0*CR*XP*CHB/RR                                       POTE-445
      V(IS,N+4)=.5D0*CI*XP*CHB/RR                                       POTE-446
      V(IS,N+5)=W(15)/CHB                                               POTE-447
      V(IS,N+6)=W(16)/CHB                                               POTE-448
      V(IS,N+11)=W(5)*CHB                                               POTE-449
      V(IS,N+12)=W(6)*CHB                                               POTE-450
      V(IS,N+13)=W(13)/CHB                                              POTE-451
   41 V(IS,N+14)=W(14)/CHB                                              POTE-452
      VCO(1,J)=W(7)*RR/CHB                                              POTE-453
      VCO(2,J)=RR*(W(7)/(WVX(6)+WVX(7))+W(8)/WVX(6))                    POTE-454
   42 IF (JJ.LE.NCOLL) GO TO 43                                         POTE-455
      NX1=2*ISM+5                                                       POTE-456
      NX2=NX1+10*(IPIX(10)+2)                                           POTE-457
      HH=WV(8,1)                                                        POTE-458
      IF (NX2.GT.IDT) CALL MEMO('POTE',IDT,NX2)                         POTE-459
      IF ((.NOT.LO(93)).OR.(DABS(WV(2,1)-WVX(2)).GT.0.5D0)) HH=HH*WV(2,1POTE-460
     1)/WVX(2)                                                          POTE-461
      CALL TLNC(HH,IPIX,WVX,TL(IPIX(8)+1),ISM,Q,Q(NX1),IPIX(10)+2,NP(1,NPOTE-462
     1X2),Q(NX2),IDT-NX2,V,VCO(1,I1),LO)                                POTE-463
   43 CONTINUE                                                          POTE-464
      IF (INTV.EQ.0) GO TO 67                                           POTE-465
C STORAGE OF TRANSITION FORM FACTORS.                                   POTE-466
      DO 66 J=1,INTV                                                    POTE-467
      IJ=IVZ(1,J)                                                       POTE-468
      IF (.NOT.LO(100)) GO TO 44                                        POTE-469
      IK=ITX(6)+4*J                                                     POTE-470
      KI=ITX(5)+11*IJ                                                   POTE-471
   44 L=IVY(4,IJ)                                                       POTE-472
      IF (L.EQ.0) GO TO 49                                              POTE-473
      K=IVY(2,IJ)                                                       POTE-474
      IF (IVQ(2,K).GE.0) GO TO 49                                       POTE-475
C MAGNETIC COULOMB TRANSITION.                                          POTE-476
      DD=2.D0*(WV(8,1)/WV(10,1))**2/CHB                                 POTE-477
      IF (LO(100)) GO TO 46                                             POTE-478
      DO 45 IS=1,ISM                                                    POTE-479
      IF (LO(12)) V(IS,J+ITY(6))=0.D0                                   POTE-480
   45 V(IS,J+ITY(11))=-V(IS,L+ITX(15))*DD                               POTE-481
      IF (IVY(7,IJ).LE.MCM(1)) VDO(1,J)=V(ISM,L+ITX(15))*DD*RM**(IVY(7,IPOTE-482
     1J)+1)                                                             POTE-483
      GO TO 66                                                          POTE-484
   46 DO 48 IS=1,ISM                                                    POTE-485
      DO 47 M=1,4                                                       POTE-486
   47 V(IS,IK+M)=0.D0                                                   POTE-487
   48 V(IS,IK+3)=V(IS,KI+7)*DD                                          POTE-488
      IF (IVY(7,IJ).LE.MCM(1)) VDO(1,J)=V(ISM,KI+7)*DD*RM**(IVY(7,IJ)+1)POTE-489
      GO TO 66                                                          POTE-490
C CENTRAL TRANSITION FORM-FACTOR.                                       POTE-491
   49 I1=IVZ(2,J)/(NCOLL+1)                                             POTE-492
      I2=MOD(IVZ(2,J),NCOLL+1)                                          POTE-493
      DO 50 K=1,9                                                       POTE-494
      WVX(K)=WV(K+13,1)                                                 POTE-495
      IF (I2.NE.0) WVX(K)=.5D0*(WV(K+13,I1)+WV(K+13,I2))                POTE-496
      IF (.NOT.LO(10)) WVX(K)=0.D0                                      POTE-497
   50 CONTINUE                                                          POTE-498
      IF (LO(100)) GO TO 53                                             POTE-499
      DO 51 IS=1,ISM                                                    POTE-500
      IF (LO(12)) V(IS,J+ITY(6))=V(IS,IJ+ITX(10))+V(IS,IJ+ITX(12))+WVX(1POTE-501
     1)*V(IS,IJ+ITX(10))+WVX(4)*V(IS,IJ+ITX(12))                        POTE-502
   51 V(IS,J+ITY(5))=V(IS,IJ+ITX(9))*(1.D0+WVX(3))+V(IS,IJ+ITX(11))*(1.DPOTE-503
     10+WVX(6))+WVX(2)*V(IS,IJ+ITX(10))+WVX(5)*V(IS,IJ+ITX(12))         POTE-504
      IF (L.EQ.0) GO TO 58                                              POTE-505
C COULOMB TRANSITION FORM FACTOR FOR SCHROEDINGER EQUATION.             POTE-506
      DO 52 IS=1,ISM                                                    POTE-507
   52 V(IS,J+ITY(11))=V(IS,J+ITY(11))-V(IS,L+ITX(15))                   POTE-508
      IF (IVY(7,IJ).LE.MCM(1)) VDO(1,J)=V(ISM,L+ITX(15))*RM**(IVY(7,IJ)+POTE-509
     11)                                                                POTE-510
      GO TO 58                                                          POTE-511
   53 DO 54 IS=1,ISM                                                    POTE-512
      V(IS,IK+1)=V(IS,KI+1)+WVX(2)*V(IS,KI+2)                           POTE-513
      V(IS,IK+2)=V(IS,KI+2)+WVX(1)*V(IS,KI+2)                           POTE-514
      V(IS,IK+3)=V(IS,KI+3)+WVX(4)*V(IS,KI+4)                           POTE-515
   54 V(IS,IK+4)=V(IS,KI+4)+WVX(3)*V(IS,KI+4)                           POTE-516
      IF (L.EQ.0) GO TO 56                                              POTE-517
C COULOMB TRANSITION FORM FACTOR FOR DIRAC EQUATION.                    POTE-518
      DO 55 IS=1,ISM                                                    POTE-519
   55 V(IS,IK+3)=V(IS,IK+3)+V(IS,KI+7)                                  POTE-520
      IF (IVY(7,IJ).LE.MCM(1)) VDO(1,J)=V(ISM,KI+7)*RR**(IVY(7,IJ)+1)   POTE-521
   56 DO 57 IS=1,ISM                                                    POTE-522
      CR=V(IS,IK+1)                                                     POTE-523
      CI=V(IS,IK+2)                                                     POTE-524
      V(IS,IK+1)=XP*(V(IS,IK+3)+CR)                                     POTE-525
      V(IS,IK+2)=XP*(V(IS,IK+4)+CI)                                     POTE-526
      V(IS,IK+3)=XP*(V(IS,IK+3)-CR)                                     POTE-527
   57 V(IS,IK+4)=XP*(V(IS,IK+4)-CI)                                     POTE-528
   58 IF (J.GT.INVT) GO TO 66                                           POTE-529
C SPIN-ORBIT TRANSITION FORM FACTOR FOR SCHROEDINGER EQUATION.          POTE-530
      L=IVY(3,IJ)                                                       POTE-531
      IF (L.EQ.0) GO TO 66                                              POTE-532
      IF (LO(100)) GO TO 63                                             POTE-533
      DO 59 IS=1,ISM                                                    POTE-534
      V(IS,L+ITY(7))=V(IS,L+ITX(13))*(1.D0+WVX(9))+V(IS,L+ITX(14))*WVX(8POTE-535
     1)                                                                 POTE-536
   59 V(IS,L+ITY(7)+INSL)=V(IS,L+INLS+ITX(13))*(1.D0+WVX(9))+V(IS,L+ITX(POTE-537
     114))*WVX(8)                                                       POTE-538
      IF (.NOT.LO(14)) GO TO 61                                         POTE-539
      DO 60 IS=1,ISM                                                    POTE-540
      V(IS,L+ITY(8))=V(IS,L+ITX(14))*(1.D0+WVX(7))                      POTE-541
   60 V(IS,L+ITY(8)+INSL)=V(IS,L+INLS+ITX(14))*(1.D0+WVX(7))            POTE-542
   61 K=IVY(5,IJ)                                                       POTE-543
      IF (K.EQ.0) GO TO 66                                              POTE-544
      DO 62 IS=1,ISM                                                    POTE-545
      V(IS,L+ITY(12))=V(IS,L+ITY(12))+V(IS,K+ITX(16))*XQ                POTE-546
   62 V(IS,L+ITY(12)+INSL)=V(IS,L+ITY(12)+INSL)+V(IS,K+INVD+ITX(16))*XQ POTE-547
      IF (IVY(7,IJ).LE.MCM(2)) VDO(2,L)=-V(ISM,K+INVD+ITX(16))*RM**(IVY(POTE-548
     17,IJ)+3)*XQ                                                       POTE-549
      GO TO 66                                                          POTE-550
C SPIN-ORBIT TRANSITION FORM FACTOR FOR DIRAC EQUATION.                 POTE-551
   63 IL=ITX(6)+4*(L+INTV)                                              POTE-552
      RR=0.D0                                                           POTE-553
      DO 64 IS=1,ISM                                                    POTE-554
      RR=RR+WV(8,1)                                                     POTE-555
      V(IS,IL+1)=-XQ*V(IS,KI+9)*(1.D0+WVX(6))                           POTE-556
      V(IS,IL+2)=-XQ*V(IS,KI+10)*(1.D0+WVX(5))                          POTE-557
      V(IS,IL+3)=XQ*V(IS,KI+5)/RR*(1.D0+WVX(6))                         POTE-558
   64 V(IS,IL+4)=XQ*V(IS,KI+6)/RR*(1.D0+WVX(5))                         POTE-559
      IF (IVY(5,IJ).EQ.0) GO TO 66                                      POTE-560
      RR=0.D0                                                           POTE-561
      DO 65 IS=1,ISM                                                    POTE-562
      RR=RR+WV(8,1)                                                     POTE-563
      V(IS,IL+1)=V(IS,IL+1)-XQ*V(IS,KI+11)                              POTE-564
   65 V(IS,IL+3)=V(IS,IL+3)+XQ*V(IS,KI+8)/RR                            POTE-565
      IF (IVY(7,IJ).LE.MCM(2)) VDO(2,L)=XP*V(ISM,KI+8)*RR**(IVY(7,IJ)+1 POTE-566
     1)                                                                 POTE-567
   66 CONTINUE                                                          POTE-568
C OUTPUT OF POTENTIALS.                                                 POTE-569
   67 IF (.NOT.LO(51)) GO TO 76                                         POTE-570
      IF (LO(100)) GO TO 73                                             POTE-571
      DO 68 J=1,NPX                                                     POTE-572
      WRITE (MW,1006) J                                                 POTE-573
      WRITE (MW,1007) (I,V(I,J+ITY(1)),V(I,J+ITY(2)),I=1,ISM)           POTE-574
      IF (LO(133)) WRITE (MW,1008) (I,V(I,J+ITY(9)),I=1,ISM)            POTE-575
      IF (LO(129)) WRITE (MW,1009) (I,V(I,J+ITY(3)),I=1,ISM)            POTE-576
      IF (LO(130)) WRITE (MW,1010) (I,V(I,J+ITY(4)),I=1,ISM)            POTE-577
      IF (LO(133).AND.LO(103)) WRITE (MW,1011) (I,V(I,J+ITY(10)),I=1,ISMPOTE-578
     1)                                                                 POTE-579
   68 CONTINUE                                                          POTE-580
      IF (ITY(2).EQ.ITY(5)) GO TO 71                                    POTE-581
      NVX=ITY(2)-ITY(5)                                                 POTE-582
      WRITE (MW,1012)                                                   POTE-583
      NVB=MIN0(NVX,6)                                                   POTE-584
      DO 69 I=1,ISM                                                     POTE-585
      WRITE (MW,1013) I,(J,V(I,J+ITY(5)),J=1,NVB)                       POTE-586
      IF (NVB.NE.NVX) WRITE (MW,1014) (J,V(I,J+ITY(5)),J=7,NVX)         POTE-587
   69 CONTINUE                                                          POTE-588
      ITMX=ITX(1)                                                       POTE-589
      IF (LO(133)) ITMX=ITY(9)                                          POTE-590
      IF (ITMX.EQ.ITY(6)) GO TO 71                                      POTE-591
      MVX=ITMX-ITY(6)                                                   POTE-592
      WRITE (MW,1015)                                                   POTE-593
      NVB=MIN0(MVX,6)                                                   POTE-594
      DO 70 I=1,ISM                                                     POTE-595
      WRITE (MW,1013) I,(J,V(I,J+ITY(6)),J=1,NVB)                       POTE-596
      IF (NVB.NE.MVX) WRITE (MW,1014) (J,V(I,J+ITY(6)),J=7,MVX)         POTE-597
   70 CONTINUE                                                          POTE-598
   71 IF (.NOT.LO(133)) GO TO 76                                        POTE-599
      IF (ITX(1).EQ.ITY(11)) GO TO 76                                   POTE-600
      MVX=ITX(1)-ITY(11)                                                POTE-601
      WRITE (MW,1016)                                                   POTE-602
      NVB=MIN0(MVX,6)                                                   POTE-603
      DO 72 I=1,ISM                                                     POTE-604
      WRITE (MW,1013) I,(J,V(I,J+ITY(11)),J=1,NVB)                      POTE-605
      IF (NVB.NE.MVX) WRITE (MW,1014) (J,V(I,J+ITY(11)),J=7,MVX)        POTE-606
   72 CONTINUE                                                          POTE-607
      GO TO 76                                                          POTE-608
   73 N=0                                                               POTE-609
      DO 74 L=1,NCOLL                                                   POTE-610
      WRITE (MW,1017) L                                                 POTE-611
      WRITE (MW,1018) (I,(V(I,N+J),J=1,6),I=1,ISM)                      POTE-612
      WRITE (MW,1019) L                                                 POTE-613
      WRITE (MW,1018) (I,(V(I,N+J),J=7,12),I=1,ISM)                     POTE-614
      IF (LO(101).OR.LO(102).OR.LO(103)) WRITE (MW,1020) L,(I,(V(I,N+J),POTE-615
     1J=13,14),I=1,ISM)                                                 POTE-616
   74 N=N+14                                                            POTE-617
      L=INTV+INSL                                                       POTE-618
      IF (L.EQ.0) GO TO 76                                              POTE-619
      N=ITX(2)                                                          POTE-620
      DO 75 K=1,L                                                       POTE-621
      IF (K.LE.INTV) WRITE (MW,1021) K                                  POTE-622
      IF (K.GT.INTV) WRITE (MW,1022) K                                  POTE-623
      WRITE (MW,1023) (I,(V(I,N+J),J=1,4),I=1,ISM)                      POTE-624
   75 N=N+4                                                             POTE-625
   76 IDT=IDY                                                           POTE-626
      RETURN                                                            POTE-627
 1000 FORMAT ('<POTENTI.>',F10.2,1P,D20.8,0P,F10.2,2I5,'  /',I5)        POTE-628
 1001 FORMAT (2X,3A8,' POTENTIAL ***',I2,' ***',5X,I5)                  POTE-629
 1002 FORMAT (2X,F10.5,1P,D20.6,0P,F10.5,1P,D20.6,A4,I6)                POTE-630
 1003 FORMAT (F10.5,1P,D20.6,0P,F10.5,1P,D20.6,A4,I6)                   POTE-631
 1004 FORMAT (2X,3A8,' TRANSITION POTENTIAL ***',I2,' ***',5X,I5)       POTE-632
 1005 FORMAT (' FORM FACTOR',I4,'  POTENTIAL',I3,'  RATIO OF CORRECTING POTE-633
     1DEFORMATION',1P,D15.6)                                            POTE-634
 1006 FORMAT (//' POTENTIAL ****',I2,' ****')                           POTE-635
 1007 FORMAT (//' CENTRAL POTENTIAL:'//(3(5X,I5,1P,2D14.5,' I')))       POTE-636
 1008 FORMAT (//' COULOMB POTENTIAL:'//(6(2X,I4,1P,D14.5)))             POTE-637
 1009 FORMAT (//' REAL SPIN-ORBIT POTENTIAL:'//(6(2X,I4,1P,D14.5)))     POTE-638
 1010 FORMAT (//' IMAGINARY SPIN-ORBIT POTENTIAL:'//(6(2X,I4,1P,D14.5)))POTE-639
 1011 FORMAT (//' COULOMB SPIN-ORBIT POTENTIAL:'//(6(2X,I4,1P,D14.5)))  POTE-640
 1012 FORMAT (//' REAL MULTIPOLES:'/)                                   POTE-641
 1013 FORMAT (4X,I4,6(I4,1P,D14.5))                                     POTE-642
 1014 FORMAT ((8X,6(I4,1P,D14.5)))                                      POTE-643
 1015 FORMAT (//' IMAGINARY MULTIPOLES:'/)                              POTE-644
 1016 FORMAT (//' COULOMB MULTIPOLES:'/)                                POTE-645
 1017 FORMAT (//' POTENTIALS OF SCHROEDINGER''S EQUATION FOR CHANNEL',I3POTE-646
     1/15X,'CENTRAL',27X,'SPIN-ORBIT',28X,'D(R)')                       POTE-647
 1018 FORMAT (2X,I3,1P,2D14.7,' I',5X,2D14.7,' I',5X,2D14.7,' I')       POTE-648
 1019 FORMAT (/17X,'E(R)',28X,'SQRT(D(R))',25X,'D(R)**(-1)',3X,'FOR CHANPOTE-649
     1NEL',I3)                                                          POTE-650
 1020 FORMAT (/45X,'TENSOR POTENTIAL',36X,'FOR CHANNEL',I3/(3(2X,I3,1P,2POTE-651
     1D14.7,' I')))                                                     POTE-652
 1021 FORMAT (//' SCALAR AND VECTOR MULTIPOLES',I6/)                    POTE-653
 1022 FORMAT (//' TENSOR MULTIPOLES',I6/)                               POTE-654
 1023 FORMAT (5X,I5,1P,2D26.7,' I',10X,2D16.7,' I')                     POTE-655
      END                                                               POTE-656
C 11/11/12                                                      ECIS12  ROTP-000
      SUBROUTINE ROTP(BETA,NBETA,IPP,IVY,VAL,ID1,ISM,WV,INTV,INY,IQ1,PGNROTP-001
     1,XGN,LO,V,IV,PP,B,P)                                              ROTP-002
C INPUT:     BETA:    VIBRATIONAL DEFORMATIONS. FROM BETA(1,NBT1+1),    ROTP-003
C                     STATIC DEFORMATIONS (ROTATIONAL MODEL).           ROTP-004
C            NBETA:   QUANTUM NUMBERS OF DEFORMATIONS (IN EQUIVALENCE   ROTP-005
C                     BY CALL WITH BETA).                               ROTP-006
C            IPP:     CROSS-REFERENCE TO POTENTIALS IN IPI(1,*).        ROTP-007
C            IVY:     DESCRIPTION OF FORM FACTORS                       ROTP-008
C                     (SEE THIRD PART OF IQ IN REDM).                   ROTP-009
C            VAL:     OPTICAL PARAMETERS..                              ROTP-010
C            ID1:     FIRST DIMENSION OF THE WORKING SPACE P.           ROTP-011
C            ISM:     NUMBER OF STEPS FOR INTEGRATION.                  ROTP-012
C            WV:      INFORMATIONS FOR STEP SIZE IN WV(8).              ROTP-013
C            IQ1:     NUMBER OF TRANSITION FORM FACTORS.                ROTP-014
C            INY:     1 + NUMBER OF DERIVATIVES OF CENTRAL              ROTP-015
C                     POTENTIALS ( SCHROEDINGER: 1, DIRAC: 2)           ROTP-016
C            PGN,XGN: WEIGHTS, ABSCISSAE OF LEGENDRE INTEGRAL.          ROTP-017
C            LO(I):   LOGICAL CONTROLS:                                 ROTP-018
C               LO(1)  =.TRUE. ROTATIONAL MODEL-(.F.:VIBRATIONAL MODEL).ROTP-019
C               LO(3)  =.TRUE. ANHARMONIC VIBRATIONAL OR ASYMMETRIC     ROTP-020
C                              ROTATIONAL MODEL.                        ROTP-021
C               LO(6)  =.TRUE. USE DEFORMATION LENGTHS.                 ROTP-022
C               LO(9)  =.TRUE. SYMMETRISED WOODS-SAXON FORM FACTORS WHENROTP-023
C                              THE RADIUS IS NEGATIVE.                  ROTP-024
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              ROTP-025
C               LO(12) =.TRUE. DEFORMED IMAGINARY CENTRAL POTENTIAL.    ROTP-026
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      ROTP-027
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. ROTP-028
C               LO(17) =.TRUE. FOLDING MODEL.                           ROTP-029
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   ROTP-030
C               LO(100)=.TRUE. FOR DIRAC EQUATION.S.                    ROTP-031
C               LO(101)=.TRUE. THERE IS A REAL SPIN-ORBIT POTENTIAL.    ROTP-032
C               LO(102)=.TRUE. THERE IS AN IMAGINARY SPIN-ORBIT         ROTP-033
C                              POTENTIAL.                               ROTP-034
C               LO(103)=.TRUE. THERE IS A COULOMB SPIN-ORBIT POTENTIAL. ROTP-035
C               LO(109)=.TRUE. FOR DIRAC POTENTIALS.                    ROTP-036
C OUTPUT:    V:       POTENTIALS AND TRANSITION FORM FACTORS AT THE     ROTP-037
C                     ADDRESSES GIVEN BY ITX,                           ROTP-038
C                     DERIVATVES AND DIVISION BY R**2 ARE PERFORMED IN  ROTP-039
C                     SUBROUTINE POTV. FOR COULOMB POTENTIALS, ONLY     ROTP-040
C                     CHARGE DISTRIBUTIONS ARE COMPUTED IF FOLDING IS   ROTP-041
C                     REQUESTED OR DIFFUSENESS IS FINITE (SEE POTC)     ROTP-042
C WORKING AREAS:                                                        ROTP-043
C            IV:      ORDER OF DERIVATIVE OF THE Q1 FORM FACTORS.       ROTP-044
C            PP:      INTERMEDIATE RESULTS, WEIGHTS, .... IN ROTD.      ROTP-045
C            B:       FOR DEFORMATIONS.                                 ROTP-046
C            P:       WEIGHTS COMPUTED IN ROTD.                         ROTP-047
C                                                                       ROTP-048
C FOR THE COMMON  /COUPL/ SEE CALX.                                     ROTP-049
C FOR THE COMMON  /DCONS/ SEE CALC.                                     ROTP-050
C FOR THE COMMON  /POTE1/ SEE REDM.                                     ROTP-051
C                                                                       ROTP-052
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     ROTP-053
C  IQM:       MAXIMUM L-VALUE OF DEFORMATION IN ROTATIONAL MODEL.       ROTP-054
C  NBT1:      NUMBER OF PHONONS (VIBRATIONS).                           ROTP-055
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             ROTP-056
C   USED:     IQM,NBT1,NPP.                                             ROTP-057
C                                                                       ROTP-058
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     ROTP-059
C  CCZ:       COULOMB ALPHA CONSTANT.                                   ROTP-060
C   USED:     CCZ.                                                      ROTP-061
C                                                                       ROTP-062
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE1/:                     ROTP-063
C  ITX(16):   STARTING ADDRESS OF DIFFERENT FORM FACTORS (SEE REDM).    ROTP-064
C  IMAX:      MAXIMUM ANGULAR MOMENTUM.                                 ROTP-065
C   USED:     ITX,IMAX                                                  ROTP-066
C                                                                       ROTP-067
C***********************************************************************ROTP-068
      IMPLICIT REAL*8 (A-H,O-Z)                                         ROTP-069
      LOGICAL LO(150)                                                   ROTP-070
      DIMENSION BETA(9,*),NBETA(18,*),V(ISM,*),IVY(7,*),IPP(34,*),IV(IQ1ROTP-071
     1),PP(*),B(10,*),P(ID1,*),VAL(57,*),PGN(10),XGN(10),IZ(8,2),EP(8),ZROTP-072
     2Z(2),DD(2),Q(8,36),VR(6,8),LDL(8),SRD(4),WV(22,*)                 ROTP-073
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   ROTP-074
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            ROTP-075
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM,NFO          ROTP-076
      COMMON /INOUT/ MR,MW,MS                                           ROTP-077
      DATA LDL /7,12,7,12,13,14,11,19/                                  ROTP-078
      DATA SRD /1.D0,1.D0,2.D0,6.D0/                                    ROTP-079
      INVZ=INTV                                                         ROTP-080
      DO 39 IP=1,NPP                                                    ROTP-081
      IDG=0                                                             ROTP-082
      INX=INY+1                                                         ROTP-083
      SR=1.D0                                                           ROTP-084
      DO 9 I=1,IQ1                                                      ROTP-085
      IV(I)=I+3                                                         ROTP-086
      IF (I.LE.INY) GO TO 6                                             ROTP-087
      K=MOD(IVY(1,I-INY),1000)                                          ROTP-088
      IF (K.EQ.0.OR.LO(3)) GO TO 4                                      ROTP-089
      IF (K.GT.NBT1) GO TO 2                                            ROTP-090
      IV(I)=2                                                           ROTP-091
      IDG=MAX0(IDG,1)                                                   ROTP-092
      DO 1 J=1,8                                                        ROTP-093
      IF (.NOT.LO(6)) SR=DABS(VAL(4*J-2,IP))                            ROTP-094
    1 B(J,I)=0.282095D0*BETA(J,K)*SR                                    ROTP-095
      GO TO 8                                                           ROTP-096
    2 K1=MOD(K,NBT1+1)                                                  ROTP-097
      K2=K/(NBT1+1)                                                     ROTP-098
      IDG=MAX0(IDG,2)                                                   ROTP-099
      IV(I)=3                                                           ROTP-100
      DO 3 J=1,8                                                        ROTP-101
      IF (.NOT.LO(6)) SR=DABS(VAL(4*J-2,IP))                            ROTP-102
    3 B(J,I)=0.0397887D0*BETA(J,K1)*BETA(J,K2)*SR*SR                    ROTP-103
      GO TO 8                                                           ROTP-104
    4 IV(I)=K+1                                                         ROTP-105
      IDG=MAX0(IDG,K)                                                   ROTP-106
      IF (LO(1)) GO TO 6                                                ROTP-107
      DO 5 J=1,8                                                        ROTP-108
      IF (.NOT.LO(6)) SR=DABS(VAL(4*J-2,IP))                            ROTP-109
    5 B(J,I)=SR**K*0.282095D0*BETA(J,K+1)/SRD(K+1)                      ROTP-110
      GO TO 8                                                           ROTP-111
    6 DO 7 J=1,8                                                        ROTP-112
    7 B(J,I)=1.D0                                                       ROTP-113
    8 B(9,I)=B(5,I)                                                     ROTP-114
    9 B(10,I)=B(6,I)                                                    ROTP-115
      IV(1)=1                                                           ROTP-116
C SET UP OF FORM FACTOR COMPUTATION.                                    ROTP-117
      IDS=1                                                             ROTP-118
      IDR=1                                                             ROTP-119
      IF (LO(100)) IDR=0                                                ROTP-120
      IDT=IDR+IDS                                                       ROTP-121
      HTMP=WV(8,IABS(IPP(1,IP)))                                        ROTP-122
      DO 12 I=1,8                                                       ROTP-123
      IF (VAL(4*I-3,IP).EQ.0.D0) GO TO 12                               ROTP-124
      IF (VAL(4*I-1,IP).GE.0.1D0*HTMP) GO TO 10                         ROTP-125
      IF ((.NOT.LO(17)).AND.(I.GT.6).AND.(VAL(30+3*I,IP).LT.0.1D0*HTMP))ROTP-126
     1 GO TO 10                                                         ROTP-127
      WRITE (MW,1000) VAL(4*I-1,IP),I,IP,0.1D0*HTMP                     ROTP-128
      VAL(4*I-1,IP)=0.1D0*HTMP                                          ROTP-129
   10 IF ((VAL(4*I-2,IP).GE.HTMP).OR.(I.LE.6)) GO TO 11                 ROTP-130
      WRITE (MW,1001) VAL(4*I-2,IP),I,IP,HTMP                           ROTP-131
      VAL(4*I-2,IP)=HTMP                                                ROTP-132
   11 IDZ=IDG                                                           ROTP-133
      IF ((.NOT.LO(LDL(I))).AND.(LDL(I).NE.7)) IDZ=0                    ROTP-134
      IZ(I,2)=IDZ+1                                                     ROTP-135
      IF ((I.GT.6).AND.(VAL(4*I-1,IP).EQ.0.D0)) GO TO 12                ROTP-136
      EP(I)=DEXP(HTMP/VAL(4*I-1,IP))                                    ROTP-137
      IF ((I.EQ.3).OR.(I.EQ.4)) IDZ=IDZ+IDR                             ROTP-138
      IF (LO(100)) IDZ=MAX0(IDZ,2)                                      ROTP-139
   12 IZ(I,1)=IDZ                                                       ROTP-140
      CALL ROTD(NBETA,BETA(1,NBT1+1),IVY,IV,PP,P,Q,VAL,ID1,INVZ,IMAX,IQ1ROTP-141
     1,IQM,INY,IDT,DD,PGN,XGN,LO)                                       ROTP-142
      ZZ(1)=CCZ*VAL(25,IP)                                              ROTP-143
      ZZ(2)=CCZ*VAL(29,IP)                                              ROTP-144
      IF (DD(1).NE.0.D0) ZZ(1)=ZZ(1)/DD(1)                              ROTP-145
      IF (DD(2).NE.0.D0) ZZ(2)=ZZ(2)/DD(2)                              ROTP-146
      DO 14 J=1,8                                                       ROTP-147
      DO 13 I=1,6                                                       ROTP-148
   13 VR(I,J)=0.D0                                                      ROTP-149
   14 CONTINUE                                                          ROTP-150
      R=0.D0                                                            ROTP-151
      DO 38 IS=1,ISM                                                    ROTP-152
      R=R+HTMP                                                          ROTP-153
      DO 16 I=1,IQ1                                                     ROTP-154
      DO 15 J=17,24                                                     ROTP-155
   15 P(J,I)=0.D0                                                       ROTP-156
   16 CONTINUE                                                          ROTP-157
C INTEGRATION LOOP.                                                     ROTP-158
      DO 31 J=1,IDT                                                     ROTP-159
      DO 21 I=1,8                                                       ROTP-160
      IF ((I.GT.6).AND.(VAL(4*I-1,IP).EQ.0.D0)) GO TO 21                ROTP-161
      IF (VAL(4*I-3,IP).EQ.0.D0) GO TO 21                               ROTP-162
      Q(I,J)=Q(I,J)+HTMP                                                ROTP-163
      IF (P(I,J).NE.0.D0) GO TO 17                                      ROTP-164
      IF (Q(I,J)+50.D0*VAL(4*I-1,IP).GT.0.D0) P(I,J)=DEXP(Q(I,J)/VAL(4*IROTP-165
     1-1,IP))                                                           ROTP-166
      GO TO 18                                                          ROTP-167
   17 IF (P(I,J).LT.1.D15) P(I,J)=P(I,J)*EP(I)                          ROTP-168
   18 IF (LO(9).AND.(VAL(4*I-2,1).LE.0.D0).AND.P(I+8,J).GT.1.D-15) P(I+8ROTP-169
     1,J)=P(I+8,J)/EP(I)                                                ROTP-170
      IDV=IZ(I,1)                                                       ROTP-171
      CALL WOSA(VR(1,I),VAL(4*I-1,IP),VAL(4*I,IP),P(I,J),Q(I,J),IDV+2,LOROTP-172
     1(9))                                                              ROTP-173
      DO 19 K=1,IDV+2                                                   ROTP-174
   19 VR(K,I)=VR(K,I)*VAL(4*I-3,IP)                                     ROTP-175
      IF ((I.LT.3).OR.(I.GE.5).OR.LO(109)) GO TO 21                     ROTP-176
      DO 20 K=1,IDV                                                     ROTP-177
   20 VR(K,I)=4.D0*VR(K+1,I)*VAL(4*I-1,IP)                              ROTP-178
   21 CONTINUE                                                          ROTP-179
      DO 23 L=1,IQ1                                                     ROTP-180
      K=IV(L)                                                           ROTP-181
      DO 22 M=1,8                                                       ROTP-182
   22 P(M+16,L)=P(M+16,L)+VR(K,M)*P(L+24,J)*B(M,L)                      ROTP-183
   23 CONTINUE                                                          ROTP-184
C DEFORMED COULOMB POTENTIAL WITHOUT DIFFUSENESS.                       ROTP-185
      DO 30 I=7,8                                                       ROTP-186
      IF (VAL(4*I-1,IP).NE.0.D0) GO TO 30                               ROTP-187
      C=P(I,J)/R                                                        ROTP-188
      IF (R.LT.P(I,J)) GO TO 24                                         ROTP-189
      P(I+16,1)=P(I+16,1)+ZZ(I-6)*(P(I,J)**2)*C*P(25,J)                 ROTP-190
      GO TO 25                                                          ROTP-191
   24 P(I+16,1)=P(I+16,1)+(0.5D0*P(I,J)*P(I,J)-R*R/6.D0)*ZZ(I-6)*P(25,J)ROTP-192
     1*3.D0                                                             ROTP-193
   25 IF ((INVZ.EQ.0).OR.(.NOT.LO(8*I-45))) GO TO 30                    ROTP-194
      DO 29 K=INX,IQ1                                                   ROTP-195
      L=IVY(7,K-INY)+1                                                  ROTP-196
      IF ((IVY(I-3,K-INY).EQ.0).OR.(L.EQ.1)) GO TO 29                   ROTP-197
      D=L                                                               ROTP-198
      N=IV(K)                                                           ROTP-199
      IF (R.LT.P(I,J)) GO TO 26                                         ROTP-200
      C1=(P(I,J)**2)*(C**L)*3.D0/((D+2.D0)*(2.D0*D-1.D0))               ROTP-201
      IF (N.GT.1) C1=C1*(D+2.D0)/P(I,J)                                 ROTP-202
      IF (N.GT.2) C1=C1*(D+1.D0)/P(I,J)                                 ROTP-203
      IF (N.GT.3) C1=C1*D/P(I,J)                                        ROTP-204
      GO TO 28                                                          ROTP-205
   26 IF (L.NE.3) GO TO 27                                              ROTP-206
      IF (N.EQ.1) C1=R*R*(0.2D0+DLOG(C))*0.6D0                          ROTP-207
      IF (N.GE.2) C1=0.6D0*R/C                                          ROTP-208
      IF (N.GE.3) C1=-C1/P(I,J)                                         ROTP-209
      GO TO 28                                                          ROTP-210
   27 IF (N.EQ.1) C1=R*R*(1.D0/(D+2.D0)-1.D0/(C**(L-3)*(2.D0*D-1.D0)))*3ROTP-211
     1.D0/(D-3.D0)                                                      ROTP-212
      IF (N.GE.2) C1=R/C**(L-2)*3.D0/(2.D0*D-1.D0)                      ROTP-213
      IF (N.GE.3) C1=-C1*(D-2.D0)/P(I,J)                                ROTP-214
      IF (N.EQ.4) C1=-C1*(D-1.D0)/P(I,J)                                ROTP-215
   28 P(I+16,K)=P(I+16,K)+ZZ(I-6)*C1*P(K+24,J)*B(I,K)                   ROTP-216
   29 CONTINUE                                                          ROTP-217
   30 CONTINUE                                                          ROTP-218
   31 CONTINUE                                                          ROTP-219
C STORAGE OF FORM FACTORS.                                              ROTP-220
      IF (LO(100)) GO TO 34                                             ROTP-221
      DO 32 I=1,4                                                       ROTP-222
   32 V(IS,IP+ITX(I))=P(16+I,1)                                         ROTP-223
      IF (LO(101)) V(IS,IP+ITX(5))=P(21,1)                              ROTP-224
      IF (LO(102)) V(IS,IP+ITX(6))=P(22,1)                              ROTP-225
      V(IS,IP+ITX(7))=P(23,1)                                           ROTP-226
      IF (LO(103)) V(IS,IP+ITX(8))=P(24,1)                              ROTP-227
      IF (INVZ.LE.0) GO TO 38                                           ROTP-228
      DO 33 J=1,INVZ                                                    ROTP-229
      K=J+INY                                                           ROTP-230
      V(IS,J+ITX(9))=P(17,K)                                            ROTP-231
      V(IS,J+ITX(11))=P(19,K)                                           ROTP-232
      IF (LO(12)) V(IS,J+ITX(10))=P(18,K)                               ROTP-233
      IF (LO(12)) V(IS,J+ITX(12))=P(20,K)                               ROTP-234
      IF (LO(11)) V(IS,IVY(4,J)+ITX(15))=P(23,K)                        ROTP-235
      IF (LO(13)) V(IS,IVY(3,J)+ITX(13)+INVZ)=P(21,K)                   ROTP-236
      IF (LO(14)) V(IS,IVY(3,J)+ITX(14)+INVZ)=P(22,K)                   ROTP-237
      IF (LO(19)) V(IS,IVY(5,J)+ITX(16)+INVZ)=P(24,K)                   ROTP-238
   33 CONTINUE                                                          ROTP-239
      GO TO 38                                                          ROTP-240
   34 K=ITX(4)+24*IP-16                                                 ROTP-241
      DO 35 J=17,24                                                     ROTP-242
   35 V(IS,K+J)=P(J,1)                                                  ROTP-243
      IF (INVZ.EQ.0) GO TO 38                                           ROTP-244
      L=ITX(3)-11                                                       ROTP-245
      DO 37 K=1,INVZ                                                    ROTP-246
      DO 36 J=1,8                                                       ROTP-247
   36 V(IS,11*K+J+L)=P(J+16,K+3)                                        ROTP-248
   37 CONTINUE                                                          ROTP-249
   38 CONTINUE                                                          ROTP-250
      INVZ=0                                                            ROTP-251
   39 CONTINUE                                                          ROTP-252
      RETURN                                                            ROTP-253
 1000 FORMAT (' TOO SMALL DIFFUSENESS =',1P,D15.6,' FOR THE COMPONENT',IROTP-254
     12/20X,' OF THE POTENTIAL ',I2,'   CHANGED INTO ITS MINIMAL VALUE.'ROTP-255
     2,1P,D15.6)                                                        ROTP-256
 1001 FORMAT (' TOO SMALL COULOMB RADIUS =',1P,D15.6,' FOR THE COMPONEN1ROTP-257
     1',I2/20X,' OF THE POTENTIAL ',I2,'   CHANGED INTO ITS MINIMAL VALUROTP-258
     2E.',1P,D15.6)                                                     ROTP-259
      END                                                               ROTP-260
C 29/09/12                                                      ECIS12  ROTD-000
      SUBROUTINE ROTD(NBETA,BETA,IVY,IV,PP,P,Q,VAL,ID1,INVZ,IMAX,IQ1,IQMROTD-001
     1,INY,IDT,DD,PGN,XGN,LO)                                           ROTD-002
C ***** SYMMETRIC ROTATIONAL MODEL:                                     ROTD-003
C A 20-POINTS GAUSS-LEGENDRE INTEGRATION METHOD IS USED, REDUCED TO 10  ROTD-004
C VALUES BY SYMMETRY.                                                   ROTD-005
C                                                                       ROTD-006
C ***** ASYMMETRIC ROTATIONAL MODEL:                                    ROTD-007
C 36 VALUES OF (THETA,PHI) HAVE BEEN CHOSEN. THE VALUES OF THETA ARE    ROTD-008
C N*PI/14. AND FOR EACH VALUE OF "N" THERE ARE N+1 VALUES OF PHI EQUI-  ROTD-009
C DISTANT BETWEEN 0. AND PI/2. THE MATRIX, THE ELEMENTS OF WHICH ARE THEROTD-010
C ROTATION MATRIX ELEMENTS FOR THESE ANGLES AND L GIVEN IN NL, K IN NK  ROTD-011
C HAS BEEN INVERTED. THE COEFFICIENTS OF THE 15 LOWEST (L,K) ARE STORED ROTD-012
C IN POIDS. THE 15 REDUCED ROTATION MATRIX ELEMENTS FOR THE 8 VALUES OF ROTD-013
C THETA ARE IN RB.                                                      ROTD-014
C                                                                       ROTD-015
C ***** VIBRATIONAL MODEL:                                              ROTD-016
C THE ANGULAR INTEGRATION IS REDUCED TO ONE POINT.                      ROTD-017
C                                                                       ROTD-018
C INPUT:     NBETA:   INFORMATIONS ON VIBRATIONS.                       ROTD-019
C            BETA:    STATIC DEFORMATIONS.                              ROTD-020
C            IVY:     INFORMATIONS ON FORM FACTORS.                     ROTD-021
C            IV:      ORDER OF DERIVATIVE OF EACH FORM FACTOR.          ROTD-022
C            VAL:     OPTICAL PARAMETERS.                               ROTD-023
C            ID1:     FIRST DIMENSION OF THE WORKING SPACE P.           ROTD-024
C            INVZ:    NUMBER OF TRANSITION FORM FACTORS.                ROTD-025
C            IMAX:    MAXIMUM ANGULAR MOMENTUM.                         ROTD-026
C            IQ1:     INY + NUMBER OF TRANSITION FORM FACTORS.          ROTD-027
C            IQM:     MAXIMUM MULTIPOLARITY OF STATIC DEFORM.           ROTD-028
C            INY:     1 + NUMBER OF DERIVATIVES OF CENTRAL              ROTD-029
C                     POTENTIALS ( SCHROEDINGER: 1, DIRAC: 3).          ROTD-030
C            PGN:     WEIGHT OF LEGENDRE INTEGRAL.                      ROTD-031
C            XGN:     ABSCISSAE OF LEGENDRE INTEGRAL.                   ROTD-032
C            LO(I):   LOGICAL CONTROLS:                                 ROTD-033
C               LO(1)  =.TRUE. ROTATIONAL MODEL-(.F.:VIBRATIONAL MODEL).ROTD-034
C               LO(3)  =.TRUE. ANHARMONIC VIBRATIONAL OR ASYMMETRIC     ROTD-035
C                              ROTATIONAL MODEL.                        ROTD-036
C               LO(6)  =.TRUE. USE DEFORMATION LENGTHS.                 ROTD-037
C               LO(9)  =.TRUE. SYMMETRISED WOODS-SAXON FORM FACTORS WHENROTD-038
C                              THE RADIUS IS NEGATIVE.                  ROTD-039
C OUTPUT:    P(K,J):  WEIGHT AT POINT J OF FORM FACTOR I AT K=I+24.     ROTD-040
C            Q(K,J)   RADII IN FERMIS. IN ROTATIONAL MODEL, J=13,24 IS  ROTD-041
C                     FIRST DERIVATIVE/SIN(THETA) AND J=25,36 2ND       ROTD-042
C                     DERIVATIVE + 1ST DERIVATIVE/TG(THETA), USED FOR   ROTD-043
C                     SCHROEDINGER EQUIVALENT OF DIRAC EQUATION.        ROTD-044
C            IDT:     NUMBER OF INTEGRATION POINTS.                     ROTD-045
C            DD:      CHARGE INTEGRALS.                                 ROTD-046
C WORKING AREA:                                                         ROTD-047
C            PP:      FOR LEGENDRE POLYNOMIALS.                         ROTD-048
C***********************************************************************ROTD-049
      IMPLICIT REAL*8 (A-H,O-Z)                                         ROTD-050
      LOGICAL LO(150)                                                   ROTD-051
      DIMENSION NBETA(18,*),BETA(9,*),IVY(7,*),IV(*),PP(*),P(ID1,*),Q(8,ROTD-052
     1*),VAL(4,8),DD(2),PGN(10),XGN(10),FF(660),POIDS(36,15),RB(15,8),NLROTD-053
     2(36),NK(36)                                                       ROTD-054
      EQUIVALENCE (POIDS(1,1),FF(1)),(RB(1,1),FF(541))                  ROTD-055
      DATA FF(  1),FF(  2) / 5.12820512820513D-03, 2.43496936475441D-02/ROTD-056
      DATA FF(  3),FF(  4) / 2.43496936475441D-02, 2.12528237972895D-02/ROTD-057
      DATA FF(  5),FF(  6) / 5.53147440814732D-02, 2.12528237972895D-02/ROTD-058
      DATA FF(  7),FF(  8) / 2.53452023906582D-02, 4.44873368571440D-02/ROTD-059
      DATA FF(  9),FF( 10) / 4.44873368571440D-02, 2.53452023906582D-02/ROTD-060
      DATA FF( 11),FF( 12) / 1.86559801758989D-02, 4.85184708058446D-02/ROTD-061
      DATA FF( 13),FF( 14) / 4.12568870375796D-02, 4.85184708058446D-02/ROTD-062
      DATA FF( 15),FF( 16) / 1.86559801758989D-02, 2.45925296747690D-02/ROTD-063
      DATA FF( 17),FF( 18) / 3.46398560932081D-02, 4.17933479732147D-02/ROTD-064
      DATA FF( 19),FF( 20) / 4.17933479732147D-02, 3.46398560932081D-02/ROTD-065
      DATA FF( 21),FF( 22) / 2.45925296747690D-02, 1.19673178236678D-02/ROTD-066
      DATA FF( 23),FF( 24) / 4.47278246564596D-02, 3.42917677140348D-02/ROTD-067
      DATA FF( 25),FF( 26) / 3.69076912422490D-02, 3.42917677140348D-02/ROTD-068
      DATA FF( 27),FF( 28) / 4.47278246564596D-02, 1.19673178236678D-02/ROTD-069
      DATA FF( 29),FF( 30) / 1.22068028124735D-02, 1.07129429826274D-02/ROTD-070
      DATA FF( 31),FF( 32) / 1.70796570854178D-02, 1.60746817649944D-02/ROTD-071
      DATA FF( 33),FF( 34) / 1.60746817649944D-02, 1.70796570854178D-02/ROTD-072
      DATA FF( 35),FF( 36) / 1.07129429826274D-02, 1.22068028124735D-02/ROTD-073
      DATA FF( 37),FF( 38) / 1.16509780810355D-02, 5.02196040257258D-02/ROTD-074
      DATA FF( 39),FF( 40) / 5.02196040257258D-02, 3.27291637647035D-02/ROTD-075
      DATA FF( 41),FF( 42) / 9.18762267773519D-02, 3.27291637647035D-02/ROTD-076
      DATA FF( 43),FF( 44) / 2.59023523875124D-02, 3.90112947467209D-02/ROTD-077
      DATA FF( 45),FF( 46) / 3.90112947467209D-02, 2.59023523875124D-02/ROTD-078
      DATA FF( 47),FF( 48) /-1.94110577743667D-03, 1.63152196117813D-02/ROTD-079
      DATA FF( 49),FF( 50) / 4.25393417813309D-03, 1.63152196117813D-02/ROTD-080
      DATA FF( 51),FF( 52) /-1.94110577743667D-03,-2.10440960549142D-03/ROTD-081
      DATA FF( 53),FF( 54) /-2.95605747812527D-02,-1.76788269194279D-02/ROTD-082
      DATA FF( 55),FF( 56) /-1.76788269194279D-02,-2.95605747812527D-02/ROTD-083
      DATA FF( 57),FF( 58) /-2.10440960549142D-03,-2.76725877126884D-02/ROTD-084
      DATA FF( 59),FF( 60) /-2.18051394343160D-02,-3.71237658735663D-02/ROTD-085
      DATA FF( 61),FF( 62) /-3.47941600457989D-02,-3.71237658735663D-02/ROTD-086
      DATA FF( 63),FF( 64) /-2.18051394343160D-02,-2.76725877126884D-02/ROTD-087
      DATA FF( 65),FF( 66) /-2.37727476826438D-03,-2.57698170677382D-02/ROTD-088
      DATA FF( 67),FF( 68) /-1.69793430277171D-02,-1.76582790639056D-02/ROTD-089
      DATA FF( 69),FF( 70) /-1.76582790639056D-02,-1.69793430277171D-02/ROTD-090
      DATA FF( 71),FF( 72) /-2.57698170677382D-02,-2.37727476826438D-03/ROTD-091
      DATA FF( 73),FF( 74) /               0.D+00, 1.72605997389226D-03/ROTD-092
      DATA FF( 75),FF( 76) /-1.72605997389226D-03, 1.25329145074895D-02/ROTD-093
      DATA FF( 77),FF( 78) /               0.D+00,-1.25329145074895D-02/ROTD-094
      DATA FF( 79),FF( 80) / 2.24225003695212D-02, 2.96494182999275D-02/ROTD-095
      DATA FF( 81),FF( 82) /-2.96494182999275D-02,-2.24225003695212D-02/ROTD-096
      DATA FF( 83),FF( 84) / 3.91319410166702D-02, 4.84852241623139D-02/ROTD-097
      DATA FF( 85),FF( 86) /               0.D+00,-4.84852241623139D-02/ROTD-098
      DATA FF( 87),FF( 88) /-3.91319410166702D-02, 3.97624306723559D-02/ROTD-099
      DATA FF( 89),FF( 90) / 8.10325074410309D-02, 2.28106411006477D-02/ROTD-100
      DATA FF( 91),FF( 92) /-2.28106411006477D-02,-8.10325074410309D-02/ROTD-101
      DATA FF( 93),FF( 94) /-3.97624306723559D-02, 5.59851854712431D-02/ROTD-102
      DATA FF( 95),FF( 96) / 6.92750919115029D-02, 5.27666983806334D-02/ROTD-103
      DATA FF( 97),FF( 98) /               0.D+00,-5.27666983806334D-02/ROTD-104
      DATA FF( 99),FF(100) /-6.92750919115029D-02,-5.59851854712431D-02/ROTD-105
      DATA FF(101),FF(102) / 1.57386702462217D-02, 4.84030198418523D-02/ROTD-106
      DATA FF(103),FF(104) / 2.47182393346187D-02, 9.25890190803834D-03/ROTD-107
      DATA FF(105),FF(106) /-9.25890190803834D-03,-2.47182393346187D-02/ROTD-108
      DATA FF(107),FF(108) /-4.84030198418523D-02,-1.57386702462217D-02/ROTD-109
      DATA FF(109),FF(110) / 1.62578391680559D-02, 5.49097361991748D-02/ROTD-110
      DATA FF(111),FF(112) / 5.49097361991748D-02, 8.83119316755724D-03/ROTD-111
      DATA FF(113),FF(114) / 4.65475180836232D-02, 8.83119316755724D-03/ROTD-112
      DATA FF(115),FF(116) /-1.52665570705068D-02,-4.45213321560779D-02/ROTD-113
      DATA FF(117),FF(118) /-4.45213321560779D-02,-1.52665570705068D-02/ROTD-114
      DATA FF(119),FF(120) /-3.25206220517009D-02,-5.00345998670453D-02/ROTD-115
      DATA FF(121),FF(122) /-5.61452437357254D-02,-5.00345998670453D-02/ROTD-116
      DATA FF(123),FF(124) /-3.25206220517009D-02,-5.34880433627418D-03/ROTD-117
      DATA FF(125),FF(126) /-2.71365320807763D-02,-2.11168478505607D-02/ROTD-118
      DATA FF(127),FF(128) /-2.11168478505607D-02,-2.71365320807763D-02/ROTD-119
      DATA FF(129),FF(130) /-5.34880433627418D-03, 5.38896697941338D-03/ROTD-120
      DATA FF(131),FF(132) / 2.71262358172909D-02, 2.30796535753636D-02/ROTD-121
      DATA FF(133),FF(134) / 2.05455707964392D-02, 2.30796535753636D-02/ROTD-122
      DATA FF(135),FF(136) / 2.71262358172909D-02, 5.38896697941338D-03/ROTD-123
      DATA FF(137),FF(138) / 1.18873085059175D-02, 1.57695500564231D-02/ROTD-124
      DATA FF(139),FF(140) / 1.69343260833909D-02, 1.84154828722142D-02/ROTD-125
      DATA FF(141),FF(142) / 1.84154828722142D-02, 1.69343260833909D-02/ROTD-126
      DATA FF(143),FF(144) / 1.57695500564231D-02, 1.18873085059175D-02/ROTD-127
      DATA FF(145),FF(146) /               0.D+00, 8.48270535877333D-03/ROTD-128
      DATA FF(147),FF(148) /-8.48270535877333D-03, 5.07879724674491D-02/ROTD-129
      DATA FF(149),FF(150) /               0.D+00,-5.07879724674491D-02/ROTD-130
      DATA FF(151),FF(152) / 6.07576950711252D-02, 9.00787083612551D-02/ROTD-131
      DATA FF(153),FF(154) /-9.00787083612551D-02,-6.07576950711252D-02/ROTD-132
      DATA FF(155),FF(156) / 6.45377024914683D-02, 6.34461864848980D-02/ROTD-133
      DATA FF(157),FF(158) /               0.D+00,-6.34461864848980D-02/ROTD-134
      DATA FF(159),FF(160) /-6.45377024914683D-02,-5.65537884945032D-03/ROTD-135
      DATA FF(161),FF(162) / 4.77376504465041D-02,-6.49930325424402D-03/ROTD-136
      DATA FF(163),FF(164) / 6.49930325424402D-03,-4.77376504465041D-02/ROTD-137
      DATA FF(165),FF(166) / 5.65537884945032D-03, 1.24655233750459D-03/ROTD-138
      DATA FF(167),FF(168) /-8.76714858478633D-02,-1.18181266709155D-02/ROTD-139
      DATA FF(169),FF(170) /               0.D+00, 1.18181266709155D-02/ROTD-140
      DATA FF(171),FF(172) / 8.76714858478633D-02,-1.24655233750459D-03/ROTD-141
      DATA FF(173),FF(174) /-3.84487336410874D-02,-7.62058619698479D-03/ROTD-142
      DATA FF(175),FF(176) /-3.01133238640137D-02,-1.08854252444356D-02/ROTD-143
      DATA FF(177),FF(178) / 1.08854252444356D-02, 3.01133238640137D-02/ROTD-144
      DATA FF(179),FF(180) / 7.62058619698479D-03, 3.84487336410874D-02/ROTD-145
      DATA FF(181),FF(182),FF(183),FF(184)/3*0.D0, 1.36660942007569D-03/ROTD-146
      DATA FF(185),FF(186) /-2.73321884015139D-03, 1.36660942007569D-03/ROTD-147
      DATA FF(187),FF(188) / 1.10470452782256D-02,-1.10470452782256D-02/ROTD-148
      DATA FF(189),FF(190) /-1.10470452782256D-02, 1.10470452782256D-02/ROTD-149
      DATA FF(191),FF(192) / 2.19899348965421D-02, 7.44598962747265D-03/ROTD-150
      DATA FF(193),FF(194) /-5.88718490480295D-02, 7.44598962747265D-03/ROTD-151
      DATA FF(195),FF(196) / 2.19899348965421D-02, 4.68819219798074D-02/ROTD-152
      DATA FF(197),FF(198) / 1.75997201070024D-02,-6.44816420868098D-02/ROTD-153
      DATA FF(199),FF(200) /-6.44816420868098D-02, 1.75997201070024D-02/ROTD-154
      DATA FF(201),FF(202) / 4.68819219798074D-02, 3.99738678988680D-02/ROTD-155
      DATA FF(203),FF(204) / 7.12682217154704D-02,-6.36366236436914D-02/ROTD-156
      DATA FF(205),FF(206) /-9.52109319412941D-02,-6.36366236436914D-02/ROTD-157
      DATA FF(207),FF(208) / 7.12682217154704D-02, 3.99738678988680D-02/ROTD-158
      DATA FF(209),FF(210) / 3.48854645305456D-02, 1.59406059510446D-02/ROTD-159
      DATA FF(211),FF(212) /-3.85251092517111D-03,-4.69735595564191D-02/ROTD-160
      DATA FF(213),FF(214) /-4.69735595564191D-02,-3.85251092517111D-03/ROTD-161
      DATA FF(215),FF(216) / 1.59406059510446D-02, 3.48854645305456D-02/ROTD-162
      DATA FF(217),FF(218) / 2.09351688388115D-02, 4.48693101517502D-02/ROTD-163
      DATA FF(219),FF(220) / 4.48693101517502D-02,-2.58717911400513D-02/ROTD-164
      DATA FF(221),FF(222) /-2.81401919724747D-02,-2.58717911400513D-02/ROTD-165
      DATA FF(223),FF(224) /-2.67091832939234D-02,-6.48487928844068D-02/ROTD-166
      DATA FF(225),FF(226) /-6.48487928844068D-02,-2.67091832939234D-02/ROTD-167
      DATA FF(227),FF(228) / 7.16351218404911D-03, 1.79021864804572D-02/ROTD-168
      DATA FF(229),FF(230) / 2.15963617795819D-02, 1.79021864804572D-02/ROTD-169
      DATA FF(231),FF(232) / 7.16351218404911D-03, 2.39109798331374D-02/ROTD-170
      DATA FF(233),FF(234) / 4.82363267486100D-02, 4.45971408837992D-02/ROTD-171
      DATA FF(235),FF(236) / 4.45971408837992D-02, 4.82363267486100D-02/ROTD-172
      DATA FF(237),FF(238) / 2.39109798331374D-02,-8.59824516528979D-04/ROTD-173
      DATA FF(239),FF(240) /-8.77138104825350D-03,-1.02303358111611D-03/ROTD-174
      DATA FF(241),FF(242) /-4.79305557318445D-03,-1.02303358111611D-03/ROTD-175
      DATA FF(243),FF(244) /-8.77138104825350D-03,-8.59824516528979D-04/ROTD-176
      DATA FF(245),FF(246) /-1.06844320272751D-02,-1.45408758222938D-02/ROTD-177
      DATA FF(247),FF(248) /-1.99395576475419D-02,-1.82297258567795D-02/ROTD-178
      DATA FF(249),FF(250) /-1.82297258567795D-02,-1.99395576475419D-02/ROTD-179
      DATA FF(251),FF(252) /-1.45408758222938D-02,-1.06844320272751D-02/ROTD-180
      DATA FF(253),FF(254) /               0.D+00, 2.01805115490348D-02/ROTD-181
      DATA FF(255),FF(256) /-2.01805115490348D-02, 8.57318720924763D-02/ROTD-182
      DATA FF(257),FF(258) /               0.D+00,-8.57318720924763D-02/ROTD-183
      DATA FF(259),FF(260) / 3.23094559967599D-02, 8.19417704703203D-02/ROTD-184
      DATA FF(261),FF(262) /-8.19417704703203D-02,-3.23094559967599D-02/ROTD-185
      DATA FF(263),FF(264) /-1.46857629097277D-02,-6.79023750172081D-02/ROTD-186
      DATA FF(265),FF(266) /               0.D+00, 6.79023750172081D-02/ROTD-187
      DATA FF(267),FF(268) / 1.46857629097277D-02,-6.96933563711756D-02/ROTD-188
      DATA FF(269),FF(270) /-4.17790846324735D-02,-3.84574445723291D-02/ROTD-189
      DATA FF(271),FF(272) / 3.84574445723291D-02, 4.17790846324735D-02/ROTD-190
      DATA FF(273),FF(274) / 6.96933563711756D-02, 3.99606295249026D-02/ROTD-191
      DATA FF(275),FF(276) /-3.02669933372692D-02, 1.78196010140318D-02/ROTD-192
      DATA FF(277),FF(278) /               0.D+00,-1.78196010140318D-02/ROTD-193
      DATA FF(279),FF(280) / 3.02669933372692D-02,-3.99606295249026D-02/ROTD-194
      DATA FF(281),FF(282) /-1.85102966735610D-03, 5.84883614463197D-02/ROTD-195
      DATA FF(283),FF(284) / 2.06176299500674D-02, 5.03674288697549D-03/ROTD-196
      DATA FF(285),FF(286) /-5.03674288697549D-03,-2.06176299500674D-02/ROTD-197
      DATA FF(287),FF(288) /-5.84883614463197D-02, 1.85102966735610D-03/ROTD-198
      DATA FF(289),FF(290),FF(291),FF(292)/3*0.D0, 8.75524578710006D-03/ROTD-199
      DATA FF(293),FF(294) /-1.75104915742001D-02, 8.75524578710006D-03/ROTD-200
      DATA FF(295),FF(296) / 5.09492763472956D-02,-5.09492763472956D-02/ROTD-201
      DATA FF(297),FF(298) /-5.09492763472956D-02, 5.09492763472956D-02/ROTD-202
      DATA FF(299),FF(300) / 5.07686792912787D-02, 3.43411087448840D-02/ROTD-203
      DATA FF(301),FF(302) /-1.70219576072325D-01, 3.43411087448840D-02/ROTD-204
      DATA FF(303),FF(304) / 5.07686792912787D-02, 5.95241999935498D-02/ROTD-205
      DATA FF(305),FF(306) /-1.56733778150275D-02,-4.38508221785223D-02/ROTD-206
      DATA FF(307),FF(308) /-4.38508221785223D-02,-1.56733778150275D-02/ROTD-207
      DATA FF(309),FF(310) / 5.95241999935498D-02,-6.35546557275261D-02/ROTD-208
      DATA FF(311),FF(312) / 5.26475282909628D-02,-1.74503883012358D-02/ROTD-209
      DATA FF(313),FF(314) / 5.67150314755984D-02,-1.74503883012358D-02/ROTD-210
      DATA FF(315),FF(316) / 5.26475282909628D-02,-6.35546557275261D-02/ROTD-211
      DATA FF(317),FF(318) / 1.43084825509049D-02,-7.77375076960055D-02/ROTD-212
      DATA FF(319),FF(320) / 2.99695551646778D-02, 3.34594699804229D-02/ROTD-213
      DATA FF(321),FF(322) / 3.34594699804229D-02, 2.99695551646778D-02/ROTD-214
      DATA FF(323),FF(324) /-7.77375076960055D-02, 1.43084825509049D-02/ROTD-215
      DATA FF(325),FF(326),FF(327),FF(328),FF(329),FF(330) / 6*0.D+00 / ROTD-216
      DATA FF(331),FF(332) / 2.45227713022227D-03,-4.90455426044453D-03/ROTD-217
      DATA FF(333),FF(334) / 4.90455426044453D-03,-2.45227713022227D-03/ROTD-218
      DATA FF(335),FF(336) / 1.70476858680581D-02,-2.41090685616840D-02/ROTD-219
      DATA FF(337),FF(338) /               0.D+00, 2.41090685616840D-02/ROTD-220
      DATA FF(339),FF(340) /-1.70476858680581D-02, 2.87679007598782D-02/ROTD-221
      DATA FF(341),FF(342) /-6.25948031834043D-03,-7.67073502036074D-02/ROTD-222
      DATA FF(343),FF(344) / 7.67073502036074D-02, 6.25948031834043D-03/ROTD-223
      DATA FF(345),FF(346) /-2.87679007598782D-02, 6.77534129025308D-02/ROTD-224
      DATA FF(347),FF(348) /-2.45662401760060D-02,-9.29568496692793D-02/ROTD-225
      DATA FF(349),FF(350) /               0.D+00, 9.29568496692793D-02/ROTD-226
      DATA FF(351),FF(352) / 2.45662401760060D-02,-6.77534129025308D-02/ROTD-227
      DATA FF(353),FF(354) / 1.40653464342708D-02, 3.44626025062703D-02/ROTD-228
      DATA FF(355),FF(356) /-6.14715612078917D-02,-3.05058349395271D-02/ROTD-229
      DATA FF(357),FF(358) / 3.05058349395271D-02, 6.14715612078917D-02/ROTD-230
      DATA FF(359),FF(360) /-3.44626025062703D-02,-1.40653464342708D-02/ROTD-231
      DATA FF(361),FF(362) / 2.68196038675183D-02, 2.31031610463596D-02/ROTD-232
      DATA FF(363),FF(364) / 2.31031610463596D-02,-4.28485793267828D-02/ROTD-233
      DATA FF(365),FF(366) /-7.35437975772992D-02,-4.28485793267828D-02/ROTD-234
      DATA FF(367),FF(368) / 8.24684503593131D-03, 1.06081754814925D-02/ROTD-235
      DATA FF(369),FF(370) / 1.06081754814925D-02, 8.24684503593131D-03/ROTD-236
      DATA FF(371),FF(372) / 2.51256208268608D-02, 4.43395667660788D-02/ROTD-237
      DATA FF(373),FF(374) / 5.39942159127383D-02, 4.43395667660788D-02/ROTD-238
      DATA FF(375),FF(376) / 2.51256208268608D-02,-2.19715194066651D-02/ROTD-239
      DATA FF(377),FF(378) /-3.13725579969708D-02,-4.08834934180796D-02/ROTD-240
      DATA FF(379),FF(380) /-4.08834934180796D-02,-3.13725579969708D-02/ROTD-241
      DATA FF(381),FF(382) /-2.19715194066651D-02,-1.88427973024923D-03/ROTD-242
      DATA FF(383),FF(384) /-2.16035578956301D-02,-1.17587068801884D-02/ROTD-243
      DATA FF(385),FF(386) /-1.12062882635935D-02,-1.17587068801884D-02/ROTD-244
      DATA FF(387),FF(388) /-2.16035578956301D-02,-1.88427973024923D-03/ROTD-245
      DATA FF(389),FF(390) / 5.74971871310925D-03, 2.25181635560216D-02/ROTD-246
      DATA FF(391),FF(392) / 1.76219271299887D-02, 1.69776491290416D-02/ROTD-247
      DATA FF(393),FF(394) / 1.69776491290416D-02, 1.76219271299887D-02/ROTD-248
      DATA FF(395),FF(396) / 2.25181635560216D-02, 5.74971871310925D-03/ROTD-249
      DATA FF(397),FF(398) /               0.D+00, 3.55735538800802D-02/ROTD-250
      DATA FF(399),FF(400) /-3.55735538800802D-02, 8.33786715099005D-02/ROTD-251
      DATA FF(401),FF(402) /               0.D+00,-8.33786715099005D-02/ROTD-252
      DATA FF(403),FF(404) /-4.89348970296868D-02,-2.91035565005004D-04/ROTD-253
      DATA FF(405),FF(406) / 2.91035565005004D-04, 4.89348970296868D-02/ROTD-254
      DATA FF(407),FF(408) /-2.62016346104983D-02,-8.33457375352782D-02/ROTD-255
      DATA FF(409),FF(410) /               0.D+00, 8.33457375352782D-02/ROTD-256
      DATA FF(411),FF(412) / 2.62016346104983D-02, 2.62738780028789D-02/ROTD-257
      DATA FF(413),FF(414) / 8.32340348860637D-02, 3.18724837249571D-02/ROTD-258
      DATA FF(415),FF(416) /-3.18724837249571D-02,-8.32340348860637D-02/ROTD-259
      DATA FF(417),FF(418) /-2.62738780028789D-02, 2.62547109771934D-02/ROTD-260
      DATA FF(419),FF(420) / 7.98302855528211D-03, 4.48364778698653D-03/ROTD-261
      DATA FF(421),FF(422) /               0.D+00,-4.48364778698653D-03/ROTD-262
      DATA FF(423),FF(424) /-7.98302855528211D-03,-2.62547109771934D-02/ROTD-263
      DATA FF(425),FF(426) /-2.51077741509568D-02,-2.87429639697600D-02/ROTD-264
      DATA FF(427),FF(428) /-1.79981066009081D-02,-7.87642513464656D-03/ROTD-265
      DATA FF(429),FF(430) / 7.87642513464656D-03, 1.79981066009081D-02/ROTD-266
      DATA FF(431),FF(432) / 2.87429639697600D-02, 2.51077741509568D-02/ROTD-267
      DATA FF(433),FF(434),FF(435),FF(436)/3*0.D0, 2.38959949710526D-02/ROTD-268
      DATA FF(437),FF(438) /-4.77919899421051D-02, 2.38959949710526D-02/ROTD-269
      DATA FF(439),FF(440) / 7.91176151667601D-02,-7.91176151667601D-02/ROTD-270
      DATA FF(441),FF(442) /-7.91176151667601D-02, 7.91176151667601D-02/ROTD-271
      DATA FF(443),FF(444) /-1.24626161171327D-02, 5.33272858981795D-02/ROTD-272
      DATA FF(445),FF(446) /-8.17293395620937D-02, 5.33272858981795D-02/ROTD-273
      DATA FF(447),FF(448) /-1.24626161171327D-02,-1.44916866191644D-02/ROTD-274
      DATA FF(449),FF(450) /-9.04220344262881D-02, 1.04913721045452D-01/ROTD-275
      DATA FF(451),FF(452) / 1.04913721045452D-01,-9.04220344262881D-02/ROTD-276
      DATA FF(453),FF(454) /-1.44916866191644D-02,-5.73533998264151D-02/ROTD-277
      DATA FF(455),FF(456) / 7.23959359228724D-02,-1.77393445770836D-02/ROTD-278
      DATA FF(457),FF(458) / 5.39361696125263D-03,-1.77393445770836D-02/ROTD-279
      DATA FF(459),FF(460) / 7.23959359228724D-02,-5.73533998264151D-02/ROTD-280
      DATA FF(461),FF(462) / 5.42648795710159D-02,-2.39248769146420D-02/ROTD-281
      DATA FF(463),FF(464) / 7.38288973327365D-04,-3.10782916297012D-02/ROTD-282
      DATA FF(465),FF(466) /-3.10782916297012D-02, 7.38288973327365D-04/ROTD-283
      DATA FF(467),FF(468) /-2.39248769146420D-02, 5.42648795710159D-02/ROTD-284
      DATA FF(469),FF(470),FF(471),FF(472),FF(473),FF(474) / 6*0.D+00 / ROTD-285
      DATA FF(475),FF(476) / 1.58592251779111D-02,-3.17184503558222D-02/ROTD-286
      DATA FF(477),FF(478) / 3.17184503558222D-02,-1.58592251779111D-02/ROTD-287
      DATA FF(479),FF(480) / 6.36434740587254D-02,-9.00054641703897D-02/ROTD-288
      DATA FF(481),FF(482) /               0.D+00, 9.00054641703897D-02/ROTD-289
      DATA FF(483),FF(484) /-6.36434740587254D-02, 2.20893694492763D-02/ROTD-290
      DATA FF(485),FF(486) / 2.93554190800171D-02,-1.48336186023447D-01/ROTD-291
      DATA FF(487),FF(488) / 1.48336186023447D-01,-2.93554190800171D-02/ROTD-292
      DATA FF(489),FF(490) /-2.20893694492763D-02, 4.17889616928183D-02/ROTD-293
      DATA FF(491),FF(492) /-9.17122054842361D-02, 7.52722761872573D-02/ROTD-294
      DATA FF(493),FF(494) /               0.D+00,-7.52722761872573D-02/ROTD-295
      DATA FF(495),FF(496) / 9.17122054842361D-02,-4.17889616928183D-02/ROTD-296
      DATA FF(497),FF(498) /-6.41790551032870D-02, 5.94260666825252D-02/ROTD-297
      DATA FF(499),FF(500) / 7.67785691121092D-03, 2.62939467857734D-02/ROTD-298
      DATA FF(501),FF(502) /-2.62939467857734D-02,-7.67785691121092D-03/ROTD-299
      DATA FF(503),FF(504) /-5.94260666825252D-02, 6.41790551032870D-02/ROTD-300
      DATA FF(505),FF(506),FF(507),FF(508),FF(509),FF(510) / 6*0.D+00 / ROTD-301
      DATA FF(511),FF(512),FF(513),FF(514)                 / 4*0.D+00 / ROTD-302
      DATA FF(515),FF(516) / 6.25351913613187D-03,-1.25070382722637D-02/ROTD-303
      DATA FF(517),FF(518) / 1.25070382722637D-02,-1.25070382722637D-02/ROTD-304
      DATA FF(519),FF(520) / 6.25351913613187D-03, 3.11758837931106D-02/ROTD-305
      DATA FF(521),FF(522) /-5.04436396065700D-02, 1.92677558134594D-02/ROTD-306
      DATA FF(523),FF(524) / 1.92677558134594D-02,-5.04436396065700D-02/ROTD-307
      DATA FF(525),FF(526) / 3.11758837931106D-02, 3.58893219026970D-02/ROTD-308
      DATA FF(527),FF(528) /-1.67264809607312D-02,-9.33778447285944D-02/ROTD-309
      DATA FF(529),FF(530) / 1.48430007573257D-01,-9.33778447285944D-02/ROTD-310
      DATA FF(531),FF(532) /-1.67264809607312D-02, 3.58893219026970D-02/ROTD-311
      DATA FF(533),FF(534) / 4.68575275756458D-02,-4.50757375114331D-02/ROTD-312
      DATA FF(535),FF(536) /-3.00076119100051D-02, 2.82258218457924D-02/ROTD-313
      DATA FF(537),FF(538) / 2.82258218457924D-02,-3.00076119100051D-02/ROTD-314
      DATA FF(539),FF(540) /-4.50757375114331D-02, 4.68575275756458D-02/ROTD-315
      DATA FF(541),FF(542),FF(543),FF(544) / 2*1.D+00, 0.D+00, 1.D+00 / ROTD-316
      DATA FF(545),FF(546),FF(547),FF(548) / 2*0.D+00, 1.D+00, 0.D+00 / ROTD-317
      DATA FF(549),FF(550),FF(551),FF(552) / 2*0.D+00, 1.D+00, 0.D+00 / ROTD-318
      DATA FF(553),FF(554),FF(555),FF(556) / 3*0.D+00, 1.D+00         / ROTD-319
      DATA FF(557),FF(558) / 9.25726650926814D-01, 3.03219677861538D-02/ROTD-320
      DATA FF(559),FF(560) / 7.63148756611001D-01, 1.10652387063757D-01/ROTD-321
      DATA FF(561),FF(562) / 1.28207234895501D-03, 5.36257386538795D-01/ROTD-322
      DATA FF(563),FF(564) / 2.17289580469363D-01, 8.13196358030030D-03/ROTD-323
      DATA FF(565),FF(566) / 5.76608786636350D-05, 2.78047174877667D-01/ROTD-324
      DATA FF(567),FF(568) / 3.29131159509191D-01, 2.49657214768430D-02/ROTD-325
      DATA FF(569),FF(570) / 5.20868271692270D-04, 2.66389008100408D-06/ROTD-326
      DATA FF(571),FF(572) /               1.D+00, 7.17617351394050D-01/ROTD-327
      DATA FF(573),FF(574) / 1.15282233550037D-01, 2.13774427323495D-01/ROTD-328
      DATA FF(575),FF(576) / 3.48423989314638D-01, 1.85320103458231D-02/ROTD-329
      DATA FF(577),FF(578) /-2.35732455017163D-01, 4.90294315725551D-01/ROTD-330
      DATA FF(579),FF(580) / 9.85729671840697D-02, 3.16881041332955D-03/ROTD-331
      DATA FF(581),FF(582) /-4.09576022206791D-01, 4.20201210269288D-01/ROTD-332
      DATA FF(583),FF(584) / 2.34245007796887D-01, 2.41313741208102D-02/ROTD-333
      DATA FF(585),FF(586) / 5.56591156140697D-04,               1.D+00/ROTD-334
      DATA FF(587),FF(588) / 4.16890700467236D-01, 2.38053374687832D-01/ROTD-335
      DATA FF(589),FF(590) /-2.82554557772787D-01, 5.03833139973589D-01/ROTD-336
      DATA FF(591),FF(592) / 7.90217156752737D-02,-3.59733444374334D-01/ROTD-337
      DATA FF(593),FF(594) / 2.89718584757935D-01, 3.03418532856755D-01/ROTD-338
      DATA FF(595),FF(596) / 2.79017946123459D-02, 7.08378251175649D-02/ROTD-339
      DATA FF(597),FF(598) /-1.72370094784044D-01, 4.12885596178737D-01/ROTD-340
      DATA FF(599),FF(600) / 1.55306184423031D-01, 1.01200845906307D-02/ROTD-341
      DATA FF(601),FF(602) /               1.D+00, 8.31092995327642D-02/ROTD-342
      DATA FF(603),FF(604) / 3.74319061007963D-01,-4.21630141495484D-01/ROTD-343
      DATA FF(605),FF(606) / 4.15874017677357D-01, 1.95380697242947D-01/ROTD-344
      DATA FF(607),FF(608) / 1.11600329703613D-01,-1.97772479536753D-01/ROTD-345
      DATA FF(609),FF(610) / 4.29387782672098D-01, 1.08476318674788D-01/ROTD-346
      DATA FF(611),FF(612) / 2.63594691134320D-01,-2.34078763472890D-01/ROTD-347
      DATA FF(613),FF(614) / 7.77527093709932D-02, 3.57086142014797D-01/ROTD-348
      DATA FF(615),FF(616) / 6.18663570444226D-02,               1.D+00/ROTD-349
      DATA FF(617),FF(618) /-2.17617351394050D-01, 4.97090202145758D-01/ROTD-350
      DATA FF(619),FF(620) /-1.75906698838214D-01, 1.01968005344553D-01/ROTD-351
      DATA FF(621),FF(622) / 3.44562631700107D-01, 3.21522932835539D-01/ROTD-352
      DATA FF(623),FF(624) /-3.16879195937032D-01, 2.47505734203973D-01/ROTD-353
      DATA FF(625),FF(626) / 2.54047379389696D-01,-2.23915517573357D-01/ROTD-354
      DATA FF(627),FF(628) / 2.47297362843729D-01,-3.04922989721535D-01/ROTD-355
      DATA FF(629),FF(630) / 3.15711860946547D-01, 1.92409975848431D-01/ROTD-356
      DATA FF(631),FF(632) /               1.D+00,-4.25726650926814D-01/ROTD-357
      DATA FF(633),FF(634) / 5.82050467909641D-01, 2.00043214171989D-01/ROTD-358
      DATA FF(635),FF(636) /-2.45486828370620D-01, 4.72409970427464D-01/ROTD-359
      DATA FF(637),FF(638) /-3.40709996864496D-02, 5.77157388195865D-02/ROTD-360
      DATA FF(639),FF(640) /-1.44294709220167D-01, 4.07841145692130D-01/ROTD-361
      DATA FF(641),FF(642) /-9.23304365056544D-02, 7.92778608560820D-02/ROTD-362
      DATA FF(643),FF(644) /-3.36435261948797D-02,-7.14935648162744D-02/ROTD-363
      DATA FF(645),FF(646) / 3.61684038642514D-01,               1.D+00/ROTD-364
      DATA FF(647),FF(648) /              -5.D-01, 6.12372435695795D-01/ROTD-365
      DATA FF(649),FF(650) /             3.75D-01,-3.95284707521047D-01/ROTD-366
      DATA FF(651),FF(652) / 5.22912516583797D-01,           -3.125D-01/ROTD-367
      DATA FF(653),FF(654) / 3.20217211436237D-01,-3.50780380010057D-01/ROTD-368
      DATA FF(655),FF(656) / 4.74958879799083D-01,         2.734375D-01/ROTD-369
      DATA FF(657),FF(658) /-2.77316239832795D-01, 2.90851726077911D-01/ROTD-370
      DATA FF(659),FF(660) /-3.23629924643875D-01, 4.43148525027868D-01/ROTD-371
      DATA NL/0,2,2,4,4,4,6,6,6,6,8,8,8,8,8,10,10,10,10,10,10,12,12,12,1ROTD-372
     12,12,12,12,14,14,14,14,14,14,14,14/                               ROTD-373
      DATA NK/0,0,2,0,2,4,0,2,4,6,0,2,4,6,8,0,2,4,6,8,10,0,2,4,6,8,10,12ROTD-374
     1,0,2,4,6,8,10,12,14/                                              ROTD-375
      DATA PI /3.1415926535897932D0/                                    ROTD-376
      DD(1)=0.D0                                                        ROTD-377
      DD(2)=0.D0                                                        ROTD-378
      IF (LO(1)) GO TO 4                                                ROTD-379
      IDT=1                                                             ROTD-380
      DO 2 J=1,8                                                        ROTD-381
      IF (VAL(1,J).EQ.0.D0) GO TO 2                                     ROTD-382
      IF ((J.GE.6).AND.(VAL(3,J).EQ.0.D0)) GO TO 1                      ROTD-383
      P(J,1)=0.D0                                                       ROTD-384
      Q(J,1)=-VAL(2,J)                                                  ROTD-385
      P(J+8,1)=1.D-16                                                   ROTD-386
      IF ((.NOT.LO(9)).OR.(VAL(2,J).GE.0.D0)) GO TO 2                   ROTD-387
      Q(J,1)=VAL(2,J)                                                   ROTD-388
      IF (Q(J,1).GT.-36.D0*VAL(3,J)) P(J+8,1)=DEXP(Q(J,1)/VAL(3,J))     ROTD-389
      GO TO 2                                                           ROTD-390
    1 P(J,1)=VAL(2,J)                                                   ROTD-391
      DD(J-6)=P(J,1)**3                                                 ROTD-392
    2 CONTINUE                                                          ROTD-393
      DO 3 I=1,IQ1                                                      ROTD-394
    3 P(I+24,1)=1.D0                                                    ROTD-395
      RETURN                                                            ROTD-396
    4 IF (LO(3)) GO TO 18                                               ROTD-397
C *** SYMMETRIC ROTATIONAL MODEL ***************                        ROTD-398
      IDT=10                                                            ROTD-399
      IQ=IQM                                                            ROTD-400
      IF (INVZ.NE.0) IQ=MAX0(IQ,IMAX)                                   ROTD-401
      IQ2=IQM/2                                                         ROTD-402
      SR=1.D0                                                           ROTD-403
      DO 6 J=1,8                                                        ROTD-404
      IF (VAL(1,J).EQ.0.D0) GO TO 6                                     ROTD-405
      IF (LO(6)) SR=1.D0/VAL(2,J)                                       ROTD-406
      IF (LO(9).AND.(VAL(2,J).LT.0.D0)) SR=DABS(SR)                     ROTD-407
      DO 5 I=1,IQ2                                                      ROTD-408
    5 P(16+J,2*I)=SR*BETA(J,I)*DSQRT(DFLOAT(4*I+1)/(4.D0*PI))           ROTD-409
    6 CONTINUE                                                          ROTD-410
      DO 17 I=1,10                                                      ROTD-411
      PP(2)=XGN(I)                                                      ROTD-412
      PP(1)=1.D0                                                        ROTD-413
      DO 7 J=2,IQ                                                       ROTD-414
      C=1.D0/DFLOAT(J)                                                  ROTD-415
    7 PP(J+1)=(2.D0-C)*PP(2)*PP(J)+(C-1.D0)*PP(J-1)                     ROTD-416
      C1=1.D0-PP(2)**2                                                  ROTD-417
      DO 11 J=1,8                                                       ROTD-418
      IF (VAL(1,J).EQ.0.D0) GO TO 11                                    ROTD-419
      P(J,I)=0.D0                                                       ROTD-420
      Q(J,I+12)=0.D0                                                    ROTD-421
      Q(J,I+24)=0.D0                                                    ROTD-422
      Q(J,I)=1.D0                                                       ROTD-423
      DO 8 K=2,IQM,2                                                    ROTD-424
      C=K                                                               ROTD-425
      Q(J,I)=Q(J,I)+P(16+J,K)*PP(K+1)                                   ROTD-426
      Q(J,I+12)=Q(J,I+12)-C*P(16+J,K)*(PP(2)*PP(K+1)-PP(K))/C1          ROTD-427
    8 Q(J,I+24)=Q(J,I+24)-P(16+J,K)*PP(K+1)*C*(C+1.D0)                  ROTD-428
      C2=VAL(2,J)                                                       ROTD-429
      IF (LO(9).AND.(VAL(2,J).LE.0.D0)) C2=-C2                          ROTD-430
      DO 9 K=1,3                                                        ROTD-431
    9 Q(J,I+12*K-12)=-Q(J,I+12*K-12)*C2                                 ROTD-432
      IF ((J.GE.6).AND.(VAL(3,J).EQ.0.D0)) GO TO 10                     ROTD-433
      P(J+8,I)=1.D-16                                                   ROTD-434
      IF ((.NOT.LO(9)).OR.(VAL(2,J).GE.0.D0)) GO TO 11                  ROTD-435
      IF (Q(J,I).GT.-36.D0*VAL(3,J)) P(J+8,I)=DEXP(Q(J,I)/VAL(3,J))     ROTD-436
      GO TO 11                                                          ROTD-437
   10 P(J,I)=-Q(J,I)                                                    ROTD-438
      DD(J-6)=DD(J-6)+PGN(I)*(P(J,I)**3)                                ROTD-439
   11 CONTINUE                                                          ROTD-440
      DO 16 IJ=1,IQ1                                                    ROTD-441
      K=1                                                               ROTD-442
      IF (IJ.GT.INY) K=IVY(1,IJ-INY)/1000                               ROTD-443
      C=PP(K)                                                           ROTD-444
      IF ((IV(IJ).EQ.1).OR.(IJ.LE.INY)) GO TO 16                        ROTD-445
      KB=MOD(IVY(1,IJ-INY),1000)                                        ROTD-446
      KL=NBETA(17,KB)                                                   ROTD-447
      KK=NBETA(18,KB)                                                   ROTD-448
      IF (IVY(6,IJ-INY).LT.0) KL=MOD(KL,2)                              ROTD-449
      IF (KK.NE.0) GO TO 12                                             ROTD-450
      C=C*PP(KL+1)*DSQRT(DFLOAT(2*KL+1))                                ROTD-451
      GO TO 16                                                          ROTD-452
C COMPUTATION OF Y(K-1,KK) * Y(KL,KK)                                   ROTD-453
   12 C=DSQRT(2.D0*KL+1.D0)                                             ROTD-454
      DO 13 KB=1,KK                                                     ROTD-455
   13 C=C*C1*DFLOAT(2*KB-1)**2/DSQRT(DFLOAT((KL+KB)*(K-KB)*(KL-KB+1)*(K+ROTD-456
     1KB-1)))                                                           ROTD-457
      KZ=K-1-KK                                                         ROTD-458
      DO 15 J=1,2                                                       ROTD-459
      IF (KZ.LE.0) GO TO 15                                             ROTD-460
      D=0.D0                                                            ROTD-461
      DO 14 KB=1,KZ                                                     ROTD-462
      C2=D                                                              ROTD-463
      D=C                                                               ROTD-464
   14 C=C2+(D*PP(2)-C2)*DFLOAT(2*(KK+KB)-1)/DFLOAT(KB)                  ROTD-465
   15 KZ=KL-KK                                                          ROTD-466
   16 P(IJ+24,I)=PGN(I)*C*DSQRT(DFLOAT(2*K-1))                          ROTD-467
   17 CONTINUE                                                          ROTD-468
      RETURN                                                            ROTD-469
C *** ASYMMETRIC ROTATIONAL MODEL ***************                       ROTD-470
   18 IDT=36                                                            ROTD-471
      DO 21 J=1,8                                                       ROTD-472
      DO 20 I=1,IQM                                                     ROTD-473
      IF (NK(I+1).EQ.0) GO TO 19                                        ROTD-474
      P(16+J,I+1)=P(16+J,I)*DSIN(PI*BETA(J,I)/180.D0)                   ROTD-475
      P(16+J,I)=P(16+J,I)*DCOS(PI*BETA(J,I)/180.D0)                     ROTD-476
      GO TO 20                                                          ROTD-477
   19 P(16+J,I+1)=BETA(J,I)*DSQRT(DFLOAT(2*NL(I+1)+1)/(4.D0*PI))        ROTD-478
   20 CONTINUE                                                          ROTD-479
   21 CONTINUE                                                          ROTD-480
      SR=1.D0                                                           ROTD-481
      DO 23 J=1,8                                                       ROTD-482
      IF (VAL(1,J).EQ.0.D0) GO TO 23                                    ROTD-483
      IF (LO(6)) SR=1.D0/VAL(2,J)                                       ROTD-484
      IF (LO(9).AND.(VAL(2,J).LT.0.D0)) SR=DABS(SR)                     ROTD-485
      DO 22 I=1,IQM                                                     ROTD-486
      IF (NK(I+1).NE.0) P(16+J,I+1)=P(16+J,I+1)*1.414213562D0           ROTD-487
   22 P(16+J,I+1)=SR*P(16+J,I+1)                                        ROTD-488
   23 CONTINUE                                                          ROTD-489
      I=0                                                               ROTD-490
      DO 29 L=1,8                                                       ROTD-491
      PHI=PI/DFLOAT(4*MAX0(1,L-1))                                      ROTD-492
      DO 28 M=1,L                                                       ROTD-493
      I=I+1                                                             ROTD-494
      DO 24 J=1,IQ1                                                     ROTD-495
      K=1                                                               ROTD-496
      IF (J.GT.INY) K=IVY(1,J-INY)/1000                                 ROTD-497
   24 P(J+24,I)=POIDS(I,K)                                              ROTD-498
      DO 27 J=1,8                                                       ROTD-499
      IF (VAL(1,J).EQ.0.D0) GO TO 27                                    ROTD-500
      P(J,I)=0.D0                                                       ROTD-501
      R=1.D0                                                            ROTD-502
      DO 25 K=1,IQM                                                     ROTD-503
   25 R=R+P(16+J,K+1)*RB(K+1,L)*DCOS(DFLOAT(NK(K+1)*NK(I))*PHI)         ROTD-504
      Q(J,I)=-R*VAL(2,J)                                                ROTD-505
      IF ((J.GE.6).AND.(VAL(3,J).EQ.0.D0)) GO TO 26                     ROTD-506
      P(J+8,I)=1.D-16                                                   ROTD-507
      IF ((.NOT.LO(9)).OR.(VAL(2,J).GE.0.D0)) GO TO 27                  ROTD-508
      Q(J,I)=-Q(J,I)                                                    ROTD-509
      IF (Q(J,I).GT.-36.D0*VAL(3,J)) P(J+8,I)=DEXP(Q(J,I)/VAL(3,J))     ROTD-510
      GO TO 27                                                          ROTD-511
   26 P(J,I)=R*DABS(VAL(2,J))                                           ROTD-512
      DD(J-6)=DD(J-6)+POIDS(I,1)*(P(J,I)**3)                            ROTD-513
   27 CONTINUE                                                          ROTD-514
   28 CONTINUE                                                          ROTD-515
   29 CONTINUE                                                          ROTD-516
      RETURN                                                            ROTD-517
      END                                                               ROTD-518
C 29/07/12                                                      ECIS12  ROTZ-000
      SUBROUTINE ROTZ(ISM,WV,IT,V,Q,CHB,ITX,LO)                         ROTZ-001
C  DERIVATIONS NEEDED FOR SPIN-ORBIT INTERACTIONS OR DIRAC EQUATION.    ROTZ-002
C INPUT:     ISM:     NUMBER OF STEPS FOR INTEGRATION.                  ROTZ-003
C            WV:      STEP SIZE IN WV(8,*).                             ROTZ-004
C            IT:      NUMBER OF TRANSITION FORM FACTORS.                ROTZ-005
C            V:       FORM FACTORS BEFORE DERIVATIONS.                  ROTZ-006
C            CHB:     PLANCK CONSTANT /(2*PI) IN MEV*FERMI.             ROTZ-007
C            ITX:     STARTING ADDRESS OF DIFFERENT FORM FACTORS.       ROTZ-008
C            LO(I):   LOGICAL CONTROLS:                                 ROTZ-009
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              ROTZ-010
C               LO(12) =.TRUE. DEFORMED IMAGINARY CENTRAL POTENTIAL.    ROTZ-011
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      ROTZ-012
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. ROTZ-013
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   ROTZ-014
C OUTPUT:    V:       POTENTIALS AND TRANSITION FORM FACTORS AT THE     ROTZ-015
C                     ADDRESSES GIVEN BY ITX.                           ROTZ-016
C WORKING AREA:                                                         ROTZ-017
C            Q:       COPY OF TRANSITIONS FOR FACTORS AND DERIVATIVES.  ROTZ-018
C***********************************************************************ROTZ-019
      IMPLICIT REAL*8 (A-H,O-Z)                                         ROTZ-020
      LOGICAL LO(150)                                                   ROTZ-021
      DIMENSION V(ISM,*),Q(ISM,*),WV(22,*),ITX(16)                      ROTZ-022
      XP=CHB**2/(2.D0*WV(6,1))                                          ROTZ-023
      HTMP=WV(8,1)                                                      ROTZ-024
      XE=WV(7,1)                                                        ROTZ-025
      XM=WV(6,1)                                                        ROTZ-026
      DO 1 IS=1,ISM                                                     ROTZ-027
      Q(IS,1)=XE+XM+V(IS,ITX(1)+1)-V(IS,ITX(3)+1)-V(IS,ITX(7)+1)        ROTZ-028
      Q(IS,2)=V(IS,ITX(2)+1)-V(IS,ITX(4)+1)                             ROTZ-029
      DD=Q(IS,1)**2+Q(IS,2)**2                                          ROTZ-030
      Q(IS,3)=Q(IS,1)/DD                                                ROTZ-031
      Q(IS,4)=-Q(IS,2)/DD                                               ROTZ-032
    1 CONTINUE                                                          ROTZ-033
      CALL DERI(Q(1,5),Q(1,1),HTMP,ISM)                                 ROTZ-034
      CALL DERI(Q(1,6),Q(1,2),HTMP,ISM)                                 ROTZ-035
      CALL DERI(Q(1,7),Q(1,5),HTMP,ISM)                                 ROTZ-036
      CALL DERI(Q(1,8),Q(1,6),HTMP,ISM)                                 ROTZ-037
      CALL DERI(Q(1,9),V(1,ITX(5)+1),HTMP,ISM)                          ROTZ-038
      CALL DERI(Q(1,10),V(1,ITX(6)+1),HTMP,ISM)                         ROTZ-039
      CALL DERI(Q(1,11),V(1,ITX(8)+1),HTMP,ISM)                         ROTZ-040
      CALL DERI(Q(1,12),Q(1,9),HTMP,ISM)                                ROTZ-041
      CALL DERI(Q(1,13),Q(1,10),HTMP,ISM)                               ROTZ-042
      CALL DERI(Q(1,14),Q(1,11),HTMP,ISM)                               ROTZ-043
      M=14                                                              ROTZ-044
      IF (IT.EQ.0) GO TO 7                                              ROTZ-045
      DO 3 J=1,16*IT                                                    ROTZ-046
      DO 2 IS=1,ISM                                                     ROTZ-047
    2 Q(IS,14+J)=0.D0                                                   ROTZ-048
    3 CONTINUE                                                          ROTZ-049
      DO 5J=1,8*IT                                                      ROTZ-050
      I=1+J/8                                                           ROTZ-051
      L=MOD(J-1,8)+1                                                    ROTZ-052
      K=0                                                               ROTZ-053
      IF ((L.GT.4).AND.(L.NE.7)) K=IT                                   ROTZ-054
      IF ((L.EQ.2).AND.(.NOT.LO(12))) GO TO 5                           ROTZ-055
      IF ((L.EQ.4).AND.(.NOT.LO(12))) GO TO 5                           ROTZ-056
      IF ((L.EQ.5).AND.(.NOT.LO(13))) GO TO 5                           ROTZ-057
      IF ((L.EQ.6).AND.(.NOT.LO(14))) GO TO 5                           ROTZ-058
      IF ((L.EQ.7).AND.(.NOT.LO(11))) GO TO 5                           ROTZ-059
      IF ((L.EQ.8).AND.(.NOT.LO(19))) GO TO 5                           ROTZ-060
      DO 4 IS=1,ISM                                                     ROTZ-061
    4 Q(IS,14+J)=V(IS,ITX(L+8)+K+I)                                     ROTZ-062
    5 CONTINUE                                                          ROTZ-063
      L=14+8*IT                                                         ROTZ-064
      DO 6 J=1,IT                                                       ROTZ-065
      CALL DERI(Q(1,L+8*J-7),Q(1,M+8*J-7),HTMP,ISM)                     ROTZ-066
      IF (LO(12)) CALL DERI(Q(1,L+8*J-6),Q(1,M+8*J-6),HTMP,ISM)         ROTZ-067
      CALL DERI(Q(1,L+8*J-5),Q(1,M+8*J-5),HTMP,ISM)                     ROTZ-068
      IF (LO(12)) CALL DERI(Q(1,L+8*J-4),Q(1,M+8*J-4),HTMP,ISM)         ROTZ-069
      IF (LO(13)) CALL DERI(Q(1,L+8*J-3),Q(1,M+8*J-3),HTMP,ISM)         ROTZ-070
      IF (LO(14)) CALL DERI(Q(1,L+8*J-2),Q(1,M+8*J-2),HTMP,ISM)         ROTZ-071
      IF (LO(11)) CALL DERI(Q(1,L+8*J-1),Q(1,M+8*J-1),HTMP,ISM)         ROTZ-072
      IF (LO(19)) CALL DERI(Q(1,L+8*J),Q(1,M+8*J),HTMP,ISM)             ROTZ-073
    6 CONTINUE                                                          ROTZ-074
    7 L=M-8                                                             ROTZ-075
      K=L+8*IT                                                          ROTZ-076
      DO 9 IS=1,ISM                                                     ROTZ-077
      R=HTMP*IS                                                         ROTZ-078
      C1=Q(IS,1)                                                        ROTZ-079
      C2=Q(IS,2)                                                        ROTZ-080
      BR=Q(IS,7)                                                        ROTZ-081
      BI=Q(IS,8)                                                        ROTZ-082
      DR=Q(IS,3)                                                        ROTZ-083
      DI=Q(IS,4)                                                        ROTZ-084
      D1=Q(IS,5)                                                        ROTZ-085
      D2=Q(IS,6)                                                        ROTZ-086
      C3=XE-XM-V(IS,ITX(1)+1)-V(IS,ITX(3)+1)-V(IS,ITX(7)+1)             ROTZ-087
      C4=-V(IS,ITX(2)+1)-V(IS,ITX(4)+1)                                 ROTZ-088
      C5=(C1*C3-C2*C4-XE**2+XM**2)/(2.D0*XM)                            ROTZ-089
      C6=(C1*C4+C2*C3)/(2.D0*XM)                                        ROTZ-090
      CR=-D1*DR+D2*DI+(Q(IS,9)+Q(IS,11))/XM                             ROTZ-091
      CI=-D2*DR-D1*DI+Q(IS,10)/XM                                       ROTZ-092
      CC=V(IS,ITX(7)+1)*XE/XM                                           ROTZ-093
      ER=BR*DR-BI*DI+(DR+Q(IS,11))/XM*(CR+CR-(DR+Q(IS,11))/XM)-Q(IS     ROTZ-094
     1,10)/XM*(CI+CI-Q(IS,10)/XM)-(Q(IS,12)+Q(IS,14))/XM+2.D0*CR/R      ROTZ-095
      EI=BR*DI+BI*DR+(Q(IS,9)+Q(IS,11))/XM*(CI+CI-D2/XM)+D2/XM*(CR+     ROTZ-096
     1CR-(Q(IS,9)+Q(IS,11))/XM)-Q(IS,13)/XM+2.D0*CI/R                   ROTZ-097
      C5=C5-(.75D0*(CR**2-CI**2)-.5D0*ER)*XP                            ROTZ-098
      C6=C6-(1.5D0*CR*CI-.5D0*EI)*XP                                    ROTZ-099
      V(IS,ITX(1)+1)=C5+CC                                              ROTZ-100
      V(IS,ITX(2)+1)=C6                                                 ROTZ-101
      V(IS,ITX(3)+1)=0.D0                                               ROTZ-102
      V(IS,ITX(4)+1)=0.D0                                               ROTZ-103
      V(IS,ITX(5)+1)=-.5D0*(0.5D0*DLOG(C1**2+C2**2)-V(IS,ITX(5)+1)/XM)*XROTZ-104
     1P                                                                 ROTZ-105
      V(IS,ITX(6)+1)=-.5D0*(DATAN2(C2,C1)-V(IS,ITX(6)+1)/XM)*XP         ROTZ-106
      V(IS,ITX(7)+1)=CC                                                 ROTZ-107
      IF (IT.EQ.0) GO TO 9                                              ROTZ-108
C COMPUTATION OF FIRST ORDER.                                           ROTZ-109
      DO 8 I=1,IT                                                       ROTZ-110
      C1R=Q(IS,L+8*I+1)-Q(IS,L+8*I+3)-Q(IS,L+8*I+7)                     ROTZ-111
      C2R=Q(IS,L+8*I+2)-Q(IS,L+8*I+4)                                   ROTZ-112
      DRR=-(DR*DR-DI*DI)*C1R+2.D0*DR*DI*C2R                             ROTZ-113
      DIR=-(DR*DR-DI*DI)*C2R-2.D0*DR*DI*C1R                             ROTZ-114
      C3R=-Q(IS,L+8*I+1)-Q(IS,L+8*I+3)                                  ROTZ-115
      C4R=-Q(IS,L+8*I+2)-Q(IS,L+8*I+4)                                  ROTZ-116
      C5R=(C1R*C3-C2R*C4+C1*C3R-C2*C4R)/(2.D0*XM)                       ROTZ-117
      C6R=(C1R*C4+C2R*C3+C1*C4R+C2*C3R)/(2.D0*XM)                       ROTZ-118
      D1R=Q(IS,K+8*I+3)-Q(IS,K+8*I+1)+Q(IS,K+8*I+7)                     ROTZ-119
      D2R=Q(IS,K+8*I+4)-Q(IS,K+8*I+2)                                   ROTZ-120
      CRR=D1R*DR-D2R*DI-D1*DRR+D2*DIR+Q(IS,K+8*I+5)/XM                  ROTZ-121
      CIR=D2R*DR+D1R*DI-D2*DRR-D1*DIR+Q(IS,K+8*I+6)/XM                  ROTZ-122
      ER=BR*DRR-BI*DIR+(Q(IS,L+8*I+5)+Q(IS,L+8*I+8))/XM*(CRR+CRR-Q(IS,K+ROTZ-123
     18*I+5)/XM)-Q(IS,L+8*I+6)/XM*(CIR+CIR-Q(IS,K+8*I+6)/XM)+Q(IS,K+8*I+ROTZ-124
     25)/XM*(CR+CR-(Q(IS,L+8*I+5)+Q(IS,L+8*I+8))/XM)-Q(IS,K+8*I+6)/XM*(CROTZ-125
     3I+CI-Q(IS,L+8*I+6)/XM)+2.D0*CRR/R                                 ROTZ-126
      EI=BR*DIR+BI*DRR+(Q(IS,L+8*I+5)+Q(IS,L+8*I+8))/XM*(CIR+CIR-Q(IS,K+ROTZ-127
     18*I+6)/XM)+Q(IS,L+8*I+6)/XM*(CRR+CRR-Q(IS,K+8*I+5)/XM)+Q(IS,K+8*I+ROTZ-128
     25)/XM*(CI+CI-Q(IS,K+8*I+6)/XM)+Q(IS,K+8*I+6)/XM*(CR+CR-Q(IS,K+8*I+ROTZ-129
     35)/XM)+2.D0*CIR/R                                                 ROTZ-130
      V(IS,ITX(9)+1)=C5R-(1.5D0*(CR*CRR-CI*CIR)-.5D0*ER)*XP             ROTZ-131
      IF (LO(12)) V(IS,ITX(10)+1)=C6R-(1.5D0*(CRR*CI+CR*CIR)-.5D0*EI)*XPROTZ-132
      V(IS,ITX(11)+1)=0.D0                                              ROTZ-133
      V(IS,ITX(12)+I)=0.D0                                              ROTZ-134
      IF (LO(13)) V(IS,ITX(13)+I+IT)=-.5D0*XP*(C1R*DR-C2R*DI-V(IS,ITX(13ROTZ-135
     1)+I+IT)/XM)                                                       ROTZ-136
      IF (LO(14)) V(IS,ITX(14)+I+IT)=-.5D0*XP*(C1R*DI+C2R*DR-V(IS,ITX(14ROTZ-137
     1)+I+IT)/XM)                                                       ROTZ-138
      IF (LO(11)) V(IS,ITX(15)+I)=Q(IS,K+8*I+7)*XE/XM                   ROTZ-139
      IF (LO(19)) V(IS,ITX(16)+I+IT)=Q(IS,K+8*I+6)                      ROTZ-140
    8 CONTINUE                                                          ROTZ-141
    9 CONTINUE                                                          ROTZ-142
      RETURN                                                            ROTZ-143
      END                                                               ROTZ-144
C 15/08/12                                                      ECIS12  WOSA-000
      SUBROUTINE WOSA(V,A,P,CC,R,N,LX)                                  WOSA-001
C COMPUTATION OF WOODS-SAXON FORM-FACTORS AT SOME POWER AND THEIR       WOSA-002
C DERIVATIVES.                                                          WOSA-003
C LIMITED TO THE SIXTH DERIVATIVE (THE FOURTH ONE ONLY IS USED IN ECIS).WOSA-004
C INPUT:     A:       DIFFUSENESS.                                      WOSA-005
C            P:       THE WOOD-SAXON PARAMETERS ARE AT THE POWER (1+P). WOSA-006
C            CC:      VALUE OF EXP(-(R-RR/A) WHERE R IS THE RADIUS.     WOSA-007
C            R:       VALUE OF RADIUS OF THE FORM FACTOR CHANGED OF SIGNWOSA-008
C            N:       NUMBER OF VALUES (ONE PLUS HIGHEST DERIVATIVE).   WOSA-009
C            LX:      LOGICAL FALSE FOR SYMMETRISED FORM-FACTORS.       WOSA-010
C OUTPUT:    V:       FORM-FACTORS AND ITS DERIVATIVES.                 WOSA-011
C***********************************************************************WOSA-012
      IMPLICIT REAL*8 (A-H,O-Z)                                         WOSA-013
      LOGICAL LX                                                        WOSA-014
      DIMENSION V(6),VV(6,2)                                            WOSA-015
      COMMON /INOUT/ MR,MW,MS                                           WOSA-016
      IF (N.GT.6) GO TO 6                                               WOSA-017
      C=CC                                                              WOSA-018
      K=1                                                               WOSA-019
C FORM-FACTOR AND ITS DERIVATIVES.                                      WOSA-020
    1 B=1.D0/(1.D0+C)                                                   WOSA-021
      V(1)=B**(P+1.D0)                                                  WOSA-022
      IF (N.EQ.1) GO TO 2                                               WOSA-023
      V(2)=B*(P+1.D0)*C*V(1)/A                                          WOSA-024
      IF (N.EQ.2) GO TO 2                                               WOSA-025
      V(3)=B*(P*C+C-1.D0)*V(2)/A                                        WOSA-026
      IF (N.EQ.3) GO TO 2                                               WOSA-027
      V(4)=B*((P*C+C-2.D0)*V(3)-V(2)/A)/A                               WOSA-028
      IF (N.EQ.4) GO TO 2                                               WOSA-029
      V(5)=B*((P*C+2.D0*C-2.D0)*V(4)-(P*C+C+1.D0)*V(3)/A)/A             WOSA-030
      IF (N.EQ.5) GO TO 2                                               WOSA-031
      V(6)=B*((P*C+2.D0*C-3.D0)*V(5)-((P*C+C+3.D0)*V(4)+V(3)/A)/A)/A    WOSA-032
    2 IF ((.NOT.LX).OR.(R.LT.0.D0)) RETURN                              WOSA-033
C STORAGE OF INTERMEDIATE RESULTS FOR SYMMETRISATION.                   WOSA-034
      DO 3 I=1,N                                                        WOSA-035
    3 VV(I,K)=V(I)                                                      WOSA-036
      C=DEXP(2.D0*R/A)/C                                                WOSA-037
      K=K+1                                                             WOSA-038
      IF (K.EQ.2) GO TO 1                                               WOSA-039
C SYMMETRISATION.                                                       WOSA-040
      DO 5 L=1,6                                                        WOSA-041
      V(L)=VV(L,1)*VV(1,2)                                              WOSA-042
      IF (L.EQ.1) GO TO 5                                               WOSA-043
      A1=1.D0                                                           WOSA-044
      DO 4 J=2,L                                                        WOSA-045
      A1=-A1*DFLOAT(L-J+1)/DFLOAT(J-1)                                  WOSA-046
    4 V(L)=V(L)+A1*VV(L-J+1,1)*VV(J,2)                                  WOSA-047
    5 CONTINUE                                                          WOSA-048
      RETURN                                                            WOSA-049
    6 WRITE (MW,1000) N                                                 WOSA-050
      STOP                                                              WOSA-051
 1000 FORMAT (5X,I5,' VALUES ASKED IN SUBROUTINE WOSA TOO LARGE (LIMITATWOSA-052
     1ION TO 6.'///' IN WOSA  ...  STOP  ...')                          WOSA-053
      END                                                               WOSA-054
C 29/09/12                                                      ECIS12  COPO-000
      SUBROUTINE COPO(W,V,Q,ISM,H,L,VAL,VAC,CCZ,ZT)                     COPO-001
C COMPUTES THE COULOMB POTENTIAL OF THE CHARGE DISTRIBUTION STORED IN V.COPO-002
C INPUT:     V:       CHARGE DISTRIBUTION UNNORMALISED.                 COPO-003
C            H:       STEP SIZE.                                        COPO-004
C            ISM:     NUMBER OF POINTS.                                 COPO-005
C            L:       ANGULAR MOMENTUM, RETURN 0 IF L IS NEGATIVE.      COPO-006
C            VAL:     PRODUCT OF CHARGES IS IN VAL(1).                  COPO-007
C            VAC:     PARAMETER OF CHARGE DISTRIBUTION.                 COPO-008
C OUTPUT:    W:       FORM FACTOR WHICH CAN BE AT THE SAME PLACE AS V.  COPO-009
C            ZT:      NORMALISATION FACTOR COMPUTED WHEN L=0 AND USED   COPO-010
C                     WHEN L IS NOT ZERO. THIS SUBROUTINE SHOULD BE     COPO-011
C                     CALLED FIRST FOR THE COULOMB POTENTIAL AND AFTER  COPO-012
C                     FOR ITS MULTIPOLES.                               COPO-013
C WORKING AREA:                                                         COPO-014
C            Q:       WHICH CAN BE AT THE SAME PLACE AS W.              COPO-015
C***********************************************************************COPO-016
      IMPLICIT REAL*8 (A-H,O-Z)                                         COPO-017
      DIMENSION W(ISM),V(ISM),Q(ISM,5)                                  COPO-018
      IF (L.GE.0) GO TO 2                                               COPO-019
      DO 1 IS=1,ISM                                                     COPO-020
    1 V(IS)=0.D0                                                        COPO-021
      RETURN                                                            COPO-022
    2 RR=0.D0                                                           COPO-023
      DO 3 IS=1,ISM                                                     COPO-024
      RR=RR+H                                                           COPO-025
      V(IS)=V(IS)*(1.D0+VAC*RR*RR)                                      COPO-026
      Q(IS,4)=RR**L                                                     COPO-027
      Q(IS,3)=Q(IS,4)/RR                                                COPO-028
      Q(IS,5)=Q(IS,4)*RR                                                COPO-029
    3 Q(IS,1)=Q(IS,5)*RR                                                COPO-030
      V(ISM)=0.D0                                                       COPO-031
      V(ISM-1)=0.D0                                                     COPO-032
      Q(1,1)=Q(1,1)*V(1)                                                COPO-033
      Q(ISM,2)=0.D0                                                     COPO-034
      DO 4 IS=2,ISM                                                     COPO-035
      JS=ISM+1-IS                                                       COPO-036
      Q(IS,1)=Q(IS-1,1)+Q(IS,1)*V(IS)                                   COPO-037
    4 Q(JS,2)=Q(JS+1,2)+V(JS+1)/Q(JS+1,3)                               COPO-038
      ZZ=1.D0/DFLOAT(2*L+1)                                             COPO-039
      IF (L.NE.0) GO TO 5                                               COPO-040
      ZT=CCZ*VAL/Q(ISM,1)                                               COPO-041
    5 ZZ=ZT*ZZ                                                          COPO-042
      C=DFLOAT(2*L+1)*H/12.D0                                           COPO-043
      DO 6 IS=1,ISM                                                     COPO-044
    6 W(IS)=(Q(IS,1)/Q(IS,5)+Q(IS,2)*Q(IS,4)+C*V(IS))*ZZ                COPO-045
      RETURN                                                            COPO-046
      END                                                               COPO-047
C 03/11/12                                                      ECIS12  STDP-000
      SUBROUTINE STDP(V,IVY,ISM,VAL,NVAL,NX,IDX,X,WV,PGN,XGN,NPP,IZZ,P,ISTDP-001
     1PP,CCZ,LO)                                                        STDP-002
C COMPUTES FORM FACTORS INDEPENDENTLY OF MODELS.                        STDP-003
C INPUT:     IVY:     TABLE OF FORM FACTORS (SEE REDM).                 STDP-004
C            ISM:     NUMBER OF INTEGRATION STEPS.                      STDP-005
C            VAL,NVAL:FOR OPTICAL MODEL PARAMETERS TO USE HERE.         STDP-006
C            NX:      LENGTH OF WORKING SPACE.                          STDP-007
C            WV:      STEP SIZE IN WV(8,*).                             STDP-008
C            PGN:     WEIGHTS OF GAUSS-LEGENDRE INTEGRATION             STDP-009
C            XGN:   : ABSCISSAE OF GAUSS-LEGENDRE INTEGRATION.          STDP-010
C            NPP:     NUMBER OF OPTICAL POTENTIALS.                     STDP-011
C            ACONV:   VALUE BELOW WHICH THE FOLDING IS NEGLECTED.       STDP-012
C            IPP:     CROSS-REFERENCE TO POTENTIALS IN IPI(1,*).        STDP-013
C            CCZ:     COULOMB ALPHA CONSTANT.                           STDP-014
C            LO(I):   LOGICAL CONTROLS:                                 STDP-015
C               LO(6)  =.TRUE. USE DEFORMATION LENGTHS.                 STDP-016
C               LO(9)  =.TRUE. SYMMETRISED WOODS-SAXON FORM FACTORS WHENSTDP-017
C                              THE RADIUS IS NEGATIVE.                  STDP-018
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              STDP-019
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      STDP-020
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. STDP-021
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   STDP-022
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      STDP-023
C               LO(109)=.TRUE. FOR DIRAC POTENTIALS.                    STDP-024
C OUTPUT:    V:       ELASTIC AND INELASTIC FORM FACTORS IN THE SEQUENCESTDP-025
C                     CENTRAL-REAL, SPIN-ORBIT-REAL, TRANSITION REAL,   STDP-026
C                     TRANSITION SPIN-ORBIT-REAL, IMAGINARY POTENTIALS  STDP-027
C                     FOLLOWED BY COULOMB, COULOMB TRANSITION POTENTIALSSTDP-028
C            IDX:     LENGTH OF WORKING FIELD USED.                     STDP-029
C WORKING AREAS:                                                        STDP-030
C            X,P:     TO COMPUTE BOUND FUNCTIONS, FOLD COULOMB POTENTIALSTDP-031
C                     AND COMPUTE ROTATIONAL FORM FACTORS AND BESSEL    STDP-032
C                     FUNCTIONS, IN EQUIVALENCE BY CALL.                STDP-033
C            IZZ:     FOR FOLDING.                                      STDP-034
C                                                                       STDP-035
C FOR THE COMMON  /POTE1/ SEE REDM.                                     STDP-036
C                                                                       STDP-037
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE1/:                     STDP-038
C  ITX(16):   STARTING ADDRESS OF DIFFERENT FORM FACTORS (SEE REDM).    STDP-039
C  IMAX:      MAXIMUM ANGULAR MOMENTUM.                                 STDP-040
C  INTC:      NUMBER OF FORM FACTORS WITHOUT DEFORMED SPIN-ORBIT        STDP-041
C             INCLUDING CORRECTION TERMS.                               STDP-042
C  ITXM:      TOTAL NUMBER OF FORM FACTORS.                             STDP-043
C  NFO:       NUMBER OF SETS OF FOLDING PARAMETERS.                     STDP-044
C   USED:     ITX,INTC,ITXM,NFO                                         STDP-045
C                                                                       STDP-046
C***********************************************************************STDP-047
      IMPLICIT REAL*8 (A-H,O-Z)                                         STDP-048
      LOGICAL LO(150)                                                   STDP-049
      DIMENSION V(ISM,*),IVY(7,*),VAL(*),NVAL(2,*),X(3,*),WV(22,*),PGN(1STDP-050
     10),XGN(10),IZZ(4,*),P(*),NIJ(3),ITZ(10),ZB(77),ZB1(40),ZB2(37),Y(3STDP-051
     2),VR(6),CL(8),IPP(34,*)                                           STDP-052
      COMMON /INOUT/ MR,MW,MS                                           STDP-053
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM,NFO          STDP-054
      EQUIVALENCE (ZB1,ZB),(ZB2,ZB(41))                                 STDP-055
      DATA NIJ /1,24,11/                                                STDP-056
      DATA PIS2 /1.5707963267949D0/                                     STDP-057
      DATA ITZ /3,3,3,3,4,5,3,3,5,5/                                    STDP-058
      DATA ZB1 /4.49340945790906D0,7.72525183693771D0,5.76345919689455D0STDP-059
     1,9.09501133047635D0,12.3229409705666D0,6.98793200050052D0,10.41711STDP-060
     285473794D0,13.6980231532492D0,16.9236212852138D0,8.18256145257124DSTDP-061
     30,11.7049071545704D0,15.0396647076165D0,18.3012559595420D0,21.5254STDP-062
     4177333999D0,9.35581211104275D0,12.9665301727743D0,16.3547096393505STDP-063
     5D0,19.6531521018212D0,22.9045506479037D0,26.1277501372255D0,10.512STDP-064
     68354080940D0,14.2073924588425D0,17.6479748701659D0,20.983463068944STDP-065
     78D0,24.2627680423970D0,27.5078683649043D0,30.7303807316466D0,11.65STDP-066
     870321925164D0,15.4312892102684D0,18.9229991985461D0,22.29534801913STDP-067
     908D0,25.6028559538106D0,28.8703733470427D0,32.1111962396826D0,35.3STDP-068
     A331941827165D0,12.7907817119721D0,16.6410028815122D0,20.1824707649STDP-069
     B492D0,23.5912748179830D0,26.9270407788180D0/                      STDP-070
      DATA ZB2 /30.2172627093614D0,33.4768008195015D0,36.7145291272447D0STDP-071
     1,39.9361278108677D0,13.9158226105049D0,17.8386431992053D0,21.42848STDP-072
     269721154D0,24.8732139238751D0,28.2371343599681D0,31.5501883818318DSTDP-073
     30,34.8286965376857D0,38.0824790873276D0,41.3178646902445D0,44.5391STDP-074
     4446334095D0,15.0334693037434D0,19.0258535361278D0,22.6627206581361STDP-075
     5D0,26.1427676433791D0,29.5346341078439D0,32.8705345976875D0,36.168STDP-076
     61571359112D0,39.4382144800081D0,42.6876512846611D0,45.921201763835STDP-077
     76D0,49.1422214247461D0,16.1447429423013D0,20.2039426328117D0,23.88STDP-078
     865307559684D0,27.4012592588663D0,30.8207940864510D0,34.17947466648STDP-079
     932D0,37.4962736357858D0,40.7827470981251D0,44.0464252109438D0,47.2STDP-080
     A924656052694D0,50.5245397255712D0,53.7453428657930D0/             STDP-081
      NQCT=0                                                            STDP-082
      IDX=0                                                             STDP-083
      N=ITXM                                                            STDP-084
      DO 2 I=1,N                                                        STDP-085
      DO 1 J=1,4                                                        STDP-086
    1 IZZ(J,I)=0                                                        STDP-087
    2 CONTINUE                                                          STDP-088
      IF (INTC.EQ.0) GO TO 7                                            STDP-089
      NTTTMP=24*NPP+ITX(7)                                              STDP-090
      DO 6 I=1,INTC                                                     STDP-091
      IF (LO(100)) GO TO 4                                              STDP-092
      DO 3 J=9,12                                                       STDP-093
    3 IZZ(3,ITX(J)+I)=IVY(7,I)                                          STDP-094
      IF (LO(13)) IZZ(3,ITX(13)+I+INTC)=IVY(7,I)                        STDP-095
      IF (LO(14)) IZZ(3,ITX(14)+I+INTC)=IVY(7,I)                        STDP-096
      IF (LO(11)) IZZ(3,ITX(15)+I)=IVY(7,I)                             STDP-097
      IF (LO(19)) IZZ(3,ITX(16)+I+INTC)=IVY(7,I)                        STDP-098
      GO TO 6                                                           STDP-099
    4 DO 5 J=1,8                                                        STDP-100
    5 IZZ(3,NTTTMP+J)=IVY(7,I)                                          STDP-101
    6 NTTTMP=NTTTMP+11                                                  STDP-102
    7 NMA=NVAL(1,1)                                                     STDP-103
    8 IF (NMA.GE.NVAL(1,2)) GO TO 88                                    STDP-104
      I1=NVAL(1,NMA)                                                    STDP-105
      IV=NVAL(2,NMA)                                                    STDP-106
      ITV=MOD(I1-1,8)+1                                                 STDP-107
      J1=(I1-1)/8                                                       STDP-108
      ITT=ITV                                                           STDP-109
      INL=0                                                             STDP-110
      IF (J1.GT.NPP) ITT=ITV+8                                          STDP-111
      IF (LO(100)) GO TO 9                                              STDP-112
      JI=1                                                              STDP-113
      IJ=1                                                              STDP-114
      IF (J1.GT.NPP) J1=J1-NPP                                          STDP-115
      IF ((ITT-13)*(ITT-14)*(ITT-16).EQ.0.D0) INL=INTC                  STDP-116
      L1=J1+ITX(ITT)+INL                                                STDP-117
      GO TO 12                                                          STDP-118
    9 IF (J1.LE.NPP) GO TO 10                                           STDP-119
      JI=3                                                              STDP-120
      IF (ITT.EQ.16) INL=3                                              STDP-121
      L1=24*NPP+11*(J1-NPP-1)+ITV                                       STDP-122
      L1=L1+ITX(7)                                                      STDP-123
      GO TO 11                                                          STDP-124
   10 INL=8                                                             STDP-125
      JI=2                                                              STDP-126
      L1=ITV+24*(J1-1)                                                  STDP-127
      L1=L1+ITX(7)                                                      STDP-128
   11 IJ=1+INL/3                                                        STDP-129
   12 IF (IV.NE.16) GO TO 15                                            STDP-130
C FORM FACTOR COPIED.                                                   STDP-131
      L3=0                                                              STDP-132
      L2=L1+NIJ(JI)*(NVAL(2,NMA+1)-I1)/8                                STDP-133
      DO 14 J=1,IJ                                                      STDP-134
      DO 13 IS=1,ISM                                                    STDP-135
   13 V(IS,L1+L3)=V(IS,L2+L3)*VAL(NMA+3)                                STDP-136
   14 L3=L3+INL                                                         STDP-137
      IZZ(1,L1)=-NVAL(1,NMA+1)                                          STDP-138
      IZZ(2,L1)=IZZ(2,L2)                                               STDP-139
      IZZ(4,L1)=IZZ(4,L2)                                               STDP-140
      GO TO 87                                                          STDP-141
   15 J=MAX0(IV,1)                                                      STDP-142
      NMB=NMA+ITZ(J)                                                    STDP-143
      IF (IV.LT.0) NMB=NMB+1                                            STDP-144
      IF ((IV.GE.7).OR.(VAL(NMB).NE.0.D0)) GO TO 18                     STDP-145
C ZERO FORM FACTORS AND GO TO NEXT.                                     STDP-146
      L2=L1                                                             STDP-147
      DO 17 J=1,IJ                                                      STDP-148
      DO 16 IS=1,ISM                                                    STDP-149
   16 V(IS,L2)=0.D0                                                     STDP-150
   17 L2=L2+INL                                                         STDP-151
      GO TO 87                                                          STDP-152
   18 K=IABS(NVAL(1,NMA+2))                                             STDP-153
      HTMP=WV(8,K)                                                      STDP-154
      IZZ(1,L1)=-NVAL(1,NMA+1)                                          STDP-155
      IZZ(2,L1)=ITT                                                     STDP-156
      IZZ(4,L1)=K                                                       STDP-157
      IF (NVAL(1,NMA+1).EQ.0) GO TO 19                                  STDP-158
      IJ=1                                                              STDP-159
   19 L=IZZ(3,L1)                                                       STDP-160
      JI=IJ                                                             STDP-161
      IF ((IV.GT.0).AND.(IV.LT.9)) GO TO 28                             STDP-162
      AP=VAL(NMB)                                                       STDP-163
      IF (IV.GE.9) GO TO 31                                             STDP-164
C FORM FACTOR INTERPOLATED.                                             STDP-165
      IR=0                                                              STDP-166
      DO 24 IS=1,ISM                                                    STDP-167
      X0=IS*HTMP*VAL(NMB+1)                                             STDP-168
   20 IF ((X0.LT.VAL(NMB+IR+6)).OR.(IR.GE.-2*IV-8)) GO TO 21            STDP-169
      IR=IR+2                                                           STDP-170
      GO TO 20                                                          STDP-171
   21 V(IS,L1)=0.D0                                                     STDP-172
      DO 23 K=2,8,2                                                     STDP-173
      X1=1.D0                                                           STDP-174
      DO 22 J=2,8,2                                                     STDP-175
      IF (K.NE.J) X1=X1*(X0-VAL(NMB+IR+J))/(VAL(NMB+IR+K)-VAL(NMB+IR+J))STDP-176
   22 CONTINUE                                                          STDP-177
   23 V(IS,L1)=V(IS,L1)+X1*VAL(NMB+IR+K+1)                              STDP-178
   24 V(IS,L1)=VAL(NMB)*V(IS,L1)                                        STDP-179
      IF (NVAL(2,NMA+2).EQ.0) GO TO 26                                  STDP-180
      V(ISM,L1)=V(ISM,L1)*HTMP*ISM                                      STDP-181
      DO 25 IS=ISM-1,1,-1                                               STDP-182
   25 V(IS,L1)=V(IS+1,L1)+V(IS,L1)*IS*HTMP**2                           STDP-183
   26 IF ((ITV.LE.6).OR.(NVAL(1,NMA+3).EQ.1)) GO TO 27                  STDP-184
      NQCT=NQCT+1                                                       STDP-185
      IZZ(1,NQCT)=L1                                                    STDP-186
      IZZ(2,NQCT)=NMB                                                   STDP-187
   27 IF (NVAL(2,NMA+1).NE.0) GO TO 52                                  STDP-188
      GO TO 87                                                          STDP-189
   28 IF ((IV.GT.0).AND.(IV.LT.7)) GO TO 35                             STDP-190
C BOUND STATE FORM FACTOR.                                              STDP-191
      K=NVAL(1,NMB)                                                     STDP-192
      IVM=NVAL(2,NMB-1)                                                 STDP-193
      IVX=IV                                                            STDP-194
      JV=NVAL(1,NMB+1)/2+1                                              STDP-195
      NMC=NMB+3                                                         STDP-196
      IF (K.EQ.1) GO TO 29                                              STDP-197
      JV=JV+ISM                                                         STDP-198
      IF (JV.GT.NX) CALL MEMO('STDF',NX,JV)                             STDP-199
      IDX=IDX-2*JV                                                      STDP-200
      CALL STBF(P,NVAL(2,NMB),ISM,VAL(NMC+3),IVM,NX-JV,IDX,P(JV+1),IVX,HSTDP-201
     1TMP,IZZ(1,ITXM+1),LO)                                             STDP-202
      NMC=NMC+8*IV-50                                                   STDP-203
      IF (K.EQ.3) IVX=IVX-1                                             STDP-204
      NMB=NMB+2                                                         STDP-205
   29 CALL STBF(V(1,L1),NVAL(2,NMB),ISM,VAL(NMC),IVM,NX-JV,IDX,P(JV+1),ISTDP-206
     1VX,HTMP,IZZ(1,ITXM+1),LO)                                         STDP-207
      IF (K.EQ.1) GO TO 87                                              STDP-208
      IDX=IDX+JV                                                        STDP-209
      DO 30 IS=1,ISM                                                    STDP-210
   30 V(IS,L1)=V(IS,L1)*P(IS)*VAL(NMB+3)                                STDP-211
      GO TO 87                                                          STDP-212
C BESSEL EXPANSION.                                                     STDP-213
   31 NMC=NMB+1                                                         STDP-214
      L2X=NVAL(2,NMA+2)                                                 STDP-215
      LL=NVAL(1,NMA+3)                                                  STDP-216
      IF (IV.EQ.9) GO TO 32                                             STDP-217
      JL=NVAL(2,NMA+3)                                                  STDP-218
      LJ=JI+JL-1                                                        STDP-219
      IF (VAL(NMC).EQ.0.D0) VAL(NMC)=1.D0                               STDP-220
      GO TO 52                                                          STDP-221
   32 LJ=LL+JI+NVAL(2,NMA+3)                                            STDP-222
      IDX=MAX0(IDX,3*MAX0(L2X,LJ))                                      STDP-223
      IF (IDX.GT.2*NX) CALL MEMO('STDF',NX,(IDX+1)/2)                   STDP-224
C COMPUTATION OF ZEROS OF BESSEL FUNCTIONS - THE L+1 ZEROS FOR L=1 TO   STDP-225
C L=11 ARE IN DATA ZB. THE OTHERS ARE COMPUTED WITH MC MAHON'S FORMULA  STDP-226
C PAGE 371, HANDBOOK OF MATH. FUNCTIONS, ABRAMOVITZ AND STEGUN.         STDP-227
      IF (VAL(NMC).EQ.0.D0) VAL(NMC)=ISM*HTMP                           STDP-228
      DO 34 II=1,L2X                                                    STDP-229
      IF ((LL.NE.0).AND.((LL.LT.12).AND.(II.LE.LL+1))) GO TO 33         STDP-230
      X(1,II)=(2*II+LL)*PIS2                                            STDP-231
      IF (LL.EQ.0) GO TO 34                                             STDP-232
      A1=2.D0*X(1,II)                                                   STDP-233
      A2=DFLOAT(LL*(LL+1))                                              STDP-234
      X(1,II)=X(1,II)-A2*(1.D0+(7.D0*A2-6.D0+((166.D0*A2-408.D0)*A2+360.STDP-235
     1D0+(((6949.D0*A2-33252.D0)*A2+81180.D0)*A2-75600.D0)/(7.D0*A1**2))STDP-236
     2/(5.D0*A1**2))/(3.D0*A1**2))/A1                                   STDP-237
      GO TO 34                                                          STDP-238
   33 K=(LL*(LL+1))/2+II-1                                              STDP-239
      X(1,II)=ZB(K)                                                     STDP-240
   34 X(1,II)=X(1,II)/VAL(NMC)                                          STDP-241
      LM=LL+1                                                           STDP-242
      GO TO 52                                                          STDP-243
C WOODS-SAXON AND ITS DERIVATIVES TO SOME POWER.                        STDP-244
   35 NMC=NMB+4                                                         STDP-245
      IF (ITV.GT.6) NMC=NMC+1                                           STDP-246
      IF (VAL(NMB).EQ.0.D0) GO TO 39                                    STDP-247
      IF (VAL(NMB+2).GE.0.1D0*HTMP) GO TO 37                            STDP-248
      IF (ITV.LE.6) GO TO 36                                            STDP-249
      NF=NVAL(1,NMA+1)                                                  STDP-250
      IF (((ITV.GT.6).AND.(NF.EQ.0)).OR.(VAL(NVAL(1,2)+3*NF-3).EQ.0.D0))STDP-251
     1 GO TO 38                                                         STDP-252
C  36 WRITE (MW,1000) VAL(NMB+2),I,IP,0.1D0*HTMP                        STDP-253
   36 WRITE (MW,1000) VAL(NMB+2),I,NMA,0.1D0*HTMP                       RCN  RCN
      VAL(NMB+2)=0.1D0*HTMP                                             STDP-254
   37 SEP=DEXP(HTMP/VAL(NMB+2))                                         STDP-255
   38 IF ((VAL(NMB+1).GE.HTMP).OR.(I.LE.6)) GO TO 39                    STDP-256
C     WRITE (MW,1001) VAL(NMB+1),I,IP,HTMP                              STDP-257
      WRITE (MW,1001) VAL(NMB+1),I,NMA,HTMP                             RCN  RCN
      VAL(NMB+1)=HTMP                                                   STDP-258
   39 IF (IV.LE.4) GO TO 49                                             STDP-259
      IQMTMP=NVAL(2,NMA+2)                                              STDP-260
      IX=20                                                             STDP-261
      IQ=MAX0(L,IQMTMP)                                                 STDP-262
      IF (IV.EQ.6) IQ=MAX0(IQ,NVAL(2,NMA+2))                            STDP-263
      IDX=MAX0(IDX,3*IQ+120)                                            STDP-264
      IF (IDX.GT.2*NX) CALL MEMO('STDF',NX,(IDX+1)/2)                   STDP-265
      A2=0.D0                                                           STDP-266
      A1=1.D0                                                           STDP-267
      IF (LO(6)) A1=DABS(VAL(NMB+1))                                    STDP-268
      DO 40 I=1,IQMTMP                                                  STDP-269
   40 X(1,40+I)=VAL(NMC+I-1)*DSQRT(DFLOAT(2*I+1)/(8.D0*PIS2))/A1        STDP-270
      DO 48 II=1,20                                                     STDP-271
      I=1+MOD(II-1,10)                                                  STDP-272
      X(2,22)=XGN(I)                                                    STDP-273
      IF (I.NE.II) X(2,22)=-X(2,22)                                     STDP-274
      X(2,21)=1.D0                                                      STDP-275
      DO 41 J=2,IQ                                                      STDP-276
   41 X(2,J+21)=(DFLOAT(2*J-1)*X(2,22)*X(2,J+20)+DFLOAT(1-J)*X(2,J+19))/STDP-277
     1DFLOAT(J)                                                         STDP-278
      X(3,II+20)=0.5D0*PGN(I)                                           STDP-279
      X(2,II)=0.D0                                                      STDP-280
      A5=X(2,L+21)                                                      STDP-281
      IF (IV.EQ.5) GO TO 46                                             STDP-282
      KL=NVAL(2,NMA+2)                                                  STDP-283
      IF (NVAL(1,NMA+3).NE.0) GO TO 42                                  STDP-284
      A5=A5*X(2,KL+21)*DSQRT(DFLOAT(2*KL+1))                            STDP-285
      GO TO 46                                                          STDP-286
C COMPUTATION OF Y(L,KK) * Y(KL,KK).                                    STDP-287
   42 A5=DSQRT(DFLOAT(2*KL+1))                                          STDP-288
      KK=NVAL(1,NMA+3)                                                  STDP-289
      DO 43 N=1,KK                                                      STDP-290
   43 A5=A5*(1.D0-XGN(I)**2)*DFLOAT(2*N-1)**2/DSQRT(DFLOAT((KL+N)*(L+N)*STDP-291
     1(KL-N+1)*(L-N+1)))                                                STDP-292
      KZ=L-KK                                                           STDP-293
      DO 45 J=1,2                                                       STDP-294
      IF (KZ.LE.0) GO TO 45                                             STDP-295
      A4=0.D0                                                           STDP-296
      DO 44 K=1,KZ                                                      STDP-297
      A3=A4                                                             STDP-298
      A4=A5                                                             STDP-299
   44 A5=A3+(A4*X(2,22)-A3)*(2.D0*(KK+K)-1.D0)/K                        STDP-300
   45 KZ=KL-KK                                                          STDP-301
   46 X(3,II)=X(3,II+20)*A5*DSQRT(2.D0*L+1.D0)                          STDP-302
      RR=1.D0                                                           STDP-303
      DO 47 K=1,IQMTMP                                                  STDP-304
   47 RR=RR+X(1,40+K)*X(2,K+21)                                         STDP-305
      X(2,II)=-RR*DABS(VAL(NMB+1))                                      STDP-306
      X(1,II)=0.D0                                                      STDP-307
      X(1,20+II)=1.D-16                                                 STDP-308
      IF (VAL(NMB+2).NE.0.D0) GO TO 48                                  STDP-309
      X(2,II)=DABS(X(2,II))                                             STDP-310
      A2=A2+X(2,II)**3*X(3,20+II)                                       STDP-311
   48 CONTINUE                                                          STDP-312
      GO TO 50                                                          STDP-313
C INITIALISATION OF DO LOOPS FOR NOT DEFORMED POTENTIALS.               STDP-314
   49 IQMTMP=0                                                          STDP-315
      IX=1                                                              STDP-316
      IDX=MAX0(IDX,33)                                                  STDP-317
      IF (IDX.GT.2*NX) CALL MEMO('STDF',NX,(IDX+1)/2)                   STDP-318
      X(1,1)=0.D0                                                       STDP-319
      X(2,1)=-DABS(VAL(NMB+1))                                          STDP-320
      X(3,1)=1.D0                                                       STDP-321
      IF (VAL(NMB+2).NE.0.D0) GO TO 50                                  STDP-322
      X(2,1)=-X(2,1)                                                    STDP-323
      A2=X(2,1)**3                                                      STDP-324
   50 IV1=1+MOD(IV-1,4)                                                 STDP-325
      AP=VAL(NMB)                                                       STDP-326
      AN=VAL(NMB+1)                                                     STDP-327
      IF (LO(6)) AN=AN/DABS(VAL(NMB+1))                                 STDP-328
      IF ((LO(9)).AND.(VAL(NMB+1).GE.0.D0).AND.(VAL(NMB+2).EQ.0.D0)) AM=STDP-329
     1-AM                                                               STDP-330
      IF (IV1.GT.1) AP=AP*AN/DSQRT(8.D0*PIS2)                           STDP-331
      IF (IV1.GT.2) AP=AP*AN*0.5D0                                      STDP-332
      IF (IV1.GT.3) AP=AP*AN/3.D0                                       STDP-333
      IF (VAL(NMB+3).GT.-1.D0) GO TO 51                                 STDP-334
      WRITE (MW,1002) VAL(NMB+3),NMA                                    STDP-335
      VAL(NMB+3)=-.8D0                                                  STDP-336
   51 A1=VAL(NMB+3)                                                     STDP-337
      A5=DFLOAT(L+1)                                                    STDP-338
      IV2=IV1                                                           STDP-339
      IV3=IV2-1                                                         STDP-340
      IV2=IV3+JI                                                        STDP-341
      IF (((ITV.EQ.3).OR.(ITV.EQ.4)).AND.(.NOT.LO(100))) IV2=IV2+1      STDP-342
      IF (ITV.GT.6) AP=AP*CCZ                                           STDP-343
      IF (VAL(NMB+2).EQ.0.D0) AP=AP/A2                                  STDP-344
   52 IF ((ITV.GT.6).AND.(VAL(NMB+2).NE.0.D0)) JI=1                     STDP-345
      RR=0.D0                                                           STDP-346
      AN=0.D0                                                           STDP-347
      A6=0.D0                                                           STDP-348
      DO 86 IS=1,ISM                                                    STDP-349
      RR=RR+HTMP                                                        STDP-350
      IF ((IV.LT.0).OR.(IV.EQ.8)) GO TO 85                              STDP-351
      DO 53 I=1,3                                                       STDP-352
   53 Y(I)=0.D0                                                         STDP-353
      IF (IV.GE.9) GO TO 67                                             STDP-354
C INTEGRATION LOOP.                                                     STDP-355
      DO 66 I=1,IX                                                      STDP-356
      IF (VAL(NMB+2).EQ.0.D0) GO TO 57                                  STDP-357
      X(2,I)=X(2,I)+HTMP                                                STDP-358
      IF (X(1,I).NE.0.D0) GO TO 54                                      STDP-359
      IF (X(2,I)+50.D0*VAL(NMB+2).GT.0.D0) X(1,I)=DEXP(X(2,I)/VAL(NMB+2)STDP-360
     1)                                                                 STDP-361
      GO TO 55                                                          STDP-362
   54 IF (X(1,I).LT.1.D15) X(1,I)=X(1,I)*SEP                            STDP-363
   55 CALL WOSA(VR(1),VAL(NMB+2),A1,X(1,I),X(2,I),IV2,LO(9))            STDP-364
      IF (((ITV.EQ.3).OR.(ITV.EQ.4)).AND.(.NOT.LO(109))) VR(IV          STDP-365
     11)=VR(IV2)*4.D0*VAL(NMB+2)                                        STDP-366
      IF ((ITV.GT.6).AND.(VAL(NMB+2).NE.0.D0)) A6=A6+VR(1)*RR**2*X(3,I+2STDP-367
     10)*(1.D0+VAL(NMB+4)*RR**2)                                        STDP-368
      DO 56 J=1,JI                                                      STDP-369
   56 Y(J)=Y(J)+VR(IV3+J)*X(3,I)                                        STDP-370
      GO TO 66                                                          STDP-371
C DEFORMED COULOMB POTENTIAL.                                           STDP-372
   57 A4=X(2,I)/RR                                                      STDP-373
      IF (ITV.NE.ITT) GO TO 59                                          STDP-374
      IF (A4.GT.1.D0) GO TO 58                                          STDP-375
      Y(1)=Y(1)+(X(2,I)**2)*A4*X(3,I)                                   STDP-376
      Y(2)=Y(2)+X(2,I)*A4**2*X(3,I)                                     STDP-377
      Y(3)=Y(3)+2.D0*A4**3*X(3,I)                                       STDP-378
      GO TO 66                                                          STDP-379
   58 Y(1)=Y(1)+(0.5D0*X(2,I)*X(2,I)-RR*RR/6.D0)*X(3,I)*3.D0            STDP-380
      Y(2)=Y(2)+RR*X(3,I)                                               STDP-381
      Y(3)=Y(3)-X(3,I)                                                  STDP-382
      GO TO 66                                                          STDP-383
   59 IF (A4.GT.1.D0) GO TO 60                                          STDP-384
      A3=(X(2,I)**2)*(A4**(L+1))*3.D0/((A5+2.D0)*(2.D0*A5-1.D0))        STDP-385
      IF (IV1.GT.1) A3=A3*(A5+2.D0)/X(2,I)                              STDP-386
      IF (IV1.GT.2) A3=A3*(A5+1.D0)/X(2,I)                              STDP-387
      IF (IV1.GT.3) A3=A3*A5/X(2,I)                                     STDP-388
      GO TO 62                                                          STDP-389
   60 IF (L.NE.2) GO TO 61                                              STDP-390
      IF (IV1.EQ.1) A3=RR*RR*(0.2D0+DLOG(A4))*0.6D0                     STDP-391
      IF (IV1.GE.2) A3=0.6D0*RR/A4                                      STDP-392
      IF (IV1.GE.3) A3=-A3/X(2,I)                                       STDP-393
      IF (IV1.GE.4) A3=-2.D0*A3/X(2,I)                                  STDP-394
      GO TO 62                                                          STDP-395
   61 IF (IV1.EQ.1) A3=RR*RR*(1.D0/(A5+2.D0)-1.D0/(A4**(L-2)*(2.D0*A5-1.STDP-396
     1D0)))*3.D0/(A5-3.D0)                                              STDP-397
      IF (IV1.GE.2) A3=RR/A4**(L-1)*3.D0/(2.D0*A5-1.D0)                 STDP-398
      IF (IV1.GE.3) A3=-A3*(A5-2.D0)/X(2,I)                             STDP-399
      IF (IV1.EQ.4) A3=-A3*(A5-1.D0)/X(2,I)                             STDP-400
   62 Y(1)=Y(1)+A3*X(3,I)                                               STDP-401
      IF (JI.EQ.1) GO TO 66                                             STDP-402
      IF (A4.GT.1.D0) GO TO 63                                          STDP-403
      A3=-A5*A3/RR                                                      STDP-404
      GO TO 65                                                          STDP-405
   63 IF (L.NE.2) GO TO 64                                              STDP-406
      IF (IV2.EQ.1) A3=-1.2D0*(0.3D0*RR-DLOG(A4))*RR                    STDP-407
      IF (IV2.GE.2) A3=2.D0*A3/RR                                       STDP-408
      GO TO 65                                                          STDP-409
   64 IF (IV2.EQ.1) A3=(2.D0/(A5+2.D0)-(A5-1.D0)/(A4**(L-2)*(2.D0*A5-1.DSTDP-410
     10)))*3.D0/(A5-3.D0)*RR                                            STDP-411
      IF (IV2.NE.1) A3=(A5-1.D0)*A3/RR                                  STDP-412
   65 Y(2)=Y(2)-A3*X(3,I)                                               STDP-413
   66 CONTINUE                                                          STDP-414
      GO TO 84                                                          STDP-415
C COMPUTATION OF BESSEL FUNCTIONS.                                      STDP-416
   67 IF (IV.GT.9) GO TO 76                                             STDP-417
      IF (RR.GT.VAL(NMC)) GO TO 86                                      STDP-418
      DO 75 II=1,L2X                                                    STDP-419
      A1=RR*X(1,II)                                                     STDP-420
      X(2,1)=DSIN(A1)/A1                                                STDP-421
      IF (LJ.EQ.1) GO TO 72                                             STDP-422
      K=IDINT(1.D0+A1)                                                  STDP-423
      IF (K.LT.LJ) GO TO 69                                             STDP-424
      X(2,2)=(X(2,1)-DCOS(A1))/A1                                       STDP-425
      IF (LJ.EQ.2) GO TO 72                                             STDP-426
      DO 68 J=3,LJ                                                      STDP-427
   68 X(2,J)=(2*J-3)*X(2,J-1)/A1-X(2,J-2)                               STDP-428
      GO TO 72                                                          STDP-429
   69 A3=LJ                                                             STDP-430
      A4=DMAX1(DSQRT(10.5D0*A1)-0.5D0,A3)                               STDP-431
      K=IDINT(A4+3.D0+21.D0*A1/(A4+A4+1.D0))                            STDP-432
      A2=0.D0                                                           STDP-433
   70 A2=A1/(2.D0*K+1.D0-A2*A1)                                         STDP-434
      IF (K.LE.LJ) X(2,K+1)=A2                                          STDP-435
      K=K-1                                                             STDP-436
      IF (K.GE.1) GO TO 70                                              STDP-437
      DO 71 K=2,LJ                                                      STDP-438
   71 X(2,K)=X(2,K)*X(2,K-1)                                            STDP-439
C COMPUTATION OF DERIVATIVES OF BESSEL FUNCTIONS (- DERIVATIVE).        STDP-440
   72 JL=LJ-1                                                           STDP-441
      DO 74 J=LM,LJ                                                     STDP-442
      KK=JI+J-LJ                                                        STDP-443
      IF (KK.GE.1) Y(KK)=Y(KK)+VAL(NMC+II)*X(2,LM)                      STDP-444
      IF (KK.EQ.JI) GO TO 75                                            STDP-445
      A3=0.D0                                                           STDP-446
      A5=0.D0                                                           STDP-447
      DO 73 K=1,JL                                                      STDP-448
      A2=(A5+1.D0)*X(2,K+1)-A5*A3                                       STDP-449
      A3=X(2,K)                                                         STDP-450
      X(2,K)=X(1,II)*A2/(2.D0*A5+1.D0)                                  STDP-451
   73 A5=A5+1.D0                                                        STDP-452
   74 JL=JL-1                                                           STDP-453
   75 CONTINUE                                                          STDP-454
      GO TO 84                                                          STDP-455
C COMPUTATION OF LAGUERRE POLYNOMIALS X**LL L(2X**2) DEXP(-X**2).       STDP-456
   76 DO 83 J=1,L2X,2                                                   STDP-457
      IF (J.NE.1) GO TO 77                                              STDP-458
      A1=RR/VAL(NMC)                                                    STDP-459
      A2=A1*A1                                                          STDP-460
      CL(1)=A1**LL*DEXP(-0.5D0*A2)                                      STDP-461
      CL(2)=(LL+1.5D0-A2)*CL(1)                                         STDP-462
      GO TO 78                                                          STDP-463
   77 CL(1)=(CL(2)*(DFLOAT(LL+2*J)-2.5D0-A2)-CL(1)*(DFLOAT(LL+J)-1.5D0))STDP-464
     1/DFLOAT(J-1)                                                      STDP-465
      CL(2)=(CL(1)*(DFLOAT(LL+2*J)-0.5D0-A2)-CL(2)*(DFLOAT(LL+J)-0.5D0))STDP-466
     1/DFLOAT(J)                                                        STDP-467
   78 IF (JL.NE.0) GO TO 79                                             STDP-468
      Y(1)=Y(1)+CL(1)*VAL(NMC+J)                                        STDP-469
      IF (J.LT.L2X) Y(1)=Y(1)+CL(2)*VAL(NMC+J+1)                        STDP-470
   79 IF (LJ.EQ.0) GO TO 83                                             STDP-471
      DO 80 L=3,6                                                       STDP-472
   80 CL(L)=0.D0                                                        STDP-473
C -DERIVATIVE OF LAGUERRE POLYNOMIALS X**LL L(2X**2) DEXP(-X**2).       STDP-474
      DO 82 K=1,LJ                                                      STDP-475
      DO 81 L=1,6                                                       STDP-476
   81 CL(L+2)=CL(L)                                                     STDP-477
      CL(1)=((DFLOAT(LL+2*J+K)-A2)*CL(3)-DFLOAT(2*J)*CL(4)-DFLOAT(2*(K-1STDP-478
     1)*(K-2))*CL(7))/A1+DFLOAT(4*(K-1))*CL(5)                          STDP-479
      CL(2)=-((DFLOAT(LL+2*J+1-K)-A2)*CL(4)-DFLOAT(2*J+1+2*LL)*CL(3)-DFLSTDP-480
     1OAT(2*(K-1)*(K-2))*CL(8))/A1-DFLOAT(4*(K-1))*CL(6)                STDP-481
      IF (K.LT.JL) GO TO 83                                             STDP-482
      Y(K+1-JL)=Y(K+1-JL)+CL(1)*VAL(NMC+J)                              STDP-483
      IF (J.LT.L2X) Y(K+1-JL)=Y(K+1-JL)+CL(2)*VAL(NMC+J+1)              STDP-484
   82 CONTINUE                                                          STDP-485
   83 CONTINUE                                                          STDP-486
   84 V(IS,L1)=AP*Y(1)                                                  STDP-487
      GO TO 86                                                          STDP-488
   85 Y(1)=V(IS,L1)/AP                                                  STDP-489
      IF (ITV.LE.6) V(IS,L1)=P(IS)                                      STDP-490
   86 AN=AN+AP*Y(1)*RR**(L+2)                                           STDP-491
      IF ((ITV.LE.6).OR.(VAL(NMB+2).EQ.0.D0)) GO TO 87                  STDP-492
      NQCT=NQCT+1                                                       STDP-493
      IZZ(1,NQCT)=L1                                                    STDP-494
      IZZ(2,NQCT)=NMB                                                   STDP-495
   87 NMA=NVAL(2,I1-6)+1                                                STDP-496
      GO TO 8                                                           STDP-497
   88 IF (NFO.EQ.0) GO TO 90                                            STDP-498
C FOLDING.                                                              STDP-499
      NNF=ISM*ITXM+1                                                    STDP-500
      DO 89 I=1,NNF                                                     STDP-501
   89 P(I)=0.D0                                                         STDP-502
      N1=NVAL(1,2)                                                      STDP-503
      IDY=NNF+2*(ISM+5)*(IMAX+1)                                        STDP-504
      IDX=MAX0(IDY,IDX)                                                 STDP-505
      N2=1                                                              STDP-506
      IF (LO(100)) N2=N2+ITX(7)                                         STDP-507
      IF (IDX.GT.2*NX) CALL MEMO('STDF',NX,(IDX+1)/2)                   STDP-508
      IPTMP=1                                                           STDP-509
      CALL FOLD(V(1,N2),P,VAL(N1),IPTMP,ISM,IVY,INTC,P(NNF),PGN,XGN,WV,ISTDP-510
     1ZZ(1,N2),LO)                                                      STDP-511
   90 IF (NQCT.EQ.0) RETURN                                             STDP-512
      NMA=NVAL(1,1)                                                     STDP-513
      INVZ=INTC                                                         STDP-514
   91 IF (NMA.GE.NVAL(1,2)) RETURN                                      STDP-515
      DO 99 IP=1,NPP                                                    STDP-516
      HTMP=WV(8,IABS(IPP(1,IP)))                                        STDP-517
      DO 98 I=7,8                                                       STDP-518
      A6=0.D0                                                           STDP-519
      L1=IP+ITX(I)                                                      STDP-520
      IF (LO(100)) L1=ITX(4)+24*IP+I                                    STDP-521
      DO 92 M=1,NQCT                                                    STDP-522
      IF (IZZ(1,M).EQ.L1) GO TO 93                                      STDP-523
   92 CONTINUE                                                          STDP-524
      GO TO 94                                                          STDP-525
   93 NMB=IZZ(2,M)                                                      STDP-526
      A1=VAL(NMB)                                                       STDP-527
      CALL COPO(V(1,L1),V(1,L1),X,ISM,HTMP,0,A1,VAL(NMB+3),CCZ,A6)      STDP-528
   94 IF ((INVZ.EQ.0).OR.(.NOT.LO(8*I-45)).OR.(IP.NE.1)) GO TO 98       STDP-529
      DO 97 J=1,INVZ                                                    STDP-530
      N=IVY(I-3,J)                                                      STDP-531
      L=IVY(7,J)                                                        STDP-532
      IF ((N.EQ.0).OR.(L.EQ.0)) GO TO 97                                STDP-533
      L1=N+ITX(I+8)                                                     STDP-534
      IF (LO(100)) L1=ITX(5)+11*J+I                                     STDP-535
      IF (.NOT.(LO(100).OR.(I.NE.8))) L1=L1+INTC                        STDP-536
      DO 95 M=1,NQCT                                                    STDP-537
      IF (IZZ(1,M).EQ.L1) GO TO 96                                      STDP-538
   95 CONTINUE                                                          STDP-539
      GO TO 97                                                          STDP-540
   96 NMB=IZZ(2,M)                                                      STDP-541
      IF (A6.EQ.0.D0) GO TO 100                                         STDP-542
      A2=VAL(NMB)                                                       STDP-543
      ATMP=A6*A2/A1                                                     STDP-544
      CALL COPO(V(1,L1),V(1,L1),X,ISM,HTMP,L,A2,VAL(NMB+3),CCZ,ATMP)    STDP-545
   97 CONTINUE                                                          STDP-546
   98 CONTINUE                                                          STDP-547
      INVZ=0                                                            STDP-548
   99 CONTINUE                                                          STDP-549
      NMA=NVAL(2,I1-6)+1                                                STDP-550
      GO TO 91                                                          STDP-551
  100 WRITE (MW,1003) J,I                                               STDP-552
      STOP                                                              STDP-553
 1000 FORMAT (' TOO SMALL DIFFUSENESS =',1P,D15.6,' FOR THE COMPONENT',ISTDP-554
     12/20X,' OF THE POTENTIAL ',I2,'   CHANGED INTO ITS MINIMUM VALUE:'STDP-555
     2,1P,D15.6)                                                        STDP-556
 1001 FORMAT (' TOO SMALL COULOMB RADIUS =',1P,D15.6,' FOR THE COMPONENTSTDP-557
     1',I2/20X,' OF THE POTENTIAL ',I2,'   CHANGED INTO ITS MINIMUM VALUSTDP-558
     2E.',1P,D15.6)                                                     STDP-559
 1002 FORMAT (' POWER 1+',D15.6,'  CHANGED TO .2 FOR NMA =',I4)         STDP-560
 1003 FORMAT (' THE TRANSITION FORM FACTOR',I2,' FOR ITYP =',I2,' CANNOTSTDP-561
     1 BE NORMALISED'/' IT IS NOT READ AS THE CORRESPONDING POTENTIAL'//STDP-562
     2/' IN STDP  ... STOP ...')                                        STDP-563
      END                                                               STDP-564
C 20/05/07                                                      ECIS12  STBF-000
      SUBROUTINE STBF(V,IVX,ISM,VAL,IVM,NX,IDX,XX,IV,HH,IEX,LO)         STBF-001
C COMPUTES BOUND STATE FORM FACTORS.                                    STBF-002
C INPUT:     IVX:     TABLE OF QUANTUM NUMBERS.                         STBF-003
C            ISM:     NUMBER OF INTEGRATION STEPS.                      STBF-004
C            VAL(J):  OSCILLATOR PARAMETER OR BINDING ENERGY FOR J=1,   STBF-005
C                     TOTAL MASS FOR J=2,                               STBF-006
C                     MASS OF BOUND PARTICLE FOR J=3,                   STBF-007
C                     PRODUCT OF CHARGES FOR J=4,                       STBF-008
C                     REAL POTENTIAL FOR UNBOUND STATES OR STARTING     STBF-009
C                     VALUE FOR THE SEARCH ON BOUND STATE FOR J=5,      STBF-010
C                     REDUCED RADIUS OF REAL POTENTIAL FOR J=6,         STBF-011
C                     DIFFUSENESS OF RADIUS OF REAL POTENTIAL FOR J=7,  STBF-012
C                     DEPTH OF SPIN-ORBIT POTENTIAL FOR J=8,            STBF-013
C                     REDUCED RADIUS OF SPIN-ORBIT POTENTIAL FOR J=9,   STBF-014
C                     DIFFUSENESS OF SPIN-ORBIT POTENTIAL FOR J=10,     STBF-015
C                     REDUCED RADIUS OF COULOMB POTENTIAL FOR J=11.     STBF-016
C            IVM:     STEP FACTOR FOR WOODS-SAXON WAVE FUNCTIONS.       STBF-017
C            NX:      LENGTH OF WORKING SPACE.                          STBF-018
C            IV:      IV=8 FOR SOLUTION IN A WOODS-SAXON POTENTIAL.     STBF-019
C            HH:      STEP SIZE FOR INTEGRATION.                        STBF-020
C            LO(I):   LOGICAL CONTROLS:                                 STBF-021
C               LO(47) =.TRUE. NO RECOIL CORRECTION FOR BOUND STATES.   STBF-022
C               LO(51) =.TRUE. OUTPUT OF POTENTIALS.                    STBF-023
C OUTPUT:    V(ISM):  BOUND STATE WAVE FUNCTION.                        STBF-024
C            IDX:     LENGTH OF WORKING FIELD USED.                     STBF-025
C WORKING AREA:                                                         STBF-026
C            XX:      TO COMPUTE BOUND FUNCTIONS.                       STBF-027
C            IEX:     FOR COULOMB FUNCTION, IN EQUIVALENCE WITH XX.     STBF-028
C                                                                       STBF-029
C FOR THE COMMON  /DCONS/ SEE CALC.                                     STBF-030
C                                                                       STBF-031
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     STBF-032
C  CCZ:       COULOMB ALPHA CONSTANT.                                   STBF-033
C  CK:        H-BAR*C.                                                  STBF-034
C   USED:     CCZ,CK.                                                   STBF-035
C                                                                       STBF-036
C***********************************************************************STBF-037
      IMPLICIT REAL*8 (A-H,O-Z)                                         STBF-038
      LOGICAL LO(150)                                                   STBF-039
      DIMENSION V(*),IVX(4),VAL(11),XX(*),IEX(*)                        STBF-040
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            STBF-041
      COMMON /INOUT/ MR,MW,MS                                           STBF-042
      L=IVX(2)                                                          STBF-043
      HTMP=HH                                                           STBF-044
      IF ((.NOT.LO(47)).AND.(VAL(3).NE.VAL(2))) HTMP=HTMP*VAL(2)/(VAL(2)STBF-045
     1-VAL(3))                                                          STBF-046
      IF (IV.EQ.8) GO TO 7                                              STBF-047
      N=IVX(1)                                                          STBF-048
C COMPUTATION OF THE NORMALISATION OF LAGUERRE POLYNOMIALS              STBF-049
      A1=2.256758334191D0                                               STBF-050
      A3=L                                                              STBF-051
      IF (L.EQ.0) GO TO 2                                               STBF-052
      DO 1 I=1,L                                                        STBF-053
    1 A1=A1/(DFLOAT(I)+.5D0)                                            STBF-054
    2 IF (N.EQ.0) GO TO 4                                               STBF-055
      DO 3 I=1,N                                                        STBF-056
      A2=DFLOAT(I)                                                      STBF-057
    3 A1=A1*(A2+A3+.5D0)/A2                                             STBF-058
    4 A1=DSQRT(A1)                                                      STBF-059
C COMPUTATION OF LAGUERRE POLYNOMIALS                                   STBF-060
      RR=0.D0                                                           STBF-061
      DO 6 IS=1,ISM                                                     STBF-062
      RR=RR+HTMP                                                        STBF-063
      X1=(VAL(1)*RR)**2                                                 STBF-064
      X3=A1*DEXP(.5D0*(A3*DLOG(X1)-X1))                                 STBF-065
      IF (N.EQ.0) GO TO 6                                               STBF-066
      X2=X3                                                             STBF-067
      DO  5 I=1,N                                                       STBF-068
      A2=DFLOAT(I)                                                      STBF-069
      X2=2.D0*X2*DFLOAT(I-N-1)*X1/(A2*(2.D0*(A3+A2)+1.D0))              STBF-070
    5 X3=X3+X2                                                          STBF-071
    6 V(IS)=X3                                                          STBF-072
      RETURN                                                            STBF-073
C BOUND STATE IN WOODS-SAXON POTENTIAL                                  STBF-074
C CONTROL OF STORAGE AND STEP SIZE                                      STBF-075
    7 IREB=IVM                                                          STBF-076
      IF (IREB.EQ.0) IREB=4                                             STBF-077
      KN=IREB*ISM                                                       STBF-078
      IDX=MAX0(IDX,3*KN+3)                                              STBF-079
      IF (IDX.GT.NX) CALL MEMO('STBF',NX,IDX)                           STBF-080
      A4=IREB                                                           STBF-081
      A4=HTMP/A4                                                        STBF-082
      Y3=(VAL(2)-VAL(3))**0.33333333333333D0                            STBF-083
      A2=Y3*VAL(6)                                                      STBF-084
      KR=IDINT(A2/A4)                                                   STBF-085
      Y2=VAL(1)                                                         STBF-086
      IF (Y2.EQ.0.D0) Y2=0.01D0                                         STBF-087
      JL=IVX(4)                                                         STBF-088
      IF (IVX(3).EQ.0) JL=2*L                                           STBF-089
      IF (LO(51)) WRITE (MW,1000) IVX,KN,IREB,KR,Y2,(VAL(I),I=2,11)     STBF-090
      A1=A4*A4                                                          STBF-091
      Y1=VAL(3)*(VAL(2)-VAL(3))/VAL(2)                                  STBF-092
      Y5=CK*Y1*A1                                                       STBF-093
      A5=Y2*Y5                                                          STBF-094
      RR=DSQRT(DABS(A5))/A4                                             STBF-095
      X5=0.5D0*CK*CCZ*Y1*VAL(4)/RR                                      STBF-096
      IF (VAL(1).GT.0.D0) GO TO 8                                       STBF-097
C MATCHING OF UNBOUND FUNCTIONS                                         STBF-098
      IDX=MAX0(IDX,6*L+6)                                               STBF-099
      IF (IDX.GT.NX) CALL MEMO('STBF',NX,IDX)                           STBF-100
      CALL FCOU(L,X5,RR*A4*KN,XX(L+2),XX(2*L+3),XX(3*L+4),XX(4*L+5),IEX,STBF-101
     1XX(5*L+6))                                                        STBF-102
      Z1=XX(2*L+2)*1.D-1**IEX(L+1)                                      STBF-103
      Z2=XX(4*L+4)*1.D1**IEX(L+1)                                       STBF-104
      CALL FCOU(L,X5,RR*A4*(KN-2),XX(L+2),XX(2*L+3),XX(3*L+4),XX(4*L+5),STBF-105
     1IEX,XX(5*L+6))                                                    STBF-106
      Z3=XX(2*L+2)*1.D-1**IEX(L+1)                                      STBF-107
      Z4=XX(4*L+4)*1.D1**IEX(L+1)                                       STBF-108
    8 X1=Y3*VAL(11)                                                     STBF-109
      A3=Y3*VAL(9)                                                      STBF-110
      Y3=2.D0*VAL(8)*Y5                                                 STBF-111
      Y4=IVX(3)*(IVX(3)+2)-JL*(JL+2)+4*L*(L+1)                          STBF-112
      Y4=.25D0*Y4                                                       STBF-113
      A6=DFLOAT(L*(L+1))                                                STBF-114
      A6=A6*A1                                                          STBF-115
      X4=X5*2.D0*A1*RR                                                  STBF-116
      X3=0.D0                                                           STBF-117
      K1=KN+1                                                           STBF-118
      K2=KN+2                                                           STBF-119
C COMPUTATION OF OPTICAL POTENTIALS                                     STBF-120
      DO 10 I=1,K1                                                      STBF-121
      X3=X3+A4                                                          STBF-122
      X2=DEXP((X3-A3)/VAL(10))                                          STBF-123
      XX(K2+I)=A6/(X3*X3)+Y4*Y3*X2/((1.D0+X2)**2*X3*VAL(10))+A5         STBF-124
      XX(2*K2+I)=-1.D0/(1.D0+DEXP((X3-A2)/VAL(7)))                      STBF-125
      IF (X3.GT.X1) GO TO 9                                             STBF-126
      XX(K2+I)=XX(K2+I)+X4*(1.5D0-0.5D0*X3*X3/(X1*X1))/X1               STBF-127
      GO TO 10                                                          STBF-128
    9 XX(K2+I)=XX(K2+I)+X4/X3                                           STBF-129
   10 CONTINUE                                                          STBF-130
      IF (VAL(1).LT.0.D0) GO TO 15                                      STBF-131
C MATCHING CONDITIONS                                                   STBF-132
      X1=(X3-A4)*RR                                                     STBF-133
      X3=X3*RR                                                          STBF-134
      A6=A6/A1                                                          STBF-135
      N=IDINT(5.D0*(X3-X1)+1.D0)                                        STBF-136
      Y3=N                                                              STBF-137
      Y3=(X3-X1)/Y3                                                     STBF-138
      IG=IDINT(1.D0/Y3)                                                 STBF-139
      JG=MIN0(100,IG)                                                   STBF-140
      A5=Y3*Y3                                                          STBF-141
      A3=1.D0                                                           STBF-142
      DO 12 I=1,20                                                      STBF-143
      M=2*I*JG                                                          STBF-144
      A4=X3+Y3*DFLOAT(M)                                                STBF-145
      Y1=DEXP(Y3)                                                       STBF-146
      Y4=0.5D0/Y3+0.5D0                                                 STBF-147
      Y2=(A6/(A4*A4)+2.D0*X5/A4+1.D0)*A5                                STBF-148
      DO 11 J=1,M                                                       STBF-149
      Y1=(2.D0+Y2/(1.D0-Y2/12.D0))-1.D0/Y1                              STBF-150
      A2=Y2                                                             STBF-151
      A4=A4-Y3                                                          STBF-152
      Y2=(A6/(A4*A4)+2.D0*X5/A4+1.D0)*A5                                STBF-153
      A1=Y1*(1.D0-A2/12.D0)/(1.D0-Y2/12.D0)                             STBF-154
   11 Y4=Y4/(A1*A1)+1.D0                                                STBF-155
      IF (DABS(Y1-A3).LT.0.1D-4*DABS(Y1-1.D0)) GO TO 13                 STBF-156
   12 A3=Y1                                                             STBF-157
      IF (LO(51)) WRITE (MW,1001)                                       STBF-158
   13 Y4=(Y4-0.5D0)*Y3                                                  STBF-159
      IF (LO(51)) WRITE (MW,1002) I,M                                   STBF-160
      X2=1.D0/Y1                                                        STBF-161
      X3=1.D0                                                           STBF-162
      X4=Y2                                                             STBF-163
      DO 14 I=1,N                                                       STBF-164
      X1=X2                                                             STBF-165
      X2=X3                                                             STBF-166
      X3=(2.D0+X4/(1.D0-X4/12.D0))*X2-X1                                STBF-167
      A4=A4-Y3                                                          STBF-168
   14 X4=(A6/(A4*A4)+2.D0*X5/A4+1.D0)*A5                                STBF-169
      A3=X3*(1.D0-Y2/12.D0)/(1.D0-X4/12.D0)                             STBF-170
      GO TO 16                                                          STBF-171
   15 KR=K1                                                             STBF-172
   16 KS=IDINT(2.D0+DSQRT(A6/12.D0))                                    STBF-173
C STARTING VALUES                                                       STBF-174
      DO 17 I=1,KS                                                      STBF-175
   17 XX(I)=0.D0                                                        STBF-176
      XX(KS)=1.D0                                                       STBF-177
      IF (L.EQ.1) XX(KS-1)=-.2D0                                        STBF-178
      A4=VAL(5)                                                         STBF-179
      IK=2*IVX(1)                                                       STBF-180
      IST=0                                                             STBF-181
      X1=0.D0                                                           STBF-182
      Y1=-1.D0                                                          STBF-183
      IN1=0                                                             STBF-184
      IN2=0                                                             STBF-185
C SEARCH FOR THE EIGENVALUE                                             STBF-186
   18 X3=X1+A4                                                          STBF-187
   19 IST=IST+1                                                         STBF-188
      IN3=0                                                             STBF-189
      X4=X3*Y5                                                          STBF-190
C UPWARDS INTEGRATION                                                   STBF-191
      DO 20 I=KS,KR                                                     STBF-192
      X5=X4*XX(2*K2+I-1)+XX(K2+I-1)                                     STBF-193
      XX(I+1)=(2.D0+X5/(1.D0-X5/12.D0))*XX(I)-XX(I-1)                   STBF-194
      IF (XX(I+1)*XX(I).LT.0.D0) IN3=IN3+2                              STBF-195
   20 CONTINUE                                                          STBF-196
      IF (VAL(1).LT.0.D0) GO TO 29                                      STBF-197
      A1=XX(KR)                                                         STBF-198
      A2=XX(KR+1)                                                       STBF-199
      XX(K2)=1.D0                                                       STBF-200
      XX(K1)=A3*(1.D0-(X4*XX(3*KN+4)+XX(2*KN+2))/12.D0)/(1.D0-(X4*XX(3*KSTBF-201
     1N+5)+XX(2*KN+3))/12.D0)                                           STBF-202
C BACKWARDS INTEGRATION                                                 STBF-203
      DO 21 I=KR,KN                                                     STBF-204
      J=KN+KR-I                                                         STBF-205
      X5=X4*XX(2*K2+J)+XX(K2+J)                                         STBF-206
      IF (XX(J+1)*XX(J+2).LT.0.D0) IN3=IN3+2                            STBF-207
   21 XX(J)=(2.D0+X5/(1.D0-X5/12.D0))*XX(J+1)-XX(J+2)                   STBF-208
      Y3=A1/A2-XX(KR)/XX(KR+1)                                          STBF-209
      IF (Y3.GT.0.D0) IN3=IN3+1                                         STBF-210
      IF (LO(51)) WRITE (MW,1003) IST,IN3,X3,Y3                         STBF-211
      IF (DABS(Y3).LE.1.D-10.OR.X2.EQ.X3.OR.X1.EQ.X3) GO TO 27          STBF-212
      IF (IN2.NE.0) GO TO 24                                            STBF-213
      IF (IN3.GT.IK) GO TO 22                                           STBF-214
      Y1=Y3                                                             STBF-215
      X1=X3                                                             STBF-216
      IN1=IN3                                                           STBF-217
      A4=X1                                                             STBF-218
      GO TO 18                                                          STBF-219
   22 IF (LO(51)) WRITE (MW,1004) IK,IN1,IN3                            STBF-220
      X2=X3                                                             STBF-221
      IN2=IN3                                                           STBF-222
      Y2=Y3                                                             STBF-223
C INTERPOLATION OF SOLUTION                                             STBF-224
   23 X3=X1+0.5D0*(X2-X1)                                               STBF-225
      IF (IN2.EQ.IN1+1) X3=(Y1*X2-Y2*X1)/(Y1-Y2)                        STBF-226
      GO TO 19                                                          STBF-227
   24 X4=(Y1*Y2*X3*(X2-X1)+Y1*Y3*X2*(X1-X3)+Y2*Y3*X1*(X3-X2))/(Y1*Y2*(X2STBF-228
     1-X1)+Y1*Y3*(X1-X3)+Y2*Y3*(X3-X2))                                 STBF-229
      IF (IN2.GT.IN1+2) X4=1.D20                                        STBF-230
      IF (IN3.GT.IK) GO TO 25                                           STBF-231
      X1=X3                                                             STBF-232
      Y1=Y3                                                             STBF-233
      IN1=IN3                                                           STBF-234
      GO TO 26                                                          STBF-235
   25 X2=X3                                                             STBF-236
      Y2=Y3                                                             STBF-237
      IN2=IN3                                                           STBF-238
   26 IF ((X1-X4)*(X4-X2).LT.0.D0) GO TO 23                             STBF-239
      X3=X4                                                             STBF-240
      GO TO 19                                                          STBF-241
   27 Y3=A1/XX(KR)                                                      STBF-242
      DO 28 I=KR,K2                                                     STBF-243
   28 XX(I)=Y3*XX(I)                                                    STBF-244
   29 DO 30 I=1,KN                                                      STBF-245
   30 XX(I)=(XX(I)+10.D0*XX(I+1)+XX(I+2))/12.D0                         STBF-246
      IF (VAL(1).GT.0.D0) GO TO 31                                      STBF-247
      X1=XX(KN)*Z4-XX(KN-2)*Z2                                          STBF-248
      X2=XX(KN-2)*Z1-XX(KN)*Z3                                          STBF-249
      X3=Z1*Z4-Z2*Z3                                                    STBF-250
      Y2=DATAN2(X2,X1)                                                  STBF-251
      Y1=(X1**2+X2**2)/X3**2                                            STBF-252
      X3=VAL(5)                                                         STBF-253
      GO TO 33                                                          STBF-254
   31 Y1=0.D0                                                           STBF-255
      DO 32 I=1,KN                                                      STBF-256
   32 Y1=Y1+XX(I)**2                                                    STBF-257
      Y1=Y1-0.5D0*XX(KN)**2                                             STBF-258
      Y2=Y4*XX(KN)**2/RR                                                STBF-259
      Y3=IREB                                                           STBF-260
      Y1=Y1*HTMP/Y3+Y2                                                  STBF-261
      Y2=100.D0*Y2/Y1                                                   STBF-262
   33 Y1=1.D0/DSQRT(Y1)                                                 STBF-263
      IS=0                                                              STBF-264
      RR=0.D0                                                           STBF-265
      DO 34 I=IREB,KN,IREB                                              STBF-266
      IS=IS+1                                                           STBF-267
      RR=RR+HTMP                                                        STBF-268
   34 V(IS)=Y1*XX(I)/RR                                                 STBF-269
      IF (LO(51)) WRITE (MW,1005) X3,Y2,(IS,V(IS),IS=1,ISM)             STBF-270
      RETURN                                                            STBF-271
 1000 FORMAT (//' WOODS-SAXON POTENTIAL EIGENFUNCTION WITH N =',I2,3X,'LSTBF-272
     1 =',I3,3X,'2*S =',I2,3X,'2*J =',I3,3X,I4,' STEPS (DIVIDED BY',I3,'STBF-273
     2) MATCHING AT THE',I4,'TH'/' **** BINDING ENERGY',F12.6,' MEV ****STBF-274
     3',4X,'TOTAL MASS',F12.6,4X,'PARTICLE MASS',F12.6,4X,'PRODUCT OF CHSTBF-275
     4ARGES',F8.2/' SEARCH ON DEPTH OF REAL POTENTIAL FROM',F12.6,' WITHSTBF-276
     5 REDUCED RADIUS',F10.6,' FERMI AND DIFFUSENESS',F10.6,' FERMI'/' SSTBF-277
     6PIN-ORBIT POTENTIAL DEPTH:',F12.6,' MEV RADIUS:',F10.6,' FERMI DIFSTBF-278
     7FUSENESS:',F9.6,' FERMI COULOMB RADIUS:',F10.6,' FERMI')          STBF-279
 1001 FORMAT (10X,'NO CONVERGENCE ON MATCHING VALUES')                  STBF-280
 1002 FORMAT (10X,'MATCHING VALUE OBTAINED FOR I=',I3,' WITH',I6,' POINTSTBF-281
     1S')                                                               STBF-282
 1003 FORMAT (2X,I3,5X,'2*N (+0/1) =',I3,5X,'V =',D20.10,5X,'D =',D20.10STBF-283
     1)                                                                 STBF-284
 1004 FORMAT (' INTERPOLATION FOR 2*N =',I4,5X,'BETWEEN',I4,' AND',I4)  STBF-285
 1005 FORMAT (//' DEPTH USED',D20.10,' MEV',15X,'TAIL PERCENTAGE OR PHASSTBF-286
     1E-SHIFT',F10.5//(6(I6,D15.6)))                                    STBF-287
      END                                                               STBF-288
C 01/04/13                                                      ECIS12  POTC-000
      SUBROUTINE POTC(IPP,IVY,VAL,CCZ,ISM,WV,NPP,ITX,INTC,V,P,LO)       POTC-001
C INPUT:     IPP:     CROSS-REFERENCE TO POTENTIALS IN IPI(1,*).        POTC-002
C            IVY:     DESCRIPTION OF FORM FACTORS                       POTC-003
C                     (SEE THIRD PART OF IQ IN REDM).                   POTC-004
C            VAL:     OPTICAL PARAMETERS..                              POTC-005
C            CCZ:     COULOMB ALPHA CONSTANT.                           POTC-006
C            ISM:     NUMBER OF STEPS FOR INTEGRATION.                  POTC-007
C            WV:      INFORMATIONS FOR ROTZ, STEP SIZE IN WV(8).        POTC-008
C            NPP:     NUMBER OF OPTICAL POTENTIALS.                     POTC-009
C            INTC:    NUMBER OF TRANSITION FORM FACTORS WITHOUT SECOND  POTC-010
C                     ONE FOR DEFORMED SPIN-ORBIT  INCLUDING CORRECTION POTC-011
C                     TERMS.                                            POTC-012
C            LO(I):   LOGICAL CONTROLS:                                 POTC-013
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              POTC-014
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   POTC-015
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      POTC-016
C OUTPUT:    V:       POTENTIALS AND TRANSITION FORM FACTORS AT THE     POTC-017
C                     ADDRESSES GIVEN BY ITX,                           POTC-018
C WORKING AREAS:                                                        POTC-019
C            P:       NEEDED IN SUBROUTINE COPO.                        POTC-020
C                                                                       POTC-021
C***********************************************************************POTC-022
      IMPLICIT REAL*8 (A-H,O-Z)                                         POTC-023
      LOGICAL LO(150)                                                   POTC-024
      DIMENSION V(ISM,*),IVY(7,*),IPP(34,*),P(ISM,*),VAL(57,*),WV(22,*),POTC-025
     1ITX(16)                                                           POTC-026
      INVZ=INTC                                                         POTC-027
      DO 3 IP=1,NPP                                                     POTC-028
      KK=IABS(IPP(1,IP))                                                POTC-029
      DO 2 I=7,8                                                        POTC-030
      IF (VAL(4*I-3,IP)*VAL(4*I-1,IP).EQ.0.D0) GO TO 2                  POTC-031
      L1=IP+ITX(I)                                                      POTC-032
      IF (LO(100)) L1=ITX(4)+24*IP+I                                    POTC-033
      CALL COPO(V(1,L1),V(1,L1),P,ISM,WV(8,KK),0,VAL(4*I-3,IP),VAL(33,IPPOTC-034
     1),CCZ,ZT)                                                         POTC-035
      IF (INVZ.EQ.0.OR.(.NOT.LO(8*I-45))) GO TO 2                       POTC-036
      DO 1 J=1,INVZ                                                     POTC-037
      N=IVY(I-3,J)                                                      POTC-038
      L=IVY(7,J)                                                        POTC-039
      IF ((N.EQ.0).OR.(L.EQ.0)) GO TO 1                                 POTC-040
      L1=N+ITX(I+8)                                                     POTC-041
      IF (LO(100)) L1=ITX(5)+11*J+I                                     POTC-042
      I2=L1                                                             POTC-043
      IF (.NOT.(LO(100).OR.(I.NE.8))) I2=I2+INTC                        POTC-044
      CALL COPO(V(1,I2),V(1,I2),P,ISM,WV(8,KK),L,VAL(4*I-3,IP),VAL(33,IPPOTC-045
     1),CCZ,ZT)                                                         POTC-046
    1 CONTINUE                                                          POTC-047
    2 CONTINUE                                                          POTC-048
      INVZ=0                                                            POTC-049
    3 CONTINUE                                                          POTC-050
      RETURN                                                            POTC-051
      END                                                               POTC-052
C 01/10/12                                                      ECIS12  POTV-000
      SUBROUTINE POTV(ISM,IPP,WV,INVZ,V,NPP,ITX,LO)                     POTV-001
C  DERIVATIONS NEEDED FOR SPIN-ORBIT INTERACTIONS OR DIRAC EQUATION.    POTV-002
C INPUT:     ISM:     NUMBER OF STEPS FOR INTEGRATION.                  POTV-003
C            IPP:     CROSS-REFERENCE TO POTENTIALS IN IPI(1,*).        POTV-004
C            WV:      STEP SIZE IN WV(8,*).                             POTV-005
C            INVZ:    NUMBER OF TRANSITION FORM FACTORS.                POTV-006
C            V:       FORM FACTORS BEFORE DERIVATIONS.                  POTV-007
C            NPP:     NUMBER OF OPTICAL POTENTIALS.                     POTV-008
C            ITX:     STARTING ADDRESS OF DIFFERENT FORM FACTORS.       POTV-009
C            LO(I):   LOGICAL CONTROLS:                                 POTV-010
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      POTV-011
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. POTV-012
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   POTV-013
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      POTV-014
C               LO(101)=.TRUE. THERE IS A REAL SPIN-ORBIT POTENTIAL.    POTV-015
C               LO(102)=.TRUE. THERE IS AN IMAGINARY SPIN-ORBIT         POTV-016
C                              POTENTIAL.                               POTV-017
C               LO(103)=.TRUE. THERE IS A COULOMB SPIN-ORBIT POTENTIAL. POTV-018
C OUTPUT:    V:       POTENTIALS AND TRANSITION FORM FACTORS AT THE     POTV-019
C                     ADDRESSES GIVEN BY ITX,                           POTV-020
C                                                                       POTV-021
C***********************************************************************POTV-022
      IMPLICIT REAL*8 (A-H,O-Z)                                         POTV-023
      LOGICAL LO(150)                                                   POTV-024
      DIMENSION V(ISM,*),WV(22,*),IPP(34,*),ITX(16)                     POTV-025
      IF (LO(100)) GO TO 7                                              POTV-026
      DO 3 J=1,NPP                                                      POTV-027
      HTMP=WV(8,IABS(IPP(1,J)))                                         POTV-028
      DO 2 I=5,8                                                        POTV-029
      IF (I.EQ.7) GO TO 2                                               POTV-030
      IF ((I.EQ.5).AND.(.NOT.LO(101))) GO TO 2                          POTV-031
      IF ((I.EQ.6).AND.(.NOT.LO(102))) GO TO 2                          POTV-032
      IF ((I.EQ.8).AND.(.NOT.LO(103))) GO TO 2                          POTV-033
      L2=ITX(I)+J                                                       POTV-034
      CALL DERI(V,V(1,L2),HTMP,ISM)                                     POTV-035
      RR=0.D0                                                           POTV-036
      DO 1 K=1,ISM                                                      POTV-037
      RR=RR+HTMP                                                        POTV-038
      V(K,L2)=V(K,1)/RR                                                 POTV-039
    1 V(K,1)=0.D0                                                       POTV-040
    2 CONTINUE                                                          POTV-041
    3 CONTINUE                                                          POTV-042
      IF (INVZ.EQ.0) RETURN                                             POTV-043
      DO 6 I=13,16                                                      POTV-044
      IF (I.EQ.15) GO TO 6                                              POTV-045
      IF ((I.EQ.13).AND.(.NOT.LO(13))) GO TO 6                          POTV-046
      IF ((I.EQ.14).AND.(.NOT.LO(14))) GO TO 6                          POTV-047
      IF ((I.EQ.16).AND.(.NOT.LO(19))) GO TO 6                          POTV-048
      DO 5 J=1,INVZ                                                     POTV-049
      L1=ITX(I)+J                                                       POTV-050
      L2=L1+INVZ                                                        POTV-051
      CALL DERI(V(1,L1),V(1,L2),HTMP,ISM)                               POTV-052
      RR=0.D0                                                           POTV-053
      DO 4 K=1,ISM                                                      POTV-054
      RR=RR+WV(8,1)                                                     POTV-055
      V(K,L1)=V(K,L1)/RR                                                POTV-056
    4 V(K,L2)=-V(K,L2)/RR**2                                            POTV-057
    5 CONTINUE                                                          POTV-058
    6 CONTINUE                                                          POTV-059
      RETURN                                                            POTV-060
    7 K=ITX(7)                                                          POTV-061
      DO 9 I=1,NPP                                                      POTV-062
      HTMP=WV(8,IABS(IPP(1,I)))                                         POTV-063
      DO 8 J=1,8                                                        POTV-064
      CALL DERI(V(1,K+J+8),V(1,K+J),WV(8,I),ISM)                        POTV-065
    8 CALL DERI(V(1,K+J+16),V(1,K+J+8),WV(8,I),ISM)                     POTV-066
    9 K=K+24                                                            POTV-067
      IF (INVZ.EQ.0) RETURN                                             POTV-068
      DO 10 I=1,INVZ                                                    POTV-069
      IF (LO(101)) CALL DERI(V(1,K+9),V(1,K+5),WV(8,1),ISM)             POTV-070
      IF (LO(102)) CALL DERI(V(1,K+10),V(1,K+6),WV(8,1),ISM)            POTV-071
      IF (LO(103)) CALL DERI(V(1,K+11),V(1,K+8),WV(8,1),ISM)            POTV-072
   10 K=K+11                                                            POTV-073
      RETURN                                                            POTV-074
      END                                                               POTV-075
C 05/05/13                                                      ECIS12  FOLD-000
      SUBROUTINE FOLD(V1,V2,VAL,IP,ISM,IVY,INVZ,FR,PGN,XGN,WV,IZZ,LO)   FOLD-001
C V1 ARE THE POTENTIALS AND FORM FACTORS, UNFOLDED AS INPUT, FOLDED AS  FOLD-002
C OUTPUT. V2 ARE WORKING FIELDS IN WHICH 0. ARE STORED BEFORE THE CALL. FOLD-003
C INPUT:     V1:      POTENTIALS OR FORM FACTORS TO BE FOLDED.          FOLD-004
C            VAL(I,J):FOLDING PARAMETERS FOR THE FOLDING SETS J.        FOLD-005
C            IP:      POTENTIAL TO BE FOLDED IF LO(7)=.FALSE.           FOLD-006
C            ISM:     NUMBER OF POINTS.                                 FOLD-007
C            IVY:     TABLE OF FORM FACTORS (SEE REDM).                 FOLD-008
C            INVZ:    NUMBER OF TRANSITION FORM FACTORS TO FOLD.        FOLD-009
C            PGN:     WEIGHTS OF GAUSS-LEGENDRE INTEGRATION.            FOLD-010
C            XGN:     ABSCISSAE OF GAUSS-LEGENDRE INTEGRATION.          FOLD-011
C            WV(J):   STEP SIZE FOR J=8.                                FOLD-012
C            LO(I):   LOGICAL CONTROLS:                                 FOLD-013
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    FOLD-014
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              FOLD-015
C               LO(12) =.TRUE. DEFORMED IMAGINARY CENTRAL POTENTIAL.    FOLD-016
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      FOLD-017
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. FOLD-018
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   FOLD-019
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      FOLD-020
C OUTPUT:    V1:     :POTENTIALS OR FORM FACTORS FOLDED.                FOLD-021
C WORKING AREAS:                                                        FOLD-022
C            V2:      AREA INITIALISED TO 0.                            FOLD-023
C            FR(I,*): GAUSSIAN OR SAXON FOLDING FUNCTIONS FOR J=1,IMT.  FOLD-024
C                     FOR YUKAWA OR HULTHEN FOLDING: H-FUNCTIONS FOR    FOLD-025
C                     J=1,IMT, J-FUNCTIONS FOR J=IMT+1,2*IMT;           FOLD-026
C                     THESE FUNCTIONS ARE MULTIPLIED BY                 FOLD-027
C                     R*R*EXP(+\-R/VA). INTEGRALS WITH H AND J-FUNCTIONSFOLD-028
C                     FOR J=2*IMT+1,2*IMT+2.                            FOLD-029
C            IZZ(I,*):ADDRESS OF FOLDING PARAMETERS BELOW FOR I=1,      FOLD-030
C                     TYPE OF FORM FACTOR FROM 1 TO 16 FOR I=2,         FOLD-031
C                     ANGULAR MOMENTUM FOR I=3,                         FOLD-032
C                     ADDRESS OF STEP SIZE FOR I=4.                     FOLD-033
C                    (THIS PART IS AN INPUT WITH EXTERNAL FORM FACTORS) FOLD-034
C                                                                       FOLD-035
C FOR THE COMMON  /CONVE/ SEE CALX.                                     FOLD-036
C FOR THE COMMON  /POTE1/ SEE REDM.                                     FOLD-037
C                                                                       FOLD-038
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /CONVE/:                     FOLD-039
C  ACONV:     CONVERGENCE CRITERION FOR POTENTIAL AND FUNCTION.         FOLD-040
C   USED:     ACONV.                                                    FOLD-041
C                                                                       FOLD-042
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE1/:                     FOLD-043
C  ITX(16):   STARTING ADDRESS OF DIFFERENT FORM FACTORS (SEE REDM).    FOLD-044
C  INTC:      NUMBER OF FORM FACTORS WITHOUT DEFORMED SPIN-ORBIT        FOLD-045
C             INCLUDING CORRECTION TERMS.                               FOLD-046
C  INLS:      NUMBER OF SPIN-ORBIT FORM FACTORS NOT TAKING INTO ACCOUNT FOLD-047
C             MULTIPLICATION BY 2.                                      FOLD-048
C  INVD:      IDEM FOR COULOMB SPIN-ORBIT.                              FOLD-049
C  ITXM:      TOTAL NUMBER OF FORM FACTORS.                             FOLD-050
C  NFO:       NUMBER OF SETS OF FOLDING PARAMETERS.                     FOLD-051
C   USED:     ITX,INTC,INLS,INVD,ITXM,NFO.                              FOLD-052
C                                                                       FOLD-053
C FOLDING CONVENTIONS : VAL(*,1-3) REAL POTENTIAL, IMAGINARY, COULOMB.  FOLD-054
C IF VAL(1,*)=0  NO FOLDING.                                            FOLD-055
C IF VAL(3,*)=0 GAUSSIAN FORM FACTOR WITH RANGE VAL(2,*).               FOLD-056
C IF VAL(2,*)=0 HULTHEN FORM FACTOR WITH RANGES VAL(1,*) AND VAL(3,*).  FOLD-057
C IF VAL(2,*)=VAL(3,*)=0 YUKAWA FORM FACTOR WITH RANGE VAL(1,*).        FOLD-058
C ALL OTHER CASES  SAXON FORM FACTOR WITH RADIUS VAL(2,*) AND DIFFUSE-  FOLD-059
C NESS VAL(3,*) - ALL FORM FACTORS ARE NORMALISED - VAL(1,*) IS USED    FOLD-060
C ONLY FOR HULTHEN FORM FACTOR.                                         FOLD-061
C THE DIFFUSENESS OF A SAXON FORM FACTOR AND THE RANGES OF A HULTHEN OR FOLD-062
C YUKAWA FORM FACTOR ARE POSITIVE BY TAKING THE ABSOLUTE VALUE.         FOLD-063
C                                                                       FOLD-064
C***********************************************************************FOLD-065
      IMPLICIT REAL*8 (A-H,O-Z)                                         FOLD-066
      LOGICAL LO(150)                                                   FOLD-067
C     DIMENSION V1(ISM,*),V2(ISM,*),VAL(3,8),IVY(7,*),FR(ISM+5,*),PGN(10FOLD-068
C    1),XGN(10),WV(22,*),IZZ(4,*)                                       FOLD-069
      DIMENSION V1(ISM,*),V2(ISM,*),VAL(3,8),IVY(7,*),FR(2*(ISM+5),*),PGFOLD-070
     1N(10),XGN(10),WV(22,*),IZZ(4,*)                                   FOLD-071
      COMMON /CONVE/ H,BJM,EITER,ACONV,CONJ,HCONV                       FOLD-072
      COMMON /INOUT/ MR,MW,MS                                           FOLD-073
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM,NFO          FOLD-074
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   FOLD-075
      DATA PIM2 /6.2831853070D0/                                        FOLD-076
      AC=-DLOG(ACONV)                                                   FOLD-077
      JSL=ISM+1                                                         FOLD-078
      ITXN=ITXM                                                         FOLD-079
      IF (LO(100)) ITXN=ITXN-ITX(2)                                     FOLD-080
      IF (LO(7)) GO TO 8                                                FOLD-081
C INITIALISATION OF THE TABLE IZZ WHEN POTENTIALS ARE NOT EXTERNAL.     FOLD-082
      DO 2 J=1,ITXN                                                     FOLD-083
      DO 1 I=1,4                                                        FOLD-084
    1 IZZ(I,J)=0                                                        FOLD-085
    2 CONTINUE                                                          FOLD-086
      DO 4 IP=1,NPP                                                     FOLD-087
      DO 3 I=1,8                                                        FOLD-088
      IF (VAL(1,I).EQ.0.D0) GO TO 3                                     FOLD-089
      N=I                                                               FOLD-090
      IF (.NOT.LO(100)) N=1+ITX(I)                                      FOLD-091
      IZZ(1,N)=-I                                                       FOLD-092
      IZZ(2,N)=I                                                        FOLD-093
      IZZ(4,N)=IP                                                       FOLD-094
    3 CONTINUE                                                          FOLD-095
    4 CONTINUE                                                          FOLD-096
      IF (INVZ.EQ.0) GO TO 8                                            FOLD-097
      IJ=ITX(3)-ITX(7)                                                  FOLD-098
      DO 7 J=1,INVZ                                                     FOLD-099
      DO 6 I=1,8                                                        FOLD-100
      IF (VAL(1,I).EQ.0.D0) GO TO 6                                     FOLD-101
      IF (((I.EQ.2).OR.(I.EQ.4)).AND.(.NOT.LO(12))) GO TO 6             FOLD-102
      IF ((I.EQ.5).AND.(.NOT.LO(13))) GO TO 6                           FOLD-103
      IF ((I.EQ.6).AND.(.NOT.LO(14))) GO TO 6                           FOLD-104
      IF ((I.EQ.7).AND.(.NOT.LO(11))) GO TO 6                           FOLD-105
      IF ((I.EQ.8).AND.(.NOT.LO(19))) GO TO 6                           FOLD-106
      N=I+IJ                                                            FOLD-107
      IF (LO(100)) GO TO 5                                              FOLD-108
      N=J+ITX(I+8)                                                      FOLD-109
      IF ((I.GE.5).AND.(I.NE.7)) N=N+INVZ                               FOLD-110
    5 IZZ(1,N)=-I                                                       FOLD-111
      IZZ(2,N)=I+8                                                      FOLD-112
      IZZ(3,N)=IVY(7,J)                                                 FOLD-113
    6 IZZ(4,N)=1                                                        FOLD-114
    7 IJ=IJ+11                                                          FOLD-115
C CLASSIFICATION OF STEP SIZES.                                         FOLD-116
    8 NFOT=-NFO                                                         FOLD-117
C FOR EXTERNAL POTENTIALS, ADD 1 FOR DUMMY FOLDING.                     FOLD-118
C LOOP ON FOLDINGS.                                                     FOLD-119
      DO 45 II=1,NFO                                                    FOLD-120
      IC=0                                                              FOLD-121
      DO 9 J=1,3                                                        FOLD-122
      IF (VAL(J,II).NE.0.D0) IC=IC+2**(3-J)                             FOLD-123
      IF (VAL(J,II).GE.0.D0) GO TO 9                                    FOLD-124
      WRITE (MW,1000) VAL(J,II),J,II                                    FOLD-125
      VAL(J,II)=-VAL(J,II)                                              FOLD-126
    9 CONTINUE                                                          FOLD-127
      IF (IC.LT.4) GO TO 45                                             FOLD-128
      IH=0                                                              FOLD-129
   10 IMT=1                                                             FOLD-130
      JH=0                                                              FOLD-131
      KH=0                                                              FOLD-132
C SEPARATION OF FOLDINGS WITH RESPECT TO THE STEP SIZE.                 FOLD-133
      DO 11 J=1,ITXN                                                    FOLD-134
      IF ((IZZ(1,J)+II.NE.0).OR.(IZZ(4,J).LT.IH)) GO TO 11              FOLD-135
      KH=KH+1                                                           FOLD-136
      IF ((JH.NE.0).AND.(IZZ(4,J).GT.IH)) GO TO 11                      FOLD-137
      JH=JH+1                                                           FOLD-138
      IH=IZZ(4,J)                                                       FOLD-139
      IZZ(1,J)=NFOT-1                                                   FOLD-140
      IMT=MAX0(IMT,IZZ(3,J)+1)                                          FOLD-141
   11 CONTINUE                                                          FOLD-142
      IF (JH.EQ.0) GO TO 45                                             FOLD-143
      NFOT=NFOT-1                                                       FOLD-144
      HH=WV(8,IH)                                                       FOLD-145
C COMPUTATION OF THE STRENGTH OF THE FOLDING FUNCTIONS.                 FOLD-146
      CN=1.D0                                                           FOLD-147
      IF (IC.GT.5) GO TO 12                                             FOLD-148
C YUKAWA FOLDING.                                                       FOLD-149
      IF (VAL(3,II).EQ.VAL(1,II)) VAL(3,II)=.99D0*VAL(1,II)             FOLD-150
      CN=HH/(2.D0*PIM2*(VAL(1,II)**2-VAL(3,II)**2))                     FOLD-151
      JST=ISM+5                                                         FOLD-152
      GO TO 15                                                          FOLD-153
   12 IF (IC.EQ.7) GO TO 13                                             FOLD-154
C GAUSSIAN FOLDING.                                                     FOLD-155
      ISY=1+IDINT(VAL(2,II)*DSQRT(AC)/HH)                               FOLD-156
      CN=HH/(0.5D0*PIM2*DSQRT(0.5D0*PIM2)*VAL(2,II)**3)                 FOLD-157
      GO TO 15                                                          FOLD-158
C SAXON FOLDING.                                                        FOLD-159
   13 IS=1+IDINT((VAL(2,II)+10.D0*VAL(3,II))/HH)                        FOLD-160
      ISY=1+IDINT((VAL(2,II)+2.D0*VAL(3,II)*AC)/HH)                     FOLD-161
      CN=0.D0                                                           FOLD-162
      DO 14 K=1,IS                                                      FOLD-163
      RR=HH*K                                                           FOLD-164
   14 CN=CN+RR*RR/(1.D0+DEXP((RR-VAL(2,II))/VAL(3,II)))                 FOLD-165
      CN=.5D0/(PIM2*CN)                                                 FOLD-166
C GAUSSIAN OR SAXON FOLDING.                                            FOLD-167
   15 AN=DFLOAT(IMT-1)                                                  FOLD-168
      IF (IC.LT.6) GO TO 28                                             FOLD-169
C DO LOOP ON THE POINTS OF POTENTIALS.                                  FOLD-170
      FS=0.D0                                                           FOLD-171
      IS=0                                                              FOLD-172
   16 IS=IS+1                                                           FOLD-173
      JST=IS+ISY                                                        FOLD-174
      JSM=MIN0(ISM,JST)                                                 FOLD-175
      R=VAL(2,II)                                                       FOLD-176
      A=VAL(3,II)                                                       FOLD-177
      X1=HH*DFLOAT(IS)                                                  FOLD-178
      IF (JST.LE.ISM) GO TO 17                                          FOLD-179
      JSZ=MAX0(ISM,1+IS+2*IDINT((R+2.D0*A)/HH))                         FOLD-180
      JST=MIN0(JST,JSZ+4)                                               FOLD-181
C LOOP ON THE POINTS OF THE FOLDING FUNCTION FOR WHICH THE SYMMETRY     FOLD-182
C BETWEEN THE TWO ARGUMENTS IS USED.                                    FOLD-183
   17 JI=IS-1                                                           FOLD-184
   18 JI=JI+1                                                           FOLD-185
      A3=HH*JI                                                          FOLD-186
      A4=2.D0*X1*A3                                                     FOLD-187
      Y=X1*X1+A3*A3                                                     FOLD-188
      IF (A.EQ.0.D0) GO TO 22                                           FOLD-189
C SAXON FOLDING FUNCTION  BY A 20-POINTS GAUSSIAN INTEGRATION           FOLD-190
C THE SAXON FORM FACTOR ITSELF IS THE VARIABLE.                         FOLD-191
      DO 19 K=1,IMT                                                     FOLD-192
   19 FR(JI,K)=0.D0                                                     FOLD-193
      R1TMP=DMIN1(70.D0,(DABS(X1-A3)-R)/A)                              FOLD-194
      R2=DMIN1(70.D0,(X1+A3-R)/A)                                       FOLD-195
      E1=1.D0/(1.D0+DEXP(R1TMP))                                        FOLD-196
      E2=1.D0/(1.D0+DEXP(R2))                                           FOLD-197
      EM=0.5D0*(E1+E2)                                                  FOLD-198
      ES=0.5D0*(E1-E2)                                                  FOLD-199
      P1=ES*2.D0*A*PIM2/A4                                              FOLD-200
      DO 21 IJ=1,10                                                     FOLD-201
      PP=P1*PGN(IJ)                                                     FOLD-202
      E1=1.D0/(EM+ES*XGN(IJ))-1.D0                                      FOLD-203
      E2=1.D0/(EM-ES*XGN(IJ))-1.D0                                      FOLD-204
      U1=R+A*DLOG(E1)                                                   FOLD-205
      U2=R+A*DLOG(E2)                                                   FOLD-206
      R1TMP=PP*U1*(1.D0+E1)/E1                                          FOLD-207
      R2=PP*U2*(1.D0+E2)/E2                                             FOLD-208
      FR(JI,1)=FR(JI,1)+R1TMP+R2                                        FOLD-209
      IF (IMT.EQ.1) GO TO 21                                            FOLD-210
      E1=(Y-U1*U1)/A4                                                   FOLD-211
      E2=(Y-U2*U2)/A4                                                   FOLD-212
      R3=R1TMP*E1                                                       FOLD-213
      R4=R2*E2                                                          FOLD-214
      FR(JI,2)=FR(JI,2)+R3+R4                                           FOLD-215
      IF (IMT.EQ.2) GO TO 21                                            FOLD-216
C RECURRENCE FOR LEGENDRE POLYNOMIALS.                                  FOLD-217
      DO 20 K=3,IMT                                                     FOLD-218
      R5=R1TMP                                                          FOLD-219
      R6=R2                                                             FOLD-220
      R1TMP=R3                                                          FOLD-221
      R2=R4                                                             FOLD-222
      R3=(DFLOAT(2*K-3)*R1TMP*E1-R5*DFLOAT(K-2))/DFLOAT(K-1)            FOLD-223
      R4=(DFLOAT(2*K-3)*R2*E2-R6*DFLOAT(K-2))/DFLOAT(K-1)               FOLD-224
   20 FR(JI,K)=FR(JI,K)+R3+R4                                           FOLD-225
   21 CONTINUE                                                          FOLD-226
      GO TO 26                                                          FOLD-227
C GAUSSIAN FOLDING FUNCTION.                                            FOLD-228
   22 A4=A4/(R*R)                                                       FOLD-229
      Y=Y/(R*R)                                                         FOLD-230
      B1=DEXP(A4-Y)                                                     FOLD-231
      B2=0.D0                                                           FOLD-232
      IF (A4+Y.LT.50.) B2=DEXP(-A4-Y)                                   FOLD-233
      DN=1.D0/A4                                                        FOLD-234
   23 FR(JI,1)=PIM2*(B1-B2)*DN                                          FOLD-235
      IF (IMT.EQ.1) GO TO 26                                            FOLD-236
C DOWNWARDS RECURRENCE FOR SMALL ARGUMENTS.                             FOLD-237
      Q=DMAX1(DSQRT(10.5D0*A4)-0.5D0,AN)                                FOLD-238
      K=IDINT(Q+3.D0+21.D0*A4/(Q+Q+1.D0))                               FOLD-239
      A1=0.D0                                                           FOLD-240
   24 A1=A4/(2.D0*K+1.D0+A4*A1)                                         FOLD-241
      IF (K.LT.IMT) FR(JI,K+1)=A1                                       FOLD-242
      K=K-1                                                             FOLD-243
      IF (K.GT.0) GO TO 24                                              FOLD-244
      DO 25 K=2,IMT                                                     FOLD-245
   25 FR(JI,K)=FR(JI,K)*FR(JI,K-1)                                      FOLD-246
   26 IF (IC.LT.6) GO TO 31                                             FOLD-247
      IF (JI.LT.JST) GO TO 18                                           FOLD-248
      IK=1                                                              FOLD-249
      GO TO 34                                                          FOLD-250
   27 IK=2                                                              FOLD-251
      GO TO 34                                                          FOLD-252
C LOOP ON THE TWO YUKAWA FORM FACTORS.                                  FOLD-253
   28 FS=1.D0                                                           FOLD-254
      VA=VAL(1,II)                                                      FOLD-255
   29 IF (VA.EQ.0.D0) GO TO 40                                          FOLD-256
C COMPUTATION OF BESSEL FUNCTIONS MULTIPLIED BY R*R AND EXP(R/VA).      FOLD-257
      JI=0                                                              FOLD-258
      B1=1.D0                                                           FOLD-259
      B2=1.D0                                                           FOLD-260
      B4=DEXP(-HH/VA)                                                   FOLD-261
   30 JI=JI+1                                                           FOLD-262
      A2=HH*DFLOAT(JI)                                                  FOLD-263
      A4=A2/VA                                                          FOLD-264
      B2=B2*B4**2                                                       FOLD-265
      FR(JI,IMT+1)=FS*A2                                                FOLD-266
      DN=A2*VA                                                          FOLD-267
      GO TO 23                                                          FOLD-268
C UPWARDS RECURRENCE FOR THE IRREGULAR FUNCTION.                        FOLD-269
   31 FR(JI,IMT+2)=FR(JI,IMT+1)*(1.D0+1.D0/A4)                          FOLD-270
      IF (IMT.EQ.2) GO TO 33                                            FOLD-271
      DO 32 K=3,IMT                                                     FOLD-272
   32 FR(JI,K+IMT)=FR(JI,K-2+IMT)+FR(JI,K-1+IMT)*(2*K-3)/A4             FOLD-273
   33 IF (JI.LT.JST) GO TO 30                                           FOLD-274
C CORRECTIONS FOR SINGULAR FIRST DERIVATIVE (YUKAWA FORM FACTOR).       FOLD-275
      VR=-FS*HH*PIM2/6.D0                                               FOLD-276
      IK=1                                                              FOLD-277
   34 DO 39 K=1,ITXN                                                    FOLD-278
      IF (IZZ(1,K).NE.NFOT) GO TO 39                                    FOLD-279
      IF ((IK.EQ.1).AND.MOD(IZZ(2,K),8).GT.6) GO TO 39                  FOLD-280
      IF ((IK.EQ.2).AND.MOD(IZZ(2,K),8).LE.6) GO TO 39                  FOLD-281
      N=IZZ(3,K)+1                                                      FOLD-282
      IF (IC.LT.6) GO TO 36                                             FOLD-283
      DO 35 JS=IS,JSM                                                   FOLD-284
      B1=(HH*DFLOAT(JS))**2                                             FOLD-285
      IF (JS.EQ.IS) GO TO 35                                            FOLD-286
      V2(JS,K)=V2(JS,K)+V1(IS,K)*FR(JS,N)*X1**2                         FOLD-287
   35 V2(IS,K)=V2(IS,K)+V1(JS,K)*FR(JS,N)*B1                            FOLD-288
      GO TO 39                                                          FOLD-289
   36 B2=0.D0                                                           FOLD-290
      B3=FR(JSL,N+IMT)*V1(ISM,K)                                        FOLD-291
      DO 37 IS=1,ISM                                                    FOLD-292
      JS=JSL-IS                                                         FOLD-293
      FR(JS,2*IMT+1)=B3*B4                                              FOLD-294
      B2=B2*B4+FR(IS,N)*V1(IS,K)                                        FOLD-295
      B3=B3*B4+FR(JS,N+IMT)*V1(JS,K)                                    FOLD-296
   37 FR(IS,2*IMT+2)=B2                                                 FOLD-297
      DO 38 IS=1,ISM                                                    FOLD-298
      RR=(IS*HH)**2                                                     FOLD-299
   38 V2(IS,K)=V2(IS,K)+(FR(IS,N)*FR(IS,2*IMT+1)+FR(IS,N+IMT)*FR(IS,2*IMFOLD-300
     1T+2))/RR+V1(IS,K)*VR                                              FOLD-301
   39 CONTINUE                                                          FOLD-302
      IF (IK.EQ.1) GO TO 27                                             FOLD-303
      IF (IS.LT.ISM) GO TO 16                                           FOLD-304
   40 FS=-FS                                                            FOLD-305
      IF (FS.GE.0.D0) GO TO 41                                          FOLD-306
      VA=VAL(3,II)                                                      FOLD-307
      GO TO 29                                                          FOLD-308
C TRANSFER OF POTENTIALS FROM WORKING SPACE.                            FOLD-309
   41 DO 44 J=1,ITXN                                                    FOLD-310
      IF (IZZ(1,J).NE.NFOT) GO TO 44                                    FOLD-311
      IF (NFOT.EQ.1) GO TO 43                                           FOLD-312
      DO 42 IS=1,ISM                                                    FOLD-313
   42 V1(IS,J)=CN*V2(IS,J)                                              FOLD-314
      GO TO 44                                                          FOLD-315
C STEP SIZE FOR DUMMY FOLDING.                                          FOLD-316
   43 IH=IZZ(4,J)                                                       FOLD-317
      HH=WV(8,IH)                                                       FOLD-318
   44 CONTINUE                                                          FOLD-319
      IF (KH.NE.JH.AND.NFOT.NE.1) GO TO 10                              FOLD-320
   45 CONTINUE                                                          FOLD-321
      RETURN                                                            FOLD-322
 1000 FORMAT (' NEGATIVE VALUE',D15.5,4X,'OF FOLDING PARAMETER VAL(',I3,FOLD-323
     1',',I3,')')                                                       FOLD-324
      END                                                               FOLD-325
C 15/08/12                                                      ECIS12  DERI-000
      SUBROUTINE DERI(X,Y,H,N)                                          DERI-001
C NUMERICAL DERIVATION OF THE FUNCTION Y KNOWN IN N POINTS WITH STEP H  DERI-002
C IT NEEDS AT LEAST 7 POINTS AND RETURNS IN X THE VALUE OF -D(Y)/DR     DERI-003
C IF LT IS FALSE, THE RESULT IS DIVIDED BY R..                          DERI-004
C INPUT:     Y:       FUNCTION TO BE DERIVED.                           DERI-005
C            H:       STEP SIZE OF Y.                                   DERI-006
C            N:       NUMBER OF POINTS OF Y.                            DERI-007
C OUTPUT:    X:       RESULT.                                           DERI-008
C***********************************************************************DERI-009
      IMPLICIT REAL*8 (A-H,O-Z)                                         DERI-010
      DIMENSION X(N),Y(N)                                               DERI-011
      COMMON /INOUT/ MR,MW,MS                                           DERI-012
      N3=N-3                                                            DERI-013
      IF (N3.GE.4) GO TO 1                                              DERI-014
      WRITE (MW,1000) N                                                 DERI-015
      STOP                                                              DERI-016
    1 HH=-H*60.D0                                                       DERI-017
      X(1)=(-147.D0*Y(1)+360.D0*Y(2)-450.D0*Y(3)+400.D0*Y(4)-225.D0*Y(5)DERI-018
     1+72.D0*Y(6)-10.D0*Y(7))/HH                                        DERI-019
      X(2)=(-10.D0*Y(1)-77.D0*Y(2)+150.D0*Y(3)-100.D0*Y(4)+50.D0*Y(5)-15DERI-020
     1.D0*Y(6)+2.D0*Y(7))/HH                                            DERI-021
      X(3)=(2.D0*Y(1)-24.D0*Y(2)-35.D0*Y(3)+80.D0*Y(4)-30.D0*Y(5)+8.D0*YDERI-022
     1(6)-Y(7))/HH                                                      DERI-023
      DO 2 I=4,N3                                                       DERI-024
    2 X(I)=(45.D0*(Y(I+1)-Y(I-1))-9.D0*(Y(I+2)-Y(I-2))+Y(I+3)-Y(I-3))/HHDERI-025
      X(N-2)=(Y(N-6)-8.D0*Y(N-5)+30.D0*Y(N-4)-80.D0*Y(N3)+35.D0*Y(N-2)+2DERI-026
     14.D0*Y(N-1)-2.D0*Y(N))/HH                                         DERI-027
      X(N-1)=(-2.D0*Y(N-6)+15.D0*Y(N-5)-50.D0*Y(N-4)+100.D0*Y(N3)-150.D0DERI-028
     1*Y(N-2)+77.D0*Y(N-1)+10.D0*Y(N))/HH                               DERI-029
      X(N)=(10.D0*Y(N-6)-72.D0*Y(N-5)+225.D0*Y(N-4)-400.D0*Y(N3)+450.D0*DERI-030
     1Y(N-2)-360.D0*Y(N-1)+147.D0*Y(N))/HH                              DERI-031
      RETURN                                                            DERI-032
 1000 FORMAT (5X,I5,' POINTS INSUFFICIENT FOR DERIVATION'///' IN DERI  .DERI-033
     1..  STOP  ...')                                                   DERI-034
      END                                                               DERI-035
C 18/10/12                                                      ECIS12  TLNC-000
      SUBROUTINE TLNC(HH,IPI,WV,TL,ISM,X,FF,LM,NN,DD,IL,V,VCO,LO)       TLNC-001
C TRANSMISSION COEFFICIENTS OF UNCOUPLED STATES FOR COMPOUND NUCLEUS.   TLNC-002
C INPUT:     HH:      STEP SIZE FOR THE GROUND STATE.                   TLNC-003
C            IPI,WV:  IPI AND WV FOR THIS STATE (SEE CALX).             TLNC-004
C            ISM:     NUMBER OF STEPS.                                  TLNC-005
C            LM:      NUMBER OF COULOMB FUNCTIONS NEEDED.               TLNC-006
C            IL:      LENGTH OF WORKING SPACE.                          TLNC-007
C            V:       POTENTIALS REAL AND IMAGINARY.                    TLNC-008
C            VCO:     STRENGTH OF LONG RANGE COULOMB CORRECTION.        TLNC-009
C            LO(I):   LOGICAL CONTROLS:                                 TLNC-010
C               LO(101)=.TRUE. THERE IS A REAL SPIN-ORBIT POTENTIAL.    TLNC-011
C               LO(102)=.TRUE. THERE IS AN IMAGINARY SPIN-ORBIT         TLNC-012
C                              POTENTIAL.                               TLNC-013
C               LO(103)=.TRUE. THERE IS A COULOMB SPIN-ORBIT POTENTIAL. TLNC-014
C                              CONSTANT POTENTIAL.                      TLNC-015
C               LO(27) =.TRUE. NUMEROV'S METHOD FOR SINGLE EQUATIONS.   TLNC-016
C               LO(44) =.TRUE. COULOMB CORRECTIONS.                     TLNC-017
C               LO(133)=.TRUE. STORE SCALAR AND COULOMB POTENTIAL       TLNC-018
C                              INDEPENDENTLY.                           TLNC-019
C OUTPUT:    TL:      TRANSMISSION COEFFICIENTS OF UNCOUPLED LEVELS.    TLNC-020
C WORKING AREAS:                                                        TLNC-021
C            X:       FOR THE INTEGRATION.                              TLNC-022
C            FF:      FOR COULOMB FUNCTIONS AND CORRECTIONS.            TLNC-023
C            NN:      NEEDED BY SUBROUTINE FCOU.                        TLNC-024
C            DD:      NEEDED BY SUBROUTINE CORI.                        TLNC-025
C***********************************************************************TLNC-026
      IMPLICIT REAL*8 (A-H,O-Z)                                         TLNC-027
      LOGICAL LO(150)                                                   TLNC-028
      DIMENSION IPI(11),WV(22),TL(*),X(2,*),FF(LM,*),NN(*),DD(*),V(ISM,*TLNC-029
     1),VCO(2),FAM(4),B(4),G(4),AV(5)                                   TLNC-030
      IF (WV(3).LE.0.D0) RETURN                                         TLNC-031
      J=0                                                               TLNC-032
      CALL FCOU(IPI(10),WV(5),ISM*WV(8)*WV(11),FF,FF(1,2),FF(1,3),FF(1,4TLNC-033
     1),NN,FF(1,5))                                                     TLNC-034
      L=IPI(10)+1                                                       TLNC-035
      DO 1 JL=1,L                                                       TLNC-036
      IF (NN(JL).EQ.0) GO TO 1                                          TLNC-037
      FF(JL,1)=FF(JL,1)*1.D-15                                          TLNC-038
      FF(JL,2)=FF(JL,2)*1.D-15                                          TLNC-039
      FF(JL,3)=FF(JL,3)*1.D15                                           TLNC-040
      FF(JL,4)=FF(JL,4)*1.D15                                           TLNC-041
    1 CONTINUE                                                          TLNC-042
      JC=0                                                              TLNC-043
      IF (.NOT.(LO(103).OR.LO(44))) GO TO 2                             TLNC-044
      JC=5                                                              TLNC-045
      RM=ISM*WV(8)*WV(11)                                               TLNC-046
      CALL CORI(WV(5),WV(5),RM,RM,DD,FF(1,5),FF(1,5),FF,FF,DD(200),LM,LMTLNC-047
     1,IL,LM,FF(1,6))                                                   TLNC-048
    2 IJ=IPI(2)                                                         TLNC-049
      VPR=WV(9)**2                                                      TLNC-050
      VPC=WV(10)**2                                                     TLNC-051
      DO 25 LJ=1,L                                                      TLNC-052
      DO 24 JL=1,IJ                                                     TLNC-053
      JJ=2*(LJ+JL)-IJ-3                                                 TLNC-054
      J=J+1                                                             TLNC-055
      TL(J)=0.D0                                                        TLNC-056
      IF (JJ.LT.IJ+1-2*LJ) GO TO 24                                     TLNC-057
      L1=LJ-1                                                           TLNC-058
      CLL=DFLOAT(LJ*(LJ-1))                                             TLNC-059
      CLS=.25D0*DFLOAT(JJ*(JJ+2)-IJ*IJ+1)-CLL                           TLNC-060
C VALUES OF LONG RANGE TAILS OF CENTRAL POTENTIALS.                     TLNC-061
      F2=VCO(1)**2                                                      TLNC-062
      F3=VCO(2)*CLS                                                     TLNC-063
      IF (WV(3).GT.0.D0.AND.JC.GT.0) GO TO 3                            TLNC-064
      F2=0.D0                                                           TLNC-065
      F3=0.D0                                                           TLNC-066
C INTEGRATION REGION - SET UP OF POTENTIAL IN FIVE POINTS FOR           TLNC-067
C TRANSFORMATION OF MATCHING VALUES.                                    TLNC-068
    3 B1=HH*HH/48.D0                                                    TLNC-069
      C1=DFLOAT(ISM-1)*HH                                               TLNC-070
      A1=WV(11)**2                                                      TLNC-071
      IF (WV(3).LT.0.D0) A1=-A1                                         TLNC-072
      DO 4 K=1,5                                                        TLNC-073
      AV(K)=B1*(2.D0*WV(11)*WV(5)/C1-A1+(CLL-F2-F3/C1)/C1**2)           TLNC-074
    4 C1=C1+0.5D0*HH                                                    TLNC-075
C COMPUTATION OF COULOMB CORRECTIONS.                                   TLNC-076
      DO 5 K=1,4                                                        TLNC-077
    5 B(K)=FF(L1+1,K)                                                   TLNC-078
      IF (JC.LE.0) GO TO 9                                              TLNC-079
      IF (WV(5).NE.0.D0) GO TO 6                                        TLNC-080
      F2=F3*WV(11)                                                      TLNC-081
      F3=0.D0                                                           TLNC-082
    6 DO 7 K=1,4                                                        TLNC-083
    7 G(K)=-FF(L1+1,K+JC)*F2                                            TLNC-084
      IF (F3.EQ.0.D0) GO TO 8                                           TLNC-085
      B1=2.D0*WV(5)*DFLOAT(L1*(L1+1))                                   TLNC-086
      B2=DFLOAT(L1+1)**2+WV(5)**2                                       TLNC-087
      C1=-(DFLOAT(2*L1+1)*B2+2*WV(5)**2)/B1                             TLNC-088
      C2=DFLOAT(2*L1+3)*B2/B1                                           TLNC-089
      A1=DFLOAT(ISM)*WV(11)*WV(8)                                       TLNC-090
      D1=(B2+DFLOAT(L1+1)*WV(5)/A1)/A1/B1                               TLNC-091
      D2=-WV(5)*DSQRT(B2)/B1/A1                                         TLNC-092
      A1=B2/B1/A1                                                       TLNC-093
      A3=F3*WV(11)                                                      TLNC-094
      G(1)=G(1)-A3*(C1*FF(L1+1,1+JC)+C2*FF(L1+2,1+JC)-D1*FF(L1+1,1)**2-DTLNC-095
     12*2.D0*FF(L1+1,1)*FF(L1+2,1)-A1*FF(L1+2,1)**2)                    TLNC-096
      G(2)=G(2)-A3*(C1*FF(L1+1,2+JC)+C2*FF(L1+2,2+JC)-D1*FF(L1+1,1)*FF(LTLNC-097
     11+1,3)-D2*(FF(L1+1,1)*FF(L1+2,3)+FF(L1+2,1)*FF(L1+1,3))-A1*FF(L1+2TLNC-098
     2,1)*FF(L1+2,3))                                                   TLNC-099
      G(4)=G(4)-A3*(C1*FF(L1+1,4+JC)+C2*FF(L1+2,4+JC)-D1*FF(L1+1,3)**2-DTLNC-100
     12*2.D0*FF(L1+1,3)*FF(L1+2,3)-A1*FF(L1+2,3)**2)                    TLNC-101
    8 A4=1.D0+(G(1)*G(4)-G(2)**2)                                       TLNC-102
      G(3)=B(1)                                                         TLNC-103
      B(1)=(B(1)*(1.D0-G(2))+G(1)*B(3))/A4                              TLNC-104
      B(3)=(-G(3)*G(4)+(1.D0+G(2))*B(3))/A4                             TLNC-105
      G(3)=B(2)                                                         TLNC-106
      B(2)=(B(2)*(1.D0-G(2))+G(1)*B(4))/A4                              TLNC-107
      B(4)=(-G(3)*G(4)+(1.D0+G(2))*B(4))/A4                             TLNC-108
    9 A1=(1.D0-AV(2))/(2.D0+10.D0*AV(2))                                TLNC-109
      B1=(1.D0-AV(4))/(2.D0+10.D0*AV(4))                                TLNC-110
      A2=A1*(1.D0-AV(1))/(1.D0-4.D0*AV(1))                              TLNC-111
      B2=B1*(1.D0-AV(5))/(1.D0-4.D0*AV(5))                              TLNC-112
      C1=(2.D0+10.D0*AV(3))-(1.D0-AV(3))*(A1+B1)                        TLNC-113
      A1=(16.D0-144.D0*AV(2))/(2.D0+10.D0*AV(2))                        TLNC-114
      B1=(16.D0-144.D0*AV(4))/(2.D0+10.D0*AV(4))                        TLNC-115
      C2=(7.D0+A1*(1.D0-AV(1)))/(1.D0-4.D0*AV(1))                       TLNC-116
      D2=(7.D0+B1*(1.D0-AV(5)))/(1.D0-4.D0*AV(5))                       TLNC-117
      D1=(B1-A1)*(1.D0-AV(3))                                           TLNC-118
      A1=A2*D2+B2*C2                                                    TLNC-119
      B1=(C1*D2+D1*B2)/A1                                               TLNC-120
      B2=30.D0*HH*B2*WV(11)/A1                                          TLNC-121
      FAM(1)=B1*B(1)-B2*B(2)                                            TLNC-122
      FAM(3)=B1*B(3)-B2*B(4)                                            TLNC-123
      B1=(C2*C1-A2*D1)/A1                                               TLNC-124
      A2=-30.D0*HH*A2*WV(11)/A1                                         TLNC-125
      FAM(2)=B1*B(1)-A2*B(2)                                            TLNC-126
      FAM(4)=B1*B(3)-A2*B(4)                                            TLNC-127
      CSO=2.D0*VPR*CLS                                                  TLNC-128
C COMPUTATION OF THE REGULAR SOLUTION.                                  TLNC-129
      DO 10 IS=1,ISM                                                    TLNC-130
      X(1,IS+2)=WV(12)-CLL/DFLOAT(IS)**2+VPR*V(IS,1)                    TLNC-131
   10 X(2,IS+2)=VPR*V(IS,2)                                             TLNC-132
      IF ((.NOT.LO(101)).OR.(CSO.EQ.0.D0)) GO TO 13                     TLNC-133
      DO 11 IS=1,ISM                                                    TLNC-134
   11 X(1,IS+2)=X(1,IS+2)+CSO*V(IS,3)                                   TLNC-135
      IF (.NOT.LO(102)) GO TO 13                                        TLNC-136
      DO 12 IS=1,ISM                                                    TLNC-137
   12 X(2,IS+2)=X(2,IS+2)+CSO*V(IS,4)                                   TLNC-138
   13 IF (.NOT.LO(133)) GO TO 17                                        TLNC-139
      IF (WV(5).EQ.0.D0) GO TO 15                                       TLNC-140
      DO 14 IS=1,ISM                                                    TLNC-141
   14 X(1,IS+2)=X(1,IS+2)+VPC*V(IS,5)                                   TLNC-142
   15 IF (.NOT.LO(103)) GO TO 17                                        TLNC-143
      VPD=2.D0*CLS*VPC                                                  TLNC-144
      IF (VPD*VCO(2).EQ.0.D0) GO TO 17                                  TLNC-145
      DO 16 IS=1,ISM                                                    TLNC-146
   16 X(1,IS+2)=X(1,IS+2)+VPD*V(IS,6)                                   TLNC-147
   17 CONTINUE                                                          TLNC-148
      IF (LO(27)) GO TO 19                                              TLNC-149
C MODIFIED NUMEROV METHOD.                                              TLNC-150
      DO 18 IS=1,ISM                                                    TLNC-151
      A1=X(1,IS+2)**2-X(2,IS+2)**2                                      TLNC-152
      IF (LO(26)) A1=A1-X(1,IS+2)**3/30.D0                              TLNC-153
      X(2,IS+2)=X(2,IS+2)*(1.D0-X(1,IS+2)/6.D0)                         TLNC-154
   18 X(1,IS+2)=X(1,IS+2)-A1/12.D0                                      TLNC-155
      GO TO 21                                                          TLNC-156
C NUMEROV METHOD.                                                       TLNC-157
   19 DO 20 IS=1,ISM                                                    TLNC-158
      A2=(12.D0+X(1,IS+2))**2+X(2,IS+2)**2                              TLNC-159
      A1=12.D0*(X(1,IS+2)*(12.D0+X(1,IS+2))+X(2,IS+2)**2)/A2            TLNC-160
      IF (LO(26)) A1=A1+X(1,IS+2)**3/240.D0                             TLNC-161
      X(1,IS+2)=A1                                                      TLNC-162
   20 X(2,IS+2)=144.D0*X(2,IS+2)/A2                                     TLNC-163
   21 X(1,1)=0.D0                                                       TLNC-164
      X(2,1)=0.D0                                                       TLNC-165
      X(1,2)=1.D-15                                                     TLNC-166
      X(2,2)=0.D0                                                       TLNC-167
      DO 23 IS=1,ISM                                                    TLNC-168
      B1=X(1,IS+1)*X(1,IS+2)-X(2,IS+1)*X(2,IS+2)                        TLNC-169
      B2=X(2,IS+1)*X(1,IS+2)+X(1,IS+1)*X(2,IS+2)                        TLNC-170
      X(1,IS+2)=X(1,IS+1)+X(1,IS+1)-X(1,IS)-B1                          TLNC-171
      X(2,IS+2)=X(2,IS+1)+X(2,IS+1)-X(2,IS)-B2                          TLNC-172
      IF (DABS(X(1,IS+2)).LT.1.D15) GO TO 23                            TLNC-173
C RENORMALISATION OF LARGE FUNCTION VALUES.                             TLNC-174
      JS=2*IS+4                                                         TLNC-175
      DO 22 I=3,JS                                                      TLNC-176
   22 X(I,1)=X(I,1)*1.D-30                                              TLNC-177
   23 CONTINUE                                                          TLNC-178
C END OF INTEGRATION.                                                   TLNC-179
C MATCHING.                                                             TLNC-180
      A1=X(1,ISM)*FAM(4)-FAM(3)*X(1,ISM+2)                              TLNC-181
      A2=X(2,ISM)*FAM(4)-FAM(3)*X(2,ISM+2)                              TLNC-182
      B1=X(1,ISM)*FAM(2)-FAM(1)*X(1,ISM+2)                              TLNC-183
      B2=X(2,ISM)*FAM(2)-FAM(1)*X(2,ISM+2)                              TLNC-184
      A2=A2+B1                                                          TLNC-185
      A1=A1-B2                                                          TLNC-186
      A3=A1*A1+A2*A2                                                    TLNC-187
      A1=-A1/A3                                                         TLNC-188
      A2=A2/A3                                                          TLNC-189
      CR=A1*B1-A2*B2                                                    TLNC-190
      CI=B1*A2+B2*A1                                                    TLNC-191
      TL(J)=DMAX1(0.D0,4.D0*(CI-CR**2-CI**2))                           TLNC-192
   24 CONTINUE                                                          TLNC-193
   25 CONTINUE                                                          TLNC-194
      RETURN                                                            TLNC-195
      END                                                               TLNC-196
C 15/08/12                                                      ECIS12  QUAN-000
      SUBROUTINE QUAN(NCOLL,WV,IPI,NIV,IQ,TQ,IVQ,IVZ,MC,NAT,AT,IT,NVI,KAQUAN-001
     1B,KBC,AA,FAC,NFA,NMAX,JD,LO)                                      QUAN-002
C INPUT:     NCOLL:   NUMBER OF COUPLED NUCLEAR STATES.                 QUAN-003
C            WV:      DESCRIPTION OF THE CHANNELS. SEE CALX.            QUAN-004
C            IPI:     PROJECTILE AND TARGET MULTIPLICITY, PARITY        QUAN-005
C                     AND MAXIMUM ANGULAR MOMENTUM.  SEE CALX.          QUAN-006
C            NIV:     FIRST/LAST ADDRESS IN THE TABLE OF                QUAN-007
C                     REDUCED NUCLEAR MATRIX ELEMENTS.  SEE REDM.       QUAN-008
C            IQ,TQ:   TABLE OF REDUCED NUCLEAR MATRIX ELEMENTS.         QUAN-009
C            IVQ:     TABLE OF MULTIPOLES.  SEE REDM.                   QUAN-010
C            IVZ:     TABLE OF FORM FACTORS.  SEE REDM.                 QUAN-011
C            KAB:     MAXIMUM NUMBER OF COUPLED CHANNELS.               QUAN-012
C            KBC:     MAXIMUM NUMBER OF SOLUTIONS.                      QUAN-013
C            FAC:     TABLE OF LOGARITHMS OF FACTORIALS.                QUAN-014
C            NFA:     LENGTH OF FAC.                                    QUAN-015
C            NMAX:    AVAILABLE LENGTH OF AT/NAT(LESS 100 FOR 9J).      QUAN-016
C            JD:      FIRST DIMENSION OF TABLES NAT AND AT.             QUAN-017
C            LO(I):   LOGICAL CONTROLS:                                 QUAN-018
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              QUAN-019
C               LO(12) =.TRUE. DEFORMED IMAGINARY CENTRAL POTENTIAL.    QUAN-020
C               LO(13) =.TRUE. DEFORMED REAL SPIN-ORBIT OR TENSOR.      QUAN-021
C               LO(14) =.TRUE. DEFORMED IMAGINARY SPIN-ORBIT OR TENSOR. QUAN-022
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   QUAN-023
C               LO(58) =.TRUE. OUTPUT OF THE COEFFICIENTS OF EACH FORM  QUAN-024
C                              FACTOR FOR ALL SETS OF EQUATIONS.        QUAN-025
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      QUAN-026
C               LO(101)=.TRUE. THERE IS A REAL SPIN-ORBIT POTENTIAL.    QUAN-027
C               LO(102)=.TRUE. THERE IS AN IMAGINARY SPIN-ORBIT         QUAN-028
C                              POTENTIAL.                               QUAN-029
C               LO(103)=.TRUE. THERE IS A COULOMB SPIN-ORBIT POTENTIAL. QUAN-030
C               LO(110)=.TRUE. DERIVATIVES ARE NEEDED.                  QUAN-031
C               LO(123)=.TRUE. IDENTICAL PARTICLES WITH SPIN.           QUAN-032
C               LO(127)=.TRUE. COULOMB CORRECTIONS IN ASYMPTOTIC REGION.QUAN-033
C               LO(128)=.TRUE. NO COPY OF UNCOUPLED FUNCTIONS AND       QUAN-034
C                              PHASE-SHIFTS.                            QUAN-035
C               LO(133)=.TRUE. STORE SCALAR AND COULOMB POTENTIAL       QUAN-036
C                              INDEPENDENTLY.                           QUAN-037
C OUTPUT:    MC:      NUCLEAR STATE INDICATIONS. FOR IC=1,NC:           QUAN-038
C                     MC(IC,1): NUCLEAR STATE NUMBERS.                  QUAN-039
C                     MC(IC,2): ORBITAL MOMENTUM LC.                    QUAN-040
C                     MC(IC,3): TWICE ORBITAL SPIN.                     QUAN-041
C                     MC(IC,4): REFERENCE TO POTENTIAL OR COPY.         QUAN-042
C                     MC(IC,5): LC*(LC+1).                              QUAN-043
C                     MC(IC,6): EIGENVALUE OF L.S.                      QUAN-044
C            NAT,AT:  IN EQUIVALENCE BY CALL. TABLE OF COUPLING         QUAN-045
C                     COEFFICIENTS. FOR I=1,IT:                         QUAN-046
C                     NAT(1,I): ADDRESS OF THE REAL FORM FACTOR,        QUAN-047
C                     NAT(2,I): ADDRESS OF THE IMAGINARY FORM FACTOR,   QUAN-048
C                     AT(2,I):  GEOMETRICAL COEFFICIENT,                QUAN-049
C                     AND ONLY FOR DIRAC EQUATION:                      QUAN-050
C                     AT(3,I):  IDEM FOR SMALL COMPONENTS,              QUAN-051
C            IT:      NUMBER OF NON ZERO COUPLING COEFFICIENTS.         QUAN-052
C            NVI:     ADDRESS IN THE TABLE AT(I), ANALOGOUS TO THE NIV  QUAN-053
C                     ADDRESSES: NVI(I1,I2,1) TO NVI(I1,I2,2)           QUAN-054
C                     FOR THE NON DERIVATIVES COUPLINGS, NVI(I1,I2,2)+1 QUAN-055
C                     TO NVI(I1,I2,3)  FOR THE DERIVATIVE COUPLINGS.    QUAN-056
C                     FOR SMALL COMPONENTS OF DIRAC EQUATION, IDEM WITH QUAN-057
C                     NVI(I1,I2,4) TO NVI(I1,I2,6).                     QUAN-058
C            AA:      COEFFICIENTS OF THE SYMMETRISATION FOR IDENTICAL  QUAN-059
C                     PARTICLE AND TARGET, MC RESULTS ARE IN MC(*,*+7), QUAN-060
C                     NAT AND AT RESULTS ARE AFTER THE USUAL ONES, NVI  QUAN-061
C                     RESULTS ARE IN NVI(*,*,*+3), NC AND NCIN ARE      QUAN-062
C                     DIFFERENT FROM NIC AND NCI.                       QUAN-063
C            LO(I):   LOGICAL CONTROLS: DEFINED HERE: LO(110).          QUAN-064
C WORKING AREA:                                                         QUAN-065
C            AT(I,J): FOR J>IT, WORKING AREA USED IN DJ9J.              QUAN-066
C                                                                       QUAN-067
C THE COMMON /NOEQU/ IS USED IN CAL1, QUAN, MTCH AND SCAM.              QUAN-068
C                                                                       QUAN-069
C FOR THE COMMON  /NCOMP/ SEE CALX.                                     QUAN-070
C FOR THE COMMON  /POTE2/ SEE REDM.                                     QUAN-071
C                                                                       QUAN-072
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     QUAN-073
C  AZ(6):     DEFORMED SPIN-ORBIT PARAMETERS. (SEE INPUT DESCRIPTION    QUAN-074
C             AND COMMENTS IN THIS SUBROUTINE).                         QUAN-075
C                                                                       QUAN-076
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NOEQU/:                     QUAN-077
C  NCXN:      NUMBER OF SOLUTIONS NEEDED.                               QUAN-078
C  NIC:       NUMBER OF EQUATIONS AT THE CHANNEL SPIN.                  QUAN-079
C  NCI:       NUMBER OF SOLUTIONS AT THE CHANNEL SPIN.                  QUAN-080
C  NC:        NUMBER OF EQUATIONS FOR IDENTICAL PARTICLES.              QUAN-081
C  NCIN:      NUMBER OF SOLUTIONS FOR IDENTICAL PARTICLES.              QUAN-082
C  NIN:       NUMBER OF COUPLING POTENTIALS.                            QUAN-083
C  JPI:       PARITY 0 OR 1.                                            QUAN-084
C  IPJ:       VALUE OF J+1 OR J+1/2 WHERE J IS THE CHANNEL SPIN.        QUAN-085
C  R1(2):     MAXIMUM OF SCATTERING AND COMPOUND COEFFICIENT.           QUAN-086
C  NAJ:       TWICE THE CHANNEL SPIN J.                                 QUAN-087
C   DEFINED:  NIC,NCI,NC,NCIN,NIN.                                      QUAN-088
C   USED:     NIC,NCI,NC,NCIN,NIN,JPI,NAJ.                              QUAN-089
C   NOT USED: NCXN,IPJ,R1.                                              QUAN-090
C                                                                       QUAN-091
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     QUAN-092
C  ITY(5):    STARTING ADDRESS OF REAL CENTRAL TRANSITION.              QUAN-093
C             ITY(5)=0 IS USED FOR DIRAC EQUATIONS.                     QUAN-094
C  INTV:      NUMBER OF TRANSITION FORM FACTORS WITHOUT SPIN-ORBIT,     QUAN-095
C             TAKING INTO ACCOUNT DISPERSION.                           QUAN-096
C  INSL:      NUMBER OF SPIN-ORBIT FORM TRANSITION FACTORS NOT TAKING   QUAN-097
C             INTO ACCOUNT MULTIPLICATION BY 2.                         QUAN-098
C   USED:     ITY(5),INTV,INSL.                                         QUAN-099
C                                                                       QUAN-100
C***********************************************************************QUAN-101
      IMPLICIT REAL*8 (A-H,O-Z)                                         QUAN-102
      LOGICAL LO(150),LLO,LLC,LLP                                       QUAN-103
      DIMENSION WV(22,*),IPI(11,*),NIV(NCOLL,NCOLL,3),IQ(6,*),TQ(3,*),IVQUAN-104
     1Q(3,*),IVZ(4,*),MC(KAB,12),NAT(2*JD,*),AT(JD,*),NVI(KAB,KAB,6),AA(QUAN-105
     2KBC,*),FAC(*)                                                     QUAN-106
      CHARACTER*1 IP(2)                                                 QUAN-107
      COMMON /INOUT/ MR,MW,MS                                           QUAN-108
      COMMON /NCOMP/ NSP(12),ACN(2),AZ(6),BZ(12)                        QUAN-109
      COMMON /NOEQU/ NCXN,NIC,NCI,NC,NCIN,NIN,JPI,IPJ,R1(2),NAJ         QUAN-110
      COMMON /POTE2/ ITY(12),INVT,INTV,INSL,NPX                         QUAN-111
      DATA IP /'+','-'/                                                 QUAN-112
      LLC=LO(133).AND.LO(11)                                            QUAN-113
      LLP=LO(133).AND.LO(19)                                            QUAN-114
C FIND QUANTUM NUMBER OF COUPLED CHANNELS.                              QUAN-115
      NC=0                                                              QUAN-116
      AJ=.5D0*DFLOAT(NAJ)                                               QUAN-117
      DO 6 I=1,NCOLL                                                    QUAN-118
      NJ1=NAJ-IPI(3,I)+1                                                QUAN-119
      NJ2=IABS(NJ1)                                                     QUAN-120
      NJ=IPI(3,I)                                                       QUAN-121
      NL=IPI(2,I)                                                       QUAN-122
      DO 5 J=1,NJ                                                       QUAN-123
      L1=(NAJ-NJ-NL)/2+J                                                QUAN-124
      L2=IABS(L1)                                                       QUAN-125
      DO 4 K=1,NL                                                       QUAN-126
      IF (MOD(L1+IPI(1,I)+JPI,2).NE.0) GO TO 3                          QUAN-127
      IF ((L1.LT.L2).OR.(NJ1.LT.NJ2).OR.(L1.GT.IPI(10,I))) GO TO 3      QUAN-128
      NC=NC+1                                                           QUAN-129
      MC(NC,4)=IPI(11,I)                                                QUAN-130
      IF (LO(128)) GO TO 2                                              QUAN-131
      IF (LO(100)) MC(NC,4)=I                                           QUAN-132
      DO 1 M=NC,KAB                                                     QUAN-133
      IF (MC(M,1).NE.I) GO TO 1                                         QUAN-134
      IF (MC(M,2).NE.L1) GO TO 1                                        QUAN-135
      IF (MC(M,3).NE.NJ1) GO TO 1                                       QUAN-136
      MC(NC,4)=-M                                                       QUAN-137
      GO TO 2                                                           QUAN-138
    1 CONTINUE                                                          QUAN-139
    2 MC(NC,1)=I                                                        QUAN-140
      MC(NC,2)=L1                                                       QUAN-141
      MC(NC,3)=NJ1                                                      QUAN-142
      MC(NC,5)=MC(NC,2)*(MC(NC,2)+1)                                    QUAN-143
      MC(NC,6)=((NJ1-IPI(2,I)+1)*(NJ1+IPI(2,I)+1))/4-MC(NC,5)           QUAN-144
    3 L1=L1+1                                                           QUAN-145
    4 CONTINUE                                                          QUAN-146
    5 NJ1=NJ1+2                                                         QUAN-147
      IF (I.NE.1) GO TO 6                                               QUAN-148
      NCIN=NC                                                           QUAN-149
      IF (NCIN.EQ.0) RETURN                                             QUAN-150
    6 CONTINUE                                                          QUAN-151
      IF (.NOT.LO(58)) GO TO 8                                          QUAN-152
      WRITE (MW,1000) AJ,IP(JPI+1),NC,NCIN                              QUAN-153
      DO 7 J=1,NC                                                       QUAN-154
      SJ=0.5D0*DFLOAT(MC(J,3))                                          QUAN-155
    7 WRITE (MW,1001) J,MC(J,1),MC(J,2),SJ,MC(J,4),MC(J,5),MC(J,6)      QUAN-156
C COMPUTATION OF COUPLING COEFFICIENTS FOR THE FORM FACTORS             QUAN-157
C WHEN THE SPIN-ORBIT IS DEFORMED,THERE IS NO SYMMETRY, THE TOTAL       QUAN-158
C TABLE IS CALCULATED. WITH NO SPIN-ORBIT DEFORMATION,ONLY ONE HALF IS  QUAN-159
C CALCULATED. LO(110) RETURNS .TRUE. IF THEY ARE DERIVATIVE COUPLINGS.  QUAN-160
    8 LO(110)=.FALSE.                                                   QUAN-161
      IT=0                                                              QUAN-162
      NIN=0                                                             QUAN-163
      INVZ=INTV+ITY(5)                                                  QUAN-164
      DO 41 I1=1,NC                                                     QUAN-165
      J1=MC(I1,1)                                                       QUAN-166
      K1=IPI(11,J1)                                                     QUAN-167
      IF (LO(100)) K1=J1                                                QUAN-168
      IF (LO(127)) MC(I1,4)=K1                                          QUAN-169
      DO 40 I2=1,I1                                                     QUAN-170
      J2=MC(I2,1)                                                       QUAN-171
      A2=WV(9,J1)*WV(9,J2)                                              QUAN-172
      A3=WV(10,J1)*WV(10,J2)                                            QUAN-173
      IT1=IT+1                                                          QUAN-174
      NVI(I2,I1,1)=IT1                                                  QUAN-175
      K1=NIV(J2,J1,1)                                                   QUAN-176
      K2=NIV(J2,J1,2)                                                   QUAN-177
      IF (K1.GT.K2) GO TO 32                                            QUAN-178
      IF (2*(K2-K1+3+IT).GT.NMAX) CALL MEMO('QUAN',NMAX,2*(K2-K1+3+IT)) QUAN-179
      IL=2*MC(I2,2)                                                     QUAN-180
      ILP=2*MC(I1,2)                                                    QUAN-181
      ISJ=MC(I2,3)                                                      QUAN-182
      ISJP=MC(I1,3)                                                     QUAN-183
      IAI=IPI(3,J2)-1                                                   QUAN-184
      IAIP=IPI(3,J1)-1                                                  QUAN-185
      IS=IPI(2,J2)-1                                                    QUAN-186
      ISP=IPI(2,J1)-1                                                   QUAN-187
      DO 22 K=K1,K2                                                     QUAN-188
      NI=IQ(2,K)                                                        QUAN-189
C COEFFICIENT OF A CENTRAL MULTIPOLE WITH ANGULAR MOMENTUM IQ=IVQ(1,NI) QUAN-190
C TRANSFER OF SPIN IS=IVQ(2,NI)/2 AND OF TOTAL MOMENTUM IJ=IVQ(3,NI)/2  QUAN-191
C NOTING THE SPIN S,THE ORBITAL ANGULAR MOMENTUM L,THE TOTAL SPIN OF THEQUAN-192
C PARTICLE J,THE SPIN OF THE TARGET AI,THE EIGENVALUE OF L.S G......    QUAN-193
C AND "K"=SQRT(2*K+1)   THE MOST GENERAL EXPRESSION OF (I2||IQ||I1) IS  QUAN-194
C  (-)**(AJ+AI2+1+J1+(L2+IQ-L1)/2)*"L1"*"L2"*"J1"*"J2"*"IQ"*"IJ"*       QUAN-195
C CGS(IQ,L2,L1)*C6J(J1,IJ,J2,AI2,AJ,AI1)*C9J(L2,L1,IQ,S2,S1,IS,J2,J1,IJ)QUAN-196
C IN A MACROSCOPIC MODEL, IS=0 AND IJ=IQ, THE EXPRESSIONS USED ARE      QUAN-197
C  (-)**(AJ+AI2+1-S+(L1+L2+IQ)/2)*"L1"*"L2"*"J1"*"J2"*"IQ"*CGS(IQ,L2,L1)QUAN-198
C    *C6J(J1,IQ,J2,AI2,AJ,AI1)*C6J(L1,IQ,L2,J2,S,J1)                    QUAN-199
C FOR S=1/2 (-)**(AJ+AI2-J2+(L1-L2+IQ)/2)*"IQ"*CGS(IQ,J2,J1)            QUAN-200
C FOR S=0   (-)**(AJ+AI2+1+(L1+L2+IQ)/2)*"L1"*"L2"*"IQ"*CGS(IQ,L2,L1)*  QUAN-201
C           C6J(L1,IQ,L2,AI2,AJ,AI1).                                   QUAN-202
      IIQ=2*IVQ(1,NI)                                                   QUAN-203
      DO 16 IX=2,JD                                                     QUAN-204
      CX=0.D0                                                           QUAN-205
      CMATEL=0.D0                                                       QUAN-206
      IF ((IIQ.GT.IL+ILP).OR.(IIQ.LT.IABS(IL-ILP))) GO TO 13            QUAN-207
      FX=1.D0                                                           QUAN-208
      KK=MC(I1,2)+MC(I2,2)+IVQ(1,NI)                                    QUAN-209
      IIS=IVQ(2,NI)                                                     QUAN-210
      IF (IIS.LT.0) GO TO 11                                            QUAN-211
      IIJ=IVQ(3,NI)                                                     QUAN-212
      CMATEL=DJ6J(ISJ,IIJ,ISJP,IAIP,NAJ,IAI,FAC,NFA)                    QUAN-213
      A1=DFLOAT(IIJ+1)                                                  QUAN-214
      IF (IS.GT.1.OR.IIS.NE.0) GO TO 9                                  QUAN-215
      CMATEL=CMATEL*DCGS(IIJ,ISJP,ISJ,FAC,NFA)                          QUAN-216
      KK=KK+NAJ+IAIP                                                    QUAN-217
      IF (IS.EQ.1) KK=KK+2+IL-ISJP                                      QUAN-218
      IF (IS.NE.1) A1=A1*DFLOAT((ISJ+1)*(ISJP+1))                       QUAN-219
      GO TO 12                                                          QUAN-220
    9 A1=A1*DFLOAT((IL+1)*(ILP+1))                                      QUAN-221
      A1=A1*DFLOAT((ISJ+1)*(ISJP+1))                                    QUAN-222
      KK=(NAJ+IAIP-IS)+KK                                               QUAN-223
      CMATEL=CMATEL*DCGS(IIQ,ILP,IL,FAC,NFA)                            QUAN-224
      IF (IIS.NE.0) GO TO 10                                            QUAN-225
      FX=DJ6J(IL,ISJ,IS,ISJP,ILP,IIJ,FAC,NFA)                           QUAN-226
      GO TO 12                                                          QUAN-227
   10 CMATEL=CMATEL*DJ9J(IL,ILP,IIQ,IS,ISP,IIS,ISJ,ISJP,IIJ,AT(1,IT+1),1QUAN-228
     100)                                                               QUAN-229
      A1=A1*DFLOAT((IIQ+1)*(IIS+1))                                     QUAN-230
      KK=KK+ISJP+ILP+IS                                                 QUAN-231
      GO TO 12                                                          QUAN-232
C MAGNETIC COULOMB EXCITATION OF THE PARTICLE:                          QUAN-233
   11 IIJ=IIQ-2                                                         QUAN-234
      IF (IIQ.GT.IL+ILP+2.OR.IIQ.LT.IABS(IL-ILP)+2) GO TO 13            QUAN-235
      CMATEL=DJ6J(ISJ,ISJP,IIJ,ILP,IL,IS,FAC,NFA)*DJ6J(ISJ,ISJP,IIQ-2,IAQUAN-236
     1IP,IAI,NAJ,FAC,NFA)*DCGS(IIQ,ILP,IL,FAC,NFA)                      QUAN-237
      KK=KK+NAJ+IAIP-IS-2                                               QUAN-238
      A1=DFLOAT((IIQ+1)**3)*DFLOAT((ISJ+1)*(ISJP+1))*DFLOAT((IL+1)*(ILP+QUAN-239
     11))*DFLOAT((IL+ILP+IIQ+2)*(IL+ILP-IIJ))*(IL-ILP+IIQ)*(ILP-IL+IIQ)/QUAN-240
     2DFLOAT((IIQ-1)*IIJ)**2/16.D0                                      QUAN-241
   12 IF (MOD(KK,4).EQ.0) CMATEL=-CMATEL                                QUAN-242
      CMATEL=TQ(3,K)*CMATEL*DSQRT(A1)                                   QUAN-243
      CX=CMATEL*FX                                                      QUAN-244
   13 IF (IX.EQ.3) GO TO 14                                             QUAN-245
      IT=IT+1                                                           QUAN-246
      NAT(1,IT)=IQ(1,K)                                                 QUAN-247
      NAT(2,IT)=0                                                       QUAN-248
   14 AT(IX,IT)=CX*A2                                                   QUAN-249
      IF (.NOT.LO(100)) GO TO 17                                        QUAN-250
      IF (IX.EQ.3) GO TO 22                                             QUAN-251
      IF (IIQ.NE.IIJ) GO TO 15                                          QUAN-252
      AT(3,IT)=AT(2,IT)                                                 QUAN-253
      IF (IIS.NE.0) AT(3,IT)=-AT(3,IT)                                  QUAN-254
      GO TO 22                                                          QUAN-255
   15 IL=2*ISJ-IL                                                       QUAN-256
   16 ILP=2*ISJP-ILP                                                    QUAN-257
   17 NAT(1,IT)=NAT(1,IT)+ITY(5)                                        QUAN-258
      IF (LO(133)) AT(3,IT)=0.D0                                        QUAN-259
      IF (LLC) AT(3,IT)=CX*A3                                           QUAN-260
      IF (LO(12)) NAT(2,IT)=NAT(1,IT)                                   QUAN-261
      IF (IQ(3,K).EQ.0) GO TO 22                                        QUAN-262
C DEFORMED SPIN-ORBIT:                                                  QUAN-263
C FORM FACTOR (1/R)(D/DR)V(R)         COEFFICIENT:  (I2||IQ||I1)*G1     QUAN-264
C PARAMETRISATION:  (I2||IQ||I1)*(AZ(3)*G1+AZ(4)*G2+AZ(1)).             QUAN-265
      A=CX*(MC(I2,6)*AZ(3)+MC(I1,6)*AZ(4)+AZ(1))                        QUAN-266
      IF (DABS(A).LT.1.D-10) GO TO 18                                   QUAN-267
      IT=IT+1                                                           QUAN-268
      NAT(1,IT)=IQ(3,K)+INVZ                                            QUAN-269
      NAT(2,IT)=0                                                       QUAN-270
      IF (LO(14)) NAT(2,IT)=NAT(1,IT)                                   QUAN-271
      AT(2,IT)=2.D0*A*A2                                                QUAN-272
      IF (LO(133)) AT(3,IT)=0.D0                                        QUAN-273
      IF (LLP) AT(3,IT)=2.D0*A*A3                                       QUAN-274
C FORM FACTOR V(R)/R**2   COEFFICIENT: (I2||IQ||I1)*(S*(IQ*(IQ+1)-L1*(L1QUAN-275
C   +1)-L2*(L2+1)+G2*(1+G1)/(2*S))+XXX)                                 QUAN-276
C PARAMETRISATION:   (I2||IQ||I1)*AZ(5)*(S*(IQ*(IQ+1)*AZ(2)........     QUAN-277
C XXX IS -SQRT(F1*F2)*C6J(L1,J1,S-1,J2,L2,IQ)/(2*S*C6J(L1,J1,S,J2,L2,IQ)QUAN-278
C  WITH F=(L*L+L-(J-S)*(J-S+1))*((J+S)*(J+S+1)-L*L-L)                   QUAN-279
C  FOR S=1/2  XXX=0                                                     QUAN-280
C  FOR S=1  XXX=-4*L1*L2*(L1+1)*(L2+1)/IQ*IQ+IQ-L1*L1-L1-L2*L2-L2)      QUAN-281
C WHEN J1=L1 AND J2=L2 , ELSE  XXX=0.                                   QUAN-282
   18 AZI=DFLOAT(IVQ(1,NI)*(IVQ(1,NI)+1))                               QUAN-283
      ASPI=DFLOAT(IS)                                                   QUAN-284
      SMATEL=(0.5D0*DFLOAT(IPI(2,J1)-1)*(AZ(2)*AZI-DFLOAT(MC(I1,5)+MC(I2QUAN-285
     1,5)))+DFLOAT(MC(I1,6))*(1.D0+DFLOAT(MC(I2,6))/ASPI))*FX           QUAN-286
      IF (IS-2) 21 , 19 , 20                                            QUAN-287
   19 IF (IL.NE.ISJ.OR.ILP.NE.ISJP) GO TO 21                            QUAN-288
      A1=AZI-MC(I1,5)-MC(I2,5)                                          QUAN-289
      IF (A1.EQ.0.D0) GO TO 20                                          QUAN-290
      SMATEL=SMATEL-4.D0*DFLOAT(MC(I1,5)*MC(I2,5))*FX/A1                QUAN-291
      GO TO 21                                                          QUAN-292
   20 G1=DFLOAT((MC(I1,3)-IPI(2,J1))/2)                                 QUAN-293
      G2=DFLOAT((MC(I1,3)+IPI(2,J1))/2)                                 QUAN-294
      F1=(DFLOAT(MC(I1,5))-G1*(G1+1.D0))*(G2*(G2+1.D0)-DFLOAT(MC(I1,5)))QUAN-295
      G1=DFLOAT((MC(I2,3)-IPI(2,J1))/2)                                 QUAN-296
      G2=DFLOAT((MC(I2,3)+IPI(2,J1))/2)                                 QUAN-297
      F2=(DFLOAT(MC(I2,5))-G1*(G1+1.D0))*(G2*(G2+1.D0)-DFLOAT(MC(I2,5)))QUAN-298
      F3=F1*F2                                                          QUAN-299
      IF (F3.GT.0.D0) SMATEL=SMATEL-DSQRT(F3)*DJ6J(IL,ISJ,IS-2,ISJP,ILP,QUAN-300
     1IIQ,FAC,NFA)/ASPI                                                 QUAN-301
   21 A=CMATEL*AZ(5)*SMATEL                                             QUAN-302
      IF (DABS(A).LT.1.D-10) GO TO 22                                   QUAN-303
      IT=IT+1                                                           QUAN-304
      NAT(1,IT)=IQ(3,K)+INVZ+INSL                                       QUAN-305
      NAT(2,IT)=0                                                       QUAN-306
      IF (LO(14)) NAT(2,IT)=NAT(1,IT)                                   QUAN-307
      AT(2,IT)=2.D0*A*A2                                                QUAN-308
      IF (LO(133)) AT(3,IT)=0.D0                                        QUAN-309
      IF (LLP) AT(3,IT)=2.D0*A*A3                                       QUAN-310
   22 CONTINUE                                                          QUAN-311
      LLO=.FALSE.                                                       QUAN-312
   23 IF (IT-IT1) 32 , 27 , 24                                          QUAN-313
C  SUMMATION OF COEFFICIENTS RELATED TO THE SAME FORM FACTOR.           QUAN-314
   24 IT2=IT-1                                                          QUAN-315
      DO 26 I=IT1,IT2                                                   QUAN-316
      DO 25 J=I,IT2                                                     QUAN-317
      IF ((NAT(1,I).NE.NAT(1,J+1)).OR.(NAT(2,I).NE.NAT(2,J+1))) GO TO 25QUAN-318
      AT(2,I)=AT(2,I)+AT(2,J+1)                                         QUAN-319
      AT(2,J+1)=0.D0                                                    QUAN-320
      IF (JD.EQ.2) GO TO 25                                             QUAN-321
      AT(3,I)=AT(3,I)+AT(3,J+1)                                         QUAN-322
      AT(3,J+1)=0.D0                                                    QUAN-323
   25 CONTINUE                                                          QUAN-324
   26 CONTINUE                                                          QUAN-325
C ELIMINATION OF TOO SMALL COEFFICIENTS.                                QUAN-326
   27 IT2=IT                                                            QUAN-327
      IT=IT1-1                                                          QUAN-328
      NMR=0                                                             QUAN-329
      NMI=0                                                             QUAN-330
      DO 28 I=IT1,IT2                                                   QUAN-331
      CX=DABS(AT(2,I))                                                  QUAN-332
      IF (JD.EQ.3) CX=CX+DABS(AT(3,I))                                  QUAN-333
      IF (CX.LT.1.D-10) GO TO 28                                        QUAN-334
      IT=IT+1                                                           QUAN-335
      NAT(1,IT)=NAT(1,I)                                                QUAN-336
      NAT(2,IT)=NAT(2,I)                                                QUAN-337
      AT(2,IT)=AT(2,I)                                                  QUAN-338
      IF (JD.EQ.3) AT(3,IT)=AT(3,I)                                     QUAN-339
      NMR=NMR+1                                                         QUAN-340
      IF (NAT(2,IT).NE.0) NMI=NMI+1                                     QUAN-341
   28 CONTINUE                                                          QUAN-342
      IF (NMR.NE.0) NIN=NIN+1                                           QUAN-343
      IF (NMI.NE.0) NIN=NIN+1                                           QUAN-344
      IF (LLO) GO TO 36                                                 QUAN-345
      IF (.NOT.(LO(13).OR.LO(14).OR.LO(19))) GO TO 32                   QUAN-346
      NVI(I2,I1,2)=IT                                                   QUAN-347
C COEFFICIENTS OF THE DERIVATIVE COUPLING                               QUAN-348
C FORM FACTOR  V(R)/R**2  COEFFICIENT: (I2||IQ||I1)*(G1-G2)             QUAN-349
C PARAMETRISATION: (I2||IQ||I1)*(G1-G2)*AZ(6).                          QUAN-350
      IT2=IT                                                            QUAN-351
      IF (LO(100)) GO TO 30                                             QUAN-352
      DO 29 I=IT1,IT2                                                   QUAN-353
      IF (NAT(1,I).GT.INVZ) GO TO 29                                    QUAN-354
      IJ=NAT(1,I)-ITY(5)                                                QUAN-355
      IF (IVZ(3,IJ).EQ.0) GO TO 29                                      QUAN-356
      A=DFLOAT(MC(I2,6)-MC(I1,6))*AZ(6)*2.D0                            QUAN-357
      IF (A.EQ.0.D0) GO TO 29                                           QUAN-358
      LO(110)=.TRUE.                                                    QUAN-359
      IT=IT+1                                                           QUAN-360
      NAT(1,IT)=IVZ(3,IJ)+INVZ+INSL                                     QUAN-361
      NAT(2,IT)=0                                                       QUAN-362
      IF (LO(14)) NAT(2,IT)=NAT(1,IT)                                   QUAN-363
      AT(2,IT)=AT(2,I)*A                                                QUAN-364
      IF (JD.EQ.3) AT(3,IT)=0.D0                                        QUAN-365
      IF (LLP) AT(3,IT)=AT(3,I)*A                                       QUAN-366
   29 CONTINUE                                                          QUAN-367
      GO TO 33                                                          QUAN-368
   30 DO 31 I=IT1,IT2                                                   QUAN-369
      IJ=NAT(1,I)                                                       QUAN-370
      IF (IVZ(3,IJ).EQ.0) GO TO 31                                      QUAN-371
      LO(110)=.TRUE.                                                    QUAN-372
      IT=IT+1                                                           QUAN-373
      NAT(1,IT)=IVZ(3,IJ)+INTV                                          QUAN-374
      NAT(2,IT)=0                                                       QUAN-375
      AT(2,IT)=AT(2,I)                                                  QUAN-376
      AT(3,IT)=AT(2,IT)*DFLOAT(MC(I2,6)-MC(I1,6))                       QUAN-377
   31 CONTINUE                                                          QUAN-378
      IF (IT.GT.IT2) NIN=NIN+1                                          QUAN-379
      GO TO 33                                                          QUAN-380
   32 NVI(I2,I1,2)=IT                                                   QUAN-381
   33 NVI(I2,I1,3)=IT                                                   QUAN-382
      IF (LO(100).OR.(NVI(I2,I1,3).EQ.NVI(I2,I1,2))) GO TO 38           QUAN-383
C COPY OF THE COEFFICIENTS AND CORRECTIONS IN ORDER TO OBTAIN           QUAN-384
C AN HERMITIAN INTERACTION.                                             QUAN-385
      K1=NVI(I2,I1,1)                                                   QUAN-386
      K2=NVI(I2,I1,2)                                                   QUAN-387
      IT1=IT+1                                                          QUAN-388
      NVI(I1,I2,1)=IT1                                                  QUAN-389
      DO 34 K=K1,K2                                                     QUAN-390
      IT=IT+1                                                           QUAN-391
      NAT(1,IT)=NAT(1,K)                                                QUAN-392
      NAT(2,IT)=NAT(2,K)                                                QUAN-393
      IF (JD.EQ.3) AT(3,IT)=AT(3,K)                                     QUAN-394
   34 AT(2,IT)=AT(2,K)                                                  QUAN-395
      K1=K2+1                                                           QUAN-396
      K2=NVI(I2,I1,3)                                                   QUAN-397
      DO 35 K=K1,K2                                                     QUAN-398
      IT=IT+1                                                           QUAN-399
      NAT(1,IT)=NAT(1,K)-INSL                                           QUAN-400
      NAT(2,IT)=0                                                       QUAN-401
      IF (NAT(2,K).NE.0) NAT(2,IT)=NAT(2,K)-INSL                        QUAN-402
      AT(2,IT)=-AT(2,K)                                                 QUAN-403
      IF (JD.EQ.3) AT(3,IT)=-AT(3,K)                                    QUAN-404
      IT=IT+1                                                           QUAN-405
      NAT(1,IT)=NAT(1,K)                                                QUAN-406
      NAT(2,IT)=NAT(2,K)                                                QUAN-407
      IF (JD.EQ.3) AT(3,IT)=AT(3,K)                                     QUAN-408
   35 AT(2,IT)=AT(2,K)                                                  QUAN-409
      LLO=.TRUE.                                                        QUAN-410
      GO TO 23                                                          QUAN-411
   36 NVI(I1,I2,2)=IT                                                   QUAN-412
      DO 37 K=K1,K2                                                     QUAN-413
      IT=IT+1                                                           QUAN-414
      NAT(1,IT)=NAT(1,K)                                                QUAN-415
      NAT(2,IT)=NAT(2,K)                                                QUAN-416
      IF (JD.EQ.3) AT(3,IT)=-AT(3,K)                                    QUAN-417
   37 AT(2,IT)=-AT(2,K)                                                 QUAN-418
      NVI(I1,I2,3)=IT                                                   QUAN-419
      NIN=NIN+2                                                         QUAN-420
      IF (LO(14)) NIN=NIN+2                                             QUAN-421
      GO TO 40                                                          QUAN-422
C SYMMETRISATION OF THE TABLE WHEN THERE IS NO DEFORMED SPIN-ORBIT.     QUAN-423
   38 DO 39 K=1,3                                                       QUAN-424
   39 NVI(I1,I2,K)=NVI(I2,I1,K)                                         QUAN-425
   40 CONTINUE                                                          QUAN-426
   41 CONTINUE                                                          QUAN-427
      IF (.NOT.LO(58)) GO TO 42                                         QUAN-428
C OUTPUT OF COUPLING COEFFICIENTS.                                      QUAN-429
      WRITE (MW,1002) ((J,I,(NVI(J,I,K),K=1,3),I=1,NC),J=1,NC)          QUAN-430
      IF (IT.EQ.0) GO TO 42                                             QUAN-431
      IF (JD.EQ.2) WRITE (MW,1003) (I,NAT(1,I),NAT(2,I),AT(2,I),I=1,IT) QUAN-432
      IF (JD.EQ.3) WRITE (MW,1004) (I,NAT(1,I),NAT(2,I),AT(2,I),AT(3,I),QUAN-433
     1I=1,IT)                                                           QUAN-434
   42 NCI=NCIN                                                          QUAN-435
      NIC=NC                                                            QUAN-436
      IF (.NOT.LO(123)) RETURN                                          QUAN-437
C FIND QUANTUM NUMBER OF COUPLED CHANNELS FOR IDENTICAL PARTICLES. NOT  QUAN-438
C USED FOR DIRAC FORMALISM (INCORRECT MEANING OF MC(*,10[3]) IN MTCH).  QUAN-439
      NCIN=0                                                            QUAN-440
      JA=NAJ/2                                                          QUAN-441
      ISI=IPI(2,1)-1                                                    QUAN-442
      NSM=ISI+1                                                         QUAN-443
      NSB=JPI+1                                                         QUAN-444
      DO 44 IS=NSB,NSM,2                                                QUAN-445
      LP=JA+IS                                                          QUAN-446
      LM=IABS(JA-IS+1)+1                                                QUAN-447
      DO 43 L=LM,LP                                                     QUAN-448
      IF (MOD(L+JPI,2).NE.1) GO TO 43                                   QUAN-449
      NCIN=NCIN+1                                                       QUAN-450
      MC(NCIN,10)=IPI(11,1)                                             QUAN-451
      MC(NCIN,7)=1                                                      QUAN-452
      MC(NCIN,8)=L-1                                                    QUAN-453
      MC(NCIN,9)=2*IS-2                                                 QUAN-454
      MC(NCIN,11)=MC(NCIN,8)*(MC(NCIN,8)+1)                             QUAN-455
      MC(NCIN,12)=(JA*(JA+1)-L*(L-1)-IS*(IS-1))/2                       QUAN-456
   43 CONTINUE                                                          QUAN-457
   44 CONTINUE                                                          QUAN-458
      NC=NCIN                                                           QUAN-459
      IF (LO(58)) WRITE (MW,1005) NCI,NCIN                              QUAN-460
      IF (NCIN.EQ.0) RETURN                                             QUAN-461
      IF (NIC.EQ.NCI) GO TO 46                                          QUAN-462
      N=NCI+1                                                           QUAN-463
      DO 45 I=N,NIC                                                     QUAN-464
      NC=NC+1                                                           QUAN-465
      MC(NC,7)=MC(I,1)                                                  QUAN-466
      MC(NC,8)=MC(I,2)                                                  QUAN-467
      MC(NC,9)=MC(I,3)                                                  QUAN-468
      MC(NC,10)=MC(I,4)                                                 QUAN-469
      MC(NC,11)=MC(I,5)                                                 QUAN-470
   45 MC(NC,12)=MC(I,6)                                                 QUAN-471
   46 IF (.NOT.LO(58)) GO TO 48                                         QUAN-472
      WRITE (MW,1000) AJ,IP(JPI+1),NC,NCIN                              QUAN-473
      DO 47 J=1,NC                                                      QUAN-474
      SJ=0.5D0*DFLOAT(MC(J,9))                                          QUAN-475
   47 WRITE (MW,1001) J,MC(J,7),MC(J,8),SJ,MC(J,10),MC(J,11),MC(J,12)   QUAN-476
C COMPUTATION OF TRANSFORMATION COEFFICIENTS.                           QUAN-477
   48 ITI=IT+1                                                          QUAN-478
      DO 50 J=1,NCIN                                                    QUAN-479
      DO 49 I=1,NCI                                                     QUAN-480
      AA(I,J)=0.D0                                                      QUAN-481
      IF (MC(J,8).NE.MC(I,2)) GO TO 49                                  QUAN-482
      IJ=MC(I,3)                                                        QUAN-483
      IS=MC(J,9)                                                        QUAN-484
      AA(I,J)=DFLOAT(1-MOD(2*MC(I,2)+NAJ+2*ISI,4))*DSQRT((IJ+1.D0)*(IS+1QUAN-485
     1.D0))*DJ6J(2*MC(I,2),ISI,IJ,ISI,NAJ,IS,FAC,NFA)                   QUAN-486
   49 CONTINUE                                                          QUAN-487
   50 CONTINUE                                                          QUAN-488
      LO(110)=.FALSE.                                                   QUAN-489
      NIN=0                                                             QUAN-490
      NI=NCI-NCIN                                                       QUAN-491
      IBB=2                                                             QUAN-492
      IF (.NOT.((LO(101).OR.LO(102).OR.LO(103)).AND.LO(100))) IBB=1     QUAN-493
      DO 70 I1=1,NC                                                     QUAN-494
      IF (I1.GT.NCIN) GO TO 51                                          QUAN-495
      J1=1                                                              QUAN-496
      K1=NCI                                                            QUAN-497
      GO TO 52                                                          QUAN-498
   51 J1=I1+NI                                                          QUAN-499
      K1=J1                                                             QUAN-500
   52 DO 69 I2=1,NC                                                     QUAN-501
      IF ((I2.GT.I1).AND.(IBB.EQ.1)) GO TO 70                           QUAN-502
      DO 67 IB=1,IBB                                                    QUAN-503
      IF (I2.GT.NCIN) GO TO 53                                          QUAN-504
      J2=1                                                              QUAN-505
      K2=NCI                                                            QUAN-506
      GO TO 54                                                          QUAN-507
   53 J2=I2+NI                                                          QUAN-508
      K2=J2                                                             QUAN-509
   54 IT1=IT+1                                                          QUAN-510
      IF (IB.EQ.1) NVI(I2,I1,4)=IT1                                     QUAN-511
      DO 58 L1=J1,K1                                                    QUAN-512
      A1=1.D0                                                           QUAN-513
      IF (L1.LE.NCI) A1=AA(L1,I1)                                       QUAN-514
      IF (A1.EQ.0.D0) GO TO 58                                          QUAN-515
      DO 57 L2=J2,K2                                                    QUAN-516
      A2=1.D0                                                           QUAN-517
      IF (L2.LE.NCI) A2=AA(L2,I2)                                       QUAN-518
      IF (A2.EQ.0.D0) GO TO 57                                          QUAN-519
      M1=NVI(L2,L1,IB)                                                  QUAN-520
      M2=NVI(L2,L1,IB+1)                                                QUAN-521
      IF (IB.EQ.2) M1=M1+1                                              QUAN-522
      IF (M1.GT.M2) GO TO 57                                            QUAN-523
      IF (2*(M2-M1+3+IT).GT.NMAX) CALL MEMO('QUAN',NMAX,2*(M2-M1+3+IT)) QUAN-524
      DO 56 M=M1,M2                                                     QUAN-525
      IT=IT+1                                                           QUAN-526
      NAT(1,IT)=NAT(1,M)                                                QUAN-527
      NAT(2,IT)=NAT(2,M)                                                QUAN-528
      DO 55 IX=2,JD                                                     QUAN-529
   55 AT(IX,IT)=AT(IX,M)*A1*A2                                          QUAN-530
   56 CONTINUE                                                          QUAN-531
   57 CONTINUE                                                          QUAN-532
   58 CONTINUE                                                          QUAN-533
      IF (IT-IT1) 66 , 63 , 59                                          QUAN-534
C  SUMMATION OF COEFFICIENTS RELATED TO THE SAME FORM FACTOR.           QUAN-535
   59 IT2=IT-1                                                          QUAN-536
      DO 62 I=IT1,IT2                                                   QUAN-537
      DO 61 J=I,IT2                                                     QUAN-538
      IF ((NAT(1,I).NE.NAT(1,J+1)).OR.(NAT(2,I).NE.NAT(2,J+1))) GO TO 61QUAN-539
      DO 60 IX=2,JD                                                     QUAN-540
      AT(IX,I)=AT(IX,I)+AT(IX,J+1)                                      QUAN-541
   60 AT(IX,J+1)=0.D0                                                   QUAN-542
   61 CONTINUE                                                          QUAN-543
   62 CONTINUE                                                          QUAN-544
C ELIMINATION OF TOO SMALL COEFFICIENTS.                                QUAN-545
   63 IT2=IT                                                            QUAN-546
      IT=IT1-1                                                          QUAN-547
      NMR=0                                                             QUAN-548
      NMI=0                                                             QUAN-549
      DO 65 I=IT1,IT2                                                   QUAN-550
      CX=DABS(AT(2,I))                                                  QUAN-551
      IF (LO(100)) CX=CX+DABS(AT(3,I))                                  QUAN-552
      IF (CX.LT.1.D-10) GO TO 65                                        QUAN-553
      IT=IT+1                                                           QUAN-554
      NAT(1,IT)=NAT(1,I)                                                QUAN-555
      NAT(2,IT)=NAT(2,I)                                                QUAN-556
      DO 64 IX=2,JD                                                     QUAN-557
   64 AT(IX,IT)=AT(IX,I)                                                QUAN-558
      IF (LO(100)) AT(3,IT)=AT(3,I)                                     QUAN-559
      NMR=NMR+1                                                         QUAN-560
      IF (NAT(2,IT).NE.0) NMI=NMI+1                                     QUAN-561
   65 CONTINUE                                                          QUAN-562
      IF (NMR.NE.0) NIN=NIN+1                                           QUAN-563
      IF (NMI.NE.0) NIN=NIN+1                                           QUAN-564
      IF ((IB.EQ.2).AND.(NMR.NE.0)) LO(110)=.TRUE.                      QUAN-565
   66 NVI(I2,I1,IB+4)=IT                                                QUAN-566
   67 CONTINUE                                                          QUAN-567
      IF (IBB.EQ.2) GO TO 70                                            QUAN-568
      NVI(I2,I1,6)=IT                                                   QUAN-569
C SYMMETRISATION OF THE TABLE WHEN THERE IS NO DEFORMED SPIN-ORBIT.     QUAN-570
      DO 68 K=4,6                                                       QUAN-571
   68 NVI(I1,I2,K)=NVI(I2,I1,K)                                         QUAN-572
   69 CONTINUE                                                          QUAN-573
   70 CONTINUE                                                          QUAN-574
      IF (.NOT.LO(58)) RETURN                                           QUAN-575
C OUTPUT OF COUPLING COEFFICIENTS.                                      QUAN-576
      WRITE (MW,1002) ((I,J,(NVI(I,J,K),K=4,6),I=1,NC),J=1,NC)          QUAN-577
      IF (IT.LT.ITI) RETURN                                             QUAN-578
      IF (.NOT.LO(100)) WRITE (MW,1003) (I,NAT(1,I),NAT(2,I),AT(2,I),I=IQUAN-579
     1TI,IT)                                                            QUAN-580
      IF (LO(100)) WRITE (MW,1004) (I,NAT(1,I),NAT(2,I),AT(2,I),AT(3,I),QUAN-581
     1I=ITI,IT)                                                         QUAN-582
      RETURN                                                            QUAN-583
 1000 FORMAT (/' CHANNEL SPIN AND PARITY',F6.1,A1,I11,' COUPLED CHANNELSQUAN-584
     1 AND',I3,' SOLUTIONS'//8X,' I',3X,' V',3X,' L',3X,' J',9X,' POT',5QUAN-585
     2X,' CL',6X,' CJ'/)                                                QUAN-586
 1001 FORMAT (5X,3I5,F6.1,I11,2I9)                                      QUAN-587
 1002 FORMAT (/' PAIRS OF CHANNELS N1 N2, AND COUPLING COEFFICIENT NUMBEQUAN-588
     1RS NVI(N1,N2,K),K=1,3'/(1X,6(I3,I3,',',3I4,';')))                 QUAN-589
 1003 FORMAT (//5X,'COEFFICIENTS'/(4(2X,3I3,1P,D15.6)))                 QUAN-590
 1004 FORMAT (//5X,'COEFFICIENTS'/(3(2X,3I3,1P,2D15.6)))                QUAN-591
 1005 FORMAT (/' NUMBER OF SOLUTIONS REDUCED FROM',I3,' TO',I3)         QUAN-592
      END                                                               QUAN-593
C 16/10/12                                                      ECIS12  MTCH-000
      SUBROUTINE MTCH(NVI,NCOLL,KAB,WV,MC,BG,NAT,AT,AA,ISM,LMAX2,NIV,IVZMTCH-001
     1,FG,LMAX1,LMAX3,KR,VCO,VDO,FAM,JD,LO)                             MTCH-002
C COMPUTATION OF COULOMB CORRECTIONS AS INTEGRALS FROM THE MATCHING     MTCH-003
C POINT IF LO(127)=.FALSE. OR FROM THE ORIGIN IF LO(127)=.TRUE..        MTCH-004
C INPUT:     NVI:     ADDRESSES OF COUPLINGS IN TABLE AT.               MTCH-005
C            NCOLL:   NUMBER OF NUCLEAR STATES.                         MTCH-006
C            KAB:     MAXIMUM NUMBER OF COUPLED CHANNELS.               MTCH-007
C            WV:      WAVE NUMBERS AND COULOMB PARAMETERS.              MTCH-008
C            MC:      NUCLEAR STATE NUMBER AND ANGULAR MOMENTUM.        MTCH-009
C            BG:      TABLE OF COULOMB INTEGRALS FROM 0 TO INFINITY     MTCH-010
C                     FOR COUPLED EQUATIONS OR WHEN LO(127)=.TRUE..     MTCH-011
C            NAT,AT:  TABLE OF COUPLING COEFFICIENTS.                   MTCH-012
C            ISM:     NUMBER OF INTEGRATION POINTS.                     MTCH-013
C            LMAX2:   FIRST DIMENSION OF TABLE BG.                      MTCH-014
C            NIV:     ADDRESS IN THE TABLE OF REDUCED MATRIX ELEMENT.   MTCH-015
C            IVZ:     TABLE FOR USE OF FORM FACTORS (SEE REDM 3RD PART).MTCH-016
C            FG:      COULOMB FUNCTIONS.                                MTCH-017
C            LMAX1:   FIRST DIMENSION OF TABLE FG.                      MTCH-018
C            LMAX3:   MAXIMUM NUMBER OF COULOMB INTEGRALS FROM THE      MTCH-019
C                     MATCHING POINT TO INFINITY.                       MTCH-020
C            VCO:     STRENGTH OF TAILS OF COULOMB POTENTIALS.          MTCH-021
C            VDO:     STRENGTH OF TAILS OF COULOMB TRANSITIONS.         MTCH-022
C            FAM(I,J):OUTPUT OF PREVIOUS CALL FROM WHICH J=1 TO 10 ARE  MTCH-023
C                     NEEDED IF UNCOUPLED SOLUTIONS ARE COPIED.         MTCH-024
C            JD:      FIRST DIMENSION OF NAT,ST.                        MTCH-025
C            LO(I):   LOGICAL CONTROLS:                                 MTCH-026
C               LO(11) =.TRUE. DEFORMED COULOMB POTENTIAL.              MTCH-027
C               LO(19) =.TRUE. DEFORMED COULOMB SPIN-ORBIT POTENTIAL.   MTCH-028
C               LO(29) =.TRUE. NO DIAGONAL TERMS IN SECOND MEMBER.      MTCH-029
C               LO(44) =.TRUE. COULOMB CORRECTIONS.                     MTCH-030
C               LO(57) =.TRUE. OUTPUT PHASE-SHIFTS AT EACH ITERATION.   MTCH-031
C               LO(58) =.TRUE. OUTPUT OF THE COEFFICIENTS OF EACH FORM  MTCH-032
C                              FACTOR FOR ALL SETS OF EQUATIONS.        MTCH-033
C               LO(100)=.TRUE. FOR DIRAC EQUATION.                      MTCH-034
C               LO(103)=.TRUE. THERE IS A COULOMB SPIN-ORBIT POTENTIAL. MTCH-035
C               LO(125)=.TRUE. USUAL COUPLED EQUATIONS.                 MTCH-036
C               LO(127)=.TRUE. COULOMB CORRECTIONS IN ASYMPTOTIC REGION.MTCH-037
C               LO(133)=.TRUE. STORE SCALAR AND COULOMB POTENTIAL       MTCH-038
C                              INDEPENDENTLY.                           MTCH-039
C OUTPUT:    AA:      COULOMB INTEGRALS FROM THE MATCHING POINT TO      MTCH-040
C                     INFINITY FOR ITERATIONS LO(125)=.FALSE..          MTCH-041
C            FAM(I,J):MATCHING VALUES AND WAVE NUMBER FOR J=1 TO 6,     MTCH-042
C                     COEFFICIENT OF CENTRAL POTENTIAL FOR J=7,         MTCH-043
C                     COEFFICIENT OF SPIN-ORBIT POTENTIAL FOR J=9,      MTCH-044
C                     ENERGY FOR J=8, CENTRIFUGAL POTENTIAL FOR J=10.   MTCH-045
C                     IF LO(133)=.TRUE.,COEFFICIENT OF COULOMB POTENTIALMTCH-046
C                     FOR J=11 AND OF SPIN-ORBIT COULOMB FOR J=12.      MTCH-047
C WORKING AREAS:                                                        MTCH-048
C            AA(1,1,I):FOR I=7,10 IF LO(127) OR LO(125)=.TRUE.          MTCH-049
C            KR:      WORKING AREA IN SUBROUTINE LINS.                  MTCH-050
C                                                                       MTCH-051
C LOCAL TABLES LA(3,11) AND BA(2,11) ARE SET FOR COULOMB CORRECTIONS    MTCH-052
C LIMITED BY MCM(1)=5 AND MCM(2)=4.                                     MTCH-053
C                                                                       MTCH-054
C FOR THE COMMON  /DCONS/ SEE CALC.                                     MTCH-055
C FOR THE COMMON  /NOEQU/ SEE QUAN.                                     MTCH-056
C FOR THE COMMON  /POTE2/ SEE REDM.                                     MTCH-057
C                                                                       MTCH-058
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     MTCH-059
C  CHB:       PLANCK CONSTANT /(2*PI) IN MEV*FERMI.                     MTCH-060
C   USED:     CHB.                                                      MTCH-061
C                                                                       MTCH-062
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NOEQU/:                     MTCH-063
C  NCXN:      NUMBER OF SOLUTIONS NEEDED.                               MTCH-064
C  NC:        NUMBER OF EQUATIONS FOR IDENTICAL PARTICLES.              MTCH-065
C   USED:     NCXN,NC.                                                  MTCH-066
C                                                                       MTCH-067
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     MTCH-068
C  ITY(5):    STARTING ADDRESS OF REAL CENTRAL TRANSITION.              MTCH-069
C        ITY(5)=0 IS USED FOR DIRAC EQUATIONS.                          MTCH-070
C  INTV:      NUMBER OF TRANSITION FORM FACTORS WITHOUT SPIN-ORBIT,     MTCH-071
C             TAKING INTO ACCOUNT DISPERSION.                           MTCH-072
C  INSL:      NUMBER OF SPIN-ORBIT FORM TRANSITION FACTORS NOT TAKING   MTCH-073
C                  INTO ACCOUNT MULTIPLICATION BY 2.                    MTCH-074
C   USED:     ITY(5),INTV,INSL.                                         MTCH-075
C                                                                       MTCH-076
C***********************************************************************MTCH-077
      IMPLICIT REAL*8 (A-H,O-Z)                                         MTCH-078
      LOGICAL LO(150),LV                                                MTCH-079
      DIMENSION NVI(KAB,KAB,3),WV(22,*),MC(KAB,6),BG(LMAX2,*),NAT(2*JD,*MTCH-080
     1),AT(JD,*),AA(KAB,KAB,*),NIV(NCOLL,NCOLL,3),IVZ(4,*),FG(LMAX1,4,*)MTCH-081
     2,VCO(2,*),VDO(2,*),FAM(KAB,12),B(4),C(4),G(4),AB(4,2),KR(*),AV(5),MTCH-082
     3LA(3,11),BA(2,11),N1(4),N2(4),N3(4),N4(4)                         MTCH-083
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            MTCH-084
      COMMON /POTE2/ ITY(12),INVT,INTV,INSL,NPX                         MTCH-085
      COMMON /NOEQU/ NCXN,NIC,NCI,NC,NCIN,NIN,JPI,IPJ,R1(2),NAJ         MTCH-086
      COMMON /INOUT/ MR,MW,MS                                           MTCH-087
      DATA N1,N2 /1,1,3,3,1,3,1,3/                                      MTCH-088
      DATA N3,N4 /1,1,2,2,1,2,1,2/                                      MTCH-089
      LV=LO(44).AND.(LO(57).OR.LO(58))                                  MTCH-090
      LL4=4                                                             MTCH-091
      IF (LO(127)) LL4=1                                                MTCH-092
      IF (LV) WRITE (MW,1000)                                           MTCH-093
C LOOPS ON EQUATIONS.                                                   MTCH-094
      DO 55 IC=1,NC                                                     MTCH-095
      I1=MC(IC,1)                                                       MTCH-096
      K1=MC(IC,4)                                                       MTCH-097
      L1=MC(IC,2)                                                       MTCH-098
      IF (K1.GE.0.OR.LO(127)) GO TO 2                                   MTCH-099
C TRANSFER OF INFORMATIONS WHEN UNCOUPLED FUNCTIONS ARE NOT RECOMPUTED. MTCH-100
      K1=-K1                                                            MTCH-101
      IF (.NOT.LO(100)) MC(IC,6)=0                                      MTCH-102
      IF (K1.EQ.IC) GO TO 5                                             MTCH-103
      DO 1 I=1,10                                                       MTCH-104
    1 FAM(IC,I)=FAM(K1,I)                                               MTCH-105
      GO TO 5                                                           MTCH-106
C VALUES OF LONG RANGE TAILS OF CENTRAL POTENTIALS.                     MTCH-107
    2 F2=VCO(1,K1)**2                                                   MTCH-108
      F3=VCO(2,K1)*MC(IC,6)                                             MTCH-109
      JC=0                                                              MTCH-110
      IF (I1.LE.NCOLL) JC=NIV(I1,I1,3)                                  MTCH-111
      IF (WV(3,I1).GT.0.D0.AND.JC.GT.0) GO TO 3                         MTCH-112
      F2=0.D0                                                           MTCH-113
      F3=0.D0                                                           MTCH-114
    3 IF (LO(127)) GO TO 5                                              MTCH-115
C INTEGRATION REGION - SET UP OF POTENTIAL IN FIVE POINTS FOR           MTCH-116
C TRANSFORMATION OF MATCHING VALUES.                                    MTCH-117
      B1=WV(8,1)*WV(8,1)/48.D0                                          MTCH-118
      C1=(ISM-1)*WV(8,1)                                                MTCH-119
      A1=WV(11,I1)**2                                                   MTCH-120
      IF (WV(3,I1).LT.0.D0) A1=-A1                                      MTCH-121
      DO 4 I=1,5                                                        MTCH-122
      AV(I)=B1*(2.D0*WV(11,I1)*WV(5,I1)/C1-A1+(MC(IC,5)-F2-F3/C1)/C1**2)MTCH-123
    4 C1=C1+0.5D0*WV(8,1)                                               MTCH-124
C COMPUTATION OF COULOMB CORRECTIONS.                                   MTCH-125
    5 AZTMP=ISM*WV(8,I1)                                                MTCH-126
      DO 47 IP=1,IC                                                     MTCH-127
      DO 7 K=1,2                                                        MTCH-128
      DO 6 I=1,4                                                        MTCH-129
    6 AB(I,K)=0.D0                                                      MTCH-130
    7 CONTINUE                                                          MTCH-131
      I2=MC(IP,1)                                                       MTCH-132
      ILM=1                                                             MTCH-133
      IF (.NOT.LO(44)) GO TO 44                                         MTCH-134
      L2=MC(IP,2)                                                       MTCH-135
      I3=NIV(I2,I1,3)                                                   MTCH-136
      IF (I3.EQ.0) GO TO 44                                             MTCH-137
      AY=DSQRT(WV(11,I1)*WV(11,I2))                                     MTCH-138
      AW=AY*AZTMP                                                       MTCH-139
C SCAN THE COUPLINGS BETWEEN EQUATIONS.                                 MTCH-140
      IS=0                                                              MTCH-141
      IF ((.NOT.LO(100)).AND.LO(19).AND.(IC.NE.IP)) ILM=2               MTCH-142
      K1=NVI(IP,IC,1)                                                   MTCH-143
      K2=NVI(IP,IC,2)                                                   MTCH-144
      IF ((.NOT.LO(11)).OR.(K1.GT.K2)) GO TO 16                         MTCH-145
      IML=1                                                             MTCH-146
C CENTRAL CONTRIBUTION.                                                 MTCH-147
      I=1                                                               MTCH-148
    8 IF (VDO(1,I).EQ.0.D0) GO TO 30                                    MTCH-149
      II=I+ITY(5)                                                       MTCH-150
      DO 9 K=K1,K2                                                      MTCH-151
      IF (NAT(1,K).EQ.II) GO TO 10                                      MTCH-152
    9 CONTINUE                                                          MTCH-153
      GO TO 30                                                          MTCH-154
   10 IF ((AT(2,K).EQ.0.D0).AND.(.NOT.LO(100))) GO TO 30                MTCH-155
      LA1=MC(IC,2)                                                      MTCH-156
      LA2=MC(IP,2)                                                      MTCH-157
      LA3=IVZ(4,I)                                                      MTCH-158
      ZT=AT(2,K)*AY**LA3*VDO(1,I)/WV(8,I1)**2                           MTCH-159
      IF (LO(100)) ZT=ZT*.5D0*DSQRT((1.D0+WV(6,I1)/WV(7,I1))*(1.D0+WV(6,MTCH-160
     1I2)/WV(7,I1)))                                                    MTCH-161
      IM=1                                                              MTCH-162
   11 IF (IM.LT.5) YT=ZT                                                MTCH-163
      IF ((YT.EQ.0.D0).AND.(ZT.EQ.0.D0)) GO TO 14                       MTCH-164
      IF (IS.EQ.0) GO TO 13                                             MTCH-165
      DO 12 J=1,IS                                                      MTCH-166
      IF ((LA(1,J).NE.LA1).OR.(LA(2,J).NE.LA2).OR.(LA(3,J).NE.LA3)) GO TMTCH-167
     1O 12                                                              MTCH-168
      BA(1,J)=BA(1,J)+ZT                                                MTCH-169
      BA(2,J)=BA(2,J)+YT                                                MTCH-170
      GO TO 14                                                          MTCH-171
   12 CONTINUE                                                          MTCH-172
   13 IS=IS+1                                                           MTCH-173
      LA(1,IS)=LA1                                                      MTCH-174
      LA(2,IS)=LA2                                                      MTCH-175
      LA(3,IS)=LA3                                                      MTCH-176
      BA(1,IS)=ZT                                                       MTCH-177
      BA(2,IS)=YT                                                       MTCH-178
   14 GO TO ( 15 , 30 , 20 , 30 , 27 , 28 , 29 , 30 ),IM                MTCH-179
   15 IF (.NOT.LO(100)) GO TO 30                                        MTCH-180
C VECTOR CONTRIBUTION IN DIRAC EQUATION.                                MTCH-181
      IM=2                                                              MTCH-182
      LA1=MC(IC,3)-MC(IC,2)                                             MTCH-183
      LA2=MC(IP,3)-MC(IP,2)                                             MTCH-184
      LA3=IVZ(4,I)                                                      MTCH-185
      ZT=AT(4,K)*AY**LA3*VDO(1,I)*CHB**2*WV(11,I1)*WV(11,I2)/(2.D0*WV(7,MTCH-186
     1I1)*(WV(6,I2)+WV(7,I1))*WV(8,I1)**2)                              MTCH-187
      IF ((LA1-MC(IC,2))*(LA2-MC(IP,2)).LT.0) ZT=-ZT                    MTCH-188
      GO TO 11                                                          MTCH-189
   16 IF (.NOT.LO(19)) GO TO 31                                         MTCH-190
      K3=NVI(IP,IC,3)                                                   MTCH-191
C TENSOR CONTRIBUTION IN DIRAC EQUATION.                                MTCH-192
      IF (.NOT.LO(100)) GO TO 21                                        MTCH-193
      IML=2                                                             MTCH-194
      K4=K2+1                                                           MTCH-195
      IF (K4.GT.K3) GO TO 31                                            MTCH-196
      I=1                                                               MTCH-197
   17 IF (VDO(2,I).EQ.0.D0) GO TO 30                                    MTCH-198
      DO 18 K=K4,K3                                                     MTCH-199
      IF (NAT(1,K).EQ.IVZ(3,I)+INTV) GO TO 19                           MTCH-200
   18 CONTINUE                                                          MTCH-201
      GO TO 30                                                          MTCH-202
   19 IM=3                                                              MTCH-203
      LA1=MC(IC,3)-MC(IC,2)                                             MTCH-204
      LA2=MC(IP,2)                                                      MTCH-205
      LA3=IVZ(4,I)+1                                                    MTCH-206
      ZT=.5D0*(AT(4,K)+DFLOAT(LA3)*AT(2,K))*AY**LA3*VDO(2,I)*CHB*WV(11,IMTCH-207
     11)/(WV(8,I1)**2*WV(7,I1))                                         MTCH-208
      IF ((LA1-MC(IC,2)).GT.0) ZT=-ZT                                   MTCH-209
      GO TO 11                                                          MTCH-210
   20 IM=4                                                              MTCH-211
      LA1=MC(IC,2)                                                      MTCH-212
      LA2=MC(IP,3)-LA2                                                  MTCH-213
      ZT=-.5D0*(AT(4,K)-DFLOAT(LA3)*AT(2,K))*AY**LA3*VDO(2,I)*CHB*WV(11,MTCH-214
     1I2)/(WV(8,I2)**2*WV(7,I1))                                        MTCH-215
      IF ((LA2-MC(IP,2)).GT.0) ZT=-ZT                                   MTCH-216
      GO TO 11                                                          MTCH-217
   21 I=1                                                               MTCH-218
      IML=3                                                             MTCH-219
C SPIN-ORBIT CONTRIBUTION IN SCHROEDINGER EQUATION.                     MTCH-220
      KP1=NVI(IC,IP,1)                                                  MTCH-221
      KP2=NVI(IC,IP,2)                                                  MTCH-222
      KP3=NVI(IC,IP,3)                                                  MTCH-223
   22 IF (VDO(2,I).EQ.0.D0) GO TO 30                                    MTCH-224
      II=IVZ(3,I)+ITY(5)+INSL+INTV                                      MTCH-225
      AX1=0.D0                                                          MTCH-226
      AX2=0.D0                                                          MTCH-227
      AX3=0.D0                                                          MTCH-228
      IF (K1.GT.K3) GO TO 24                                            MTCH-229
      DO 23 K=K1,K3                                                     MTCH-230
      IF (NAT(1,K)+INSL.EQ.II) AX1=AT(2,K)                              MTCH-231
      IF ((K.LE.K2).AND.(NAT(1,K).EQ.II)) AX2=AT(2,K)                   MTCH-232
      IF ((K.GT.K2).AND.(NAT(1,K).EQ.II)) AX3=AT(2,K)                   MTCH-233
   23 CONTINUE                                                          MTCH-234
   24 AY1=0.D0                                                          MTCH-235
      AY2=0.D0                                                          MTCH-236
      AY3=0.D0                                                          MTCH-237
      IF (KP1.GT.KP3) GO TO 26                                          MTCH-238
      DO 25 K=KP1,KP3                                                   MTCH-239
      IF (NAT(1,K)+INSL.EQ.II) AY1=AT(2,K)                              MTCH-240
      IF ((K.LE.KP2).AND.(NAT(1,K).EQ.II)) AY2=AT(2,K)                  MTCH-241
      IF ((K.GT.KP2).AND.(NAT(1,K).EQ.II)) AY3=AT(2,K)                  MTCH-242
   25 CONTINUE                                                          MTCH-243
   26 IF ((K1.GT.K3).AND.(KP1.GT.KP3)) GO TO 30                         MTCH-244
      LA1=MC(IC,2)                                                      MTCH-245
      LA2=MC(IP,2)                                                      MTCH-246
      LA3=IVZ(4,I)+2                                                    MTCH-247
      IF (LA3.GT.LA1+LA2) GO TO 30                                      MTCH-248
      XT=AY**LA3*VDO(2,I)/WV(8,I1)**2                                   MTCH-249
      ZT=(AX2-DFLOAT(LA3-1)*AX1+DFLOAT(LA1+1)*AX3)*XT                   MTCH-250
      YT=(AY2-DFLOAT(LA3-1)*AY1+DFLOAT(LA2+1)*AY3)*XT                   MTCH-251
      IM=5                                                              MTCH-252
      GO TO 11                                                          MTCH-253
   27 LA3=LA3-1                                                         MTCH-254
      XT=XT/AY                                                          MTCH-255
      ZT=AX3*WV(11,I1)*WV(5,I1)/DFLOAT(LA1+1)*XT                        MTCH-256
      YT=AY3*WV(11,I2)*WV(5,I2)/DFLOAT(LA2+1)*XT                        MTCH-257
      IM=6                                                              MTCH-258
      GO TO 11                                                          MTCH-259
   28 LA2=LA2+1                                                         MTCH-260
      YT=-AY3*DSQRT(1.D0+(WV(5,I2)/DFLOAT(LA2))**2)*WV(11,I2)*XT        MTCH-261
      ZT=0.D0                                                           MTCH-262
      IM=7                                                              MTCH-263
      GO TO 11                                                          MTCH-264
   29 LA1=LA1+1                                                         MTCH-265
      LA2=LA2-1                                                         MTCH-266
      ZT=-AX3*DSQRT(1.D0+(WV(5,I1)/DFLOAT(LA1))**2)*WV(11,I1)*XT        MTCH-267
      YT=0.D0                                                           MTCH-268
      IM=8                                                              MTCH-269
      GO TO 11                                                          MTCH-270
   30 I=I+1                                                             MTCH-271
      IF (I.LE.INTV) GO TO ( 8 , 17 , 22 ),IML                          MTCH-272
      IF (IML.EQ.1) GO TO 16                                            MTCH-273
   31 IF (IS.EQ.0) GO TO 44                                             MTCH-274
      DO 43 IK=1,IS                                                     MTCH-275
      IF (DABS(BA(1,IK))+DABS(BA(2,IK)).LT.1.D-8) GO TO 43              MTCH-276
      LI=LA(1,IK)                                                       MTCH-277
      LF=LA(2,IK)                                                       MTCH-278
      LL=LA(3,IK)                                                       MTCH-279
      EI=WV(5,I1)                                                       MTCH-280
      EF=WV(5,I2)                                                       MTCH-281
      XI=WV(11,I1)*AZTMP                                                MTCH-282
      XF=WV(11,I2)*AZTMP                                                MTCH-283
      L3=(LI+LF-LL+3)/2                                                 MTCH-284
      IF (L3.LE.0) GO TO 43                                             MTCH-285
      CALL CORA(LL,LI,LF,EI,EF,XI,XF,B,C,LO(127))                       MTCH-286
C ORDER IN C   (LI,LF),(LI,LF+1),(LI+1,LF),(LI+1,LF+1).                 MTCH-287
C ORDER IN FG   F(EI)*F(EF),G(EI)*F(EF),F(EI)*G(EF),G(EI)*G(EF).        MTCH-288
      IF (LO(127)) GO TO 40                                             MTCH-289
      IF (L3+3.GT.LMAX3) GO TO 64                                       MTCH-290
C INTEGRATION REGION - INTEGRALS FROM MATCHING POINT TO INFINITY.       MTCH-291
C COMPUTATION OF THE INTEGRALS FROM THE MATCHING POINT USING B AND C.   MTCH-292
      DO 33 I=1,4                                                       MTCH-293
      G(I)=0.D0                                                         MTCH-294
      DO 32 J=1,4                                                       MTCH-295
   32 G(I)=G(I)+B(J)*FG(L3+J-1,I,I3)-C(J)*FG(L3+N3(J),N2(I),I1)*FG(L3+N4MTCH-296
     1(J),N1(I),I2)                                                     MTCH-297
   33 CONTINUE                                                          MTCH-298
      DO 35 I=1,ILM                                                     MTCH-299
      DO 34 J=1,4                                                       MTCH-300
   34 AB(J,I)=AB(J,I)+BA(I,IK)*G(J)                                     MTCH-301
   35 CONTINUE                                                          MTCH-302
      IF (LO(125).OR.(LO(29).AND.(IP.EQ.IC))) GO TO 38                  MTCH-303
      C0=-DFLOAT(LL+1)/AZTMP+6.D0/WV(8,I1)                              MTCH-304
      DO 37 I=1,ILM                                                     MTCH-305
      YT=BA(I,IK)*WV(8,I1)**2*AY/(12.D0*AW**(LL+1))                     MTCH-306
C WITH THE GREEN'S FUNCTIONS METHOD,WE MUST ADD H**2*FP(R)/12           MTCH-307
C WHICH IS VRE(ISM-1)*(KI*FP(I)*G(F)+KF*F(I)*GP(F)-(LL+1)/R)/12.        MTCH-308
C FINITE STEP CORRECTIONS.                                              MTCH-309
      DO 36 J=1,4                                                       MTCH-310
   36 AB(J,I)=AB(J,I)-YT*(WV(11,I1)*FG(LI+1,N2(J)+1,I1)*FG(LF+1,N1(J),I2MTCH-311
     1)+WV(11,I2)*FG(LI+1,N2(J),I1)*FG(LF+1,N1(J)+1,I2)+C0*FG(LI+1,N2(J)MTCH-312
     2,I1)*FG(LF+1,N1(J),I2))                                           MTCH-313
   37 CONTINUE                                                          MTCH-314
      GO TO 43                                                          MTCH-315
C CORRECTION OF THE POTENTIAL IN FIVE POINTS FOR MATCHING VALUES.       MTCH-316
   38 C1=DFLOAT(ISM-1)*WV(8,I1)*AY                                      MTCH-317
      DO 39 I=1,5                                                       MTCH-318
      AV(I)=AV(I)+BA(1,IK)*AY*WV(8,I1)**2/C1**(LL+1)/48.D0              MTCH-319
   39 C1=C1+0.5D0*WV(8,I1)*AY                                           MTCH-320
      GO TO 43                                                          MTCH-321
C COMPUTATION OF INTEGRALS FROM 0 TO INFINITY USING B.                  MTCH-322
   40 AX=0.D0                                                           MTCH-323
      IF (L3+3.GT.LMAX2) GO TO 65                                       MTCH-324
      DO 41 I=1,4                                                       MTCH-325
   41 AX=AX+B(I)*BG(L3+I-1,I3)                                          MTCH-326
      DO 42 I=1,ILM                                                     MTCH-327
   42 AB(1,I)=AB(1,I)+BA(I,IK)*AX                                       MTCH-328
   43 CONTINUE                                                          MTCH-329
C LIMITATION FOR TOO LARGE INTEGRAL OF IRREGULAR FUNCTIONS.             MTCH-330
   44 IF (DABS(AB(4,1)).GT.WV(11,I1)) AB(4,1)=AB(1,1)                   MTCH-331
      IF ((ILM.EQ.2).AND.(DABS(AB(4,2)).GT.WV(11,I2))) AB(4,2)=AB(1,2)  MTCH-332
      IF (.NOT.LV) GO TO 45                                             MTCH-333
      WRITE (MW,1001) IC,IP,L1,L2,(AB(I,1),I=1,LL4)                     MTCH-334
      IF (ILM.EQ.2) WRITE (MW,1001) IP,IC,L2,L1,(AB(I,2),I=1,LL4)       MTCH-335
C BUILD UP OF MATRIX OF CORRECTIONS.                                    MTCH-336
   45 DO 46 L=1,LL4                                                     MTCH-337
      IF (IC.NE.IP) AA(IP,IC,L)=AB(L,ILM)                               MTCH-338
   46 AA(IC,IP,L)=AB(L,1)                                               MTCH-339
      IF (LO(127).OR.(IC.EQ.IP)) GO TO 47                               MTCH-340
      AA(IP,IC,2)=AB(3,ILM)                                             MTCH-341
      AA(IP,IC,3)=AB(2,ILM)                                             MTCH-342
   47 CONTINUE                                                          MTCH-343
      IF (.NOT.LO(127)) GO TO 48                                        MTCH-344
      IF (JC.LE.0) GO TO 55                                             MTCH-345
      IF (WV(5,I1).EQ.0.D0) F2=F3*WV(11,I1)                             MTCH-346
      AA(IC,IC,1)=AA(IC,IC,1)-F2*BG(L1+1,JC)*WV(11,I1)                  MTCH-347
      IF ((WV(5,I1).EQ.0.D0).OR.(F3.EQ.0.D0)) GO TO 55                  MTCH-348
      B1=2.D0*WV(5,I1)*DFLOAT(L1*(L1+1))                                MTCH-349
      B2=DFLOAT(L1+1)**2+WV(5,I1)**2                                    MTCH-350
      C1=-(DFLOAT(2*L1+1)*B2+2*WV(5,I1)**2)/B1                          MTCH-351
      C2=DFLOAT(2*L1+3)*B2/B1                                           MTCH-352
      AA(IC,IC,1)=AA(IC,IC,1)-F3*(C1*BG(L1+1,JC)+C2*BG(L1+2,JC))*WV(11,IMTCH-353
     11)**2                                                             MTCH-354
      GO TO 55                                                          MTCH-355
   48 IF (MC(IC,4).LT.0) GO TO 55                                       MTCH-356
C MATCHING VALUES.                                                      MTCH-357
      DO 49 K=1,4                                                       MTCH-358
   49 B(K)=FG(L1+1,K,I1)                                                MTCH-359
      IF (JC.LE.0) GO TO 53                                             MTCH-360
      IF ((.NOT.LO(29)).AND.(F2.EQ.0.D0.AND.F3.EQ.0.D0)) GO TO 53       MTCH-361
      IF (WV(5,I1).NE.0.D0) GO TO 50                                    MTCH-362
      F2=F3*WV(11,I1)                                                   MTCH-363
      F3=0.D0                                                           MTCH-364
   50 DO 51 K=1,4                                                       MTCH-365
   51 G(K)=-FG(L1+1,K,JC)*F2+AB(K,1)/WV(11,I1)                          MTCH-366
      IF (F3.EQ.0.D0) GO TO 52                                          MTCH-367
      B1=2.D0*WV(5,I1)*DFLOAT(L1*(L1+1))                                MTCH-368
      B2=DFLOAT(L1+1)**2+WV(5,I1)**2                                    MTCH-369
      C1=-(DFLOAT(2*L1+1)*B2+2*WV(5,I1)**2)/B1                          MTCH-370
      C2=DFLOAT(2*L1+3)*B2/B1                                           MTCH-371
      A1=DFLOAT(ISM)*WV(8,I1)*WV(11,I1)                                 MTCH-372
      D1=(B2+DFLOAT(L1+1)*WV(5,I1)/A1)/A1/B1                            MTCH-373
      D2=-WV(5,I1)*DSQRT(B2)/B1/A1                                      MTCH-374
      A1=B2/B1/A1                                                       MTCH-375
      A3=F3*WV(11,I1)                                                   MTCH-376
      G(1)=G(1)-A3*(C1*FG(L1+1,1,JC)+C2*FG(L1+2,1,JC)-D1*FG(L1+1,1,I1)**MTCH-377
     12-D2*2.D0*FG(L1+1,1,I1)*FG(L1+2,1,I1)-A1*FG(L1+2,1,I1)**2)        MTCH-378
      G(2)=G(2)-A3*(C1*FG(L1+1,2,JC)+C2*FG(L1+2,2,JC)-D1*FG(L1+1,1,I1)*FMTCH-379
     1G(L1+1,3,I1)-D2*(FG(L1+1,1,I1)*FG(L1+2,3,I1)+FG(L1+2,1,I1)*FG(L1+1MTCH-380
     2,3,I1))-A1*FG(L1+2,1,I1)*FG(L1+2,3,I1))                           MTCH-381
      G(4)=G(4)-A3*(C1*FG(L1+1,4,JC)+C2*FG(L1+2,4,JC)-D1*FG(L1+1,3,I1)**MTCH-382
     12-D2*2.D0*FG(L1+1,3,I1)*FG(L1+2,3,I1)-A1*FG(L1+2,3,I1)**2)        MTCH-383
   52 A4=1.D0+(G(1)*G(4)-G(2)**2)                                       MTCH-384
      G(3)=B(1)                                                         MTCH-385
      B(1)=(B(1)*(1.D0-G(2))+G(1)*B(3))/A4                              MTCH-386
      B(3)=(-G(3)*G(4)+(1.D0+G(2))*B(3))/A4                             MTCH-387
      G(3)=B(2)                                                         MTCH-388
      B(2)=(B(2)*(1.D0-G(2))+G(1)*B(4))/A4                              MTCH-389
      B(4)=(-G(3)*G(4)+(1.D0+G(2))*B(4))/A4                             MTCH-390
   53 A1=(1.D0-AV(2))/(2.D0+10.D0*AV(2))                                MTCH-391
      B1=(1.D0-AV(4))/(2.D0+10.D0*AV(4))                                MTCH-392
      A2=A1*(1.D0-AV(1))/(1.D0-4.D0*AV(1))                              MTCH-393
      B2=B1*(1.D0-AV(5))/(1.D0-4.D0*AV(5))                              MTCH-394
      C1=(2.D0+10.D0*AV(3))-(1.D0-AV(3))*(A1+B1)                        MTCH-395
      A1=(16.D0-144.D0*AV(2))/(2.D0+10.D0*AV(2))                        MTCH-396
      B1=(16.D0-144.D0*AV(4))/(2.D0+10.D0*AV(4))                        MTCH-397
      C2=(7.D0+A1*(1.D0-AV(1)))/(1.D0-4.D0*AV(1))                       MTCH-398
      D2=(7.D0+B1*(1.D0-AV(5)))/(1.D0-4.D0*AV(5))                       MTCH-399
      D1=(B1-A1)*(1.D0-AV(3))                                           MTCH-400
      A1=A2*D2+B2*C2                                                    MTCH-401
      B1=(C1*D2+D1*B2)/A1                                               MTCH-402
      B2=30.D0*WV(8,1)*B2*WV(11,I1)/A1                                  MTCH-403
      FAM(IC,1)=B1*B(1)-B2*B(2)                                         MTCH-404
      FAM(IC,3)=B1*B(3)-B2*B(4)                                         MTCH-405
      B1=(C2*C1-A2*D1)/A1                                               MTCH-406
      A2=-30.D0*WV(8,1)*A2*WV(11,I1)/A1                                 MTCH-407
      FAM(IC,2)=B1*B(1)-A2*B(2)                                         MTCH-408
      FAM(IC,4)=B1*B(3)-A2*B(4)                                         MTCH-409
      FAM(IC,5)=WV(11,I1)                                               MTCH-410
      IF (LO(100)) FAM(IC,5)=FAM(IC,5)*CHB/(WV(7,I1)+WV(6,I1))          MTCH-411
      BT=FAM(IC,2)*FAM(IC,3)-FAM(IC,1)*FAM(IC,4)                        MTCH-412
      IF (BT.EQ.0.D0) BT=1.D0                                           MTCH-413
      DO 54 I=1,4                                                       MTCH-414
   54 FAM(IC,I)=FAM(IC,I)/BT                                            MTCH-415
      FAM(IC,6)=FAM(IC,5)/BT                                            MTCH-416
      IF (LO(100)) FAM(IC,5)=FAM(IC,5)*WV(8,I1)                         MTCH-417
      FAM(IC,7)=WV(9,I1)**2                                             MTCH-418
      FAM(IC,9)=2.D0*FAM(IC,7)*DFLOAT(MC(IC,6))                         MTCH-419
      FAM(IC,8)=WV(12,I1)                                               MTCH-420
      FAM(IC,10)=DFLOAT(MC(IC,5))                                       MTCH-421
      FAM(IC,11)=WV(10,I1)**2                                           MTCH-422
      FAM(IC,12)=2.D0*FAM(IC,11)*DFLOAT(MC(IC,6))                       MTCH-423
      IF (.NOT.LO(103)) FAM(IC,12)=0.D0                                 MTCH-424
      IF (WV(5,I1).EQ.0.D0) FAM(IC,11)=0.D0                             MTCH-425
   55 CONTINUE                                                          MTCH-426
      DO 58 IC=1,NC                                                     MTCH-427
      I1=MC(IC,1)                                                       MTCH-428
      DO 57 L=1,LL4                                                     MTCH-429
      DO 56 IP=1,NC                                                     MTCH-430
   56 AA(IC,IP,L)=AA(IC,IP,L)/WV(11,I1)                                 MTCH-431
   57 CONTINUE                                                          MTCH-432
   58 CONTINUE                                                          MTCH-433
      IF (.NOT.LO(127)) RETURN                                          MTCH-434
      IF (.NOT.LO(125)) GO TO 61                                        MTCH-435
C TRANSPOSITION IF COUPLED EQUATIONS ARE USED.                          MTCH-436
      DO 60 IC=1,NC                                                     MTCH-437
      DO 59 IP=1,IC                                                     MTCH-438
      AX=AA(IP,IC,1)                                                    MTCH-439
      AA(IP,IC,1)=AA(IC,IP,1)                                           MTCH-440
   59 AA(IC,IP,1)=AX                                                    MTCH-441
   60 CONTINUE                                                          MTCH-442
C LINEAR SYSTEM FOR COMPUTATION OF THE S-MATRIX FROM THE K-MATRIX.      MTCH-443
   61 DO 63 IC=1,NC                                                     MTCH-444
      DO 62 IP=1,NC                                                     MTCH-445
      AA(IC,IP,2)=0.D0                                                  MTCH-446
      AA(IC,IP,4)=0.D0                                                  MTCH-447
   62 AA(IC,IP,5)=-AA(IC,IP,1)                                          MTCH-448
   63 AA(IC,IC,4)=1.D0                                                  MTCH-449
      CALL LINS(AA(1,1,4),KAB,AA,KAB,AA(1,1,5),KAB,AA(1,1,2),KAB,NC,NCXNMTCH-450
     1,KR,IER)                                                          MTCH-451
      RETURN                                                            MTCH-452
   64 WRITE (MW,1002) L3,LI,LF,LMAX3                                    MTCH-453
      RETURN                                                            MTCH-454
   65 WRITE (MW,1003) L3,LMAX2                                          MTCH-455
      RETURN                                                            MTCH-456
 1000 FORMAT (/' CHANNELS  L-VALUES     COULOMB INTEGRALS: F*F,G*F,F*G AMTCH-457
     1ND G*G:')                                                         MTCH-458
 1001 FORMAT (2X,2I3,2X,2I4,3X,4D18.10)                                 MTCH-459
 1002 FORMAT (' STARTING VALUES',I3,' FOR INTEGRALS AND',2I4,' FOR COULOMTCH-460
     1MB FUNCTIONS TOO LARGE . LIMITATION AT',I4)                       MTCH-461
 1003 FORMAT (' STARTING VALUE',I4,' TOO LARGE FOR COULOMB INTEGRALS WHIMTCH-462
     1CH ARE COMPUTED UP TO',I5)                                        MTCH-463
      END                                                               MTCH-464
C 09/03/07                                                      ECIS12  LINS-000
      SUBROUTINE LINS(A,IA,B,IB,X,IX,Y,IY,N,M,K,IER)                    LINS-001
C LINS: JLSB2 VERSION 01 18/12/68 MATH L003 OF SACLAY                   LINS-002
C SOLUTION OF DOUBLE PRECISION COMPLEX LINEAR SYSTEMS WITH REAL AND     LINS-003
C IMAGINARY PARTS IN DIFFERENT AREAS.                                   LINS-004
C INPUT:     A:       REAL COMPONENT OF MATRIX.                         LINS-005
C            IA:      FIRST DIMENSION OF AREA A.                        LINS-006
C            B:       IMAGINARY COMPONENT OF MATRIX.                    LINS-007
C            IB:      FIRST DIMENSION OF AREA B.                        LINS-008
C            X:       REAL SECOND MEMBERS.                              LINS-009
C            IX:      FIRST DIMENSION OF AREA X.                        LINS-010
C            Y:       IMAGINARY SECOND MEMBERS.                         LINS-011
C            IY:      FIRST DIMENSION OF AREA Y.                        LINS-012
C            N:       ORDER OF THE SYSTEM.                              LINS-013
C            M:       NUMBER OF SECOND MEMBERS.                         LINS-014
C OUTPUT:    X,Y:     SECOND MEMBERS ARE REPLACED BY SOLUTIONS.         LINS-015
C            IER:     RETURNS DIAGNOSTIC: 0 NON SINGULAR MATRIX,        LINS-016
C                                         1 SINGULAR MATRIX,            LINS-017
C                                         2 QUASI SINGULAR MATRIX.      LINS-018
C WORKING AREAS:                                                        LINS-019
C            K:       WORKING FIELD OF DIMENSION >/= N.                 LINS-020
C***********************************************************************LINS-021
      IMPLICIT REAL*8 (A-H,O-Z)                                         LINS-022
      DIMENSION A(IA,*),B(IB,*),X(IX,*),Y(IY,*),K(*)                    LINS-023
      COMMON /INOUT/ MR,MW,MS                                           LINS-024
      IER=0                                                             LINS-025
      DO 1 I=1,N                                                        LINS-026
    1 K(I)=I                                                            LINS-027
      DO 14 I=1,N                                                       LINS-028
      AMAX=DABS(A(I,I))+DABS(B(I,I))                                    LINS-029
      JMAX=I                                                            LINS-030
      I1=I+1                                                            LINS-031
      IF (I.EQ.N) GO TO 3                                               LINS-032
      DO 2 J=I1,N                                                       LINS-033
      AMAY=DABS(A(I,J))+DABS(B(I,J))                                    LINS-034
      IF (AMAX.GE.AMAY) GO TO 2                                         LINS-035
      AMAX=AMAY                                                         LINS-036
      JMAX=J                                                            LINS-037
    2 CONTINUE                                                          LINS-038
    3 IF (AMAX.EQ.0.D0) GO TO 21                                        LINS-039
      IF (JMAX.EQ.I) GO TO 5                                            LINS-040
      DO 4 I2=1,N                                                       LINS-041
      AUX=B(I2,I)                                                       LINS-042
      B(I2,I)=B(I2,JMAX)                                                LINS-043
      B(I2,JMAX)=AUX                                                    LINS-044
      AUX=A(I2,I)                                                       LINS-045
      A(I2,I)=A(I2,JMAX)                                                LINS-046
    4 A(I2,JMAX)=AUX                                                    LINS-047
      NAB=K(JMAX)                                                       LINS-048
      K(JMAX)=K(I)                                                      LINS-049
      K(I)=NAB                                                          LINS-050
    5 IF (I.EQ.1) GO TO 7                                               LINS-051
      SR=0.D0                                                           LINS-052
      SI=0.D0                                                           LINS-053
      T=0.D0                                                            LINS-054
      I4=I-1                                                            LINS-055
      DO 6 IT=1,I4                                                      LINS-056
      PR=A(IT,I)*A(I,IT)-B(IT,I)*B(I,IT)                                LINS-057
      PI=A(IT,I)*B(I,IT)+A(I,IT)*B(IT,I)                                LINS-058
      SR=SR+PR                                                          LINS-059
      SI=SI+PI                                                          LINS-060
    6 T=T+DABS(PR)+DABS(PI)                                             LINS-061
      ERA=1.D-16*(T+DABS(A(I,I)-SR)+DABS(B(I,I)-SI))                    LINS-062
      IF (AMAX.GT.ERA) GO TO 7                                          LINS-063
      IER=2                                                             LINS-064
      WRITE (MW,1000)                                                   LINS-065
      GO TO 22                                                          LINS-066
    7 IF (I.EQ.N) GO TO 9                                               LINS-067
      DO 8 J=I1,N                                                       LINS-068
      AA=A(I,J)                                                         LINS-069
      BB=B(I,J)                                                         LINS-070
      AI=A(I,I)                                                         LINS-071
      BI=B(I,I)                                                         LINS-072
      D=AI*AI+BI*BI                                                     LINS-073
      A(I,J)=(AA*AI+BB*BI)/D                                            LINS-074
    8 B(I,J)=(BB*AI-AA*BI)/D                                            LINS-075
    9 DO 10 J=1,M                                                       LINS-076
      AA=X(I,J)                                                         LINS-077
      BB=Y(I,J)                                                         LINS-078
      AI=A(I,I)                                                         LINS-079
      BI=B(I,I)                                                         LINS-080
      D=AI*AI+BI*BI                                                     LINS-081
      X(I,J)=(AA*AI+BB*BI)/D                                            LINS-082
   10 Y(I,J)=(BB*AI-AA*BI)/D                                            LINS-083
      IF (I.EQ.N) GO TO 14                                              LINS-084
      DO 13 I3 =I1,N                                                    LINS-085
      DO 11 J3 =I1,N                                                    LINS-086
      B(I3,J3)=B(I3,J3)-A(I3,I)*B(I,J3)-B(I3,I)*A(I,J3)                 LINS-087
   11 A(I3,J3)=A(I3,J3)-A(I3,I)*A(I,J3)+B(I3,I)*B(I,J3)                 LINS-088
      DO 12 J3 =1,M                                                     LINS-089
      Y(I3,J3)=Y(I3,J3)-A(I3,I)*Y(I,J3)-B(I3,I)*X(I,J3)                 LINS-090
   12 X(I3,J3)=X(I3,J3)-A(I3,I)*X(I,J3)+B(I3,I)*Y(I,J3)                 LINS-091
   13 CONTINUE                                                          LINS-092
   14 CONTINUE                                                          LINS-093
      IF (N.EQ.1) GO TO 22                                              LINS-094
      DO 17 KC=1,M                                                      LINS-095
      J=N                                                               LINS-096
   15 I=J-1                                                             LINS-097
   16 X(I,KC)=X(I,KC)-X(J,KC)*A(I,J)+Y(J,KC)*B(I,J)                     LINS-098
      Y(I,KC)=Y(I,KC)-X(J,KC)*B(I,J)-Y(J,KC)*A(I,J)                     LINS-099
      I=I-1                                                             LINS-100
      IF (I.NE.0) GO TO 16                                              LINS-101
      J=J-1                                                             LINS-102
      IF (J.NE.1) GO TO 15                                              LINS-103
   17 CONTINUE                                                          LINS-104
      DO 20 I=1,N                                                       LINS-105
   18 J=K(I)                                                            LINS-106
      IF (J.LE.I) GO TO 20                                              LINS-107
      K(I)=K(J)                                                         LINS-108
      K(J)=J                                                            LINS-109
      DO 19 MP=1,M                                                      LINS-110
      AUX=Y(J,MP)                                                       LINS-111
      Y(J,MP)=Y(I,MP)                                                   LINS-112
      Y(I,MP)=AUX                                                       LINS-113
      AUX=X(J,MP)                                                       LINS-114
      X(J,MP)=X(I,MP)                                                   LINS-115
   19 X(I,MP)=AUX                                                       LINS-116
      GO TO 18                                                          LINS-117
   20 CONTINUE                                                          LINS-118
      GO TO 22                                                          LINS-119
   21 IER=1                                                             LINS-120
      WRITE (MW,1001)                                                   LINS-121
   22 RETURN                                                            LINS-122
 1000 FORMAT (' *****  LINS  ***** QUASI SINGULAR MATRIX.')             LINS-123
 1001 FORMAT (' *****  LINS  *****       SINGULAR MATRIX.')             LINS-124
      END                                                               LINS-125
C 02/02/06                                                      ECIS12  CORA-000
      SUBROUTINE CORA(LQ,L1,L2,EI,FI,VI,WI,B,C,LT)                      CORA-001
C COEFFICIENTS FOR COULOMB INTEGRALS                                    CORA-002
C M(L1,L2,LQ,R)=SUM FROM R TO INFINITY OF H(L1)*K(L2)/R**(LQ+1)         CORA-003
C EXPRESSED AS SUM ON I OF B(I)*M(L+I-2,L+I-2,1) + C1(R)*H(L)*K(L)      CORA-004
C + C2(R)*H(L)*K(L+1) + C3(R)*H(L+1)*K(L) + C4(R)*H(L+1)*K(L+1)         CORA-005
C WHERE H AND K ARE REGULAR OR IRREGULAR COULOMB FUNCTIONS              CORA-006
C L=INTEGER PART OF (L1+L2-LQ+3)/2 AND I RANGES FROM 1 TO 4.            CORA-007
C INPUT:     LQ:      LQ IN THE EXPRESSIONS ABOVE.                      CORA-008
C            L1,L2:   L1, L2 IN THE EXPRESSIONS ABOVE.                  CORA-009
C            EI,EF:   COULOMB PARAMETERS.                               CORA-010
C            VI,WI:   PRODUCT OF R WITH THE WAVE NUMBERS.               CORA-011
C            LT:      .TRUE. FOR ONLY INTEGRALS FROM 0 TO INFINITY.     CORA-012
C OUTPUT:    B(4):    COEFFICIENTS B IN THE EXPRESSIONS ABOVE.          CORA-013
C            C(4):    COEFFICIENTS C.                                   CORA-014
C                                                                       CORA-015
C THESE RESULTS ARE OBTAINED BY EXPRESSING                              CORA-016
C H(L1)*K(L2)/R**(LQ+1)- SUM ON I OF B(I)*H(L+I-2)*K(L+I-2)/R**2        CORA-017
C AS P1*H(L)*K(L) + P2*H(L)*K(L+1) + P3*H(L+1)*K(L) + P4*H(L+1)*Q(L+1)  CORA-018
C WHERE P1,P2,P3,P4 ARE POLYNOMIAL IN 1/R AND IDENTIFICATION TERM BY    CORA-019
C TERM STARTING FROM THE HIGHEST DEGREE IN 1/R WITH THE DERIVATIVE OF   CORA-020
C  Q1*H(L)*K(L) + Q2*H(L)*K(L+1) + Q3*H(L+1)*K(L) + Q4*H(L+1)*Q(L+1)    CORA-021
C THIS AS BEEN DONE USING AMP ( J.-M. DROUFFE, AMP LANGUAGE REFERENCE   CORA-022
C MANUAL - VERSION 6 - NOTE CEA-N-2297 1982).                           CORA-023
C                                                                       CORA-024
C THE NON RELATIVISTIC RESULTS FOR LQ=6 L2-L1=0,2,4 AND ALL THE         CORA-025
C COEFFICIENTS UP TO LQ=5 HAVE BEEN OBTAINED. THIS ALLOW TRANSFER OF    CORA-026
C ANGULAR MOMENTUM UP TO 5 FOR CENTRAL TERM AND 4 FOR SPIN-ORBIT.       CORA-027
C                                                                       CORA-028
C***********************************************************************CORA-029
      IMPLICIT REAL*8 (A-H,O-Z)                                         CORA-030
      DIMENSION B(4),C(4)                                               CORA-031
      LOGICAL LT                                                        CORA-032
      COMMON /INOUT/ MR,MW,MS                                           CORA-033
      DO 1 I=1,4                                                        CORA-034
      B(I)=0.D0                                                         CORA-035
    1 C(I)=0.D0                                                         CORA-036
      IF (L1.LE.L2) GO TO 2                                             CORA-037
      LL=L1-L2+1                                                        CORA-038
      E=FI                                                              CORA-039
      F=EI                                                              CORA-040
      V=WI                                                              CORA-041
      W=VI                                                              CORA-042
      GO TO 3                                                           CORA-043
    2 LL=L2-L1+1                                                        CORA-044
      E=EI                                                              CORA-045
      F=FI                                                              CORA-046
      V=VI                                                              CORA-047
      W=WI                                                              CORA-048
    3 IF ((LQ.GT.6).OR.(LL*(LQ-LL+2).LE.0)) GO TO 71                    CORA-049
      A=DFLOAT((L1+L2-LQ+5)/2)                                          CORA-050
      S=V/W                                                             CORA-051
      X=E*S-F                                                           CORA-052
      IF (DABS(X).LT.1.D-14) X=0.D0                                     CORA-053
      U=S**2-1.D0                                                       CORA-054
      IF (DABS(U).LT.1.D-14) U=0.D0                                     CORA-055
      IF ((X.EQ.0.D0).AND.(E.EQ.0.D0)) GO TO 49                         CORA-056
      P=S**2*(A**2+E**2)                                                CORA-057
      Q=A**2+F**2                                                       CORA-058
      Y=E*S+F                                                           CORA-059
      Z=E**2-F**2                                                       CORA-060
      IF (DABS(Z).LT.1.D-14) Z=0.D0                                     CORA-061
      IF (X.EQ.0.D0.AND.Z.EQ.0.D0) Z=1.D0                               CORA-062
      DEN=2.D0*X**2*(P-Q)+8.D0*Z*S**2                                   CORA-063
      Z=U                                                               CORA-064
      IF (X.EQ.0.D0.AND.Z.EQ.0.D0) Z=-1.D0/(E*F)                        CORA-065
      GO TO ( 4 , 9 , 13 , 20 , 28 , 41 ) , LQ                          CORA-066
    4 GO TO ( 5 , 6 ) , LL                                              CORA-067
C MULTIPOLE LQ=1 L1=L2.                                                 CORA-068
    5 B(1)=1.D0                                                         CORA-069
      RETURN                                                            CORA-070
    6 IF ((E.NE.F).OR.(V.NE.W)) GO TO 7                                 CORA-071
C MULTIPOLE LQ=1 L1=L2-1 WITH E=F AND V=W.                              CORA-072
      B1=DSQRT((A-1.D0)**2+E**2)                                        CORA-073
      B(2)=-(A-.5D0)*Q/(E*B1)                                           CORA-074
      B(3)=(A+.5D0)*Q/(E*B1)                                            CORA-075
      IF (LT) RETURN                                                    CORA-076
      C(1)=(Q+(2.D0*A-1.D0)*E/V)/(2.D0*E*V*B1)                          CORA-077
      C(3)=-DSQRT(Q)/(2.D0*V*A*B1)                                      CORA-078
      C(2)=C(3)*(2.D0*A-1.D0)                                           CORA-079
      C(4)=Q/(2.D0*E*V*B1)                                              CORA-080
      GO TO 70                                                          CORA-081
C MULTIPOLE LQ=1 L1=L2-1.                                               CORA-082
    7 A1=-2.D0*F*(2.D0*(A-1.D0)*Q-A**2*U)                               CORA-083
      A2=F*(4.D0*Q*(A-1.D0)*((6.D0*A+1.D0)*Q-4.D0*A**2+1.D0)+U*((((16.D0CORA-084
     1*A-24.D0)*A+4.D0)*A**2-2.D0)*Q+A**2*(2.D0*A-1.D0-U*(A-1.D0)**2)*(4CORA-085
     2.D0*A+2.D0)))                                                     CORA-086
      A3=-F*(A-1.D0)*((24.D0*A-4.D0)*Q+16.D0*A**2-4.D0+U*(((8.D0*A+8.D0)CORA-087
     1*A+2.D0)*A-2.D0))                                                 CORA-088
      A4=4.D0*(A-1.D0)*F                                                CORA-089
      IF (X.EQ.0.D0) GO TO 8                                            CORA-090
      A1=A1-X*(Q*(A-1.D0)*(2.D0*A+6.D0)+A**2*(4.D0+A*U)+X*((2.D0*A-2.D0)CORA-091
     1*F+A*X))                                                          CORA-092
      A2=A2+X*(Q*((A-1.D0)*(A+5.D0)*(12.D0*A+2.D0)*Q-(((40.D0*A-16.D0)*ACORA-093
     1-34.D0)*A-8.D0)*A-6.D0+(((((8.D0*A+12.D0)*A-38.D0)*A+8.D0)*A+5.D0)CORA-094
     2*A-4.D0)*U+(((16.D0*A+40.D0)*A-44.D0)*A-12.D0)*F*X+(((4.D0*A+20.D0CORA-095
     3)*A-13.D0)*A-8.D0)*X**2)+(2.D0*A+1.D0)*(A**2*(4.D0-8.D0*A+((6.D0*ACORA-096
     4-7.D0)*A+4.D0)*U+A*(A-1.D0)**2*U**2)+X*(((4.D0*A+6.D0)*A-2.D0+(A-1CORA-097
     5.D0)*((4.D0*A-4.D0)*A+2.D0)*U)*F+X*(A*(((2.D0*A-2.D0)*A+1.D0)*U-(4CORA-098
     6.D0*A-6.D0)*A+1.D0)+(4.D0*A-2.D0)*F*X+A*X**2))))                  CORA-099
      A3=A3+X*(A-1.D0)*(((8.D0*A-8.D0)*A+6.D0)*A+2.D0-(2.D0*A+6.D0)*(6.DCORA-100
     10*A-1.D0)*Q-((((4.D0*A+12.D0)*A+5.D0)*A-3.D0)*A-2.D0)*U-2.D0*X*(((CORA-101
     24.D0*A+8.D0)*A-3.D0)*F-X))                                        CORA-102
      A4=A4+X*2.D0*(A**2-1.D0)                                          CORA-103
    8 BD=.5D0*DEN*DSQRT((A-1.D0)**2+E**2)                               CORA-104
      IF (.NOT.LT) C(1)=.5D0-A                                          CORA-105
      GO TO 48                                                          CORA-106
    9 GO TO ( 10 , 11 , 12 ) , LL                                       CORA-107
C MULTIPOLE LQ=2 L1=L2.                                                 CORA-108
   10 A1=2.D0*Z*A**2*Y                                                  CORA-109
      A2=-Z*Y*(2.D0*A+1.D0)*(((A-1.D0)*A-.5D0)*Y**2+2.D0*A**2*(A-1.D0)**CORA-110
     12*(S**2+1.D0))                                                    CORA-111
      A3=2.D0*Z*(2.D0*A+1.D0)*(A-1.D0)**2*Y                             CORA-112
      A4=0.D0                                                           CORA-113
      BD=DEN*(A-1.D0)/DSQRT(S)                                          CORA-114
      IF (.NOT.LT) C(1)=-1.D0                                           CORA-115
      IF (X.EQ.0) GO TO 48                                              CORA-116
      A1=A1+X*(4.D0*F*E*S-2.D0*A*(A+Q+A*S**2+P))                        CORA-117
      A2=A2+X*((A+.5D0)*((((4.D0*A-6.D0)*A+2.D0)*A-1.D0)*(Q+P*S**2)+4.D0CORA-118
     1*(2.D0*A-3.D0)*F*E*S*(Q+P+S**2+1.D0)+(((4.D0*A+2.D0)*A-14.D0)*A+1.CORA-119
     2D0)*(Q*S**2+P)+A**2*((S**4+1.D0)*((2.D0*A-6.D0)*A+5.D0)-S**2*(4.D0CORA-120
     3*(A+1.D0)*A-14.D0)))+P*Q*((8.D0*A-4.D0)*A+8.D0))                  CORA-121
      A3=A3-2.D0*X*(A-1.D0)*((2.D0*A-3.D0)*(F**2+E**2*S**2)+4.D0*(2.D0*ACORA-122
     1+1.D0)*F*E*S+(S**2+1.D0)*(A+1.D0)*((6.D0*A+1.D0)*A-3.D0))         CORA-123
      A4=4.D0*(A-1.D0)*X                                                CORA-124
      GO TO 48                                                          CORA-125
C MULTIPOLE LQ=2 L1=L2-1.                                               CORA-126
   11 B1=X*(A-1.D0)-E*S                                                 CORA-127
      B3=-(A-1.D0)**2                                                   CORA-128
      B2=B3/(A-.5D0)                                                    CORA-129
      BD=-DEN*A*(A-1.D0)*(2.D0*A-3.D0)*DSQRT(S*((A-1.D0)**2+E**2))/(2.D0CORA-130
     1*A-1.D0)                                                          CORA-131
      IF (LT) GO TO 15                                                  CORA-132
      C(1)=B1+2.D0*A*(A-1.D0)**2/W                                      CORA-133
      C(2)=B3                                                           CORA-134
      C(3)=B2                                                           CORA-135
      GO TO 15                                                          CORA-136
C MULTIPOLE LQ=2 L1=L2-2.                                               CORA-137
   12 B1=Q                                                              CORA-138
      B3=-3.D0*E*S-X*(A-1.D0)                                           CORA-139
      B4=(A-1.D0)/(A-.5D0)                                              CORA-140
      BD=-3.D0*DEN*A*DSQRT(S*Q*((A-1.D0)**2+E**2))/(2.D0*A-1.D0)        CORA-141
      IF (LT) GO TO 17                                                  CORA-142
      C(1)=B1                                                           CORA-143
      C(2)=B3-2.D0*A*(A-1.D0)/W                                         CORA-144
      C(4)=B4                                                           CORA-145
      GO TO 17                                                          CORA-146
   13 GO TO ( 14 , 16 , 18 , 19 ) , LL                                  CORA-147
C MULTIPOLE LQ=3 L1=L2.                                                 CORA-148
   14 B1=Y/(A-1.D0)                                                     CORA-149
      B2=1.D0                                                           CORA-150
      B3=1.D0                                                           CORA-151
      BD=DEN*A*(2.D0*A-3.D0)                                            CORA-152
      IF (LT) GO TO 15                                                  CORA-153
      C(1)=B1-2.D0*A/W                                                  CORA-154
      C(2)=B3                                                           CORA-155
      C(3)=B2                                                           CORA-156
   15 A1=-2.D0*A**2*Y*B1*Z                                              CORA-157
      A2=Y*((2.D0*A+1.D0)*((2.D0*(A**2-A)**2*(1.D0+S**2)+Y**2*(A**2-A-.5CORA-158
     1D0))*B1-Y*(P*B2+Q*B3)))*Z                                         CORA-159
      A3=-Y*((2.D0*A-1.D0)*(-Y*(B2+B3))+(4.D0*A+2.D0)*(A-1.D0)**2*B1)*Z CORA-160
      A4=0.D0                                                           CORA-161
      IF (X.EQ.0.D0) GO TO 48                                           CORA-162
      A1=A1+X*2.D0*P*(A*X-2.D0*F)*B2                                    CORA-163
      A2=A2+X*P*(2.D0*Q*((2.D0*A+3.D0)*(A+1.D0)*F+((2.D0*A+3.D0)*A-4.D0)CORA-164
     1*E*S)-2.D0*P*(2.D0*A-3.D0)*(2.D0*A+1.D0)*F+(2.D0*A+1.D0)*((((2.D0*CORA-165
     2A-1.D0)*A-8.D0)*A+5.D0)*F-S*((A+1.D0)*((6.D0*A-9.D0)*A+1.D0)*E-S*(CORA-166
     3(6.D0*A-7.D0)*(A**2-1.D0)*F-S*((((2.D0*A-5.D0)*A+2.D0)*A-1.D0)*E))CORA-167
     4)))*B2                                                            CORA-168
      A3=A3+X*(2.D0*P*((2.D0*A-3.D0)*(A-1.D0)*E*S+F*((2.D0*A-3.D0)*A-4.DCORA-169
     10))-2.D0*Q*E*S*(2.D0*A+3.D0)*(2.D0*A-1.D0)-(2.D0*A-1.D0)*((((2.D0*CORA-170
     2A+5.D0)*A+2.D0)*A+1.D0)*F-S*((6.D0*A+7.D0)*(A**2-1.D0)*E-S*((A-1.DCORA-171
     30)*((6.D0*A+9.D0)*A+1.D0)*F-S*((((2.D0*A+1.D0)*A-8.D0)*A-5.D0)*E))CORA-172
     4)))*B2                                                            CORA-173
      IF (LQ.EQ.3) GO TO 47                                             CORA-174
      A4=A4+X*2.D0*(2.D0*E*S-A*X)*B2                                    CORA-175
      GO TO 46                                                          CORA-176
C MULTIPOLE LQ=3 L1=L2-1.                                               CORA-177
   16 B1=Q/(A-1.D0)                                                     CORA-178
      B3=-X                                                             CORA-179
      B4=1.D0/(A+1.D0)                                                  CORA-180
      BD=-3.D0*DEN*A*DSQRT(Q)                                           CORA-181
      IF (LT) GO TO 17                                                  CORA-182
      C(1)=B1                                                           CORA-183
      C(2)=B3-2.D0*A/W                                                  CORA-184
      C(4)=B4                                                           CORA-185
   17 A1=-2.D0*A**2*Y*B1*Z                                              CORA-186
      A2=Y*((2.D0*A+1.D0)*((2.D0*(A**2-A)**2*(1.D0+S**2)+Y**2*(A**2-A-.5CORA-187
     1D0))*B1-Y*Q*B3)+(4.D0*A-2.D0)*(A+1.D0)**2*P*Q*B4)*Z               CORA-188
      A3=-Y*((2.D0*A-1.D0)*((2.D0*(A**2+A)**2*(1.D0+S**2)+Y**2*(A**2+A-.CORA-189
     15D0))*B4-Y*B3)+(4.D0*A+2.D0)*(A-1.D0)**2*B1)*Z                    CORA-190
      A4=2.D0*A**2*Y*B4*Z                                               CORA-191
      IF (X.EQ.0.D0) GO TO 48                                           CORA-192
      A1=A1-X*4.D0*P*Q*(A+1.D0)*B4                                      CORA-193
      A2=A2+X*2.D0*P*Q*(A+1.D0)*((2.D0*A+3.D0)*(Q+P)+(2.D0*A-1.D0)*(4.D0CORA-194
     1*E*F*S+(1.D0+S**2)*((2.D0*A-4.D0)*A-3.D0)))*B4                    CORA-195
      A3=A3+X*(-4.D0*P*Q*((2.D0*A+1.D0)*A+2.D0)-(2.D0*A-1.D0)*(2.D0*S*E*CORA-196
     1F*(2.D0*A+3.D0)*(Q+P+S**2+1.D0)-A**2*(((A+3.D0)*A+2.5D0)*(1.D0+S**CORA-197
     24)-S**2*((2.D0*A-2.D0)*A-7.D0))+A*(A-1.D0)*(2.D0*A+3.D0)*(1.D0+S**CORA-198
     32)*(P+Q)-(S**2-1.D0)*((2.D0*A+4.D0)*A+.5D0)*(Q-P)))*B4            CORA-199
      A4=A4+X*2.D0*((A-1.D0)*(P+Q)+Y**2)*B4                             CORA-200
      GO TO 46                                                          CORA-201
C MULTIPOLE LQ=3 L1=L2-2.                                               CORA-202
   18 B1=-Q*(2.D0*A-1.D0)*((2.D0*A-3.D0)*(A+1.D0)*X+(A-3.D0)*Y)/(A-1.D0)CORA-203
      B2=6.D0*Q*(A-1.D0)                                                CORA-204
      B3=((A-1.D0)*(6.D0*A-3.D0)*Q+(2.D0*A-1.D0)*((A+1.D0)*X+2.D0*Y)*(2.CORA-205
     1D0*A-3.D0)*X-(A-1.D0)*(6.D0*A-9.D0)*P)                            CORA-206
      B4=-((2.D0*A-1.D0)*X+Y)*(2.D0*A-3.D0)                             CORA-207
      BD=12.D0*A**2*(2.D0*A-3.D0)*DEN*S*DSQRT(Q*((A-1.D0)**2+E**2))     CORA-208
      IF (LT) GO TO 45                                                  CORA-209
      C(1)=B1-6.D0*Q*A*(A-1.D0)*(2.D0*A-1.D0)/W                         CORA-210
      C(2)=B3+A*(4.D0*A-6.D0)*(2.D0*A-1.D0)*((A+1.D0)*X+2.D0*Y+3.D0*A*(ACORA-211
     1-1.D0)/W)/W                                                       CORA-212
      C(3)=B2                                                           CORA-213
      C(4)=B4-6.D0*A*(A-1.D0)*(2.D0*A-3.D0)/W                           CORA-214
      GO TO 45                                                          CORA-215
C MULTIPOLE LQ=3 L1=L2-3.                                               CORA-216
   19 B1=-Q*(3.D0*E*S*Y+A*(3.D0*X*Y+2.D0*(A+1.D0)*(X**2+2.D0*A-1.D0-2.D0CORA-217
     1*(A-1.D0)*S**2)))                                                 CORA-218
      B2=3.D0*Q*(A*X+Y)                                                 CORA-219
      B4=-(3.D0*F*Y+A*(3.D0*X*Y+2.D0*(A-1.D0)*(X**2+2.D0*A+2.D0-(2.D0*A+CORA-220
     11.D0)*S**2)))                                                     CORA-221
      B3=-X*B4*(A+1.D0)+3.D0*Q*(Y+A*X)+A*(3.D0*A+1.5D0)*(1.D0-S**2)*((3.CORA-222
     1D0*A-2.D0)*Y+((A-2.D0)*A+2.D0)*X)                                 CORA-223
      BD=30.D0*A**2*DEN*S*DSQRT(Q*((A-1.D0)**2+E**2)*((A+1.D0)**2+F**2))CORA-224
      IF (LT) GO TO 45                                                  CORA-225
      C(1)=B1-3.D0*Q*(2.D0*A-1.D0)*((6.D0*A+4.D0)*F+(A+1.D0)*(A+4.D0)*X+CORA-226
     14.D0*A*(A**2-1.D0)/W)/W                                           CORA-227
      C(2)=B3+((4.D0*A**2*(A**2-1.D0)*(2.D0*A-1.D0-S**2*(2.D0*A+1.D0))+(CORA-228
     118.D0*A**2-3.D0)*Y**2+A*(12.D0*A**2+3.D0)*X*Y+(A**2-1.D0)*(4.D0*A*CORA-229
     2*2-3.D0)*X**2)+3.D0*A*(4.D0*A**2-1.D0)*(5.D0*A*Y+(A**2+4.D0)*X+4.DCORA-230
     30*A*(A**2-1.D0)/W)/W)/W                                           CORA-231
      C(3)=B2+12.D0*Q*(A**2-1.D0)/W                                     CORA-232
      C(4)=B4-3.D0*(2.D0*A+1.D0)*((6.D0*A-4.D0)*F+A*(A+1.D0)*X+4.D0*A*(ACORA-233
     1**2-1.D0)/W)/W                                                    CORA-234
      GO TO 45                                                          CORA-235
   20 GO TO ( 21 , 22 , 23 , 24 , 26 ) , LL                             CORA-236
C MULTIPOLE LQ=4 L1=L2.                                                 CORA-237
   21 B1=-P*Q*(2.D0*A+3.D0)/(A-1.D0)                                    CORA-238
      B2=-Q*(3.D0*E*S+A*X)                                              CORA-239
      B3=-P*(3.D0*F-A*X)                                                CORA-240
      B4=-((P+Q)*(A+1.5D0)-1.5D0*Y**2)/(A+1.D0)                         CORA-241
      BD=3.D0*DEN*A**2*(2.D0*A+3.D0)*(A+2.D0)*DSQRT(S*P*Q)              CORA-242
      IF (LT) GO TO 45                                                  CORA-243
      C(1)=B1                                                           CORA-244
      C(2)=(B3+P*A*(2.D0*A+3.D0)/W)                                     CORA-245
      C(3)=(B2+Q*A*(2.D0*A+3.D0)/W)                                     CORA-246
      C(4)=(B4-3.D0*A*(Y-A*(2.D0*A+3.D0)/W)/W)                          CORA-247
      GO TO 45                                                          CORA-248
C MULTIPOLE LQ=4 L1=L2-1.                                               CORA-249
   22 B1=Q*(3.D0*E*S-A*X)*(4.D0*A+6.D0)/(A-1.D0)                        CORA-250
      B2=18.D0*Q                                                        CORA-251
      B3=((2.D0*A+3.D0)*(3.D0*Q+(2.D0*A-3.D0)*X**2)-(6.D0*A-9.D0)*P)    CORA-252
      B4=(3.D0*F-A*X)*(4.D0*A-6.D0)/(A+1.D0)                            CORA-253
      BD=12.D0*DEN*A**2*DSQRT(S*Q)*(4.D0*A**2-9.D0)                     CORA-254
      IF (LT) GO TO 45                                                  CORA-255
      C(1)=B1-6.D0*Q*A*(2.D0*A+3.D0)/W                                  CORA-256
      C(2)=B3+2.D0*A*(4.D0*A**2-9.D0)*(X+3.D0*A/W)/W                    CORA-257
      C(3)=B2                                                           CORA-258
      C(4)=B4-6.D0*A*(2.D0*A-3.D0)/W                                    CORA-259
      GO TO 45                                                          CORA-260
C MULTIPOLE LQ=4 L1=L2-2.                                               CORA-261
   23 B1=((2.D0*A-E**2)*S**2+(A+2.D0)*(2.D0*E*F*S-A*(2.D0*A+2.D0+F**2)/(CORA-262
     1A-1.D0))/(A+1.D0))                                                CORA-263
      B2=6.D0*Q*((A+1.D0)*X-3.D0*F)                                     CORA-264
      B3=(-X*(4.D0*A+6.D0)*B1*(A**2-1.D0)+3.D0*(P*((2.D0*A+5.D0)*X-3.D0*CORA-265
     1Y)+(1.D0-S**2)*A*(A+2.D0)*(2.D0*A+3.D0)*(A*X+E*S)))               CORA-266
      B4=((4.D0*A+6.D0)*(B1*(A-1.D0)+3.D0*A*(S**2-1.D0))+3.D0*Y*(3.D0*Y-CORA-267
     1(2.D0*A+5.D0)*X)/(A+1.D0))                                        CORA-268
      B1=Q*(A+1.D0)*(4.D0*A+6.D0)*B1                                    CORA-269
      BD=60.D0*DEN*A**2*(A+2.D0)*(2.D0*A+3.D0)*DSQRT(S*Q*((A+1.D0)**2+F*CORA-270
     1*2))                                                              CORA-271
      IF (LT) GO TO 45                                                  CORA-272
      C(1)=B1-6.D0*Q*(A+2.D0)*(2.D0*A+3.D0)*(E*S+A*(X+4.D0*(A+1.D0)/W))/CORA-273
     1W                                                                 CORA-274
      C(2)=B3+2.D0*(2.D0*A+3.D0)*(6.D0*E*F*S+A*(F*((2.D0*A+13.D0)*X+6.D0CORA-275
     1*F)+(A+1.D0)*(2.D0*A*(2.D0*A+4.D0-(2.D0*A+1.D0)*S**2)+(2.D0*A+1.D0CORA-276
     2)*X**2))+3.D0*A*(A+2.D0)*(2.D0*A+1.D0)*((A+1.D0)*X+5.D0*F+A*(4.D0*CORA-277
     2A+4.D0)/W)/W)/W                                                   CORA-278
      C(3)=B2+12.D0*Q*(A+1.D0)*(2.D0*A+3.D0)/W                          CORA-279
      C(4)=B4-(12.D0*A+6.D0)*((A+6.D0)*F+A*(A+1.D0)*(X+(4.D0*A+6.D0)/W))CORA-280
     1/W                                                                CORA-281
      GO TO 45                                                          CORA-282
C MULTIPOLE LQ=4 L1=L2-3.                                               CORA-283
   24 B1=F*Q*(12.D0*(Q-(2.D0*A-1.D0)*(2.D0*A-5.D0))/((2.D0*A-3.D0)*(A-1.CORA-284
     1D0))+(26.D0*A-10.D0)*U)                                           CORA-285
      B2=Q*(36.D0*(Q+4.D0*A**2-5.D0)/(2.D0*A-3.D0)-30.D0*(A**2-1.D0)*U)/CORA-286
     1(2.D0*A+3.D0)                                                     CORA-287
      B3=B2+U*(A**2*(6.D0*A+3.D0)*((4.D0*A+10.D0)+5.D0*(A**2-1.D0)*U)-18CORA-288
     1.D0*Q*A*(3.D0*A+4.D0))/(2.D0*A+3.D0)                              CORA-289
      B4=F*(12.D0*(Q-(2.D0*A+5.D0)*(2.D0*A+1.D0))+U*(4.D0*A+2.D0)*((13.DCORA-290
     10*A+22.D0)*A-15.D0))/((A+1.D0)*(2.D0*A+3.D0))                     CORA-291
      IF (X.EQ.0.D0) GO TO 25                                           CORA-292
      B1=B1-2.D0*Q*X*((6.D0*Q*(A-2.D0)+(((28.D0*A-30.D0)*A-46.D0)*A+30.DCORA-293
     10))/((2.D0*A-3.D0)*(A-1.D0))-(A+1.D0)*((9.D0*A-5.D0)*U-2.D0*X**2))CORA-294
      B2=B2-12.D0*Q*X*(F-X*(A+1.D0))/(2.D0*A+3.D0)                      CORA-295
      B3=B3+X*(24.D0*Q*(A*X-F)+(2.D0*A+1.D0)*(12.D0*(2.D0*A+5.D0)*F-((44CORA-296
     1.D0*A+80.D0)*A-30.D0)*F*U+X*A*(28.D0*A+52.D0-U*(24.D0*A+2.D0)*(A+1CORA-297
     2.D0))+12.D0*F*X**2+4.D0*A*X**3*(A+1.D0)))/(2.D0*A+3.D0)           CORA-298
      B4=B4-X*(12.D0*(A-1.D0)*Q+(4.D0*A+2.D0)*(6.D0*F*X+A*(14.D0*A+26.D0CORA-299
     1-(A+1.D0)*((9.D0*A+1.D0)*U-2.D0*X**2))))/((2.D0*A+3.D0)*(A+1.D0)) CORA-300
   25 BD=360.D0*DEN*A**2*S*DSQRT(S*Q*((A+1.D0)**2+F**2)*((A-1.D0)**2+E**CORA-301
     12))                                                               CORA-302
      IF (LT) GO TO 45                                                  CORA-303
      C(1)=B1+Q*(12.D0*(A*(2.D0*A-1.D0)*(2.D0*A-5.D0)-Q*(9.D0*A-12.D0))/CORA-304
     1(2.D0*A-3.D0)+30.D0*A*U*(A**2-1.D0)-24.D0*(2.D0*A-1.D0)*(F*(7.D0*ACORA-305
     2+5.D0)+5.D0*A*(A**2-1.D0)/W)/W)/W                                 CORA-306
      C(2)=B3+(F*(48.D0*Q-8.D0*A*U*(2.D0*A+1.D0)*(7.D0*A-5.D0))+6.D0*(10CORA-307
     1.D0*Q*(11.D0*A**2-2.D0)-A**2*(2.D0*A+1.D0)*(30.D0*(2.D0*A-1.D0)+5.CORA-308
     2D0*U*(A**2-1.D0)-(8.D0*A-4.D0)*(12.D0*F+5.D0*(A**2-1.D0)/W)/W))/W)CORA-309
     3/W                                                                CORA-310
      C(3)=B2+24.D0*Q*(2.D0*F+5.D0*(A**2-1.D0)/W)/W                     CORA-311
      C(4)=B4+((12.D0*A*(2.D0*A+1.D0)*(2.D0*A+5.D0)-36.D0*Q*(3.D0*A+4.D0CORA-312
     1)+30.D0*A*U*(2.D0*A+1.D0)*(A**2-1.D0))/(2.D0*A+3.D0)-24.D0*(2.D0*ACORA-313
     2+1.D0)*(F*(7.D0*A-5.D0)+5.D0*A*(A**2-1.D0)/W)/W)/W                CORA-314
      IF (X.EQ.0.D0) GO TO 45                                           CORA-315
      C(1)=C(1)-12.D0*X*Q*((A+2.D0)*(3.D0*F+(A+1.D0)*X)+(4.D0*A-2.D0)*(ACORA-316
     1+1.D0)*(A+5.D0)/W)/W                                              CORA-317
      C(2)=C(2)+X*((12.D0*Q*(5.D0*A+6.D0)+(2.D0*A+1.D0)*(12.D0*F*X*(A+2.CORA-318
     1D0)-2.D0*A*(4.D0*A+10.D0+(A+1.D0)*(U*(9.D0*A-5.D0)-2.D0*X**2))))+1CORA-319
     22.D0*(2.D0*A+1.D0)*(F*((7.D0*A+24.D0)*A-10.D0)+A*(A+1.D0)*((A+2.D0CORA-320
     3)*X+(4.D0*A-2.D0)*(A+5.D0)/W))/W)/W                               CORA-321
      C(3)=C(3)+24.D0*X*Q*(A+1.D0)/W                                    CORA-322
      C(4)=C(4)-12.D0*X*(2.D0*A+1.D0)*((3.D0*F*(A+2.D0)+A*X*(A+1.D0))/(2CORA-323
     1.D0*A+3.D0)+2.D0*A*(A+1.D0)/W)/W                                  CORA-324
      GO TO 45                                                          CORA-325
C MULTIPOLE LQ=4 L1=L2-4.                                               CORA-326
   26 B1=6.D0*Q*(Q*((42.D0*A+3.D0)*U-36.D0)+A*(24.D0*A-12.D0-U*((34.D0*ACORA-327
     1+3.D0)*A+8.D0)-(8.D0*A+12.D0)*(A**2-1.D0)*U**2))                  CORA-328
      B2=18.D0*Q*(12.D0-U*(9.D0*A+1.D0))*F                              CORA-329
      B3=9.D0*F*(Q*(24.D0-U*(38.D0*A+2.D0))+U*A*(2.D0*A+1.D0)*(A+1.D0)*(CORA-330
     14.D0+(17.D0*A-12.D0)*U))                                          CORA-331
      B4=6.D0*(Q*((42.D0*A+3.D0)*U-36.D0)+A*(2.D0*A+1.D0)*(12.D0-(17.D0*CORA-332
     1A-2.D0)*U-U**2*(4.D0*A+6.D0)*(A-1.D0)))                           CORA-333
      IF (X.EQ.0.D0) GO TO 27                                           CORA-334
      B1=B1-Q*X*(X*(24.D0*Q+(56.D0*A+188.D0)*A+108.D0)+108.D0*(2.D0*A+3.CORA-335
     1D0)*F-2.D0*(2.D0*A+3.D0)*(58.D0*A+7.D0)*F*U-2.D0*(A+1.D0)*(2.D0*A+CORA-336
     23.D0)*(15.D0*A+4.D0)*U*X+12.D0*(2.D0*A+3.D0)*F*X**2+4.D0*(A+1.D0)*CORA-337
     3(2.D0*A+3.D0)*X**3)                                               CORA-338
      B2=B2+Q*X*(24.D0*F*X+(A+1.D0)*(108.D0-(66.D0*A+24.D0)*U+12.D0*X**2CORA-339
     1))                                                                CORA-340
      B3=B3+X*(24.D0*F*Q*X+(A+1.D0)*(Q*(324.D0+36.D0*X**2-(498.D0*A+42.DCORA-341
     10)*U)+(2.D0*A+1.D0)*(F*X*(108.D0-(152.D0*A+24.D0)*U+12.D0*X**2)-A*CORA-342
     2(72.D0-(168.D0*A-12.D0)*U-((57.D0*A+24.D0)*A-36.D0)*U**2-X**2*(28.CORA-343
     3D0-(36.D0*A+20.D0)*U+4.D0*X**2)))))                               CORA-344
      B4=B4+X*(X*(A*(2.D0*A+1.D0)*(30.D0*A+20.D0)*U-24.D0*Q)-(8.D0*A+4.DCORA-345
     10)*(F*(27.D0-(29.D0*A+6.D0)*U)+X*(7.D0*A+3.D0*F*X+A*X**2)))       CORA-346
   27 BD=2520.D0*DEN*A**2*S*DSQRT(S*Q*((A+1.D0)**2+F**2)*((A-1.D0)**2+E*CORA-347
     1*2)*((A+2.D0)**2+F**2))                                           CORA-348
      IF (LT) GO TO 45                                                  CORA-349
      C(1)=B1+18.D0*Q*(F*((A-1.D0)*(8.D0*A-4.D0)-20.D0*Q+(2.D0*A+3.D0)*(CORA-350
     1(17.D0*A-3.D0)*A-4.D0)*U)-4.D0*(15.D0*Q*((4.D0*A+4.D0)*A-1.D0)-A*(CORA-351
     22.D0*A-1.D0)*((34.D0*A+55.D0)*A+16.D0)-(2.D0*A+3.D0)*(2.D0*A*U*(A+CORA-352
     31.D0)*(A-1.D0)*(A+2.D0)-5.D0*(2.D0*A-1.D0)*(F*((5.D0*A+5.D0)*A+4.DCORA-353
     40)+2.D0*A*(A**2-1.D0)*(A+2.D0)/W)/W))/W)/W                        CORA-354
      C(2)=B3+(360.D0*Q**2-72.D0*Q*(4.D0*A**2+1.D0)-24.D0*(A+1.D0)*U*(Q*CORA-355
     1((66.D0*A-12.D0)*A-9.D0)-A**2*(2.D0*A+1.D0)*(34.D0*A-19.D0+U*(A-1.CORA-356
     2D0)*(2.D0*A+3.D0)))+18.D0*(20.D0*Q*F*((20.D0*A+14.D0)*A-3.D0)-(A+1CORA-357
     3.D0)*(A*F*((4.D0*A**2-1.D0)*140.D0+U*(10.D0*A+15.D0)*(2.D0*A+1.D0)CORA-358
     4*(5.D0*A-4.D0))-4.D0*(10.D0*Q*(((30.D0*A+19.D0)*A-1.D0)*A-6.D0)-A*CORA-359
     5*2*(2.D0*A+1.D0)*((2.D0*A-1.D0)*(84.D0*A+56.D0)+(2.D0*A+3.D0)*((2.CORA-360
     6D0*A-2.D0)*(A+2.D0)*U-(10.D0*A-5.D0)*(7.D0*F+2.D0*(A-1.D0)*(A+2.D0CORA-361
     7)/W)/W)))/W))/W)/W                                                CORA-362
      C(3)=B2+72.D0*Q*(5.D0*Q-4.D0*A**2-1.D0-(2.D0*A+3.D0)*((A**2-1.D0)*CORA-363
     1U-5.D0*(F*(3.D0*A-1.D0)+2.D0*(A**2-1.D0)*(A+2.D0)/W)/W))/W        CORA-364
      C(4)=B4-18.D0*(20.D0*Q*F-(A+1.D0)*((2.D0*A+1.D0)*F*(4.D0+U*(17.D0*CORA-365
     1A-12.D0))-4.D0*(15.D0*Q*(4.D0*A-1.D0)-(2.D0*A+1.D0)*(A*(34.D0*A-19CORA-366
     2.D0)+(2.D0*A+3.D0)*(A*(A-1.D0)*U-5.D0*(F*(5.D0*A-4.D0)+2.D0*A*(A-1CORA-367
     3.D0)*(A+2.D0)/W)/W)))/W))/W                                       CORA-368
      IF (X.EQ.0.D0) GO TO 45                                           CORA-369
      C(1)=C(1)-6.D0*Q*X*((A+2.D0)*(60.D0*Q-(44.D0*A-10.D0)*A-6.D0-(2.D0CORA-370
     1*A+3.D0)*((A+1.D0)*((11.D0*A-6.D0)*U-2.D0*X**2)-12.D0*F*X))+(8.D0*CORA-371
     2A+12.D0)*(((20.D0*A+90.D0)*A-5.D0)*F+(A+1.D0)*(A+2.D0)*((2.D0*A+5.CORA-372
     3D0)*X+(10.D0*A-5.D0)*(A+6.D0)/W))/W)/W                            CORA-373
      C(2)=C(2)+X*((2.D0*A+3.D0)*(240.D0*F*Q+(A+1.D0)*(144.D0*Q*X-(2.D0*CORA-374
     1A+1.D0)*((24.D0-24.D0*X**2+(182.D0*A-72.D0)*U)*F+A*X*(44.D0+(30.D0CORA-375
     2*A+8.D0)*U-4.D0*X**2))))+(A+1.D0)*(Q*((2400.D0*A+8400.D0)*A-360.D0CORA-376
     3)-(24.D0*A+12.D0)*(A*((102.D0*A+357.D0)*A-114.D0)-(2.D0*A+3.D0)*((CORA-377
     4A+2.D0)*(10.D0*F*X+A*(X**2-(5.5D0*A-3.D0)*U))+(F*((60.D0*A+270.D0)CORA-378
     5*A-120.D0)+A*(A+2.D0)*(X*(4.D0*A+10.D0)+(20.D0*A-10.D0)*(A+6.D0)/WCORA-379
     6))/W)))/W)/W                                                      CORA-380
      C(3)=C(3)+24.D0*X*Q*(2.D0*A+3.D0)*(5.D0*F+(A+1.D0)*(X+5.D0*(A+2.D0CORA-381
     1)/W))/W                                                           CORA-382
      C(4)=C(4)-6.D0*X*(A+1.D0)*(60.D0*Q-(2.D0*A+1.D0)*(22.D0*A+(11.D0*ACORA-383
     1+4.D0)*A*U-12.D0*F*X-2.D0*A*X**2-(8.D0*A+12.D0)*(10.D0*F+A*(X+5.D0CORA-384
     2*(A+2.D0)/W))/W))/W                                               CORA-385
      GO TO 45                                                          CORA-386
   28 GO TO ( 29 , 31 , 33 , 35 , 37 , 39 ) , LL                        CORA-387
C MULTIPOLE LQ=5 L1=L2.                                                 CORA-388
   29 BD=12.D0*DEN*A**2*(A+2.D0)*(2.D0*A+5.D0)*(4.D0*A**2-9.D0)*S*DSQRT(CORA-389
     1P*Q)                                                              CORA-390
      B1=28.D0*P*Q*F*(2.D0*A+3.D0)/(A-1.D0)                             CORA-391
      B2=Q*(84.D0*Q-A*(48.D0*A-72.D0-U*(A+2.D0)*(6.D0*A+27.D0)))        CORA-392
      B3=P*(84.D0*Q-A*(6.D0*A-9.D0)*(8.D0+(A+2.D0)*U))                  CORA-393
      B4=(4.D0*A-6.D0)*(14.D0*Q+A*(24.D0+(7.D0*A+12.D0)*U))*F/(A+1.D0)  CORA-394
      IF (X.EQ.0.D0) GO TO 30                                           CORA-395
      B1=B1+(28.D0*A+42.D0)*X*P*Q/(A-1.D0)                              CORA-396
      B2=B2+Q*X*((28.D0*A+126.D0)*F+((4.D0*A+22.D0)*A+42.D0)*X)         CORA-397
      B3=B3-P*X*(2.D0*A-3.D0)*(14.D0*F-2.D0*A*X)                        CORA-398
      B4=B4+X*(4.D0*A-6.D0)*(21.D0*Q-A*(14.D0*A-12.D0+(A**2-3.D0)*U)-X*(CORA-399
     1(2.D0*A-7.D0)*F+A*X))/(A+1.D0)                                    CORA-400
   30 IF (LT) GO TO 45                                                  CORA-401
      C(1)=B1-P*Q*(A+2.D0)*(24.D0*A+36.D0)/W                            CORA-402
      C(2)=B3-P*(4.D0*A**2-9.D0)*(8.D0*F-A*(6.D0*A+12.D0)/W)/W          CORA-403
      C(3)=B2-Q*(4.D0*A**2-9.D0)*(8.D0*F-A*(6.D0*A+12.D0)/W)/W          CORA-404
      C(4)=B4-(12.D0*A-18.D0)*((2.D0*A-4.D0)*Q+A*(A*(8.D0+(A+2.D0)*U)+(8CORA-405
     1.D0*A+12.D0)*(F-(A+2.D0)*A/W)/W))/W                               CORA-406
      IF (X.EQ.0.D0) GO TO 45                                           CORA-407
      C(3)=C(3)-X*Q*(8.D0*A**2-18.D0)*(A+4.D0)/W                        CORA-408
      C(2)=C(2)+X*P*A*(8.D0*A**2-18.D0)/W                               CORA-409
      C(4)=C(4)-X*(12.D0*A-18.D0)*((2.D0*A-4.D0)*F+A*(X+(4.D0*A+6.D0)/W)CORA-410
     1)/W                                                               CORA-411
      GO TO 45                                                          CORA-412
C MULTIPOLE LQ=5 L1=L2-1.                                               CORA-413
   31 BD=-60.D0*A**2*(2.D0*A+5.D0)*(2.D0*A+3.D0)*(A+3.D0)*(A+2.D0)*DEN*SCORA-414
     1*DSQRT(P*Q*((A+1.D0)**2+F**2))                                    CORA-415
      B1=P*Q*(4.D0*A+6.D0)*((28.D0*Q-(12.D0*A-56.D0)*A+40.D0)/(A-1.D0)-(CORA-416
     12.D0*A+5.D0)*(A+1.D0)*U)                                          CORA-417
      B2=Q*F*(168.D0*Q+480.D0*A+240.D0+((48.D0*A+120.D0)*A+30.D0)*U)    CORA-418
      B3=P*F*(168.D0*Q+480.D0*A+240.D0-(12.D0*A+6.D0)*((2.D0*A+2.D0)*A-5CORA-419
     1.D0)*U)                                                           CORA-420
      B4=((2.D0*A-3.D0)*(56.D0*Q-(24.D0*A-208.D0)*A+80.D0-(((4.D0*A-18.DCORA-421
     10)*A-52.D0)*A-10.D0)*U)*Q+A**2*(2.D0*A+1.D0)*(480.D0-((24.D0*A-56.CORA-422
     2D0)*A-180.D0)*U-(2.D0*A+5.D0)*(2.D0*A+3.D0)*(A+1.D0)*U**2))/(A+1.DCORA-423
     30)                                                                CORA-424
      IF (X.EQ.0.D0) GO TO 32                                           CORA-425
      B1=B1-X*P*Q*(4.D0*A+6.D0)*(7.D0*F-X*(A+1.D0))                     CORA-426
      B2=B2+X*Q*((14.D0*A+210.D0)*Q-(56.D0*A-380.D0)*A+240.D0-(6.D0*A+6.CORA-427
     1D0)*(A**2-5.D0)*U-(12.D0*A-36.D0)*F*X-(6.D0*A+6.D0)*X**2)         CORA-428
      B3=B3-X*P*((98.D0*A-42.D0)*Q-(2.D0*A+1.D0)*(A*(24.D0*A-116.D0+(A+1CORA-429
     1.D0)*((7.D0*A+16.D0)*U-2.D0*X**2))+(14.D0*A-6.D0)*F*X))           CORA-430
      B4=B4-X*((2.D0*A-3.D0)*(((2.D0*A+1.D0)*(24.D0*A-80)+(14.D0*A-70.D0CORA-431
     1)*Q)*F-((2.D0*A-22.D0)*A+12.D0)*Q*X)+(4.D0*A+2.D0)*((((11.D0*A+17.CORA-432
     2D0)*A+1.D0)*A+15.D0)*F*U-X*((A-1.D0)*(2.D0*A-3.D0)*F*X+A*((14.D0*ACORA-433
     3-18.D0)*A+58.D0+(A+1.D0)*((A+2.D0)*(A-4.D0)*U+X**2)))))/(A+1.D0)  CORA-434
   32 IF (LT) GO TO 45                                                  CORA-435
      C(1)=B1-12.D0*P*Q*(2.D0*A+3.D0)*(A+2.D0)*(2.D0*F-(2.D0*A+5.D0)*(A+CORA-436
     11.D0)/W)/W                                                        CORA-437
      C(2)=B3-P*(4.D0*A+6.D0)*((16.D0*A-24.D0)*Q+(2.D0*A+1.D0)*(40.D0*A-CORA-438
     1A*(2.D0*A+5.D0)*(A+1.D0)*(U-(6.D0*A+12.D0)/W**2)+(30.D0*A+60.D0)*FCORA-439
     2/W))/W                                                            CORA-440
      C(3)=B2-Q*(4.D0*A+6.D0)*((16.D0*A-24.D0)*Q+(2.D0*A+1.D0)*(40.D0*A+CORA-441
     1(30.D0*A+60.D0)*F/W)+A*(A+1.D0)*(6.D0*A+15.D0)*(U-(10.D0*A+20.D0)/CORA-442
     2W**2))/W                                                          CORA-443
      C(4)=B4-6.D0*(F*(((8.D0*A-28.D0)*A+24.D0)*Q+A*(4.D0*A+2.D0)*(((2.DCORA-444
     10*A+2.D0)*A-5.D0)*U-40.D0))-(2.D0*A+3.D0)*((((4.D0*A+6.D0)*A+62.D0CORA-445
     2)*A+20.D0)*Q+A*(2.D0*A+1.D0)*((2.D0*A+5.D0)*(A+1.D0)*U*A-40.D0*A-(CORA-446
     310.D0*A+20.D0)*(4.D0*F+A*(A+1.D0)*(2.D0*A+5.D0)/W)/W))/W)/W       CORA-447
      IF (X.EQ.0.D0) GO TO 45                                           CORA-448
      C(1)=C(1)+X*P*Q*(12.D0*A+18.D0)*(A+1.D0)*(A+2.D0)/W               CORA-449
      C(2)=C(2)+X*P*(4.D0*A+6.D0)*(((8.D0*A-8.D0)*A-6.D0)*F-A*(A+1.D0)*(CORA-450
     12.D0*A+1.D0)*(X+(3.D0*A+6.D0)/W))/W                               CORA-451
      C(3)=C(3)-X*Q*(24.D0*A+36.D0)*((2.D0*A-3.D0)*F+(A+1.D0)*(X+(5.D0*ACORA-452
     1+10.D0)/W))/W                                                     CORA-453
      C(4)=C(4)+6.D0*X*((A-2.D0)*(A-3.D0)*(2.D0*A-3.D0)*Q+(2.D0*A+1.D0)*CORA-454
     1(((8.D0*A-12.D0)*A+40.D0)*A+((2.D0*A-2.D0)*A+6.D0)*F*X+A*(A+1.D0)*CORA-455
     2((A**2-5.D0)*U+X**2)+(4.D0*A+6.D0)*(((2.D0*A+2.D0)*A+10.D0)*F+A*(ACORA-456
     3+1.D0)*(X+(5.D0*A+10.D0)/W))/W))/W                                CORA-457
      GO TO 45                                                          CORA-458
C MULTIPOLE LQ=5 L1=L2-2.                                               CORA-459
   33 DN=720.D0*A**2*(4.D0*A**2-9.D0)*(2.D0*A+5.D0)*(A+2.D0)            CORA-460
      BD=DEN*DN*S*DSQRT(Q*((A+1.D0)**2+F**2))/2.D0                      CORA-461
      B1=2.D0*(2.D0*A+3.D0)*(24.D0*((2.D0*A+5.D0)*(A+2.D0)+7.D0*Q)/(A-1.CORA-462
     1D0)-(2.D0*A-3.D0)*(11.D0*A-10.D0)*U)*F                            CORA-463
      B2=-6.D0*(24.D0*(2.D0*A**2.D0-15.D0*A-10.D0)-168.D0*Q+5.D0*(A+1.D0CORA-464
     1)*(2.D0*A**2+A-6.D0)*U)                                           CORA-465
      B3=((1008.D0*Q-144.D0*(2.D0*A**2-15.D0*A-10.D0))*Q-(2.D0*A-3.D0)*UCORA-466
     1*(6.D0*(17.D0*A**2-9.D0*A+10.D0)*Q+A**2*(2.D0*A+1.D0)*(24.D0*(A+10CORA-467
     2.D0)-15.D0*(A+1.D0)*(A+2.D0)*U)))                                 CORA-468
      B4=2.D0*(2.D0*A-3.D0)*(168.D0*Q+(2.D0*A+1.D0)*(24.D0*(A+10.D0)-(11CORA-469
     1.D0*A**2-A-30.D0)*U))*F/(A+1.D0)                                  CORA-470
      IF (X.EQ.0.D0) GO TO 34                                           CORA-471
      B1=B1+X*2.D0*(2.D0*A+3.D0)*((20.D0*A**3-198.D0*A**2+316.D0*A+240.DCORA-472
     10-42.D0*(2.D0*A-5.D0)*Q)/(A-1.D0)+(2.D0*A-3.D0)*(12.D0*F*X+(A+1.D0CORA-473
     2)*((9.D0*A+10.D0)*U-2.D0*X**2)))                                  CORA-474
      B2=B2-X*12.D0*(7.D0*(2.D0*A-3.D0)*F-(A+1.D0)*(2.D0*A-3.D0)*X)     CORA-475
      B3=B3-X*(2.D0*A-3.D0)*((420.D0*F-36.D0*(5.D0*A-2.D0)*X)*Q+(2.D0*A+CORA-476
     11.D0)*(48.D0*(A+10.D0)*F-(40.D0*A**2-38.D0*A-60.D0)*F*U+4.D0*(5.D0CORA-477
     2*A-58.D0)*A*X+12.D0*(2.D0*A-1.D0)*F*X**2+A*(A+1.D0)*X*(8.D0*(3.D0*CORA-478
     3A+4.D0)*U-4.D0*X**2)))                                            CORA-479
      B4=B4-X*2.D0*(2.D0*A-3.D0)*(42.D0*(2.D0*A-1.D0)*Q-(2.D0*A+1.D0)*(6CORA-480
     1.D0*(2.D0*A-1.D0)*F*X+A*((10.D0*A-116.D0)+(A+1.D0)*((9.D0*A+16.D0)CORA-481
     2*U-2.D0*X**2))))/(A+1.D0)                                         CORA-482
   34 IF (LT) GO TO 45                                                  CORA-483
      B1=B1*Q                                                           CORA-484
      B2=B2*Q                                                           CORA-485
      C(1)=B1-6.D0*Q*(A+2.D0)*(2.D0*A+3.D0)*(8.D0*A*(2.D0*A+5.D0)+24.D0*CORA-486
     1Q-5.D0*A*(A+1.D0)*(2.D0*A-3.D0)*U+4.D0*(2.D0*A-3.D0)*(2.D0*A+5.D0)CORA-487
     2*(F+5.D0*A*(A+1.D0)/W)/W)/W                                       CORA-488
      C(2)=B3-(4.D0*A**2-9.D0)*(8.D0*(12.D0*Q+A*(A+10.D0)*(2.D0*A+1.D0)*CORA-489
     1U)*F-(6.D0*A+12.D0)*((A+1.D0)*(20.D0*Q-A**2*(10.D0*A+5.D0)*U)+(8.DCORA-490
     20*A+4.D0)*A*(2.D0*A+5.D0)*(6.D0*F+5.D0*A*(A+1.D0)/W)/W)/W)/W      CORA-491
      C(3)=B2-Q*24.D0*(4.D0*A**2-9.D0)*(4.D0*F-5.D0*(A+1.D0)*(A+2.D0)/W)CORA-492
     1/W                                                                CORA-493
      C(4)=B4-6.D0*(2.D0*A-3.D0)*(24.D0*(A-2.D0)*Q+A*(2.D0*A+1.D0)*(8.D0CORA-494
     1*(A+10.D0)-5.D0*(A+1.D0)*(A+2.D0)*U)+4.D0*(2.D0*A+3.D0)*(2.D0*A+1.CORA-495
     2D0)*((A+10.D0)*F+5.D0*A*(A+1.D0)*(A+2.D0)/W)/W)/W                 CORA-496
      IF (X.EQ.0.D0) GO TO 45                                           CORA-497
      C(1)=C(1)+X*Q*(12.D0*A+24.D0)*(4.D0*A**2-9.D0)*(3.D0*F-(A+1.D0)*(XCORA-498
     1+(4.D0*A+10.D0)/W))/W                                             CORA-499
      C(2)=C(2)+X*(8.D0*A**2-18.D0)*(36.D0*(A-1.D0)*Q-(2.D0*A+1.D0)*(6.DCORA-500
     10*(A-2.D0)*F*X-A*(8.D0*(A+10.D0)-(A+1.D0)*((9.D0*A+10.D0)*U-2.D0*XCORA-501
     2**2))-6.D0*(A+2.D0)*((A+10.D0)*F+A*(A+1.D0)*(X+(4.D0*A+10.D0)/W))/CORA-502
     3W))/W                                                             CORA-503
      C(3)=C(3)+X*Q*24.D0*(4.D0*A**2-9.D0)*(A+1.D0)/W                   CORA-504
      C(4)=C(4)+X*12.D0*(2.D0*A+1.D0)*(2.D0*A-3.D0)*(3.D0*(A-2.D0)*F-A*(CORA-505
     1A+1.D0)*(X+(4.D0*A+6.D0)/W))/W                                    CORA-506
      GO TO 45                                                          CORA-507
C MULTIPOLE LQ=5 L1=L2-3.                                               CORA-508
   35 BD=-2520.D0*DEN*A**2*(A+2.D0)*(A+3.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)CORA-509
     1*S*DSQRT(Q*((A+1.D0)**2+F**2)*((A+2.D0)**2+F**2))                 CORA-510
      B1=Q*(4.D0*A+6.D0)*(((24.D0*((A+36.D0)*A+40.D0)+168.D0*Q)*Q+48.D0*CORA-511
     1A*(A+2.D0)*(A+3.D0)*(2.D0*A+5.D0))/(A-1.D0)-(A*(((80.D0*A+620.D0)*CORA-512
     2A+966.D0)*A+540.D0)+((28.D0*A-26.D0)*A+60.D0)*Q-6.D0*A*(A+1.D0)*(ACORA-513
     3+2.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*U)*U)                          CORA-514
      B2=6.D0*F*Q*(48.D0*((2.D0*A+21.D0)*A+20.D0)+168.D0*Q-(((16.D0*A+36CORA-515
     1.D0)*A-22.D0)*A-60.D0)*U)                                         CORA-516
      B3=6.D0*F*((48.D0*((2.D0*A+21.D0)*A+20.D0)+168.D0*Q-(10.D0*A-12.D0CORA-517
     1)*(4.D0*A**2+5.D0)*U)*Q+A*(A+1.D0)*(2.D0*A+1.D0)*(((16.D0*A+168.D0CORA-518
     2)*A+720.D0)-(2.D0*A+3.D0)*(A+2.D0)*(8.D0*A+45.D0)*U)*U)           CORA-519
      B4=((2.D0*A-3.D0)*(48.D0*((A+48.D0)*A+40.D0)+336.D0*Q)*Q/(A+1.D0)-CORA-520
     1(4.D0*A**2-9.D0)*(28.D0*A-40.D0)*Q*U+A*(2.D0*A+1.D0)*(96.D0*((2.D0CORA-521
     2*A+21.D0)*A+90.D0)-(4.D0*A+6.D0)*(((40.D0*A+282.D0)*A+180.D0)-(A+2CORA-522
     3.D0)*(2.D0*A+3.D0)*(6.D0*A+15.D0)*U)*U))                          CORA-523
      IF (X.EQ.0.D0) GO TO 36                                           CORA-524
      B1=B1+X*Q*(4.D0*A+6.D0)*((((28.D0*A+402.D0)*A+704.D0)*A+360.D0)*X-CORA-525
     1((88.D0*A+700.D0)*A+600.D0)*F-126.D0*F*Q+(54.D0*A+24.D0)*Q*X+(2.D0CORA-526
     2*A+3.D0)*(((5.D0*A-53.D0)*A-70.D0)*F*U-(8.D0*A+2.D0)*F*X**2-(A+1.DCORA-527
     30)*(A+2.D0)*((15.D0*A+25.D0)*U-2.D0*X**2)*X))                     CORA-528
      B2=B2-X*6.D0*Q*((((8.D0*A+372.D0)*A+696.D0)*A+360.D0)+(70.D0*A+42.CORA-529
     1D0)*Q-(2.D0*A+3.D0)*((10.D0*A+6.D0)*F*X+(A+1.D0)*(A+2.D0)*((11.D0*CORA-530
     2A+25.D0)*U-2.D0*X**2)))                                           CORA-531
      B3=B3+X*((48.D0*((13.D0*A-7.D0)*A-3.D0)*F*X-(((144.D0*A+6696.D0)*ACORA-532
     1+1104.D0)*A-3600.D0)-84.D0*(13.D0*A-9.D0)*Q)*Q+(A+1.D0)*(((((352.DCORA-533
     20*A+224.D0)*A+1518.D0)*A+1260.D0)*U-12.D0*((20.D0*A-14.D0)*A-3.D0)CORA-534
     3*X**2)*Q+(2.D0*A+1.D0)*((2.D0*A-3.D0)*((88.D0*A+720.D0)+(16.D0*A+2CORA-535
     44.D0)*X**2)*F*X+A*((((280.D0*A+2292.D0)*A+2772.D0)*A+1080.D0)*U-(1CORA-536
     592.D0*A+2016.D0)*A-8640.D0-28.D0*((2.D0*A+31.D0)*A+24.D0)*X**2)-(2CORA-537
     6.D0*A+3.D0)*(((16.D0*A-230.D0)*A-300.D0)*F*U*X+A*(A+2.D0)*(((57.D0CORA-538
     7*A+171.D0)*A+90.D0)*U**2-(36.D0*A+62.D0)*U*X**2+4.D0*X**4)))))    CORA-539
      B4=B4-X*((4.D0*A-6.D0)*(126.D0*A+42.D0)*F*Q/(A+1.D0)-36.D0*(2.D0*ACORA-540
     1-3.D0)*(3.D0*A+1.D0)*Q*X-(4.D0*A+2.D0)*(A*((28.D0*A+434.D0)*A+336.CORA-541
     2D0)*X-(2.D0*A-3.D0)*(44.D0*A+360.D0)*F+(2.D0*A+3.D0)*(((5.D0*A-79.CORA-542
     3D0)*A-150.D0)*F*U-(8.D0*A-12.D0)*F*X**2-A*(A+2.D0)*((15.D0*A+31.D0CORA-543
     4)*U-2.D0*X**2)*X)))                                               CORA-544
   36 IF (LT) GO TO 45                                                  CORA-545
      C(1)=B1-12.D0*Q*(2.D0*A+3.D0)*(A+2.D0)*((12.D0*Q+(2.D0*A+3.D0)*((8CORA-546
     1.D0*A+41.D0)*A+15.D0)*U)*F-(4.D0*A+10.D0)*((A+3.D0)*4.D0*F+((33.D0CORA-547
     2+13.D0*A)*Q-A*(A+3.D0)*(4.D0*A-6.D0)-(2.D0*A+3.D0)*(3.D0*A*(A+1.D0CORA-548
     3)*(A+2.D0)*U-10.D0*(A+3.D0)*((4.D0*A+1.D0)*F+3.D0*A*(A+1.D0)*(A+2.CORA-549
     4D0)/W)/W))/W))/W                                                  CORA-550
      C(3)=B2-12.D0*Q*(2.D0*A+3.D0)*((((32.D0*A+288.D0)*A+456.D0)*A+240.CORA-551
     1D0)+8.D0*(2.D0*A-3.D0)*Q-(A+2.D0)*(2.D0*A+3.D0)*(3.D0*(A+1.D0)*(2.CORA-552
     2D0*A+5.D0)*U-10.D0*((2.D0*A+11.D0)*F+3.D0*(2.D0*A+5.D0)*(A+1.D0)*(CORA-553
     3A+2.D0)/W)/W))/W                                                  CORA-554
      C(2)=B3-(4.D0*A+6.D0)*((((192.D0*A+1728.D0)*A+2736.D0)*A+1440.D0+4CORA-555
     18.D0*(2.D0*A-3.D0)*Q)*Q-(A+1.D0)*((((176.D0*A+964.D0)*A+2166.D0)*ACORA-556
     2+540.D0)*Q-A**2*(2.D0*A+1.D0)*(((16.D0*A+168.D0)*A+720.D0)+6.D0*(ACORA-557
     3+2.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*U))*U-6.D0*(A+2.D0)*((2.D0*A+3.CORA-558
     4D0)*((A+1.D0)*(2.D0*A+1.D0)*(20.D0*A+75.D0)*A*U-(20.D0*A+110.D0)*QCORA-559
     5)*F+(A+1.D0)*(2.D0*A+5.D0)*(6.D0*(28.D0*A**2*(2.D0*A+1.D0)*(A+3.D0CORA-560
     6)-((52.D0*A+161.D0)*A+30.D0)*Q+A**2*(A+2.D0)*(2.D0*A+1.D0)*(2.D0*ACORA-561
     7+3.D0)*U)-10.D0*A*(A+3.D0)*(2.D0*A+1.D0)*(2.D0*A+3.D0)*(14.D0*F+6.CORA-562
     8D0*A*(A+2.D0)/W)/W)/W)/W)/W                                       CORA-563
      C(4)=B4+12.D0*(((2.D0*A+1.D0)*(A+1.D0)*(((16.D0*A+168.D0)*A+720.D0CORA-564
     1)-(A+2.D0)*(2.D0*A+3.D0)*(8.D0*A+45.D0)*U)-12.D0*(2.D0*A-3.D0)*(A-CORA-565
     22.D0)*Q)*F+(2.D0*A+3.D0)*(A+1.D0)*(((52.D0*A+266.D0)*A+660.D0)*Q-ACORA-566
     3*(2.D0*A+1.D0)*((8.D0*A+84.D0)*A+360.D0)-(A+2.D0)*(2.D0*A+1.D0)*(2CORA-567
     4.D0*A+3.D0)*(3.D0*A*(2.D0*A+5.D0)*U-10.D0*((8.D0*A+30.D0)*F+3.D0*ACORA-568
     5*(2.D0*A+5.D0)*(A+2.D0)/W)/W))/W)/W                               CORA-569
      IF (X.EQ.0.D0) GO TO 45                                           CORA-570
      C(1)=C(1)+6.D0*Q*X*(2.D0*A+3.D0)*(A+2.D0)*(((40.D0*A+300.D0)*A+476CORA-571
     1.D0)*A+240.D0+(18.D0*A-6.D0)*Q-(2.D0*A+3.D0)*((2.D0*A-10.D0)*F*X+(CORA-572
     2A+1.D0)*(A+2.D0)*((11.D0*A+15.D0)*U-2.D0*X**2)-(8.D0*A+20.D0)*((3.CORA-573
     3D0*A+13.D0)*F+(A+1.D0)*(A+2.D0)*(X+(5.D0*A+15.D0)/W))/W))/W       CORA-574
      C(2)=C(2)+X*(4.D0*A+6.D0)*(12.D0*(2.D0*A-3.D0)*(4.D0*A-1.D0)*F*Q-(CORA-575
     1A+1.D0)*(((60.D0*A-42.D0)*A+180.D0)*Q*X+(2.D0*A+1.D0)*(((32.D0*A+3CORA-576
     236.D0)*A+1440.D0)*F-(2.D0*A+3.D0)*((28.D0*A+202.D0)*A+180.D0)*F*U+CORA-577
     3A*(((40.D0*A+308.D0)*A+120.D0)-(A+2.D0)*(2.D0*A+3.D0)*((15.D0*A+25CORA-578
     4.D0)*U-2.D0*X**2))*X-(2.D0*A+3.D0)*(2.D0*A-24.D0)*F*X**2)+(3.D0*A+CORA-579
     56.D0)*(((92.D0*A+406.D0)*A+780.D0)*Q-(2.D0*A+1.D0)*(A*((8.D0*A+84.CORA-580
     6D0)*A+360.D0)+(2.D0*A+3.D0)*(A*(A+2.D0)*((11.D0*A+15.D0)*U-2.D0*X*CORA-581
     7*2)-(6.D0*A+40.D0)*F*X-(8.D0*A+20.D0)*((30.D0+8.D0*A)*F+A*(A+2.D0)CORA-582
     8*(X+(5.D0*A+15.D0)/W))/W)))/W))/W                                 CORA-583
      C(3)=C(3)+24.D0*X*Q*(2.D0*A+3.D0)**2*((2.D0*A-3.D0)*F-(A+1.D0)*(A+CORA-584
     12.D0)*(X+5.D0*(A+2.D0)/W))/W                                      CORA-585
      C(4)=C(4)+X*6.D0*(A+1.D0)*(18.D0*(A-2.D0)*(2.D0*A-3.D0)*Q+(2.D0*A+CORA-586
     11.D0)*(A*((40.D0*A+308.D0)*A+120.D0)-(2.D0*A+3.D0)*((2.D0*A-24.D0)CORA-587
     2*F*X+A*(A+2.D0)*((11.D0*A+25.D0)*U-2.D0*X**2)-4.D0*(2.D0*A+3.D0)*(CORA-588
     3(20.D0+3.D0*A)*F+A*(A+2.D0)*(X+5.D0*(A+2.D0)/W))/W)))/W           CORA-589
      GO TO 45                                                          CORA-590
C MULTIPOLE LQ=5 L1=L2-4.                                               CORA-591
   37 BD=10080.D0*DEN*A**2*(2.D0*A+5.D0)*(A+2.D0)*S**2*DSQRT(Q*((A+1.D0)CORA-592
     1**2+F**2)*((A+2.D0)**2+F**2)*((A-1.D0)**2+E**2))                  CORA-593
      B1=Q*(((336.D0*Q+48.D0*((8.D0*A+22.D0)*A+47.D0))*Q-96.D0*(2.D0*A-1CORA-594
     1.D0)*(A+2.D0)*(2.D0*A+5.D0)*(3.D0*A-7.D0))/((A-1.D0)*(2.D0*A-3.D0)CORA-595
     2)+(4.D0*(((162.D0*A+683.D0)*A+538.D0)*A-280.D0)-4.D0*(7.D0*A-38.D0CORA-596
     3)*Q-(2.D0*A+3.D0)*(((163.D0*A+497.D0)*A-16.D0)*A-140.D0)*U)*U)*F  CORA-597
      B2=3.D0*Q*(((96.D0*((((12.D0*A+56.D0)*A+29.D0)*A-70.D0)*A-70.D0)+(CORA-598
     148.D0*((4.D0*A+28.D0)*A+47.D0)+336.D0*Q)*Q)/(2.D0*A-3.D0)-4.D0*(((CORA-599
     2((66.D0*A+307.D0)*A+172.D0)*A-280.D0)*A-280.D0)+(A-2.D0)*(4.D0*A-1CORA-600
     39.D0)*Q)*U)/(2.D0*A+3.D0)+35.D0*(A**2-1.D0)*(A+2.D0)**2*U**2)     CORA-601
      B3=(((1008.D0*Q+144.D0*((4.D0*A+28.D0)*A+47.D0))*Q+288.D0*((((12.DCORA-602
     10*A+56.D0)*A+29.D0)*A-70.D0)*A-70.D0))*Q/(2.D0*A-3.D0)-12.D0*(((((CORA-603
     2178.D0*A+967.D0)*A+1410.D0)*A+428.D0)*A-280.D0)+(A-2.D0)*(10.D0*A-CORA-604
     319.D0)*Q)*Q*U+(3.D0*A+3.D0)*(((((458.D0*A+2185.D0)*A+2899.D0)*A-35CORA-605
     42.D0)*A-420.D0)*Q*U+(4.D0*A+2.D0)*A**2*(8.D0*((6.D0*A+37.D0)*A+70.CORA-606
     5D0)-(((62.D0*A+349.D0)*A+524.D0)*A-140.D0)*U))*U)/(2.D0*A+3.D0)-52CORA-607
     6.5D0*A**2*(A**2-1.D0)*(A+2.D0)**2*(2.D0*A+1.D0)*U**3              CORA-608
      B4=(((336.D0*Q+48.D0*((8.D0*A+34.D0)*A+47.D0)-(4.D0*A-8.D0)*((14.DCORA-609
     10*A-41.D0)*A+57.D0)*U)*Q/(A+1.D0)+(2.D0*A+1.D0)*(4.D0*(((162.D0*A+CORA-610
     2863.D0)*A+1070.D0)*A-840.D0)*U-96.D0*((6.D0*A+37.D0)*A+70.D0)))/(2CORA-611
     3.D0*A+3.D0)-(2.D0*A+1.D0)*(((163.D0*A+631.D0)*A+256.D0)*A-420.D0)*CORA-612
     4U**2)*F                                                           CORA-613
      IF (X.EQ.0.D0) GO TO 38                                           CORA-614
      B1=B1+X*Q*(8.D0*((((((180.D0*A+604.D0)*A-425.D0)*A-1813.D0)*A-394.CORA-615
     1D0)*A+840.D0)+(((34.D0*A+147.D0)*A-193.D0)*A-450.D0)*Q+42.D0*(A-2.CORA-616
     2D0)*Q**2)/((1.D0-A)*(2.D0*A-3.D0))+96.D0*F*Q*X+16.D0*((((26.D0*A+1CORA-617
     326.D0)*A+133.D0)*A-13.D0)*A-70.D0)*U+4.D0*((41.D0*A+115.D0)*A+170.CORA-618
     4D0)*Q*U+4.D0*((2.D0*A-1.D0)*A-54.D0)*F*X-8.D0*(5.D0*A+2.D0)*Q*X**2CORA-619
     5-(((152.D0*A+892.D0)*A+1380.D0)*A+664.D0)*X**2+(2.D0*A+3.D0)*(4.D0CORA-620
     6*((20.D0*A+97.D0)*A+62.D0)*F*U*X+4.D0*(A-2.D0)*F*X**3+(A+1.D0)*(A+CORA-621
     72.D0)*(((44.D0*A+36.D0)*U-4.D0*X**2)*X**2-((87.D0*A+67.D0)*A-70.D0CORA-622
     8)*U**2)))                                                         CORA-623
      B2=B2-12.D0*X*Q*((28.D0*F*Q+2.D0*((18.D0*A+83.D0)*A+56.D0)*F-(((34CORA-624
     1.D0*A+217.D0)*A+341.D0)*A+166.D0)*X-4.D0*(3.D0*A+1.D0)*Q*X)/(2.D0*CORA-625
     2A+3.D0)+(((9.D0*A+58.D0)*A+44.D0)*U+2.D0*A*X**2)*F+(A+1.D0)*(A+2.DCORA-626
     30)*(9.D0*(A+1.D0)*U-X**2)*X)                                      CORA-627
      B3=B3+X*(((96.D0*(5.D0*A-3.D0)*Q+4.D0*(((170.D0*A+1101.D0)*A+901.DCORA-628
     10)*A+162.D0)-24.D0*((10.D0*A-5.D0)*A-2.D0)*F*X)*Q*X-4.D0*((((22.D0CORA-629
     2*A+543.D0)*A+629.D0)*A+510.D0)*U+168.D0*Q)*F*Q+(A+1.D0)*(4.D0*(((2CORA-630
     36.D0*A-5.D0)*A+18.D0)*X**2-(((166.D0*A+627.D0)*A+1415.D0)*A+558.D0CORA-631
     4)*U)*Q*X+(2.D0*A+1.D0)*((96.D0*((6.D0*A+37.D0)*A+70.D0)-4.D0*((2.DCORA-632
     50*A-105.D0)*A-498.D0)*X**2-8.D0*(((138.D0*A+751.D0)*A+1012.D0)*A-4CORA-633
     620.D0)*U)*F+A*(4.D0*((38.D0*A+197.D0)*A+154.D0)*X**2-(((572.D0*A+2CORA-634
     7362.D0)*A+960.D0)*A-40.D0)*U+8.D0*((90.D0*A+491.D0)*A+674.D0))*X))CORA-635
     8)/(2.D0*A+3.D0)-24.D0*(17.D0*A+50.D0)*F*Q+(A+1.D0)*(2.D0*A+1.D0)*(CORA-636
     9(((373.D0*A+1411.D0)*A+544.D0)*A-420.D0)*F*U**2-4.D0*((23.D0*A+125CORA-637
     A.D0)*A+54.D0)*F*U*X**2-4.D0*(A-6.D0)*F*X**4+A*(A+2.D0)*(((141.D0*ACORA-638
     B+199.D0)*A-22.D0)*U**2-(50.D0*A+48.D0)*U*X**2+4.D0*X**4)*X))      CORA-639
      B4=B4+X*(((48.D0*((4.D0*A-4.D0)*A-1.D0)*F*X-8.D0*(((34.D0*A+225.D0CORA-640
     1)*A-61.D0)*A-168.D0)-336.D0*(A-1.D0)*Q)*Q/(A+1.D0)+4.D0*((((82.D0*CORA-641
     2A+315.D0)*A+902.D0)*A+396.D0)*U-A*(20.D0*A-26.D0)*X**2)*Q+4.D0*(2.CORA-642
     3D0*A+1.D0)*(((2.D0*A-105.D0)*A-498.D0)*F*X+A*((((104.D0*A+430.D0)*CORA-643
     4A+171.D0)*A-10.D0)*U-2.D0*((90.D0*A+491.D0)*A+674.D0)-((38.D0*A+19CORA-644
     57.D0)*A+154.D0)*X**2)))/(2.D0*A+3.D0)+(2.D0*A+1.D0)*(4.D0*((20.D0*CORA-645
     6A+107.D0)*A+54.D0)*F*U*X+4.D0*(A-6.D0)*F*X**3+A*(A+2.D0)*(4.D0*(11CORA-646
     7.D0*A+12.D0)*U*X**2-((87.D0*A+145.D0)*A-22.D0)*U**2-4.D0*X**4)))  CORA-647
   38 IF (LT) GO TO 45                                                  CORA-648
      C(1)=B1-3.D0*Q*(A+2.D0)*(((16.D0*((56.D0*A+62.D0)*A-177.D0)+48.D0*CORA-649
     1Q)*Q-32.D0*A*(2.D0*A-1.D0)*(2.D0*A+5.D0)*(3.D0*A-7.D0))/(2.D0*A-3.CORA-650
     2D0)+(4.D0*A*(((62.D0*A+159.D0)*A+29.D0)*A+70.D0)-4.D0*((97.D0*A+22CORA-651
     39.D0)*A-6.D0)*Q+35.D0*A*(A**2-1.D0)*(2.D0*A+3.D0)*(A+2.D0)*U)*U-4.CORA-652
     4D0*(2.D0*A+5.D0)*((4.D0*(2.D0*A-1.D0)*(3.D0*A-7.D0)-92.D0*Q+(2.D0*CORA-653
     5A+3.D0)*((67.D0*A-17.D0)*A-14.D0)*U)*F-5.D0*(4.D0*((59.D0*A+59.D0)CORA-654
     6*A-18.D0)*Q-4.D0*A*(2.D0*A-1.D0)*(3.D0*A+1.D0)*(11.D0*A+14.D0)-(2*CORA-655
     7A+3.D0)*(7.D0*A*(A**2-1.D0)*(A+2.D0)*U-6.D0*(2.D0*A-1.D0)*(((17.D0CORA-656
     8*A+17.D0)*A+14.D0)*F+7.D0*A*(A**2-1.D0)*(A+2.D0)/W)/W))/W)/W)/W   CORA-657
      C(2)=B3+(((96.D0*((12.D0*A+56.D0)*A+59.D0-Q)-8.D0*(((188.D0*A+864.CORA-658
     1D0)*A+889.D0)*A-18.D0)*U)*Q+A*(A+1.D0)*(2.D0*A+1.D0)*(16.D0*((6.D0CORA-659
     2*A+37.D0)*A+70.D0)*U+4.D0*(2.D0*A+3.D0)*((67.D0*A+136.D0)*A-140.D0CORA-660
     3)*U**2))*F+3.D0*(A+2.D0)*(40.D0*((19.D0*A+46.D0)*Q-((12.D0*A+32.D0CORA-661
     4)*A+7.D0)*A-14.D0)*Q-(A+1.D0)*(20.D0*(((132.D0*A+292.D0)*A-97.D0)*CORA-662
     5A-42.D0)*Q-A**2*(2.D0*A+1.D0)*(20.D0*((66.D0*A+127.D0)*A-98.D0)+35CORA-663
     6.D0*(A-1.D0)*(2.D0*A+3.D0)*(A+2.D0)*U))*U+4.D0*(2.D0*A+5.D0)*(36.DCORA-664
     70*((54.D0*A+37.D0)*A-10.D0)*Q*F-(A+1.D0)*(A*(2.D0*A+1.D0)*(672.D0*CORA-665
     8(2.D0*A-1.D0)+6.D0*(2.D0*A+3.D0)*(17.D0*A-14.D0)*U)*F-5.D0*(14.D0*CORA-666
     9(((86.D0*A+55.D0)*A-3.D0)*A-18.D0)*Q-A**2*(2.D0*A+1.D0)*(112.D0*(2CORA-667
     A.D0*A-1.D0)*(3.D0*A+2.D0)+(2.D0*A+3.D0)*(7.D0*(A-1.D0)*(A+2.D0)*U-CORA-668
     B6.D0*(2.D0*A-1.D0)*(24.D0*F+7.D0*(A-1.D0)*(A+2.D0)/W)/W)))/W))/W)/CORA-669
     CW)/W                                                              CORA-670
      C(3)=B2+12.D0*Q*((8.D0*((12.D0*A+56.D0)*A+59.D0)-8.D0*Q-(2.D0*A+3.CORA-671
     1D0)*((32.D0*A+98.D0)*A-4.D0)*U)*F+5.D0*(A+2.D0)*((38.D0*A+92.D0)*QCORA-672
     2-(((24.D0*A+64.D0)*A+14.D0)*A+28.D0)-(2.D0*A+3.D0)*(7.D0*(A**2-1.DCORA-673
     30)*(A+2.D0)*U-6.D0*(2.D0*A+5.D0)*((10.D0*A-4.D0)*F+7.D0*(A**2-1.D0CORA-674
     4)*(A+2.D0)/W)/W))/W)/W                                            CORA-675
      C(4)=B4-3.D0*(((16.D0*(((56.D0*A+330.D0)*A+619.D0)*A+354.D0+(3.D0*CORA-676
     1A-6.D0)*Q)*Q-(A+1.D0)*(4.D0*(((194.D0*A+935.D0)*A+1292.D0)*A-36.D0CORA-677
     2)*Q*U+A*(2.D0*A+1.D0)*(32.D0*((6.D0*A+37.D0)*A+70.D0)-4.D0*(((62.DCORA-678
     30*A+349.D0)*A+524.D0)*A-140.D0)*U-35.D0*(A-1.D0)*(2.D0*A+3.D0)*(A+CORA-679
     42.D0)**2*U**2))))/(2.D0*A+3.D0)+4.D0*(4.D0*((46.D0*A+213.D0)*A+230CORA-680
     5.D0)*Q*F-(A+1.D0)*((2.D0*A+1.D0)*((24.D0*A+148.D0)*A+280.D0+(2.D0*CORA-681
     6A+3.D0)*((67.D0*A+136.D0)*A-140.D0)*U)*F-5.D0*(A+2.D0)*(4.D0*((118CORA-682
     7.D0*A+257.D0)*A-90.D0)*Q-4.D0*A*(2.D0*A+1.D0)*((66.D0*A+127.D0)*A-CORA-683
     898.D0)-(2.D0*A+1.D0)*(2.D0*A+3.D0)*(7.D0*A*(A-1.D0)*(A+2.D0)*U-6.DCORA-684
     90*(2.D0*A+5.D0)*((17.D0*A-14.D0)*F+7.D0*A*(A+2.D0)*(A-1.D0)/W)/W))CORA-685
     A/W))/W)/W                                                         CORA-686
      IF (X.EQ.0.D0) GO TO 45                                           CORA-687
      C(1)=C(1)-Q*X*(3.D0*A+6.D0)*(8.D0*((38.D0*A+167.D0)*A+171.D0-3.D0*CORA-688
     1Q)*F+4.D0*(((26.D0*A+145.D0)*A+231.D0)*A+106.D0)*X+(40.D0*A+64.D0)CORA-689
     2*Q*X+(2.D0*A+3.D0)*((8.D0*A+32.D0)*F*X**2-4.D0*((35.D0*A+101.D0)*ACORA-690
     3+6.D0)*F*U+4.D0*(A+1.D0)*(A+2.D0)*(X**3-(9.D0*A+4.D0)*U*X))-4.D0*(CORA-691
     42.D0*A+5.D0)*((((44.D0*A+94.D0)*A-22.D0)*A+28.D0)-4.D0*(19.D0*A+44CORA-692
     5.D0)*Q-(2.D0*A+3.D0)*(4.D0*(3.D0*A+8.D0)*F*X+(A+1.D0)*(A+2.D0)*(2.CORA-693
     6D0*X**2-(13.D0*A-7.D0)*U)+10.D0*(((11.D0*A+59.D0)*A-6.D0)*F+(A+1.DCORA-694
     70)*(A+2.D0)*((A+3.D0)*X+(3.D0*A+21.D0)*(2.D0*A-1.D0)/W))/W))/W)/W CORA-695
      C(2)=C(2)+X*(8.D0*(((196.D0*A+1104.D0)*A+1901.D0)*A+1026.D0+(15.D0CORA-696
     1*A-18.D0)*Q+12.D0*(5.D0*A+4.D0)*F*X)*Q+(A+1.D0)*(32.D0*((4.D0*A+11CORA-697
     2.D0)*A+18.D0)*Q*X**2-8.D0*(((212.D0*A+966.D0)*A+1267.D0)*A+54.D0)*CORA-698
     3Q*U+(2.D0*A+1.D0)*(8.D0*((38.D0*A+213.D0)*A+318.D0)*F*X+4.D0*A*(((CORA-699
     4(106.D0*A+599.D0)*A+912.D0)*A-140.D0)*U+((26.D0*A+107.D0)*A+46.D0)CORA-700
     5*X**2-8.D0*((6.D0*A+37.D0)*A+70.D0))+(2.D0*A+3.D0)*(8.D0*(A+6.D0)*CORA-701
     6F*X**3-4.D0*((47.D0*A+170.D0)*A+48.D0)*F*U*X+A*(A+2.D0)*(((87.D0*ACORA-702
     7+67.D0)*A-70.D0)*U**2-4.D0*(11.D0*A+9.D0)*U*X**2+4.D0*X**4))))+3.DCORA-703
     80*(A+2.D0)*(32.D0*((24.D0*A+107.D0)*A+110.D0)*F*Q+(A+1.D0)*(96.D0*CORA-704
     9((4.D0*A+17.D0)*A+20.D0)*Q*X-(8.D0*A+4.D0)*(2.D0*((6.D0*A+37.D0)*ACORA-705
     A+70.D0)*F+A*((22.D0*A+125.D0)*A+194.D0)*X+(2.D0*A+3.D0)*(((61.D0*ACORA-706
     B+143.D0)*A-70.D0)*F*U+A*(A+2.D0)*((9.D0*A+4.D0)*U-X**2)*X-(6.D0*A+CORA-707
     C20.D0)*F*X**2))+(8.D0*A+20.D0)*(((532.D0*A+2246.D0)*A-180.D0)*Q-(2CORA-708
     D.D0*A+1.D0)*(4.D0*A*((66.D0*A+295.D0)*A-98.D0)-(2.D0*A+3.D0)*((22.CORA-709
     ED0*A+60.D0)*F*X+A*(A+2.D0)*(2.D0*X**2-(13.D0*A-7.D0)*U)+10.D0*(((1CORA-710
     F7.D0*A+93.D0)*A-42.D0)*F+A*(A+2.D0)*((A+3.D0)*X+3.D0*(A+7.D0)*(2.DCORA-711
     G0*A-1.D0)/W))/W)))/W))/W)/W                                       CORA-712
      C(3)=C(3)+12.D0*Q*X*(2.D0*(((28.D0*A+148.D0)*A+221.D0)*A+106.D0)+(CORA-713
     16.D0*A-4.D0)*Q+(2.D0*A+3.D0)*((2.D0*A+12.D0)*F*X+(A+2.D0)*((A+1.D0CORA-714
     2)*(2.D0*X**2-(13.D0*A+8.D0)*U)+5.D0*((10.D0*A+28.D0)*F+2.D0*(A+1.DCORA-715
     30)*(A+2.D0)*(X+(6.D0*A+15.D0)/W))/W)))/W                          CORA-716
      C(4)=C(4)+3.D0*X*((24.D0*(2.D0*A-1.D0)*(A-2.D0)*F*Q-(4.D0*A+4.D0)*CORA-717
     1(((20.D0*A+46.D0)*A+108.D0)*Q*X+(2.D0*A+1.D0)*(((76.D0*A+426.D0)*ACORA-718
     2+636.D0)*F+A*((26.D0*A+107.D0)*A+46.D0)*X)))/(2.D0*A+3.D0)+(4.D0*ACORA-719
     3+4.D0)*((2.D0*A+1.D0)*((35.D0*A+130.D0)*A+48.D0)*F*U+(2.D0*A+1.D0)CORA-720
     4*(A*(A+2.D0)*(9.D0*(A+1.D0)*U-X**2)*X-(2.D0*A+12.D0)*F*X**2)-(4.D0CORA-721
     5*((38.D0*A+169.D0)*A+210.D0)*Q-(2.D0*A+1.D0)*(A*((44.D0*A+250.D0)*CORA-722
     6A+388.D0)-(2.D0*A+3.D0)*((12.D0*A+40.D0)*F*X-(A+2.D0)*(A*((13.D0*ACORA-723
     7+8.D0)*U-2.D0*X**2)-10.D0*((11.D0*A+30.D0)*F+A*(A+2.D0)*(X+(6.D0*ACORA-724
     8+15.D0)/W))/W))))/W))/W                                           CORA-725
      GO TO 45                                                          CORA-726
C MULTIPOLE LQ=5 L1=L2-5.                                               CORA-727
   39 BD=181440.D0*DEN*S**2*DSQRT(Q*((A+1.D0)**2+F**2)*((A+2.D0)**2+F**2CORA-728
     1)*((A-1.D0)**2+E**2)*((A+3.D0)**2+F**2))*A**2                     CORA-729
      B1=Q*(2304.D0*A*(2.D0*A-1.D0)-6912.D0*Q+864.D0*(9.D0*A+1.D0)*Q*U-2CORA-730
     188.D0*A*((22.D0*A+3.D0)*A+5.D0)*U+8.D0*A*(((530.D0*A+611.D0)*A+12.CORA-731
     2D0)*A+72.D0)*U**2-8.D0*((602.D0*A+683.D0)*A-60.D0)*Q*U**2+96.D0*A*CORA-732
     3(A**2-1.D0)*(2.D0*A+5.D0)*(2.D0*A+3.D0)*U**3)                     CORA-733
      B2=24.D0*Q*F*(288.D0-(204.D0*A+36.D0)*U+((89.D0*A+141.D0)*A-20.D0)CORA-734
     1*U**2)                                                            CORA-735
      B3=12.D0*F*(Q*(576.D0-24.D0*(37.D0*A+3.D0)*U+((718.D0*A+582.D0)*A-CORA-736
     140.D0)*U**2)+A*(A+1.D0)*(2.D0*A+1.D0)*U*(96.D0-(148.D0*A+12.D0)*U-CORA-737
     2((137.D0*A+148.D0)*A-180.D0)*U**2))                               CORA-738
      B4=Q*(864.D0*(9.D0*A+1.D0)*U-6912.D0-8.D0*(602.D0*A**2+613.D0*A-60CORA-739
     1.D0)*U**2)+A*(2.D0*A+1.D0)*(2304.D0-288.D0*(11.D0*A-1.D0)*U+8.D0*(CORA-740
     2(265.D0*A+174.D0)*A-54.D0)*U**2+48.D0*(2.D0*A+3.D0)*(2.D0*A+5.D0)*CORA-741
     3(A-1.D0)*U**3)                                                    CORA-742
      IF (X.EQ.0.D0) GO TO 40                                           CORA-743
      B1=B1+X*Q*((1176.D0*F*U+((2040.D0*A+2616.D0)*U-1200.D0-48.D0*X**2)CORA-744
     1*X)*Q+(((2944.D0*A+4432.D0)*A+912.D0)*X+8.D0*((794.D0*A+1535.D0)*ACORA-745
     2+222.D0)*F)*U-(16.D0*((94.D0*A+385.D0)*A+216.D0)+((368.D0*A+1016.DCORA-746
     30)*A+600.D0)*X**2)*X+(2*A+3.D0)*((((608.D0*A+632.D0)*U-600.D0-24.DCORA-747
     40*X**2)*X**2-3456.D0-((1950.D0*A+2614.D0)*A-140.D0)*U**2)*F+(A+1.DCORA-748
     50)*((120.D0*A+152.D0)*U*X**3-((414.D0*A+798.D0)*A+20.D0)*U**2*X-8.CORA-749
     6D0*X**5)))                                                        CORA-750
      B2=B2+X*Q*(1200.D0*F*X-1176.D0*Q*U-24.D0*((33.D0*A+120.D0)*A+38.D0CORA-751
     1)*U-24.D0*(53.D0*A+60.D0)*F*U*X+48.D0*F*X**3+(A+1.D0)*(3456.D0+((7CORA-752
     238.D0*A+1722.D0)*A+60.D0)*U**2+24.D0*(25.D0-(13.D0*A+19.D0)*U+X**2CORA-753
     3)*X**2))                                                          CORA-754
      B3=B3+X*((1200.D0*F*X-24.D0*((597.D0*A+720.D0)*A+74.D0)*U-1176.D0*CORA-755
     1Q*U-(2808.D0*A+2616.D0)*F*U*X+48.D0*F*X**3)*Q+(A+1.D0)*((10368.D0-CORA-756
     224.D0*(113.D0*A+79.D0)*U*X**2+(72.D0*X**2+1800.D0)*X**2+((11782.D0CORA-757
     3*A+10730.D0)*A-420.D0)*U**2)*Q+(2*A+1.D0)*((((3090.D0*A+3898.D0)*ACORA-758
     4+60.D0)*U**2+3456.D0+600.D0*X**2-304.D0*(14.D0*A+3.D0)*U-(680.D0*ACORA-759
     5+456.D0)*U*X**2+24.D0*X**4)*F*X+A*(((8.D0*X**2+184.D0)*X**2+752.D0CORA-760
     6)*X**2-2304.D0-((3.D0*(((187.D0*A+479.D0)*A-6.D0)*A-240.D0)*U+4.D0CORA-761
     7*((1175.D0*A+624.D0)*A-108.D0))*U-96.D0*(55.D0*A-3.D0))*U+(((570.DCORA-762
     80*A+1278.D0)*A+356.D0)*U-60.D0*A-440.D0-44.D0*(3.D0*A+4.D0)*X**2)*CORA-763
     9U*X**2))))                                                        CORA-764
      B4=B4+X*((1176.D0*F*U-1200.D0*X+120.D0*(17.D0*A+12.D0)*U*X-48.D0*XCORA-765
     1**3)*Q+(2.D0*A+1.D0)*((8.D0*(397.D0*A+114.D0)*U-3456.D0-10.D0*((19CORA-766
     25.D0*A+289.D0)*A+6.D0)*U**2-600.D0*X**2+8.D0*(76.D0*A+57.D0)*U*X**CORA-767
     32-24.D0*X**4)*F+A*X*(440.D0*U-752.D0-((414.D0*A+1050.D0)*A+356.D0)CORA-768
     4*U**2-184.D0*X**2+8.D0*(15.D0*A+22.D0)*U*X**2-8.D0*X**4)))        CORA-769
   40 IF (LT) GO TO 45                                                  CORA-770
      C(1)=B1+24.D0*Q*((60.D0*((9.D0*A+5.D0)*U-8.D0)*Q+96.D0*(A-1.D0)*(2CORA-771
     1.D0*A-1.D0)-4.D0*(((74.D0*A+15.D0)*A+28.D0)*A+3.D0)*U-(2.D0*A+3.D0CORA-772
     2)*(A+2.D0)*((137.D0*A-37.D0)*A-30.D0)*U**2)*F+4.D0*(30.D0*((8.D0*ACORA-773
     3-6.D0)*A+5.D0-7.D0*Q)*Q+(A+2.D0)*(5.D0*((128.D0*A+80.D0)*A-33.D0)*CORA-774
     4Q-A*(((676.D0*A+544.D0)*A-201.D0)*A-144.D0))*U-(6.D0*A-6.D0)*((2.DCORA-775
     50*A-1.D0)*(4.D0*A-6.D0)*A+(A+1.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*A*(CORA-776
     6A+2.D0)*U**2)+5.D0*((12.D0*(2.D0*A-1.D0)*(((50.D0*A+153.D0)*A+136.CORA-777
     7D0)*A+39.D0)-84.D0*((10.D0*A+19.D0)*A+3.D0)*Q)*F+(A+2.D0)*((2.D0*ACORA-778
     8+3.D0)*(2.D0*A+5.D0)*((37.D0*A-17.D0)*A-6.D0)*U*F+6.D0*(A*(2.D0*A-CORA-779
     91.D0)*(((236.D0*A+648.D0)*A+625.D0)*A+66.D0)-3.D0*(((140.D0*A+294.CORA-780
     AD0)*A+196.D0)*A-105.D0)*Q+(2.D0*A+3.D0)*(2.D0*A+5.D0)*(A*(A**2-1.DCORA-781
     B0)*(2.D0*A+6.D0)*U-(14.D0*A-7.D0)*(((7.D0*A+5.D0)*A+6.D0)*F+A*(A**CORA-782
     C2-1.D0)*(2.D0*A+6.D0)/W)/W))/W))/W)/W)/W                          CORA-783
      C(2)=B3+8.D0*((1440.D0*Q-288.D0*(4.D0*A**2+1.D0)+12.D0*(((168.D0*ACORA-784
     1+132.D0)*A+62.D0)*A+3.D0)*U-30.D0*(68.D0*A+30.D0)*Q*U)*Q+(A+1.D0)*CORA-785
     2(8.D0*A+12.D0)*(((338.D0*A-83.D0)*A-45.D0)*Q*U-(2.D0*A+1.D0)*A**2*CORA-786
     3(12.D0+(169.D0*A-99.D0)*U+(A-1.D0)*(6.D0*A+15.D0)*U**2))*U+3.D0*((CORA-787
     4(840.D0*Q-120.D0*(4.D0*A**2+5.D0))*Q-(2.D0*A+3.D0)*(40.D0*((65.D0*CORA-788
     5A+30.D0)*A-11.D0)*Q-5.D0*A*(2.D0*A+1.D0)*(A+1.D0)*(12.D0*(25.D0*A-CORA-789
     613.D0)+(A+2.D0)*(37.D0*A-30.D0)*U))*U)*F+4.D0*((630.D0*((10.D0*A+1CORA-790
     75.D0)*A+2.D0)*Q-90.D0*((((200.D0*A+420.D0)*A+162.D0)*A-63.D0)*A-26CORA-791
     8.D0))*Q+(2.D0*A+3.D0)*((A+1.D0)*(1512.D0*(4.D0*A**2-1.D0)*A**2-(A+CORA-792
     92.D0)*(30.D0*((44.D0*A-18.D0)*A-5.D0)*Q-6.D0*A**2*(2.D0*A+1.D0)*(1CORA-793
     A18.D0*A-83.D0+(A-1.D0)*(2.D0*A+5.D0)*U))*U)+5.D0*(42.D0*(((70.D0*ACORA-794
     B+129.D0)*A+53.D0)*A-30.D0)*Q*F-(A+1.D0)*(A*(2.D0*A+1.D0)*(252.D0*(CORA-795
     C2.D0*A-1.D0)*(4.D0*A+5.D0)+7.D0*(A+2.D0)*(2.D0*A+5.D0)*(7.D0*A-6.DCORA-796
     D0)*U)*F-6.D0*(A+2.D0)*(14.D0*(((56.D0*A+36.D0)*A+4.D0)*A-15.D0)*Q-CORA-797
     EA**2*(2.D0*A+1.D0)*((4.D0*A+3.D0)*54.D0*(2.D0*A-1.D0)+(2.D0*A+5.D0CORA-798
     F)*((A-1.D0)*(2.D0*A+6.D0)*U-7.D0*(2.D0*A-1.D0)*(9.D0*F+(A-1.D0)*(2CORA-799
     G.D0*A+6.D0)/W)/W)))/W))/W))/W)/W)/W                               CORA-800
      C(3)=B2+96.D0*Q*((120.D0-25.D0*(4.D0*A+3.D0)*U)*Q-24.D0*(4.D0*A**2CORA-801
     1+1.D0)+((((88.D0*A+72.D0)*A+12.D0)*A+3.D0)+3.D0*(A**2-1.D0)*(2.D0*CORA-802
     2A+3.D0)*(2.D0*A+5.D0)*U)*U+5.D0*((42.D0*Q-(24.D0*A**2+30.D0))*F-(ACORA-803
     3+2.D0)*((2.D0*A+3.D0)*(25.D0*A-11.D0)*U*F-6.D0*(21.D0*(4.D0*A+1.D0CORA-804
     4)*Q-3.D0*(((32.D0*A+20.D0)*A-4.D0)*A-13.D0)-(2.D0*A+3.D0)*(2.D0*A+CORA-805
     55.D0)*((A**2-1.D0)*U-7.D0*((5.D0*A-3.D0)*F+(A**2-1.D0)*(2.D0*A+6.DCORA-806
     60)/W)/W))/W))/W)/W                                                CORA-807
      C(4)=B4+24.D0*((60.D0*((9.D0*A+5.D0)*U-8.D0)*Q+(A+1.D0)*(2.D0*A+1.CORA-808
     1D0)*(96.D0-4.D0*(37.D0*A+3.D0)*U-((137.D0*A+148.D0)*A-180.D0)*U**2CORA-809
     2))*F+4.D0*((30.D0*((8.D0*A+6.D0)*A+5.D0)-210.D0*Q)*Q+(2.D0*A+3.D0)CORA-810
     3*((A+1.D0)*(10.D0*(32.D0*A-11.D0)*Q*U-(2.D0*A+1.D0)*(A*(12.D0+(169CORA-811
     4.D0*A-99.D0)*U)+3.D0*(A-1.D0)*(2.D0*A+5.D0)*A*U**2))-5.D0*(84.D0*(CORA-812
     55.D0*A+1.D0)*Q*F-(A+1.D0)*((2.D0*A+1.D0)*(12.D0*(25.D0*A-13.D0)+(ACORA-813
     6+2.D0)*(37.D0*A-30.D0)*U)*F-6.D0*(A+2.D0)*(105.D0*(2.D0*A-1.D0)*Q-CORA-814
     7(2.D0*A+1.D0)*((118.D0*A-83.D0)*A+(2.D0*A+5.D0)*(A*(A-1.D0)*U-7.D0CORA-815
     8*((7.D0*A-6.D0)*F+A*(A-1.D0)*(2.D0*A+6.D0)/W)/W)))/W))/W))/W)/W   CORA-816
      IF (X.EQ.0.D0) GO TO 45                                           CORA-817
      C(1)=C(1)-Q*X*(720.D0*(((6.D0*A+23.D0)*A+19.D0)+Q)*F*X+(A+2.D0)*(7CORA-818
     120.D0*Q*X**2-384.D0*((22.D0*A-5.D0)*A+3.D0)+11520.D0*Q+24.D0*(((43CORA-819
     20.D0*A+255.D0)*A+29.D0)*A+6.D0)*U-72.D0*(173.D0*A+107.D0)*Q*U+120.CORA-820
     3D0*((2.D0*A+17.D0)*A+9.D0)*X**2+(2.D0*A+3.D0)*(144.D0*F*X**3-24.D0CORA-821
     4*(95.D0*A+71.D0)*F*U*X+(A+1.D0)*(6.D0*((123.D0*A+137.D0)*A-120.D0)CORA-822
     5*U**2-24.D0*(13.D0*A+14.D0)*U*X**2+24.D0*X**4)))-24.D0*((2.D0*A+5.CORA-823
     6D0)*((20.D0*((10.D0*A-7.D0)*A+9.D0)-420.D0*Q)*F+(A+2.D0)*((10.D0*(CORA-824
     7(14.D0*A-1.D0)*A+3.D0)-180.D0*Q)*X+(2.D0*A+3.D0)*((199.D0*A-31.D0)CORA-825
     8*F*U-20.D0*F*X**2+(A+1.D0)*((21.D0*A+13.D0)*U-2.D0*X**2)*X)))+5.D0CORA-826
     9*(A+2.D0)*(4*((((220.D0*A+1340.D0)*A+973.D0)*A+123.D0)*A-234.D0)-8CORA-827
     A4.D0*((10.D0*A+55.D0)*A+21.D0)*Q+(2.D0*A+3.D0)*(2.D0*A+5.D0)*((A+1CORA-828
     B.D0)*(A+3.D0)*((15.D0*A-8.D0)*U-2.D0*X**2)-30.D0*(A+3.D0)*F*X-6.D0CORA-829
     C*(21.D0*((2.D0*A+13.D0)*A-3.D0)*F+(A+1.D0)*(A+3.D0)*((2.D0*A+7.D0)CORA-830
     D*X+(14.D0*A-7.D0)*(A+8.D0)/W))/W))/W)/W)/W                        CORA-831
      C(2)=C(2)+X*(720.D0*((12.D0*A+32.D0)*A+19.D0+Q)*Q*X+(2.D0*A+3.D0)*CORA-832
     1((7680.D0+480.D0*X**2-48.D0*(222.D0*A+107.D0)*U)*F*Q+(A+1.D0)*((28CORA-833
     28.D0*X**2-48.D0*(127.D0*A+71.D0)*U)*Q*X+(2.D0*A+1.D0)*(((48.D0*X**CORA-834
     32+720.D0)*X**2-768.D0+(32.D0*(62.D0*A+3.D0)+16.D0*((168.D0*A+139.DCORA-835
     40)*A-90.D0)*U-(920.D0*A+672.D0)*X**2)*U)*F+A*X*((8.D0*X**2+40.D0-(CORA-836
     5120.D0*A+152.D0)*U)*X**2+((414.D0*A+798.D0)*A+20.D0)*U**2-1408.D0+CORA-837
     6(2280.D0*A+736.D0)*U))))+6.D0*((A+2.D0)*((4200.D0*Q-200.D0*((20.D0CORA-838
     7*A+8.D0)*A+9.D0))*Q+(2.D0*A+3.D0)*(1200.D0*F*Q*X+(A+1.D0)*((400.D0CORA-839
     8*X**2-(4960.D0*A-620.D0)*U)*Q+(2.D0*A+1.D0)*((40.D0*X**2-200.D0-(5CORA-840
     948.D0*A+260.D0)*U)*F*X+A*((((123.D0*A+137.D0)*A-120.D0)*U+(2452.D0CORA-841
     A*A-792.D0))*U+96.D0+4.D0*X**2*(X**2-35.D0-(13.D0*A+14.D0)*U))))))+CORA-842
     B(8.D0*A+12.D0)*(420.D0*((10.D0*A+45.D0)*A+14.D0)*F*Q-(A+1.D0)*(240CORA-843
     C.D0*(2.D0*A+1.D0)*((10.D0*A+45.D0)*A-13.D0)*F-(A+2.D0)*(450.D0*(2.CORA-844
     DD0*A+5.D0)*Q*X+(2.D0*A+1.D0)*(2.D0*A+5.D0)*(30.D0*F*X**2-(274.D0*ACORA-845
     E-120.D0)*F*U+A*X*(2.D0*X**2-220.D0-(21.D0*A+13.D0)*U))+5.D0*(42.D0CORA-846
     F*((42.D0*A+231.D0)*A-45.D0)*Q-(2.D0*A+1.D0)*(8.D0*A*((118.D0*A+649CORA-847
     G.D0)*A-249.D0)+(A+3.D0)*(2.D0*A+5.D0)*(A*(15.D0*A-8.D0)*U-42.D0*F*CORA-848
     HX-2.D0*A*X**2))+(12.D0*A+6.D0)*(2.D0*A+5.D0)*(28.D0*((2.D0*A+13.D0CORA-849
     I)*A-6.D0)*F+A*(A+3.D0)*((2.D0*A+7.D0)*X+(14.D0*A-7.D0)*(A+8.D0)/W)CORA-850
     J)/W)/W)))/W)/W)/W                                                 CORA-851
      C(3)=C(3)+24.D0*X*Q*((30.D0*Q+10.D0*((4.D0*A+16.D0)*A+9.D0))*X+(2.CORA-852
     1D0*A+3.D0)*((160.D0-(124.D0*A+114.D0)*U+10.D0*X**2)*F+(A+1.D0)*(2.CORA-853
     2D0*X**2-(21.D0*A+28.D0)*U)*X)+(5.D0*A+10.D0)*(126.D0*Q-2.D0*((52.DCORA-854
     30*A+4.D0)*A+15.D0)+(2.D0*A+3.D0)*(18.D0*F*X+(A+1.D0)*(2.D0*X**2-(1CORA-855
     45.D0*A+13.D0)*U))+(12.D0*A+18.D0)*(2.D0*A+5.D0)*(14.D0*F+(A+1.D0)*CORA-856
     5(X+(7.D0*A+21.D0)/W))/W)/W)/W                                     CORA-857
      C(4)=C(4)-X*(720.D0*F*Q*X+(A+1.D0)*((11520.D0+720.D0*X**2-72.D0*(1CORA-858
     173.D0*A+114.D0)*U)*Q-(2.D0*A+1.D0)*((24.D0*(95.D0*A+84.D0)*U-2160.CORA-859
     2D0-144.D0*X**2)*F*X+A*(4224.D0-24.D0*(215.D0*A+92.D0)*U-6.D0*((123CORA-860
     3.D0*A+287.D0)*A+10.D0)*U**2-120.D0*X**2+24.D0*(13.D0*A+19.D0)*U*X*CORA-861
     4*2-24.D0*X**4)))+24.D0*(2.D0*A+3.D0)*(420.D0*F*Q+(A+1.D0)*(180.D0*CORA-862
     5Q*X-7.D0*A*(2.D0*A+1.D0)*(3.D0*A+4.D0)*U*X-(2.D0*A+1.D0)*((100.D0+CORA-863
     6(199.D0*A+130.D0)*U-20.D0*X**2)*F+A*X*(70.D0-2.D0*X**2))+5.D0*(A+2CORA-864
     7.D0)*(420.D0*Q+(2.D0*A+1.D0)*(30.D0*F*X+A*(2.D0*X**2-220.D0-(15.D0CORA-865
     8*A+13.D0)*U)+6.D0*(2.D0*A+5.D0)*(21.D0*F+A*(X+(7.D0*A+21.D0)/W))/WCORA-866
     9))/W))/W)/W                                                       CORA-867
      GO TO 45                                                          CORA-868
   41 IF ((X.NE.0.D0).OR.(MOD(LL,2).NE.1).OR.(LL.EQ.7)) GO TO 72        CORA-869
      GO TO ( 42 , 71 , 43 , 71 , 44 , 71 , 71 ) , LL                   CORA-870
C MULTIPOLE LQ=6 L1=L2.                                                 CORA-871
   42 BD=120.D0*DEN*A**2*(2.D0*A+7.D0)*(2.D0*A+5.D0)*(A+2.D0)*(A+3.D0)*(CORA-872
     1A+4.D0)*DSQRT(S*Q*P*((A+1.D0)**2+F**2)*((A+1.D0)**2+E**2))*S**2   CORA-873
      B1=P*Q*((8.D0*(((154.D0*A-205.D0)*A-376.D0)*A-140.D0+((47.D0*A-282CORA-874
     1.D0)*A-143.D0-63.D0*Q)*Q)+4.D0*((((47.D0*A+26.D0)*A-553.D0)*A-752.CORA-875
     2D0)*A-280.D0-((79.D0*A+282.D0)*A+143.D0)*Q)*U)/(A-1.D0)+2.D0*(2.D0CORA-876
     3*A+7.D0)*(2.D0*A+5.D0)*(A+1.D0)**2*U**2)                          CORA-877
      B2=(240.D0*(2.D0*A+1.D0)**2*(A-14.D0)+24.D0*((20.D0*A-336.D0)*A-14CORA-878
     13.D0)*Q-1512.D0*Q**2-6.D0*((((36.D0*A+836.D0)*A+2797.D0)*A+2374.D0CORA-879
     2)*A+560.D0+(((18.D0*A+275.D0)*A+726.D0)*A+286.D0)*Q+(A+1.D0)*(((26CORA-880
     3.D0*A+146.D0)*A+210.D0)*A+35.D0)*U)*U)/(2.D0*A+3.D0)              CORA-881
      B3=P*F*(B2+A*(2.D0*A+4.D0)*U*(54.D0*Q+6.D0*(38.D0*A+29.D0)+3.D0*(ACORA-882
     1+1.D0)*(9.D0*A+29.D0)*U))                                         CORA-883
      B2=Q*F*B2                                                         CORA-884
      B4=(((((((32.D0*A-216.D0)*A-1692.D0)*A-2272.D0)*A+454.D0)*A+1402.DCORA-885
     10)*A+210.D0)*Q*U**2+(2.D0*A-3.D0)*((16.D0*A+8.D0)*((107.D0*A-444.DCORA-886
     20)*A-140.D0)+8.D0*((((47.D0*A-176.D0)*A-924.D0)*A-724.D0)*A-140.D0CORA-887
     3)*U+(8.D0*((47.D0*A-390.D0)*A-143.D0)-4.D0*((142.D0*A+390.D0)*A+14CORA-888
     43.D0)*U-504.D0*Q)*Q)*Q+A**2*(2.D0*A+1.D0)*(480.D0*(2.D0*A+1.D0)*(ACORA-889
     5-14.D0)+(4.D0*(((214.D0*A-849.D0)*A-3808.D0)*A-2100.D0)+((((204.D0CORA-890
     6*A+752.D0)*A-232.D0)*A-2550.D0)*A-1680.D0)*U)*U))/((A+1.D0)*(2.D0*CORA-891
     7A+3.D0))+A**2*(2.D0*A+5.D0)*(2.D0*A+7.D0)*(2.D0*A+1.D0)*(A+1.D0)*UCORA-892
     8**3                                                               CORA-893
      IF (LT) GO TO 45                                                  CORA-894
      C(1)=B1+12.D0*P*Q*(A+2.D0)*((58.D0+76.D0*A+18.D0*Q+(A+1.D0)*(9.D0*CORA-895
     1A+29.D0)*U)*F-(2.D0*A+5.D0)*((28.D0*A+32.D0)*A+14.D0+(4.D0*A-6.D0)CORA-896
     2*Q+(A+1.D0)*((A+1.D0)*(2.D0*A+7.D0)*U+10.D0*(A+3.D0)*(2.D0*F-(A+1.CORA-897
     3D0)*(2.D0*A+7.D0)/W)/W))/W)/W                                     CORA-898
      C(2)=B3-2.D0*P*(2.D0*A*((((48.D0*A+16.D0)*A-570.D0)*A-703.D0)*A-21CORA-899
     10.D0)*U+(2.D0*A-3.D0)*((((4.D0*A-34.D0)*A-172.D0)*A-116.D0)*U+8.D0CORA-900
     2*((5.D0*A-48.D0)*A-29.D0)-72.D0*Q)*Q-A*(2.D0*A+1.D0)*(40.D0*(2.D0*CORA-901
     3A+1.D0)*(14.D0-A)-(2.D0*A+7.D0)*(2.D0*A+5.D0)*(A+1.D0)**2*U**2)-6.CORA-902
     4D0*(A+2.D0)*(5.D0*((14.D0-A)*(2.D0*A+1.D0)**2-(A-2.D0)*(2.D0*A-3.DCORA-903
     50)*Q-(A+1.D0)*(2.D0*A+1.D0)*((A+1.D0)*A-7.D0)*U)*F+(2.D0*A+5.D0)*(CORA-904
     6(((4.D0*A+6.D0)*A+92.D0)*A+60.D0)*Q+(2.D0*A+1.D0)*((A-14.D0)*A*(4.CORA-905
     7D0*A+2.D0)+(A+1.D0)*(A*(A+1.D0)*(2.D0*A+7.D0)*U-10.D0*(A+3.D0)*(7.CORA-906
     8D0*F+(2.D0*A+7.D0)*A*(A+1.D0)/W)/W)))/W)/W)/W                     CORA-907
      C(3)=B2+2.D0*Q*(A*((((16.D0*A+600.D0)*A+2332.D0)*A+2298.D0)*A+700.CORA-908
     1D0)*U+(2.D0*A-3.D0)*((((4.D0*A+70.D0)*A+212.D0)*A+116.D0)*U-8.D0*(CORA-909
     2(5.D0*A-48.D0)*A-29.D0)+72.D0*Q)*Q+40.D0*(2.D0*A+1.D0)**2*A*(14.D0CORA-910
     3-A)+3.D0*A*(2.D0*A+5.D0)*(2.D0*A+7.D0)*(A+1.D0)**2*U**2+6.D0*(A+2.CORA-911
     4D0)*(5.D0*((14.D0-A)*(2.D0*A+1.D0)**2-(A-2.D0)*(2.D0*A-3.D0)*Q+(A+CORA-912
     51.D0)*((8.D0*A+28.D0)*A+7.D0)*U)*F+(2.D0*A+5.D0)*((((4.D0*A+6.D0)*CORA-913
     6A+92.D0)*A+60.D0)*Q+2.D0*(A-14.D0)*A*(2.D0*A+1.D0)**2-5.D0*A*(A+1.CORA-914
     7D0)**2*(2.D0*A+7.D0)*U-10.D0*(A+3.D0)*(A+1.D0)*(2.D0*A+1.D0)*(7.D0CORA-915
     8*F+(2.D0*A+7.D0)*A*(A+1.D0)/W)/W)/W)/W)/W                         CORA-916
      C(4)=B4+6.D0*(2.D0*F*((2.D0*A-3.D0)*(A-2.D0)*(((18.D0*A+58.D0)*A+2CORA-917
     19.D0)*U+58.D0*(2.D0*A+1.D0)+18.D0*Q)*Q+A*(2.D0*A+1.D0)*(40.D0*(2.DCORA-918
     20*A+1.D0)*(A-14.D0)+(((58.D0*A-123.D0)*A-906.D0)*A-560.D0)*U+(A+1.CORA-919
     3D0)*(((9.D0*A+43.D0)*A+34.D0)*A-35.D0)*U**2))/(2.D0*A+3.D0)-((((((CORA-920
     416.D0*A**2+60.D0)*A+820.D0)*A+794.D0)*A+140.D0)*U+4.D0*(2.D0*A-3.DCORA-921
     50)*(2.D0*A-5.D0)*(A-2.D0)*Q)*Q-(2.D0*A+1.D0)*(A**2*(40.D0*(14.D0-ACORA-922
     6)*(2.D0*A+1.D0)-(A+1.D0)**2*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U**2)-4.D0CORA-923
     7*(((24.D0*A-44.D0)*A+257.D0)*A+70.D0)*Q-(((48.D0*A-8.D0)*A-566.D0)CORA-924
     8*A-420.D0)*A**2*U+10.D0*(A+2.D0)*(4.D0*((14.D0-A)*(2.D0*A+1.D0)*A-CORA-925
     9((2.D0*A+2.D0)*A+15.D0)*Q-A*(A+1.D0)*((A+1.D0)*A-7.D0)*U)*F+(2.D0*CORA-926
     AA+5.D0)*(2.D0*(A-14.D0)*(2.D0*A+1.D0)*A**2+2.D0*(((2.D0*A+9.D0)*A+CORA-927
     B43.D0)*A+21.D0)*Q+A*(A+1.D0)*(A*(A+1.D0)*(2.D0*A+7.D0)*U+(4.D0*A+2CORA-928
     C.D0)*(A+3.D0)*((A+7.D0)*2.D0*F+(2.D0*A+7.D0)*A*(A+1.D0)/W)/W))/W)/CORA-929
     DW))/W)/W                                                          CORA-930
      GO TO 45                                                          CORA-931
C MULTIPOLE LQ=6 L1=L2-2.                                               CORA-932
   43 BD=2520.D0*DEN*A**2*(2.D0*A+5.D0)*(2.D0*A+7.D0)*(A+2.D0)*(A+3.D0)*CORA-933
     1(A+4.D0)*S*DSQRT(S*Q*P*((A+1.D0)**2+F**2)*((A+2.D0)**2+F**2))     CORA-934
      B1=2*P*Q*(120.D0*((((2.D0*A+57.D0)*A-117.D0)*A-306.D0)*A-140.D0+((CORA-935
     111.D0*A-129.D0)*A-113.D0-21.D0*Q)*Q)/(A-1.D0)-((((74.D0*A-865.D0)*CORA-936
     2A-5208.D0)*A-7344.D0)*A-3360.D0)*U+((266.D0*A+863.D0)*A+312.D0)*Q*CORA-937
     3U-3.D0*(A+1.D0)*(A+2.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)CORA-938
     4*U**2)                                                            CORA-939
      B2=6.D0*Q*F*((120.D0*((2.D0*A-147.D0)*A-113.D0-21.D0*Q)*Q+60.D0*((CORA-940
     1((4.D0*A-56.D0)*A-261.D0)*A-259.D0)*A-56.D0)*U+(((86.D0*A-573.D0)*CORA-941
     2A-2171.D0)*A-312.D0)*Q*U-16800.D0*(A+1.D0)*(2.D0*A+1.D0))/(2.D0*A+CORA-942
     33.D0)+(A+2.D0)*(((43.D0*A+193.D0)*A+210.D0)*A+105.D0)*U**2)       CORA-943
      B3=3*P*((240.D0*((2.D0*A-147.D0)*A-113.D0-21.D0*Q)*Q+40.D0*(A+1.D0CORA-944
     1)*(2.D0*A+1.D0)*(((2.D0*A+63.D0)*A+69.D0)*A-168.D0)*U+(((892.D0*A+CORA-945
     21374.D0)*A-2182.D0)*A-624.D0)*Q*U-33600.D0*(A+1.D0)*(2.D0*A+1.D0))CORA-946
     3/(2.D0*A+3.D0)-(A+1.D0)*(A+2.D0)*(2.D0*A+1.D0)*((19.D0*A-6.D0)*A-2CORA-947
     410.D0)*U**2)*F                                                    CORA-948
      B4=(((2.D0*A-3.D0)*(240.D0*((((2.D0*A+69.D0)*A-369.D0)*A-534.D0)*ACORA-949
     1-140.D0+((11.D0*A-165.D0)*A-113.D0-21.D0*Q)*Q)*Q+((((532.D0*A-1326CORA-950
     2.D0)*A-5422.D0)*A-624.D0)*Q-((((148.D0*A-4110.D0)*A+4130.D0)*A+451CORA-951
     320.D0)*A+40512.D0)*A-6720.D0)*Q*U)/(A+1.D0)+240.D0*A**2*(2.D0*A+1.CORA-952
     4D0)*((A+2.D0)*((2.D0*A+59.D0)*A-189.D0)*U-840.D0))/(2.D0*A+3.D0)-(CORA-953
     52.D0*(((((24.D0*A-26.D0)*A+317.D0)*A+2298.D0)*A+2001.D0)*A+630.D0)CORA-954
     6*Q+A**2*(2.D0*A+1.D0)*(((74.D0*A-1068.D0)*A-4812.D0)*A-3360.D0+3*(CORA-955
     7A+2.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U))*U**2)       CORA-956
      IF (LT) GO TO 45                                                  CORA-957
      C(1)=B1+6.D0*P*Q*(A+2.D0)*((360.D0*Q+40.D0*((2.D0*A+53.D0)*A+57.D0CORA-958
     1)-(2.D0*A+3.D0)*((19.D0*A+37.D0)*A-72.D0)*U)*F-(4.D0*A+10.D0)*(20.CORA-959
     2D0*(2.D0*A-3.D0)*Q+10.D0*(((2.D0*A+45.D0)*A+75.D0)*A+42.D0)-(A+1.DCORA-960
     30)*(A+2.D0)*(6.D0*A+9.D0)*(2.D0*A+7.D0)*U+(A+3.D0)*(20.D0*A+30.D0)CORA-961
     4*((A+16.D0)*F+(A+2.D0)*(6.D0*A+21.D0)*(A+1.D0)/W)/W)/W)/W         CORA-962
      C(2)=B3+2.D0*P*((2.D0*A-3.D0)*(240.D0*(3.D0*Q-(A-21.D0)*A+19.D0)-(CORA-963
     1A+1.D0)*((116.D0*A+166.D0)*A-432.D0)*U)*Q+A*(A+1.D0)*(2.D0*A+1.D0)CORA-964
     2*(16800.D0-(20.D0*(((2.D0*A+63.D0)*A+174.D0)*A+42.D0)-(A+2.D0)*(6.CORA-965
     3D0*A+9.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U)*U)-(3.D0*A+6.D0)*((20.D0CORA-966
     4*(A-2.D0)*(2.D0*A-3.D0)*Q-(A+1.D0)*(2.D0*A+1.D0)*(840.D0-(2.D0*A+3CORA-967
     5.D0)*((A+30.D0)*A+84.D0)*U))*5.D0*F-(4.D0*A+10.D0)*(A+1.D0)*(30.D0CORA-968
     6*((2.D0*A+7.D0)*A+48.D0)*Q-(2.D0*A+1.D0)*(A*(840.D0+(3.D0*A+6.D0)*CORA-969
     7(2.D0*A+3.D0)*(2.D0*A+7.D0)*U)-(A+3.D0)*(20.D0*A+30.D0)*((7.D0*A+4CORA-970
     82.D0)*F+A*(A+2.D0)*(6.D0*A+21.D0)/W)/W))/W)/W)/W                  CORA-971
      C(3)=B2+6.D0*Q*((2.D0*A-3.D0)*(80.D0*(3.D0*Q-(A-21.D0)*A+19.D0)-((CORA-972
     1(12.D0*A-26.D0)*A-222.D0)*A-144.D0)*U)*Q-40.D0*A*((((4.D0*A-6.D0)*CORA-973
     2A-90.D0)*A-138.D0)*A-63.D0)*U+A*(A+1.D0)*(5600.D0*(2.D0*A+1.D0)-3.CORA-974
     3D0*(A+2.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U**2)+10.D0*CORA-975
     4(A+2.D0)*((420.D0*(A+1.D0)*(2.D0*A+1.D0)-10.D0*(A-2.D0)*(2.D0*A-3.CORA-976
     5D0)*Q-(2.D0*A+3.D0)*(((10.D0*A+34.D0)*A+21.D0)*A+42.D0)*U)*F+(6.D0CORA-977
     6*A+15.D0)*((A+1.D0)*(((4.D0*A+14.D0)*A+96.D0)*Q+A*((A+2.D0)*(2.D0*CORA-978
     7A+3.D0)*(2.D0*A+7.D0)*U-56.D0*(2.D0*A+1.D0)))-14.D0*(A+3.D0)*(2.D0CORA-979
     7*A+3.D0)*((3.D0*A-2.D0)*F+A*(A+2.D0)*(2.D0*A+7.D0)*(A+1.D0)/W)/W)/CORA-980
     8W)/W)/W                                                           CORA-981
      C(4)=B4+6.D0*(((A-2.D0)*(2.D0*A-3.D0)*(40.D0*(9.D0*Q+(2.D0*A+73.D0CORA-982
     1)*A+57.D0)-(((38.D0*A-49.D0)*A-433.D0)*A-216.D0)*U)*Q+A*(A+1.D0)*(CORA-983
     22.D0*A+1.D0)*(40.D0*(((2.D0*A+63.D0)*A+69.D0)*A-168.D0)*U-33600.D0CORA-984
     3-(A+2.D0)*(2.D0*A+3.D0)*((19.D0*A-6.D0)*A-210.D0)*U**2))*F/(2.D0*ACORA-985
     4+3.D0)-(20.D0*(((((4.D0*A+132.D0)*A+35.D0)*A+1509.D0)*A+1812.D0)*ACORA-986
     5+420.D0+(A-2.D0)*(4.D0*A-6.D0)*(2.D0*A-5.D0)*Q)*Q-(A+1.D0)*(4.D0*(CORA-987
     6((((12.D0*A+80.D0)*A+625.D0)*A+1710.D0)*A+1158.D0)*A+630.D0)*Q*U+ACORA-988
     7**2*(2.D0*A+1.D0)*(16800.D0-(20.D0*(((2.D0*A+63.D0)*A+174.D0)*A+42CORA-989
     8.D0)-(3.D0*A+6.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U)*U)CORA-990
     9)+(10.D0*A+20.D0)*((((((4.D0*A+132.D0)*A+371.D0)*A+1173.D0)*A+720.CORA-991
     AD0)*Q-A*(A+1.D0)*(2.D0*A+1.D0)*(840.D0-(2.D0*A+3.D0)*((A+30.D0)*A+CORA-992
     B84.D0)*U))*2.D0*F+(6.D0*A+15.D0)*(A+1.D0)*(((((8.D0*A+60.D0)*A+220CORA-993
     C.D0)*A-30.D0)*A+252.D0)*Q+A*(2.D0*A+1.D0)*(280.D0*A+(2.D0*A+3.D0)*CORA-994
     D(A*(A+2.D0)*(2.D0*A+7.D0)*U-14.D0*(A+3.D0)*((2.D0*A+12.D0)*F+A*(A+CORA-995
     E2.D0)*(2.D0*A+7.D0)/W)/W)))/W)/W)/W)/W                            CORA-996
      GO TO 45                                                          CORA-997
C MULTIPOLE LQ=6 L1=L2-4.                                               CORA-998
   44 BD=181440.D0*DEN*A**2*(A+2.D0)*(A+3.D0)*(A+4.D0)*(2.D0*A+5.D0)*(2.CORA-999
     1D0*A+7.D0)*S*DSQRT(S*Q*((A+1.D0)**2+F**2)*((A+2.D0)**2+F**2)*((A+3CORA1000
     2.D0)**2+F**2))                                                    CORA1001
      B1=-Q*((4320.D0*((7.D0*Q+(A+78.D0)*A+103.D0)*Q+((10.D0*A+255.D0)*ACORA1002
     1+638.D0)*A+420.D0)*Q+2880.D0*A*(A+2.D0)*(A+3.D0)*(A+4.D0)*(2.D0*A+CORA1003
     25.D0)*(2.D0*A+7.D0))/(A-1.D0)-72.D0*((5.D0*((14.D0*A-13.D0)*A+30.DCORA1004
     30)*Q+(((38.D0*A+833.D0)*A+243.D0)*A+678.D0)*A+2520.D0)*Q+A*(((((14CORA1005
     48.D0*A+2304.D0)*A+13879.D0)*A+31194.D0)*A+31336.D0)*A+13440.D0))*UCORA1006
     5+(A+2.D0)*(4.D0*A+10.D0)*(A*((((814.D0*A+8467.D0)*A+23265.D0)*A+30CORA1007
     6834.D0)*A+16632.D0)+(((338.D0*A+1757.D0)*A+8199.D0)*A+8190.D0)*Q-2CORA1008
     74.D0*A*(A+1.D0)*(A+3.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)CORA1009
     8*U)*U**2)                                                         CORA1010
      B2=-6.D0*Q*F*(2160.D0*((4.D0*A+84.D0)*A+103.D0+7.D0*Q)*Q/(2.D0*A+3CORA1011
     1.D0)+1440.D0*(((2.D0*A+33.D0)*A+226.D0)*A+210.D0)-(A+2.D0)*(12.D0*CORA1012
     2(((62.D0*A+623.D0)*A+126.D0)*A-1260.D0)+180.D0*(4.D0*A-5.D0)*Q+(A+CORA1013
     33.D0)*(2.D0*A+5.D0)*((41.D0*A+591.D0)*A+910.D0)*U)*U)             CORA1014
      B3=-3.D0*F*(((30240.D0*Q+4320.D0*((4.D0*A+84.D0)*A+103.D0)-360.D0*CORA1015
     1(4.D0*A**2+5.D0)*(5.D0*A-6.D0)*U)*Q-24.D0*(((((284.D0*A+3480.D0)*ACORA1016
     2+25.D0)*A-690.D0)*A+396.D0)*A-7560.D0)*U)*Q/(2.D0*A+3.D0)+2880.D0*CORA1017
     3(((2.D0*A+33.D0)*A+226.D0)*A+210.D0)*Q+(2.D0*A+4.D0)*((((98.D0*A-2CORA1018
     4563.D0)*A-7346.D0)*A-19775.D0)*A-13650.D0)*Q*U**2+A*(A+1.D0)*(2.D0CORA1019
     5*A+1.D0)*(480.D0*(((2.D0*A+33.D0)*A+226.D0)*A+840.D0)+(A+2.D0)*((ACORA1020
     6+3.D0)*(2.D0*A+5.D0)*((233.D0*A+1798.D0)*A+2520.D0)*U-4.D0*(((262.CORA1021
     7D0*A+3523.D0)*A+16926.D0)*A+17640.D0))*U)*U)                      CORA1022
      B4=-(4320.D0*(2.D0*A-3.D0)*((7.D0*Q+(A+90.D0)*A+103.D0)*Q+7.D0*(((CORA1023
     12.D0*A+57.D0)*A+118.D0)*A+60.D0))*Q/((A+1.D0)*(2.D0*A+3.D0))-72.D0CORA1024
     2*(2.D0*A-3.D0)*((35.D0*A-50.D0)*Q+((19.D0*A+425.D0)*A-66.D0)*A-840CORA1025
     3.D0)*Q*U+(A+2.D0)*(4.D0*A+10.D0)*(((338.D0*A+1567.D0)*A+8439.D0)*ACORA1026
     4+8190.D0)*Q*U**2+A*(4.D0*A+2.D0)*(1440.D0*(((2.D0*A+33.D0)*A+226.DCORA1027
     50)*A+840.D0)-36.D0*((((74.D0*A+1109.D0)*A+6154.D0)*A+9304.D0)*A+33CORA1028
     660.D0)*U+(A+2.D0)*(2.D0*A+5.D0)*(((407.D0*A+3765.D0)*A+6714.D0)*A+CORA1029
     74536.D0-12.D0*(A+3.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*UCORA1030
     8)*U**2))                                                          CORA1031
      IF (LT) GO TO 45                                                  CORA1032
      C(1)=B1+6.D0*Q*(A+2.D0)*((240.D0*(9.D0*Q+(8.D0*A+98.D0)*A+141.D0)*CORA1033
     1Q+4.D0*(((((524.D0*A+7460.D0)*A+40945.D0)*A+88825.D0)*A+77406.D0)*CORA1034
     2A+17640.D0)*U-60.D0*(((6.D0*A-7.D0)*A+23.D0)*A-30.D0)*Q*U-(A+3.D0)CORA1035
     3*(2.D0*A+5.D0)*(480.D0*(A+4.D0)*(2.D0*A+7.D0)+(A+2.D0)*(2.D0*A+3.DCORA1036
     40)*((233.D0*A+1373.D0)*A+420.D0)*U**2))*F+4.D0*(2.D0*A+5.D0)*((A+2CORA1037
     5.D0)*(5.D0*(((116.D0*A+1028.D0)*A+3015.D0)*A+1953.D0)*Q-A*((((292.CORA1038
     6D0*A+2908.D0)*A+9639.D0)*A+5517.D0)*A-756.D0))*U-60.D0*((((14.D0*ACORA1039
     7+153.D0)*A+467.D0)*A+483.D0)+(2.D0*A-3.D0)*Q)*Q+(A+3.D0)*(12.D0*(2CORA1040
     8.D0*A+7.D0)*A*(5.D0*(A+4.D0)*(2.D0*A-3.D0)-(A+1.D0)*(A+2.D0)*(2.D0CORA1041
     9*A+3.D0)*(2.D0*A+5.D0)*U**2)+5.D0*((12.D0*(A+4.D0)*(A-2.D0)*(2.D0*CORA1042
     AA-3.D0)*(2.D0*A+7.D0)-12.D0*((22.D0*A+175.D0)*A+318.D0)*Q)*F+(A+2.CORA1043
     BD0)*((2.D0*A+3.D0)*(2.D0*A+5.D0)*((85.D0*A+409.D0)*A+84.D0)*U*F-6.CORA1044
     CD0*(2.D0*A+7.D0)*(15.D0*((20.D0*A+92.D0)*A+51.D0)*Q-(A+4.D0)*A*((3CORA1045
     D32.D0*A+368.D0)*A+141.D0)-(2.D0*A+3.D0)*(2.D0*A+5.D0)*(4.D0*A*(A+1CORA1046
     E.D0)*(A+3.D0)*U-7.D0*(A+4.D0)*((19.D0*A+3.D0)*F+8.D0*A*(A+1.D0)*(ACORA1047
     F+3.D0)/W)/W))/W))/W))/W)/W                                        CORA1048
      XX=(3.D0*A+6.D0)*(5.D0*F*(120.D0*((((8.D0*A+116.D0)*A+682.D0)*A+14CORA1049
     105.D0)*A+966.D0-(A-2.D0)*(2.D0*A-3.D0)*Q)*Q-(2.D0*A+3.D0)*(4.D0*((CORA1050
     2((140.D0*A+1808.D0)*A+7627.D0)*A+13909.D0)*A+6510.D0)*Q-A*(A+1.D0)CORA1051
     3*(2.D0*A+1.D0)*(12.D0*(((2.D0*A+33.D0)*A+226.D0)*A+840.D0)+(A+2.D0CORA1052
     4)*(A+3.D0)*(10.D0*A+25.D0)*(17.D0*A+84.D0)*U))*U)+(4.D0*A+10.D0)*(CORA1053
     512.D0*(A+2.D0)*(30.D0*(((8.D0*A+62.D0)*A+159.D0)*Q-((((4.D0*A+40.DCORA1054
     60)*A+151.D0)*A+94.D0)*A+84.D0))*Q-(A+1.D0)*(2.D0*A+3.D0)*(5.D0*(((CORA1055
     768.D0*A+564.D0)*A+1285.D0)*A+210.D0)*Q-A**2*(2.D0*A+1.D0)*(((166.DCORA1056
     80*A+1399.D0)*A+3108.D0)+(A+3.D0)*(4.D0*A+10.D0)*(2.D0*A+7.D0)*U))*CORA1057
     9U)+10.D0*(A+3.D0)*(42.D0*(2.D0*A+3.D0)*(((70.D0*A+561.D0)*A+1241.DCORA1058
     A0)*A+510.D0)*Q*F-(2.D0*A+3.D0)*(A+1.D0)*(7.D0*A*(A+2.D0)*(2.D0*A+1CORA1059
     B.D0)*(2.D0*A+5.D0)*(19.D0*A+84.D0)*U*F+(2.D0*A+7.D0)*(1008.D0*A*(ACORA1060
     C+4.D0)*(2.D0*A+1.D0)*F-(6.D0*A+12.D0)*(4.D0*((194.D0*A+797.D0)*A+1CORA1061
     D05.D0)*Q-A*(2.D0*A+1.D0)*(432.D0*A*(A+4.D0)+(2.D0*A+5.D0)*(4.D0*A*CORA1062
     E(A+3.D0)*U-7.D0*(A+4.D0)*(27.D0*F+8.D0*A*(A+3.D0)/W)/W)))/W)))/W)/CORA1063
     FW)/W                                                              CORA1064
      C(2)=B3+2.D0*(1440.D0*(((((8.D0*A+132.D0)*A+906.D0)*A+2133.D0)*A+2CORA1065
     1116.D0)*A+840.D0+(2.D0*A-3.D0)*((A+36.D0)*A+47.D0+3.D0*Q)*Q)*Q-24.CORA1066
     2D0*((((((504.D0*A+7644.D0)*A+39370.D0)*A+119625.D0)*A+174926.D0)*ACORA1067
     3+106596.D0)*A+17640.D0+(10.D0*A-15.D0)*(((8.D0*A-6.D0)*A+13.D0)*A-CORA1068
     430.D0)*Q)*Q*U+(A+1.D0)*(8.D0*A+12.D0)*((A+2.D0)*(2.D0*A+5.D0)*(((3CORA1069
     562.D0*A+3013.D0)*A+8436.D0)*A+1890.D0)*Q*U+A**2*(2.D0*A+1.D0)*(60.CORA1070
     6D0*(((2.D0*A+33.D0)*A+226.D0)*A+840.D0)-(A+2.D0)*(2.D0*A+5.D0)*((7CORA1071
     73.D0*A+822.D0)*A+3024.D0+(A+3.D0)*(12.D0*A+30.D0)*(2.D0*A+7.D0)*U)CORA1072
     8*U))*U+XX)/W                                                      CORA1073
      C(3)=B2+24.D0*Q*(2.D0*(60.D0*(((((8.D0*A+132.D0)*A+906.D0)*A+2133.CORA1074
     1D0)*A+2116.D0)*A+840.D0+(2.D0*A-3.D0)*(3.D0*Q+(A+36.D0)*A+47.D0)*QCORA1075
     2)-(A+2.D0)*(2.D0*A+5.D0)*((((112.D0*A+1218.D0)*A+3459.D0)*A+4242.DCORA1076
     30)*A+1764.D0+5.D0*(2.D0*A-3.D0)**2*Q-3.D0*(A+1.D0)*(A+3.D0)*(2.D0*CORA1077
     4A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U)*U)+5.D0*(A+2.D0)*(30.D0*(((CORA1078
     5((8.D0*A+116.D0)*A+682.D0)*A+1405.D0)*A+966.D0)-(A-2.D0)*(2.D0*A-3CORA1079
     6.D0)*Q)*F-(A+2.D0)*(2.D0*A+5.D0)*((A+3.D0)*(2.D0*A+3.D0)*(37.D0*A+CORA1080
     7217.D0)*U*F+6.D0*(6.D0*((((4.D0*A+40.D0)*A+151.D0)*A+94.D0)*A+84.DCORA1081
     80)-2.D0*((24.D0*A+186.D0)*A+477.D0)*Q+(2.D0*A+3.D0)*(2.D0*A+5.D0)*CORA1082
     9(2.D0*(A+1.D0)*(A+3.D0)*(2.D0*A+7.D0)*U-7.D0*(A+3.D0)*((11.D0*A+51CORA1083
     A.D0)*F+4.D0*(2.D0*A+7.D0)*(A+1.D0)*(A+3.D0)/W)/W))/W))/W)/W       CORA1084
      C(4)=B4+6.D0*((240.D0*(A-2.D0)*(2.D0*A-3.D0)*(9.D0*Q+(8.D0*A+118.DCORA1085
     10)*A+141.D0)*Q/(2.D0*A+3.D0)-60.D0*(A**2-4.D0)*(2.D0*A-3.D0)*(3.D0CORA1086
     2*A-5.D0)*Q*U-(A+1.D0)*(2.D0*A+1.D0)*(480.D0*(((2.D0*A+33.D0)*A+226CORA1087
     3.D0)*A+840.D0)+(A+2.D0)*((A+3.D0)*(2.D0*A+5.D0)*((233.D0*A+1798.D0CORA1088
     4)*A+2520.D0)*U**2-4.D0*(((262.D0*A+3523.D0)*A+16926.D0)*A+17640.D0CORA1089
     5)*U)))*F-4.D0*(60.D0*(7.D0*(((((4.D0*A+60.D0)*A+291.D0)*A+969.D0)*CORA1090
     6A+1409.D0)*A+690.D0)+(A-2.D0)*(2.D0*A-3.D0)*(2.D0*A-5.D0)*Q)*Q-(A+CORA1091
     71.D0)*(2.D0*A+3.D0)*(60.D0*A*(2.D0*A+1.D0)*(((2.D0*A+33.D0)*A+226.CORA1092
     8D0)*A+840.D0)+(A+2.D0)*(2.D0*A+5.D0)*(5.D0*((58.D0*A+473.D0)*A+130CORA1093
     92.D0)*Q-A*(2.D0*A+1.D0)*((73.D0*A+822.D0)*A+3024.D0+6.D0*(A+3.D0)*CORA1094
     A(2.D0*A+5.D0)*(2.D0*A+7.D0)*U))*U)+5.D0*(A+2.D0)*(2.D0*A+3.D0)*(12CORA1095
     B.D0*(((22.D0*A+273.D0)*A+1001.D0)*A+1590.D0)*Q*F-(A+1.D0)*(12.D0*(CORA1096
     C2.D0*A+1.D0)*(((2.D0*A+33.D0)*A+226.D0)*A+840.D0)*F+(A+2.D0)*(2.D0CORA1097
     D*A+5.D0)*(5.D0*(A+3.D0)*(2.D0*A+1.D0)*(17.D0*A+84.D0)*U*F-6.D0*(15CORA1098
     E.D0*((20.D0*A+164.D0)*A+357.D0)*Q-(2.D0*A+1.D0)*(A*((166.D0*A+1399CORA1099
     F.D0)*A+3108.D0)+(A+3.D0)*(2.D0*A+5.D0)*(A*(4.D0*A+14.D0)*U-7.D0*((CORA1100
     G19.D0*A+84.D0)*F+4.D0*A*(2.D0*A+7.D0)*(A+3.D0)/W)/W)))/W)))/W)/W)/CORA1101
     HW                                                                 CORA1102
   45 A1=-2.D0*A**2*Y*B1*Z                                              CORA1103
      A2=Y*((2.D0*A+1.D0)*((2.D0*(A**2-A)**2*(1.D0+S**2)+Y**2*(A**2-A-.5CORA1104
     1D0))*B1-Y*(P*B2+Q*B3))+(4.D0*A-2.D0)*(A+1.D0)**2*P*Q*B4)*Z        CORA1105
      A3=-Y*((2.D0*A-1.D0)*((2.D0*(A**2+A)**2*(1.D0+S**2)+Y**2*(A**2+A-.CORA1106
     15D0))*B4-Y*(B2+B3))+(4.D0*A+2.D0)*(A-1.D0)**2*B1)*Z               CORA1107
      A4=2.D0*A**2*Y*B4*Z                                               CORA1108
      IF (X.EQ.0.D0) GO TO 48                                           CORA1109
      A1=A1+X*2.D0*P*((A*X-2.D0*F)*B2-2.D0*Q*(A+1.D0)*B4)               CORA1110
      A2=A2+X*P*((2.D0*Q*((2.D0*A+3.D0)*(A+1.D0)*F+((2.D0*A+3.D0)*A-4.D0CORA1111
     1)*E*S)-2.D0*P*(2.D0*A-3.D0)*(2.D0*A+1.D0)*F+(2.D0*A+1.D0)*((((2.D0CORA1112
     2*A-1.D0)*A-8.D0)*A+5.D0)*F-S*((A+1.D0)*((6.D0*A-9.D0)*A+1.D0)*E-S*CORA1113
     3((6.D0*A-7.D0)*(A**2-1.D0)*F-S*((((2.D0*A-5.D0)*A+2.D0)*A-1.D0)*E)CORA1114
     4))))*B2+2.D0*Q*(A+1.D0)*((2.D0*A+3.D0)*(Q+P)+(2.D0*A-1.D0)*(4.D0*ECORA1115
     5*F*S+(1.D0+S**2)*((2.D0*A-4.D0)*A-3.D0)))*B4)                     CORA1116
      A3=A3+X*((2.D0*P*((2.D0*A-3.D0)*(A-1.D0)*E*S+F*((2.D0*A-3.D0)*A-4.CORA1117
     1D0))-2.D0*Q*E*S*(2.D0*A+3.D0)*(2.D0*A-1.D0)-(2.D0*A-1.D0)*((((2.D0CORA1118
     2*A+5.D0)*A+2.D0)*A+1.D0)*F-S*((6.D0*A+7.D0)*(A**2-1.D0)*E-S*((A-1.CORA1119
     3D0)*((6.D0*A+9.D0)*A+1.D0)*F-S*((((2.D0*A+1.D0)*A-8.D0)*A-5.D0)*E)CORA1120
     4))))*B2+(-4.D0*P*Q*((2.D0*A+1.D0)*A+2.D0)-(2.D0*A-1.D0)*(2.D0*S*E*CORA1121
     5F*(2.D0*A+3.D0)*(Q+P+S**2+1.D0)-A**2*(((A+3.D0)*A+2.5D0)*(1.D0+S**CORA1122
     64)-S**2*((2.D0*A-2.D0)*A-7.D0))+A*(A-1.D0)*(2.D0*A+3.D0)*(1.D0+S**CORA1123
     72)*(P+Q)-(S**2-1.D0)*((2.D0*A+4.D0)*A+.5D0)*(Q-P)))*B4)           CORA1124
      A4=A4+X*2.D0*(((A-1.D0)*(P+Q)+Y**2)*B4+(2.D0*E*S-A*X)*B2)         CORA1125
   46 A4=A4+X*2.D0*((2.D0*F+A*X)*B3-2.D0*(A-1.D0)*B1)                   CORA1126
   47 A1=A1+X*2.D0*(((A+1.D0)*(Q+P)-Y**2)*B1-Q*(A*X+2.D0*E*S)*B3)       CORA1127
      A2=A2+X*((-4.D0*P*Q*(2.D0*A**2-A+2.D0)-(2.D0*A+1.D0)*(2.D0*S*E*F*(CORA1128
     12.D0*A-3.D0)*(Q+P+S**2+1.D0)+A**2*(((A-3.D0)*A+2.5D0)*(1.D0+S**4)-CORA1129
     2S**2*((2.D0*A+2.D0)*A-7.D0))+A*(A+1.D0)*(2.D0*A-3.D0)*(1.D0+S**2)*CORA1130
     3(P+Q)+(S**2-1.D0)*((2.D0*A-4.D0)*A+.5D0)*(Q-P)))*B1+Q*(2.D0*P*((2.CORA1131
     4D0*A+3.D0)*(A+1.D0)*E*S+F*((2.D0*A+3.D0)*A-4.D0))-2.D0*Q*E*S*(2.D0CORA1132
     5*A-3.D0)*(2.D0*A+1.D0)-(2.D0*A+1.D0)*((((2.D0*A-5.D0)*A+2.D0)*A-1.CORA1133
     6D0)*F-S*((6.D0*A-7.D0)*(A**2-1.D0)*E-S*((A+1.D0)*((6.D0*A-9.D0)*A+CORA1134
     71.D0)*F-S*((((2.D0*A-1.D0)*A-8.D0)*A+5.D0)*E)))))*B3)             CORA1135
      A3=A3+X*(2.D0*(A-1.D0)*((2.D0*A-3.D0)*(Q+P)+(2.D0*A+1.D0)*(4.D0*E*CORA1136
     1F*S+(1.D0+S**2)*((2.D0*A+4.D0)*A-3.D0)))*B1+(2.D0*Q*((2.D0*A-3.D0)CORA1137
     2*(A-1.D0)*F+((2.D0*A-3.D0)*A-4.D0)*E*S)-2.D0*P*(2.D0*A+3.D0)*(2.D0CORA1138
     3*A-1.D0)*F+(2.D0*A-1.D0)*((((2.D0*A+1.D0)*A-8.D0)*A-5.D0)*F-S*((A-CORA1139
     41.D0)*((6.D0*A+9.D0)*A+1.D0)*E-S*((6.D0*A+7.D0)*(A**2-1.D0)*F-S*((CORA1140
     5((2.D0*A+5.D0)*A+2.D0)*A+1.D0)*E)))))*B3)                         CORA1141
   48 B(1)=A1*DSQRT(((A-1.D0)**2+E**2)*((A-1.D0)**2+F**2))*(2.D0*A-3.D0)CORA1142
     1/(BD*A*(2.D0*A-1.D0))                                             CORA1143
      B(2)=A2/(A*S*BD*(2.D0*A+1.D0))                                    CORA1144
      B(3)=A3/(A*S*BD*(2.D0*A-1.D0))*DSQRT(P*Q)                         CORA1145
      B(4)=A4*DSQRT(P*Q*((A+1.D0)**2+E**2)*((A+1.D0)**2+F**2))*(2.D0*A+3CORA1146
     1.D0)/(BD*A*(2.D0*A+1.D0))                                         CORA1147
      IF (LT) RETURN                                                    CORA1148
      Z=-2.D0*BD*V*W*DSQRT(S)/DEN                                       CORA1149
      BD=A**2*BD*DSQRT(V*W)**3                                          CORA1150
      A1=A1*(A-1.D0)**2                                                 CORA1151
      A4=A4*(A+1.D0)**2                                                 CORA1152
      C(1)=C(1)/Z-(A+Y*W*(.5D0*A-1.D0)/(A-1.D0)**2)*(2.D0*A-1.D0)*A1/BD CORA1153
      C(2)=(C(2)/Z+W*(A1-P*A4)/BD)*DSQRT(Q)                             CORA1154
      C(3)=(C(3)/Z+W*(A1-Q*A4)/BD)*DSQRT(P)                             CORA1155
      C(4)=(C(4)/Z+(A+Y*W*(.5D0*A+1.D0)/(A+1.D0)**2)*(2.D0*A+1.D0)*A4/BDCORA1156
     1)*DSQRT(P*Q)                                                      CORA1157
      GO TO 70                                                          CORA1158
C FOR NEUTRONS ( COULOMB PARAMETER 0.).                                 CORA1159
   49 X=W**2                                                            CORA1160
      GO TO ( 50 , 51 , 54 , 57 , 61 , 65 ) , LQ                        CORA1161
   50 IF ((LL.EQ.1).OR.(U.EQ.0)) GO TO 73                               CORA1162
C MULTIPOLE LQ=1 L1=L2-1 (USELESS).                                     CORA1163
      B(2)=(U+2.D0-2.D0*A)/(DSQRT(S)*U)                                 CORA1164
      B(3)=DSQRT(S)*(2.D0*A+2.D0)/U                                     CORA1165
      IF (LT) RETURN                                                    CORA1166
      C(1)=DSQRT(S)/(U*X)                                               CORA1167
      C(4)=C(1)/S                                                       CORA1168
      RETURN                                                            CORA1169
   51 GO TO ( 52 , 73 , 53 ) , LL                                       CORA1170
C MULTIPOLE LQ=2 L1=L2.                                                 CORA1171
   52 B(2)=1.D0                                                         CORA1172
      RETURN                                                            CORA1173
C MULTIPOLE LQ=2 L1=L2-2.                                               CORA1174
   53 B(2)=(2.D0*A-1.D0)/(3.D0*S)                                       CORA1175
      B(3)=-(A+1.D0)/1.5D0                                              CORA1176
      IF (.NOT.LT) C(2)=-B(2)/(X*V)                                     CORA1177
      RETURN                                                            CORA1178
   54 GO TO ( 73 , 55 , 73 , 56 ) , LL                                  CORA1179
C MULTIPOLE LQ=3 L1=L2-1.                                               CORA1180
   55 B(2)=1.D0/(3.D0*DSQRT(S))                                         CORA1181
      B(3)=-S*B(2)                                                      CORA1182
      IF (.NOT.LT) C(2)=-B(2)/(X*V)                                     CORA1183
      GO TO 70                                                          CORA1184
C MULTIPOLE LQ=3 L1=L2-3.                                               CORA1185
   56 Y=15.D0*S*DSQRT(S)                                                CORA1186
      B(2)=(1.D0-2.D0*U*(A-1.D0))/Y                                     CORA1187
      B(3)=((2.D0*A+1.D0)*U-1.D0)*S/Y                                   CORA1188
      IF (LT) RETURN                                                    CORA1189
      C(1)=(6.D0*A-3.D0)/(Y*X**2*S)                                     CORA1190
      C(2)=(2.D0+U*(2.D0*A+1.D0)-(12.D0*A**2-3.D0)/X)/(Y*X*V)           CORA1191
      C(3)=-3.D0/(Y*X*W)                                                CORA1192
      C(4)=(6.D0*A+3.D0)/(Y*X**2)                                       CORA1193
      GO TO 70                                                          CORA1194
   57 GO TO ( 58 , 73 , 59 , 73 , 60 ) , LL                             CORA1195
C MULTIPOLE LQ=4 L1=L2.                                                 CORA1196
   58 B(2)=1.D0/(3.D0*A+6.D0)                                           CORA1197
      B(3)=-(U+2.D0)*B(2)/(2.D0*S)                                      CORA1198
      IF (LT) RETURN                                                    CORA1199
      C(2)=-B(2)/(2.D0*X*V)                                             CORA1200
      C(3)=C(2)/S                                                       CORA1201
      C(4)=3.D0*C(3)/W                                                  CORA1202
      GO TO 70                                                          CORA1203
C MULTIPOLE LQ=4 L1=L2-2.                                               CORA1204
   59 Y=15.D0*S*(A+2.D0)                                                CORA1205
      B(2)=-(U*(A-1.D0)-3.D0)/Y                                         CORA1206
      B(3)=((A+.5D0)*U-3.D0)*S/Y                                        CORA1207
      IF (LT) RETURN                                                    CORA1208
      C(1)=(3.D0*A+6.D0)/(Y*X**2*S)                                     CORA1209
      C(2)=-(3.D0-(2.D0*A+1.D0)*(U-(6.D0*A+12.D0)/X))/(2.D0*Y*X*V)      CORA1210
      C(3)=-1.5D0/(Y*X*W)                                               CORA1211
      C(4)=-(2.D0*A+1.D0)*C(3)/W                                        CORA1212
      GO TO 70                                                          CORA1213
C MULTIPOLE LQ=4 L1=L2-4.                                               CORA1214
   60 Y=210.D0*(A+2.D0)*S                                               CORA1215
      B(2)=(6.D0-2.D0*(A-1.D0)*U*(2.D0-(2.D0*A+3.D0)*U))/(Y*S)          CORA1216
      B(3)=-(6.D0-U*(4.D0*A-1.D0-U*(2.D0*A+3.D0)*(2.D0*A+1.D0)))/Y      CORA1217
      IF (LT) RETURN                                                    CORA1218
      C1=U-(10.D0*A-5.D0)/X                                             CORA1219
      C(1)=-(6.D0*A+12.D0)*(4.D0+(2.D0*A+3.D0)*C1)/(Y*X**2*S**2)        CORA1220
      C(2)=-(3.D0+(2.D0*A+10.D0)*U-(A+2.D0)*(108.D0*A-6.D0)/X+(2.D0*A+3.CORA1221
     1D0)*(2.D0*A+1.D0)*(U**2-(6.D0*A+12.D0)*C1/X))/(Y*X*V*S)           CORA1222
      C(3)=-(3.D0-(6.D0*A+9.D0)*(U-(10.D0*A+20.D0)/X))/(Y*X*V)          CORA1223
      C(4)=-(2.D0*A+1.D0)*C(3)/W-(30.D0*A+60.D0)/(Y*X**2*S)             CORA1224
      GO TO 70                                                          CORA1225
   61 GO TO ( 73 , 62 , 73 , 63 , 73 , 64 ) , LL                        CORA1226
C MULTIPOLE LQ=5 L1=L2-1.                                               CORA1227
   62 Y=60.D0*(A+2.D0)*(A+3.D0)*DSQRT(S)                                CORA1228
      B(2)=(16.D0-U*(2.D0*A-2.D0))/Y                                    CORA1229
      B(3)=-(16.D0-U*(2.D0*A-10.D0+U*(2.D0*A+1.D0)))/(Y*S)              CORA1230
      IF (LT) RETURN                                                    CORA1231
      C(1)=6.D0*(A+2.D0)/(S*Y*X**2)                                     CORA1232
      C(2)=-(8.D0-(2.D0*A+1.D0)*(U-6.D0*(A+2.D0)/X))/(Y*X*V)            CORA1233
      C(3)=-(8.D0+3.D0*U-30.D0*(A+2.D0)/X)/(Y*X*V*S)                    CORA1234
      C(4)=(6.D0*A-12.D0+(15.D0*U-(60.D0*A+30.D0)*(A+2.D0)/X)/S**2)/(Y*XCORA1235
     1**2)                                                              CORA1236
      GO TO 70                                                          CORA1237
C MULTIPOLE LQ=5 L1=L2-3.                                               CORA1238
   63 Y=420.D0*(A+2.D0)*(A+3.D0)*DSQRT(S)                               CORA1239
      B(2)=(48.D0-U*(2.D0*A-2.D0)*(9.D0-U*(2.D0*A+3.D0)))/(Y*S)         CORA1240
      B(3)=-(48.D0-U*(18.D0*A+6.D0-U*(2.D0*A+1.D0)*(2.D0*A+3.D0)))/Y    CORA1241
      IF (LT) RETURN                                                    CORA1242
      C1=U-(10.D0*A+30.D0)/X                                            CORA1243
      C(1)=(6.D0*A+12.D0)*(3.D0-(2.D0*A+3.D0)*C1)/(Y*X**2*S**2)         CORA1244
      C(2)=((24.D0*A+162.D0)*(A+2.D0)/X-24.D0+(12.D0*A-3.D0)*U-(2.D0*A+1CORA1245
     1.D0)*(2.D0*A+3.D0)*(U**2-(6.D0*A+12.D0)*C1/X))/(Y*X*S*V)          CORA1246
      C(3)=-(24.D0-(6.D0*A+9.D0)*(U-(10.D0*A+20.D0)/X))/(Y*X*V)         CORA1247
      C(4)=-(2.D0*A+1.D0)*C(3)/W-(30.D0*A+60.D0)/(Y*X**2*S)             CORA1248
      GO TO 70                                                          CORA1249
C MULTIPOLE LQ=5 L1=L2-5.                                               CORA1250
   64 Y=3780.D0*(A+2.D0)*(A+3.D0)*S*DSQRT(S)                            CORA1251
      B(2)=(48.D0-U*(2.D0*A-2.D0)*(15.D0-U*(6.D0*A+6.D0-U*(2.D0*A+3.D0)*CORA1252
     1(2.D0*A+5.D0))))/(Y*S)                                            CORA1253
      B(3)=-(48.D0-U*(30.D0*A-6.D0-U*(12.D0*A**2+12.D0*A-9.D0-U*(8.D0*A*CORA1254
     1*3+36.D0*A**2+46.D0*A+15.D0))))/Y                                 CORA1255
      IF (LT) RETURN                                                    CORA1256
      C1=U**2-(10.D0*A+30.D0)*(U-(14.D0*A-7.D0)/X)/X                    CORA1257
      C(1)=(6.D0*A+12.D0)*(3.D0+(6.D0*A+24.D0)*U-(A+3.D0)*(260.D0*A+110.CORA1258
     1D0)/X+(2.D0*A+5.D0)*(2.D0*A+3.D0)*C1)/(Y*X**2*S**2)               CORA1259
      C(2)=-(24.D0-(18.D0*A-9.D0)*U+(6.D0*A+12.D0)*(66.D0*A+183.D0)/X-(2CORA1260
     1.D0*A+3.D0)*(18.D0*U**2-(12.D0*A+24.D0)*((8.D0*A+29.D0)*U-(A+3.D0)CORA1261
     2*(200.D0*A-40.D0)/X)/X+(2.D0*A+5.D0)*(2.D0*A+1.D0)*(U**3-(6.D0*A+1CORA1262
     32.D0)*C1/X)))/(Y*X*V*S)                                           CORA1263
      C1=U**2-(10.D0*A+20.D0)*(U-(14.D0*A+42.D0)/X)/X                   CORA1264
      C(3)=-(24.D0-(12.D0*A+3.D0)*U+(6.D0*A+9.D0)*(2.D0*A+5.D0)*C1-(A+2.CORA1265
     1D0)*(360.D0*A+1170.D0)/X)/(Y*X*V)                                 CORA1266
      C(4)=(18.D0*A-36.D0+(6.D0*A+9.D0)*((6.D0*A+33.D0)*U+(2.D0*A+1.D0)*CORA1267
     1(2.D0*A+5.D0)*C1-(A+2.D0)*(260.D0*A+830.D0)/X))/(Y*X**2*S)        CORA1268
      GO TO 70                                                          CORA1269
   65 GO TO ( 66 , 73 , 67 , 73 , 68 , 73 , 69 ) , LL                   CORA1270
C MULTIPOLE LQ=6 L1=L2.                                                 CORA1271
   66 Y=120.D0*(A+2.D0)*(A+3.D0)*(A+4.D0)*S**2                          CORA1272
      B(2)=(32.D0+U*(32.D0-U*(2.D0*A-2.D0)))/Y                          CORA1273
      B(3)=-(32.D0+U*(48.D0-U*(4.D0*A-14.D0+U*(2.D0*A+1.D0))))/(Y*S)    CORA1274
      IF (LT) RETURN                                                    CORA1275
      C(1)=(A+2.D0)*(12.D0+6.D0*U-(60.D0*A+180.D0)/X)/(Y*X**2*S)        CORA1276
      C(2)=-(16.D0-U*(2.D0*A-12.D0+U*(2.D0*A+1.D0))+(6.D0*A+12.D0)*(2.D0CORA1277
     1*A-4.D0+(2.D0*A+1.D0)*(U-(10.D0*A+30.D0)/X))/X)/(Y*X*V)           CORA1278
      C(3)=-(16.D0+U*(2.D0*A+20.D0+3.D0*U)-(6.D0*A+12.D0)*(4.D0-2.D0*A+5CORA1279
     1.D0*U+(20.D0*A+10.D0)*(A+3.D0)/X)/X)/(Y*X*S*V)                    CORA1280
      C(4)=((12.D0*A-24.D0)*S**2+(6.D0*A+3.D0)*(U**2-(10.D0*A+20.D0)*(2.CORA1281
     1D0+U+(4.D0*A+2.D0)*(A+3.D0)/X)/X))/(Y*X**2*S**2)                  CORA1282
      RETURN                                                            CORA1283
C MULTIPOLE LQ=6 L1=L2-2.                                               CORA1284
   67 Y=840.D0*(A+2.D0)*(A+3.D0)*(A+4.D0)*S                             CORA1285
      B(2)=(160.D0-U*(2.D0*A-2.D0)*(16.D0-U*(2.D0*A+3.D0)))/Y           CORA1286
      B(3)=-(160.D0-U*(32.D0*A-112.D0-U*((4.D0*A-24.D0)*A-10.D0+U*(2.D0*CORA1287
     1A+3.D0)*(2.D0*A+1.D0))))/(Y*S)                                    CORA1288
      IF (LT) RETURN                                                    CORA1289
      C1=U-(10.D0*A+30.D0)/X                                            CORA1290
      C(1)=(60.D0-(12.D0*A+18.D0)*C1)*(A+2.D0)/(Y*X**2*S)               CORA1291
      C(2)=-(80.D0-(26.D0*A+4.D0)*U+(60.D0*A**2-240.D0)/X+(2.D0*A+1.D0)*CORA1292
     1(2.D0*A+3.D0)*(U**2-(6.D0*A+12.D0)*C1/X))/(Y*X*V)                 CORA1293
      C(3)=-(80.D0-U*(6.D0*A-36.D0)+60.D0*(A**2-4.D0)/X-(6.D0*A+9.D0)*(UCORA1294
     1**2-(10.D0*A+20.D0)*(U-(14.D0*A+42.D0)/X)/X))/(Y*X*V*S)           CORA1295
      C(4)=-(105.D0*(1.D0-(10.D0*A+20.D0)/X)-(60.D0*A-15.D0)*S**2+(6.D0*CORA1296
     1A+3.D0)*(2.D0*A+3.D0)*(U*S**2-(10.D0*A+20.D0)*(1.D0+U-(14.D0*A+42.CORA1297
     2D0)/X)/X))/(Y*X**2*S**2)                                          CORA1298
      GO TO 70                                                          CORA1299
C MULTIPOLE LQ=6 L1=L2-4.                                               CORA1300
   68 Y=7560.D0*(A+2.D0)*(A+3.D0)*(A+4.D0)*S                            CORA1301
      B(2)=(480.D0-U*(2.D0*A-2.D0)*(96.D0-U*(24.D0*A+33.D0-U*(2.D0*A+3.DCORA1302
     10)*(2.D0*A+5.D0))))/(Y*S)                                         CORA1303
      B(3)=-(480.D0-U*(192.D0*A+48.D0-U*(2.D0*A+3.D0)*(24.D0*A+6.D0-U*(2CORA1304
     1.D0*A+1.D0)*(2.D0*A+5.D0))))/Y                                    CORA1305
      IF (LT) RETURN                                                    CORA1306
      C1=(U**2-(10.D0*A+30.D0)*(U-(14.D0*A+56.D0)/X)/X)                 CORA1307
      C(1)=(6.D0*A+12.D0)*(30.D0-(12.D0*A+3.D0)*U-(A+3.D0)*(80.D0*A+470.CORA1308
     1D0)/X+(2.D0*A+3.D0)*(2.D0*A+5.D0)*C1)/(Y*X**2*S**2)               CORA1309
      C(2)=-(240.D0-U*(126.D0*A-36.D0)+180.D0*(A**2-4.D0)/X+(2.D0*A+3.D0CORA1310
     1)*((18.D0*A-9.D0)*U**2-(6.D0*A+12.D0)*((2.D0*A-49.D0)*U+(10.D0*A+3CORA1311
     20.D0)*(22.D0*A+109.D0)/X)/X-(2.D0*A+1.D0)*(2.D0*A+5.D0)*(U**3-(6.DCORA1312
     30*A+12.D0)*C1/X)))/(Y*X*W*S**2)                                   CORA1313
      C1=(2.D0*A+5.D0)*(U**2-(10.D0*A+20.D0)*(U-(14.D0*A+42.D0)/X)/X)   CORA1314
      C(3)=-(240.D0-(66.D0*A+84.D0)*U+180.D0*(A**2-4.D0)/X+(6.D0*A+9.D0)CORA1315
     1*C1)/(Y*X*V)                                                      CORA1316
      C(4)=((A-2.D0)*(180.D0-(72.D0*A+108.D0)*U)+(6.D0*A+9.D0)*((2.D0*A+CORA1317
     11.D0)*C1-(A+2.D0)*(80.D0*A+740.D0)/X))/(Y*X**2*S)                 CORA1318
      GO TO 70                                                          CORA1319
C MULTIPOLE LQ=6 L1=L2-6.                                               CORA1320
   69 Y=83160.D0*(A+2.D0)*(A+3.D0)*(A+4.D0)*S**2                        CORA1321
      B(2)=(480.D0-U*(2.D0*A-2.D0)*(144.D0-U*(54.D0*A+57.D0-U*(2.D0*A+5.CORA1322
     1D0)*(8.D0*A+6.D0-U*(2.D0*A+7.D0)*(2.D0*A+3.D0)))))/(Y*S)          CORA1323
      B(3)=-(480.D0-U*(288.D0*A-48.D0-U*(108.D0*A**2+120.D0*A-78.D0-U*(2CORA1324
     1.D0*A+3.D0)*(2.D0*A+5.D0)*(8.D0*A-5.D0-U*(2.D0*A+1.D0)*(2.D0*A+7.DCORA1325
     20)))))/Y                                                          CORA1326
      IF (LT) RETURN                                                    CORA1327
      C1=U**3-(10.D0*A+30.D0)*(U**2-(14.D0*A+56.D0)*(U-(18.D0*A-9.D0)/X)CORA1328
     1/X)/X                                                             CORA1329
      C(1)=(6.D0*A+12.D0)*(30.D0-(18.D0*A-3.D0)*U+(10.D0*A+30.D0)*(118.DCORA1330
     10*A+457.D0)/X-(2.D0*A+5.D0)*((4.D0*A+36.D0)*U**2-(10.D0*A+30.D0)*(CORA1331
     2(24.D0*A+106.D0)*U-(14.D0*A+56.D0)*(52.D0*A+6.D0)/X)/X+(2.D0*A+7.DCORA1332
     30)*(2.D0*A+3.D0)*C1))/(Y*X**2*S**2)                               CORA1333
      C(2)=-(240.D0-(174.D0*A-84.D0)*U+((72.D0*A+36.D0)*A-63.D0)*U**2+(1CORA1334
     180.D0*(A**2-4.D0)-(6.D0*A+12.D0)*(((136.D0*A+772.D0)*A+1377.D0)*U-CORA1335
     2(10.D0*A+30.D0)*((712.D0*A+3370.D0)*A+2193.D0)/X))/X-(2.D0*A+5.D0)CORA1336
     3*(2.D0*A+3.D0)*((2.D0*A-26.D0)*U**3+(6.D0*A+12.D0)*((14.D0*A+82.D0CORA1337
     4)*U**2-(10.D0*A+30.D0)*((38.D0*A+166.D0)*U-(14.D0*A+56.D0)*(70.D0*CORA1338
     5A-19.D0)/X)/X)/X-(2.D0*A+7.D0)*(2.D0*A+1.D0)*(U**4-6.D0*(A+2.D0)*CCORA1339
     61/X)))/(Y*X*V*S)                                                  CORA1340
      C1=U**3-(10.D0*A+20.D0)*(U**2-(14.D0*A+42.D0)*(U-(18.D0*A+72.D0)/XCORA1341
     1)/X)/X                                                            CORA1342
      C(3)=-(240.D0-(114.D0*A+36.D0)*U+180*(A**2-4.D0)/X+(6.D0*A+15.D0)*CORA1343
     1((6.D0*A-1.D0)*U**2+(10.D0*A+20.D0)*((10.D0*A+57.D0)*U-(14.D0*A+42CORA1344
     2.D0)*(34.D0*A+141.D0)/X)/X-(2.D0*A+7.D0)*(2.D0*A+3.D0)*C1))/(Y*X*VCORA1345
     3)                                                                 CORA1346
      C(4)=(180.D0*A-360.D0-(108.D0*A+72.D0)*(A-2.D0)*U+(60.D0*A+120.D0)CORA1347
     1*((118.D0*A+796.D0)*A+1401.D0)/X-(2.D0*A+5.D0)*(6.D0*A+9.D0)*((4.DCORA1348
     20*A+47.D0)*U**2-(10.D0*A+20.D0)*((24.D0*A+117.D0)*U-(14.D0*A+42.D0CORA1349
     3)*(52.D0*A+215.D0)/X)/X+(2.D0*A+7.D0)*(2.D0*A+1.D0)*C1))/(Y*X**2*SCORA1350
     4)                                                                 CORA1351
   70 IF (LL.EQ.L2-L1+1) RETURN                                         CORA1352
      C1=C(3)                                                           CORA1353
      C(3)=C(2)                                                         CORA1354
      C(2)=C1                                                           CORA1355
      RETURN                                                            CORA1356
   71 WRITE (MW,1000) LQ,LL                                             CORA1357
      RETURN                                                            CORA1358
   72 WRITE (MW,1001) LQ,LL                                             CORA1359
      RETURN                                                            CORA1360
   73 WRITE (MW,1002) LQ,LL                                             CORA1361
      RETURN                                                            CORA1362
 1000 FORMAT (' IN CORA: LQ =',I3,' TOO LARGE OR L2-L1+1=',I3,' OUT OF BCORA1363
     1OUNDS.')                                                          CORA1364
 1001 FORMAT (' IN CORA: COEFFICIENTS SUPPRESSED FOR LQ =',I3,' AND L1-LCORA1365
     12+1=',I3)                                                         CORA1366
 1002 FORMAT (' IN CORA: COEFFICIENTS NOT GIVEN BY THE METHOD FOR LQ =',CORA1367
     1I3,' AND L2-L1+1=',I3)                                            CORA1368
      END                                                               CORA1369
C 18/10/12                                                      ECIS12  INTI-000
      SUBROUTINE INTI(FAM,X,FR,GR,WRE,PAD,IPE,ISM,KAB,W,ITERM,NC,V,NVI,MINTI-001
     1C,NAT,AT,LMD,AG,NCIN,NNI,ITERR,LO)                                INTI-002
C  E. C. I. S. METHOD: SCHROEDINGER EQUATION DRIVING ROUTINE.           INTI-003
C  INTI CALLS INSH  TO SOLVE THE SINGLE HOMOGENEOUS EQUATIONS,          INTI-004
C             INSI  TO SOLVE THE SINGLE INHOMOGENEOUS EQUATIONS.        INTI-005
C  PADE APPROXIMANTS OF TYPE I MAY BE USED TO ACCELERATE THE CONVERGENCEINTI-006
C INPUT:     FAM(*,I):MATCHING VALUES FOR I=1 TO 6, CONSTANTS OF EACH   INTI-007
C                     EQUATION FOR I=7 TO 12.                           INTI-008
C            ISM:     NUMBER OF RADIAL POINTS.                          INTI-009
C            KAB:     MAXIMUM NUMBER OF COUPLED CHANNELS.               INTI-010
C            ITERM:   MAXIMUM NUMBER OF ITERATIONS AND DIM. OF PAD.     INTI-011
C            NC:      NUMBER OF COUPLED EQUATIONS.                      INTI-012
C            V:       REAL, IMAGINARY POTENTIALS AND COUPLINGS.         INTI-013
C            NVI:     ADDRESSES OF COUPLINGS.                           INTI-014
C            MC:      NUCLEAR STATE NUMBER, ANGULAR MOMENTA....         INTI-015
C            NAT,AT:  TABLE OF COUPLING COEFFICIENTS.                   INTI-016
C            LMD:     FIRST DIMENSION OF TABLES NAT AND AT.             INTI-017
C            AG:      COULOMB INTEGRALS FOR COULOMB CORRECTIONS.        INTI-018
C            NCIN:    NUMBER OF SOLUTIONS.                              INTI-019
C            LO(I):   LOGICAL CONTROLS:                                 INTI-020
C               LO(22) =.TRUE. NO USE OF PADE APPROXIMANTS.             INTI-021
C               LO(23) =.TRUE. NO USE OF PADE AND SHIFT TO USUAL COUPLEDINTI-022
C                              EQUATIONS WHEN THERE IS NO CONVERGENCE.  INTI-023
C               LO(29) =.TRUE. NO DIAGONAL TERMS IN SECOND MEMBER.      INTI-024
C               LO(30) =.TRUE. PURE DWBA CALCULATION.                   INTI-025
C               LO(44) =.TRUE. COULOMB CORRECTIONS.                     INTI-026
C               LO(53) =.TRUE. OUTPUT OF THE NUMBER OF ITERATIONS.      INTI-027
C               LO(57) =.TRUE. OUTPUT PHASE-SHIFTS AT EACH ITERATION.   INTI-028
C               LO(104)=.TRUE. CONVERGENCE IS OBTAINED IN THE ITERATION.INTI-029
C               LO(106)=.TRUE. WHEN THE ITERATION IS NOT THE LAST ONE   INTI-030
C                              ALLOWED.                                 INTI-031
C               LO(107)=.TRUE. ALL THE COUPLINGS CALCULATED BEFOREHAND. INTI-032
C               LO(110)=.TRUE. DERIVATIVES ARE NEEDED.                  INTI-033
C               LO(121)=.TRUE. OPTICAL MODEL WITHOUT COUPLING.          INTI-034
C               LO(133)=.TRUE. STORE SCALAR AND COULOMB POTENTIAL       INTI-035
C                              INDEPENDENTLY.                           INTI-036
C OUTPUT:    FAM(*,I):SCATTERING COEFFICIENTS FOR I>9.                  INTI-037
C            NNI:     NUMBER OF EQUATIONS WITH NEGLIGIBLE INHOMOGENEOUS INTI-038
C                     TERM.                                             INTI-039
C            ITERR:   LARGEST NUMBER OF ITERATIONS DONE FOR THIS J.     INTI-040
C WORKING AREAS:                                                        INTI-041
C            X:       USED IN INSH AND INSI.                            INTI-042
C            FR:      SOLUTIONS OF HOMOGENEOUS EQUATIONS.               INTI-043
C            GR:      SOLUTIONS OF COUPLED EQUATIONS.                   INTI-044
C            WRE:     REAL/IMAGINARY INHOMOGENEOUS TERM.                INTI-045
C            PAD:     PADE APPROXIMANTS.                                INTI-046
C            IPE(I):  FIRST NON NEGLIGIBLE POINT OF UNCOUPLED FUNCTIONS INTI-047
C                     FOR I=1 TO NC, OF COUPLED FUNCTIONS FOR I>NC.     INTI-048
C            W:       FREE PART OF THE STORAGE FOR COUPLINGS            INTI-049
C                                                                       INTI-050
C FOR THE COMMON  /CONVE/ SEE CALX.                                     INTI-051
C FOR THE COMMON  /POTE2/ SEE REDM.                                     INTI-052
C                                                                       INTI-053
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /CONVE/:                     INTI-054
C  BJM:       CONVERGENCE COEFFICIENT OF IMAGINARY POTENTIAL.           INTI-055
C   USED:     BJM.                                                      INTI-056
C                                                                       INTI-057
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     INTI-058
C  ITY(2):    STARTING ADDRESS OF IMAGINARY CENTRAL POTENTIAL.          INTI-059
C  ITY(9):    STARTING ADDRESS OF COULOMB CENTRAL POTENTIAL.            INTI-060
C   USED:     ITY(2),ITY(9).                                            INTI-061
C                                                                       INTI-062
C***********************************************************************INTI-063
      IMPLICIT REAL*8 (A-H,O-Z)                                         INTI-064
      LOGICAL LO(150)                                                   INTI-065
      DIMENSION FAM(KAB,*),X(*),FR(ISM,4,*),GR(2,ISM,*),WRE(2,*),PAD(2,IINTI-066
     1TERM,*),IPE(*),W(ISM,*),V(ISM,*),NVI(KAB,KAB,4),MC(KAB,6),NAT(2*LMINTI-067
     2D,*),AT(LMD,*),AG(KAB,KAB,4),Z(4),Y(2)                            INTI-068
      COMMON /CONVE/ H,BJM,EITER,ACONV,CONJ,HCONV                       INTI-069
      COMMON /INOUT/ MR,MW,MS                                           INTI-070
      COMMON /POTE2/ ITY(12),INVT,INTV,INSL,NPX                         INTI-071
C COMPUTE ALL COUPLING POTENTIALS AND SOLVE ALL HOMOGENEOUS EQUATIONS.  INTI-072
      DO 5 I=1,NC                                                       INTI-073
      I1=MC(I,4)                                                        INTI-074
      IF (I1.LT.0) GO TO 1                                              INTI-075
      CALL INSH(FR(1,1,I),I,I1,KT,FAM,X,KAB,ISM,V,NAT,AT,LMD,NVI,LO)    INTI-076
      IF (.NOT.(LO(121))) IPE(I)=KT                                     INTI-077
      GO TO 4                                                           INTI-078
    1 I1=-I1                                                            INTI-079
      IF (I.EQ.I1) GO TO 4                                              INTI-080
      DO 3 J=1,4                                                        INTI-081
      DO 2 IS=1,ISM                                                     INTI-082
    2 FR(IS,J,I)=FR(IS,J,I1)                                            INTI-083
    3 CONTINUE                                                          INTI-084
      IPE(I)=IPE(I1)                                                    INTI-085
    4 IF (LO(57)) WRITE (MW,1000) FAM(I,9),FAM(I,10),I,IPE(I)           INTI-086
    5 CONTINUE                                                          INTI-087
      IF ((.NOT.LO(107)).OR.LO(121)) GO TO 24                           INTI-088
      IVV=0                                                             INTI-089
C CALCULATION OF THE NON DIAGONAL COUPLING POTENTIALS.                  INTI-090
      DO 23 IC=1,NC                                                     INTI-091
      DO 19 IP=1,NC                                                     INTI-092
      K1=NVI(IP,IC,1)                                                   INTI-093
      K2=NVI(IP,IC,2)                                                   INTI-094
      K3=NVI(IP,IC,3)                                                   INTI-095
      IF (K2.EQ.K3.AND.IP.LT.IC) GO TO 17                               INTI-096
      DO 6 J=1,4                                                        INTI-097
    6 NVI(IP,IC,J)=0                                                    INTI-098
C NON DERIVATIVE COUPLING POTENTIALS FOR IK=1.                          INTI-099
C DERIVATIVE COUPLING POTENTIALS FOR IK=3.                              INTI-100
      DO 16 IK=1,3,2                                                    INTI-101
      IF (K1.GT.K2) GO TO 15                                            INTI-102
      IF (LO(29).AND.(IC.EQ.IP)) GO TO 15                               INTI-103
      IVV=IVV+1                                                         INTI-104
      NVI(IP,IC,IK)=IVV                                                 INTI-105
      NIMA=0                                                            INTI-106
      DO 7 IS=1,ISM                                                     INTI-107
    7 W(IS,IVV)=0.D0                                                    INTI-108
      DO 11 K=K1,K2                                                     INTI-109
      IF (AT(2,K).EQ.0.D0) GO TO 9                                      INTI-110
      KT=NAT(1,K)                                                       INTI-111
      IF (NAT(2,K).NE.0) NIMA=NIMA+1                                    INTI-112
      DO 8 IS=1,ISM                                                     INTI-113
    8 W(IS,IVV)=W(IS,IVV)+AT(2,K)*V(IS,KT)                              INTI-114
    9 IF (.NOT.LO(133)) GO TO 11                                        INTI-115
      IF (AT(3,K).EQ.0.D0) GO TO 11                                     INTI-116
      KT=NAT(1,K)+ITY(9)                                                INTI-117
      DO 10 IS=1,ISM                                                    INTI-118
   10 W(IS,IVV)=W(IS,IVV)+AT(3,K)*V(IS,KT)                              INTI-119
   11 CONTINUE                                                          INTI-120
      IF (NIMA.EQ.0) GO TO 15                                           INTI-121
      IVV=IVV+1                                                         INTI-122
      NVI(IP,IC,IK+1)=IVV                                               INTI-123
      DO 12 IS=1,ISM                                                    INTI-124
   12 W(IS,IVV)=0.D0                                                    INTI-125
      DO 14 K=K1,K2                                                     INTI-126
      IF (NAT(2,K).EQ.0) GO TO 14                                       INTI-127
      KT=NAT(2,K)+ITY(2)                                                INTI-128
      DO 13 IS=1,ISM                                                    INTI-129
   13 W(IS,IVV)=W(IS,IVV)+AT(2,K)*V(IS,KT)                              INTI-130
   14 CONTINUE                                                          INTI-131
C DERIVATIVE COUPLING POTENTIALS.                                       INTI-132
   15 K1=K2+1                                                           INTI-133
   16 K2=K3                                                             INTI-134
      GO TO 19                                                          INTI-135
C SYMMETRISATION OF THE TABLE.                                          INTI-136
   17 DO 18 K=1,4                                                       INTI-137
   18 NVI(IP,IC,K)=NVI(IC,IP,K)                                         INTI-138
   19 CONTINUE                                                          INTI-139
C CORRECTION TO AN INCREASE OF THE IMAGINARY POTENTIAL.                 INTI-140
      IF (BJM.EQ.0.D0) GO TO 23                                         INTI-141
      I1=MC(IC,4)+ITY(2)                                                INTI-142
      IF (NVI(IC,IC,2).EQ.0) GO TO 21                                   INTI-143
      K=NVI(IC,IC,2)                                                    INTI-144
      DO 20 IS=1,ISM                                                    INTI-145
   20 W(IS,K)=W(IS,K)-FAM(IC,7)*V(IS,I1)*BJM                            INTI-146
      GO TO 23                                                          INTI-147
   21 IVV=IVV+1                                                         INTI-148
      NVI(IC,IC,2)=IVV                                                  INTI-149
      DO 22 IS=1,ISM                                                    INTI-150
   22 W(IS,IVV)=-FAM(IC,7)*V(IS,I1)*BJM                                 INTI-151
   23 CONTINUE                                                          INTI-152
   24 NNI=0                                                             INTI-153
C LOOP ON SOLUTIONS.                                                    INTI-154
      DO 38 NCI=1,NCIN                                                  INTI-155
      NCI1=NCI+10                                                       INTI-156
      NCI2=NCI1+NCIN                                                    INTI-157
C SET THE ZERO'S ORDER SOLUTION.                                        INTI-158
      DO 25 IC=1,NC                                                     INTI-159
      IPE(IC+NC)=ISM+1                                                  INTI-160
      FAM(IC,NCI1)=0.D0                                                 INTI-161
   25 FAM(IC,NCI2)=0.D0                                                 INTI-162
      FAM(NCI,NCI1)=FAM(NCI,9)                                          INTI-163
      FAM(NCI,NCI2)=FAM(NCI,10)                                         INTI-164
      IF ((IPE(NCI).GT.ISM-3).OR.LO(121)) GO TO 38                      INTI-165
      DO 26 IS=1,ISM                                                    INTI-166
      GR(1,IS,NCI)=FR(IS,1,NCI)                                         INTI-167
   26 GR(2,IS,NCI)=FR(IS,2,NCI)                                         INTI-168
      IPE(NCI+NC)=IPE(NCI)                                              INTI-169
C DERIVE THE ZERO'S ORDER EQUATION.                                     INTI-170
      IF (LO(110)) CALL INSI(WRE,GR,GR(1,1,NC+1),FR,FAM,X,PAD,PAD,1,KAB,INTI-171
     1ISM,IPE,NCI,V,W,NAT,AT,LMD,NVI,NC,Y,Y,MC,LO,.TRUE.,Z)             INTI-172
      AMAX=0.D0                                                         INTI-173
C E. C. I. S. LOOP.                                                     INTI-174
      DO 36 KITER=1,ITERM                                               INTI-175
      ITERR=MAX0(ITERR,KITER)                                           INTI-176
      LO(104)=.TRUE.                                                    INTI-177
      LO(106)=((KITER.NE.ITERM).AND.(AMAX.LT.1.D10)).OR.LO(23)          INTI-178
      IF (AMAX.GT.1.D10) WRITE (MW,1001) AMAX,KITER                     INTI-179
      DO 35 IC=1,NC                                                     INTI-180
      I=MOD(IC+NCI-1,NC)+1                                              INTI-181
C COMPUTE SECOND MEMBERS AND SOLVE THE INHOMOGENEOUS EQUATIONS.         INTI-182
      DO 27 J=1,4                                                       INTI-183
   27 Z(J)=0.D0                                                         INTI-184
      IF (.NOT.LO(44)) GO TO 32                                         INTI-185
      DO 30 J=1,NC                                                      INTI-186
      IF ((LO(29).AND.(I.EQ.J)).OR.(IPE(J+NC).GE.ISM)) GO TO 30         INTI-187
C ORDER IN FG   F(EI)*F(EF),G(EI)*F(EF),F(EI)*G(EF),G(EI)*G(EF).        INTI-188
      IF (LO(22)) GO TO 28                                              INTI-189
      IJ=KITER                                                          INTI-190
      IF (1+MOD(J+NC-NCI-1,NC).GE.IC) IJ=IJ-1                           INTI-191
      IF (IJ.EQ.0) GO TO 28                                             INTI-192
      Y(1)=PAD(1,IJ,J)                                                  INTI-193
      Y(2)=PAD(2,IJ,J)                                                  INTI-194
      GO TO 29                                                          INTI-195
   28 Y(1)=FAM(J,NCI1)                                                  INTI-196
      Y(2)=FAM(J,NCI2)                                                  INTI-197
   29 Z(1)=Z(1)+Y(1)*AG(I,J,3)-Y(2)*AG(I,J,1)                           INTI-198
      Z(2)=Z(2)+Y(1)*AG(I,J,1)+Y(2)*AG(I,J,3)                           INTI-199
      Z(3)=Z(3)+Y(1)*AG(I,J,4)-Y(2)*AG(I,J,2)                           INTI-200
      Z(4)=Z(4)+Y(1)*AG(I,J,2)+Y(2)*AG(I,J,4)                           INTI-201
   30 CONTINUE                                                          INTI-202
      IF (I.EQ.NCI) GO TO 31                                            INTI-203
      Z(1)=Z(1)+AG(I,NCI,1)                                             INTI-204
      Z(3)=Z(3)+AG(I,NCI,2)                                             INTI-205
   31 Z(3)=Z(3)-Z(2)                                                    INTI-206
      Z(4)=Z(4)+Z(1)                                                    INTI-207
      Z(1)=Z(1)+FAM(I,9)*Z(3)-FAM(I,10)*Z(4)                            INTI-208
      Z(2)=Z(2)+Z(3)*FAM(I,10)+Z(4)*FAM(I,9)                            INTI-209
   32 IF (I.NE.NCI) GO TO 33                                            INTI-210
      Z(1)=Z(1)-FAM(I,9)                                                INTI-211
      Z(2)=Z(2)-FAM(I,10)                                               INTI-212
      Z(3)=Z(3)-1.D0                                                    INTI-213
   33 IF (LO(23).AND.(.NOT.LO(106))) LO(104)=.TRUE.                     INTI-214
      CALL INSI(WRE,GR,GR(1,1,NC+1),FR,FAM,X,PAD(1,1,I),PAD(1,1,NC+1),KIINTI-215
     1TER,KAB,ISM,IPE(NC+1),I,V,W,NAT,AT,LMD,NVI,NC,FAM(I,NCI1),FAM(I,NCINTI-216
     2I2),MC,LO,.FALSE.,Z)                                              INTI-217
      IF (IPE(I+NC).GE.ISM) GO TO 34                                    INTI-218
      AMAX=DMAX1(AMAX,DABS(FAM(I,NCI1))+DABS(FAM(I,NCI2)))              INTI-219
      IF (I.NE.NCI.AND.LO(30)) IPE(I+NC)=ISM+1                          INTI-220
      GO TO 35                                                          INTI-221
   34 FAM(I,NCI1)=-Z(1)                                                 INTI-222
      FAM(I,NCI2)=-Z(2)                                                 INTI-223
      IF (LO(57)) WRITE (MW,1002)                                       INTI-224
      IF (KITER.EQ.1.AND.(.NOT.LO(44))) NNI=NNI+1                       INTI-225
      IF (I.EQ.NCI) IPE(NCI+NC)=IPE(NCI)                                INTI-226
   35 CONTINUE                                                          INTI-227
      IF (LO(104).OR.(AMAX.GT.1.D10.AND.LO(23))) GO TO 37               INTI-228
   36 CONTINUE                                                          INTI-229
      KITER=MIN0(KITER,ITERM)                                           INTI-230
   37 IF (LO(53)) WRITE (MW,1003) KITER                                 INTI-231
   38 CONTINUE                                                          INTI-232
      NNI=NNI/NCIN                                                      INTI-233
      RETURN                                                            INTI-234
 1000 FORMAT (2D30.15,5X,2I5)                                           INTI-235
 1001 FORMAT (' MAXIMUM',D15.6,' OBTAINED IN PREVIOUS ITERATION. LAST ONINTI-236
     1E IS',I3)                                                         INTI-237
 1002 FORMAT (5X,'THE INHOMOGENEOUS TERM IS NEGLECTED.')                INTI-238
 1003 FORMAT (5X,I5,' ITERATIONS.')                                     INTI-239
      END                                                               INTI-240
C 18/10/12                                                      ECIS12  INSH-000
      SUBROUTINE INSH(P,IC,I1,KT,FAM,X,KAB,ISM,V,NAT,AT,LMD,NVI,LO)     INSH-001
C  E. C. I. S. METHOD: INTEGRATION OF A SINGLE HOMOGENEOUS EQUATION BY  INSH-002
C  THE NUMEROV METHOD       - SCHROEDINGER EQUATION -                   INSH-003
C INPUT:     IC:      CHANNEL NUMBER OF THE EQUATION.                   INSH-004
C            FAM(*,I):MATCHING VALUES FOR I=1 TO 4,                     INSH-005
C                     WAVE NUMBER FOR I=6,                              INSH-006
C                     CONSTANTS OF THIS EQUATION FOR I=7 TO 12.         INSH-007
C            KAB:     MAXIMUM NUMBER OF COUPLED CHANNELS.               INSH-008
C            ISM:     NUMBER OF RADIAL POINTS.                          INSH-009
C            V:       REAL, IMAGINARY POTENTIALS AND COUPLINGS.         INSH-010
C            NAT,AT:  COUPLING COEFFICIENTS.                            INSH-011
C            LMD:     FIRST DIMENSION OF TABLES NAT AND AT.             INSH-012
C            NVI:     TABLE OF ADDRESSES IN NAT,AT.                     INSH-013
C            LO(I):   LOGICAL CONTROLS:                                 INSH-014
C               LO(26) =.TRUE. INTEGRATION STABILISED FOR LONG RANGE    INSH-015
C                              CONSTANT POTENTIAL.                      INSH-016
C               LO(27) =.TRUE. NUMEROV'S METHOD FOR SINGLE EQUATIONS.   INSH-017
C               LO(29) =.TRUE. NO DIAGONAL TERMS IN SECOND MEMBER.      INSH-018
C               LO(30) =.TRUE. PURE DWBA CALCULATION.                   INSH-019
C               LO(101)=.TRUE. THERE IS A REAL SPIN-ORBIT POTENTIAL.    INSH-020
C               LO(102)=.TRUE. THERE IS AN IMAGINARY SPIN-ORBIT         INSH-021
C                              POTENTIAL.                               INSH-022
C               LO(121)=.TRUE. OPTICAL MODEL WITHOUT COUPLING.          INSH-024
C               LO(133)=.TRUE. STORE SCALAR AND COULOMB POTENTIAL       INSH-027
C                              INDEPENDENTLY.                           INSH-028
C OUTPUT:    P(*,I):  REAL/IMAGINARY REGULAR SOLUTION FOR I=1 AND 2,    INSH-029
C                     REAL/IMAGINARY IRREGULAR SOLUTION FOR I=3 AND 4.  INSH-030
C            FAM(*,I):REAL/IMAGINARY PART OF ZERO'S ORDER SCATTERING    INSH-031
C                     COEFFICIENTS FOR I=9 AND 10.                      INSH-032
C            KT:    THE SOLUTION IS NEGLIGIBLE FOR THE FIRST KT POINTS. INSH-033
C WORKING AREA:                                                         INSH-034
C            X:     FOR THE INTEGRATION.                                INSH-035
C                                                                       INSH-036
C FOR THE COMMON  /CONVE/ SEE CALX.                                     INSH-037
C FOR THE COMMON  /POTE2/ SEE REDM.                                     INSH-038
C                                                                       INSH-039
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /CONVE/:                     INSH-040
C  BJM:       CONVERGENCE COEFFICIENT OF IMAGINARY POTENTIAL.           INSH-041
C  ACONV:     CONVERGENCE CRITERION FOR POTENTIAL AND FUNCTION.         INSH-042
C   USED:     BJM,ACONV.                                                INSH-043
C                                                                       INSH-044
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     INSH-045
C  ITY(2):    STARTING ADDRESS OF IMAGINARY CENTRAL POTENTIAL.          INSH-046
C  ITY(3):    STARTING ADDRESS OF REAL SPIN-ORBIT POTENTIAL.            INSH-047
C  ITY(4):    STARTING ADDRESS OF IMAGINARY SPIN-ORBIT POTENTIAL.       INSH-048
C  ITY(9):    STARTING ADDRESS OF COULOMB CENTRAL POTENTIAL.            INSH-049
C  ITY(10):   STARTING ADDRESS OF COULOMB SPIN-ORBIT POTENTIAL.         INSH-050
C   USED:     ITY(2),ITY(3),ITY(4),ITY(9),ITY(10).                      INSH-051
C                                                                       INSH-052
C***********************************************************************INSH-053
      IMPLICIT REAL*8 (A-H,O-Z)                                         INSH-054
      LOGICAL LO(150)                                                   INSH-055
      DIMENSION P(ISM,4),FAM(KAB,12),X(2,*),V(ISM,*),NAT(2*LMD,*),AT(LMDINSH-056
     1,*),NVI(KAB,KAB,2)                                                INSH-057
      COMMON /CONVE/ H,BJM,EITER,ACONV,CONJ,HCONV                       INSH-058
      COMMON /POTE2/ ITY(12),INVT,INTV,INSL,NPX                         INSH-059
      BCONV=ACONV                                                       INSH-060
C FOR CLOSED CHANNELS WHEN GREEN'S FUNCTION IS USED.                    INSH-061
      IF (FAM(IC,8).LT.0.D0) BCONV=1.D-15                               INSH-062
C COMPUTATION OF THE REGULAR SOLUTION.                                  INSH-063
      I2=I1+ITY(2)                                                      INSH-064
      DO 1 IS=1,ISM                                                     INSH-065
      X(1,IS+2)=FAM(IC,8)-FAM(IC,10)/DFLOAT(IS*IS)+FAM(IC,7)*V(IS,I1)   INSH-066
    1 X(2,IS+2)=FAM(IC,7)*V(IS,I2)*(1.D0+BJM)                           INSH-067
      IF ((.NOT.LO(101)).OR.(FAM(IC,9).EQ.0.D0)) GO TO 3                INSH-068
      I2=I1+ITY(3)                                                      INSH-069
      DO 2 IS=1,ISM                                                     INSH-070
    2 X(1,IS+2)=X(1,IS+2)+FAM(IC,9)*V(IS,I2)                            INSH-071
    3 IF (.NOT.LO(102))  GO TO 5                                        INSH-072
      I2=I1+ITY(4)                                                      INSH-073
      DO 4 IS=1,ISM                                                     INSH-074
    4 X(2,IS+2)=X(2,IS+2)+FAM(IC,9)*V(IS,I2)                            INSH-075
    5 IF (.NOT.LO(133)) GO TO 9                                         INSH-076
      IF (FAM(IC,11).EQ.0.D0) GO TO 7                                   INSH-077
      I2=I1+ITY(9)                                                      INSH-078
      DO 6 IS=1,ISM                                                     INSH-079
    6 X(1,IS+2)=X(1,IS+2)+FAM(IC,11)*V(IS,I2)                           INSH-080
    7 IF (FAM(IC,12).EQ.0.D0) GO TO 9                                   INSH-081
      I2=I1+ITY(10)                                                     INSH-082
      DO 8 IS=1,ISM                                                     INSH-083
    8 X(1,IS+2)=X(1,IS+2)+FAM(IC,12)*V(IS,I2)                           INSH-084
    9 IF (.NOT.LO(29)) GO TO 15                                         INSH-085
      K1=NVI(IC,IC,1)                                                   INSH-086
      K2=NVI(IC,IC,2)                                                   INSH-087
      IF (K1.GT.K2) GO TO 15                                            INSH-088
      DO 14 K=K1,K2                                                     INSH-089
      KT=NAT(1,K)                                                       INSH-090
      DO 10 IS=1,ISM                                                    INSH-091
   10 X(1,IS+2)=X(1,IS+2)+AT(2,K)*V(IS,KT)                              INSH-092
      IF (NAT(2,K).EQ.0) GO TO 12                                       INSH-093
      KT=NAT(2,K)+ITY(2)                                                INSH-094
      DO 11 IS=1,ISM                                                    INSH-095
   11 X(2,IS+2)=X(2,IS+2)+AT(2,K)*V(IS,KT)                              INSH-096
   12 IF (.NOT.LO(133)) GO TO 14                                        INSH-097
      IF (AT(3,K).EQ.0.D0) GO TO 14                                     INSH-098
      KT=NAT(1,K)+ITY(9)                                                INSH-099
      DO 13 IS=1,ISM                                                    INSH-100
   13 X(1,IS+2)=X(1,IS+2)+AT(3,K)*V(IS,KT)                              INSH-101
   14 CONTINUE                                                          INSH-102
   15 IF (LO(27)) GO TO 17                                              INSH-103
C MODIFIED NUMEROV METHOD.                                              INSH-104
      DO 16 IS=1,ISM                                                    INSH-105
      A=X(1,IS+2)**2-X(2,IS+2)**2                                       INSH-106
      IF (LO(26)) A=A-X(1,IS+2)**3/30.D0                                INSH-107
      X(2,IS+2)=X(2,IS+2)*(1.D0-X(1,IS+2)/6.D0)                         INSH-108
   16 X(1,IS+2)=X(1,IS+2)-A/12.D0                                       INSH-109
      GO TO 19                                                          INSH-110
C NUMEROV METHOD.                                                       INSH-111
   17 DO 18 IS=1,ISM                                                    INSH-112
      B=(12.D0+X(1,IS+2))**2+X(2,IS+2)**2                               INSH-113
      A=12.D0*(X(1,IS+2)*(12.D0+X(1,IS+2))+X(2,IS+2)**2)/B              INSH-114
      IF (LO(26)) A=A+X(1,IS+2)**3/240.D0                               INSH-115
      X(1,IS+2)=A                                                       INSH-116
   18 X(2,IS+2)=144.D0*X(2,IS+2)/B                                      INSH-117
   19 X(1,1)=0.D0                                                       INSH-118
      X(2,1)=0.D0                                                       INSH-119
      X(1,2)=1.D-15                                                     INSH-120
      X(2,2)=0.D0                                                       INSH-121
      DO 21 IS=1,ISM                                                    INSH-122
      P(IS,3)=X(1,IS+2)                                                 INSH-123
      P(IS,4)=X(2,IS+2)                                                 INSH-124
      HX=X(1,IS+1)*X(1,IS+2)-X(2,IS+1)*X(2,IS+2)                        INSH-125
      HY=X(2,IS+1)*X(1,IS+2)+X(1,IS+1)*X(2,IS+2)                        INSH-126
      X(1,IS+2)=X(1,IS+1)+X(1,IS+1)-X(1,IS)-HX                          INSH-127
      X(2,IS+2)=X(2,IS+1)+X(2,IS+1)-X(2,IS)-HY                          INSH-128
      IF (DABS(X(1,IS+2)).LT.1.D15) GO TO 21                            INSH-129
C  RENORMALISATION OF LARGE FUNCTION VALUES.                            INSH-130
      J=IS+2                                                            INSH-131
      DO 20 I=2,J                                                       INSH-132
      X(1,I)=X(1,I)*1.D-30                                              INSH-133
   20 X(2,I)=X(2,I)*1.D-30                                              INSH-134
   21 CONTINUE                                                          INSH-135
C END OF INTEGRATION.                                                   INSH-136
C MATCHING.                                                             INSH-137
      BRE=X(1,ISM)*FAM(IC,4)-FAM(IC,3)*X(1,ISM+2)                       INSH-138
      BIM=X(2,ISM)*FAM(IC,4)-FAM(IC,3)*X(2,ISM+2)                       INSH-139
      HX=X(1,ISM)*FAM(IC,2)-FAM(IC,1)*X(1,ISM+2)                        INSH-140
      HY=X(2,ISM)*FAM(IC,2)-FAM(IC,1)*X(2,ISM+2)                        INSH-141
      IF (FAM(IC,8).LT.0.D0) GO TO 22                                   INSH-142
      BIM=BIM+HX                                                        INSH-143
      BRE=BRE-HY                                                        INSH-144
   22 A=BRE*BRE+BIM*BIM                                                 INSH-145
      BRE=-BRE/A                                                        INSH-146
      BIM=BIM/A                                                         INSH-147
      FAM(IC,9)=BRE*HX-BIM*HY                                           INSH-148
      FAM(IC,10)=HX*BIM+HY*BRE                                          INSH-149
      IF (LO(121)) RETURN                                               INSH-150
      BRE=BRE/12.D0                                                     INSH-151
      BIM=BIM/12.D0                                                     INSH-152
C NORMALISATION OF THE REGULAR SOLUTION.                                INSH-153
      DO 23 IS=1,ISM                                                    INSH-154
      HX=X(1,IS)+10.D0*X(1,IS+1)+X(1,IS+2)                              INSH-155
      HY=X(2,IS)+10.D0*X(2,IS+1)+X(2,IS+2)                              INSH-156
      P(IS,1)=HX*BRE-HY*BIM                                             INSH-157
   23 P(IS,2)=HX*BIM+HY*BRE                                             INSH-158
C SEARCH OF THE FIRST NON NEGLIGIBLE VALUE.                             INSH-159
      DO 24 KT=1,ISM                                                    INSH-160
      IF ((DABS(P(KT,1))+DABS(P(KT,2))).GT.BCONV) GO TO 25              INSH-161
   24 CONTINUE                                                          INSH-162
   25 IF (LO(30)) RETURN                                                INSH-163
      HX=0.D0                                                           INSH-164
      HY=0.D0                                                           INSH-165
      IF (FAM(IC,8).LT.0.D0) GO TO 26                                   INSH-166
      HX=FAM(IC,1)                                                      INSH-167
      HY=FAM(IC,2)                                                      INSH-168
C COMPUTATION OF THE IRREGULAR SOLUTION - STARTING VALUES.              INSH-169
C  THE TWO LAST POINTS OF IMAGINARY POTENTIAL ARE ZERO.                 INSH-170
   26 X(2,ISM)=HX/FAM(IC,6)                                             INSH-171
      X(2,ISM+2)=HY/FAM(IC,6)                                           INSH-172
      X(1,ISM)=FAM(IC,3)/FAM(IC,6)                                      INSH-173
      X(1,ISM+2)=FAM(IC,4)/FAM(IC,6)                                    INSH-174
      BRE=2.D0-P(ISM,3)                                                 INSH-175
      X(1,ISM+1)=(X(1,ISM)+X(1,ISM+2))/BRE                              INSH-176
      X(2,ISM+1)=(X(2,ISM)+X(2,ISM+2))/BRE                              INSH-177
      J1=ISM-KT                                                         INSH-178
      IF (J1.LE.0) GO TO 28                                             INSH-179
C INTEGRATION.                                                          INSH-180
      DO 27 JS=1,J1                                                     INSH-181
      IS=ISM-JS                                                         INSH-182
      HX=X(1,IS+1)*P(IS,3)-X(2,IS+1)*P(IS,4)                            INSH-183
      HY=X(2,IS+1)*P(IS,3)+X(1,IS+1)*P(IS,4)                            INSH-184
      X(1,IS)=X(1,IS+1)+X(1,IS+1)-X(1,IS+2)-HX                          INSH-185
   27 X(2,IS)=X(2,IS+1)+X(2,IS+1)-X(2,IS+2)-HY                          INSH-186
C COMPUTATION OF IRREGULAR SOLUTION.                                    INSH-187
   28 DO 29 IS=KT,ISM                                                   INSH-188
      P(IS,3)=(X(1,IS)+10.D0*X(1,IS+1)+X(1,IS+2))/12.D0                 INSH-189
   29 P(IS,4)=(X(2,IS)+10.D0*X(2,IS+1)+X(2,IS+2))/12.D0                 INSH-190
      RETURN                                                            INSH-191
      END                                                               INSH-192
C 18/10/12                                                      ECIS12  INSI-000
      SUBROUTINE INSI(W,P,PD,PH,FAM,X,PAD1,PAD2,KITER,KAB,ISM,IPD,I,V,WWINSI-001
     1W,NAT,AT,LMD,NVI,NC,FAR,FAI,MC,LO,LT,Z)                           INSI-002
C  E. C. I. S. METHOD: INTEGRATION OF A SINGLE INHOMOGENEOUS EQUATION   INSI-003
C  BY THE NUMEROV METHOD       - SCHROEDINGER EQUATION -                INSI-004
C INPUT:     P:       COUPLED SOLUTION.                                 INSI-005
C            PD:      DERIVATIVE OF THE COUPLED SOLUTION.               INSI-006
C            PH:      HOMOGENEOUS SOLUTIONS.                            INSI-007
C            FAM(I):  WAVE NUMBER FOR I=1, COEFFICIENT OF CENTRAL       INSI-008
C                     POTENTIAL FOR I=3.                                INSI-009
C            KITER:   CURRENT ITERATION NUMBER.                         INSI-010
C            KAB:     MAXIMUM NUMBER OF EQUATIONS.                      INSI-011
C            ISM:     NUMBER OF RADIAL POINTS.                          INSI-012
C            IPD(IC): FUNCTION IC NEGLIGIBLE FOR THE FIRST IPD POINTS.  INSI-013
C            I:       CHANNEL NUMBER OF THE EQUATION.                   INSI-014
C            V:       REAL, IMAGINARY POTENTIALS AND COUPLINGS.         INSI-015
C            WWW:     COUPLING BETWEEN EQUATIONS COMPUTED IN INTI.      INSI-016
C            NAT,AT:  TABLE OF COUPLING COEFFICIENTS.                   INSI-017
C            LMD:     FIRST DIMENSION OF TABLES NAT AND AT.             INSI-018
C            NVI:     ADDRESSES OF COUPLING COEFFICIENTS.               INSI-019
C            NC:      NUMBER OF COUPLED CHANNELS.                       INSI-020
C            FAR,FAI: PHASE-SHIFTS TO UPDATE.                           INSI-021
C            MC:      NUCLEAR STATE NUMBER, ANGULAR MOMENTA....         INSI-022
C            LT:      .TRUE. TO COMPUTE ONLY THE DERIVATIVE.            INSI-023
C            Z:       COULOMB INTEGRAL FOR CORRECTIONS.                 INSI-024
C            LO(I):   LOGICAL CONTROLS:                                 INSI-025
C               LO(22) =.TRUE. NO USE OF PADE APPROXIMANTS.             INSI-026
C               LO(29) =.TRUE. NO DIAGONAL TERMS IN SECOND MEMBER.      INSI-027
C               LO(30) =.TRUE. PURE DWBA CALCULATION.                   INSI-028
C               LO(44) =.TRUE. COULOMB CORRECTIONS.                     INSI-029
C               LO(57) =.TRUE. OUTPUT PHASE-SHIFTS AT EACH ITERATION.   INSI-030
C               LO(92) =.TRUE. NON STANDARD OBSERVABLES AT EQUIDISTANT  INSI-031
C                              ANGLES.                                  INSI-031
C               LO(104)=.TRUE. CONVERGENCE IS OBTAINED IN THE ITERATION.INSI-031
C               LO(105)=.TRUE. CONVERGENCE OBTAINED FOR THIS EQUATION.  INSI-032
C               LO(107)=.TRUE. ALL THE COUPLINGS CALCULATED BEFOREHAND. INSI-033
C               LO(110)=.TRUE. DERIVATIVES ARE NEEDED.                  INSI-034
C OUTPUT:    P:       SOLUTION FOR EQUATION I.                          INSI-035
C            PD:      DERIVATIVE OF THE SOLUTION FOR EQUATION I.        INSI-036
C            FAR,FAI: SCATTERING COEFFICIENT.                           INSI-037
C WORKING AREAS:                                                        INSI-038
C            W(2,ISM):REAL/IMAGINARY SECOND MEMBER.                     INSI-039
C            PAD1:    ITERATION RESULTS FOR THE CHANNEL I.              INSI-040
C            PAD2:    WORKING FIELD OF PADE,TWICE LONGER THAN PAD1.     INSI-041
C            X:       INTEGRAL OF REGULAR SOLUTION WITH SECOND MEMBER.  INSI-042
C                                                                       INSI-043
C FOR THE COMMON  /CONVE/ SEE CALX.                                     INSI-044
C FOR THE COMMON  /POTE2/ SEE REDM.                                     INSI-045
C                                                                       INSI-046
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /CONVE/:                     INSI-047
C  H:         STEP SIZE FOR INTEGRATION.                                INSI-048
C  BJM:       CONVERGENCE COEFFICIENT OF IMAGINARY POTENTIAL.           INSI-049
C  EITER:     CONVERGENCE CRITERION FOR S-MATRIX.                       INSI-050
C  ACONV:     CONVERGENCE CRITERION FOR POTENTIAL AND FUNCTION.         INSI-051
C  HCONV:     ACONV*H*H CONVERGENCE CRITERION FOR SECOND MEMBERS.       INSI-052
C   USED:     H,BJM,EITER,ACONV,HCONV.                                  INSI-053
C                                                                       INSI-054
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     INSI-055
C  ITY(2):    STARTING ADDRESS OF IMAGINARY CENTRAL POTENTIAL.          INSI-056
C  ITY(9):    STARTING ADDRESS OF COULOMB CENTRAL POTENTIAL.            INSI-057
C   USED:     ITY(2),ITY(9).                                            INSI-058
C                                                                       INSI-059
C***********************************************************************INSI-060
      IMPLICIT REAL*8 (A-H,O-Z)                                         INSI-061
      LOGICAL LO(150),LT                                                INSI-062
      DIMENSION W(2,*),P(2,ISM,*),PD(2,ISM,*),PH(ISM,4,*),FAM(KAB,10),X(INSI-063
     12,*),PAD1(2,*),PAD2(2,*),IPD(*),V(ISM,*),WWW(ISM,*),NAT(2*LMD,*),AINSI-064
     2T(LMD,*),NVI(KAB,KAB,4),FAR(*),FAI(*),MC(KAB,6),Z(4)              INSI-065
      COMMON /CONVE/ H,BJM,EITER,ACONV,CONJ,HCONV                       INSI-066
      COMMON /INOUT/ MR,MW,MS                                           INSI-067
      COMMON /POTE2/ ITY(12),INVT,INTV,INSL,NPX                         INSI-068
      IF (LT) GO TO 39                                                  INSI-069
      ISM1=ISM+1                                                        INSI-070
C PUT ZERO IN THE INHOMOGENEOUS TERMS.                                  INSI-071
      DO 1 IS=1,ISM                                                     INSI-072
      W(1,IS)=0.D0                                                      INSI-073
    1 W(2,IS)=0.D0                                                      INSI-074
      IDP=ISM1                                                          INSI-075
C NON DERIVATIVE TERM OF COUPLING POTENTIALS.                           INSI-076
      DO 27 IC=1,NC                                                     INSI-077
      IF (IPD(IC).GT.ISM) GO TO 27                                      INSI-078
      IF (LO(107)) GO TO 9                                              INSI-079
C NO PREVIOUS CALCULATION OF COUPLING POTENTIALS.                       INSI-080
      IF (IC.NE.I) GO TO 3                                              INSI-081
      IF (BJM.EQ.0.D0) GO TO 3                                          INSI-082
      KT=MC(IC,4)+ITY(2)                                                INSI-083
      DO 2 IS=1,ISM                                                     INSI-084
      W(1,IS)=W(1,IS)+FAM(I,7)*V(IS,KT)*P(2,IS,IC)*BJM                  INSI-085
    2 W(2,IS)=W(2,IS)-FAM(I,7)*V(IS,KT)*P(1,IS,IC)*BJM                  INSI-086
    3 IF (LO(29).AND.(IC.EQ.I)) GO TO 27                                INSI-087
C NO PREVIOUS CALCULATION OF COUPLING POTENTIALS.                       INSI-088
      K1=NVI(IC,I,1)                                                    INSI-089
      K2=NVI(IC,I,2)                                                    INSI-090
      IF (K1.GT.K2) GO TO 15                                            INSI-091
      K3=IPD(IC)                                                        INSI-092
      IDP=MIN0(IDP,K3)                                                  INSI-093
      DO 8 K=K1,K2                                                      INSI-094
      KT=NAT(1,K)                                                       INSI-095
      DO 4 IS=K3,ISM                                                    INSI-096
      W(1,IS)=W(1,IS)+AT(2,K)*V(IS,KT)*P(1,IS,IC)                       INSI-097
    4 W(2,IS)=W(2,IS)+AT(2,K)*V(IS,KT)*P(2,IS,IC)                       INSI-098
      IF (NAT(2,K).EQ.0) GO TO 6                                        INSI-099
      KY=NAT(2,K)+ITY(2)                                                INSI-100
      DO 5 IS=K3,ISM                                                    INSI-101
      W(1,IS)=W(1,IS)-AT(2,K)*V(IS,KY)*P(2,IS,IC)                       INSI-102
    5 W(2,IS)=W(2,IS)+AT(2,K)*V(IS,KY)*P(1,IS,IC)                       INSI-103
    6 IF (.NOT.LO(133)) GO TO 8                                         INSI-104
      IF (AT(3,K).EQ.0.D0) GO TO 8                                      INSI-105
      KZ=NAT(1,K)+ITY(9)                                                INSI-106
      DO 7 IS=K3,ISM                                                    INSI-107
      W(1,IS)=W(1,IS)+AT(3,K)*V(IS,KZ)*P(1,IS,IC)                       INSI-108
    7 W(2,IS)=W(2,IS)+AT(3,K)*V(IS,KZ)*P(2,IS,IC)                       INSI-109
    8 CONTINUE                                                          INSI-110
      GO TO 15                                                          INSI-111
C COUPLING POTENTIALS ALREADY CALCULATED.                               INSI-112
    9 L1=NVI(IC,I,1)                                                    INSI-113
      L2=NVI(IC,I,2)                                                    INSI-114
      K3=IPD(IC)                                                        INSI-115
      IDP=MIN0(IDP,K3)                                                  INSI-116
      IF (L1.EQ.0) GO TO 13                                             INSI-117
      IF (L2.GT.0) GO TO 11                                             INSI-118
      DO 10 IS=K3,ISM                                                   INSI-119
      W(1,IS)=W(1,IS)+WWW(IS,L1)*P(1,IS,IC)                             INSI-120
   10 W(2,IS)=W(2,IS)+WWW(IS,L1)*P(2,IS,IC)                             INSI-121
      GO TO 15                                                          INSI-122
   11 DO 12 IS=K3,ISM                                                   INSI-123
      W(1,IS)=W(1,IS)+WWW(IS,L1)*P(1,IS,IC)-WWW(IS,L2)*P(2,IS,IC)       INSI-124
   12 W(2,IS)=W(2,IS)+WWW(IS,L1)*P(2,IS,IC)+WWW(IS,L2)*P(1,IS,IC)       INSI-125
      GO TO 15                                                          INSI-126
   13 IF (L2.EQ.0) GO TO 15                                             INSI-127
      DO 14 IS=K3,ISM                                                   INSI-128
      W(1,IS)=W(1,IS)-WWW(IS,L2)*P(2,IS,IC)                             INSI-129
   14 W(2,IS)=W(2,IS)+WWW(IS,L2)*P(1,IS,IC)                             INSI-130
   15 IF (.NOT.LO(110)) GO TO 27                                        INSI-131
C DERIVATIVE TERM OF COUPLING POTENTIALS.                               INSI-132
      IF (LO(107)) GO TO 21                                             INSI-133
C NO PREVIOUS CALCULATION OF COUPLING POTENTIALS.                       INSI-134
      K1=K2+1                                                           INSI-135
      K2=NVI(IC,I,3)                                                    INSI-136
      IF (K1.GT.K2) GO TO 27                                            INSI-137
      DO 20 K=K1,K2                                                     INSI-138
      KT=NAT(1,K)                                                       INSI-139
      DO 16 IS=K3,ISM                                                   INSI-140
      W(1,IS)=W(1,IS)+AT(2,K)*V(IS,KT)*PD(1,IS,IC)                      INSI-141
   16 W(2,IS)=W(2,IS)+AT(2,K)*V(IS,KT)*PD(2,IS,IC)                      INSI-142
      IF (NAT(2,K).EQ.0) GO TO 18                                       INSI-143
      KT=NAT(2,K)+ITY(2)                                                INSI-144
      DO 17 IS=K3,ISM                                                   INSI-145
      W(1,IS)=W(1,IS)-AT(2,K)*V(IS,KT)*PD(2,IS,IC)                      INSI-146
   17 W(2,IS)=W(2,IS)+AT(2,K)*V(IS,KT)*PD(1,IS,IC)                      INSI-147
   18 IF (.NOT.LO(133)) GO TO 20                                        INSI-148
      IF (AT(3,K).EQ.0.D0) GO TO 20                                     INSI-149
      KT=NAT(2,K)+ITY(9)                                                INSI-150
      DO 19 IS=K3,ISM                                                   INSI-151
      W(1,IS)=W(1,IS)+AT(3,K)*V(IS,KT)*P(1,IS,IC)                       INSI-152
   19 W(2,IS)=W(2,IS)+AT(3,K)*V(IS,KT)*P(2,IS,IC)                       INSI-153
   20 CONTINUE                                                          INSI-154
      GO TO 27                                                          INSI-155
C COUPLING POTENTIALS ALREADY CALCULATED.                               INSI-156
   21 L1=NVI(IC,I,3)                                                    INSI-157
      L2=NVI(IC,I,4)                                                    INSI-158
      IF (L1.LE.0) GO TO 25                                             INSI-159
      IF (L2.GT.0) GO TO 23                                             INSI-160
      DO 22 IS=K3,ISM                                                   INSI-161
      W(1,IS)=W(1,IS)+WWW(IS,L1)*PD(1,IS,IC)                            INSI-162
   22 W(2,IS)=W(2,IS)+WWW(IS,L1)*PD(2,IS,IC)                            INSI-163
      GO TO 27                                                          INSI-164
   23 DO 24 IS=K3,ISM                                                   INSI-165
      W(1,IS)=W(1,IS)+WWW(IS,L1)*PD(1,IS,IC)-WWW(IS,L2)*PD(2,IS,IC)     INSI-166
   24 W(2,IS)=W(2,IS)+WWW(IS,L1)*PD(2,IS,IC)+WWW(IS,L2)*PD(1,IS,IC)     INSI-167
      GO TO 27                                                          INSI-168
   25 IF (L2.EQ.0) GO TO 27                                             INSI-169
      DO 26 IS=K3,ISM                                                   INSI-170
      W(1,IS)=W(1,IS)-WWW(IS,L2)*PD(2,IS,IC)                            INSI-171
   26 W(2,IS)=W(2,IS)+WWW(IS,L2)*PD(1,IS,IC)                            INSI-172
   27 CONTINUE                                                          INSI-173
      IPD(I)=IDP                                                        INSI-174
C SEARCH FOR THE FIRST NON NEGLIGIBLE VALUE.                            INSI-175
      IF (IDP.GT.ISM) GO TO 42                                          INSI-176
      DO 28 IS=IDP,ISM                                                  INSI-177
      IF ((DABS(W(1,IS))+DABS(W(2,IS))).GT.HCONV) GO TO 29              INSI-178
   28 CONTINUE                                                          INSI-179
   29 IPD(I)=IS                                                         INSI-180
      KT=MAX0(IPD(I),1)                                                 INSI-181
      IF (IPD(I).GE.ISM) GO TO 42                                       INSI-182
      IF (.NOT.LO(44)) GO TO 30                                         INSI-183
      W(1,ISM)=0.D0                                                     INSI-184
      W(2,ISM)=0.D0                                                     INSI-185
C INTEGRAL OF THE REGULAR FUNCTION WITH THE SECOND MEMBER.              INSI-186
   30 X(1,KT)=-PH(KT,2,I)*W(2,KT)+PH(KT,1,I)*W(1,KT)                    INSI-187
      X(2,KT)=PH(KT,1,I)*W(2,KT)+PH(KT,2,I)*W(1,KT)                     INSI-188
      KKT=KT+1                                                          INSI-189
      IF (KKT.GT.ISM) GO TO 32                                          INSI-190
      DO 31 IS=KKT,ISM                                                  INSI-191
      X(1,IS)=X(1,IS-1)+PH(IS,1,I)*W(1,IS)-PH(IS,2,I)*W(2,IS)           INSI-192
   31 X(2,IS)=X(2,IS-1)+PH(IS,1,I)*W(2,IS)+PH(IS,2,I)*W(1,IS)           INSI-193
C SCATTERING COEFFICIENTS.                                              INSI-194
   32 BRE=X(1,ISM)/(H*FAM(I,5))-Z(1)                                    INSI-195
      BIM=X(2,ISM)/(H*FAM(I,5))-Z(2)                                    INSI-196
      IF (LO(30)) GO TO 38                                              INSI-197
      HX=Z(3)*H                                                         INSI-198
      HY=Z(4)*H                                                         INSI-199
      IST=ISM+KT                                                        INSI-200
C INTEGRAL OF THE IRREGULAR FUNCTION WITH THE SECOND MEMBER IN HX/HY    INSI-201
C AND COMPUTATION OF THE SOLUTION WITH THE CORRECTION TERM W/12.        INSI-202
      DO 33 IS=KT,ISM                                                   INSI-203
      JS=IST-IS                                                         INSI-204
      P(1,JS,I)=(X(1,JS)*PH(JS,3,I)-X(2,JS)*PH(JS,4,I)-HX*PH(JS,1,I)+HY*INSI-205
     1PH(JS,2,I))/H-W(1,JS)/12.D0                                       INSI-206
      P(2,JS,I)=(X(1,JS)*PH(JS,4,I)+X(2,JS)*PH(JS,3,I)-HY*PH(JS,1,I)-HX*INSI-207
     1PH(JS,2,I))/H-W(2,JS)/12.D0                                       INSI-208
      HX=HX-PH(JS,3,I)*W(1,JS)+PH(JS,4,I)*W(2,JS)                       INSI-209
   33 HY=HY-PH(JS,3,I)*W(2,JS)-PH(JS,4,I)*W(1,JS)                       INSI-210
      IF (KT.EQ.1) GO TO 35                                             INSI-211
      K=KT-1                                                            INSI-212
      DO 34 IS=1,K                                                      INSI-213
      P(1,IS,I)=-(HX*PH(IS,1,I)-HY*PH(IS,2,I))/H                        INSI-214
   34 P(2,IS,I)=-(HY*PH(IS,1,I)+HX*PH(IS,2,I))/H                        INSI-215
   35 DO 36 KT=1,ISM                                                    INSI-216
      IF ((DABS(P(1,KT,I))+DABS(P(2,KT,I))).GT.ACONV) GO TO 37          INSI-217
   36 CONTINUE                                                          INSI-218
   37 IPD(I)=KT                                                         INSI-219
      IF (LO(22)) GO TO 38                                              INSI-220
      PAD1(1,KITER)=BRE                                                 INSI-221
      PAD1(2,KITER)=BIM                                                 INSI-222
C  TEST OF CONVERGENCE.                                                 INSI-223
   38 LO(105)=(DABS(BIM-FAI(1)).LE.EITER.AND.(DABS(BRE-FAR(1)).LE.EITER)INSI-224
     1)                                                                 INSI-225
      IF ((.NOT.LO(22)).AND.LO(104).AND.KITER.GT.3.AND.(.NOT.LO(105))) CINSI-226
     1ALL PADE(PAD1,PAD2,KITER,BRE,BIM,EITER,1.D0,0.D0,LO)              INSI-227
      LO(104)=LO(104).AND.LO(105)                                       INSI-228
      FAR(1)=BRE                                                        INSI-229
      FAI(1)=BIM                                                        INSI-230
      IF (LO(57)) WRITE (MW,1000) I,FAR(1),FAI(1),KITER,KT              INSI-231
      IF (.NOT.LO(110).OR.LO(92)) RETURN                                INSI-232
C COMPUTATION OF R*(D/DR) OF THE SOLUTIONS.                             INSI-233
   39 IST=ISM-3                                                         INSI-234
      DO 41 J=1,2                                                       INSI-235
      PD(J,1,I)=2.5D0*P(J,2,I)-.25D0*P(J,5,I)+(5.D0*P(J,4,I)-7.7D0*P(J,1INSI-236
     1,I)-10.D0*P(J,3,I)+.2D0*P(J,6,I))/6.D0                            INSI-237
      PD(J,2,I)=-.8D0*P(J,1,I)-P(J,4,I)+(8.D0*P(J,3,I)-3.5D0*P(J,2,I)+.8INSI-238
     1D0*P(J,5,I)-.1D0*P(J,6,I))/3.D0                                   INSI-239
      PD(J,3,I)=2.25D0*(P(J,4,I)-P(J,2,I))-.45D0*(P(J,5,I)-P(J,1,I))+.05INSI-240
     1D0*P(J,6,I)                                                       INSI-241
      FP=3.D0                                                           INSI-242
      DO 40 IS=4,IST                                                    INSI-243
      FP=FP+1.D0                                                        INSI-244
   40 PD(J,IS,I)=FP*(.75D0*(P(J,IS+1,I)-P(J,IS-1,I))-.15D0*(P(J,IS+2,I)-INSI-245
     1P(J,IS-2,I))+(P(J,IS+3,I)-P(J,IS-3,I))/60.D0)                     INSI-246
      FP=FP+1.D0                                                        INSI-247
      PD(J,ISM-2,I)=FP*(P(J,ISM-6,I)-8.D0*P(J,ISM-5,I)+30.D0*P(J,ISM-4,IINSI-248
     1)-80.D0*P(J,IST,I)+35.D0*P(J,ISM-2,I)+24.D0*P(J,ISM-1,I)-2.D0*P(J,INSI-249
     2ISM,I))/60.D0                                                     INSI-250
      FP=FP+1.D0                                                        INSI-251
      PD(J,ISM-1,I)=FP*(15.D0*P(J,ISM-5,I)-2.D0*P(J,ISM-6,I)-50.D0*P(J,IINSI-252
     1SM-4,I)+100.D0*P(J,IST,I)-150.D0*P(J,ISM-2,I)+77.D0*P(J,ISM-1,I)+1INSI-253
     20.D0*P(J,ISM,I))/60.D0                                            INSI-254
      FP=FP+1.D0                                                        INSI-255
      PD(J,ISM,I)=FP*(10.D0*P(J,ISM-6,I)-72.D0*P(J,ISM-5,I)+225.D0*P(J,IINSI-256
     1SM-4,I)-400.D0*P(J,IST,I)+450.D0*P(J,ISM-2,I)-360.D0*P(J,ISM-1,I)+INSI-257
     2147.D0*P(J,ISM,I))/60.D0                                          INSI-258
   41 CONTINUE                                                          INSI-259
      RETURN                                                            INSI-260
   42 IF (LO(22)) RETURN                                                INSI-261
      PAD1(1,KITER)=0.D0                                                INSI-262
      PAD1(2,KITER)=0.D0                                                INSI-263
      RETURN                                                            INSI-264
 1000 FORMAT (5X,I5,2D30.15,I10,10X,I5)                                 INSI-265
      END                                                               INSI-266
C 27/06/06                                                      ECIS12  INTR-000
      SUBROUTINE INTR(FAM,X,FR,GR,WRE,PAD,IPE,ISM,KAB,W,ITERM,NC,V,VR,NVINTR-001
     1I,MC,NAT,AT,AG,NCIN,NNI,ITERR,LO)                                 INTR-002
C  E. C. I. S. METHOD: DIRAC EQUATION DRIVING ROUTINE.                  INTR-003
C             INRH  TO SOLVE THE SINGLE HOMOGENEOUS EQUATIONS.          INTR-004
C             INRI  TO SOLVE THE SINGLE INHOMOGENEOUS EQUATIONS.        INTR-005
C  PADE APPROXIMANTS OF TYPE I MAY BE USED TO ACCELERATE THE CONVERGENCEINTR-006
C INPUT:     FAM(*,I):MATCHING VALUES FOR I=1 TO 6, CONSTANTS OF EACH   INTR-007
C                     EQUATION FOR I=7 TO 10.                           INTR-008
C            ISM:     NUMBER OF RADIAL POINTS.                          INTR-009
C            KAB:     MAXIMUM NUMBER OF COUPLED CHANNELS.               INTR-010
C            ITERM:   MAXIMUM NUMBER OF ITERATIONS AND DIM. OF PAD.     INTR-011
C            NC:      NUMBER OF COUPLED EQUATIONS.                      INTR-012
C            V,VR:    REAL, IMAGINARY POTENTIALS AND COUPLINGS.         INTR-013
C            NVI:     ADDRESSES OF COUPLINGS.                           INTR-014
C            MC:      NUCLEAR STATE NUMBER, ANGULAR MOMENTA....         INTR-015
C            NAT,AT:  TABLE OF COUPLING COEFFICIENTS.                   INTR-016
C            AG:      COULOMB INTEGRALS FOR COULOMB CORRECTIONS.        INTR-017
C            NCIN:    NUMBER OF SOLUTIONS.                              INTR-018
C            LO(I):   LOGICAL CONTROLS:                                 INTR-019
C               LO(22) =.TRUE. NO USE OF PADE APPROXIMANTS.             INTR-020
C               LO(23) =.TRUE. NO USE OF PADE AND SHIFT TO USUAL COUPLEDINTR-021
C                              EQUATIONS WHEN THERE IS NO CONVERGENCE.  INTR-022
C               LO(30) =.TRUE. PURE DWBA CALCULATION.                   INTR-023
C               LO(44) =.TRUE. COULOMB CORRECTIONS.                     INTR-024
C               LO(53) =.TRUE. OUTPUT OF THE NUMBER OF ITERATIONS.      INTR-025
C               LO(57) =.TRUE. OUTPUT PHASE-SHIFTS AT EACH ITERATION.   INTR-026
C               LO(74) =.TRUE. OUTPUT OF TIME IN DIFFERENT STEPS.       INTR-027
C               LO(104)=.TRUE. CONVERGENCE IS OBTAINED IN THE ITERATION.INTR-028
C               LO(106)=.TRUE. WHEN THE ITERATION IS NOT THE LAST ONE   INTR-029
C                              ALLOWED.                                 INTR-030
C               LO(107)=.TRUE. ALL THE COUPLINGS CALCULATED BEFOREHAND. INTR-031
C               LO(121)=.TRUE. OPTICAL MODEL WITHOUT COUPLING.          INTR-032
C OUTPUT:    FAM(*,I):SCATTERING COEFFICIENTS FOR I>9.                  INTR-033
C            NNI:     NUMBER OF EQUATIONS WITH NEGLIGIBLE INHOMOGENEOUS INTR-034
C                     TERM.                                             INTR-035
C            ITERR:   LARGEST NUMBER OF ITERATIONS DONE FOR THIS J.     INTR-036
C WORKING AREAS:                                                        INTR-037
C            X:       USED IN INRH AND INRI.                            INTR-038
C            FR:      SOLUTIONS OF HOMOGENEOUS EQUATIONS.               INTR-039
C            GR:      SOLUTIONS OF COUPLED EQUATIONS.                   INTR-040
C            WRE:     REAL/IMAGINARY INHOMOGENEOUS TERM.                INTR-041
C            PAD:     PADE APPROXIMANTS.                                INTR-042
C            IPE(*,I):FIRST NON NEGLIGIBLE POINT OF UNCOUPLED FUNCTIONS INTR-043
C                     FOR I=1, OF COUPLED FUNCTIONS FOR I=2.            INTR-044
C            W:       FREE PART OF THE STORAGE FOR COUPLINGS            INTR-045
C***********************************************************************INTR-046
      IMPLICIT REAL*8 (A-H,O-Z)                                         INTR-047
      LOGICAL LO(150)                                                   INTR-048
      DIMENSION FAM(KAB,*),X(*),FR(ISM,8,*),GR(ISM,4,*),WRE(ISM,*),PAD(2INTR-049
     1,ITERM,*),IPE(NC,2),W(ISM,4,*),V(ISM,14,*),VR(ISM,4,*),NVI(KAB,KABINTR-050
     2,4),MC(KAB,6),NAT(6,*),AT(3,*),AG(KAB,KAB,4),Y(2),Z(4)            INTR-051
      COMMON /INOUT/ MR,MW,MS                                           INTR-052
      NNI=0                                                             INTR-053
C COMPUTE ALL COUPLING POTENTIALS AND SOLVE ALL HOMOGENEOUS EQUATIONS.  INTR-054
      DO 5 I=1,NC                                                       INTR-055
      I1=MC(I,4)                                                        INTR-056
      IF (I1.LT.0) GO TO 1                                              INTR-057
      CALL INRH(FR(1,1,I),I,K,FAM,X,KAB,ISM,DFLOAT(MC(I,6)+1),V(1,1,I1),INTR-058
     1LO)                                                               INTR-059
      IPE(I,1)=K                                                        INTR-060
      GO TO 4                                                           INTR-061
    1 I1=-I1                                                            INTR-062
      IF (I1.EQ.I) GO TO 4                                              INTR-063
      DO 3 J=1,8                                                        INTR-064
      DO 2 IS=1,ISM                                                     INTR-065
    2 FR(IS,J,I)=FR(IS,J,I1)                                            INTR-066
    3 CONTINUE                                                          INTR-067
      IPE(I,1)=IPE(I1,1)                                                INTR-068
    4 IF (LO(57)) WRITE (MW,1000) FAM(I,9),FAM(I,10),I,IPE(I,1)         INTR-069
    5 CONTINUE                                                          INTR-070
      IF (.NOT.LO(107).OR.LO(121)) GO TO 16                             INTR-071
      IW=0                                                              INTR-072
C CALCULATION OF THE NON DIAGONAL COUPLING POTENTIALS.                  INTR-073
      DO 15 IC=1,NC                                                     INTR-074
      DO 14 IP=1,IC                                                     INTR-075
      K1=NVI(IP,IC,1)                                                   INTR-076
      K2=NVI(IP,IC,2)                                                   INTR-077
      K3=NVI(IP,IC,3)                                                   INTR-078
      NVI(IP,IC,3)=0                                                    INTR-079
      NVI(IP,IC,4)=0                                                    INTR-080
      IF (K1.GT.K2) GO TO 9                                             INTR-081
      IW=IW+1                                                           INTR-082
      NVI(IP,IC,3)=IW                                                   INTR-083
      K=NAT(1,K1)                                                       INTR-084
      DO 6 IS=1,ISM                                                     INTR-085
      W(IS,1,IW)=AT(2,K1)*VR(IS,1,K)                                    INTR-086
      W(IS,2,IW)=AT(2,K1)*VR(IS,2,K)                                    INTR-087
      W(IS,3,IW)=AT(3,K1)*VR(IS,3,K)                                    INTR-088
    6 W(IS,4,IW)=AT(3,K1)*VR(IS,4,K)                                    INTR-089
      K4=K1+1                                                           INTR-090
      IF (K4.GT.K2) GO TO 9                                             INTR-091
      DO 8 K1=K4,K2                                                     INTR-092
      K=NAT(1,K1)                                                       INTR-093
      DO 7 IS=1,ISM                                                     INTR-094
      W(IS,1,IW)=W(IS,1,IW)+AT(2,K1)*VR(IS,1,K)                         INTR-095
      W(IS,2,IW)=W(IS,2,IW)+AT(2,K1)*VR(IS,2,K)                         INTR-096
      W(IS,3,IW)=W(IS,3,IW)+AT(3,K1)*VR(IS,3,K)                         INTR-097
    7 W(IS,4,IW)=W(IS,4,IW)+AT(3,K1)*VR(IS,4,K)                         INTR-098
    8 CONTINUE                                                          INTR-099
    9 IF (K2.GE.K3) GO TO 13                                            INTR-100
      IW=IW+1                                                           INTR-101
      NVI(IP,IC,4)=IW                                                   INTR-102
      K1=K2+1                                                           INTR-103
      K=NAT(1,K1)                                                       INTR-104
      DO 10 IS=1,ISM                                                    INTR-105
      W(IS,1,IW)=AT(2,K1)*VR(IS,1,K)+AT(3,K1)*VR(IS,3,K)                INTR-106
      W(IS,2,IW)=AT(2,K1)*VR(IS,2,K)+AT(3,K1)*VR(IS,4,K)                INTR-107
      W(IS,3,IW)=AT(2,K1)*VR(IS,1,K)-AT(3,K1)*VR(IS,3,K)                INTR-108
   10 W(IS,4,IW)=AT(2,K1)*VR(IS,2,K)-AT(3,K1)*VR(IS,4,K)                INTR-109
      K4=K1+1                                                           INTR-110
      IF (K4.GT.K3) GO TO 13                                            INTR-111
      DO 12 K1=K4,K3                                                    INTR-112
      K=NAT(1,K1)                                                       INTR-113
      DO 11 IS=1,ISM                                                    INTR-114
      W(IS,1,IW)=W(IS,1,IW)+AT(2,K1)*VR(IS,1,K)+AT(3,K1)*VR(IS,3,K)     INTR-115
      W(IS,2,IW)=W(IS,2,IW)+AT(2,K1)*VR(IS,2,K)+AT(3,K1)*VR(IS,4,K)     INTR-116
      W(IS,3,IW)=W(IS,3,IW)+AT(2,K1)*VR(IS,1,K)-AT(3,K1)*VR(IS,3,K)     INTR-117
   11 W(IS,4,IW)=W(IS,4,IW)+AT(2,K1)*VR(IS,2,K)-AT(3,K1)*VR(IS,4,K)     INTR-118
   12 CONTINUE                                                          INTR-119
   13 NVI(IC,IP,3)=NVI(IP,IC,3)                                         INTR-120
      NVI(IC,IP,4)=NVI(IP,IC,4)                                         INTR-121
   14 CONTINUE                                                          INTR-122
   15 CONTINUE                                                          INTR-123
   16 IF (LO(74)) CALL HORA                                             INTR-124
C LOOP ON SOLUTIONS.                                                    INTR-125
      DO 30 NCI=1,NCIN                                                  INTR-126
      NCI1=NCI+10                                                       INTR-127
      NCI2=NCI1+NCIN                                                    INTR-128
C SET THE ZERO'S ORDER SOLUTION.                                        INTR-129
      DO 17 IC=1,NC                                                     INTR-130
      IPE(IC,2)=ISM+1                                                   INTR-131
      FAM(IC,NCI1)=0.D0                                                 INTR-132
   17 FAM(IC,NCI2)=0.D0                                                 INTR-133
      FAM(NCI,NCI1)=FAM(NCI,9)                                          INTR-134
      FAM(NCI,NCI2)=FAM(NCI,10)                                         INTR-135
      IF ((IPE(NCI,1).GT.ISM-3).OR.LO(121)) GO TO 30                    INTR-136
      DO 18 IS=1,ISM                                                    INTR-137
      GR(IS,1,NCI)=FR(IS,1,NCI)                                         INTR-138
      GR(IS,2,NCI)=FR(IS,2,NCI)                                         INTR-139
      GR(IS,3,NCI)=FR(IS,5,NCI)                                         INTR-140
   18 GR(IS,4,NCI)=FR(IS,6,NCI)                                         INTR-141
      IPE(NCI,2)=IPE(NCI,1)                                             INTR-142
      AMAX=0.D0                                                         INTR-143
C E. C. I. S. LOOP.                                                     INTR-144
      DO 28 KITER=1,ITERM                                               INTR-145
      ITERR=MAX0(ITERR,KITER)                                           INTR-146
      LO(104)=.TRUE.                                                    INTR-147
      LO(106)=((KITER.NE.ITERM).AND.(AMAX.LT.1.D10)).OR.LO(23)          INTR-148
      IF (AMAX.GT.1.D10) WRITE (MW,1001) AMAX,KITER                     INTR-149
      DO 27 IC=1,NC                                                     INTR-150
      I=MOD(IC+NCI-1,NC)+1                                              INTR-151
      I1=MC(I,1)                                                        INTR-152
      DO 19 J=1,4                                                       INTR-153
   19 Z(J)=0.D0                                                         INTR-154
      IF (.NOT.LO(44)) GO TO 24                                         INTR-155
      DO 22 J=1,NC                                                      INTR-156
      IF (IPE(J,2).GE.ISM) GO TO 22                                     INTR-157
C ORDER IN FG   F(EI)*F(EF),G(EI)*F(EF),F(EI)*G(EF),G(EI)*G(EF).        INTR-158
      IF (LO(22)) GO TO 20                                              INTR-159
      IJ=KITER                                                          INTR-160
      IF (1+MOD(J+NC-NCI-1,NC).GE.IC) IJ=IJ-1                           INTR-161
      IF (IJ.EQ.0) GO TO 20                                             INTR-162
      Y(1)=PAD(1,IJ,J)                                                  INTR-163
      Y(2)=PAD(2,IJ,J)                                                  INTR-164
      GO TO 21                                                          INTR-165
   20 Y(1)=FAM(J,NCI1)                                                  INTR-166
      Y(2)=FAM(J,NCI2)                                                  INTR-167
   21 Z(1)=Z(1)+Y(1)*AG(I,J,3)-Y(2)*AG(I,J,1)                           INTR-168
      Z(2)=Z(2)+Y(1)*AG(I,J,1)+Y(2)*AG(I,J,3)                           INTR-169
      Z(3)=Z(3)+Y(1)*AG(I,J,4)-Y(2)*AG(I,J,2)                           INTR-170
      Z(4)=Z(4)+Y(1)*AG(I,J,2)+Y(2)*AG(I,J,4)                           INTR-171
   22 CONTINUE                                                          INTR-172
      IF (I.EQ.NCI) GO TO 23                                            INTR-173
      Z(1)=Z(1)+AG(I,NCI,1)                                             INTR-174
      Z(3)=Z(3)+AG(I,NCI,2)                                             INTR-175
   23 Z(3)=Z(3)-Z(2)                                                    INTR-176
      Z(4)=Z(4)+Z(1)                                                    INTR-177
      Z(1)=Z(1)+FAM(I,9)*Z(3)-FAM(I,10)*Z(4)                            INTR-178
      Z(2)=Z(2)+Z(3)*FAM(I,10)+Z(4)*FAM(I,9)                            INTR-179
   24 IF (I.NE.NCI) GO TO 25                                            INTR-180
      Z(1)=Z(1)-FAM(I,9)                                                INTR-181
      Z(2)=Z(2)-FAM(I,10)                                               INTR-182
      Z(3)=Z(3)-1.D0                                                    INTR-183
   25 IF (LO(23).AND.(.NOT.LO(106))) LO(104)=.TRUE.                     INTR-184
C COMPUTE SECOND MEMBERS AND SOLVE THE INHOMOGENEOUS EQUATIONS.         INTR-185
      CALL INRI(WRE,FR(1,1,I),GR,W,NVI,FAM(I,5),X,PAD(1,1,I),PAD(1,1,NC+INTR-186
     11),KITER,KAB,NC,ISM,IPE(1,2),I,NAT,AT,VR,FAM(I,NCI1),FAM(I,NCI2),DINTR-187
     2FLOAT(MC(I,6)+1),V(1,1,I1),LO,Z)                                  INTR-188
      IF (IPE(I,2).GE.ISM) GO TO 26                                     INTR-189
      IF (I.NE.NCI.AND.LO(30)) IPE(I,2)=ISM+1                           INTR-190
      AMAX=DMAX1(AMAX,DABS(FAM(I,NCI1))+DABS(FAM(I,NCI2)))              INTR-191
      GO TO 27                                                          INTR-192
   26 FAM(I,NCI1)=-Z(1)                                                 INTR-193
      FAM(I,NCI2)=-Z(2)                                                 INTR-194
      IF (LO(57)) WRITE (MW,1002)                                       INTR-195
      IF (KITER.EQ.1.AND.LO(44)) NNI=NNI+1                              INTR-196
      IF (I.EQ.NCI) IPE(NCI,2)=IPE(NCI,1)                               INTR-197
   27 CONTINUE                                                          INTR-198
      IF (LO(74)) CALL HORA                                             INTR-199
      IF (LO(104).OR.(AMAX.GT.1.D10.AND.LO(23))) GO TO 29               INTR-200
   28 CONTINUE                                                          INTR-201
      KITER=MIN0(KITER,ITERM)                                           INTR-202
   29 IF (LO(53)) WRITE (MW,1003) KITER                                 INTR-203
   30 CONTINUE                                                          INTR-204
      NNI=NNI/NCIN                                                      INTR-205
      RETURN                                                            INTR-206
 1000 FORMAT (2D30.15,5X,2I5)                                           INTR-207
 1001 FORMAT (' MAXIMUM',D15.6,' OBTAINED IN PREVIOUS ITERATION. LAST ONINTR-208
     1E IS',I3)                                                         INTR-209
 1002 FORMAT (5X,'THE INHOMOGENEOUS TERM IS NEGLECTED.')                INTR-210
 1003 FORMAT (5X,I5,' ITERATIONS.')                                     INTR-211
      END                                                               INTR-212
C 27/06/06                                                      ECIS12  INRH-000
      SUBROUTINE INRH(P,IC,KT,FAM,X,NC,ISM,CC,VV,LO)                    INRH-001
C  E. C. I. S. METHOD: INTEGRATION OF A SINGLE HOMOGENEOUS EQUATION BY  INRH-002
C  THE NUMEROV METHOD   - DIRAC EQUATION -                              INRH-003
C INPUT:     IC:      CHANNEL NUMBER OF THE EQUATION.                   INRH-004
C            FAM(*,I):MATCHING VALUES FOR I=1 TO 4,                     INRH-005
C                     CONSTANTS OF THIS EQUATION FOR I=6 TO 10.         INRH-006
C            KAB:     MAXIMUM NUMBER OF COUPLED CHANNELS.               INRH-007
C            NC:      NUMBER OF COUPLED CHANNELS.                       INRH-008
C            ISM:     NUMBER OF RADIAL POINTS.                          INRH-009
C            CC:      EIGENVALUE OF L.S+1                               INRH-010
C            VV:      POTENTIALS, D(R), ....                            INRH-011
C            LO(I):   LOGICAL CONTROLS:                                 INRH-012
C               LO(26) =.TRUE. INTEGRATION STABILISED FOR LONG RANGE    INRH-013
C                              CONSTANT POTENTIAL.                      INRH-014
C               LO(27) =.TRUE. NUMEROV'S METHOD FOR SINGLE EQUATIONS.   INRH-015
C               LO(121)=.TRUE. OPTICAL MODEL WITHOUT COUPLING.          INRH-016
C OUTPUT:    P(*,I):  REGULAR SOLUTION FOR I=1, 2, 5 AND 6,             INRH-017
C                     IRREGULAR SOLUTION FOR I=3, 4, 7 AND 8,           INRH-018
C                     LARGE COMPONENTS FOR I=1 TO 4,                    INRH-019
C                     SMALL COMPONENT FOR I=5 TO 8,                     INRH-020
C                     REAL/IMAGINARY IRREGULAR SOLUTION FOR I=3 AND 4.  INRH-021
C            FAM(*,I):REAL/IMAGINARY PART OF ZERO'S ORDER SCATTERING    INRH-022
C                     COEFFICIENTS FOR I=9 AND 10.                      INRH-023
C            KT:    THE SOLUTION IS NEGLIGIBLE FOR THE FIRST KT POINTS. INRH-024
C WORKING AREA:                                                         INRH-025
C            X:     FOR THE INTEGRATION.                                INRH-026
C                                                                       INRH-027
C FOR THE COMMON  /CONVE/ SEE CALX.                                     INRH-028
C                                                                       INRH-029
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /CONVE/:                     INRH-030
C  H:         STEP SIZE FOR INTEGRATION.                                INRH-031
C  ACONV:     CONVERGENCE CRITERION FOR POTENTIAL AND FUNCTION.         INRH-032
C   USED:     H,ACONV.                                                  INRH-033
C                                                                       INRH-034
C***********************************************************************INRH-035
      IMPLICIT REAL*8 (A-H,O-Z)                                         INRH-036
      LOGICAL LO(150)                                                   INRH-037
      DIMENSION P(ISM,8),FAM(NC,10),X(2,*),VV(ISM,14)                   INRH-038
      COMMON /CONVE/ H,BJM,EITER,ACONV,CONJ,HCONV                       INRH-039
C COMPUTATION OF THE REGULAR SOLUTION.                                  INRH-040
      DO 1 IS=1,ISM                                                     INRH-041
      X(1,IS+2)=FAM(IC,10)/DFLOAT(IS)**2-FAM(IC,8)-FAM(IC,7)*VV(IS,1)-FAINRH-042
     1M(IC,9)*VV(IS,3)                                                  INRH-043
    1 X(2,IS+2)=-FAM(IC,7)*VV(IS,2)-FAM(IC,9)*VV(IS,4)                  INRH-044
      IF (LO(27)) GO TO 3                                               INRH-045
C MODIFIED NUMEROV METHOD.                                              INRH-046
      DO 2 IS=1,ISM                                                     INRH-047
      A=X(1,IS+2)**2-X(2,IS+2)**2                                       INRH-048
      IF (LO(26)) A=A+X(1,IS+2)**3/30.D0                                INRH-049
      X(2,IS+2)=X(2,IS+2)*(1.D0+X(1,IS+2)/6.D0)                         INRH-050
    2 X(1,IS+2)=X(1,IS+2)+A/12.D0                                       INRH-051
      GO TO 5                                                           INRH-052
C NUMEROV METHOD.                                                       INRH-053
    3 DO 4 IS=1,ISM                                                     INRH-054
      B=(12.D0-X(1,IS+2))**2+X(2,IS+2)**2                               INRH-055
      A=12.D0*(X(1,IS+2)*(12.D0-X(1,IS+2))-X(2,IS+2)**2)/B              INRH-056
      IF (LO(26)) A=A-X(1,IS+2)**3/240.D0                               INRH-057
      X(1,IS+2)=A                                                       INRH-058
    4 X(2,IS+2)=144.D0*X(2,IS+2)/B                                      INRH-059
    5 X(1,1)=0.D0                                                       INRH-060
      X(2,1)=0.D0                                                       INRH-061
      X(1,2)=1.D-15                                                     INRH-062
      X(2,2)=0.D0                                                       INRH-063
      DO 7 IS=1,ISM                                                     INRH-064
      P(IS,3)=X(1,IS+2)                                                 INRH-065
      P(IS,4)=X(2,IS+2)                                                 INRH-066
      HX=X(1,IS+1)*X(1,IS+2)-X(2,IS+1)*X(2,IS+2)                        INRH-067
      HY=X(2,IS+1)*X(1,IS+2)+X(1,IS+1)*X(2,IS+2)                        INRH-068
      X(1,IS+2)=X(1,IS+1)+X(1,IS+1)-X(1,IS)+HX                          INRH-069
      X(2,IS+2)=X(2,IS+1)+X(2,IS+1)-X(2,IS)+HY                          INRH-070
      IF (DABS(X(1,IS+2)).LT.1.D15) GO TO 7                             INRH-071
C RENORMALISATION OF LARGE FUNCTION VALUES.                             INRH-072
      J=IS+2                                                            INRH-073
      DO 6 I=2,J                                                        INRH-074
      X(1,I)=X(1,I)*1.D-30                                              INRH-075
    6 X(2,I)=X(2,I)*1.D-30                                              INRH-076
    7 CONTINUE                                                          INRH-077
C END OF INTEGRATION.                                                   INRH-078
C MATCHING WITH TWO VALUES.                                             INRH-079
      BRE=X(1,ISM)*FAM(IC,4)-FAM(IC,3)*X(1,ISM+2)                       INRH-080
      BIM=X(2,ISM)*FAM(IC,4)-FAM(IC,3)*X(2,ISM+2)                       INRH-081
      HX=X(1,ISM)*FAM(IC,2)-FAM(IC,1)*X(1,ISM+2)                        INRH-082
      HY=X(2,ISM)*FAM(IC,2)-FAM(IC,1)*X(2,ISM+2)                        INRH-083
      BIM=BIM+HX                                                        INRH-084
      BRE=BRE-HY                                                        INRH-085
      BRR=BRE*BRE+BIM*BIM                                               INRH-086
      BRE=-BRE/BRR                                                      INRH-087
      BIM=BIM/BRR                                                       INRH-088
      FAM(IC,9)=BRE*HX-BIM*HY                                           INRH-089
      FAM(IC,10)=HX*BIM+HY*BRE                                          INRH-090
      IF (LO(121)) RETURN                                               INRH-091
      BRE=BRE/12.D0                                                     INRH-092
      BIM=BIM/12.D0                                                     INRH-093
C NORMALISATION OF THE REGULAR SOLUTION.                                INRH-094
C AND SEARCH OF THE FIRST NON NEGLIGIBLE VALUE.                         INRH-095
      DO 8 IS=1,ISM                                                     INRH-096
      BRR=X(1,IS)+10.D0*X(1,IS+1)+X(1,IS+2)                             INRH-097
      HY=X(2,IS)+10.D0*X(2,IS+1)+X(2,IS+2)                              INRH-098
      HX=BRR*BRE-HY*BIM                                                 INRH-099
      HY=HY*BRE+BRR*BIM                                                 INRH-100
      P(IS,1)=HX*VV(IS,9)-HY*VV(IS,10)                                  INRH-101
    8 P(IS,2)=HX*VV(IS,10)+HY*VV(IS,9)                                  INRH-102
      DO 9 KT=1,ISM                                                     INRH-103
      IF ((DABS(P(KT,1))+DABS(P(KT,2))).GT.ACONV) GO TO 10              INRH-104
    9 CONTINUE                                                          INRH-105
   10 HX=FAM(IC,1)                                                      INRH-106
      HY=FAM(IC,2)                                                      INRH-107
C COMPUTATION OF THE IRREGULAR SOLUTION - STARTING VALUES.              INRH-108
C THE LAST POINT OF IMAGINARY POTENTIAL IS NEGLECTED.                   INRH-109
      X(2,ISM)=HX/FAM(IC,6)                                             INRH-110
      X(2,ISM+2)=HY/FAM(IC,6)                                           INRH-111
      X(1,ISM)=FAM(IC,3)/FAM(IC,6)                                      INRH-112
      X(1,ISM+2)=FAM(IC,4)/FAM(IC,6)                                    INRH-113
      BRE=2.D0+P(ISM,3)                                                 INRH-114
      X(1,ISM+1)=(X(1,ISM)+X(1,ISM+2))/BRE                              INRH-115
      X(2,ISM+1)=(X(2,ISM)+X(2,ISM+2))/BRE                              INRH-116
      KR=MIN0(KT,ISM-6)                                                 INRH-117
      I1=ISM-KR                                                         INRH-118
C INTEGRATION.                                                          INRH-119
      DO 11 JS=1,I1                                                     INRH-120
      IS=ISM-JS                                                         INRH-121
      HX=X(1,IS+1)*P(IS,3)-X(2,IS+1)*P(IS,4)                            INRH-122
      HY=X(2,IS+1)*P(IS,3)+X(1,IS+1)*P(IS,4)                            INRH-123
      X(1,IS)=X(1,IS+1)+X(1,IS+1)-X(1,IS+2)+HX                          INRH-124
   11 X(2,IS)=X(2,IS+1)+X(2,IS+1)-X(2,IS+2)+HY                          INRH-125
C COMPUTATION OF IRREGULAR SOLUTION.                                    INRH-126
      DO 12 IS=KR,ISM                                                   INRH-127
      BRE=(X(1,IS)+10.D0*X(1,IS+1)+X(1,IS+2))/12.D0                     INRH-128
      BIM=(X(2,IS)+10.D0*X(2,IS+1)+X(2,IS+2))/12.D0                     INRH-129
      P(IS,3)=BRE*VV(IS,9)-BIM*VV(IS,10)                                INRH-130
   12 P(IS,4)=BRE*VV(IS,10)+BIM*VV(IS,9)                                INRH-131
      ISM3=ISM-3                                                        INRH-132
      HH=H*60.D0                                                        INRH-133
      DO 22 L=1,4                                                       INRH-134
      DO 21 IS=KT,ISM                                                   INRH-135
      IF (IS-KR.GT.2) GO TO 16                                          INRH-136
      IF (IS-KR-1)  13 , 14 , 15                                        INRH-137
   13 P(IS,L+4)=(-147.D0*P(IS,L)+360.D0*P(IS+1,L)-450.D0*P(IS+2,L)+400.DINRH-138
     10*P(IS+3,L)-225.D0*P(IS+4,L)+72.D0*P(IS+5,L)-10.D0*P(IS+6,L))/HH  INRH-139
      GO TO 21                                                          INRH-140
   14 P(IS,L+4)=(-10.D0*P(KR,L)-77.D0*P(IS,L)+150.D0*P(IS+1,L)-100.D0*P(INRH-141
     1IS+2,L)+50.D0*P(IS+3,L)-15.D0*P(IS+4,L)+2.D0*P(IS+5,L))/HH        INRH-142
      GO TO 21                                                          INRH-143
   15 P(IS,L+4)=(2.D0*P(KR,L)-24.D0*P(IS-1,L)-35.D0*P(IS,L)+80.D0*P(IS+1INRH-144
     1,L)-30.D0*P(IS+2,L)+8.D0*P(IS+3,L)-P(IS+4,L))/HH                  INRH-145
      GO TO 21                                                          INRH-146
   16 IF (IS.GT.ISM3) GO TO 17                                          INRH-147
      P(IS,L+4)=(45.D0*(P(IS+1,L)-P(IS-1,L))-9.D0*(P(IS+2,L)-P(IS-2,L))+INRH-148
     1P(IS+3,L)-P(IS-3,L))/HH                                           INRH-149
      GO TO 21                                                          INRH-150
   17 IF (IS-ISM+1) 18 , 19 , 20                                        INRH-151
   18 P(ISM-2,L+4)=(P(ISM-6,L)-8.D0*P(ISM-5,L)+30.D0*P(ISM-4,L)-80.D0*P(INRH-152
     1ISM3,L)+35.D0*P(ISM-2,L)+24.D0*P(ISM-1,L)-2.D0*P(ISM,L))/HH       INRH-153
      GO TO 21                                                          INRH-154
   19 P(ISM-1,L+4)=(-2.D0*P(ISM-6,L)+15.D0*P(ISM-5,L)-50.D0*P(ISM-4,L)+1INRH-155
     100.D0*P(ISM3,L)-150.D0*P(ISM-2,L)+77.D0*P(ISM-1,L)+10.D0*P(ISM,L))INRH-156
     2/HH                                                               INRH-157
      GO TO 21                                                          INRH-158
   20 P(ISM,L+4)=(10.D0*P(ISM-6,L)-72.D0*P(ISM-5,L)+225.D0*P(ISM-4,L)-40INRH-159
     10.D0*P(ISM3,L)+450.D0*P(ISM-2,L)-360.D0*P(ISM-1,L)+147.D0*P(ISM,L)INRH-160
     2)/HH                                                              INRH-161
   21 CONTINUE                                                          INRH-162
   22 CONTINUE                                                          INRH-163
      R=H*DFLOAT(KT-1)                                                  INRH-164
      DO 23 IS=KT,ISM                                                   INRH-165
      R=R+H                                                             INRH-166
      BR=P(IS,1)*(CC/R+VV(IS,13))-P(IS,5)-P(IS,2)*VV(IS,14)             INRH-167
      BI=P(IS,2)*(CC/R+VV(IS,13))-P(IS,6)+P(IS,1)*VV(IS,14)             INRH-168
      CR=P(IS,3)*(CC/R+VV(IS,13))-P(IS,7)-P(IS,4)*VV(IS,14)             INRH-169
      CI=P(IS,4)*(CC/R+VV(IS,13))-P(IS,8)+P(IS,3)*VV(IS,14)             INRH-170
      P(IS,5)=BR*VV(IS,11)-BI*VV(IS,12)                                 INRH-171
      P(IS,6)=BI*VV(IS,11)+BR*VV(IS,12)                                 INRH-172
      P(IS,7)=CR*VV(IS,11)-CI*VV(IS,12)                                 INRH-173
   23 P(IS,8)=CI*VV(IS,11)+CR*VV(IS,12)                                 INRH-174
      IF (KT.EQ.1) RETURN                                               INRH-175
      KR=KT-1                                                           INRH-176
      DO 25 IS=1,KR                                                     INRH-177
      DO 24 L=1,8                                                       INRH-178
   24 P(IS,L)=0.D0                                                      INRH-179
   25 CONTINUE                                                          INRH-180
      RETURN                                                            INRH-181
      END                                                               INRH-182
C 27/06/06                                                      ECIS12  INRI-000
      SUBROUTINE INRI(W,P,Q,WW,NVI,FAM,X,PAD1,PAD2,KITER,KAB,NC,ISM,IPI,INRI-001
     1J,NAT,AT,VR,FAR,FAI,CC,V,LO,Z)                                    INRI-002
C  E. C. I. S. METHOD: INTEGRATION OF A SINGLE INHOMOGENEOUS EQUATION   INRI-003
C  BY THE NUMEROV METHOD      - DIRAC EQUATION -                        INRI-004
C INPUT:     P:       UNCOUPLED SOLUTIONS.                              INRI-005
C            Q:       COUPLED SOLUTION.                                 INRI-006
C            WW:      COUPLING BETWEEN EQUATIONS.                       INRI-007
C            NVI:     TABLE OF ADDRESSES OF COUPLINGS.                  INRI-008
C            FAM:     WAVE NUMBER.                                      INRI-009
C            KITER:   CURRENT ITERATION NUMBER.                         INRI-010
C            KAB:     DIMENSION OF TABLE NVI.                           INRI-011
C            NC:      NUMBER OF COUPLED CHANNELS.                       INRI-012
C            ISM:     NUMBER OF RADIAL POINTS.                          INRI-013
C            IPI:     THE FUNCTION IS NEGLIGIBLE FOR R < IPI*H.         INRI-014
C            J:       CHANNEL NUMBER OF THE EQUATION.                   INRI-015
C            NAT,AT:  COEFFICIENTS AND ADDRESSES OF COUPLINGS.          INRI-016
C            VR:      COUPLING POTENTIALS.                              INRI-017
C            CC:      EIGENVALUE OF L.S + 1.                            INRI-018
C            V:       D(R) AND TENSOR POTENTIALS FOR H**4 CORRECTION.   INRI-019
C            Z:       COULOMB INTEGRAL FOR CORRECTIONS.                 INRI-020
C            LO(I):   LOGICAL CONTROLS:                                 INRI-021
C               LO(22) =.TRUE. NO USE OF PADE APPROXIMANTS.             INRI-022
C               LO(30) =.TRUE. PURE DWBA CALCULATION.                   INRI-023
C               LO(57) =.TRUE. OUTPUT PHASE-SHIFTS AT EACH ITERATION.   INRI-024
C               LO(104)=.TRUE. CONVERGENCE IS OBTAINED IN THE ITERATION.INRI-025
C               LO(105)=.TRUE. CONVERGENCE OBTAINED FOR THIS EQUATION.  INRI-026
C               LO(107)=.TRUE. ALL THE COUPLINGS CALCULATED BEFOREHAND. INRI-027
C OUTPUT:    FAR,FAI: REAL/IMAGINARY PART OF SCATTERING COEFFICIENTS.   INRI-028
C WORKING AREAS:                                                        INRI-029
C            W(ISM,4):SECOND MEMBERS.                                   INRI-030
C            X:       INTEGRAL OF REGULAR FUNCTION WITH SECOND MEMBER.  INRI-031
C            PAD1:    ITERATION RESULTS FOR THE CHANNEL J.              INRI-032
C            PAD2:    WORKING FIELD OF PADE,TWICE LONGER THAN PAD1.     INRI-033
C                                                                       INRI-034
C FOR THE COMMON  /CONVE/ SEE CALX.                                     INRI-035
C                                                                       INRI-036
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /CONVE/:                     INRI-037
C  H:         STEP SIZE FOR INTEGRATION.                                INRI-038
C  EITER:     CONVERGENCE CRITERION FOR S-MATRIX.                       INRI-039
C  ACONV:     CONVERGENCE CRITERION FOR POTENTIAL AND FUNCTION.         INRI-040
C  HCONV:     ACONV*H*H CONVERGENCE CRITERION FOR SECOND MEMBERS.       INRI-041
C   USED:     H,EITER,ACONV,HCONV.                                      INRI-042
C                                                                       INRI-043
C***********************************************************************INRI-044
      IMPLICIT REAL*8 (A-H,O-Z)                                         INRI-045
      LOGICAL LO(150)                                                   INRI-046
      DIMENSION W(ISM,4),P(ISM,8),Q(ISM,4,*),WW(ISM,4,*),NVI(KAB,KAB,4),INRI-047
     1FAM(*),X(2,*),PAD1(2,*),PAD2(*),IPI(*),NAT(6,*),AT(3,*),VR(ISM,4,*INRI-048
     2),FAR(*),FAI(*),V(ISM,14),Z(4),WX(4)                              INRI-049
      COMMON /CONVE/ H,BJM,EITER,ACONV,CONJ,HCONV                       INRI-050
      COMMON /INOUT/ MR,MW,MS                                           INRI-051
      ISM1=ISM+1                                                        INRI-052
C PUT ZERO IN THE INHOMOGENEOUS TERMS.                                  INRI-053
      DO 2 K=1,4                                                        INRI-054
      DO 1 IS=1,ISM                                                     INRI-055
    1 W(IS,K)=0.D0                                                      INRI-056
    2 CONTINUE                                                          INRI-057
      IDP=ISM1                                                          INRI-058
      DO 15 IC=1,NC                                                     INRI-059
      IF (IPI(IC).GT.ISM) GO TO 15                                      INRI-060
      K3=IPI(IC)                                                        INRI-061
      IDP=MIN0(IDP,K3)                                                  INRI-062
      IF (LO(107)) GO TO 11                                             INRI-063
C NO PREVIOUS CALCULATION OF COUPLING POTENTIALS.                       INRI-064
      L1=NVI(J,IC,1)                                                    INRI-065
      L2=NVI(J,IC,2)                                                    INRI-066
      L3=NVI(J,IC,3)                                                    INRI-067
      IF (L1.GT.L2) GO TO 6                                             INRI-068
C SCALAR AND VECTOR TERMS OF COUPLING POTENTIALS.                       INRI-069
      DO 5 IS=K3,ISM                                                    INRI-070
      DO 3 I=1,4                                                        INRI-071
    3 WX(I)=0.D0                                                        INRI-072
      DO 4 K1=L1,L2                                                     INRI-073
      K=NAT(1,K1)                                                       INRI-074
      WX(1)=WX(1)+AT(2,K1)*VR(IS,1,K)                                   INRI-075
      WX(2)=WX(2)+AT(2,K1)*VR(IS,2,K)                                   INRI-076
      WX(3)=WX(3)+AT(3,K1)*VR(IS,3,K)                                   INRI-077
    4 WX(4)=WX(4)+AT(3,K1)*VR(IS,4,K)                                   INRI-078
      W(IS,1)=W(IS,1)+WX(1)*Q(IS,1,IC)-WX(2)*Q(IS,2,IC)                 INRI-079
      W(IS,2)=W(IS,2)+WX(1)*Q(IS,2,IC)+WX(2)*Q(IS,1,IC)                 INRI-080
      W(IS,3)=W(IS,3)+WX(3)*Q(IS,3,IC)-WX(4)*Q(IS,4,IC)                 INRI-081
    5 W(IS,4)=W(IS,4)+WX(3)*Q(IS,4,IC)+WX(4)*Q(IS,3,IC)                 INRI-082
    6 IF (L2.GE.L3) GO TO 13                                            INRI-083
C TENSOR TERMS OF COUPLING POTENTIALS.                                  INRI-084
      L2=L2+1                                                           INRI-085
      DO 10 IS=K3,ISM                                                   INRI-086
      DO 7 I=1,4                                                        INRI-087
    7 WX(I)=0.D0                                                        INRI-088
      DO 8 K1=L2,L3                                                     INRI-089
      K=NAT(1,K1)                                                       INRI-090
      WX(1)=WX(1)+AT(2,K1)*VR(IS,1,K)                                   INRI-091
      WX(2)=WX(2)+AT(2,K1)*VR(IS,2,K)                                   INRI-092
      WX(3)=WX(3)+AT(3,K1)*VR(IS,3,K)                                   INRI-093
    8 WX(4)=WX(4)+AT(3,K1)*VR(IS,4,K)                                   INRI-094
      IF (J.GT.IC) GO TO 9                                              INRI-095
      WX(3)=-WX(3)                                                      INRI-096
      WX(4)=-WX(4)                                                      INRI-097
    9 W(IS,1)=W(IS,1)+(WX(1)+WX(3))*Q(IS,3,IC)-(WX(2)+WX(4))*Q(IS,4,IC) INRI-098
      W(IS,2)=W(IS,2)+(WX(1)+WX(3))*Q(IS,4,IC)+(WX(2)+WX(4))*Q(IS,3,IC) INRI-099
      W(IS,3)=W(IS,3)+(WX(1)-WX(3))*Q(IS,1,IC)-(WX(2)-WX(4))*Q(IS,2,IC) INRI-100
   10 W(IS,4)=W(IS,4)+(WX(1)-WX(3))*Q(IS,2,IC)+(WX(2)-WX(4))*Q(IS,1,IC) INRI-101
      GO TO 15                                                          INRI-102
C COUPLING POTENTIALS COMPUTED IN INTR.                                 INRI-103
   11 K1=NVI(IC,J,3)                                                    INRI-104
      IF (K1.EQ.0) GO TO 13                                             INRI-105
C SCALAR AND VECTOR TERMS OF COUPLING POTENTIALS.                       INRI-106
      DO 12 IS=K3,ISM                                                   INRI-107
      W(IS,1)=W(IS,1)+WW(IS,1,K1)*Q(IS,1,IC)-WW(IS,2,K1)*Q(IS,2,IC)     INRI-108
      W(IS,2)=W(IS,2)+WW(IS,1,K1)*Q(IS,2,IC)+WW(IS,2,K1)*Q(IS,1,IC)     INRI-109
      W(IS,3)=W(IS,3)+WW(IS,3,K1)*Q(IS,3,IC)-WW(IS,4,K1)*Q(IS,4,IC)     INRI-110
   12 W(IS,4)=W(IS,4)+WW(IS,3,K1)*Q(IS,4,IC)+WW(IS,4,K1)*Q(IS,3,IC)     INRI-111
   13 K1=NVI(IC,J,4)                                                    INRI-112
C TENSOR TERMS OF COUPLING POTENTIALS.                                  INRI-113
      IF (K1.EQ.0) GO TO 15                                             INRI-114
      L1=1                                                              INRI-115
      IF (J.LT.IC) L1=3                                                 INRI-116
      L2=4-L1                                                           INRI-117
      DO 14 IS=K3,ISM                                                   INRI-118
      W(IS,1)=W(IS,1)+WW(IS,L1,K1)*Q(IS,3,IC)-WW(IS,L1+1,K1)*Q(IS,4,IC) INRI-119
      W(IS,2)=W(IS,2)+WW(IS,L1,K1)*Q(IS,4,IC)+WW(IS,L1+1,K1)*Q(IS,3,IC) INRI-120
      W(IS,3)=W(IS,3)+WW(IS,L2,K1)*Q(IS,1,IC)-WW(IS,L2+1,K1)*Q(IS,2,IC) INRI-121
   14 W(IS,4)=W(IS,4)+WW(IS,L2,K1)*Q(IS,2,IC)+WW(IS,L2+1,K1)*Q(IS,1,IC) INRI-122
   15 CONTINUE                                                          INRI-123
      IPI(J)=IDP                                                        INRI-124
C SEARCH FOR THE FIRST NON NEGLIGIBLE VALUE.                            INRI-125
      IF (IDP.GT.ISM) GO TO 28                                          INRI-126
      DO 16 IS=IDP,ISM                                                  INRI-127
      IF ((DABS(W(IS,1))+DABS(W(IS,2))+DABS(W(IS,3))+DABS(W(IS,4))).GT.HINRI-128
     1CONV) GO TO 17                                                    INRI-129
   16 CONTINUE                                                          INRI-130
   17 IPI(J)=IS                                                         INRI-131
      IF (IPI(J).GE.ISM) GO TO 28                                       INRI-132
      KT=MAX0(IPI(J),1)                                                 INRI-133
C INTEGRAL OF THE REGULAR FUNCTION WITH THE SECOND MEMBER.              INRI-134
      X(1,KT)=P(KT,2)*W(KT,2)-P(KT,1)*W(KT,1)+P(KT,6)*W(KT,4)-P(KT,5)*W(INRI-135
     1KT,3)                                                             INRI-136
      X(2,KT)=-P(KT,1)*W(KT,2)-P(KT,2)*W(KT,1)-P(KT,5)*W(KT,4)-P(KT,6)*WINRI-137
     1(KT,3)                                                            INRI-138
      KKT=KT+1                                                          INRI-139
      IF (KKT.GT.ISM) GO TO 19                                          INRI-140
      DO 18 IS=KKT,ISM                                                  INRI-141
      X(1,IS)=X(1,IS-1)-P(IS,1)*W(IS,1)+P(IS,2)*W(IS,2)-P(IS,5)*W(IS,3)+INRI-142
     1P(IS,6)*W(IS,4)                                                   INRI-143
   18 X(2,IS)=X(2,IS-1)-P(IS,1)*W(IS,2)-P(IS,2)*W(IS,1)-P(IS,5)*W(IS,4)-INRI-144
     1P(IS,6)*W(IS,3)                                                   INRI-145
C SCATTERING COEFFICIENTS.                                              INRI-146
   19 HX=Z(3)*H                                                         INRI-147
      HY=Z(4)*H                                                         INRI-148
      A=X(1,ISM)/FAM(1)-Z(1)                                            INRI-149
      B=X(2,ISM)/FAM(1)-Z(2)                                            INRI-150
      IF (LO(30)) GO TO 27                                              INRI-151
      IST=ISM+KT                                                        INRI-152
      R=H*DFLOAT(ISM)                                                   INRI-153
      DO 20 IS=KT,ISM                                                   INRI-154
      JS=IST-IS                                                         INRI-155
      Q(JS,1,J)=(X(1,JS)*P(JS,3)-X(2,JS)*P(JS,4)-HX*P(JS,1)+HY*P(JS,2)-.INRI-156
     15D0*W(JS,3))/H+(V(JS,5)*W(JS,1)-V(JS,6)*W(JS,2)+W(JS,3)*(CC/R+V(JSINRI-157
     2,13))-W(JS,4)*V(JS,14))/12.D0                                     INRI-158
      Q(JS,2,J)=(X(1,JS)*P(JS,4)+X(2,JS)*P(JS,3)-HY*P(JS,1)-HX*P(JS,2)-.INRI-159
     15D0*W(JS,4))/H+(V(JS,5)*W(JS,2)+V(JS,6)*W(JS,1)+W(JS,4)*(CC/R+V(JSINRI-160
     2,13))+W(JS,3)*V(JS,14))/12.D0                                     INRI-161
      Q(JS,3,J)=(X(1,JS)*P(JS,7)-X(2,JS)*P(JS,8)-HX*P(JS,5)+HY*P(JS,6)+.INRI-162
     15D0*W(JS,1))/H+(V(JS,7)*W(JS,3)-V(JS,8)*W(JS,4)+W(JS,1)*(CC/R+V(JSINRI-163
     2,13))-W(JS,2)*V(JS,14))/12.D0                                     INRI-164
      Q(JS,4,J)=(X(1,JS)*P(JS,8)+X(2,JS)*P(JS,7)-HY*P(JS,5)-HX*P(JS,6)+.INRI-165
     15D0*W(JS,2))/H+(V(JS,7)*W(JS,4)+V(JS,8)*W(JS,3)+W(JS,2)*(CC/R+V(JSINRI-166
     2,13))+W(JS,1)*V(JS,14))/12.D0                                     INRI-167
      HX=HX+P(JS,3)*W(JS,1)-P(JS,4)*W(JS,2)+P(JS,7)*W(JS,3)-P(JS,8)*W(JSINRI-168
     1,4)                                                               INRI-169
      HY=HY+P(JS,3)*W(JS,2)+P(JS,4)*W(JS,1)+P(JS,7)*W(JS,4)+P(JS,8)*W(JSINRI-170
     1,3)                                                               INRI-171
   20 R=R-H                                                             INRI-172
C CORRECTIONS OF ORDER H**4.                                            INRI-173
      KT1=KT+3                                                          INRI-174
      ISM3=ISM-3                                                        INRI-175
      IF (KT1.GT.ISM3) GO TO 22                                         INRI-176
      HZ=H*720.D0                                                       INRI-177
      DO 21 IS=KT1,ISM3                                                 INRI-178
      Q(IS,1,J)=Q(IS,1,J)-(45.D0*(W(IS+1,3)-W(IS-1,3))-9.D0*(W(IS+2,3)-WINRI-179
     1(IS-2,3))+W(IS+3,3)-W(IS-3,3))/HZ                                 INRI-180
      Q(IS,2,J)=Q(IS,2,J)-(45.D0*(W(IS+1,4)-W(IS-1,4))-9.D0*(W(IS+2,4)-WINRI-181
     1(IS-2,4))+W(IS+3,4)-W(IS-3,4))/HZ                                 INRI-182
      Q(IS,3,J)=Q(IS,3,J)+(45.D0*(W(IS+1,1)-W(IS-1,1))-9.D0*(W(IS+2,1)-WINRI-183
     1(IS-2,1))+W(IS+3,1)-W(IS-3,1))/HZ                                 INRI-184
   21 Q(IS,4,J)=Q(IS,4,J)+(45.D0*(W(IS+1,2)-W(IS-1,2))-9.D0*(W(IS+2,2)-WINRI-185
     1(IS-2,2))+W(IS+3,2)-W(IS-3,2))/HZ                                 INRI-186
   22 IF (KT.EQ.1) GO TO 24                                             INRI-187
      K=KT-1                                                            INRI-188
      DO 23 IS=1,K                                                      INRI-189
      Q(IS,1,J)=-(HX*P(IS,1)-HY*P(IS,2))/H                              INRI-190
      Q(IS,2,J)=-(HY*P(IS,1)+HX*P(IS,2))/H                              INRI-191
      Q(IS,3,J)=-(HX*P(IS,5)-HY*P(IS,6))/H                              INRI-192
   23 Q(IS,4,J)=-(HY*P(IS,5)+HX*P(IS,6))/H                              INRI-193
   24 DO 25 KT=1,ISM                                                    INRI-194
      IF ((DABS(Q(KT,1,J))+DABS(Q(KT,2,J))+DABS(Q(KT,3,J))+DABS(Q(KT,4,JINRI-195
     1))).GT.ACONV) GO TO 26                                            INRI-196
   25 CONTINUE                                                          INRI-197
   26 IPI(J)=KT                                                         INRI-198
      IF (LO(22)) GO TO 27                                              INRI-199
      PAD1(1,KITER)=A                                                   INRI-200
      PAD1(2,KITER)=B                                                   INRI-201
C  TEST OF CONVERGENCE.                                                 INRI-202
   27 LO(105)=(DABS(B-FAI(1)).LE.EITER.AND.(DABS(A-FAR(1)).LE.EITER))   INRI-203
      IF ((.NOT.LO(22)).AND.LO(104).AND.KITER.GT.3.AND.(.NOT.LO(105))) CINRI-204
     1ALL PADE(PAD1,PAD2,KITER,A,B,EITER,1.D0,0.D0,LO)                  INRI-205
      LO(104)=LO(104).AND.LO(105)                                       INRI-206
      FAR(1)=A                                                          INRI-207
      FAI(1)=B                                                          INRI-208
      IF (LO(57)) WRITE (MW,1000) J,FAR(1),FAI(1),KITER,KT              INRI-209
      RETURN                                                            INRI-210
   28 IF (LO(22)) RETURN                                                INRI-211
      PAD1(1,KITER)=0.D0                                                INRI-212
      PAD1(2,KITER)=0.D0                                                INRI-213
      RETURN                                                            INRI-214
 1000 FORMAT (5X,I5,2D30.15,I10,10X,I5)                                 INRI-215
      END                                                               INRI-216
C 12/02/06                                                      ECIS12  PADE-000
      SUBROUTINE PADE(R,P,MM,BRE,BIM,EITER,VLR,VLI,LO)                  PADE-001
C  PADE APPROXIMANT OF TYPE I, CONTINUED FRACTION.                      PADE-002
C INPUT:     R:       PARTIAL TAYLOR SUMS.                              PADE-003
C            MM:      NUMBER OF COMPONENTS OF P.                        PADE-004
C            EITER:   CONVERGENCE CRITERION.                            PADE-005
C            VLR,VLI: VARIABLE   HERE TAKEN AS (1.D0,0.D0).             PADE-006
C            LO(I):   LOGICAL CONTROLS:                                 PADE-007
C               LO(23) =.TRUE. NO USE OF PADE AND SHIFT TO USUAL COUPLEDPADE-008
C                              EQUATIONS WHEN THERE IS NO CONVERGENCE.  PADE-009
C               LO(57) =.TRUE. OUTPUT PHASE-SHIFTS AT EACH ITERATION.   PADE-010
C               LO(105)=.TRUE. CONVERGENCE OBTAINED FOR THIS EQUATION.  PADE-011
C               LO(106)=.TRUE. WHEN THE ITERATION IS NOT THE LAST ONE   PADE-012
C                              ALLOWED.                                 PADE-013
C OUTPUT:    BRE,BIM: RESULT IF CONVERGENCE IS OBTAINED.                PADE-014
C WORKING AREA:                                                         PADE-015
C            P:       AT LEAST TWICE AS LONG AS R.                      PADE-016
C***********************************************************************PADE-017
      IMPLICIT REAL*8 (A-H,O-Z)                                         PADE-018
      DIMENSION R(2,MM),P(2,2,MM)                                       PADE-019
      LOGICAL LO(150)                                                   PADE-020
      COMMON /INOUT/ MR,MW,MS                                           PADE-021
      LO(105)=.TRUE.                                                    PADE-022
      IF (MM.GT.3) GO TO 1                                              PADE-023
      LO(105)=.FALSE.                                                   PADE-024
      RETURN                                                            PADE-025
C TAYLOR COEFFICIENTS.                                                  PADE-026
    1 MT=MM+1                                                           PADE-027
      P(1,1,1)=R(1,1)                                                   PADE-028
      P(1,2,1)=0.D0                                                     PADE-029
      P(2,1,1)=R(2,1)                                                   PADE-030
      P(2,2,1)=0.D0                                                     PADE-031
      DO 2 I=2,MM                                                       PADE-032
      P(1,1,I)=R(1,I)-R(1,I-1)                                          PADE-033
      P(1,2,I)=0.D0                                                     PADE-034
      P(2,1,I)=R(2,I)-R(2,I-1)                                          PADE-035
    2 P(2,2,I)=0.D0                                                     PADE-036
C DECOMPOSITION LOOP.                                                   PADE-037
      NM=MM-1                                                           PADE-038
      DO 6 NA=1,NM                                                      PADE-039
      ML=MM-NA                                                          PADE-040
      ZR=P(1,1,NA)                                                      PADE-041
      ZI=P(2,1,NA)                                                      PADE-042
      IF (DABS(ZR)+DABS(ZI).GE.1.D-8) GO TO 4                           PADE-043
      P(1,2,MT-NA)=0.D0                                                 PADE-044
      P(2,2,MT-NA)=0.D0                                                 PADE-045
      DO 3 J=1,ML                                                       PADE-046
      P(1,1,NA+J)=P(1,1,NA+J)-P(1,1,NA)*P(1,2,J)+P(2,1,NA)*P(2,2,J)     PADE-047
    3 P(2,1,NA+J)=P(2,1,NA+J)-P(2,1,NA)*P(1,2,J)-P(1,1,NA)*P(2,2,J)     PADE-048
      GO TO 6                                                           PADE-049
    4 P(1,2,MT-NA)=1.D0                                                 PADE-050
      DO 5 J=1,ML                                                       PADE-051
      ZX=P(1,1,NA)**2+P(2,1,NA)**2                                      PADE-052
      ZR=(P(1,1,NA+J)*P(1,1,NA)+P(2,1,NA+J)*P(2,1,NA))/ZX               PADE-053
      ZI=(P(2,1,NA+J)*P(1,1,NA)-P(1,1,NA+J)*P(2,1,NA))/ZX               PADE-054
      P(1,1,NA+J)=P(1,2,J)-ZR                                           PADE-055
      P(2,1,NA+J)=P(2,2,J)-ZI                                           PADE-056
      P(1,2,J)=ZR                                                       PADE-057
    5 P(2,2,J)=ZI                                                       PADE-058
    6 CONTINUE                                                          PADE-059
      AR1=1.D30                                                         PADE-060
C TRUNCATED CONTINUED FRACTIONS.                                        PADE-061
      DO 9  N=1,NM                                                      PADE-062
      IP=MM+1-N                                                         PADE-063
      P(1,2,N)=P(1,1,IP)                                                PADE-064
      P(2,2,N)=P(2,1,IP)                                                PADE-065
      DO 8  I=2,IP                                                      PADE-066
      ID=IP+1-I                                                         PADE-067
      IF (P(1,2,MT-ID).GT.0.D0) GO TO 7                                 PADE-068
      AR=VLR*P(1,2,N)-VLI*P(2,2,N)+P(1,1,ID)                            PADE-069
      AI=VLR*P(2,2,N)+VLI*P(1,2,N)+P(2,1,ID)                            PADE-070
      P(1,2,N)=AR                                                       PADE-071
      P(2,2,N)=AI                                                       PADE-072
      GO TO 8                                                           PADE-073
    7 AR=1.D0+VLR*P(1,2,N)-VLI*P(2,2,N)                                 PADE-074
      AI=VLR*P(2,2,N)+VLI*P(1,2,N)                                      PADE-075
      ZX=AR*AR+AI*AI                                                    PADE-076
      P(1,2,N)=(P(1,1,ID)*AR+P(2,1,ID)*AI)/ZX                           PADE-077
      P(2,2,N)=(P(2,1,ID)*AR-P(1,1,ID)*AI)/ZX                           PADE-078
    8 CONTINUE                                                          PADE-079
      IF (N.EQ.1) GO TO 9                                               PADE-080
C SEARCH FOR SMALLEST DIFFERENCE.                                       PADE-081
      ZR=P(1,2,N)-P(1,2,N-1)                                            PADE-082
      ZI=P(2,2,N)-P(2,2,N-1)                                            PADE-083
      AI1=DMAX1(DABS(ZR),DABS(ZI))                                      PADE-084
      IF (AI1.GE.AR1) GO TO 9                                           PADE-085
      NN=N                                                              PADE-086
      AR1=AI1                                                           PADE-087
    9 CONTINUE                                                          PADE-088
      LO(105)=AR1.LE.EITER                                              PADE-089
      IF (LO(57)) WRITE (MW,1000) LO(105),MM,NN,P(1,2,NN),P(2,2,NN),P(1,PADE-090
     12,NN-1),P(2,2,NN-1)                                               PADE-091
      IF ((.NOT.LO(105)).AND.(LO(106).OR.LO(23))) RETURN                PADE-092
      LO(105)=.TRUE.                                                    PADE-093
      BRE=P(1,2,NN-1)                                                   PADE-094
      BIM=P(2,2,NN-1)                                                   PADE-095
      IF (NN.EQ.2) RETURN                                               PADE-096
      BRE=0.5D0*(BRE+P(1,2,NN))                                         PADE-097
      BIM=0.5D0*(BIM+P(2,2,NN))                                         PADE-098
      RETURN                                                            PADE-099
 1000 FORMAT (' PADE',5X,L3,5X,'ITER =',I3,5X,'N =',I3,5X,4D15.8)       PADE-100
      END                                                               PADE-101
C 15/08/12                                                      ECIS12  INCH-000
      SUBROUTINE INCH(V,MC,NAT,AT,LMD,NVI,FAM,Y,X,W,ISM,KAB,NC,NCIN,NML,INCH-001
     1JSX,KR,LO)                                                        INCH-002
C  STANDARD INTEGRATION OF THE COUPLED  EQUATIONS BY THE NUMEROV METHOD.INCH-003
C INPUT:     V:       POTENTIALS AND COUPLINGS.                         INCH-004
C            MC(*,J): ADDRESS OF CENTRAL POTENTIALS FOR J=4.            INCH-005
C            NAT,AT:  GEOMETRICAL COEFFICIENTS.                         INCH-006
C            LMD:     FIRST DIMENSION OF TABLES NAT AND AT.             INCH-007
C            NVI:     ADDRESSES IN THE TABLE NAT,AT.                    INCH-008
C            FAM:     MATCHING VALUES AND CONSTANTS OF EQUATIONS.       INCH-009
C            Y:       COULOMB CORRECTIONS.                              INCH-010
C            ISM:     NUMBER OF RADIAL POINTS.                          INCH-011
C            KAB:     MAXIMUM NUMBER OF COUPLED CHANNELS.               INCH-012
C            NC:      NUMBER OF COUPLED CHANNELS.                       INCH-013
C            NCIN:    NUMBER OF SOLUTIONS.                              INCH-014
C            NML:     MAXIMUM NUMBER OF POINTS WHERE THE COUPLING       INCH-015
C                     POTENTIALS CAN BE CALCULATED AT A TIME.           INCH-016
C            JSX:     PERIODICITY OF THE SCHMIDT'S ORTHOGONALISATION    INCH-017
C                     IF LO(42) IS .TRUE..                              INCH-018
C            LO(I):   LOGICAL CONTROLS:                                 INCH-019
C               LO(26) =.TRUE. INTEGRATION STABILISED FOR LONG RANGE    INCH-020
C                              CONSTANT POTENTIAL.                      INCH-021
C               LO(42) =.TRUE. SCHMIDT'S ORTHOGONALISATION OF SOLUTIONS INCH-022
C                              IN USUAL COUPLED EQUATIONS.              INCH-023
C               LO(44) =.TRUE. COULOMB CORRECTIONS.                     INCH-024
C               LO(57) =.TRUE. OUTPUT PHASE-SHIFTS AT EACH ITERATION.   INCH-025
C               LO(74) =.TRUE. OUTPUT OF TIME IN DIFFERENT STEPS.       INCH-026
C               LO(103)=.TRUE. THERE IS A COULOMB SPIN-ORBIT POTENTIAL. INCH-027
C               LO(129)=.TRUE. REAL SPIN-ORBIT OR DIRAC EQUATION.       INCH-028
C               LO(130)=.TRUE. IMAGINARY SPIN-ORBIT OR DIRAC EQUATION.  INCH-029
C               LO(133)=.TRUE. STORE SCALAR AND COULOMB POTENTIAL       INCH-030
C                              INDEPENDENTLY.                           INCH-031
C OUTPUT:    X:       SCATTERING COEFFICIENTS MULTIPLIED KF/KI          INCH-032
C                     REAL PART IN X(IC,IC',5), IMAGINARY PART IN       INCH-033
C                     X(IC,IC',2) FOR INCOMING CHANNEL IC'.             INCH-034
C WORKING AREAS:                                                        INCH-035
C            W:       REAL/IMAGINARY COUPLING POTENTIALS.               INCH-036
C            X:       NUMEROV RECURRENCE.                               INCH-037
C            KR:      WORKING FIELD FOR LINS.                           INCH-038
C                                                                       INCH-039
C FOR THE COMMON  /POTE2/ SEE REDM.                                     INCH-040
C                                                                       INCH-041
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /POTE2/:                     INCH-042
C  ITY(2):    STARTING ADDRESS OF IMAGINARY CENTRAL POTENTIAL.          INCH-043
C  ITY(3):    STARTING ADDRESS OF REAL SPIN-ORBIT POTENTIAL.            INCH-044
C  ITY(4):    STARTING ADDRESS OF IMAGINARY SPIN-ORBIT POTENTIAL.       INCH-045
C  ITY(9):    STARTING ADDRESS OF COULOMB CENTRAL POTENTIAL.            INCH-046
C  ITY(10):   STARTING ADDRESS OF COULOMB SPIN-ORBIT POTENTIAL.         INCH-047
C   USED:     ITY(2),ITY(3),ITY(4),ITY(9),ITY(10).                      INCH-048
C                                                                       INCH-049
C***********************************************************************INCH-050
      IMPLICIT REAL*8 (A-H,O-Z)                                         INCH-051
      LOGICAL LO(150)                                                   INCH-052
      DIMENSION V(ISM,*),MC(KAB,6),NAT(2*LMD,*),AT(LMD,*),NVI(KAB,KAB,2)INCH-053
     1,FAM(KAB,12),Y(KAB,KAB,4),X(KAB,KAB,6),W(2,NC,NC,*),KR(*)         INCH-054
      COMMON /INOUT/ MR,MW,MS                                           INCH-055
      COMMON /POTE2/ ITY(12),INVT,INTV,INSL,NPX                         INCH-056
      IF (LO(74)) CALL HORA                                             INCH-057
      JR=0                                                              INCH-058
      DO 3 I=1,NC                                                       INCH-059
      DO 2 J=1,NC                                                       INCH-060
      DO 1 K=1,6                                                        INCH-061
    1 X(J,I,K)=0.D0                                                     INCH-062
    2 CONTINUE                                                          INCH-063
    3 X(I,I,3)=1.D-15                                                   INCH-064
C  RADIAL INTEGRATION LOOP.                                             INCH-065
      DO 40 JS=1,ISM                                                    INCH-066
      IS=MOD(JS-1,NML)+1                                                INCH-067
      IF (JS.LE.JR) GO TO 26                                            INCH-068
      JI=JR+1                                                           INCH-069
      M=JS-JI                                                           INCH-070
      JR=MIN0(ISM,JR+NML)                                               INCH-071
C THE POTENTIALS ARE FIRST CALCULATED IN W(1,IC,IC',I) AND              INCH-072
C W(2,IC,IC',I) STARTING WITH I=2   FOR IC LARGER OR EQUAL TO IC'.      INCH-073
      DO 19 L=1,NC                                                      INCH-074
      DO 18 J=L,NC                                                      INCH-075
      DO 4 I=JI,JR                                                      INCH-076
      W(1,J,L,I+1)=0.D0                                                 INCH-077
    4 W(2,J,L,I+1)=0.D0                                                 INCH-078
      IF (L.NE.J) GO TO 12                                              INCH-079
C OPTICAL MODEL CONTRIBUTION.                                           INCH-080
      I1=MC(L,4)                                                        INCH-081
      I2=I1+ITY(2)                                                      INCH-082
      DO 5 I=JI,JR                                                      INCH-083
      W(1,J,L,I+1)=FAM(L,8)-FAM(L,10)/DFLOAT(I+M)**2+FAM(L,7)*V(I+M,I1) INCH-084
    5 W(2,J,L,I+1)=FAM(L,7)*V(I+M,I2)                                   INCH-085
      IF (.NOT.LO(129)) GO TO 8                                         INCH-086
      I2=I1+ITY(3)                                                      INCH-087
      DO 6 I=JI,JR                                                      INCH-088
    6 W(1,J,L,I+1)=W(1,J,L,I+1)+FAM(L,9)*V(I+M,I2)                      INCH-089
      IF (.NOT.LO(130)) GO TO 8                                         INCH-090
      I2=I1+ITY(4)                                                      INCH-091
      DO 7 I=JI,JR                                                      INCH-092
    7 W(2,J,L,I+1)=W(2,J,L,I+1)+FAM(L,9)*V(I+M,I2)                      INCH-093
    8 IF (.NOT.LO(133)) GO TO 12                                        INCH-094
      IF (FAM(L,11).EQ.0.D0) GO TO 10                                   INCH-095
      I2=I1+ITY(9)                                                      INCH-096
      DO 9 I=JI,JR                                                      INCH-097
    9 W(1,J,L,I+1)=W(1,J,L,I+1)+FAM(L,11)*V(I+M,I2)                     INCH-098
   10 IF (.NOT.LO(103)) GO TO 12                                        INCH-099
      I2=I1+ITY(10)                                                     INCH-100
      DO 11 I=JI,JR                                                     INCH-101
   11 W(1,J,L,I+1)=W(1,J,L,I+1)+FAM(L,12)*V(I+M,I2)                     INCH-102
C COUPLED CHANNEL CONTRIBUTION.                                         INCH-103
   12 K1=NVI(J,L,1)                                                     INCH-104
      K2=NVI(J,L,2)                                                     INCH-105
      IF (K1.GT.K2) GO TO 18                                            INCH-106
      DO 17 K=K1,K2                                                     INCH-107
      KT=NAT(1,K)                                                       INCH-108
      KU=NAT(2,K)                                                       INCH-109
      DO 13 I=JI,JR                                                     INCH-110
   13 W(1,J,L,I+1)=W(1,J,L,I+1)+AT(2,K)*V(I+M,KT)                       INCH-111
      IF (NAT(2,K).EQ.0) GO TO 15                                       INCH-112
      KU=NAT(2,K)+ITY(2)                                                INCH-113
      DO 14 I=JI,JR                                                     INCH-114
   14 W(2,J,L,I+1)=W(2,J,L,I+1)+AT(2,K)*V(I+M,KU)                       INCH-115
   15 IF (.NOT.LO(133)) GO TO 17                                        INCH-116
      IF (AT(3,K).EQ.0.D0) GO TO 17                                     INCH-117
      KU=KT+ITY(11)                                                     INCH-118
      DO 16 I=JI,JR                                                     INCH-119
   16 W(1,J,L,I+1)=W(1,J,L,I+1)+AT(3,K)*V(I+M,KU)                       INCH-120
   17 CONTINUE                                                          INCH-121
   18 CONTINUE                                                          INCH-122
   19 CONTINUE                                                          INCH-123
      JJ=JR-JI+1                                                        INCH-124
      DO 25 I=1,JJ                                                      INCH-125
      J=I+1                                                             INCH-126
C SYMMETRISATION OF OLD VALUES.                                         INCH-127
      DO 21 K=1,NC                                                      INCH-128
      DO 20 L=K,NC                                                      INCH-129
      W(1,K,L,J)=W(1,L,K,J)                                             INCH-130
   20 W(2,K,L,J)=W(2,L,K,J)                                             INCH-131
   21 CONTINUE                                                          INCH-132
C COMPUTATION OF V +V*V/12. FOR L LARGER OR EQUAL TO K.                 INCH-133
      DO 24 K=1,NC                                                      INCH-134
      DO 23 L=K,NC                                                      INCH-135
      BRE=0.D0                                                          INCH-136
      BIM=0.D0                                                          INCH-137
      DO 22 N=1,NC                                                      INCH-138
      BRE=BRE-W(1,N,K,J)*W(1,N,L,J)+W(2,N,K,J)*W(2,N,L,J)               INCH-139
   22 BIM=BIM-W(2,N,K,J)*W(1,N,L,J)-W(1,N,K,J)*W(2,N,L,J)               INCH-140
C SYMMETRISATION.                                                       INCH-141
      W(1,L,K,I)=W(1,L,K,J)+BRE/12.D0                                   INCH-142
      W(2,L,K,I)=W(2,L,K,J)+BIM/12.D0                                   INCH-143
      W(1,K,L,I)=W(1,L,K,I)                                             INCH-144
   23 W(2,K,L,I)=W(2,L,K,I)                                             INCH-145
      IF (LO(26)) W(1,K,K,I)=W(1,K,K,I)+W(1,K,K,J)**3/360.D0            INCH-146
   24 CONTINUE                                                          INCH-147
   25 CONTINUE                                                          INCH-148
   26 DO 33 I=1,NC                                                      INCH-149
      DO 27 J=1,NC                                                      INCH-150
      X(I,J,1)=X(I,J,2)                                                 INCH-151
      X(I,J,2)=X(I,J,3)                                                 INCH-152
      X(I,J,4)=X(I,J,5)                                                 INCH-153
   27 X(I,J,5)=X(I,J,6)                                                 INCH-154
   28 DO 30 J=1,NC                                                      INCH-155
      HX=0.D0                                                           INCH-156
      HY=0.D0                                                           INCH-157
      DO 29 K=1,NC                                                      INCH-158
      HX=HX+W(1,K,J,IS)*X(I,K,2)-W(2,K,J,IS)*X(I,K,5)                   INCH-159
   29 HY=HY+W(2,K,J,IS)*X(I,K,2)+W(1,K,J,IS)*X(I,K,5)                   INCH-160
      X(I,J,3)=X(I,J,2)+X(I,J,2)-X(I,J,1)-HX                            INCH-161
   30 X(I,J,6)=X(I,J,5)+X(I,J,5)-X(I,J,4)-HY                            INCH-162
      IF (DABS(X(I,I,3)).LT.1.D15) GO TO 33                             INCH-163
      DO 32 JI=1,6                                                      INCH-164
      DO 31 IJ=1,NC                                                     INCH-165
   31 X(I,IJ,JI)=X(I,IJ,JI)*1.D-30                                      INCH-166
   32 CONTINUE                                                          INCH-167
      GO TO 28                                                          INCH-168
   33 CONTINUE                                                          INCH-169
      IF (.NOT.(LO(42).AND.(MOD(JS,JSX).EQ.0).AND.(JS.NE.ISM))) GO TO 40INCH-170
C  SCHMIDT ORTHOGONALISATION PROCEDURE EVERY JSX STEPS.                 INCH-171
      DO 39 I=1,NC                                                      INCH-172
      IF (I.EQ.1) GO TO 37                                              INCH-173
      IM=I-1                                                            INCH-174
      DO 36 K=1,IM                                                      INCH-175
      X(I,K,1)=0.D0                                                     INCH-176
      X(I,K,4)=0.D0                                                     INCH-177
      DO 34 J=1,NC                                                      INCH-178
      X(I,K,1)=X(I,K,1)+X(K,J,2)*X(I,J,2)-X(K,J,5)*X(I,J,5)             INCH-179
   34 X(I,K,4)=X(I,K,4)+X(K,J,5)*X(I,J,2)+X(K,J,2)*X(I,J,5)             INCH-180
      BRE=X(I,K,1)*X(K,K,1)-X(I,K,4)*X(K,K,4)                           INCH-181
      BIM=X(I,K,1)*X(K,K,4)+X(I,K,4)*X(K,K,1)                           INCH-182
      DO 35 J=1,NC                                                      INCH-183
      X(I,J,2)=X(I,J,2)-BRE*X(K,J,2)+BIM*X(K,J,5)                       INCH-184
      X(I,J,5)=X(I,J,5)-BRE*X(K,J,5)-BIM*X(K,J,2)                       INCH-185
      X(I,J,3)=X(I,J,3)-BRE*X(K,J,3)+BIM*X(K,J,6)                       INCH-186
   35 X(I,J,6)=X(I,J,6)-BRE*X(K,J,6)-BIM*X(K,J,3)                       INCH-187
   36 CONTINUE                                                          INCH-188
   37 BRE=0.D0                                                          INCH-189
      BIM=0.D0                                                          INCH-190
      DO 38 J=1,NC                                                      INCH-191
      BRE=BRE+X(I,J,2)**2-X(I,J,5)**2                                   INCH-192
   38 BIM=BIM+2.D0*X(I,J,2)*X(I,J,5)                                    INCH-193
      BIM=BIM/BRE                                                       INCH-194
      X(I,I,1)=1.D0/(BRE*(1.D0+BIM**2))                                 INCH-195
   39 X(I,I,4)=-X(I,I,1)*BIM                                            INCH-196
   40 CONTINUE                                                          INCH-197
      IF (LO(74)) CALL HORA                                             INCH-198
C  MATRICES OF PSEUDO-WRONSKIANS FOR THE MATCHING CONDITION.            INCH-199
      DO 42 I=1,NC                                                      INCH-200
      DO 41 J=1,NC                                                      INCH-201
      X(I,J,2)=(X(I,J,1)*FAM(J,2)-FAM(J,1)*X(I,J,3))                    INCH-202
      X(I,J,5)=(X(I,J,6)*FAM(J,1)-FAM(J,2)*X(I,J,4))                    INCH-203
      X(I,J,1)=(X(I,J,3)*FAM(J,3)-FAM(J,4)*X(I,J,1))                    INCH-204
      X(I,J,4)=(X(I,J,4)*FAM(J,4)-FAM(J,3)*X(I,J,6))                    INCH-205
      IF (FAM(J,8).LT.0.D0) GO TO 41                                    INCH-206
      X(I,J,1)=X(I,J,1)-X(I,J,5)                                        INCH-207
      X(I,J,4)=X(I,J,4)+X(I,J,2)                                        INCH-208
   41 CONTINUE                                                          INCH-209
   42 CONTINUE                                                          INCH-210
C  COMPLEX LINEAR SYSTEM OF EQUATIONS.                                  INCH-211
      NCX=NCIN                                                          INCH-212
      IF (LO(44)) NCX=NC                                                INCH-213
      CALL LINS(X(1,1,4),KAB,X,KAB,X(1,1,5),KAB,X(1,1,2),KAB,NC,NCX,KR,IINCH-214
     1ER)                                                               INCH-215
      IF (IER.NE.0) GO TO 48                                            INCH-216
      IF (.NOT.LO(44)) RETURN                                           INCH-217
C BUILDING THE LINEAR SYSTEM FOR S-MATRIX WITH COULOMB CORRECTIONS.     INCH-218
      DO 45 I=1,NC                                                      INCH-219
      DO 44 J=1,NC                                                      INCH-220
      X(I,J,1)=Y(J,I,1)                                                 INCH-221
      X(I,J,3)=X(I,J,2)                                                 INCH-222
      X(I,J,4)=Y(J,I,2)                                                 INCH-223
      X(I,J,6)=-Y(J,I,1)+X(I,J,5)                                       INCH-224
      DO 43 K=1,NC                                                      INCH-225
      X(I,J,1)=X(I,J,1)-(Y(J,K,1)-Y(J,K,4))*X(I,K,2)+(Y(J,K,3)+Y(J,K,2))INCH-226
     1*X(I,K,5)                                                         INCH-227
      X(I,J,3)=X(I,J,3)-Y(J,K,3)*X(I,K,2)-Y(J,K,1)*X(I,K,5)             INCH-228
      X(I,J,4)=X(I,J,4)-(Y(J,K,1)-Y(J,K,4))*X(I,K,5)-(Y(J,K,2)+Y(J,K,3))INCH-229
     1*X(I,K,2)                                                         INCH-230
   43 X(I,J,6)=X(I,J,6)-Y(J,K,3)*X(I,K,5)+Y(J,K,1)*X(I,K,2)             INCH-231
   44 CONTINUE                                                          INCH-232
   45 X(I,I,4)=X(I,I,4)+1.D0                                            INCH-233
C TRANSFER OF THE SECOND MEMBERS IN X(1,1,5) AND X(1,1,2).              INCH-234
      DO 47 I=1,NC                                                      INCH-235
      DO 46 J=1,NC                                                      INCH-236
      Y(I,J,2)=X(I,J,2)                                                 INCH-237
      X(I,J,2)=X(I,J,3)                                                 INCH-238
      Y(I,J,1)=X(I,J,5)                                                 INCH-239
   46 X(I,J,5)=X(I,J,6)                                                 INCH-240
   47 CONTINUE                                                          INCH-241
      CALL LINS(X(1,1,4),KAB,X,KAB,X(1,1,5),KAB,X(1,1,2),KAB,NC,NCIN,KR INCH-242
     1,IER)                                                             INCH-243
      IF (IER.NE.0) GO TO 48                                            INCH-244
      IF (LO(57)) WRITE (MW,1000) ((I,J,Y(I,J,1),Y(I,J,2),X(I,J,5),X(I,JINCH-245
     1,2),J=1,NCIN),I=1,NC)                                             INCH-246
      RETURN                                                            INCH-247
   48 WRITE (MW,1001) IER                                               INCH-248
      STOP                                                              INCH-249
 1000 FORMAT (/25X,'UNCORRECTED VALUES',30X,'CORRECTED VALUES'/(2X,2I3,4INCH-250
     1D25.15))                                                          INCH-251
 1001 FORMAT (' RETURN FROM LINS WITH IER =',I2///' IN INCH  ...  STOP  INCH-252
     1...')                                                             INCH-253
      END                                                               INCH-254
C 10/05/07                                                      ECIS12  SCAM-000
      SUBROUTINE SCAM(F,FCN,TX,GCN,JMAX,KMAX,MC,MD,FAR,FAI,WV,NCOLL,NCOLSCAM-001
     1S,KAB,KBA,IPI,IPIM,GAM,FISS,TL,NCJ,XD,P,Q,V,NCT,IQ,AA,KBC,IDT,LO) SCAM-002
C STORAGE OF SCATTERING COEFFICIENTS.                                   SCAM-003
C INPUT:     JMAX:    MAXIMUM NUMBER OF CHANNEL SPINS, DIMENSION FOR F. SCAM-004
C            KMAX:    MAXIMUM NUMBER OF L OF COMPOUND NUCLEUS,          SCAM-005
C                     DIMENSION FOR FCN, GCN.                           SCAM-006
C            MC:      NUCLEAR STATE NUMBERS, ANGULAR MOMENTA,  SEE QUAN.SCAM-007
C            MD:      EXTENDED MC FOR IDENTICAL PARTICLES WITH SPIN.    SCAM-008
C            FAR/FAI: REAL/IMAGINARY PART OF SCATTERING COEFFICIENTS.   SCAM-009
C            WV:      WAVE NUMBER AND COULOMB PARAMETER.  SEE COLF.     SCAM-010
C            NCOLL:   NUMBER OF COUPLED LEVELS.                         SCAM-011
C            NCOLS:   NUMBER OF LEVELS WITH ANGULAR DISTRIBUTION.       SCAM-012
C            KAB:     DIMENSION FOR MC.                                 SCAM-013
C            KBA:     NUMBER OF INDEPENDENT AMPLITUDES.                 SCAM-014
C            IPI:     PARITY, MULTIPLICITIES, ADDRESSES IN F (SEE CALX).SCAM-015
C            IPIM:    IPI FOR CONTINUA OF COMPOUND NUCLEUS.             SCAM-016
C            GAM:     GAMMA TRANSMISSION COEFFICIENTS READ.             SCAM-017
C            FISS:    FISSION COEFFICIENTS FOR COMPOUND NUCLEUS.        SCAM-018
C            TL:      TRANSMISSION COEFFICIENTS OF UNCOUPLED LEVELS.    SCAM-019
C            NCJ:     STARTING AND FINAL ADDRESSES FOR CONTINUA.        SCAM-020
C            XD:      ENERGY AND SPIN DEPENDENCE OF LEVEL DENSITIES.    SCAM-021
C            NCT:     NUMBER OF EQUATIONS AND SOLUTIONS FOR EACH PARITY.SCAM-022
C            IQ:      DIMENSION FOR V.                                  SCAM-023
C            AA:      COEFFICIENTS OF SYMMETRISATION.                   SCAM-024
C            KBC:     DIMENSION FOR AA.                                 SCAM-025
C            IDT:     SIZE AVAILABLE FOR THE Q IN DOUBLE PRECISION.     SCAM-026
C            LO(I):   LOGICAL CONTROLS:                                 SCAM-027
C               LO(18) =.TRUE. PROJECTILE-TARGET ANTISYMMETRISATION.    SCAM-028
C               LO(55) =.TRUE. OUTPUT OF C-MATRIX ELEMENTS AND OF       SCAM-029
C                              COMPOUND NUCLEUS INTERMEDIATE RESULTS.   SCAM-030
C               LO(63) =.TRUE. PENETRABILITIES WRITTEN ON FILE 63.      SCAM-031
C               LO(82) =.TRUE. OLD SIMPLIFIED COMPOUND NUCLEUS.         SCAM-032
C               LO(83) =.TRUE. NO ENGELBRETCH-WEIDENMULLER TRANSFORM.   SCAM-033
C               LO(85) =.TRUE. FISSION TRANSMISSION COEFFICIENTS.       SCAM-034
C               LO(86) =.TRUE. GAMMA EMISSION IN COMPOUND NUCLEUS.      SCAM-035
C               LO(87) =.TRUE. NO WIDTH FLUCTUATIONS.                   SCAM-036
C               LO(123)=.TRUE. IDENTICAL PARTICLES WITH SPIN.           SCAM-037
C               LO(124)=.TRUE. COMPUTE TRANSMISSION COEFFICIENTS.       SCAM-038
C               LO(125)=.TRUE. USUAL COUPLED EQUATIONS.                 SCAM-039
C               LO(131)=.TRUE. TOTAL SPIN IS TOO LARGE FOR COMPOUND     SCAM-040
C                              NUCLEUS.                                 SCAM-041
C               LO(132)=.TRUE. STORE FISSION AND GAMMA TRANSMISSION     SCAM-042
C                              COEFFICIENTS FOR INTERPOLATION.          SCAM-043
C OUTPUT:    F:       SCATTERING COEFFICIENTS.                          SCAM-044
C            FCN:     COMPOUND NUCLEUS CONTRIBUTIONS.                   SCAM-045
C            TX:      TOTAL REACTION CROSS SECTION IN MB FOLLOWED BY    SCAM-046
C                     THE TOTAL DIRECT CROSS SECTIONS OF COUPLED        SCAM-047
C                     LEVELS, THE TOTAL COMPOUND CROSS SECTIONS OF      SCAM-048
C                     LEVELS, THE FISSION AND GAMMA CROSS SECTIONS.     SCAM-049
C            GCN:     COMPOUND NUCLEUS COEFFICIENTS OF LEGENDRE         SCAM-050
C                     POLYNOMIALS.                                      SCAM-051
C WORKING AREAS:                                                        SCAM-052
C            P:       FOR DIAGONALISATION OF THE S MATRIX.              SCAM-053
C            Q:       FOR ANGULAR DISTRIBUTION OF COMPOUND NUCLEUS.     SCAM-054
C            V(1,*):  LEVEL AND QUANTUM NUMBERS.                        SCAM-055
C            V(2,*):  WEIGH FOR CONTINUA.                               SCAM-056
C            V(3,*):  TRANSMISSION COEFFICIENTS.                        SCAM-057
C            V(4,*):  WIDTH FLUCTUATION PARAMETER.                      SCAM-058
C            V(5,*):  CONTRIBUTION TO COMPOUND NUCLEUS.                 SCAM-059
C                                                                       SCAM-060
C FOR THE COMMON  /DCONS/ SEE CALC.                                     SCAM-061
C FOR THE COMMON  /NCOMP/ SEE CALX.                                     SCAM-062
C FOR THE COMMON  /NOEQU/ SEE QUAN.                                     SCAM-063
C                                                                       SCAM-064
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     SCAM-065
C  XZ:        CONVERSION FACTOR TO MILLIBARNS.                          SCAM-066
C   USED:     XZ.                                                       SCAM-067
C                                                                       SCAM-068
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     SCAM-069
C  NFISS:     NUMBER OF FISSION TRANSMISSION COEFFICIENTS.              SCAM-070
C  NRD:       NUMBER OF GAMMA TRANSMISSION COEFFICIENTS.                SCAM-071
C  NCONT:     NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS.                 SCAM-072
C  NCOJ:      NUMBER OF SPINS OF THE TARGET FOR A CONTINUUM.            SCAM-073
C  NCOLX:     TOTAL NUMBER OF LEVELS WITHOUT DISCRETISATION.            SCAM-074
C  NDP:       ADDRESS OF FISSION AND GAMMA FINAL RESULTS.               SCAM-075
C  NDQ:       ADDRESS OF FISSION AND GAMMA INTERMEDIATE RESULTS.        SCAM-076
C  BZ:        HAUSER-FESHBACH AND MOLDAUER'S PARAMETERS DESCRIBED BELOW.SCAM-077
C   BZ(1):    SQUARE ROOT OF ELASTIC ENHANCEMENT.                       SCAM-078
C   BZ(2):    IF LO(82)=.TRUE., SPIN CUT-OFF PARAMETER.                 SCAM-079
C             IF LO(82)=.FALSE., PARTICLE DEGREES OF FREEDOM.           SCAM-080
C   BZ(3):    SQUARE ROOT OF LEVEL DENSITY PARAMETER. IF LO(82)=LO(87)= SCAM-081
C             .FALSE., PARAMETER BZ(3) IN MOLDAUER'S FORMULA OF INPUT   SCAM-082
C             DESCRIPTION.                                              SCAM-083
C   BZ(4):    IF LO(82)=LO(87)=.FALSE., PARAMETER BZ(4) IN SAME FORMULA.SCAM-084
C   BZ(5):    IF LO(82)=LO(87)=.FALSE., PARAMETER BZ(5) IN SAME FORMULA.SCAM-085
C  FNUG:      RADIATIVE DEGREES OF FREEDOM.                             SCAM-086
C  TG1:       DERIVED DATA FOR GAMMA IN COMPOUND NUCLEUS.               SCAM-087
C  SGSQ:      DERIVED DATA FOR GAMMA IN COMPOUND NUCLEUS.               SCAM-088
C   USED:     NFISS,NRD,NCONT,NCOJ,NCOLX,NDP,NDQ,BZ,FNUG,TG1,SGSQ       SCAM-089
C                                                                       SCAM-090
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NOEQU/:                     SCAM-091
C  NIC:       NUMBER OF EQUATIONS AT THE CHANNEL SPIN.                  SCAM-092
C  NCI:       NUMBER OF SOLUTIONS AT THE CHANNEL SPIN.                  SCAM-093
C  NC:        NUMBER OF EQUATIONS FOR IDENTICAL PARTICLES.              SCAM-094
C  NCIN:      NUMBER OF SOLUTIONS FOR IDENTICAL PARTICLES.              SCAM-095
C  JPI:       PARITY 0 OR 1.                                            SCAM-096
C  IPJ:       VALUE OF J+1 OR J+1/2 WHERE J IS THE CHANNEL SPIN.        SCAM-097
C  R1(2):     MAXIMUM OF SCATTERING AND COMPOUND COEFFICIENT.           SCAM-098
C  NAJ:       TWICE THE CHANNEL SPIN J.                                 SCAM-099
C   DEFINED:  R1.                                                       SCAM-100
C   USED:     NIC,NCI,NC,NCIN,JPI,IPJ,R1,NAJ.                           SCAM-101
C                                                                       SCAM-102
C***********************************************************************SCAM-103
      IMPLICIT REAL*8 (A-H,O-Z)                                         SCAM-104
      LOGICAL LO(150),LG(2)                                             SCAM-105
      DIMENSION F(2,JMAX,*),FCN(KMAX,*),TX(*),GCN(KMAX,*),MC(KAB,12),MD(SCAM-106
     1KAB,12),FAR(KAB,*),FAI(KAB,*),WV(22,*),IPI(11,*),IPIM(11,*),GAM(*)SCAM-107
     2,FISS(2,*),TL(*),NCJ(2,*),XD(3,*),P(NC,NC,4),Q(*),V(IQ,*),NCT(6),ASCAM-108
C    3A(KBC,*),X(20),W(20),TP(20),SGF(2),TG(2),FNU(2),MCX(4,2),VCX(4,2) SCAM-109
     3A(KBC,*),            TP(40),SGF(2),TG(2),FNU(2),MCX(4,2),VCX(4,2),RCN  RCN
     4X40(40),W40(40)                                                   RCN  RCN
      CHARACTER*1 IP(2)                                                 SCAM-110
      CHARACTER*8 AL(2)                                                 SCAM-111
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            SCAM-112
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQSCAM-113
     1,ACN(8),BZ(5),TG0,BN,FNUG,EGD,GGD,TG1,SGSQ                        SCAM-114
      COMMON /NOEQU/ NCXN,NIC,NCI,NC,NCIN,NIN,JPI,IPJ,R1(2),NAJ         SCAM-115
      COMMON /INOUT/ MR,MW,MS                                           SCAM-116
      CHARACTER*20 fname                                                RCN  RCN
      LOGICAL unformat                                                  RCN  RCN
      COMMON /NFORM/unformat,fname                                      RCN  RCN
C     DATA NGAUSS/20/                                                   RCN  RCN
      DATA NGAUSS/40/                                                   RCN  RCN
      DATA IP,AL,PI,NSY /'+','-',' FISSION','   GAMMA',3.141592653589793SCAM-117
     12D0,0/                                                            SCAM-118
C     DATA X /7.0539889691988753D-02,3.7212681800161144D-01,9.1658210248SCAM-119
C    1327356D-01,1.7073065310283439D+00,2.7491992553094321D+00,4.0489253SCAM-120
C    2138508869D+00,5.6151749708616165D+00,7.4590174536710633D+00,9.5943SCAM-121
C    3928695810968D+00,1.2038802546964316D+01,1.4814293442630740D+01,1.7SCAM-122
C    4948895520519376D+01,2.1478788240285011D+01,2.5451702793186906D+01,SCAM-123
C    52.9932554631700612D+01,3.5013434240479000D+01,4.0833057056728571D+SCAM-124
C    601,4.7619994047346502D+01,5.5810795750063899D+01,6.652441652561575SCAM-125
C    74D+01/                                                            SCAM-126
C     DATA W /1.8108006241898926D-01,4.2255676787856397D-01,6.6690954670SCAM-127
C    1184815D-01,9.1535237278307367D-01,1.1695397071955460D+00,1.4313549SCAM-128
C    2859282060D+00,1.7029811379850227D+00,1.9870158907927472D+00,2.2866SCAM-129
C    3357812534308D+00,2.6058347275538333D+00,2.9497837342139509D+00,3.3SCAM-130
C    4253957820093196D+00,3.7422554705898109D+00,4.2142367102518804D+00,SCAM-131
C    54.7625184614902093D+00,5.4217260442455743D+00,6.2540123569324213D+SCAM-132
C    600,7.3873143890544346D+00,9.1513287309874796D+00,1.289338864593999SCAM-133
C    77D+01/                                                            SCAM-134
      DATA X40/
     >0.035700394308888385122084471D0,
     >0.188162283158698516003589346D0,
     >0.462694281314576453564937525D0,
     >0.859772963972934922257272225D0,
     >1.380010820527337186498000330D0,
     >2.024209135922826733442066003D0,
     >2.793369353506816457653514486D0,
     >3.688702677908270209591526352D0,
     >4.711641146554972693618722836D0,
     >5.863850878343718114273164238D0,
     >7.147247908102288250685691952D0,
     >8.564017017586163762718522042D0,
     >10.11663404845193940684962966D0,
     >11.80789229400458484284158670D0,
     >13.64093371253708722837167636D0,
     >15.61928589333907383720196365D0,
     >17.74690595009566304257387749D0,
     >20.02823283457489052961261481D0,
     >22.46824998349841835137178623D0,
     >25.07256077242620379439608621D0,
     >27.84748000916886272075170414D0,
     >30.80014573944546270075438520D0,
     >33.93865708491371960909885859D0,
     >37.27224588047600432832076099D0,
     >40.81149282388692046615567558D0,
     >44.56860317533446270712302063D0,
     >48.55776353305999228096204881D0,
     >52.79561118721693296935202114D0,
     >57.30186332339362749503374700D0,
     >62.10017907277511161216819906D0,
     >67.21937092712699879908027755D0,
     >72.69515884761246211752192772D0,
     >78.57280291157130928054389683D0,
     >84.91123113570498454270156471D0,
     >91.78987467123637699233719348D0,
     >99.32080871744680825010905416D0,
     >107.6724406393882725207967676D0,
     >117.1223095126906888076506441D0,
     >128.2018419882556511925411044D0,
     >142.2800444691599978883488354D0/
      DATA W40/	 
     >0.091625471157459897311511698080137483D0,
     >0.213420584905012080007193367121512341D0,
     >0.335718116680284673880510701616292191D0,
     >0.458540935033497560385432380376452497D0,
     >0.582068165779105168990996365401543284D0,
     >0.706495216367219392989830015673016682D0,
     >0.832026903003485238099112947978349524D0,
     >0.958878198794443111448122679676028907D0,
     >1.087276162030549715753869333172026616D0,
     >1.217462327977780978954277850665609481D0,
     >1.349695491356765307923938594423945197D0,
     >1.484254929776846711205611786129787199D0,
     >1.621444162811821978023168843164545274D0,
     >1.761595374676769611184242204209815984D0,
     >1.905074665894799676682993205972793711D0,
     >2.052288347261716717601995822729474548D0,
     >2.203690553245095889098283443281405708D0,
     >2.359792538523203323540373753789014974D0,
     >2.521174140376432991653136902874228210D0,
     >2.688498055408842264159505447063746595D0,
     >2.862527813210448812034763959831043113D0,
     >3.044150665311517100410439679543336704D0,
     >3.234407097263531941774902394288671117D0,
     >3.434529398427748092203984818916024650D0,
     >3.645992824994089072389656466994904344D0,
     >3.870584597216516568084753202134443384D0,
     >4.110498680432822655835822472639515779D0,
     >4.368468723254063474508083382729450258D0,
     >4.64795898407446688299303399883883991D0,
     >4.95344611240989326218696150785562721D0,
     >5.29084840590073657468737365718858969D0,
     >5.66820460903297677000730529023263795D0,
     >6.09679641474342030593376010859198806D0,
     >6.59310886103999953794429664206294899D0,
     >7.18249599553689315064429801626699575D0,
     >7.90666631138422877369310742310586595D0,
     >8.84089249281034652079125595063026792D0,
     >10.1408992656211694839094600306940469D0,
     >12.2100212992046038985226485875881110D0,
     >16.7055206420242974052468774398573550D0/

      IK(I,L,J)=((J-NAJ+IPI(3,I)-1)/2*IPI(2,I)+(L-J+IPI(2,I)-1)/2)/2    SCAM-135
      NZ=MOD(IPJ+JPI+1,2)                                               SCAM-136
      NS=0                                                              SCAM-137
      IF (NZ.NE.0) NS=NCT(1)*NCT(3)                                     SCAM-138
      R1(1)=0.D0                                                        SCAM-139
      R1(2)=0.D0                                                        SCAM-140
      JC=0                                                              SCAM-141
      AJ=0.5D0*DFLOAT(NAJ)                                              SCAM-142
      DZ=1.D0                                                           SCAM-143
      IF (LO(18)) DZ=2.D0                                               SCAM-144
      RZ=PI*DZ*XZ*DFLOAT(NAJ+1)                                         SCAM-145
      IF (LO(55)) WRITE (MW,1000) AJ,IP(JPI+1),NC,NCIN                  SCAM-146
C COMPUTATION OF TRANSMISSION COEFFICIENTS.                             SCAM-147
      NXXTMP=NCIN                                                       SCAM-148
      IF (LO(124)) NXXTMP=NC                                            SCAM-149
      DO 5 IC=1,NXXTMP                                                  SCAM-150
      IV=MC(IC,1)                                                       SCAM-151
      IF (WV(3,IV).LT.0.D0) GO TO 5                                     SCAM-152
      IF (IC.LE.NCIN) TX(1)=TX(1)+4.D0*FAI(IC,IC)*RZ*DZ                 SCAM-153
      IF (.NOT.LO(124)) GO TO 2                                         SCAM-154
      JC=JC+1                                                           SCAM-155
      V(1,JC)=131072.D0*(65536.D0*DFLOAT(IV)+DFLOAT(MC(IC,2)))+DFLOAT(MCSCAM-156
     1(IC,3))                                                           SCAM-157
      V(2,JC)=1.D0                                                      SCAM-158
      V(3,JC)=4.D0*FAI(IC,IC)                                           SCAM-159
      DO 1 N=4,IQ                                                       SCAM-160
    1 V(N,JC)=0.D0                                                      SCAM-161
    2 DO 4 ICP=1,NC                                                     SCAM-162
      IVQ=MC(ICP,1)                                                     SCAM-163
      A1=DSQRT(WV(11,IVQ)/WV(11,IV))                                    SCAM-164
      IF (LO(125)) A1=1.D0/A1                                           SCAM-165
      FAR(ICP,IC)=FAR(ICP,IC)*A1                                        SCAM-166
      FAI(ICP,IC)=FAI(ICP,IC)*A1                                        SCAM-167
      IF (WV(3,IVQ).LT.0.D0) GO TO 3                                    SCAM-168
      IF (LO(124)) V(3,JC)=V(3,JC)-4.D0*(FAR(ICP,IC)**2+FAI(ICP,IC)**2) SCAM-169
      IF (IC.GT.NCIN) GO TO 4                                           SCAM-170

C TEST OF CONVERGENCE.                                                  SCAM-171
      R1(1)=DMAX1(R1(1),DABS(FAR(ICP,IC))+DABS(FAI(ICP,IC)))            SCAM-172
      A1=FAR(ICP,IC)*FAR(ICP,IC)+FAI(ICP,IC)*FAI(ICP,IC)                SCAM-173
      IF (A1.GT.1.D0) WRITE (MW,1001) AJ,IP(JPI+1),NC,NCIN,IC,ICP,FAR(ICSCAM-174
     1P,IC),FAI(ICP,IC)                                                 SCAM-175
      TX(IVQ+1)=TX(IVQ+1)+4.D0*A1*RZ*DZ                                 SCAM-176
      FJ=0.5D0*DFLOAT(MC(ICP,3))                                        SCAM-177
      IF (.NOT.LO(55)) GO TO 4                                          SCAM-178
C PRINT OUT OF THE AMPLITUDES.                                          SCAM-179
      A1=DSQRT(A1)                                                      SCAM-180
      B1=0.D0                                                           SCAM-181
      IF (A1.NE.0.D0) B1=DATAN2(FAI(ICP,IC),FAR(ICP,IC))                SCAM-182
      WRITE (MW,1002) ICP,IC,IVQ,MC(ICP,2),FJ,FAR(ICP,IC),FAI(ICP,IC),A1SCAM-183
     1,B1                                                               SCAM-184
      GO TO 4                                                           SCAM-185
    3 IF ((IC.LE.NCIN).AND.LO(55)) WRITE (MW,1003) ICP,IC,IVQ,MC(ICP,2),SCAM-186
     1FJ,FAR(ICP,IC),FAI(ICP,IC)                                        SCAM-187
    4 CONTINUE                                                          SCAM-188
      IF (.NOT.LO(124)) GO TO 5                                         SCAM-189
      IF (V(3,JC).LT.0.D0) V(3,JC)=0.D0                                 SCAM-190
      IF (IC.LE.NCIN) R1(2)=DMAX1(R1(2),V(3,JC))                        SCAM-191
    5 CONTINUE                                                          SCAM-192
      IF ((.NOT.(LO(63).OR.LO(55))).OR.(JC.EQ.0)) GO TO 8               SCAM-193
C OUTPUT OF TRANSMISSION COEFFICIENTS FOR COUPLED CHANNELS.             SCAM-194
      IF (LO(55)) WRITE (MW,1004) AJ,IP(JPI+1)                          SCAM-195
      IC=1+(JC-1)/4                                                     SCAM-196
      IF(unformat) THEN                                                 RCN  RCN
        IF (LO(63)) WRITE (94     ) AJ,IP(JPI+1),JC                     RCN  RCN
      ELSE                                                              RCN  RCN
        IF (LO(63)) WRITE (94,1005) AJ,IP(JPI+1),JC                     SCAM-197
      ENDIF                                                             RCN  RCN
      DO 7 I=1,IC                                                       SCAM-198
      J1=4*(I-1)                                                        SCAM-199
      J2=MIN0(JC-J1,4)                                                  SCAM-200
      DO 6 J=1,J2                                                       SCAM-201
      N=IDINT(V(1,J+J1)/131072.D0+.01D0)                                SCAM-202
      VCX(J,1)=.5D0*DMOD(V(1,J+J1),131072.D0)                           SCAM-203
      VCX(J,2)=V(3,J+J1)                                                SCAM-204
      MCX(J,2)=MOD(N,65536)                                             SCAM-205
    6 MCX(J,1)=N/65536                                                  SCAM-206
      IF(unformat) THEN                                                 RCN  RCN
C     IF (LO(63)) WRITE (94     ) (MCX(J,1),MCX(J,2),VCX(J,1),VCX(J,2),JRCN  RCN 
C    1=1,J2)                                                            RCN  RCN
      IF (LO(63)) then
        do j=1,j2                                                       !zv-2013
          WRITE (94) MCX(J,1),MCX(J,2),VCX(J,1),VCX(J,2)                !zv-2013
        enddo                                                           !zv-2013
      endif
      ELSE                                                              RCN  RCN 
      IF (LO(63)) WRITE (94,1006) (MCX(J,1),MCX(J,2),VCX(J,1),VCX(J,2),JSCAM-207
     1=1,J2)                                                            SCAM-208
      ENDIF                                                             RCN  RCN
      IF (LO(55)) WRITE (MW,1007) (MCX(J,1),MCX(J,2),VCX(J,1),VCX(J,2),JSCAM-209
     1=1,J2)                                                            SCAM-210
    7 CONTINUE                                                          SCAM-211
    8 IF (LO(131)) GO TO 62                                             SCAM-212
      NSS=NS                                                            SCAM-213
      IF (NZ.NE.0) NSS=NCT(5)*NCT(3)                                    SCAM-214
C FISSION COEFFICIENT.                                                  SCAM-215
      TG(1)=0.D0                                                        SCAM-216
      FNU(1)=.5D0                                                       SCAM-217
      IF (.NOT.LO(86)) GO TO 9                                          SCAM-218
      KN=2*IPJ+JPI-1                                                    SCAM-219
      IF (KN.GE.NFISS) GO TO 9                                          SCAM-220
      TG(1)=FISS(1,KN)                                                  SCAM-221
      FNU(1)=.5D0*FISS(2,KN)                                            SCAM-222
    9 LG(1)=(.NOT.LO(85)).OR.TG(1).EQ.0.D0                              SCAM-223
C GAMMA COEFFICIENT.                                                    SCAM-224
      TG(2)=0.D0                                                        SCAM-225
      FNU(2)=.5D0*FNUG                                                  SCAM-226
      IF (.NOT.LO(86)) GO TO 12                                         SCAM-227
      IF (NRD.NE.0) GO TO 11                                            SCAM-228
      A1=0.D0                                                           SCAM-229
      N1=NAJ-2                                                          SCAM-230
      N1=IABS(N1)                                                       SCAM-231
      N2=NAJ+2                                                          SCAM-232
      DO 10 J=N1,N2,2                                                   SCAM-233
      A2=-DFLOAT((J+1)*(J+1))/(4.D0*SGSQ)                               SCAM-234
   10 A1=A1+DEXP(A2)*DFLOAT(J+1)/SGSQ                                   SCAM-235
      TG(2)=6.283185307D0*TG1*A1                                        SCAM-236
      GO TO 12                                                          SCAM-237
   11 IF (IPJ.LE.NRD) TG(2)=GAM(IPJ)                                    SCAM-238
   12 LG(2)=(.NOT.LO(86)).OR.TG(2).EQ.0.D0                              SCAM-239
      NC1=JC                                                            SCAM-240
      NJC=JC                                                            SCAM-241
      IF (NCOLL.EQ.NCOLX) GO TO 24                                      SCAM-242
C TRANSMISSION COEFFICIENTS FOR UNCOUPLED STATES.                       SCAM-243
      NSP1=NCOLX-NCOLL-NCONT                                            SCAM-244
      IF (NSP1.LT.1) GO TO 17                                           SCAM-245
      DO 16 I=1,NSP1                                                    SCAM-246
      II=I+NCOLL                                                        SCAM-247
      IF (WV(3,II).LT.0.D0) GO TO 16                                    SCAM-248
      NM=IPI(3,II)                                                      SCAM-249
      MN=IPI(2,II)                                                      SCAM-250
      DO 15 J=1,NM                                                      SCAM-251
      NN=NAJ-NM-1+2*J                                                   SCAM-252
      IF (NN.LT.IABS(NM-1-NAJ)) GO TO 15                                SCAM-253
      DO 14 K=1,MN                                                      SCAM-254
      MM=NN+MN+1-2*K                                                    SCAM-255
      IF (MM.LT.IABS(MN-1-NN).OR.MM.GE.2*IPI(10,II)+2) GO TO 14         SCAM-256
      L=MM/2                                                            SCAM-257
      IF (MOD(L+JPI+IPI(1,II),2).NE.0) GO TO 14                         SCAM-258
      M=MN*L+K+IPI(8,II)                                                SCAM-259
      JC=JC+1                                                           SCAM-260
      V(1,JC)=131072.D0*(65536.D0*DFLOAT(II)+DFLOAT(L))+DFLOAT(NN)      SCAM-261
      V(2,JC)=1.D0                                                      SCAM-262
      V(3,JC)=TL(M)                                                     SCAM-263
      DO 13 N=4,IQ                                                      SCAM-264
   13 V(N,JC)=0.D0                                                      SCAM-265
   14 CONTINUE                                                          SCAM-266
   15 CONTINUE                                                          SCAM-267
      IF (II.LE.NCOLS) NC1=JC                                           SCAM-268
   16 CONTINUE                                                          SCAM-269
   17 IF (NCONT.EQ.0) GO TO 24                                          SCAM-270
C TRANSMISSION COEFFICIENTS FOR CONTINUA.                               SCAM-271
      DO 23 I=1,NCONT                                                   SCAM-272
      IJ=NCJ(1,I)                                                       SCAM-273
      JI=NCJ(2,I)                                                       SCAM-274
      IF (IJ.GT.JI) GO TO 23                                            SCAM-275
      MN=IPIM(2,IJ)                                                     SCAM-276
      IT=MOD(IPIM(3,IJ)+1,2)                                            SCAM-277
      DO 22 II=IJ,JI                                                    SCAM-278
      L=IPIM(10,II)+1                                                   SCAM-279
      IF (L.EQ.0) GO TO 22                                              SCAM-280
      M=IPIM(8,II)                                                      SCAM-281
      II1=II+NCOLL+NSP1                                                 SCAM-282
      DO 21 LJ=1,L                                                      SCAM-283
      DO 20 JL=1,MN                                                     SCAM-284
      M=M+1                                                             SCAM-285
      IF (TL(M).EQ.0.D0) GO TO 20                                       SCAM-286
      JJ=2*(LJ+JL)-MN-3                                                 SCAM-287
      IF (JJ.LT.0) GO TO 20                                             SCAM-288
      IKM=IABS(JJ-NAJ)/2+1                                              SCAM-289
      IKP=MIN0((JJ+NAJ)/2+1,NCOJ)                                       SCAM-290
      IF (IKM.GT.IKP) GO TO 20                                          SCAM-291
      AI=0.D0                                                           SCAM-292
      DO 18 KK=IKM,IKP                                                  SCAM-293
      AR=.5D0*DFLOAT(IT+2*KK-1)                                         SCAM-294
   18 AI=AI+AR*DEXP(-AR*AR/XD(3,II))/XD(3,II)                           SCAM-295
      JC=JC+1                                                           SCAM-296
      V(1,JC)=131072.D0*(65536.D0*DFLOAT(II1)+DFLOAT(LJ-1))+DFLOAT(JJ)  SCAM-297
      V(2,JC)=AI*XD(1,II)                                               SCAM-298
      V(3,JC)=TL(M)                                                     SCAM-299
      DO 19 N=4,IQ                                                      SCAM-300
   19 V(N,JC)=0.D0                                                      SCAM-301
   20 CONTINUE                                                          SCAM-302
   21 CONTINUE                                                          SCAM-303
   22 CONTINUE                                                          SCAM-304
   23 CONTINUE                                                          SCAM-305
C COMPOUND NUCLEUS.                                                     SCAM-306
   24 SGF(1)=0.D0                                                       SCAM-307
      SGF(2)=0.D0                                                       SCAM-308
      IF (LO(82)) GO TO 58                                              SCAM-309
      IF (LO(83)) GO TO 28                                              SCAM-310
C COMPUTATION OF SATCHLER P-MATRIX ("PR","PI").                         SCAM-311
      I=0                                                               SCAM-312
      DO 27 II=1,NC                                                     SCAM-313
      IF (WV(3,MC(II,1)).LT.0.D0) GO TO 27                              SCAM-314
      I=I+1                                                             SCAM-315
      J=0                                                               SCAM-316
      DO 26 JJ=1,NC                                                     SCAM-317
      IF (WV(3,MC(JJ,1)).LT.0.D0) GO TO 26                              SCAM-318
      J=J+1                                                             SCAM-319
      P(I,J,1)=2.D0*(FAI(I,J)+FAI(J,I))                                 SCAM-320
      P(I,J,2)=0.D0                                                     SCAM-321
      P(I,J,3)=0.D0                                                     SCAM-322
      P(I,J,4)=0.D0                                                     SCAM-323
      K=0                                                               SCAM-324
      DO 25 KK=1,NC                                                     SCAM-325
      IF (WV(3,MC(KK,1)).LT.0.D0) GO TO 25                              SCAM-326
      K=K+1                                                             SCAM-327
      P(I,J,1)=P(I,J,1)-4.D0*(FAR(I,K)*FAR(J,K)+FAI(I,K)*FAI(J,K))      SCAM-328
   25 P(I,J,2)=P(I,J,2)+4.D0*(FAR(I,K)*FAI(J,K)-FAI(I,K)*FAR(J,K))      SCAM-329
   26 CONTINUE                                                          SCAM-330
   27 P(I,I,3)=1.D0                                                     SCAM-331
      IF(I.EQ.0 .OR. J.EQ.0) LO(83)=.TRUE.                              RCN  RCN            
      IF(I.EQ.0 .OR. J.EQ.0) GOTO 28                                    RCN  RCN            
      WRITE (121,1005) AJ,IP(JPI+1),JC                                  RCN  RCN
C     C-matrix commented                                                RCN  RCN 
C     WRITE (124,1005) AJ,IP(JPI+1),JC                                  RCN  RCN
C     S-matrix                                                          RCN  RCN 
      WRITE (125,1005) AJ,IP(JPI+1),JC                                  RCN  RCN
      I=0                                                               RCN  RCN
      DO II=1,NC                                                        RCN  RCN
        IF (WV(3,MC(II,1)).LT.0.D0) CYCLE                               RCN  RCN
        I=I+1                                                           RCN  RCN
        J=0                                                             RCN  RCN
        DO JJ=1,II                                                      RCN  RCN
          IF (WV(3,MC(JJ,1)).LT.0.D0) CYCLE                             RCN  RCN
          J=J+1                                                         RCN  RCN
          write(121,'(1x,2(I4,1x),2(D15.9,1x))') I,J,P(I,J,1),P(I,J,2)  RCN  RCN
C         C-matrix commented                                            RCN  RCN       
C         write(124,'(1x,2(I4,1x),2(D15.9,1x))') I,J,FAR(I,J),FAI(I,J)  RCN  RCN
C         S-matrix                                                      RCN  RCN 
          IF(I.EQ.J) THEN                                               RCN  RCN
            write(125,'(1x,2(I4,1x),4(D15.9,1x))') I,J,                 RCN  RCN
     >                1.d0-2.d0*FAI(I,J),2.d0*FAR(I,J)                  RCN  RCN
          ELSE                                                          RCN  RCN
            write(125,'(1x,2(I4,1x),4(D15.9,1x))') I,J,                 RCN  RCN
     >                    -2.d0*FAI(I,J),2.d0*FAR(I,J)                  RCN  RCN
          ENDIF                                                         RCN  RCN
        ENDDO                                                           RCN  RCN
      ENDDO                                                             RCN  RCN
      CALL DIAG(P,P(1,1,2),P(1,1,3),P(1,1,4),NC,NJC,1.D-12,A1,IERR)     SCAM-332
      WRITE (122,1005) AJ,IP(JPI+1),JC                                  RCN  RCN
      WRITE (123,1005) AJ,IP(JPI+1),JC                                  RCN  RCN
      I=0                                                               RCN  RCN
      DO II=1,NC                                                        RCN  RCN
        IF (WV(3,MC(II,1)).LT.0.D0) CYCLE                               RCN  RCN
        I=I+1                                                           RCN  RCN
        J=0                                                             RCN  RCN
        DO JJ=1,II                                                      RCN  RCN
          IF (WV(3,MC(JJ,1)).LT.0.D0 ) CYCLE                            RCN  RCN
          J=J+1                                                         RCN  RCN
          IF(P(I,J,1).LE.0.d0) CYCLE                                    RCN  RCN
          write(122,'(1x,2(I4,1x),2(D15.9,1x))') I,J,P(I,J,1),P(I,J,2)  RCN  RCN
        ENDDO                                                           RCN  RCN
      ENDDO                                                             RCN  RCN
      DO J=1,I                                                          RCN  RCN
        write(123,'(1x,I4)') J                                          RCN  RCN
        write(123,'(1x,D15.9,1x,D15.9)') (P(II,J,3),P(II,J,4),II=1,NC)  RCN  RCN
      ENDDO                                                             RCN  RCN
C=======================================================================
C     AVOIDING CN DECAY & WF correction in ECIS to speed-up EMPIRE calcs
C     Matrices needed for EW transformation already saved
C=======================================================================
      RETURN
C
      IF (IERR.EQ.0) GO TO 28                                           SCAM-333
      WRITE (MW,1008)                                                   SCAM-334
      LO(83)=.TRUE.                                                     SCAM-335
   28 BIR=1.D-12+TG(1)+TG(2)                                            SCAM-336
      DO 29 IC=1,JC                                                     SCAM-337
      IF ((.NOT.LO(83)).AND.IC.LE.NJC) V(3,IC)=DMAX1(0.D0,P(IC,IC,1))   SCAM-338
   29 BIR=BIR+V(3,IC)*V(2,IC)                                           SCAM-339
C FLUCTUATION PARAMETER NU=2*FNU, (P.A.M.,N.P.A344(1980)185).           SCAM-340
C COMMON FACTOR "TP" OF WIDTH FLUCTUATION INTEGRAL                      SCAM-341
C (P.A.M.,PRC 11(1975)426).                                             SCAM-342
      IF (LO(87).OR.(BIR.LT.0.0001D0)) GO TO 39   ! no WF correction    SCAM-343
C     DO 30 M=1,20                                                      SCAM-344
      DO 30 M=1,NGAUSS                                                  RCN  RCN
   30 TP(M)=1.D0                                                        SCAM-345
      EFB=DEXP(-BZ(5)*BIR)                                              SCAM-346
      DO 36 IC=1,JC                                                     SCAM-347
      IF (BZ(2).NE.0.D0) GO TO 31                                       SCAM-348
      V(4,IC)=(1.D0+BZ(4)+(V(3,IC)**BZ(3)-BZ(4))*EFB)/2.D0              SCAM-349
      GO TO 32                                                          SCAM-350
   31 V(4,IC)=0.5D0*BZ(2)                                               SCAM-351
   32 A1=V(3,IC)/V(4,IC)/BIR                                            SCAM-352
      IF (A1.EQ.0.D0) GO TO 36                                          SCAM-353
      IF (A1.GT.1.D-9) GO TO 34                                         SCAM-354
C     DO 33 M=1,20                                                      SCAM-355
C  33 TP(M)=TP(M)*DEXP(X(M)*V(3,IC)*V(2,IC)/BIR*(1.D0-.5D0*X(M)*A1))    SCAM-356
C     GAUSS-LAGUERRE to 40 POINTS                                       RCN  RCN
      DO 33 M=1,NGAUSS                                                  RCN  RCN
   33 TP(M)=TP(M)*DEXP(X40(M)*V(3,IC)*V(2,IC)/BIR*(1.D0-.5D0*X40(M)*A1))RCN  RCN
      GO TO 36                                                          SCAM-357
C  34 DO 35 M=1,20                                                      SCAM-358
C  35 TP(M)=TP(M)*((BIR+X(M)*V(3,IC)/V(4,IC))/BIR)**(V(4,IC)*V(2,IC))   SCAM-359
C     GAUSS-LAGUERRE to 40 POINTS                                       RCN  RCN
   34 DO 35 M=1,NGAUSS                                                  RCN  RCN
   35 TP(M)=TP(M)*((BIR+X40(M)*V(3,IC)/V(4,IC))/BIR)**(V(4,IC)*V(2,IC)) RCN  RCN
   36 CONTINUE                                                          SCAM-360
      DO 38 I=1,2                                                       SCAM-361
      IF (LG(I)) GO TO 38                                               SCAM-362
C     DO 37 M=1,20                                                      SCAM-363
C  37 TP(M)=TP(M)*(1.D0+X(M)*TG(I)/(BIR*FNU(I)))**FNU(I)                SCAM-364
C     GAUSS-LAGUERRE to 40 POINTS                                       RCN  RCN
      DO 37 M=1,NGAUSS                                                  RCN  RCN
   37 TP(M)=TP(M)*(1.D0+X40(M)*TG(I)/(BIR*FNU(I)))**FNU(I)              RCN  RCN
   38 CONTINUE                                   ! END of WF correction SCAM-365
C STORAGE OF COMPOUND TERMS.                                            SCAM-366
   39 TQ=0.D0                                                           SCAM-367
      IF (.NOT.LO(55)) GO TO 40                                         SCAM-368
      WRITE (MW,1009) AJ,IP(JPI+1)                                      SCAM-369
      IF (.NOT.LO(83)) WRITE (MW,1010)                                  SCAM-370
   40 NCX=NJC                                                           SCAM-371
      IF (LO(83)) NCX=NCIN                                              SCAM-372
      DO 56 IC=1,NCX                                                    SCAM-373
      G=1.D0                                                            SCAM-374
      BRI=BIR                                                           SCAM-375
      IF (LO(87).AND.(IC.LE.NCIN)) BRI=BRI+V(3,IC)*BZ(3)                SCAM-376
      AR=1.D0                                                           SCAM-377
      IF (LO(83)) GO TO 42                                              SCAM-378
      AR=0.D0                                                           SCAM-379
      DO 41 IA=1,NCIN                                                   SCAM-380
   41 AR=AR+(P(IA,IC,3)**2+P(IA,IC,4)**2)                               SCAM-381
   42 DO 52 ICP=1,JC                                                    SCAM-382
      IV=IDINT(V(1,ICP)/131072.D0/65536.D0+.01D0)                       SCAM-383
      IF (LO(87).OR.(BIR.LT.0.0001D0)) GO TO 44                         SCAM-384
      G=0.D0                                                            SCAM-385
C     DO 43 M=1,20                                                      SCAM-386
C  43 G=G+W(M)/(TP(M)*(1.D0+X(M)*V(3,IC)/(V(4,IC)*BRI))*(1.D0+X(M)*V(3,ISCAM-387
C    1CP)/(V(4,ICP)*BRI)))                                              SCAM-388
C     GAUSS-LAGUERRE to 40 POINTS                                       RCN  RCN
      DO 43 M=1,NGAUSS                                                  RCN  RCN
   43 G=G+W40(M)/(TP(M)*(1.D0+X40(M)*V(3,IC)/(V(4,IC)*BRI))*            RCN  RCN
     1  (1.D0+X40(M)*V(3,ICP)/(V(4,ICP)*BRI)))                          RCN  RCN
      IF (ICP.EQ.IC) G=G+G/V(4,IC)                                      SCAM-389
   44 TQ=V(3,IC)*V(3,ICP)*G/BRI                                         SCAM-390
      IF (LO(87).AND.(ICP.EQ.IC)) TQ=TQ+TQ*BZ(3)                        SCAM-391
      IF ((ICP.GT.NC1).OR.LO(83)) GO TO 50                              SCAM-392
C INVERSE E-W TRANSFORMATION (P.A.M.,PRC 12(1975)744).                  SCAM-393
      IF (ICP.GT.NJC) GO TO 48                                          SCAM-394
      DO 47 IA=1,NCIN                                                   SCAM-395
      DO 46 IB=1,NJC                                                    SCAM-396
      A1=P(IA,IC,3)*P(IB,ICP,3)-P(IA,IC,4)*P(IB,ICP,4)                  SCAM-397
      B1=P(IA,IC,3)*P(IB,ICP,4)+P(IA,IC,4)*P(IB,ICP,3)                  SCAM-398
      A2=A1                                                             SCAM-399
      B2=B1                                                             SCAM-400
      IF (ICP.EQ.IC) GO TO 45                                           SCAM-401
      A2=A1+P(IA,ICP,3)*P(IB,IC,3)-P(IA,ICP,4)*P(IB,IC,4)               SCAM-402
      B2=B1+P(IA,ICP,3)*P(IB,IC,4)+P(IA,ICP,4)*P(IB,IC,3)               SCAM-403
   45 V(IA+4,IB)=V(IA+4,IB)+(A1*A2+B1*B2)*TQ                            SCAM-404
   46 CONTINUE                                                          SCAM-405
   47 CONTINUE                                                          SCAM-406
      GO TO 51                                                          SCAM-407
   48 DO 49 IA=1,NCIN                                                   SCAM-408
   49 V(IA+4,ICP)=V(IA+4,ICP)+(P(IA,IC,3)**2+P(IA,IC,4)**2)*TQ          SCAM-409
      GO TO 51                                                          SCAM-410
   50 V(5,ICP)=V(5,ICP)+AR*TQ                                           SCAM-411
   51 IF ((IC.GT.NCIN).OR.(.NOT.LO(55))) GO TO 52                       SCAM-412
      GNU=2.D0*V(4,ICP)                                                 SCAM-413
      L=IDINT(DMOD(V(1,ICP)/131072.D0,65536.D0)+.01D0)                  SCAM-414
      FJ=.5D0*DMOD(V(1,ICP),131072.D0)                                  SCAM-415
      WRITE (MW,1011) IC,ICP,IV,L,FJ,V(3,ICP),TQ,GNU,G                  SCAM-416
   52 CONTINUE                                                          SCAM-417
      IF (LO(83).AND.IC.GT.NCIN) GO TO 56                               SCAM-418
      DO 55 I=1,2                                                       SCAM-419
      IF (LG(I)) GO TO 55                                               SCAM-420
      IF (LO(87)) GO TO 54                                              SCAM-421
      G=0.D0                                                            SCAM-422
C     DO 53 M=1,20                                                      SCAM-423
C  53 G=G+W(M)/(TP(M)*(1.D0+X(M)*V(3,IC)/(V(4,IC)*BRI))*(1.D0+X(M)*TG(I)SCAM-424
C    1/(BRI*FNU(I))))                                                   SCAM-425
C     GAUSS-LAGUERRE to 40 POINTS                                       RCN  RCN
      DO 53 M=1,NGAUSS                                                  RCN  RCN
   53 G=G+W40(M)/(TP(M)*(1.D0+X40(M)*V(3,IC)/(V(4,IC)*BRI))*            RCN  RCN
     1  (1.D0+X40(M)*TG(I)/(BRI*FNU(I))))                               RCN  RCN
   54 A1=V(3,IC)*TG(I)*G/BRI                                            SCAM-426
      SGF(I)=SGF(I)+A1*AR                                               SCAM-427
      FN=2.D0*FNU(I)                                                    SCAM-428
      IF (LO(55).AND.(IC.LE.NCIN)) WRITE (MW,1012) AL(I),TG(I),SGF(I),FNSCAM-429
     1,G                                                                SCAM-430
   55 CONTINUE                                                          SCAM-431
   56 CONTINUE                                                          SCAM-432
      IF (LO(55)) WRITE (MW,1013) BIR                                   SCAM-433
      DO 57 I=1,2                                                       SCAM-434
      IF (LG(I)) GO TO 57                                               SCAM-435
      IF (LO(132)) FCN(IPJ,NDQ+I)=FCN(IPJ,NDQ+I)+.25D0*SGF(I)           SCAM-436
      TX(NDP+I)=TX(NDP+I)+RZ*SGF(I)                                     SCAM-437
   57 CONTINUE                                                          SCAM-438
      GO TO 62                                                          SCAM-439
C STORAGE FOR SIMPLIFIED COMPOUND NUCLEUS.                              SCAM-440
   58 BIR=BZ(3)**2*(2.D0*AJ+1.D0)*DEXP(-AJ*(AJ+1.D0)/(2.D0*BZ(2)**2))   SCAM-441
      DO 59 IC=1,NJC                                                    SCAM-442
   59 BIR=BIR+4.D0*V(3,IC)                                              SCAM-443
      IF (LO(55)) WRITE (MW,1014) BIR                                   SCAM-444
      DO 61 IC=1,NCIN                                                   SCAM-445
      NT=NS+IK(1,2*MC(IC,2),MC(IC,3))*NCT(NZ+1)                         SCAM-446
      DO 60 ICP=1,NJC                                                   SCAM-447
      TQ=V(3,IC)*V(3,ICP)/BIR                                           SCAM-448
      IF (IV.EQ.1) TQ=TQ*BZ(1)**2                                       SCAM-449
   60 V(IC+4,ICP)=V(IC+4,ICP)+4.D0*TQ                                   SCAM-450
   61 CONTINUE                                                          SCAM-451
   62 IF (LO(55).AND.LO(123)) WRITE (MW,1000) AJ,IP(JPI+1),NC,NCIN      SCAM-452
C STORAGE OF THE AMPLITUDES.                                            SCAM-453
      NI=NCI-NCIN                                                       SCAM-454
      DO 70 I1=1,NCI                                                    SCAM-455
      NT=NS+IK(1,2*MD(I1,2),MD(I1,3))*NCT(NZ+1)                         SCAM-456
      IF (LO(123)) GO TO 63                                             SCAM-457
      J1=I1                                                             SCAM-458
      K1=J1                                                             SCAM-459
      GO TO 64                                                          SCAM-460
   63 J1=1                                                              SCAM-461
      K1=NCIN                                                           SCAM-462
   64 IVS=0                                                             SCAM-463
      DO 69 I2=1,NIC                                                    SCAM-464
      IV=MD(I2,1)                                                       SCAM-465
      IF ((IV.NE.IVS).AND.(IV.NE.1)) NT=NT+(IPI(2,IVS)*IPI(3,IVS)+NSY)/2SCAM-466
      NSY=MOD(IPI(1,IV)+JPI+IPJ+(IPI(2,IV)+IPI(3,IV))/2+1,2)            SCAM-467
      IVS=IV                                                            SCAM-468
      ID=NT+IK(IV,2*MD(I2,2),MD(I2,3))+1                                SCAM-469
      IF (LO(123).AND.(I2.LE.NCI)) GO TO 65                             SCAM-470

      J2=I2-NI                                                          SCAM-471
      K2=J2                                                             SCAM-472
      GO TO 66                                                          SCAM-473
   65 J2=1                                                              SCAM-474
      K2=NCIN                                                           SCAM-475
   66 AR=0.D0                                                           SCAM-476
      AI=0.D0                                                           SCAM-477
      DO 68 L1=J1,K1                                                    SCAM-478
      A1=DZ                                                             SCAM-479
      IF (LO(123)) A1=A1*AA(I1,L1)                                      SCAM-480
      IF (A1.EQ.0.D0) GO TO 68                                          SCAM-481
      DO 67 L2=J2,K2                                                    SCAM-482
      A2=1.D0                                                           SCAM-483
      IF (LO(123).AND.(L2.LE.NCIN)) A2=AA(I2,L2)                        SCAM-484

      IF (A2.EQ.0.D0) GO TO 67                                          SCAM-485
      AR=AR+FAR(L2,L1)*A1*A2                                            SCAM-486
      AI=AI+FAI(L2,L1)*A1*A2                                            SCAM-487
   67 CONTINUE                                                          SCAM-488
   68 CONTINUE                                                          SCAM-489
      F(1,IPJ,ID)=AR                                                    SCAM-490
      F(2,IPJ,ID)=AI                                                    SCAM-491
      IF (.NOT.(LO(55).AND.LO(123))) GO TO 69                           SCAM-492

      A1=DSQRT(AR*AR+AI*AI)                                             SCAM-493
      A2=0.D0                                                           SCAM-494
      IF (A1.NE.0.D0) A2=DATAN2(AI,AR)                                  SCAM-495
      FJ=0.5D0*DFLOAT(MD(I2,3))                                         SCAM-496

      WRITE (MW,1002) I2,I1,IV,MD(I2,2),FJ,AR,AI,A1,A2                  SCAM-497

   69 CONTINUE                                                          SCAM-498
   70 CONTINUE                                                          SCAM-499
      IF (LO(131)) RETURN                                               SCAM-500
C COMPOUND NUCLEUS.                                                     SCAM-501
      JCX=JC+NI                                                         SCAM-502
      IIV=IPI(2,1)-1                                                    SCAM-503
      III=IPI(3,1)-1                                                    SCAM-504
      DO 81 IC=1,NCI                                                    SCAM-505
      LA=2*MD(IC,2)                                                     SCAM-506
      JA=MD(IC,3)                                                       SCAM-507
      NT=NSS+IK(IV,LA,JA)*NCT(NZ+5)                                     SCAM-508
      IVS=0                                                             SCAM-509
      CALL COCN(LA,LA,JA,JA,III,IIV,NAJ,IPJ,Q,Q(IPJ+1),IDT-2*IPJ)       SCAM-510
      IF (LO(123)) GO TO 71                                             SCAM-511
      J1=IC                                                             SCAM-512
      K1=J1                                                             SCAM-513
      GO TO 72                                                          SCAM-514
   71 J1=1                                                              SCAM-515
      K1=NCIN                                                           SCAM-516
   72 DO 80 ICP=1,JCX                                                   SCAM-517
      IF (LO(123).AND.(ICP.LE.NCI)) GO TO 73                            SCAM-518
      J2=ICP-NI                                                         SCAM-519
      K2=J2                                                             SCAM-520
      GO TO 74                                                          SCAM-521
   73 J2=1                                                              SCAM-522
      K2=NCIN                                                           SCAM-523
   74 AR=0.D0                                                           SCAM-524
      DO 76 L1=J1,K1                                                    SCAM-525
      A1=DZ                                                             SCAM-526
      IF (LO(123)) A1=A1*AA(I1,L1)                                      SCAM-527
      IF (A1.EQ.0.D0) GO TO 79                                          SCAM-528
      DO 75 L2=J2,K2                                                    SCAM-529
      A2=1.D0                                                           SCAM-530
      IF (LO(123).AND.(L2.GT.NCIN)) A2=AA(I2,L2)                        SCAM-531
      IF (A2.EQ.0.D0) GO TO 75                                          SCAM-532
      AR=AR+V(L1+4,L2)*A1*A2                                            SCAM-533
   75 CONTINUE                                                          SCAM-534
   76 CONTINUE                                                          SCAM-535
      IF (AR.EQ.0.D0) GO TO 81                                          SCAM-536
      IV=IDINT(V(1,ICP)/131072.D0/65536.D0+.01D0)                       SCAM-537
      IF ((IV.NE.IVS).AND.(IV.NE.1)) NT=NT+(IPI(2,IVS)*IPI(3,IVS)+NSY)/2SCAM-538
      NSY=MOD(IPI(1,IV)+JPI+IPJ+(IPI(2,IV)+IPI(3,IV))/2+1,2)            SCAM-539
      IVS=IV                                                            SCAM-540
      TX(NCOLL+IV+1)=TX(NCOLL+IV+1)+AR*V(2,ICP)*RZ                      SCAM-541
      IF (ICP.GT.NC1) GO TO 79                                          SCAM-542
      JB=IDINT(DMOD(V(1,ICP),131072.D0))                                SCAM-543
      N=IDINT(V(1,ICP)/131072.D0+.01D0)                                 SCAM-544
      LB=2*MOD(N,65536)                                                 SCAM-545
      IF (.NOT.LO(132)) GO TO 77                                        SCAM-546
      ID=NT+IK(IV,LB,JB)+1                                              SCAM-547
      FCN(IPJ,ID)=FCN(IPJ,ID)+.25D0*AR                                  SCAM-548
   77 CALL COCN(LB,LB,JB,JB,IPI(3,IV)-1,IPI(2,IV)-1,NAJ,IPJ,Q(IPJ+1),Q(2SCAM-549
     1*IPJ+1),IDT-3*IPJ)                                                SCAM-550
      IF ((IV.EQ.1).AND.(III.NE.0).AND.(ICP.NE.IC)) CALL COCN(LA,LB,JA,JSCAM-551
     1B,IPI(3,IV)-1,IPI(2,IV)-1,NAJ,IPJ,Q(2*IPJ+1),Q(3*IPJ+1),IDT-4*IPJ)SCAM-552
      DO 78 LL=1,IPJ                                                    SCAM-553
      AI=Q(LL)*Q(LL+IPJ)                                                SCAM-554
      IF ((IV.EQ.1).AND.(III.NE.0).AND.(ICP.NE.IC)) AI=AI+Q(LL+2*IPJ)**2SCAM-555
   78 GCN(LL,IV)=GCN(LL,IV)+.25D0*AI*AR*XZ                              SCAM-556
      GO TO 80                                                          SCAM-557
   79 IF (.NOT.LO(132)) GO TO 80                                        SCAM-558
      J=IV+KBA-NCOLS                                                    SCAM-559
      FCN(IPJ,J)=FCN(IPJ,J)+0.25D0*AR*V(2,ICP)                          SCAM-560
   80 CONTINUE                                                          SCAM-561
   81 JCX=NC1+NI                                                        SCAM-562
      RETURN                                                            SCAM-563
 1000 FORMAT (//' CHANNEL SPIN AND PARITY =',F7.1,A1,I11,' COUPLED CHANNSCAM-564
     1ELS AND',I3,' SOLUTIONS'//'  IC  ICP N    L    J',19X,'C MATRIX',2SCAM-565
     20X,'|C|',6X,'PHASE')                                              SCAM-566
 1001 FORMAT (' C MATRIX LARGER THAN 1 FOR AJ IPI NC NCIN IC ICP =',F5.1SCAM-567
     1,A1,4I3,2X,2D12.4)                                                SCAM-568
 1002 FORMAT (1X,I3,I4,I3,I5,F7.1,4X,1P,2D15.7,' I',4X,0P,2F11.8)       SCAM-569
 1003 FORMAT (1X,I3,I4,I3,I5,F7.1,4X,1P,2D15.7,' I',4X,'CLOSED')        SCAM-570
 1004 FORMAT (/' TRANSMISSION COEFFICIENTS FOR CHANNEL SPIN AND PARITY =SCAM-571
     1',F7.1,A1/4(' LEVEL   L     J',16X))                              SCAM-572
 1005 FORMAT (1X,F9.1,4X,A1,1X,I4)                                      SCAM-573
 1006 FORMAT (1X,I2,I6,F9.1,2X,1P,D18.8,0P)                             SCAM-574
 1007 FORMAT (4(1X,I2,I4,F6.1,2X,1P,D14.7,0P,3X))                       SCAM-575
 1008 FORMAT (' ERROR IN EIGENSYSTEM.  E-W CORRECTION DISCONTINUED.')   SCAM-576
 1009 FORMAT (//' CHANNEL SPIN AND PARITY =',F7.1, A1//'  IC  ICP N    LSCAM-577
     1    J',9X,'TL',9X,'HF',11X,'NU',9X,'G')                           SCAM-578
 1010 FORMAT (' TL  IN TRANSFORMED CHANNEL SPACE:')                     SCAM-579
 1011 FORMAT (1X,I3,I4,I3,I5,F7.1,F12.6,D14.6,2F10.6)                   SCAM-580
 1012 FORMAT (15X,A8,F12.6,D14.6,F10.4,F10.6)                           SCAM-581
 1013 FORMAT (20X,'SUM',F12.6)                                          SCAM-582
 1014 FORMAT (15X,'H.-F.',D20.6)                                        SCAM-583
      END                                                               SCAM-584
C 02/04/06                                                      ECIS12  DIAG-000
      SUBROUTINE DIAG(ZR,ZI,XR,XI,N,NC,EPS,AX,IER)                      DIAG-001
C DIAGONALISATION OF A HERMITIAN COMPLEX MATRIX BY AN EXTENSION OF THE  DIAG-002
C JACOBI'S METHOD.                                                      DIAG-003
C INPUT:     ZR,ZI:  REAL AND IMAGINARY PARTS OF THE MATRIX.            DIAG-004
C            XR,XI:  REAL AND IMAGINARY PARTS OF THE UNIT MATRIX.       DIAG-005
C            N:      FIRST DIMENSION OF ZR,ZI,XR AND XI.                DIAG-006
C            NC:     DIMENSION OF THE MATRIX.                           DIAG-007
C            EPS:    VALUE BELOW WHICH MATRIX ELEMENTS ARE SET TO 0.    DIAG-008
C OUTPUT:    ZR,ZI:  THE EIGENVALUES ARE ON THE DIAGONAL OF ZR.         DIAG-009
C                    ALL THE OTHER ELEMENTS ARE 0, IF PROCESS SUCCEEDED.DIAG-010
C            XR,XI:  EIGENVECTORS.                                      DIAG-011
C            AX:     SQUARE OF NORM OF THE LARGEST NON DIAGONAL ELEMENT.DIAG-012
C            IER:    RETURNS 0 OR -1 AFTER 4*NC**2 ROTATIONS.           DIAG-013
C***********************************************************************DIAG-014
      IMPLICIT REAL*8 (A-H,O-Z)                                         DIAG-015
      DIMENSION ZR(N,*),ZI(N,*),XR(N,*),XI(N,*)                         DIAG-016
      IER=0                                                             DIAG-017
      NT=0                                                              DIAG-018
    1 NT=NT+1                                                           DIAG-019
      IF (NT.GT.4*NC*NC) GO TO 6                                        DIAG-020
      AX=0.D0                                                           DIAG-021
      L=1                                                               DIAG-022
      M=2                                                               DIAG-023
C SYMMETRISATION AND SEARCH FOR THE LARGEST NON DIAGONAL ELEMENT.       DIAG-024
      DO 3 I=1,NC                                                       DIAG-025
      DO 2 J=I,NC                                                       DIAG-026
      IF (ZR(J,I).EQ.0.D0) ZR(I,J)=0.D0                                 DIAG-027
      IF (ZI(J,I).EQ.0.D0) ZI(I,J)=0.D0                                 DIAG-028
      IF (ZR(I,J).EQ.0.D0) ZR(J,I)=0.D0                                 DIAG-029
      IF (ZI(I,J).EQ.0.D0) ZI(J,I)=0.D0                                 DIAG-030
      AR=(ZR(I,J)+ZR(J,I))/2.D0                                         DIAG-031
      AI=(ZI(I,J)-ZI(J,I))/2.D0                                         DIAG-032
      ZR(J,I)=AR                                                        DIAG-033
      ZR(I,J)=AR                                                        DIAG-034
      ZI(I,J)=AI                                                        DIAG-035
      ZI(J,I)=-AI                                                       DIAG-036
      IF (I.EQ.J) GO TO 2                                               DIAG-037
      AY=ZR(I,J)**2+ZI(I,J)**2                                          DIAG-038
      IF (AX.GT.AY) GO TO 2                                             DIAG-039
      AX=AY                                                             DIAG-040
      L=I                                                               DIAG-041
      M=J                                                               DIAG-042
    2 CONTINUE                                                          DIAG-043
    3 CONTINUE                                                          DIAG-044
      IF (AX.EQ.0.D0) RETURN                                            DIAG-045
C ELEMENTARY TRANSFORMATION.                                            DIAG-046
      U=DATAN2(-ZI(L,M),ZR(L,M))/2.D0                                   DIAG-047
      V=DATAN2(2.D0*DSQRT(ZR(L,M)**2+ZI(L,M)**2),ZR(M,M)-ZR(L,L))/2.D0  DIAG-048
      UC=DCOS(U)                                                        DIAG-049
      US=DSIN(U)                                                        DIAG-050
      TC=DCOS(V)                                                        DIAG-051
      TS=-DSIN(V)                                                       DIAG-052
      UCC=UC*TC                                                         DIAG-053
      UCS=UC*TS                                                         DIAG-054
      USC=US*TC                                                         DIAG-055
      USS=US*TS                                                         DIAG-056
C TRANSFORMATION OF ROWS.                                               DIAG-057
      DO 4 I=1,NC                                                       DIAG-058
      AR=XR(I,L)*UCC+XI(I,L)*USC+XR(I,M)*UCS-XI(I,M)*USS                DIAG-059
      BR=-XR(I,L)*UCS-XI(I,L)*USS+XR(I,M)*UCC-XI(I,M)*USC               DIAG-060
      AI=XI(I,L)*UCC-XR(I,L)*USC+XI(I,M)*UCS+XR(I,M)*USS                DIAG-061
      BI=-XI(I,L)*UCS+XR(I,L)*USS+XI(I,M)*UCC+XR(I,M)*USC               DIAG-062
      XR(I,L)=AR                                                        DIAG-063
      XR(I,M)=BR                                                        DIAG-064
      XI(I,L)=AI                                                        DIAG-065
      XI(I,M)=BI                                                        DIAG-066
      AR=ZR(I,L)*UCC+ZI(I,L)*USC+ZR(I,M)*UCS-ZI(I,M)*USS                DIAG-067
      BR=-ZR(I,L)*UCS-ZI(I,L)*USS+ZR(I,M)*UCC-ZI(I,M)*USC               DIAG-068
      AI=ZI(I,L)*UCC-ZR(I,L)*USC+ZI(I,M)*UCS+ZR(I,M)*USS                DIAG-069
      BI=-ZI(I,L)*UCS+ZR(I,L)*USS+ZI(I,M)*UCC+ZR(I,M)*USC               DIAG-070
      ZR(I,L)=AR                                                        DIAG-071
      ZR(I,M)=BR                                                        DIAG-072
      ZI(I,L)=AI                                                        DIAG-073
    4 ZI(I,M)=BI                                                        DIAG-074
C TRANSFORMATION OF COLUMNS.                                            DIAG-075
      DO 5 I=1,NC                                                       DIAG-076
      AR=ZR(L,I)*UCC-ZI(L,I)*USC+ZR(M,I)*UCS+ZI(M,I)*USS                DIAG-077
      BR=-ZR(L,I)*UCS+ZI(L,I)*USS+ZR(M,I)*UCC+ZI(M,I)*USC               DIAG-078
      AI=ZI(L,I)*UCC+ZR(L,I)*USC+ZI(M,I)*UCS-ZR(M,I)*USS                DIAG-079
      BI=-ZI(L,I)*UCS-ZR(L,I)*USS+ZI(M,I)*UCC-ZR(M,I)*USC               DIAG-080
      IF (DABS(AR).LT.EPS) AR=0.D0                                      DIAG-081
      IF (DABS(BR).LT.EPS) BR=0.D0                                      DIAG-082
      IF (DABS(AI).LT.EPS) AI=0.D0                                      DIAG-083
      IF (DABS(BI).LT.EPS) BI=0.D0                                      DIAG-084
      ZR(L,I)=AR                                                        DIAG-085
      ZR(M,I)=BR                                                        DIAG-086
      ZI(L,I)=AI                                                        DIAG-087
    5 ZI(M,I)=BI                                                        DIAG-088
      GO TO 1                                                           DIAG-089
    6 IER=-1                                                            DIAG-090
      RETURN                                                            DIAG-091
      END                                                               DIAG-092
C 02/04/06                                                      ECIS12  COCN-000
      SUBROUTINE COCN(LA,LB,JA,JB,IW,IV,IJ,IP,RB,RC,NT)                 COCN-001
C COMPUTATION OF COEFFICIENT FOR ANGULAR DISTRIBUTION OF COMPOUND       COCN-002
C NUCLEUS CROSS-SECTIONS.                                               COCN-003
C INPUT:     LA,LB,JA,JB,IW,IV,IJ: INTEGER DOUBLE VALUES.               COCN-004
C            IP:      NUMBER OF COEFFICIENTS REQUESTED.                 COCN-005
C            NT:      SIZE OF THE WORKING SPACE RC.                     COCN-006
C OUTPUT:    RB:      IN RB(I), VALUE OF:                               COCN-007
C                     ( LL  LA  LB )  ( JA  JB  LL )  ( LA  LB  LL )    COCN-008
C                     (            )  )            (  )            (    COCN-009
C                     (  0   0   0 )  ( IJ  IJ  IW )  ( JB  JA  IV )    COCN-010
C                     *(2 IJ+1)*SQRT((2 LA+1)(2 LB+1)(2 JA+1)(2 JB+1))  COCN-011
C                     FOR EVEN VALUES OF LL, FROM LL=0 WITH POSITIVE    COCN-012
C                     OR NULL VALUE FOR LL=0.                           COCN-013
C WORKING AREA:                                                         COCN-014
C             RC:     FOR ALL THE NON-ZERO 6-J COEFFICIENTS WITH EVEN   COCN-015
C                     AND ODD VALUES OF LL, STARTING WITH THE LARGEST   COCN-016
C                     VALUE OF LL IN RC(2).                             COCN-017
C***********************************************************************COCN-018
      IMPLICIT REAL*8 (A-H,O-Z)                                         COCN-019
      COMMON /INOUT/ MR,MW,MS                                           COCN-020
      DIMENSION RB(*),RC(*),J(5)                                        COCN-021
      LD=IABS(LA-LB)                                                    COCN-022
      LP=(LA+LB)/4+1                                                    COCN-023
      LM=LD/4+1                                                         COCN-024
      AD=DFLOAT(LD**2)                                                  COCN-025
      AP=DFLOAT(LA+LB+2)**2                                             COCN-026
      JT=MAX0(IP,LP)                                                    COCN-027
      IF (JT.GT.NT) GO TO 7                                             COCN-028
      TI=0.D0                                                           COCN-029
C RECURRENCE COMPUTATION OF 3-J COEFFICIENTS FOR EVEN VALUES OF LL.     COCN-030
      DO 2 I=1,JT                                                       COCN-031
      AL=DFLOAT(4*I-4)                                                  COCN-032
      RC(I)=0.D0                                                        COCN-033
      IF (I.LT.LM.OR.I.GT.LP) GO TO 2                                   COCN-034
      IF (I.GT.LM) GO TO 1                                              COCN-035
      RC(I)=1.D0                                                        COCN-036
      GO TO 2                                                           COCN-037
    1 RC(I)=-RC(I-1)*DSQRT(((AL-2.D0)**2-AD)*(AP-(AL-2.D0)**2)/((AL**2-ACOCN-038
     1D)*(AP-AL**2)))                                                   COCN-039
    2 TI=TI+RC(I)**2*(AL+1.D0)                                          COCN-040
      TI=DSQRT(TI)                                                      COCN-041
      DO 3 I=1,IP                                                       COCN-042
    3 RB(I)=RC(I)                                                       COCN-043
C QUANTUM NUMBERS OF THE FIRST 6-J COEFFICIENT.                         COCN-044
      J(1)=LA                                                           COCN-045
      J(2)=JA                                                           COCN-046
      J(3)=IV                                                           COCN-047
      J(4)=JB                                                           COCN-048
      J(5)=LB                                                           COCN-049
      DO 5 K=1,2                                                        COCN-050
      JI=MAX0(IABS(J(1)-J(5)),IABS(J(2)-J(4)))                          COCN-051
      JF=MIN0(J(1)+J(5),J(2)+J(4))                                      COCN-052
      JT=(JF-JI)/2+2                                                    COCN-053
      IF (JT.GT.NT) GO TO 7                                             COCN-054
      AT=DFLOAT(JF+1)                                                   COCN-055
      CALL DX6J(RC,AT,J,JT)                                             COCN-056
      TI=TI*DSQRT(AT*DFLOAT(J(3)+1))                                    COCN-057
      DO 4 I=1,IP                                                       COCN-058
      LL=4*I-4                                                          COCN-059
      LK=1                                                              COCN-060
      IF (LL.GE.JI.AND.LL.LE.JF) LK=2+(JF-LL)/2                         COCN-061
      RB(I)=RC(LK)*RB(I)                                                COCN-062
    4 CONTINUE                                                          COCN-063
C QUANTUM NUMBERS OF THE SECOND 6-J COEFFICIENT.                        COCN-064
      J(1)=IJ                                                           COCN-065
      J(3)=IW                                                           COCN-066
    5 J(5)=IJ                                                           COCN-067
C NORMALISATION.                                                        COCN-068
      TI=DSQRT(DFLOAT(LA+1)*DFLOAT(LB+1)*DFLOAT(JA+1)*DFLOAT(JB+1))*DFLOCOCN-069
     1AT(IJ+1)/TI                                                       COCN-070
      IF (RB(1).LT.0.D0) TI=-TI                                         COCN-071
      DO 6 I=1,IP                                                       COCN-072
    6 RB(I)=RB(I)*TI                                                    COCN-073
      RETURN                                                            COCN-074
    7 WRITE (MW,1000) NT,JT                                             COCN-075
      STOP                                                              COCN-076
 1000 FORMAT (' WORKING SPACE TOO SMALL IN COCN:',I5,' AVAILABLE',I6,' RCOCN-077
     1EQUESTED.'///' IN COCN  ...  STOP  ...')                          COCN-078
      END                                                               COCN-079
C 17/10/12                                                      ECIS12  SCHE-000
      SUBROUTINE SCHE(F,JMAX,KMAX,IPI,MT1,MT2,MF,TX,BM,MC,FA,XG,LMAX1,WVSCHE-001
     1,KAB,KBA,KCB,JMIN,IPJ,IPK,FN,NCOLL,NCOLS,NCT,FGN,AM,JIT,JTI,NLT,IDSCHE-002
     21,LO)                                                             SCHE-003
C SCATTERING COEFFICIENTS IN THE HELICITY REPRESENTATION.               SCHE-004
C INPUT:     F:       S-MATRIX.                                         SCHE-005
C            JMAX:    MAXIMUM NUMBER OF CHANNEL SPINS, DIMENSION FOR F. SCHE-006
C            KMAX:    MAXIMUM NUMBER OF COMPOUND NUCLEUS, DIMENSION FOR SCHE-007
C                     FN.                                               SCHE-008
C            IPI(I,*):PARITY OF CHANNEL FOR I=1,                        SCHE-009
C                     MULTIPLICITIES OF PARTICLE FOR I=2,               SCHE-010
C                     MULTIPLICITIES OF TARGET FOR I=3,                 SCHE-011
C                     PRODUCT OF CHARGES FOR I=4,                       SCHE-012
C                     FIRST/LAST CHANNEL NUMBER FOR I=6, 7 (SEE DEPH),  SCHE-013
C                     MAXIMUM ANGULAR MOMENTUM FOR I=11.                SCHE-014
C            MT1,MT2: MAXIMUM 2*SPIN+1 FOR PART. AND TARGET.            SCHE-015
C            MF:      HELICITY NUMBERS (SEE DEPH).                      SCHE-016
C            TX:      TOTAL REACTION CROSS SECTION IN MILLIBARNS        SCHE-017
C                     FOLLOWED BY THE TOTAL CROSS SECTION FOR EACH      SCHE-018
C                     LEVEL, THE COMPOUND NUCLEUS CROSS SECTIONS,       SCHE-019
C                     THE FISSION AND THE GAMMA CROSS SECTIONS.         SCHE-020
C            XG:      COULOMB PHASE-SHIFTS.                             SCHE-021
C            LMAX1:   DIMENSION FOR XG.                                 SCHE-022
C            WV:      WAVE NUMBER AND COULOMB PARAMETER (SEE COLF).     SCHE-023
C            KAB:     DIMENSION FOR FA.                                 SCHE-024
C            KBA:     NUMBER OF INDEPENDENT AMPLITUDES.                 SCHE-025
C            KCB:     DIMENSION FOR MC.                                 SCHE-026
C            JMIN:    TWICE MINIMUM CHANNEL SPIN.                       SCHE-027
C            IPJ:     NUMBER OF THE CHANNEL SPIN.                       SCHE-028
C            IPK:     NUMBER OF L VALUES FOR COMPOUND NUCLEUS.          SCHE-029
C            FN:      COMPOUND NUCLEUS CONTRIBUTION.                    SCHE-030
C            NCOLL:   NUMBER OF COUPLED LEVELS.                         SCHE-031
C            NCOLS:   NUMBER OF LEVELS WITH ANGULAR DISTRIBUTION.       SCHE-032
C            NCT:     NUMBER OF EQUATIONS AND SOLUTIONS FOR EACH PARITY.SCHE-033
C            FGN:     COEFFICIENTS OF LEGENDRE POLYNOMIALS FOR COMPOUND SCHE-034
C                     NUCLEUS.                                          SCHE-035
C            JIT:     NUMBER OF DIFFERENT RATES OF INTERPOLATION.       SCHE-036
C            JTI:     LIMITS AND STEPS OF INTERPOLATION.                SCHE-037
C            NLT:     MEMORIES NEEDED FOR LEGENDRE POLYNOMIALS.         SCHE-038
C            ID1:     LENGTH AVAILABLE FOR BM.                          SCHE-039
C            LO(I):   LOGICAL CONTROLS:                                 SCHE-040
C               LO(18) =.TRUE. PROJECTILE-TARGET ANTISYMMETRISATION.    SCHE-041
C               LO(41) =.TRUE. FACTORISATION OF 1/(1-COS(THETA)).       SCHE-042
C               LO(43) =.TRUE. INTERPOLATION ON TOTAL SPIN.             SCHE-043
C               LO(56) =.TRUE. OUTPUT OF S-MATRIX ELEMENTS.             SCHE-044
C               LO(60) =.TRUE. S-MATRIX ELEMENTS WRITTEN ON FILE 60.    SCHE-045
C               LO(65) =.TRUE. PRINT COEFFICIENTS OF THE EXPANSION IN   SCHE-046
C                              LEGENDRE POLYNOMIALS ON FILE 65.         SCHE-047
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             SCHE-048
C               LO(82) =.TRUE. OLD SIMPLIFIED COMPOUND NUCLEUS.         SCHE-049
C               LO(116)=.TRUE. NO OUTPUT.                               SCHE-050
C               LO(119)=.TRUE. RESULTS WITH THE LAST CALCULATION.       SCHE-051
C               LO(120)=.TRUE. OUTPUT AND LAST CALCULATION BEST ONE.    SCHE-052
C               LO(122)=.TRUE. IDENTICAL PARTICLES WITHOUT SPIN.        SCHE-053
C               LO(132)=.TRUE. STORE FISSION AND GAMMA TRANSMISSION     SCHE-054
C                              COEFFICIENTS FOR INTERPOLATION.          SCHE-055
C OUTPUT:    F:       HELICITY SCATTERING COEFFICIENTS.                 SCHE-056
C            TX,FGN:  ADDITION OF INTERPOLATED VALUES.                  SCHE-057
C WORKING AREAS:                                                        SCHE-058
C            BM:      FOR FACTORS 1/(-X*COS(THETA)), 3J COEFFICIENTS,...SCHE-059
C            MC:      NUCLEAR STATE NUMBERS AND ANGULAR MOMENTA.        SCHE-060
C            FA:      FOR STORAGE OF S-MATRIX FOR A GIVEN TOTAL SPIN.   SCHE-061
C            AM:      FOR PRODUCTS OF C.G. COEFFICIENTS.                SCHE-062
C FOR THE COMMON  /ANGUL/ SEE LECT.                                     SCHE-063
C FOR THE COMMON  /DCONS/ SEE CALC.                                     SCHE-064
C FOR THE COMMON  /NCOMP/ SEE CALX.                                     SCHE-065
C                                                                       SCHE-066
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     SCHE-067
C  XZ:        CONVERSION FACTOR TO MILLIBARNS.                          SCHE-068
C   USED:     XZ.                                                       SCHE-069
C                                                                       SCHE-070
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /ANGUL/:                     SCHE-071
C  NCJ:       NUMBER OF FACTORISATIONS OF 1/(1-COS(THETA)) IN AMPLITUDE.SCHE-072
C   DEFINED:  NCJ.                                                      SCHE-073
C   USED:     NCJ.                                                      SCHE-074
C                                                                       SCHE-075
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     SCHE-076
C  NSP(1):    NUMBER OF UNCOUPLED LEVELS FOR COMPOUND NUCLEUS           SCHE-077
C             INCLUDING DISCRETISATION OF CONTINUUM.                    SCHE-078
C  NSP(2):    NUMBER OF THESE LEVELS WITH ANGULAR DISTRIBUTION.         SCHE-079
C  NSP(3):    NUMBER OF THESE LEVELS WITHOUT ANGULAR DISTRIBUTION.      SCHE-080
C   USED:     NSP.                                                      SCHE-081
C                                                                       SCHE-082
C***********************************************************************SCHE-083
      IMPLICIT REAL*8 (A-H,O-Z)                                         SCHE-084
      LOGICAL LO(150)                                                   SCHE-085
      DIMENSION F(2,JMAX,*),IPI(11,*),MF(10,*),TX(*),BM(*),MC(KCB,2,*),FSCHE-086
     1A(2,KAB,*),XG(LMAX1,*),WV(22,*),FN(KMAX,*),NCT(6),FGN(KMAX,*),AM(MSCHE-087
     2T1,MT2,*),JTI(2,JIT)                                              SCHE-088
      CHARACTER*1 IP(2),IPP                                             SCHE-089
      COMMON /ANGUL/ THETA1,THETA2,DTHETA,DTHE,NCJ,NL(3),JMM(2)         SCHE-090
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            SCHE-091
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQSCHE-092
     1,ACN1,ACN2,AZ(18)                                                 SCHE-093
      COMMON /INOUT/ MR,MW,MS                                           SCHE-094
      CHARACTER*20 fname                                                RCN  RCN
      LOGICAL unformat                                                  RCN  RCN
      COMMON /NFORM/unformat,fname                                      RCN  RCN
      DATA IP,PI,K2,K3,K4 /'+','-',3.1415926535897932D0,3*0/            SCHE-095
      IF (LO(120)) GO TO 60                                             SCHE-096
      IF (LO(119)) RETURN                                               SCHE-097
C TABLES OF QUANTUM NUMBERS.                                            SCHE-098
      IPD=1                                                             SCHE-099
      IF (LO(122)) IPD=2                                                SCHE-100
      IPZ=2*IPD                                                         SCHE-101
      IJA=JMIN-IPZ                                                      SCHE-102
      IAJ=IJA                                                           SCHE-103
      DO 4 JPITMP=1,2                                                   SCHE-104
      NC=0                                                              SCHE-105
      DO 3 I=1,NCOLS                                                    SCHE-106
      NJ1=IJA-IPI(3,I)+1                                                SCHE-107
      NJ=IPI(3,I)                                                       SCHE-108
      DO 2 J=1,NJ                                                       SCHE-109
      L1=NJ1-IPI(2,I)+1                                                 SCHE-110
      NM=IPI(2,I)                                                       SCHE-111
      DO 1 K=1,NM                                                       SCHE-112
      IF (MOD(L1+2*IPI(1,I)+2*(JPITMP+IPD),4).EQ.0) GO TO 1             SCHE-113
      NC=NC+1                                                           SCHE-114
      MC(NC,JPITMP,1)=I                                                 SCHE-115
      MC(NC,JPITMP,2)=L1                                                SCHE-116
      MC(NC,JPITMP,3)=NJ1                                               SCHE-117
    1 L1=L1+2                                                           SCHE-118
    2 NJ1=NJ1+2                                                         SCHE-119
    3 CONTINUE                                                          SCHE-120
    4 CONTINUE                                                          SCHE-121
      NXY=0                                                             SCHE-122
      IF (LO(81).AND.(.NOT.LO(82))) NXY=NSP(3)+2                        SCHE-123
      IF (.NOT.LO(43)) GO TO 38                                         SCHE-124
C INTERPOLATION FOR THE S-MATRIX.                                       SCHE-125
      RZ=4.D0*PI*XZ*DFLOAT(IPD)                                         SCHE-126
      I1=0                                                              SCHE-127
      I4=0                                                              SCHE-128
C LOOP ON PARITIES.                                                     SCHE-129
      DO 17 J=1,2                                                       SCHE-130
      I2=I1+NCT(J)                                                      SCHE-131
      I3=NCT(J+2)                                                       SCHE-132
      I1=I1+1                                                           SCHE-133
      IF (I1.GT.I2) GO TO 17                                            SCHE-134
C LOOP ON SOLUTIONS.                                                    SCHE-135
      DO 16 K=1,I3                                                      SCHE-136
      JI4=(3+MAX0(IPI(3,1)-1-IAJ-MC(K,J,3),IPI(2,1)-1-MC(K,J,2)-MC(K,J,3SCHE-137
     1),-2*MC(K,J,2),-2*MC(K,J,3)))/4-IPD+1                             SCHE-138
      I6=0                                                              SCHE-139
C LOOP ON S MATRIX ELEMENTS.                                            SCHE-140
      DO 15 I=I1,I2                                                     SCHE-141
      I4=I4+1                                                           SCHE-142
      I6=I6+1                                                           SCHE-143
      IV=MC(I6,J,1)                                                     SCHE-144
      JI3=(3+MAX0(IPI(3,IV)-1-IAJ-MC(I6,J,3),IPI(2,IV)-1-MC(I6,J,2)-MC(ISCHE-145
     16,J,3),-2*MC(I6,J,2),-2*MC(I6,J,3)))/4-IPD+1                      SCHE-146
      JI1=MAX0(JI3,JI4)                                                 SCHE-147
      JT1=MIN0(IPJ,IPI(10,1)-MC(K,J,2)/2,IPI(10,IV)-MC(IV,J,2)/2)       SCHE-148
      N1=0                                                              SCHE-149
      N3=1                                                              SCHE-150
    5 IF (N3.LT.JI1) GO TO 6                                            SCHE-151
      N1=N1+1                                                           SCHE-152
      K1=K2                                                             SCHE-153
      K2=K3                                                             SCHE-154
      K3=K4                                                             SCHE-155
      K4=N3                                                             SCHE-156
      IF (N1.GT.3) GO TO 9                                              SCHE-157
    6 DO 7 L=1,JIT                                                      SCHE-158
      IF (N3.LE.JTI(1,L)) GO TO 8                                       SCHE-159
    7 N3=N3+JTI(2,L)*IPD                                                SCHE-160
      L=JIT                                                             SCHE-161
    8 N3=N3+IPD                                                         SCHE-162
      IF (N3.LE.JT1) GO TO 5                                            SCHE-163
      IF (N3.GT.JTI(1,L)+JTI(2,L)*IPD+IPD) GO TO 14                     SCHE-164
      GO TO 69                                                          SCHE-165
    9 JI2=K3-IPD                                                        SCHE-166
      IF (N3.EQ.JT1) JI2=K4-IPD                                         SCHE-167
      IF (JI1.GT.JI2) GO TO 14                                          SCHE-168
      M1=(K1-K2)*(K1-K3)*(K1-K4)                                        SCHE-169
      M2=(K2-K1)*(K2-K3)*(K2-K4)                                        SCHE-170
      M3=(K3-K1)*(K3-K2)*(K3-K4)                                        SCHE-171
      M4=(K4-K1)*(K4-K2)*(K4-K3)                                        SCHE-172
      N2=1                                                              SCHE-173
      DO 13 N4=JI1,JI2,IPD                                              SCHE-174
      IF (N4.EQ.K1.OR.N4.EQ.K2.OR.N4.EQ.K3.OR.N4.EQ.K4) GO TO 13        SCHE-175
      SZ=RZ*DFLOAT(2*N4+JMIN-1)                                         SCHE-176
      IF (N2.NE.1) GO TO 10                                             SCHE-177
      N2=3                                                              SCHE-178
      A2=F(1,K1,I4)**2+F(2,K1,I4)**2                                    SCHE-179
      B2=F(1,K2,I4)**2+F(2,K2,I4)**2                                    SCHE-180
      C2=F(1,K3,I4)**2+F(2,K3,I4)**2                                    SCHE-181
      D2=F(1,K4,I4)**2+F(2,K4,I4)**2                                    SCHE-182
      IF (A2*B2*C2*D2.EQ.0.D0) GO TO 10                                 SCHE-183
      A1=DATAN2(F(2,K1,I4),F(1,K1,I4))                                  SCHE-184
      B1=DATAN2(F(2,K2,I4),F(1,K2,I4))                                  SCHE-185
      C1=DATAN2(F(2,K3,I4),F(1,K3,I4))                                  SCHE-186
      D1=DATAN2(F(2,K4,I4),F(1,K4,I4))                                  SCHE-187
      IF ((A1-B1)*(B1-C1).LT.0.D0.OR.(B1-C1)*(C1-D1).LT.0.D0) GO TO 10  SCHE-188
      N2=2                                                              SCHE-189
      A2=DLOG(A2)                                                       SCHE-190
      B2=DLOG(B2)                                                       SCHE-191
      C2=DLOG(C2)                                                       SCHE-192
      D2=DLOG(D2)                                                       SCHE-193
   10 A3=DFLOAT((N4-K2)*(N4-K3)*(N4-K4))/DFLOAT(M1)                     SCHE-194
      B3=DFLOAT((N4-K1)*(N4-K3)*(N4-K4))/DFLOAT(M2)                     SCHE-195
      C3=DFLOAT((N4-K1)*(N4-K2)*(N4-K4))/DFLOAT(M3)                     SCHE-196
      D3=DFLOAT((N4-K1)*(N4-K2)*(N4-K3))/DFLOAT(M4)                     SCHE-197
      IF (N2.EQ.3) GO TO 11                                             SCHE-198
      A4=A1*A3+B1*B3+C1*C3+D1*D3                                        SCHE-199
      B4=DEXP(0.5D0*(A2*A3+B2*B3+C2*C3+D2*D3))                          SCHE-200
      F(1,N4,I4)=B4*DCOS(A4)                                            SCHE-201
      F(2,N4,I4)=B4*DSIN(A4)                                            SCHE-202
      GO TO 12                                                          SCHE-203
   11 F(1,N4,I4)=F(1,K1,I4)*A3+F(1,K2,I4)*B3+F(1,K3,I4)*C3+F(1,K4,I4)*D3SCHE-204
      F(2,N4,I4)=F(2,K1,I4)*A3+F(2,K2,I4)*B3+F(2,K3,I4)*C3+F(2,K4,I4)*D3SCHE-205
   12 TX(IV+1)=TX(IV+1)+(F(1,N4,I4)**2+F(2,N4,I4)**2)*SZ                SCHE-206
      IF (I6.EQ.K) TX(1)=TX(1)+F(2,N4,I4)*SZ                            SCHE-207
   13 CONTINUE                                                          SCHE-208
   14 JI1=JI2+IPZ                                                       SCHE-209
      IF (JI1.LT.JT1) GO TO 6                                           SCHE-210
   15 CONTINUE                                                          SCHE-211
   16 CONTINUE                                                          SCHE-212
   17 I1=I2                                                             SCHE-213
      IF (.NOT.(LO(81).AND.LO(132))) GO TO 38                           SCHE-214
C INTERPOLATION FOR THE COMPOUND NUCLEUS.                               SCHE-215
      I1=0                                                              SCHE-216
      I4=0                                                              SCHE-217
      DO 37 J=1,3                                                       SCHE-218
      IF (J.LE.2) GO TO 18                                              SCHE-219
      IF (NXY.EQ.0) GO TO 37                                            SCHE-220
      I2=I1                                                             SCHE-221
      I3=NXY                                                            SCHE-222
      GO TO 19                                                          SCHE-223
   18 I2=I1+NCT(J+4)                                                    SCHE-224
      I3=NCT(J+2)                                                       SCHE-225
      I1=I1+1                                                           SCHE-226
   19 IF (I1.GT.I2) GO TO 37                                            SCHE-227
      I6=0                                                              SCHE-228
C LOOP ON SOLUTIONS.                                                    SCHE-229
      DO 36 K=1,I3                                                      SCHE-230
      IF (J.EQ.3) GO TO 20                                              SCHE-231
      JI4=(3+MAX0(IPI(3,1)-1-IAJ-MC(K,J,3),IPI(2,1)-1-MC(K,J,2)-MC(K,J,3SCHE-232
     1),-2*MC(K,J,2),-2*MC(K,J,3)))/4-IPD+1                             SCHE-233
   20 I6=0                                                              SCHE-234
C LOOP ON S MATRIX ELEMENTS.                                            SCHE-235
      DO 35 I=I1,I2                                                     SCHE-236
      I4=I4+1                                                           SCHE-237
      I6=I6+1                                                           SCHE-238
      JI1=1                                                             SCHE-239
      IF (J.EQ.3) GO TO 21                                              SCHE-240
      IV=MC(I6,J,1)                                                     SCHE-241
      IVL=IV+NCOLL+1                                                    SCHE-242
      JI3=(3+MAX0(IPI(3,IV)-1-IAJ-MC(I6,J,3),IPI(2,IV)-1-MC(I6,J,2)-MC(ISCHE-243
     16,J,3),-2*MC(I6,J,2),-2*MC(I6,J,3)))/4-IPD+1                      SCHE-244
      JI1=MAX0(JI3,JI4)                                                 SCHE-245
      GO TO 22                                                          SCHE-246
   21 IVL=K+NCOLL+NCOLS+1                                               SCHE-247
   22 NT=0                                                              SCHE-248
      JPJ=0                                                             SCHE-249
      DO 23 L=JI1,IPK                                                   SCHE-250
      IF (DABS(FN(L,I4)).LT.1.D-15) GO TO 23                            SCHE-251
      NT=NT+1                                                           SCHE-252
      JPJ=L                                                             SCHE-253
   23 CONTINUE                                                          SCHE-254
      NT=MIN0(NT,4)-1                                                   SCHE-255
      IF (NT.LT.1) GO TO 35                                             SCHE-256
      N1=0                                                              SCHE-257
      N3=1                                                              SCHE-258
   24 IF (N3.LT.JI1) GO TO 25                                           SCHE-259
      N1=N1+1                                                           SCHE-260
      K1=K2                                                             SCHE-261
      K2=K3                                                             SCHE-262
      K3=K4                                                             SCHE-263
      K4=N3                                                             SCHE-264
      IF (N1.GT.NT) GO TO 28                                            SCHE-265
   25 DO 26 L=1,JIT                                                     SCHE-266
      IF (N3.LE.JTI(1,L)) GO TO 27                                      SCHE-267
   26 N3=N3+JTI(2,L)*IPD                                                SCHE-268
      L=JIT                                                             SCHE-269
   27 N3=N3+IPD                                                         SCHE-270
      IF (N3.LE.JPJ) GO TO 24                                           SCHE-271
      IF (N3.GT.JTI(1,L)+JTI(2,L)*IPD+IPD) GO TO 34                     SCHE-272
   28 JI2=K3-IPD                                                        SCHE-273
      IF (N3.EQ.JPJ) JI2=K4-IPD                                         SCHE-274
      IF (JI1.GT.JI2) GO TO 34                                          SCHE-275
      DO 33 N4=JI1,JI2,IPD                                              SCHE-276
      IF (N4.EQ.K1.OR.N4.EQ.K2.OR.N4.EQ.K3.OR.N4.EQ.K4) GO TO 33        SCHE-277
      SZ=RZ*DFLOAT(2*N4+JMIN-1)                                         SCHE-278
      IF (NT.LT.3) GO TO 29                                             SCHE-279
      A3=DFLOAT((N4-K2)*(N4-K3)*(N4-K4))/DFLOAT((K1-K2)*(K1-K3)*(K1-K4))SCHE-280
      B3=DFLOAT((N4-K1)*(N4-K3)*(N4-K4))/DFLOAT((K2-K1)*(K2-K3)*(K2-K4))SCHE-281
      C3=DFLOAT((N4-K1)*(N4-K2)*(N4-K4))/DFLOAT((K3-K1)*(K3-K2)*(K3-K4))SCHE-282
      D3=DFLOAT((N4-K1)*(N4-K2)*(N4-K3))/DFLOAT((K4-K1)*(K4-K2)*(K4-K3))SCHE-283
      FN(N4,I4)=DABS(FN(K1,I4)*A3+FN(K2,I4)*B3+FN(K3,I4)*C3+FN(K4,I4)*D3SCHE-284
     1)                                                                 SCHE-285
      GO TO 31                                                          SCHE-286
   29 IF (NT.EQ.1) GO TO 30                                             SCHE-287
      B3=DFLOAT((N4-K3)*(N4-K4))/DFLOAT((K2-K3)*(K2-K4))                SCHE-288
      C3=DFLOAT((N4-K2)*(N4-K4))/DFLOAT((K3-K2)*(K3-K4))                SCHE-289
      D3=DFLOAT((N4-K2)*(N4-K3))/DFLOAT((K4-K2)*(K4-K3))                SCHE-290
      FN(N4,I4)=DABS(FN(K2,I4)*B3+FN(K3,I4)*C3+FN(K4,I4)*D3)            SCHE-291
      GO TO 31                                                          SCHE-292
   30 C3=DFLOAT(N4-K4)/DFLOAT(K3-K4)                                    SCHE-293
      D3=DFLOAT(N4-K3)/DFLOAT(K4-K3)                                    SCHE-294
      FN(N4,I4)=DABS(FN(K3,I4)*C3+FN(K4,I4)*D3)                         SCHE-295
   31 TX(IVL)=TX(IVL)+FN(N4,I4)*SZ                                      SCHE-296
      IF ((J.EQ.3).OR.(FN(N4,I4).EQ.0.D0)) GO TO 33                     SCHE-297
      CALL COCN(MC(K,J,2)+IPZ*N4,MC(K,J,2)+IPZ*N4,MC(K,J,3)+IPZ*N4,MC(K,SCHE-298
     1J,3)+IPZ*N4,IPI(3,1)-1,IPI(2,1)-1,IJA+IPZ*N4,N4,BM,BM(N4+1),ID1-N4SCHE-299
     2)                                                                 SCHE-300
      CALL COCN(MC(I6,J,2)+IPZ*N4,MC(I6,J,2)+IPZ*N4,MC(I6,J,3)+IPZ*N4,MCSCHE-301
     1(I6,J,3)+IPZ*N4,IPI(3,IV)-1,IPI(2,IV)-1,IJA+IPZ*N4,N4,BM(N4+1),BM(SCHE-302
     22*N4+1),ID1-2*N4)                                                 SCHE-303
      IF ((IV.EQ.1).AND.(IPI(3,1).GT.1).AND.(K.NE.I6)) CALL COCN(MC(K,J,SCHE-304
     12)+IPZ*N4,MC(I6,J,2)+IPZ*N4,MC(K,J,3)+IPZ*N4,MC(I6,J,3)+IPZ*N4,IPISCHE-305
     2(3,IV)-1,IPI(2,IV)-1,IJA+IPZ*N4,N4,BM(2*N4+1),BM(3*N4+1),ID1-3*N4)SCHE-306
      DO 32 LL=1,N4                                                     SCHE-307
      Z=BM(LL)*BM(LL+N4)                                                SCHE-308
      IF ((IV.EQ.1).AND.(IPI(3,1).GT.1).AND.(K.NE.I6)) Z=BM(LL+2*N4)**2+SCHE-309
     1Z                                                                 SCHE-310
   32 FGN(LL,IV)=FGN(LL,IV)+Z*FN(N4,I4)*XZ                              SCHE-311
   33 CONTINUE                                                          SCHE-312
   34 JI1=JI2+IPZ                                                       SCHE-313
      IF (JI1.LT.JPJ) GO TO 25                                          SCHE-314
   35 CONTINUE                                                          SCHE-315
   36 CONTINUE                                                          SCHE-316
   37 I1=I2                                                             SCHE-317
   38 IK=1                                                              SCHE-318
      IF(unformat) then                                                 RCN  RCN
        OPEN(99,file='file99',FORM='unformatted')                       RCN  RCN
      ELSE                                                              RCN  RCN
        OPEN(99,file='file99')                                          RCN  RCN
      ENDIF                                                             RCN  RCN
      NPT=0                                                             SCHE-319
      DO 57 IJ=1,IPJ,IPD                                                SCHE-320
C TRANSFER OF S MATRIX FOR A GIVEN ANGULAR MOMENTUM.                    SCHE-321
      I1=0                                                              SCHE-322
      I4=0                                                              SCHE-323
      DO 41 J=1,2                                                       SCHE-324
      I2=I1+NCT(J+2)                                                    SCHE-325
      I1=I1+1                                                           SCHE-326
      IF (I1.GT.I2) GO TO 41                                            SCHE-327
      I3=NCT(J)                                                         SCHE-328
      DO 40 I=I1,I2                                                     SCHE-329
      DO 39 K=1,I3                                                      SCHE-330
      I4=I4+1                                                           SCHE-331
      FA(1,K,I)=F(1,IJ,I4)                                              SCHE-332
   39 FA(2,K,I)=F(2,IJ,I4)                                              SCHE-333
   40 CONTINUE                                                          SCHE-334
   41 I1=I2                                                             SCHE-335
      DO 42 I=1,KBA                                                     SCHE-336
      F(1,IJ,I)=0.D0                                                    SCHE-337
   42 F(2,IJ,I)=0.D0                                                    SCHE-338
      J1=0                                                              SCHE-339
      IAJ=IAJ+IPZ                                                       SCHE-340
      AAJ=DFLOAT(IAJ+1)                                                 SCHE-341
      DO 54 JI=1,2                                                      SCHE-342
      J2=J1+NCT(JI+2)                                                   SCHE-343
      J1=J1+1                                                           SCHE-344
      IF (J1.GT.J2) GO TO 54                                            SCHE-345
      NC1=0                                                             SCHE-346
      NC2=0                                                             SCHE-347
      NC=NCT(JI)                                                        SCHE-348
C GEOMETRIC COEFFICIENT FOR THE TRANSFORMATION TO HELICITY COEFFICIENTS.SCHE-349
      DO 48 IC=1,NC                                                     SCHE-350
      MC(IC,JI,2)=MC(IC,JI,2)+IPZ                                       SCHE-351
      MC(IC,JI,3)=MC(IC,JI,3)+IPZ                                       SCHE-352
      IV=MC(IC,JI,1)                                                    SCHE-353
      NI=IPI(2,IV)                                                      SCHE-354
      MI=IPI(3,IV)                                                      SCHE-355
      MC(IC,1,4)=MIN0(MC(IC,JI,3)-IABS(IAJ+1-MI),MC(IC,JI,2)-IABS(MC(IC,SCHE-356
     1JI,3)+1-NI))                                                      SCHE-357
      IF (MC(IC,JI,2).GT.2*IPI(10,IV)) MC(IC,1,4)=-1                    SCHE-358
      IF (MC(IC,1,4).LT.0) GO TO 48                                     SCHE-359
      IF (IV.EQ.1) NC1=NC1+1                                            SCHE-360
      NC2=NC2+1                                                         SCHE-361
      A1=0.D0                                                           SCHE-362
      YM=DFLOAT(MC(IC,JI,3)-NI+1)                                       SCHE-363
      XB1=0.5D0*DFLOAT(NI**2+(MC(IC,JI,3)-MC(IC,JI,2))*(MC(IC,JI,2)+MC(ISCHE-364
     1C,JI,3)+2)-1)                                                     SCHE-365
      C3=0.D0                                                           SCHE-366
C COUPLING FOR PARTICLE HELICITY.                                       SCHE-367
      DO 43 I1=1,NI                                                     SCHE-368
      BM(I1)=0.D0                                                       SCHE-369
      IF (IABS(2*I1-NI-1).GT.MC(IC,JI,3)) GO TO 43                      SCHE-370
      N3=(MC(IC,JI,3)+2*I1-NI-1)*(MC(IC,JI,3)-2*I1+NI+3)*(I1-1)         SCHE-371
      IF (N3.EQ.0) BM(I1)=DFLOAT(2*MOD(I1,2)-1)                         SCHE-372
      IF (N3.LE.0) GO TO 43                                             SCHE-373
      C2=C3                                                             SCHE-374
      C3=DSQRT(DFLOAT((NI-I1+1)*(I1-1))*(YM+DFLOAT(2*I1-2))*(YM+DFLOAT(2SCHE-375
     1*NI-2*I1+2)))                                                     SCHE-376
      BM(I1)=(XB1-DFLOAT(2*I1-NI-3)**2)*BM(I1-1)/C3                     SCHE-377
      IF (I1.GE.3) BM(I1)=BM(I1)-C2*BM(I1-2)/C3                         SCHE-378
   43 A1=A1+BM(I1)**2                                                   SCHE-379
      DO 47 I1=1,NI                                                     SCHE-380
      A2=0.D0                                                           SCHE-381
      IF (DABS(BM(I1)).LT.1.D-10) GO TO 45                              SCHE-382
      IA=2*I1-NI-1                                                      SCHE-383
      XB1=0.5D0*DFLOAT(MI**2+(IAJ-MC(IC,JI,3))*(IAJ+MC(IC,JI,3)+2)-1)   SCHE-384
      C3=0.D0                                                           SCHE-385
C COUPLING FOR TARGET HELICITY.                                         SCHE-386
      DO 44 I2=1,MI                                                     SCHE-387
      BM(NI+I2)=0.D0                                                    SCHE-388
      IF (IABS(2*I2-MI-1-IA).GT.IAJ) GO TO 44                           SCHE-389
      N3=(IAJ+IA-2*I2+MI+3)*(IAJ-IA+2*I2-MI-1)*(I2-1)                   SCHE-390
      IF (N3.EQ.0) BM(NI+I2)=DFLOAT(2*MOD(I2,2)-1)                      SCHE-391
      IF (N3.LE.0) GO TO 44                                             SCHE-392
      C2=C3                                                             SCHE-393
      IB=2*I2-MI-3                                                      SCHE-394
      C3=DSQRT(DFLOAT((MI-I2+1)*(I2-1))*(AAJ**2-DFLOAT(2*I1-2*I2+MI-NI+1SCHE-395
     1)**2))                                                            SCHE-396
      BM(NI+I2)=((XB1-DFLOAT(IB*(IB-IA)))*BM(NI+I2-1)-C2*BM(NI+I2-2))/C3SCHE-397
   44 A2=A2+BM(NI+I2)**2                                                SCHE-398
      IF (A2*A1.NE.0.D0) A2=DFLOAT(MOD(1+MC(IC,JI,3)-IAJ+MI,4)-1)*DSQRT(SCHE-399
     1AAJ/(A1*A2))                                                      SCHE-400
   45 DO 46 I2=1,MI                                                     SCHE-401
   46 AM(I1,I2,IC)=BM(I1)*BM(NI+I2)*A2                                  SCHE-402
   47 CONTINUE                                                          SCHE-403
   48 CONTINUE                                                          SCHE-404
      IF (NC1.EQ.0) GO TO 54                                            SCHE-405
      NCIN=NCT(JI+2)                                                    SCHE-406
C TRANSFORMATION.                                                       SCHE-407
      IF (IK.NE.IJ) GO TO 49                                            SCHE-408
      IF (.NOT.(LO(56).OR.LO(60))) GO TO 49                             SCHE-409
      BJ=.5D0*DFLOAT(IAJ)                                               SCHE-410
      JIJ=1+MOD(IJ+JI,2)                                                SCHE-411
      NC1=NC1*NC2                                                       SCHE-412
      IF (LO(56)) WRITE (MW,1000) BJ,IP(JIJ)                            SCHE-413
      NPT=NPT+1                                                         SCHE-414
      IF(unformat) then                                                 RCN  RCN
        IF (LO(60)) WRITE (99     ) BJ,IP(JIJ),NC2,NC1                  RCN  RCN
      ELSE                                                              RCN  RCN
        IF (LO(60)) WRITE (99,1001) BJ,IP(JIJ),NC2,NC1                  SCHE-415
      ENDIF                                                             RCN  RCN
   49 NC1=0                                                             SCHE-416
      DO 53 IC=1,NCIN                                                   SCHE-417
      IF (MC(IC,1,4).LT.0) GO TO 53                                     SCHE-418
      ICX=IC                                                            SCHE-419
      NC1=NC1+1                                                         SCHE-420
      IF (JI.EQ.2) ICX=ICX+NCT(3)                                       SCHE-421
      LCI=MC(IC,JI,2)/2+1                                               SCHE-422
      NC2=0                                                             SCHE-423
      DO 52 ICP=1,NC                                                    SCHE-424
      IF (MC(ICP,1,4).LT.0) GO TO 52                                    SCHE-425
      LCP=MC(ICP,JI,2)/2+1                                              SCHE-426
      IV=MC(ICP,JI,1)                                                   SCHE-427
      NC2=NC2+1                                                         SCHE-428
      C1=XG(LCI,1)+XG(LCP,IV)                                           SCHE-429
      IF (IK.NE.IJ) GO TO 50                                            SCHE-430
      IF (.NOT.(LO(56).OR.LO(60))) GO TO 50                             SCHE-431
      B1=-2.D0*FA(2,ICP,ICX)                                            SCHE-432
      IF (IC.EQ.ICP) B1=B1+1.D0                                         SCHE-433
      B2=2.D0*FA(1,ICP,ICX)                                             SCHE-434
      B3=DSQRT(B1**2+B2**2)                                             SCHE-435
      D1=0.D0                                                           SCHE-436
      IF (B3.NE.0.D0) D1=DATAN2(B2,B1)                                  SCHE-437
      D2=DMOD(D1+C1+PI,2.D0*PI)-PI                                      SCHE-438
      LC=LCP-1                                                          SCHE-439
      BJ=0.5D0*DFLOAT(MC(ICP,JI,3))                                     SCHE-440
      IF (LO(56)) WRITE (MW,1002) NC1,NC2,IV,LC,BJ,B1,B2,B3,D1,D2       SCHE-441
      IF(unformat) then                                                 RCN  RCN
        IF (LO(60)) WRITE (99     ) NC1,NC2,IV,LC,BJ,B1,B2,B3           RCN  RCN
      ELSE                                                              RCN  RCN
        IF (LO(60)) WRITE (99,1003) NC1,NC2,IV,LC,BJ,B1,B2,B3           SCHE-442
      ENDIF                                                             RCN  RCN
C MULTIPLICATION BY THE COULOMB PHASE.                                  SCHE-443
   50 A1=DCOS(C1)                                                       SCHE-444
      A2=DSIN(C1)                                                       SCHE-445
      C2=FA(1,ICP,ICX)*A1-FA(2,ICP,ICX)*A2                              SCHE-446
      C3=FA(1,ICP,ICX)*A2+FA(2,ICP,ICX)*A1                              SCHE-447
      I1=IPI(6,IV)                                                      SCHE-448
      I2=IPI(7,IV)                                                      SCHE-449
C  HELICITY SCATTERING COEFFICIENTS.                                    SCHE-450
      DO 51 ID=I1,I2                                                    SCHE-451
      MF1=MF(1,ID)                                                      SCHE-452
      MF2=MF(2,ID)                                                      SCHE-453
      MF3=MF(3,ID)                                                      SCHE-454
      MF4=MF(4,ID)                                                      SCHE-455
      C1=AM(MF1,MF2,ICP)*AM(MF3,MF4,IC)                                 SCHE-456
      F(1,IJ,ID)=F(1,IJ,ID)+C2*C1                                       SCHE-457
   51 F(2,IJ,ID)=F(2,IJ,ID)+C3*C1                                       SCHE-458
   52 CONTINUE                                                          SCHE-459
   53 CONTINUE                                                          SCHE-460
   54 CONTINUE                                                          SCHE-461
      IF ((.NOT.LO(43)).OR.IK.NE.IJ) GO TO 56                           SCHE-462
      DO 55 L=1,JIT                                                     SCHE-463
      IF (IK.LE.JTI(1,L)) GO TO 56                                      SCHE-464
   55 IK=IK+JTI(2,L)*IPD                                                SCHE-465
   56 IK=IK+IPD                                                         SCHE-466
   57 CONTINUE                                                          SCHE-467
      IF (.NOT.LO(60)) GO TO 60                                         SCHE-468
      WRITE (60,1004) WV(1,1),WV(13,1),WV(2,1),IPI(4,1),NPT             SCHE-469
      REWIND (99,ERR=593)                                               RCN  RCN
      IF(unformat) then                                                 RCN  RCN
        DO 591 I=1,NPT                                                  RCN  RCN 
        READ (99     ,END=593,ERR=593) U1,IPP,K1,K2                     RCN  RCN
        WRITE (60,1001) U1,IPP,K1,K2                                    RCN  RCN
        DO 581 K=1,K2                                                   RCN  RCN
        READ (99     ,END=593,ERR=593) K1,K2,K3,K4,BJ,B1,B2,B3          RCN  RCN
  581   WRITE (60,1005) K1,K2,K3,K4,BJ,B1,B2,B3                         RCN  RCN
  591   CONTINUE                                                        RCN  RCN
      ELSE                                                              RCN  RCN
      DO 59 I=1,NPT                                                     SCHE-471
      READ (99,1001,END=593,ERR=593) U1,IPP,K1,K2                       RCN  RCN
      WRITE (60,1001) U1,IPP,K1,K2                                      SCHE-473
      DO 58 K=1,K2                                                      SCHE-474
      READ (99,1003,END=593,ERR=593) K1,K2,K3,K4,BJ,B1,B2,B3            RCN  RCN
   58 WRITE (60,1005) K1,K2,K3,K4,BJ,B1,B2,B3                           SCHE-476
   59 CONTINUE                                                          SCHE-477
      ENDIF                                                             RCN  RCN
  593 CLOSE (99,STATUS='DELETE')                                        RCN  RCN
   60 IF (.NOT.LO(65)) GO TO 61                                         SCHE-479
      NSA=7*(NLT+2*IPJ+1)+1                                             SCHE-480
      IF (NSA.GT.ID1) CALL MEMO('SCHE',ID1,NSA)                         SCHE-481
      CALL LCSP(F,FGN,JMAX,KMAX,IPI,NCOLL,NCOLS,MF,WV,JMIN,IPJ,IPJ,BM,BMSCHE-482
     1(NSA),ID1-NSA,LO)                                                 SCHE-483
   61 IF (LO(120).OR.(.NOT.LO(41))) RETURN                              SCHE-484
C ELIMINATION OF FACTORS 1/(1-X*COS(THETA)).                            SCHE-485
      NCJ=MIN0(NCJ,IPJ-1)                                               SCHE-486
      IF (NCJ.EQ.0) RETURN                                              SCHE-487
      DO 68 NJ=1,NCJ                                                    SCHE-488
      IPJ=IPJ-1                                                         SCHE-489
C LOOP ON THE INDEPENDENT AMPLITUDES.                                   SCHE-490
      DO 67 K=1,KBA                                                     SCHE-491
      IF (MF(6,K).EQ.99999) GO TO 62                                    SCHE-492
      M1=MF(5,K)                                                        SCHE-493
      M2=MF(6,K)                                                        SCHE-494
      M3=((IABS(M1+M2)+IABS(M1-M2))/2-JMIN)/2+1                         SCHE-495
   62 B3=0.25D0*DFLOAT(M1*M2)                                           SCHE-496
      IF (M3.GT.IPJ) GO TO 70                                           SCHE-497
      D1=0.D0                                                           SCHE-498
      D2=0.D0                                                           SCHE-499
      MJ=2*M3+JMIN-2                                                    SCHE-500
      C3=0.5D0*DFLOAT(MJ)                                               SCHE-501
      F1=DFLOAT((MJ+M2)/2+1-M3)                                         SCHE-502
      F2=DFLOAT((MJ-M2)/2+1-M3)                                         SCHE-503
      F3=DFLOAT((MJ+M1)/2+1-M3)                                         SCHE-504
      F4=DFLOAT((MJ-M1)/2+1-M3)                                         SCHE-505
      C1=0.D0                                                           SCHE-506
      B1=0.D0                                                           SCHE-507
      A1=0.D0                                                           SCHE-508
      B4=0.D0                                                           SCHE-509
C CALC. OF X WHICH MINIMISES THE DIFFERENCES WITH A WEIGHT (J+1)**2     SCHE-510
C FOR THE 5 LAST ONE.                                                   SCHE-511
      NPJ=IPJ-5                                                         SCHE-512
      DO 63 I=M3,IPJ                                                    SCHE-513
      FI=I                                                              SCHE-514
      A2=A1                                                             SCHE-515
      B2=B1                                                             SCHE-516
      A1=F(1,I,K)                                                       SCHE-517
      B1=F(2,I,K)                                                       SCHE-518
      C3=C3+1.D0                                                        SCHE-519
      C2=C1                                                             SCHE-520
      C1=DSQRT((F1+FI)*(F2+FI)*(F3+FI)*(F4+FI))/(C3*(2.D0*C3+1.D0))     SCHE-521
      IF (B3.NE.0.D0) B4=B3/(C3*C3-C3)                                  SCHE-522
      BM(2*I-1)=A1*B4+A2*C2+F(1,I+1,K)*C1                               SCHE-523
      BM(2*I)=B1*B4+B2*C2+F(2,I+1,K)*C1                                 SCHE-524
      IF (I.LE.NPJ) GO TO 63                                            SCHE-525
      D1=D1+C3*C3*(F(1,I,K)*BM(2*I-1)+F(2,I,K)*BM(2*I))                 SCHE-526
      D2=D2+C3*C3*(BM(2*I-1)**2+BM(2*I)**2)                             SCHE-527
   63 C1=C1*(C3+C3+1.D0)/(C3+C3-1.D0)                                   SCHE-528
      A3=.9999999D0                                                     SCHE-529
      IF (LO(18)) GO TO 64                                              SCHE-530
      IF (D2.NE.0.D0) A3=D1/D2                                          SCHE-531
      A4=A3                                                             SCHE-532
C X IS FIXED BETWEEN +1 AND -1                                          SCHE-533
      IF (A4.GT..9999999D0) A4=.9999999D0                               SCHE-534
      IF (A4.LT.-.9999999D0) A4=-.9999999D0                             SCHE-535
C CALCULATION OF THE NEW SCATTERING COEFFICIENTS.                       SCHE-536
      GO TO 65                                                          SCHE-537
   64 A4=A3*DFLOAT(2*MOD(NJ,2)-1)                                       SCHE-538
   65 DO 66 I=M3,IPJ                                                    SCHE-539
      F(1,I,K)=F(1,I,K)-A4*BM(2*I-1)                                    SCHE-540
   66 F(2,I,K)=F(2,I,K)-A4*BM(2*I)                                      SCHE-541
      IF (.NOT.LO(116)) WRITE (MW,1006) K,A4,A3,F(1,IPJ,K),F(2,IPJ,K),F(SCHE-542
     11,IPJ+1,K),F(2,IPJ+1,K)                                           SCHE-543
      F(1,IPJ+1,K)=A4                                                   SCHE-544
   67 CONTINUE                                                          SCHE-545
   68 CONTINUE                                                          SCHE-546
      RETURN                                                            SCHE-547
   69 WRITE (MW,1007) N1                                                SCHE-548
      GO TO 71                                                          SCHE-549
   70 WRITE (MW,1008) NJ                                                SCHE-550
   71 WRITE (MW,1009)                                                   SCHE-551
      STOP                                                              SCHE-552
 1000 FORMAT (//' CHANNEL SPIN AND PARITY =',F7.1,A1//'  IC ICP N    L  SCHE-553
     1  J',18X,'S MATRIX',20X,'|S|',7X,'PHASE /WITH COUL.')             SCHE-554
 1001 FORMAT (1X,F9.1,4X,A1,1X,I4,1X,I4)                                SCHE-555
 1002 FORMAT (1X,3I3,I5,F7.1,4X,1P,2D15.7,' I',4X,0P,3F11.8)            SCHE-556
 1003 FORMAT (1X,3(I3,1X),I3,1X,F5.1,1X,2(1P,D15.7,0P,1X),5X,F11.8)     SCHE-557
 1004 FORMAT ('<S-MATRIX>',F10.2,1P,D20.8,0P,F10.2,2I5)                 SCHE-558
 1005 FORMAT (1X,3(I3,1X),I3,1X,F5.1,1X,2(1P,D15.7,0P,1X),'I',4X,F11.8) SCHE-559
 1006 FORMAT (' AMPLITUDE =',I3,D15.7,' (',D15.7,')  NEW',2D15.7,3X,'OLDSCHE-560
     1',2D15.7)                                                         SCHE-561
 1007 FORMAT (5X,I2,' AMPLITUDES INSUFFICIENT TO INTERPOLATE.')         SCHE-562
 1008 FORMAT (' AMPLITUDES INSUFFICIENT TO FACTORISE (1-COS)',I2,' TIMESSCHE-563
     1')                                                                SCHE-564
 1009 FORMAT (//' IN SCHE  ...  STOP  ...')                             SCHE-565
      END                                                               SCHE-566
C 27/03/07                                                      ECIS12  LCSP-000
      SUBROUTINE LCSP(F,FCN,JMAX,KMAX,IPI,NCOLL,NCOLS,MF,WV,JMIN,IPJ,IPKLCSP-001
     1,A,AX,JD,LO)                                                      LCSP-002
C COEFFICIENTS OF LEGENDRE POLYNOMIALS FOR CROSS-SECTIONS               LCSP-003
C SCATTERING COEFFICIENTS IN THE HELICITY REPRESENTATION                LCSP-004
C INPUT:     F:       S-MATRIX.                                         LCSP-005
C            FCN:     TRANSMISSION COEFFICIENTS.                        LCSP-006
C            JMAX:    MAXIMUM NUMBER OF CHANNEL SPINS, DIMENSION FOR F. LCSP-007
C            KMAX:    MAXIMUM NUMBER L FOR COMPOUND NUCLEUS, DIMENSION  LCSP-008
C                     FOR FCN.                                          LCSP-009
C            IPI(I,*):MULTIPLICITIES OF TARGET/PARTICLE FOR I=2/3,      LCSP-010
C                     FIRST/LAST CHANNEL NUMBER FOR I=6/7 (SEE DEPH).   LCSP-011
C            NCOLL:   NUMBER OF COUPLED LEVELS.                         LCSP-012
C            NCOLS:   NUMBER OF LEVELS WITH ANGULAR DISTRIBUTION.       LCSP-013
C            MF:      HELICITY NUMBERS (SEE DEPH).                      LCSP-014
C            WV:      WAVE NUMBER AND COULOMB PARAMETER (SEE COLF).     LCSP-015
C            JMIN:    TWICE MINIMUM CHANNEL SPIN.                       LCSP-016
C            IPJ:     NUMBER OF CHANNEL SPIN.                           LCSP-017
C            IPK:     NUMBER OF CHANNEL SPIN FOR COMPOUND NUCLEUS.      LCSP-018
C            JD:      DIMENSION OF WORKING FIELD AX.                    LCSP-019
C            LO(I):   LOGICAL CONTROLS:                                 LCSP-020
C               LO(18) =.TRUE. PROJECTILE-TARGET ANTISYMMETRISATION.    LCSP-021
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             LCSP-022
C WORKING AREAS:                                                        LCSP-023
C            A(7,*):  AMPLITUDE MULTIPLIED BY A LEGENDRE POLYNOMIAL     LCSP-024
C                     ALTERNATIVELY IN A(1-2,*) AND A(3-4,*),           LCSP-025
C                     COEFFICIENTS OF RECURRENCE IN A(5-7,*).           LCSP-026
C            AX:      1 TO JML  LEGENDRE COEFFICIENTS OF CROSS-SECTION: LCSP-027
C                     JML+1 TO JMT    FOR COMPOUND NUCLEUS,             LCSP-028
C                     JMT+1 TO JMX    PRODUCT SPIN ROTATION MATRICES.   LCSP-029
C                                                                       LCSP-030
C FOR THE COMMON  /ANGUL/ SEE LECT.                                     LCSP-031
C FOR THE COMMON  /DCONS/ SEE CALC.                                     LCSP-032
C                                                                       LCSP-033
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     LCSP-034
C  XZ:        CONVERSION FACTOR TO MILLIBARNS.                          LCSP-035
C   USED:     XZ.                                                       LCSP-036
C                                                                       LCSP-037
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /ANGUL/:                     LCSP-038
C  NL(1):     POWER OF (1-COS(THETA)) FOR THE EXPANSION IN LEGENDRE     LCSP-039
C             POLYNOMIALS OF THE INTERFERENCE BETWEEN COULOMB AND       LCSP-040
C             NUCLEAR ELASTIC SCATTERING. POWER OF (1-COS(THETA)**2)    LCSP-041
C             IF LO(18) IS .TRUE..                                      LCSP-042
C  NL(2):     NUMBER OF LEGENDRE POLYNOMIALS FOR ELASTIC SCATTERING OF  LCSP-043
C             CHARGED PARTICLES.                                        LCSP-044
C  NL(3):     NUMBER OF LEGENDRE POLYNOMIALS FOR ELASTIC SCATTERING OF  LCSP-045
C             UNCHARGED PARTICLES, INELASTIC SCATTERING AND COMPOUND    LCSP-046
C             NUCLEUS.                                                  LCSP-047
C   USED:     NL.                                                       LCSP-048
C                                                                       LCSP-049
C***********************************************************************LCSP-050
      IMPLICIT REAL*8 (A-H,O-Z)                                         LCSP-051
      LOGICAL LO(150),LS                                                LCSP-052
      DIMENSION F(2,JMAX,*),FCN(KMAX,*),IPI(11,*),MF(10,*),WV(22,*),A(7,LCSP-053
     1*),AX(*),AT(2),NDL(2)                                             LCSP-054
      COMMON /ANGUL/ THETA1,THETA2,DTHETA,DTHE,NCJ,NL(3),JMM(2)         LCSP-055
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            LCSP-056
      COMMON /INOUT/ MR,MW,MS                                           LCSP-057
C DETERMINATION OF THE NUMBER OF LEGENDRE POLYNOMIALS.                  LCSP-058
      NDL(1)=NL(2)                                                      LCSP-059
      NDL(2)=NL(3)                                                      LCSP-060
      IF (NDL(1).EQ.0) NDL(1)=(6*IPJ-3+3*JMIN)/2                        LCSP-061
      IF (NDL(2).EQ.0) NDL(2)=2*IPJ-1+JMIN                              LCSP-062
      WRITE (65,1000) WV(1,1),WV(13,1),WV(2,1),IPI(4,1),NCOLS           LCSP-063
      WRITE (MW,1001)                                                   LCSP-064
C LOOP ON LEVELS.                                                       LCSP-065
      DO 36 JK=1,NCOLS                                                  LCSP-066
      IF (WV(3,JK).LT.0.D0) GO TO 35                                    LCSP-067
      IF (JK.GT.NCOLL) GO TO 32                                         LCSP-068
      JK1=IPI(6,JK)                                                     LCSP-069
      JK2=IPI(7,JK)                                                     LCSP-070
      JML=NDL(2)                                                        LCSP-071
      LS=JK.EQ.1.AND.WV(5,1).NE.0.D0                                    LCSP-072
      IF (LS) JML=NDL(1)                                                LCSP-073
      JMT=JML                                                           LCSP-074
      IF (JMT.GT.JD) CALL MEMO('LCSP',ID,JMT)                           LCSP-075
      DO 1 J=1,JMT                                                      LCSP-076
    1 AX(J)=0.D0                                                        LCSP-077
C LOOP ON AMPLITUDES.                                                   LCSP-078
      DO 29 I=JK1,JK2                                                   LCSP-079
      IF (MF(6,I).EQ.99999) GO TO 3                                     LCSP-080
      M1=MF(5,I)                                                        LCSP-081
      M2=MF(6,I)                                                        LCSP-082
      M3=((IABS(M1+M2)+IABS(M1-M2))/2-JMIN)/2+1                         LCSP-083
      IF (JK.GT.NCOLL) GO TO 3                                          LCSP-084
      A1=0.25D0*DFLOAT(M1*M2)                                           LCSP-085
      MJ=2*M3+JMIN-2                                                    LCSP-086
      A2=0.5D0*DFLOAT(MJ)                                               LCSP-087
      X1=DFLOAT((MJ+M2)/2+1-M3)                                         LCSP-088
      X2=DFLOAT((MJ-M2)/2+1-M3)                                         LCSP-089
      X3=DFLOAT((MJ+M1)/2+1-M3)                                         LCSP-090
      X4=DFLOAT((MJ-M1)/2+1-M3)                                         LCSP-091
      A(7,M3)=0.D0                                                      LCSP-092
C COEFFICIENTS OF THE RECURRENCE.                                       LCSP-093
      JM1=JML+IPJ                                                       LCSP-094
      JM=JM1+1                                                          LCSP-095
      IF (M3.GT.JM1) GO TO 3                                            LCSP-096
      DO 2 J=M3,JM1                                                     LCSP-097
      XJ=DFLOAT(J)                                                      LCSP-098
      A2=A2+1.D0                                                        LCSP-099
      A(6,J)=0.D0                                                       LCSP-100
      IF (A1.NE.0.D0) A(6,J)=A1/(A2*A2-A2)                              LCSP-101
      A(5,J)=DSQRT((X1+XJ)*(X2+XJ)*(X3+XJ)*(X4+XJ))/(A2*(2.D0*A2+1.D0)) LCSP-102
    2 A(7,J+1)=A(5,J)*(A2+A2+1.D0)/(A2+A2-1.D0)                         LCSP-103
    3 IF (M3.GT.JM) GO TO 29                                            LCSP-104
      DO 4 J=M3,JM                                                      LCSP-105
      A(1,J)=0.D0                                                       LCSP-106
      A(2,J)=0.D0                                                       LCSP-107
      A(3,J)=0.D0                                                       LCSP-108
      IF (J.GT.IPJ) GO TO 4                                             LCSP-109
      A(1,J)=F(1,J,I)                                                   LCSP-110
      A(2,J)=F(2,J,I)                                                   LCSP-111
    4 A(4,J)=0.D0                                                       LCSP-112
      IF (.NOT.LS) GO TO 24                                             LCSP-113
C COULOMB AMPLITUDE.                                                    LCSP-114
      NS1=IPI(2,1)-1                                                    LCSP-115
      NS2=IPI(3,1)-1                                                    LCSP-116
      NSM=IABS(NS1-NS2)-JMIN                                            LCSP-117
      NSP=NS1+NS2-JMIN                                                  LCSP-118
      XS3=DFLOAT(NS1+NS2+2)                                             LCSP-119
      XS4=DFLOAT(NS1-NS2)                                               LCSP-120
      NST=NSP/2+1                                                       LCSP-121
      JMX=JMT+NST                                                       LCSP-122
      JMY=JMX+2                                                         LCSP-123
      IF (LO(18)) JMY=JMY+2*NL(1)                                       LCSP-124
      IF (JMY.GT.JD) CALL MEMO('LCSP',ID,JMY)                           LCSP-125
      DO 5 J=1,NST                                                      LCSP-126
    5 AX(JMT+J)=1.D0                                                    LCSP-127
C REDUCED ROTATION MATRIX ELEMENT.                                      LCSP-128
      DO 9 I1=1,2                                                       LCSP-129
      MS1TMP=2*MF(2*I1-1,I)-NS1-2                                       LCSP-130
      MS2TMP=NS2-2*MF(2*I1,I)+2                                         LCSP-131
      MSP=IABS(MS1TMP+MS2TMP)-JMIN                                      LCSP-132
      NSQ=MAX0(NSM,MSP)/2+1                                             LCSP-133
      XS=MS1TMP+MS2TMP                                                  LCSP-134
      AT(I1)=1.D0                                                       LCSP-135
      IF (NSQ.EQ.1) GO TO 7                                             LCSP-136
      DO 6 J=2,NSQ                                                      LCSP-137
    6 AX(JMT+J-1)=0.D0                                                  LCSP-138
    7 IF (NSQ.EQ.NST) GO TO 9                                           LCSP-139
      NS=NSQ+1                                                          LCSP-140
      A2=0.D0                                                           LCSP-141
      A1=1.D0                                                           LCSP-142
      B2=0.D0                                                           LCSP-143
      DO 8 K=NS,NST                                                     LCSP-144
      A3=A2                                                             LCSP-145
      A2=A1                                                             LCSP-146
      B1=B2                                                             LCSP-147
      XJ=DFLOAT(2*K+JMIN-2)                                             LCSP-148
      B2=DSQRT((XJ**2-XS**2)*(XS3**2-XJ**2)*(XJ**2-XS4**2)/(XJ**2-1.D0))LCSP-149
     1/(2.D0*XJ)                                                        LCSP-150
      B3=DFLOAT(MS1TMP-MS2TMP)                                          LCSP-151
      IF (XJ.NE.2.D0) B3=B3-XS*XS3*XS4/(XJ*(XJ-2.D0))                   LCSP-152
      A1=(A2*B3-A3*B1)/B2                                               LCSP-153
      AX(JMT+K)=AX(JMT+K)*A1                                            LCSP-154
    8 AT(I1)=AT(I1)+A1**2                                               LCSP-155
    9 CONTINUE                                                          LCSP-156
      IJX=NL(1)                                                         LCSP-157
      A3=1.D0                                                           LCSP-158
      JP=IPJ                                                            LCSP-159
C MULTIPLICATION BY (1-COS), (1-COS**2) OR THEIR SQUARES.               LCSP-160
   10 DO 12 IJ=1,IJX                                                    LCSP-161
      A1=0.D0                                                           LCSP-162
      B1=0.D0                                                           LCSP-163
      DO 11 J=M3,JP                                                     LCSP-164
      A2=A1                                                             LCSP-165
      B2=B1                                                             LCSP-166
      A1=A(1,J)                                                         LCSP-167
      B1=A(2,J)                                                         LCSP-168
      A(1,J)=A1-A3*(A(7,J)*A2+A(6,J)*A1+A(5,J)*A(1,J+1))                LCSP-169
   11 A(2,J)=B1-A3*(A(7,J)*B2+A(6,J)*B1+A(5,J)*A(2,J+1))                LCSP-170
      JP=JP+1                                                           LCSP-171
      A(1,JP)=-A3*A1*A(6,JP)                                            LCSP-172
   12 A(2,JP)=-A3*B1*A(6,JP)                                            LCSP-173
      A3=-A3                                                            LCSP-174
      IF (LO(18).AND.A3.LT.0.D0) GO TO 10                               LCSP-175
C INITIALISATION OF COULOMB PHASE SHIFTS.                               LCSP-176
      C1=DSQRT(AT(1)*AT(2))                                             LCSP-177
      IF (AX(JMX).LT.0.D0) C1=-C1                                       LCSP-178
      C2=DFLOAT(IJX)                                                    LCSP-179
      C3=2.D0**(IJX-1)                                                  LCSP-180
      DO 23 IK=1,2                                                      LCSP-181
      NX=0                                                              LCSP-182
      NST1=NST                                                          LCSP-183
      DO 13 J=1,NST                                                     LCSP-184
      A1=2.D0*AX(JMT+J)/C1*DFLOAT(1-MOD(J+IK,2))                        LCSP-185
      IF (A1.NE.0.D0) NX=NX+1                                           LCSP-186
   13 A(3,J)=A1                                                         LCSP-187
      IF (NX.EQ.0) GO TO 23                                             LCSP-188
      AX(JMX+1)=-C2*C3*WV(5,1)/(C2*C2+WV(5,1)**2)                       LCSP-189
      AX(JMX+2)=-C3*WV(5,1)**2/(C2*C2+WV(5,1)**2)                       LCSP-190
      IF (.NOT.LO(18)) GO TO 15                                         LCSP-191
      AX(JMX+1)=4.D0*C3*AX(JMX+1)                                       LCSP-192
      AX(JMX+2)=4.D0*C3*AX(JMX+2)                                       LCSP-193
      DO 14 J=1,IJX                                                     LCSP-194
      A2=DFLOAT(J)*(DFLOAT(J+IJX)**2+WV(5,1)**2)                        LCSP-195
      A1=-DFLOAT(IJX-J+1)*(DFLOAT(IJX+J)*DFLOAT(IJX+J-1)+WV(5,1)**2)/A2 LCSP-196
      B1=DFLOAT(IJX-J+1)*WV(5,1)/A2                                     LCSP-197
      AX(JMX+2*J+1)=AX(JMX+2*J-1)*A1-AX(JMX+2*J)*B1                     LCSP-198
   14 AX(JMX+2*J+2)=AX(JMX+2*J-1)*B1+AX(JMX+2*J)*A1                     LCSP-199
   15 I1=3                                                              LCSP-200
      DO 21 L=1,JM                                                      LCSP-201
      B1=2*L-1                                                          LCSP-202
C COULOMB PHASE SHIFT.                                                  LCSP-203
      A1=AX(JMX+1)                                                      LCSP-204
      A2=AX(JMX+2)                                                      LCSP-205
      IF (.NOT.LO(18)) GO TO 17                                         LCSP-206
      DO 16 J=1,IJX                                                     LCSP-207
      A1=A1+AX(JMX+2*J+1)                                               LCSP-208
   16 A2=A2+AX(JMX+2*J+2)                                               LCSP-209
   17 DO 18 J=1,NST1                                                    LCSP-210
      IF (LO(18).AND.MOD(L+IK,2).EQ.1) GO TO 18                         LCSP-211
      A(1,J)=A(1,J)+A1*A(I1,J)*B1                                       LCSP-212
      A(2,J)=A(2,J)+A2*A(I1,J)*B1                                       LCSP-213
   18 CONTINUE                                                          LCSP-214
      I2=7-I1                                                           LCSP-215
      IF (L.EQ.JM) GO TO 21                                             LCSP-216
C PRODUCT OF ROTATION MATRIX ELEMENTS BY NEXT PL.                       LCSP-217
      B2=-(B1-1.D0)/(B1+1.D0)                                           LCSP-218
      B3=2.D0*B1/(B1+1.D0)                                              LCSP-219
      A1=0.D0                                                           LCSP-220
      DO 19 J=M3,NST1                                                   LCSP-221
      A2=A1                                                             LCSP-222
      A1=A(I1,J)                                                        LCSP-223
      A(I2,J)=B2*A(I2,J)+(A(7,J)*A2+A(6,J)*A1+A(5,J)*A(I1,J+1))*B3      LCSP-224
      IF (DABS(A(I2,J)).LT.1.D-10) A(I2,J)=0.D0                         LCSP-225
   19 CONTINUE                                                          LCSP-226
      IF (NST1.NE.JM) A(I2,NST1+1)=A(7,NST1+1)*A1*B3                    LCSP-227
      NST1=MIN0(NST1+1,JM)                                              LCSP-228
      A1=(B1+1.D0)*WV(5,1)                                              LCSP-229
      B2=2.D0*C2                                                        LCSP-230
      A3=.25D0*(B1+1.D0+B2)**2+WV(5,1)**2                               LCSP-231
      A2=.25D0*(B1+1.D0-B2)*(B1+1.D0+B2)-WV(5,1)**2                     LCSP-232
      B3=(AX(JMX+1)*A2-AX(JMX+2)*A1)/A3                                 LCSP-233
      AX(JMX+2)=(AX(JMX+1)*A1+AX(JMX+2)*A2)/A3                          LCSP-234
      AX(JMX+1)=B3                                                      LCSP-235
      IF (.NOT.LO(18)) GO TO 21                                         LCSP-236
      DO 20 J=1,IJX                                                     LCSP-237
      B2=B2+2.D0                                                        LCSP-238
      A3=.25D0*(B1+1.D0+B2)**2+WV(5,1)**2                               LCSP-239
      A2=.25D0*(B1+1.D0-B2)*(B1+1.D0+B2)-WV(5,1)**2                     LCSP-240
      B3=(AX(JMX+2*J+1)*A2-AX(JMX+2*J+2)*A1)/A3                         LCSP-241
      AX(JMX+2*J+2)=(AX(JMX+2*J+1)*A1+AX(JMX+2*J+2)*A2)/A3              LCSP-242
   20 AX(JMX+2*J+1)=B3                                                  LCSP-243
   21 I1=I2                                                             LCSP-244
      DO 22 J=M3,JM                                                     LCSP-245
      A(3,J)=0.D0                                                       LCSP-246
   22 A(4,J)=0.D0                                                       LCSP-247
   23 CONTINUE                                                          LCSP-248
   24 B3=JMIN+2*M3-1                                                    LCSP-249
      I1=1                                                              LCSP-250
      I2=3                                                              LCSP-251
C COEFFICIENT OF OTHER PL.                                              LCSP-252
      DO 28 L=1,JML                                                     LCSP-253
      A3=0.D0                                                           LCSP-254
      C1=B3                                                             LCSP-255
      IF (LO(18).AND.MOD(L,2).NE.1) GO TO 26                            LCSP-256
      DO 25 J=M3,IPJ                                                    LCSP-257
      A3=A3+(F(1,J,I)*A(I1,J)+F(2,J,I)*A(I1+1,J))/C1                    LCSP-258
   25 C1=C1+2.D0                                                        LCSP-259
      IF (MF(8,I).NE.0.) A3=A3+A3                                       LCSP-260
      AX(L)=AX(L)+A3*XZ                                                 LCSP-261
   26 IF (L.EQ.JML) GO TO 28                                            LCSP-262
      C1=DFLOAT(L)                                                      LCSP-263
      C2=-(C1-1.D0)/C1                                                  LCSP-264
      C3=(2.D0*C1-1.D0)/C1                                              LCSP-265
      I1=I2                                                             LCSP-266
      I2=4-I1                                                           LCSP-267
      A1=0.D0                                                           LCSP-268
      B1=0.D0                                                           LCSP-269
      DO 27 J=M3,JM1                                                    LCSP-270
      A2=A1                                                             LCSP-271
      B2=B1                                                             LCSP-272
      A1=A(I2,J)                                                        LCSP-273
      B1=A(I2+1,J)                                                      LCSP-274
      A(I1,J)=C2*A(I1,J)+(A(7,J)*A2+A(6,J)*A1+A(5,J)*A(I2,J+1))*C3      LCSP-275
   27 A(I1+1,J)=C2*A(I1+1,J)+(A(7,J)*B2+A(6,J)*B1+A(5,J)*A(I2+1,J+1))*C3LCSP-276
      A(I1,JM)=A(7,JM)*A1*C3                                            LCSP-277
      A(I1+1,JM)=A(7,JM)*B1*C3                                          LCSP-278
   28 CONTINUE                                                          LCSP-279
   29 CONTINUE                                                          LCSP-280
      WRITE (65,1002) JK,JML                                            LCSP-281
      IF (LS) WRITE (MW,1003) JK,IJX,JML                                LCSP-282
      IF (.NOT.LS) WRITE (MW,1004) JK,JML                               LCSP-283
      DO 30 LL=1,JML,5                                                  LCSP-284
      L=LL-1                                                            LCSP-285
      LM=MIN0(JML,LL+4)                                                 LCSP-286
   30 WRITE (MW,1005) L,(AX(M),M=LL,LM)                                 LCSP-287
      DO 31 LL=1,JML                                                    LCSP-288
      L=LL-1                                                            LCSP-289
      IF (LS) WRITE (65,1006) JK,L,AX(LL),IJX                           LCSP-290
      IF (.NOT.LS) WRITE (65,1007) JK,L,AX(LL)                          LCSP-291
   31 CONTINUE                                                          LCSP-292
   32 IF (.NOT.LO(81)) GO TO 36                                         LCSP-293
C     UNCOUPLED CN LEVELS NOT NEEDED IN EMPIRE 
C     WRITE (65,1008) JK,IPK                                            LCSP-294
      WRITE (MW,1009) JK,IPK                                            LCSP-295
      DO 33 LL=1,IPK,5                                                  LCSP-296
      L=2*LL-2                                                          LCSP-297
      LM=MIN0(IPK,LL+4)                                                 LCSP-298
   33 WRITE (MW,1005) L,(FCN(M,JK),M=LL,LM)                             LCSP-299
C     UNCOUPLED CN LEVELS NOT NEEDED IN EMPIRE 
C     DO 34 LL=1,IPK                                                    LCSP-300
C     L=2*LL-2                                                          LCSP-301
C  34 WRITE (65,1010) JK,L,FCN(LL,JK)                                   LCSP-302
      GO TO 36                                                          LCSP-303
   35 WRITE (65,1011) JK                                                LCSP-304
   36 CONTINUE                                                          LCSP-305
      RETURN                                                            LCSP-306
 1000 FORMAT ('<LEGENDRE>',F10.2,1P,D20.8,0P,F10.2,2I5)                 LCSP-307
 1001 FORMAT ('1 COEFFICIENTS OF LEGENDRE POLYNOMIALS DESCRIBING THE CROLCSP-308
     1SS-SECTIONS.')                                                    LCSP-309
 1002 FORMAT (2I5,' COUPLED LEVEL, NUMBER OF VALUES')                   LCSP-310
 1003 FORMAT (/' DIRECT INTERACTION FOR LEVEL',I2,' MULTIPLIED BY (1-COSLCSP-311
     1(THETA))**(',I2,' )',I4,' COEFFICIENTS'/4X,'L',8X,'C(L)',14X,'C(L+LCSP-312
     21)',13X,'C(L+2)',13X,'C(L+3)',13X,'C(L+4)')                       LCSP-313
 1004 FORMAT (/' DIRECT INTERACTION FOR LEVEL',I2,',',I4,' COEFFICIENTS'LCSP-314
     1/4X,'L',8X,'C(L)',14X,'C(L+1)',13X,'C(L+2)',13X,'C(L+3)',13X,'C(L+LCSP-315
     24)')                                                              LCSP-316
 1005 FORMAT (I5,1P,5D19.10)                                            LCSP-317
 1006 FORMAT (2I5,1P,D20.10,5X,'*(1-COS(THETA)**(',I2,' )')             LCSP-318
 1007 FORMAT (2I5,1P,D20.10)                                            LCSP-319
 1008 FORMAT (2I5,' UNCOUPLED LEVEL, NUMBER OF VALUES')                 LCSP-320
 1009 FORMAT (/' COMPOUND NUCLEUS FOR LEVEL',I2,',',I4,' COEFFICIENTS (OLCSP-321
     1NLY EVEN ONES ARE GIVEN)'/4X,'L',8X,'C(L)',14X,'C(L+2)',13X,'C(L+4LCSP-322
     2)',13X,'C(L+6)',13X,'C(L+8)')                                     LCSP-323
 1010 FORMAT (2I5,1P,D20.10,5X,'COMPOUND NUCLEUS')                      LCSP-324
 1011 FORMAT (I5,4X,'0 CLOSED CHANNEL')                                 LCSP-325
      END                                                               LCSP-326
C 23/03/07                                                      ECIS12  RESU-000
      SUBROUTINE RESU(IPI,SR,TX,SRX,JMAX,KMAX,NCOLL,NCOLS,MF,CQ,MFM,FM,IRESU-001
     1PJ,IPK,DONN,NCOLR,NCO,COE,WV,WVM,FCN,NOI,XD,JMIN,NRZ,NJC,RES,AM,EXRESU-002
     2,THE,DXX,SPG,NZZ,LO)                                              RESU-003
C COMPUTES CROSS-SECTIONS AND POLARISATIONS - COMPARE TO EXPERIMENTAL   RESU-004
C RESULTS -   OBTAINS EXPERIMENTAL NORMALISATIONS AND PARTIAL CHI2.     RESU-005
C INPUT:     IPI(J,I):PARITY OF THE NUCLEAR STATES (+/-) FOR J=1,       RESU-006
C                     MULTIPLICITY OF PARTICLE AND TARGET J=2,3,        RESU-007
C                     FIRST/LAST AMPL. AND OBSERVABLE FOR EACH          RESU-008
C                     LEVEL FOR J=6 TO 9. SEE CALX.                     RESU-009
C            SR:      HELICITY SCATTERING COEFFICIENTS.                 RESU-010
C            TX:      INELASTIC CROSS-SECTIONS IN MILLIBARNS            RESU-011
C                     FOLLOWED BY HAUSER-FESHBACH COEFFICIENTS.         RESU-012
C            SRX:     EQUIVALENT WITH SR BY CALL TO SAVE SR AND TX FOR  RESU-013
C                     MINIMUM CHI2 IN A SEARCH.                         RESU-014
C            JMAX:    MAXIMUM NUMBER OF CHANNEL SPINS.                  RESU-015
C            KMAX:    MAXIMUM NUMBER OF L FOR COMPOUND NUCLEUS.         RESU-016
C            NCOLL:   NUMBER OF COUPLED CHANNELS.                       RESU-017
C            NCOLS:   NUMBER OF CHANNELS WITH ANGULAR DISTRIBUTION.     RESU-018
C            MF,CQ:   TABLES OF HELICITY, DESCRIPTION OF OBSERVABLES    RESU-019
C                     ... ETC.  SEE DEPH AND OBSE.                      RESU-020
C            MFM,FM:  DESCRIPTION OF EXPERIMENTAL DATA.  SEE LECD.      RESU-021
C            IPJ:     NUMBER OF CHANNEL SPINS USED.                     RESU-022
C            IPK:     NUMBER OF L FOR COMPOUND NUCLEUS.                 RESU-023
C            DONN:    EXPERIMENTAL DATA:ANGLE, VALUE, EXPERIMENTAL      RESU-024
C                     ERROR ,ANGULAR WIDTH, ANGULAR ERROR AND           RESU-025
C                     CALCULATED ERROR.                                 RESU-026
C            NCOLR:   NUMBER OF EXPERIMENTAL ANGULAR DISTRIBUTIONS.     RESU-027
C            NCO,COE: INDICATIONS FOR OBSERVABLES.  SEE OBSE.           RESU-028
C            WV(I,J): WAVE NUMBER AND COULOMB PARAMETER.                RESU-029
C            WVM:     SAME AS WV FOR THE CONTINUUM.                     RESU-030
C            FCN:     COMPOUND NUCLEUS COEFFICIENTS.                    RESU-031
C            NOI:     STARTING AND FINAL ADDRESSES FOR CONTINUA.        RESU-032
C            XD:      ENERGY STEP FOR THE CONTINUA.                     RESU-033
C            JMIN:    TWICE MINIMUM CHANNEL SPIN.                       RESU-034
C            NRZ:     LENGTH OF SR+TX TO BE SAVED FOR MINIMUM CHI2.     RESU-035
C            NJC:     FIRST DIMENSION OF WORKING AREA EX.               RESU-036
C            NZZ:     TOTAL LENGTH OF WORKING FIELD,RETURNS SPACE USED. RESU-037
C            LO:      LOGICAL CONTROLS:                                 RESU-038
C               LO(8)  =.TRUE. RELATIVISTIC KINEMATICS.                 RESU-039
C               LO(31) =.TRUE. INPUT OF EXPERIMENTAL DATA AND CHI2      RESU-040
C                              CALCULATION.                             RESU-041
C               LO(32) =.TRUE. AUTOMATIC SEARCH ON SOME PARAMETERS.     RESU-042
C               LO(33) =.TRUE. SYMMETRISED CHI2 FOR CROSS-SECTIONS.     RESU-043
C               LO(59) =.TRUE. PRINT RESULTS ON FILES 58 AND 59.        RESU-044
C               LO(64) =.TRUE. PRINT RESULTS ON FILES 64 AND 66.        RESU-045
C               LO(66) =.TRUE. NO CALCULATION AT EQUIDISTANT ANGLES.    RESU-046
C               LO(67) =.TRUE. NO PLOT OF EXPERIMENTAL DATA.            RESU-047
C               LO(68) =.TRUE. NO PLOT OF EQUIDISTANT CROSS-SECTIONS.   RESU-048
C               LO(69) =.TRUE. NO PLOT OF EQUIDISTANT POLARISATIONS.    RESU-049
C               LO(74) =.TRUE. OUTPUT OF TIME IN DIFFERENT STEPS.       RESU-050
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             RESU-051
C               LO(84) =.TRUE. UNCOUPLED LEVELS FOR COMPOUND NUCLEUS.   RESU-052
C               LO(85) =.TRUE. FISSION TRANSMISSION COEFFICIENTS.       RESU-053
C               LO(86) =.TRUE. GAMMA EMISSION IN COMPOUND NUCLEUS.      RESU-054
C               LO(91) =.TRUE. ANGLES IN THE LABORATORY SYSTEM.         RESU-055
C               LO(116)=.TRUE. NO OUTPUT.                               RESU-056
C               LO(118)=.TRUE. FOR LAST RESULTS.                        RESU-057
C               LO(126)=.TRUE. SOME OBSERVABLES IN LABORATORY SYSTEM.   RESU-058
C OUTPUT:    RES:     DIFFERENCE BETWEEN EXPERIMENTAL AND CALCULATED    RESU-059
C                     VALUE DIVIDED BY ERROR.                           RESU-060
C WORKING AREAS:                                                        RESU-061
C            AM:      FOR GENERAL PURPOSES.                             RESU-062
C            EX:      FOR OBSERVABLES.                                  RESU-063
C            THE:     ANGLES FOR PLOT.                                  RESU-064
C            DXX:     CROSS-SECTIONS FOR PLOTS.                         RESU-065
C            SPG:     POLARISATIONS FOR PLOTS                           RESU-066
C                                                                       RESU-067
C FOR THE COMMON  /ANGUL/ SEE LECT.                                     RESU-068
C FOR THE COMMONS /DCONS/ AND /TITRE/ SEE CALC.                         RESU-069
C FOR THE COMMONS /DCHI2/ AND /NCOMP/  SEE CALX.                        RESU-070
C FOR THE COMMON  /RESCT/ SEE SCAT.                                     RESU-071
C                                                                       RESU-072
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /ANGUL/:                     RESU-073
C  THETA1:    FIRST ANGLE FOR COMPUTATION AT EQUIDISTANT ANGLES.        RESU-074
C  DTHETA:    STEP FOR COMPUTATION AT EQUIDISTANT ANGLES.               RESU-075
C  THETA2:    LAST ANGLE FOR COMPUTATION AT EQUIDISTANT ANGLES.         RESU-076
C  DTHE:      AVERAGING ANGLE.                                          RESU-077
C  NCJ:       NUMBER OF FACTORISATIONS OF 1/(1-COS(THETA)) IN AMPLITUDE.RESU-078
C  JMM(1):    NUMBER OF CHANNEL SPINS USED FOR MINIMUM CHI2.            RESU-079
C  JMM(2):    NUMBER OF L FOR COMPOUND NUCLEUS FOR MINIMUM CHI2.        RESU-080
C   DEFINED:  JMM.                                                      RESU-081
C   USED:     THETA1,DTHETA,THETA2,DTHE,NCJ,JMM.                        RESU-082
C                                                                       RESU-083
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCHI2/:                     RESU-084
C  CHI2:      CHI-SQUARE COMPUTED IN SUBROUTINE RESU.                   RESU-085
C  CHI2M:     MINIMUM CHI-SQUARE IN THE SEARCH.                         RESU-086
C   DEFINED:  CHI2,CHI2M.                                               RESU-087
C   USED:     CHI2,CHI2M.                                               RESU-088
C                                                                       RESU-089
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     RESU-090
C  CMB:       ATOMIC MASS CM DIVIDED BY H-BAR*C.                        RESU-091
C   USED:     CMB.                                                      RESU-092
C                                                                       RESU-093
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     RESU-094
C  NSP(1):    NUMBER OF UNCOUPLED LEVELS FOR COMPOUND NUCLEUS           RESU-095
C             INCLUDING DISCRETISATION OF CONTINUUM.                    RESU-096
C  NSP(3):    NUMBER OF THESE LEVELS WITHOUT ANGULAR DISTRIBUTION.      RESU-097
C  NCONT:     NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS.                 RESU-098
C  NIE:       NUMBER OF UNCOUPLED STATES ADDED FOR DISCRETISATION.      RESU-099
C  NCOLX:     TOTAL NUMBER OF LEVELS WITHOUT DISCRETISATION.            RESU-100
C  NDP:       ADDRESS OF FISSION AND GAMMA FINAL RESULTS.               RESU-101
C   DEFINED:  NDP.                                                      RESU-102
C   USED:     NSP,NCONT,NIE,NCOLX,NDP.                                  RESU-103
C                                                                       RESU-104
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /RESCT/:                     RESU-105
C  EXCN:      COMPOUND-NUCLEUS CROSS-SECTION.                           RESU-106
C  XA,XB:     CONSTANTS FOR CHANGE TO LABORATORY SYSTEM.                RESU-107
C  JN1,JN2:   FIRST AND LAST AMPLITUDE IN THE TABLE.                    RESU-108
C  NTT:       TOTAL NUMBER OF AMPLITUDES FOR THIS STATE AND A GIVEN J.  RESU-109
C  MTT:       SIZE OF THE SCATTERING MATRIX FOR THIS STATE AND ANGLE.   RESU-110
C  MT1:       MULTIPLICITY OF THE OUTGOING PARTICLE.                    RESU-111
C  MT2:       MULTIPLICITY OF THE RESIDUAL TARGET.                      RESU-112
C  MT3:       MULTIPLICITY OF THE INCIDENT PARTICLE.                    RESU-113
C  MT4:       MULTIPLICITY OF THE INITIAL TARGET.                       RESU-114
C  NOUT:      NUCLEAR STATE CONSIDERED.                                 RESU-115
C  NIX,NFX:   FIRST AND LAST OBSERVABLE IN THE TABLE.                   RESU-116
C  KLT:       1 FOR EXPERIMENTAL DATA.                                  RESU-117
C             2 FOR EQUIDISTANT ANGLES.                                 RESU-118
C             3 FOR PURE COMPOUND NUCLEUS.                              RESU-119
C  LKT:       LOGICAL=.TRUE. FOR CENTRE OF MASS SYSTEM.                 RESU-120
C   DEFINED:  XA,XB,JN1,JN2,NTT,MTT,MT1,MT2;MT3,MT4,NOUT,NIX,NFX,KLT,   RESU-121
C             LKT.                                                      RESU-122
C   USED:     EXCN,XA,XB,JN1,JN2,NTT,MTT,MT1,MT2;MT3,MT4,NOUT,NIX,NFX,  RESU-123
C             KLT,LKT.                                                  RESU-124
C                                                                       RESU-125
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /TITRE/:                     RESU-126
C  TITLE(18): TITLE OF THE RUN PRINTED AS HEADING OF RESULTS.           RESU-127
C   USED:     TITLE.                                                    RESU-128
C                                                                       RESU-129
C INTERNAL LOGICAL LT(3):                                               RESU-130
C            XD:      ENERGY STEP FOR THE CONTINUA.                     RESU-131
C            LT(1)=.TRUE. FOR CROSS-SECTION IN MILLIBARNS.              RESU-132
C            LT(2)=.TRUE. FOR SYMMETRISED CHI2, CROSS-SECTION AND       RESU-133
C                         NORMALISATION ERROR.                          RESU-134
C            LT(3)=.TRUE. FOR GRAPH OF POLARISATION.                    RESU-135
C            LKT  =.FALSE. FOR ANGLE IN THE LABORATORY SYSTEM.          RESU-136
C***********************************************************************RESU-137
      IMPLICIT REAL*8 (A-H,O-Z)                                         RESU-138
      LOGICAL LO(150),LT(3),LKT                                         RESU-139
      DIMENSION IPI(11,*),SR(2,JMAX,*),TX(*),SRX(*),MF(10,*),MFM(14,*),FRESU-140
     1M(7,*),DONN(6,*),NCO(*),COE(*),WV(22,*),WVM(22,*),FCN(KMAX,*),NOI(RESU-141
     22,*),XD(3,*),RES(*),AM(*),EX(NJC,4),THE(*),DXX(*),SPG(*),ZX(3),ZY(RESU-142
     33),SP(6)                                                          RESU-143
      CHARACTER*1 CCSIGM(2)                                             RESU-144
      CHARACTER*4 LG(10),TITLE,CQ(10,*)                                 RESU-145
      COMMON /ANGUL/ THETA1,THETA2,DTHETA,DTHE,NCJ,NL(3),JMM(2)         RESU-146
      COMMON /DCHI2/ CHI2,CHI2M,YY(3)                                   RESU-147
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            RESU-148
      COMMON /INOUT/ MR,MW,MS                                           RESU-149
      COMMON /NCOMP/ NSP(3),NRD(2),NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQ,ACRESU-150
     1N(20)                                                             RESU-151
      COMMON /RESCT/ EXCN,XA,XB,JN1,JN2,NTT,MTT,MT1,MT2,MT3,MT4,NOUT,NIXRESU-152
     1,NFX,KLT,LKT                                                      RESU-153
      COMMON /TITRE/ TITLE(18)                                          RESU-154
      DATA CCSIGM,LG,I3,I4,I5,I7,LT /'+','-',' COM','POUN','D NU','CLEU'RESU-155
     1,'S ',2*'    ','   D','IREC','T ',4*0,3*.FALSE./                  RESU-156
      NESP=0                                                            RESU-157
      MT3=IPI(2,1)                                                      RESU-158
      MT4=IPI(3,1)                                                      RESU-159
      IF (.NOT.LO(118)) GO TO 2                                         RESU-160
C COPY THE SCATTERING COEFFICIENTS OBTAINED FOR MINIMUM CHI2.           RESU-161
      IPJ=JMM(1)                                                        RESU-162
      IPK=JMM(2)                                                        RESU-163
      DO 1 I=1,NRZ                                                      RESU-164
    1 SRX(I)=SRX(I+NRZ)                                                 RESU-165
    2 IF (.NOT.LO(31)) GO TO 29                                         RESU-166
C CALCULATION AT EXPERIMENTAL ANGLES.                                   RESU-167
      KLT=1                                                             RESU-168
      CHI2=0.D0                                                         RESU-169
      NOUT=0                                                            RESU-170
      IF (LO(64)) WRITE (64,1000) WV(1,1),WV(13,1),WV(2,1),IPI(4,1),NCOLRESU-171
     1R                                                                 RESU-172
      KI=IPI(9,NCOLL)                                                   RESU-173
      JI=1                                                              RESU-174
      KA=0                                                              RESU-175
C PSEUDO LOOP ON THE ANGULAR DISTRIBUTIONS.                             RESU-176
    3 AA=0.D0                                                           RESU-177
      BB=0.D0                                                           RESU-178
      CC=0.D0                                                           RESU-179
      NIX=KI+JI                                                         RESU-180
      NFX=NIX                                                           RESU-181
      LT(1)=MF(2,NIX).EQ.0                                              RESU-182
      LT(2)=LO(33).AND.((IABS(MF(2,NIX)).LE.1.OR.MF(2,NIX).EQ.19).AND.FMRESU-183
     1(5,JI).EQ.0.D0)                                                   RESU-184
      JIM=JI                                                            RESU-185
      JIN=JI                                                            RESU-186
    4 J1=MFM(2,JI)                                                      RESU-187
      J2=MFM(3,JI)                                                      RESU-188
      LKT=MFM(4,JI).NE.1                                                RESU-189
      IF (J2.GE.J1) GO TO 5                                             RESU-190
      JI=JI+1                                                           RESU-191
      GO TO 4                                                           RESU-192
    5 JIF=JI                                                            RESU-193
      J=J1                                                              RESU-194
C PSEUDO LOOP ON THE EXPERIMENTAL DATA.                                 RESU-195
    6 DONN(6,J)=DONN(3,J)                                               RESU-196
      KC=1                                                              RESU-197
      THETA=DONN(1,J)                                                   RESU-198
    7 JI=JIM                                                            RESU-199
      ZX(KC)=0.D0                                                       RESU-200
      ZY(KC)=0.D0                                                       RESU-201
      IF (MF(2,KI+JI).NE.19) GO TO 63                                   RESU-202
C DATA ARE TOTAL CROSS SECTIONS.                                        RESU-203
      I=IDINT(DONN(1,J)*1.000001D0)                                     RESU-204
      IF (I.GT.NCOLX-NCONT) GO TO 8                                     RESU-205
      IF (I.EQ.-1) ZX(1)=TX(1)                                          RESU-206
      IF (I.EQ.0) ZX(1)=TX(1)-TX(2)                                     RESU-207
      IF (I.EQ.0.AND.NCOLL.NE.NCOLX) ZX(1)=ZX(1)-TX(NCOLL+2)            RESU-208
      IF (I.LE.0) GO TO 18                                              RESU-209
      K=MAX0(I,1)+1+NCOLL                                               RESU-210
      ZX(1)=0.D0                                                        RESU-211
      IF (NCOLL.NE.NCOLX) ZX(1)=TX(NCOLL+I+1)                           RESU-212
      IF (I.LE.NCOLL) ZX(1)=ZX(1)+TX(I+1)                               RESU-213
      GO TO 18                                                          RESU-214
    8 IF (I.GT.NCOLX) GO TO 10                                          RESU-215
      IK=NCOLL+NCOLX-NCONT+1                                            RESU-216
      II=I+NCONT-NCOLX                                                  RESU-217
      IJ=NOI(1,II)                                                      RESU-218
      JI=NOI(2,II)                                                      RESU-219
      ZX(1)=0.D0                                                        RESU-220
      IF (IJ.GT.JI) GO TO 18                                            RESU-221
      DO 9 II=IJ,JI                                                     RESU-222
    9 ZX(1)=ZX(1)+TX(IK+II)                                             RESU-223
      GO TO 18                                                          RESU-224
   10 ZX(1)=TX(NDP+I-NCOLX)                                             RESU-225
      GO TO 18                                                          RESU-226
   11 IF (LT(1)) EX(2,KC)=1.D0                                          RESU-227
      ZX(KC)=(ZX(KC)*ZY(KC)+EX(2,KC)*EX(1,KC))/(ZY(KC)+EX(1,KC))        RESU-228
      ZY(KC)=ZY(KC)+EX(1,KC)                                            RESU-229
      IF (JI.EQ.JIF) GO TO 12                                           RESU-230
      JI=JI+1                                                           RESU-231
      GO TO 63                                                          RESU-232
   12 IF (LT(1)) ZX(KC)=ZX(KC)*ZY(KC)                                   RESU-233
      GO TO ( 13 , 14 , 15 ),KC                                         RESU-234
   13 IF (DONN(4,J).EQ.0.D0) GO TO 18                                   RESU-235
      KC=2                                                              RESU-236
      THETA=DONN(1,J)-DONN(4,J)                                         RESU-237
      GO TO 7                                                           RESU-238
   14 KC=3                                                              RESU-239
      THETA=DONN(1,J)+DONN(4,J)                                         RESU-240
      GO TO 7                                                           RESU-241
   15 IF (LT(1)) GO TO 16                                               RESU-242
      ZX(1)=(ZX(1)*ZY(1)+ZX(2)*ZY(2)+ZX(3)*ZY(3))/(ZY(1)+ZY(2)+ZY(3))   RESU-243
      GO TO 17                                                          RESU-244
   16 ZX(1)=(ZX(1)+ZX(2)+ZX(3))/3.D0                                    RESU-245
   17 IF (DONN(5,J).NE.0.D0) DONN(6,J)=DSQRT(DONN(3,J)*DONN(3,J)+((ZX(2)RESU-246
     1-ZX(3))*DONN(2,J)*DONN(5,J)/(2.D0*DONN(4,J)*ZX(1)))**2)           RESU-247
   18 RES(J)=ZX(1)                                                      RESU-248
      IF (LT(2)) DONN(6,J)=DONN(6,J)*DSQRT(FM(4,JI)*RES(J)/DONN(2,J))   RESU-249
      XC=DONN(6,J)**2/FM(3,JI)                                          RESU-250
      AA=AA+RES(J)**2/XC                                                RESU-251
      BB=BB+RES(J)*DONN(2,J)/XC                                         RESU-252
      CC=CC+DONN(2,J)**2/XC                                             RESU-253
      J=J+1                                                             RESU-254
C END OF THE PSEUDO LOOP ON EXPERIMENTAL DATA.                          RESU-255
      IF (J.LE.J2) GO TO 6                                              RESU-256
C COMPUTATION OF NORMALISATION AND CHI2.                                RESU-257
      IF (FM(5,JI).EQ.0.D0) GO TO 21                                    RESU-258
      XA=FM(3,JI)/FM(5,JI)**2                                           RESU-259
      AA=AA+XA                                                          RESU-260
      XB=FM(4,JI)                                                       RESU-261
      BB=BB+XA*XB                                                       RESU-262
      CC=CC+XA*XB*XB                                                    RESU-263
      IF (JI.EQ.NCOLR) GO TO 19                                         RESU-264
      IF (FM(4,JI).NE.FM(4,JI+1).OR.FM(5,JI).NE.FM(5,JI+1)) GO TO 19    RESU-265
      IF ((2*IABS(MF(2,NIX))-3)*(2*IABS(MF(2,NIX+1))-3).LT.0) GO TO 19  RESU-266
      JI=JI+1                                                           RESU-267
      JIM=JI                                                            RESU-268
      GO TO 4                                                           RESU-269
   19 IF (LT(2)) GO TO 20                                               RESU-270
      FM(6,JI)=BB/AA                                                    RESU-271
      GO TO 22                                                          RESU-272
   20 FM(6,JI)=DSQRT(CC/AA)                                             RESU-273
      GO TO 22                                                          RESU-274
   21 FM(6,JI)=FM(4,JI)                                                 RESU-275
   22 DO 27 JJ=JIN,JI                                                   RESU-276
      NIX=KI+JJ                                                         RESU-277
      J1=MFM(2,JJ)                                                      RESU-278
      J2=MFM(3,JJ)                                                      RESU-279
      J3=J2-J1+1                                                        RESU-280
      IF (LO(64)) WRITE (64,1001) (MF(J,NIX),J=1,2),J3,(CQ(J,NIX),J=6,10RESU-281
     1)                                                                 RESU-282
      IF (J3.LE.0) GO TO 27                                             RESU-283
      IF (JJ.NE.JI) FM(6,JJ)=FM(6,JI)                                   RESU-284
      IF (LO(116)) GO TO 23                                             RESU-285
C OUTPUT OF THE CALCULATED AND THE EXPERIMENTAL VALUES.                 RESU-286
      M=0                                                               RESU-287
      WRITE (MW,1002) TITLE                                             RESU-288
      IF (MF(2,NIX).NE.19) WRITE (MW,1003) MFM(1,JJ)                    RESU-289
      WRITE (MW,1004) (CQ(J,NIX),J=6,10)                                RESU-290
   23 A1=FM(6,JJ)                                                       RESU-291
      A6=DSQRT(FM(3,JJ))                                                RESU-292
      AA=0.D0                                                           RESU-293
      IF (FM(5,JJ).EQ.0.D0) GO TO 24                                    RESU-294
      A2=(A1-FM(4,JJ))/FM(5,JJ)                                         RESU-295
      AA=A2**2                                                          RESU-296
      RES(J2+1)=A2*A6                                                   RESU-297
      CHI2=CHI2+RES(J2+1)**2                                            RESU-298
   24 DO 26 J=J1,J2                                                     RESU-299
      A2=DONN(2,J)/A1                                                   RESU-300
      A3=DONN(6,J)/A1                                                   RESU-301
      A4=((RES(J)-A2)/A3)**2                                            RESU-302
      IF (LO(116)) GO TO 25                                             RESU-303
      M=M+1                                                             RESU-304
      A5=DONN(3,J)/A1                                                   RESU-305
      THE(M)=DONN(1,J)                                                  RESU-306
      DXX(M)=A2                                                         RESU-307
      SPG(M)=RES(J)                                                     RESU-308
      WRITE (MW,1005) DONN(1,J),RES(J),A2,A5,A3,A4                      RESU-309
      IF (LO(64)) WRITE (64,1005) DONN(1,J),RES(J),A2,A5,A3,A4          RESU-310
   25 AA=AA+A4                                                          RESU-311
      RES(J)=(RES(J)-A2)*A6/A3                                          RESU-312
   26 CHI2=CHI2+RES(J)**2                                               RESU-313
      FM(7,JJ)=AA                                                       RESU-314
      IF (LO(116)) GO TO 27                                             RESU-315
      WRITE (MW,1006) (FM(J,JJ),J=3,7)                                  RESU-316
      IF (MF(1,NIX).EQ.19) GO TO 27                                     RESU-317
      IF (LO(74)) CALL HORA                                             RESU-318
      IF (LO(67)) GO TO 27                                              RESU-319
      LT(3)=.NOT.(LT(1).OR.MF(2,NIX).EQ.1.OR.MF(2,NIX).EQ.19)           RESU-320
      CALL GRAL(THE,SPG,DXX,M,MF(1,NIX),CQ(1,NIX),1,LT(3),.FALSE.)      RESU-321
   27 CONTINUE                                                          RESU-322
      JI=JI+1                                                           RESU-323
C END OF THE PSEUDO LOOP ON ANGULAR DISTRIBUTIONS.                      RESU-324
      IF (JI.LE.NCOLR) GO TO 3                                          RESU-325
      IF (.NOT.LO(116)) WRITE (MW,1007) CHI2                            RESU-326
      IF (.NOT.((CHI2.LE.CHI2M).AND.LO(32))) GO TO 29                   RESU-327
      JMM(1)=IPJ                                                        RESU-328
      JMM(2)=IPK                                                        RESU-329
      CHI2M=CHI2                                                        RESU-330
C IF THE CHI2 DECREASED, SAVE THE SCATTERING COEFFICIENTS.              RESU-331
      DO 28 I=1,NRZ                                                     RESU-332
   28 SRX(I+NRZ)=SRX(I)                                                 RESU-333
   29 IF (LO(116)) GO TO 62                                             RESU-334
      LKT=.NOT.LO(91)                                                   RESU-335
      IF (LO(66).AND.(.NOT.(LO(81).OR.LO(59)))) GO TO 62                RESU-336
C COMPUTATION AT EQUIDISTANT ANGLES.                                    RESU-337
      WRITE (MW,1002) TITLE                                             RESU-338
      JG=IDINT((THETA2-THETA1)/DTHETA+1.5D0)                            RESU-339
      IF (LO(64)) WRITE (66,1008) WV(1,1),WV(13,1),WV(2,1),IPI(4,1),NCOLRESU-340
     1S                                                                 RESU-341
      IF (.NOT.LO(59)) GO TO 30                                         RESU-342
      ND=1                                                              RESU-343
      IF (WV(5,1).EQ.0.D0) ND=3                                         RESU-344
      IF (LO(81)) ND=ND+1                                               RESU-345
      IF( (.NOT.LO(85)) .AND. (.NOT.LO(86)) ) THEN                      RCN  RCN 
        WRITE (112,'(13X,40(2X,I3,1H/,F4.1,A1))')                       RCN  RCN
     >  (I,0.5D0*DFLOAT(IPI(3,I)-1),CCSIGM(IPI(1,I)+1),I=1,NCOLL)       RCN  RCN
      ELSEIF( LO(85) .AND. LO(86) ) THEN                                RCN  RCN 
        WRITE (112,'(33X,40(2X,I3,1H/,F4.1,A1))')                       RCN  RCN
     >  (I,0.5D0*DFLOAT(IPI(3,I)-1),CCSIGM(IPI(1,I)+1),I=1,NCOLL)       RCN  RCN
      ELSE                                                              RCN  RCN
        WRITE (112,'(23X,40(2X,I3,1H/,F4.1,A1))')                       RCN  RCN
     >  (I,0.5D0*DFLOAT(IPI(3,I)-1),CCSIGM(IPI(1,I)+1),I=1,NCOLL)       RCN  RCN
      ENDIF                                                             RCN  RCN
      WRITE (58,1009) WV(1,1),WV(13,1),WV(2,1),IPI(4,1),ND              RESU-346
      WRITE (55, '(1X,F10.3,$)') WV(13,1)                               RCN  RCN
      WRITE (112,'(1X,F10.3,$)') WV(13,1)                               RCN  RCN
      IF (NCOLS.NE.1) WRITE (59,1010) WV(1,1),WV(13,1),WV(2,1),IPI(4,1),RESU-347
     1NCOLS-1                                                           RESU-348
   30 IF (WV(5,1).NE.0.D0) GO TO 31                                     RESU-349
      WRITE (MW,1011) TX(1)                                             RESU-350
      IF (LO(59)) WRITE (58,1012) TX(1)                                 RESU-351
      IF (LO(59)) WRITE (55,'(3X,F10.2,$)') TX(1)                       RCN  RCN
   31 RX=TX(1)-TX(2)                                                    RESU-352
      IF (LO(59)) WRITE (58,1012) RX                                    RESU-353
      IF (LO(59)) THEN                                                  RCN  RCN
        IF (Wv(5,1).NE.0.D0) THEN                                       RCN  RCN
          WRITE (55,'(1x,F10.2)') RX                                    RCN  RCN
        ELSE                                                            RCN  RCN
          WRITE (55,'(1x,F10.2,$)') RX                                  RCN  RCN
        ENDIF                                                           RCN  RCN
      ENDIF                                                             RCN  RCN
      IF (LO(81)) GO TO 32                                              RESU-354
      WRITE (MW,1013) RX                                                RESU-355
      IF (LO(59)) WRITE (55,'(1x,F10.2,$)') RX                          RCN  RCN
      GO TO 42                                                          RESU-356
C COMPOUND NUCLEUS RESULTS.                                             RESU-357
   32 WRITE (MW,1014) RX                                                RESU-358
      NDP=2*NCOLL+NSP(1)+1                                              RESU-359
      RX=RX-TX(NCOLL+2)                                                 RESU-360
      WRITE (MW,1015) RX                                                RESU-361
      IF (LO(85)) WRITE (MW,1016) TX(NDP+1)                             RESU-362
      IF (LO(85)) WRITE (112,'(1x,F10.3,$)') TX(NDP+1)                  RCN  RCN
      IF (LO(86)) WRITE (MW,1017) TX(NDP+2)                             RESU-363
      IF (LO(86)) WRITE (112,'(1x,F10.3,$)') TX(NDP+2)                  RCN  RCN
      RX=TX(NDP+1)+TX(NDP+2)                                            RESU-364
      WRITE (MW,1018)                                                   RESU-365
      RY=0.D0                                                           RESU-366
      DO 33 I=1,NCOLL                                                   RESU-367
      II=IPI(1,I)+1                                                     RESU-368
      SP2=0.5D0*DFLOAT(IPI(3,I)-1)                                      RESU-369
      RY=RY+TX(NCOLL+I+1)                                               RESU-370
   33 WRITE (MW,1019) I,SP2,CCSIGM(II),WV(3,I),TX(NCOLL+I+1)            RESU-371
      WRITE (MW,1020) RY                                                RESU-372
      WRITE (112,'(40(1x,F10.3,$))') (TX(NCOLL+I+1),I=1,NCOLL)          RCN  RCN
      RX=RX+RY                                                          RESU-373
      IF (.NOT.LO(84)) GO TO 41                                         RESU-374
      IF (NCOLL.EQ.NCOLS) GO TO 35                                      RESU-375
      WRITE (MW,1021)                                                   RESU-376
      RY=0.D0                                                           RESU-377
      N1=NCOLL+1                                                        RESU-378
      ICOLL=0                                                           RCN  RCN 
      DO 34 I=N1,NCOLS                                                  RESU-379
      II=IPI(1,I)+1                                                     RESU-380
      SP2=0.5D0*DFLOAT(IPI(3,I)-1)                                      RESU-381
      RY=RY+TX(NCOLL+I+1)                                               RESU-382
      IF(WV(3,I).LT.0 .AND. ICOLL.EQ.0) ICOLL=I                         RCN  RCN
   34 WRITE (MW,1019) I,SP2,CCSIGM(II),WV(3,I),TX(NCOLL+I+1)            RESU-383
      WRITE (MW,1020) RY                                                RESU-384
      WRITE (112,'(40(1x,F10.3,$))') (TX(NCOLL+I+1),I=N1,NCOLS)         RCN  RCN
      RX=RX+RY                                                          RESU-385
   35 NSP1=NSP(3)                                                       RESU-386
      IF (NCONT.NE.0) NSP1=NSP1-NIE                                     RESU-387
      IF (NSP1.LT.1) GO TO 37                                           RESU-388
      WRITE (MW,1022)                                                   RESU-389
      RY=0.D0                                                           RESU-390
      DO 36 I=1,NSP1                                                    RESU-391
      J=I+NCOLS                                                         RESU-392
      II=IPI(1,J)+1                                                     RESU-393
      SP2=0.5D0*DFLOAT(IPI(3,J)-1)                                      RESU-394
      RY=RY+TX(NCOLL+J+1)                                               RESU-395
   36 WRITE (MW,1019) J,SP2,CCSIGM(II),WV(3,J),TX(NCOLL+J+1)            RESU-396
      WRITE (MW,1020) RY                                                RESU-397
      RX=RX+RY                                                          RESU-398
   37 IF (NCONT.EQ.0) GO TO 41                                          RESU-399
      IK=NCOLL+NCOLX-NCONT+1                                            RESU-400
      DO 40 I=1,NCONT                                                   RESU-401
      IJ=NOI(1,I)                                                       RESU-402
      JI=NOI(2,I)                                                       RESU-403
      RY=0.D0                                                           RESU-404
      IF (IJ.GT.JI) GO TO 40                                            RESU-405
      DO 38 II=IJ,JI                                                    RESU-406
   38 RY=RY+TX(IK+II)                                                   RESU-407
      WRITE (MW,1023) I,RY                                              RESU-408
      RX=RX+RY                                                          RESU-409
      DO 39 II=IJ,JI                                                    RESU-410
      RY=TX(IK+II)/XD(2,II)                                             RESU-411
   39 WRITE (MW,1024) II,WVM(3,II),XD(2,II),TX(IK+II),RY                RESU-412
   40 CONTINUE                                                          RESU-413
   41 WRITE (MW,1025) RX                                                RESU-414
      WRITE (MW,1002) TITLE                                             RESU-415
C     CN elastic not needed anymore in EMPIRE 
C     IF (LO(59)) WRITE (58,1012) RX                                    RESU-416
   42 INIV=1                                                            RESU-417
      SP2=0.5D0*DFLOAT(IPI(3,INIV)-1)                                   RESU-418
      WRITE (MW,1026) SP2,CCSIGM(IPI(1,INIV)+1)                         RESU-419
      NOUT=0                                                            RESU-420
      KLT=2                                                             RESU-421
C PSEUDO DO LOOP ON LEVELS.                                             RESU-422
   43 IF (WV(3,INIV).GT.0.D0) GO TO 44                                  RESU-423
      WRITE (MW,1027) INIV                                              RESU-424
      IF (LO(64)) WRITE (66,1028) INIV,SP2,CCSIGM(IPI(1,INIV)+1)        RESU-425
      IF (LO(59)) WRITE (59,1029) INIV-1                                RESU-426
      GO TO 57                                                          RESU-427
   44 RX=TX(INIV+1)                                                     RESU-428
      IF (LO(81)) RX=RX+TX(NCOLL+INIV+1)                                RESU-429
      IF (INIV.EQ.1) GO TO 45                                           RESU-430
      WRITE (MW,1002) TITLE                                             RESU-431
      WRITE (MW,1030) INIV,SP2,CCSIGM(IPI(1,INIV)+1)                    RESU-432
      WRITE (MW,1031) RX                                                RESU-433
      GO TO 46                                                          RESU-434
   45 IF (WV(5,1).NE.0.D0) GO TO 47                                     RESU-435
      WRITE (MW,1032) RX                                                RESU-436
   46 IF (LO(81)) WRITE (MW,1033) TX(INIV+1)                            RESU-437
      IF (.NOT.LO(59)) GO TO 47                                         RESU-438
C     Total elastic not needed anymore in EMPIRE 
C     IF (INIV.EQ.1) WRITE (58,1012) RX                                 RESU-439
C     IF (INIV.EQ.1) WRITE (55,'(1x,F10.2)') RX                         RCN  RCN
C     Shape elastic is printed even for CN calculation
      IF (INIV.EQ.1) WRITE (58,1012) TX(INIV+1)                         RESU-439
      IF (INIV.EQ.1) WRITE (55,'(1x,F10.2)') TX(INIV+1)                 RCN  RCN
      IF (LO(81)) THEN                                                  RCN  RCN
        RRnoCN = RX-TX(NCOLL+INIV+1)                                    RCN  RCN
      ELSE                                                              RCN  RCN
        RRnoCN = RX                                                     RCN  RCN
      ENDIF                                                             RCN  RCN
      IF (INIV.NE.1) WRITE (59,1034) RRnoCN,INIV-1                      RCN  RCN
C     IF (INIV.NE.1) WRITE (59,1034) RX,INIV-1                          RESU-440
   47 IF (LO(81)) WRITE (MW,1035) TX(NCOLL+INIV+1)                      RESU-441
      IF (LO(66)) GO TO 62                                              RESU-442
      IF (JG.LE.0) GO TO 57                                             RESU-443
      THETB=THETA1                                                      RESU-444
      IJ=0                                                              RESU-445
      II=1                                                              RESU-446
C PSEUDO DO LOOP ON ANGLES.                                             RESU-447
   48 THE(II)=THETB                                                     RESU-448
      THETA=THETB                                                       RESU-449
      KC=1                                                              RESU-450
      GO TO 64                                                          RESU-451
   49 DXX(II)=EX(I5,1)                                                  RESU-452
      IF (LO(81)) GO TO 50                                              RESU-453
      I1=MIN0(I3,7)                                                     RESU-454
      WRITE (MW,1036) THETB,(EX(K,1),K=2,I1)                            RESU-455
      GO TO 51                                                          RESU-456
   50 I1=MIN0(I3,5)                                                     RESU-457
      IF (I1.LT.3) GO TO 52                                             RESU-458
      WRITE (MW,1036) THETB,EX(2,1),EX(I3+1,1),EX(I4,1),(EX(K,1),K=3,I1)RESU-459
   51 IF (I1.GE.I3) GO TO 53                                            RESU-460
      I2=I1+1                                                           RESU-461
      I1=MIN0(I1+5,I3)                                                  RESU-462
      WRITE (MW,1037) (EX(K,1),K=I2,I1)                                 RESU-463
      GO TO 51                                                          RESU-464
   52 WRITE (MW,1036) THETB,EX(2,1),EX(I3+1,1),EX(I4,1)                 RESU-465
   53 IF (.NOT.LO(64)) GO TO 54                                         RESU-466
C     WRITE (66,1038) (MF(2,NIX+K-2),THETA,EX(K,1),(CQ(L,NIX+K-2),L=6,10RESU-467
C    1),K=2,I3)                                                         RESU-468
C     IF (LO(81)) WRITE (66,1039) THETA,EX(I3+1,1),(LG(K),K=1,5),THETA,ERESU-469
C    1X(I4,1),(LG(K),K=6,10)                                            RESU-470
      IF (LO(81)) THEN
C       Printing only direct cross sections (if CN is calculated)                  
        WRITE (66,10381) THETA,EX(I4,1),(LG(K),K=6,10)           
      ELSE
C       Otherwise print total = direct cross sections (if no CN)
        WRITE (66,10381)(THETA,EX(K,1),(CQ(L,NIX+K-2),L=6,10),K=2,2)        
      ENDIF
   54 IF (I7.LE.0) GO TO 56                                             RESU-471
      DO 55 K=1,I7                                                      RESU-472
      IJ=IJ+1                                                           RESU-473
   55 SPG(IJ)=EX(K+I5,1)                                                RESU-474
   56 THETB=THETB+DTHETA                                                RESU-475
      II=II+1                                                           RESU-476
C END OF THE PSEUDO DO LOOP ON ANGLES.                                  RESU-477
      IF (II.LE.JG) GO TO 48                                            RESU-478
      IF (.NOT.LO(68)) CALL GRAL(THE,DXX,DXX,JG,MF(1,NFX-I7),CQ(1,NFX-I7RESU-479
     1),1,.FALSE.,.TRUE.)                                               RESU-480
      IF (.NOT.LO(69).AND.I7.GT.0) CALL GRAL(THE,SPG,DXX,JG,MF(1,NIX+I5-RESU-481
     11),CQ(1,NIX+I5-1),I7,.TRUE.,.TRUE.)                               RESU-482
      IF (LO(74)) CALL HORA                                             RESU-483
   57 INIV=INIV+1                                                       RESU-484
      SP2=0.5D0*DFLOAT(IPI(3,INIV)-1)                                   RESU-485
C END OF THE PSEUDO DO LOOP ON LEVELS.                                  RESU-486
      IF (INIV.LE.NCOLL) GO TO 43                                       RESU-487
      IF (.NOT.LO(81)) GO TO 62                                         RESU-488
      JN2=NCOLL                                                         RESU-489
      KLT=3                                                             RESU-490
   58 JN1=JN2+1                                                         RESU-491
      JN2=MIN0(JN1+5,NCOLS)                                             RESU-492
      IS=JN1-1                                                          RESU-493
      IF (JN1.GT.JN2) GO TO 62                                          RESU-494
      DO 59 I=JN1,JN2                                                   RESU-495
   59 SP(I-IS)=0.5D0*DFLOAT(IPI(3,I)-1)                                 RESU-496
      WRITE (MW,1002) TITLE                                             RESU-497
      WRITE (MW,1040) JN1,JN2,(I,SP(I-IS),CCSIGM(IPI(1,I)+1),I=JN1,JN2) RESU-498
      THETB=THETA1                                                      RESU-499
      GO TO 61                                                          RESU-500
   60 WRITE (MW,1041) THETB,(EX(I-IS,1),I=JN1,JN2)                      RESU-501
      THETB=THETB+DTHETA                                                RESU-502
   61 THETA=THETB                                                       RESU-503
      KC=1                                                              RESU-504
      IF (THETB.LE.THETA2) GO TO 71                                     RESU-505
      GO TO 58                                                          RESU-506
   62 NZZ=2*NESP                                                        RESU-507
      RETURN                                                            RESU-508
C FOR EXPERIMENTAL DATA.                                                RESU-509
   63 IF (JI.EQ.KA) GO TO 71                                            RESU-510
      INIV=MFM(1,JI)                                                    RESU-511
      KA=JI                                                             RESU-512
      GO TO 65                                                          RESU-513
C FOR EQUIDISTANT ANGLES.                                               RESU-514
   64 IF (INIV.EQ.NOUT) GO TO 71                                        RESU-515
   65 NOUT=INIV                                                         RESU-516
C CHANGE OF LEVEL.                                                      RESU-517
      JN1=IPI(6,NOUT)                                                   RESU-518
      JN2=IPI(7,NOUT)                                                   RESU-519
      MT1=IPI(2,NOUT)                                                   RESU-520
      MT2=IPI(3,NOUT)                                                   RESU-521
      NTT=JN2+1-JN1                                                     RESU-522
      MTT=MT1*MT2*MT3*MT4                                               RESU-523
      M2=1+2*MTT                                                        RESU-524
      M3=M2+2*NTT                                                       RESU-525
      M4=M3+IPJ+NCJ                                                     RESU-526
      IF (LO(126)) M4=MAX0(M4,6*MTT)                                    RESU-527
      NESP=MAX0(NESP,M4)                                                RESU-528
      IF (2*M4.GT.NZZ) CALL MEMO('RESU',NZZ,2*M4)                       RESU-529
      IF (LKT) GO TO 67                                                 RESU-530
      IF (LO(8)) GO TO 66                                               RESU-531
      XA=1.D0                                                           RESU-532
      XB=WV(4,1)*WV(1,NOUT)/(WV(4,NOUT)*WV(2,1))                        RESU-533
      GO TO 67                                                          RESU-534
   66 XA=DSQRT(1.D0+(WV(4,1)/(CMB*WV(2,1)))**2)                         RESU-535
      XB=DSQRT(WV(1,NOUT)**2+(WV(4,NOUT)/CMB)**2)*WV(4,1)/(WV(4,NOUT)*WVRESU-536
     1(2,1))                                                            RESU-537
   67 IF (KLT.NE.2) GO TO 71                                            RESU-538
C FOR EQUIDISTANT ANGLES.                                               RESU-539
      NIX=IPI(8,INIV)                                                   RESU-540
      NFX=IPI(9,INIV)                                                   RESU-541
      I4=2+NFX-NIX                                                      RESU-542
      I3=I4                                                             RESU-543
      I5=2                                                              RESU-544
      I8=I4-1                                                           RESU-545
      IF (I4.GT.2.AND.MF(2,NIX+1).EQ.1) I5=3                            RESU-546
      I7=I4-I5                                                          RESU-547
      IF (LO(81)) GO TO 68                                              RESU-548
      NGX=MIN0(NFX,NIX+5)                                               RESU-549
      WRITE (MW,1042) ((CQ(L,K),L=6,10),K=NIX,NGX)                      RESU-550
      GO TO 70                                                          RESU-551
   68 I4=I4+2                                                           RESU-552
      I8=I8+2                                                           RESU-553
      NGX=MIN0(NFX,NIX+3)                                               RESU-554
      NJX=NIX+1                                                         RESU-555
      IF (NGX.GE.NJX) GO TO 69                                          RESU-556
      WRITE (MW,1042) (CQ(L,NIX),L=6,10),LG                             RESU-557
      GO TO 70                                                          RESU-558
   69 WRITE (MW,1042) (CQ(L,NIX),L=6,10),LG,((CQ(L,K),L=6,10),K=NJX,NGX)RESU-559
   70 IF (LO(64)) WRITE (66,1043) INIV,SP2,CCSIGM(IPI(1,INIV)+1),I8,JG  RESU-560
      IF (NGX.EQ.NFX) GO TO 71                                          RESU-561
      NJX=NGX+1                                                         RESU-562
      NGX=MIN0(NFX,NJX+4)                                               RESU-563
      WRITE (MW,1044) ((CQ(L,K),L=6,10),K=NJX,NGX)                      RESU-564
      IF (NGX.LT.NFX) GO TO 70                                          RESU-565
   71 CALL SCAT(SR,MF,JMAX,KMAX,THETA,FCN,IPJ,IPK,NCO,COE,IPI,AM,AM(M2),RESU-566
     1AM(M3),EX(1,KC),WV,NCJ,JMIN,LO)                                   RESU-567
      GO TO ( 11 , 72 , 73 ) , KLT                                      RESU-568
   72 IF (.NOT.LO(81)) GO TO 73                                         RESU-569
      EX(I4-1,KC)=EXCN                                                  RESU-570
      EX(I4,KC)=EX(2,KC)-EXCN                                           RESU-571
   73 IF (DTHE.EQ.0.D0) GO TO ( 49 , 49 , 60 ) , KLT                    RESU-572
      GO TO ( 74 , 75 , 76 ),KC                                         RESU-573
   74 KC=2                                                              RESU-574
      THETA=THETB-DTHE                                                  RESU-575
      GO TO 71                                                          RESU-576
   75 KC=3                                                              RESU-577
      THETA=THETB+DTHE                                                  RESU-578
      GO TO 71                                                          RESU-579
   76 IF (KLT.EQ.3) GO TO 79                                            RESU-580
      AA=EX(1,1)+EX(1,2)+EX(1,3)                                        RESU-581
      DO 78 K=2,I4                                                      RESU-582
      IF ((K.GT.I5).AND.(K.LE.I3)) GO TO 77                             RESU-583
      EX(K,1)=(EX(K,1)+EX(K,2)+EX(K,3))/3.D0                            RESU-584
      GO TO 78                                                          RESU-585
   77 EX(K,1)=(EX(K,1)*EX(1,1)+EX(K,2)*EX(1,2)+EX(K,3)*EX(1,3))/AA      RESU-586
   78 CONTINUE                                                          RESU-587
      GO TO 49                                                          RESU-588
   79 DO 80 K=JN1,JN2                                                   RESU-589
   80 EX(K-IS,1)=(EX(K-IS,1)+EX(K-IS,2)+EX(K-IS,3))/3.D0                RESU-590
      GO TO 60                                                          RESU-591
 1000 FORMAT ('<EXP.DAT.>',F10.2,1P,D20.8,0P,F10.2,2I5)                 RESU-592
 1001 FORMAT (3I5,5A4)                                                  RESU-593
 1002 FORMAT ('1',5X,18A4//)                                            RESU-594
 1003 FORMAT (//30X,'**********   STATE',I5,'    **********'//)         RESU-595
 1004 FORMAT (//42X,5A4//10X,'ANGLE',10X,'CALC. VAL.',11X,'EXP. VAL.',10RESU-596
     1X,'EXP. ERROR',10X,'COR. ERROR',13X,'CHI2'/)                      RESU-597
 1005 FORMAT (6X,F10.3,5D20.5)                                          RESU-598
 1006 FORMAT (//' WEIGHT IN THE CHI2',8X,D15.5/' EXPERIMENTAL NORMALISATRESU-599
     1ION',D15.5/' NORMALISATION ERROR',7X,D15.5/' CALCULATED NORMALISATRESU-600
     2ION',2X,D15.5//' ***** CHI2 =',D15.6,'   *****'/)                 RESU-601
 1007 FORMAT (/' ************ CHI2 **********',D20.10//)                RESU-602
 1008 FORMAT ('<ANG.DIS.>',F10.2,1P,D20.8,0P,F10.2,2I5)                 RESU-603
 1009 FORMAT ('<CROSS-S.>',F10.2,1P,D20.8,0P,F10.2,2I5)                 RESU-604
 1010 FORMAT ('<INE.C.S.>',F10.2,1P,D20.8,0P,F10.2,2I5)                 RESU-605
 1011 FORMAT (6X,'==> TOTAL CROSS SECTION =',F14.6,' MILLIBARNS.')      RESU-606
C1012 FORMAT (1P,D12.5)                                                 RESU-607
 1012 FORMAT (1P,D15.8)                                                  RCN
 1013 FORMAT (' TOTAL REACTION CROSS SECTION =',F14.6,' MILLIBARNS.')   RESU-608
 1014 FORMAT (' TOTAL REACTION CROSS SECTION =',F14.6,' MILLIBARNS',11X,RESU-609
     1'( INCLUDING COMPOUND ELASTIC ).')                                RESU-610
 1015 FORMAT (' TOTAL DIRECT REACTION CROSS SECTION =',F14.6,' MILLIBARNRESU-611
     1S',4X,'( WITHOUT COMPOUND ELASTIC ).')                            RESU-612
 1016 FORMAT (8X,'FISSION CROSS SECTION =',F14.6,' MILLIBARNS.')        RESU-613
 1017 FORMAT (6X,'GAMMA RAY CROSS SECTION =',F14.6,' MILLIBARNS.')      RESU-614
 1018 FORMAT (/'  COMPOUND CROSS SECTION FOR SCATTERING TO COUPLED LEVELRESU-615
     1S.'/'  ======================================================='//'RESU-616
     2   LEVEL     SPIN       ENERGY       CROSS SECTION'/)             RESU-617
 1019 FORMAT (I5,F9.1,A1,'   AT',F10.5,' MEV',F14.5)                    RESU-618
 1020 FORMAT (/' SUM OF COMPOUND CONTRIBUTIONS',F14.6,' MILLIBARNS.')   RESU-619
 1021 FORMAT (/'  COMPOUND CROSS SECTION FOR SCATTERING TO UNCOUPLED LEVRESU-620
     1ELS WITH ANGULAR DISTRIBUTION.'/'  ===============================RESU-621
     2===================================================='//'   LEVEL  RESU-622
     3   SPIN       ENERGY       CROSS SECTION'/)                       RESU-623
 1022 FORMAT (/'  COMPOUND CROSS SECTION FOR SCATTERING TO LEVELS WITHOURESU-624
     1T ANGULAR DISTRIBUTION.'/'  ======================================RESU-625
     2======================================'//'   LEVEL     SPIN       RESU-626
     3ENERGY       CROSS SECTION'/)                                     RESU-627
 1023 FORMAT (/' CONTINUUM',I4/' TOTAL COMPOUND REACTION CROSS SECTION =RESU-628
     1',F14.6,' MILLIBARNS.'//8X,' ENERGY     STEP     CONTRIBUTION  VALRESU-629
     2UE (MILLIBARNS/MEV)'/)                                            RESU-630
 1024 FORMAT (2X,I3,2F10.5,2F15.5)                                      RESU-631
 1025 FORMAT (/' TOTAL SUM OF COMPOUND CONTRIBUTIONS',F14.6,' MILLIBARNSRESU-632
     1.')                                                               RESU-633
 1026 FORMAT (/' ELASTIC SCATTERING ON THE TARGET STATE OF SPIN =',F5.1,RESU-634
     1A1)                                                               RESU-635
 1027 FORMAT (//' CLOSED CHANNEL FOR THE TARGET STATE',I3)              RESU-636
 1028 FORMAT (I5,F5.1,A1,3X,'0',5X,'CLOSED CHANNEL.')                   RESU-637
 1029 FORMAT ('0.D0',8X,I3)                                             RESU-638
 1030 FORMAT (/' INELASTIC SCATTERING TO THE TARGET STATE',I3,'  SPIN ='RESU-639
     1,F5.1,A1)                                                         RESU-640
 1031 FORMAT (/6X,'INELASTIC CROSS SECTION =',F14.6,' MILLIBARNS.')     RESU-641
 1032 FORMAT (/'  TOTAL ELASTIC CROSS SECTION =',F14.6,' MILLIBARNS.')  RESU-642
 1033 FORMAT (9X,'DIRECT CROSS SECTION =',F14.6,' MILLIBARNS.')         RESU-643
 1034 FORMAT (1P,D12.5,I3)                                              RESU-644
 1035 FORMAT (7X,'COMPOUND CROSS SECTION =',F14.6,' MILLIBARNS.')       RESU-645
 1036 FORMAT (1X,F10.3,D16.5,2X,5F18.7)                                 RESU-646
 1037 FORMAT (29X,5F18.7)                                               RESU-647
 1038 FORMAT (I3,1P,2D12.5,5X,4A4,A2)                                   RESU-648
10381 FORMAT (3X,1P,2D12.5,5X,4A4,A2)                                   RCN  RCN
 1039 FORMAT (' -4',1P,2D12.5,5X,4A4,A2/' -5',2D12.5,5X,4A4,A2)         RESU-649
 1040 FORMAT (/' ANGULAR DISTRIBUTION OF COMPOUND SCATTERING ON LEVELS',RESU-650
     1I3,' TO',I3//6X,'ANGLE',6(I6,'-LEVEL',F5.1,A1))                   RESU-651
 1041 FORMAT (1X,F10.3,6F18.7)                                          RESU-652
 1042 FORMAT (/6X,'ANGLE ',6(4A4,A2))                                   RESU-653
 1043 FORMAT (I5,F5.1,A1,I4,I5)                                         RESU-654
 1044 FORMAT (30X,5(4A4,A2))                                            RESU-655
      END                                                               RESU-656
C 07/03/07                                                      ECIS12  SCAT-000
      SUBROUTINE SCAT(FR,MF,JMAX,KMAX,THETA,FCN,IPJ,IPK,NCO,COE,IPI,AB,ASCAT-001
     1,B,EX,WV,NCJ,JMIN,LO)                                             SCAT-002
C COMPUTATION OF OBSERVABLES.                                           SCAT-003
C INPUT:     FR:      SCATTERING COEFFICIENTS IN THE HELICITY FORMALISM.SCAT-004
C            MF:      TABLES OF HELICITY,DESCRIPTION OF OBSERVABLES,    SCAT-005
C                     .... ETC.  SEE DEPH AND OBSE.                     SCAT-006
C            JMAX:    DIMENSION FOR FR.                                 SCAT-007
C            KMAX:    DIMENSION FOR FCN.                                SCAT-008
C            THETA:   SCATTERING ANGLE.                                 SCAT-009
C            FCN:     COMPOUND NUCLEUS COEFFICIENTS.                    SCAT-010
C            IPJ:     NUMBER OF J VALUES USED FOR SCATTERING.           SCAT-011
C            IPK:     NUMBER OF L VALUES USED FOR COMPOUND NUCLEUS.     SCAT-012
C            NCO,COE: LOOPS AND COEFFICIENTS FOR OBSERVABLES (SEE OBSE).SCAT-013
C            IPI:     MULTIPLICITIES FOR PARTICLE AND TARGET NUCLEUS.   SCAT-014
C            WV:      MASSES, ENERGIES, ETC..    SEE CALX.              SCAT-015
C            NCJ:     NUMBER OF FACTORISATIONS OF 1/(1-X*COS(THETA)).   SCAT-016
C            JMIN:    TWICE MINIMUM OF THE TOTAL SPIN.                  SCAT-017
C            LO:      LOGICAL CONTROLS:                                 SCAT-018
C               LO(8)  =.TRUE. RELATIVISTIC KINEMATICS.                 SCAT-019
C               LO(18) =.TRUE. PROJECTILE-TARGET ANTISYMMETRISATION.    SCAT-020
C               LO(41) =.TRUE. FACTORISATION OF 1/(1-COS(THETA)).       SCAT-021
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             SCAT-022
C OUTPUT:    EX:      DIFFERENTIAL CROSS-SECTION FOLLOWED BY OBSERVABLESSCAT-023
C WORKING AREAS:                                                        SCAT-024
C            AB:      AMPLITUDES IN THE C. M. OR THE LAB. SYSTEM.       SCAT-025
C            A:       FOR INDEPENDENT AMPLITUDES.                       SCAT-026
C            B:       TO STORE THE ROTATION MATRIX ELEMENTS.            SCAT-027
C                                                                       SCAT-028
C THE COMMON /RESCT/ IS USED IN RESU AND SCAT.                          SCAT-029
C                                                                       SCAT-030
C FOR THE COMMON  /DCONS/ SEE CALC.                                     SCAT-031
C                                                                       SCAT-032
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCONS/:                     SCAT-033
C  CMB:       ATOMIC MASS CM DIVIDED BY H-BAR*C.                        SCAT-034
C  XZ:        CONVERSION FACTOR TO MILLIBARNS.                          SCAT-035
C   USED:     CMB,XZ.                                                   SCAT-036
C                                                                       SCAT-037
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /RESCT/:                     SCAT-038
C  EXCN:      COMPOUND-NUCLEUS CROSS-SECTION.                           SCAT-039
C  XA,XB:     CONSTANTS FOR CHANGE TO LABORATORY SYSTEM.                SCAT-040
C  JN1,JN2:   FIRST AND LAST AMPLITUDE IN:THE TABLE.                    SCAT-041
C  JN2:       NUMBER OF INDEPENDENT AMPLITUDES.                         SCAT-042
C  NTT:       TOTAL NUMBER OF AMPLITUDES FOR THIS STATE AND A GIVEN J.  SCAT-043
C  MTT:       SIZE OF THE SCATTERING MATRIX FOR THIS STATE AND ANGLE.   SCAT-044
C  MT1:       MULTIPLICITY OF THE OUTGOING PARTICLE.                    SCAT-045
C  MT2:       MULTIPLICITY OF THE RESIDUAL TARGET.                      SCAT-046
C  MT3:       MULTIPLICITY OF THE INCIDENT PARTICLE.                    SCAT-047
C  MT4:       MULTIPLICITY OF THE INITIAL TARGET.                       SCAT-048
C  NOUT:      NUCLEAR STATE CONSIDERED.                                 SCAT-049
C  NIX,NFX:   FIRST AND LAST OBSERVABLE IN THE TABLE.                   SCAT-050
C  KLT:       1 FOR EXPERIMENTAL DATA.                                  SCAT-051
C             2 FOR EQUIDISTANT ANGLES.                                 SCAT-052
C             3 FOR PURE COMPOUND NUCLEUS.                              SCAT-053
C  LKT:       LOGICAL=.TRUE. FOR CENTRE OF MASS SYSTEM.                 SCAT-054
C                                                                       SCAT-055
C***********************************************************************SCAT-056
      IMPLICIT REAL*8 (A-H,O-Z)                                         SCAT-057
      LOGICAL LO(150),LTT(6),LXY,LKT                                    SCAT-058
      DIMENSION FR(2,JMAX,*),MF(10,*),FCN(KMAX,*),NCO(20,*),COE(*),IPI(1SCAT-059
     12,*),AB(2,*),A(2,*),B(*),EX(*),WV(22,*),MO(18)                    SCAT-060
      EQUIVALENCE (MO(1),MI1),(MO(2),MP1),(MO(3),N1),(MO(4),L1),(MO(5),MSCAT-061
     1I2),(MO(6),MP2),(MO(7),N2),(MO(8),L2),(MO(9),MI3),(MO(10),MP3),(MOSCAT-062
     2(11),N3),(MO(12),L3),(MO(13),MI4),(MO(14),MP4),(MO(15),N4),(MO(16)SCAT-063
     3,L4),(MO(17),JQ),(MO(18),JP)                                      SCAT-064
      COMMON /DCONS/ CM,CHB,CZ,CMB,CCZ,CK,XZ                            SCAT-065
      COMMON /RESCT/ EXCN,XA,XB,JN1,JN2,NTT,MTT,MT1,MT2,MT3,MT4,NOUT,NIXSCAT-066
     1,NFX,KLT,LKT                                                      SCAT-067
      THET=1.74532925D-02*THETA                                         SCAT-068
      IF (KLT.EQ.3) GO TO 56                                            SCAT-069
C FOR EXPERIMENTAL DATA OR EQUIDISTANT ANGLES.                          SCAT-070
      W6=DCOS(THET)                                                     SCAT-071
      W7=DSIN(THET)                                                     SCAT-072
      IF (LKT) GO TO 1                                                  SCAT-073
      XC=(XA**2-XB**2)*W7**2+W6**2                                      SCAT-074
      IF (XC.GT.0.D0) XC=DSQRT(XC)                                      SCAT-075
      A3=XC*W6-XA*XB*W7**2                                              SCAT-076
      W7=W7*(XB*W6+XC*XA)                                               SCAT-077
      W6=A3                                                             SCAT-078
    1 IF (.NOT.LO(81)) GO TO 3                                          SCAT-079
C COMPOUND NUCLEUS CONTRIBUTION.                                        SCAT-080
      EXCN=FCN(1,NOUT)                                                  SCAT-081
      IF (IPK.EQ.1) GO TO 3                                             SCAT-082
      U1=0.D0                                                           SCAT-083
      U2=1.D0                                                           SCAT-084
      DO 2 J=2,IPK                                                      SCAT-085
      U1=(DFLOAT(4*J-7)*U2*W6-DFLOAT(2*J-4)*U1)/DFLOAT(2*J-3)           SCAT-086
      U2=(DFLOAT(4*J-5)*U1*W6-DFLOAT(2*J-3)*U2)/DFLOAT(2*J-2)           SCAT-087
    2 EXCN=EXCN+U2*FCN(J,NOUT)*DFLOAT(4*J-3)                            SCAT-088
C DIRECT INTERACTION CONTRIBUTION.                                      SCAT-089
    3 W3=1.D0                                                           SCAT-090
      X2=DSQRT(.5D0*(1.D0+W6))                                          SCAT-091
      X3=DSQRT(.5D0*(1.D0-W6))                                          SCAT-092
      DO 4 I=1,NTT                                                      SCAT-093
      A(1,I)=0.D0                                                       SCAT-094
    4 A(2,I)=0.D0                                                       SCAT-095
      IF (NOUT.NE.1) GO TO 7                                            SCAT-096
C COMPUTATION OF COULOMB AMPLITUDES FOR THE ELASTIC CHANNEL.            SCAT-097
      IF (WV(5,1).EQ.0.D0.OR.X3.LT.1.D-20) GO TO 7                      SCAT-098
      W2=2.D0*WV(5,1)*DLOG(X3)                                          SCAT-099
      W3=-0.5D0*WV(5,1)/(X3*X3)                                         SCAT-100
      W4=W3*DCOS(W2)                                                    SCAT-101
      W5=-W3*DSIN(W2)                                                   SCAT-102
      W3=W3**2                                                          SCAT-103
      IF (.NOT.LO(18)) GO TO 5                                          SCAT-104
C SYMMETRISATION BETWEEN PROJECTILE AND TARGET.                         SCAT-105
      FS=DFLOAT(2*MOD(IPI(2,1),2)-1)                                    SCAT-106
      Y2=2.D0*WV(5,1)*DLOG(X2)                                          SCAT-107
      Y1=-0.5D0*WV(5,1)/(X2*X2)                                         SCAT-108
      Y4=Y1*DCOS(Y2)                                                    SCAT-109
      Y5=-Y1*DSIN(Y2)                                                   SCAT-110
      W3=W4**2+W5**2+Y4**2+Y5**2+2.D0*FS*(W4*Y4+W5*Y5)/DFLOAT(IPI(2,1)) SCAT-111
C TRANSFORMATION OF THE COULOMB AMPLITUDES TO THE HELICITY FORMALISM.   SCAT-112
    5 DO 6 I=1,NTT                                                      SCAT-113
      M5=IPI(2,1)-1                                                     SCAT-114
      M6=IPI(3,1)-1                                                     SCAT-115
      M1=2*MF(1,I)-1-IPI(2,1)                                           SCAT-116
      M2=IPI(3,1)-2*MF(2,I)+1                                           SCAT-117
      M3=2*MF(3,I)-1-IPI(2,1)                                           SCAT-118
      M4=IPI(3,1)-2*MF(4,I)+1                                           SCAT-119
      CALL EMRO(M5,M3,M1,X2,X3,B,1)                                     SCAT-120
      CALL EMRO(M6,M4,M2,X2,X3,B(2),1)                                  SCAT-121
      W1=B(1)*B(2)                                                      SCAT-122
      A(1,I)=W4*W1                                                      SCAT-123
      A(2,I)=W5*W1                                                      SCAT-124
      IF (.NOT.LO(18)) GO TO 6                                          SCAT-125
      CALL EMRO(M5,M3,M2,X2,X3,B,1)                                     SCAT-126
      CALL EMRO(M6,M4,M1,X2,X3,B(2),1)                                  SCAT-127
      Y1=B(1)*B(2)*FS                                                   SCAT-128
      A(1,I)=A(1,I)+Y4*Y1                                               SCAT-129
      A(2,I)=A(2,I)+Y5*Y1                                               SCAT-130
    6 CONTINUE                                                          SCAT-131
      W3=W3/WV(4,1)**2                                                  SCAT-132
C COMPUTATION OF THE NUCLEAR AMPLITUDES.                                SCAT-133
    7 DO 13 I=JN1,JN2                                                   SCAT-134
      IJ=I-JN1+1                                                        SCAT-135
      W5=1.D0                                                           SCAT-136
      JN=IPJ                                                            SCAT-137
      IF (.NOT.LO(41)) GO TO 9                                          SCAT-138
C FACTORISATION OF 1/(1-X*COS(THETA)) WITH X AFTER THE SCATTERING       SCAT-139
C COEFFICIENT.                                                          SCAT-140
      DO 8 J=1,NCJ                                                      SCAT-141
      JN=JN+1                                                           SCAT-142
    8 W5=W5/(1.D0-FR(1,JN,I)*W6)                                        SCAT-143
    9 IF (MF(6,I).EQ.99999) GO TO 10                                    SCAT-144
      CALL EMRO(JMIN,MF(5,I),MF(6,I),X2,X3,B,JN)                        SCAT-145
      W1=W5                                                             SCAT-146
      GO TO 11                                                          SCAT-147
C ROTATION MATRIX ELEMENTS ARE THE SAME AS FOR THE LAST AMPLITUDE.      SCAT-148
   10 W1=W5*DFLOAT(MF(10,I))                                            SCAT-149
   11 DO 12 J=1,IPJ                                                     SCAT-150
      A(1,IJ)=A(1,IJ)+FR(1,J,I)*W1*B(J)                                 SCAT-151
   12 A(2,IJ)=A(2,IJ)+FR(2,J,I)*W1*B(J)                                 SCAT-152
C CONSTRUCTION OF THE TOTAL AMPLITUDE MATRIX.                           SCAT-153
      K1=MF(7,I)                                                        SCAT-154
      AB(1,K1)=A(1,IJ)                                                  SCAT-155
      AB(2,K1)=A(2,IJ)                                                  SCAT-156
      IF (MF(8,I).EQ.0) GO TO 13                                        SCAT-157
      K1=MF(8,I)                                                        SCAT-158
      W1=DFLOAT(MF(9,I))                                                SCAT-159
      AB(1,K1)=W1*A(1,IJ)                                               SCAT-160
      AB(2,K1)=W1*A(2,IJ)                                               SCAT-161
   13 CONTINUE                                                          SCAT-162
C CROSS-SECTION.                                                        SCAT-163
      DZ=0.D0                                                           SCAT-164
      IF (LO(81)) DZ=EXCN/XZ                                            SCAT-165
      DO 14 I1=1,MTT                                                    SCAT-166
   14 DZ=DZ+AB(1,I1)*AB(1,I1)+AB(2,I1)*AB(2,I1)                         SCAT-167
      EX(1)=DZ*XZ                                                       SCAT-168
      LX1=0                                                             SCAT-169
      LX2=0                                                             SCAT-170
      JEX=1                                                             SCAT-171
C LOOP ON THE OBSERVABLES.                                              SCAT-172
      DO 54 IEX=NIX,NFX                                                 SCAT-173
      JEX=JEX+1                                                         SCAT-174
      IF (MF(2,IEX).GT.1) GO TO 21                                      SCAT-175
      IF (MF(2,IEX)) 17 , 15 , 16                                       SCAT-176
C CROSS SECTION.                                                        SCAT-177
   15 EX(JEX)=EX(1)                                                     SCAT-178
      GO TO 54                                                          SCAT-179
C CROSS SECTION DIVIDED BY RUTHERFORD'S CROSS-SECTION.                  SCAT-180
   16 EX(JEX)=EX(1)/(10.D0*W3)                                          SCAT-181
      GO TO 54                                                          SCAT-182
   17 EX(JEX)=0.D0                                                      SCAT-183
      IF (MF(2,IEX).EQ.-3) GO TO 19                                     SCAT-184
      MTP=MT1*MT2*MT4                                                   SCAT-185
C VECTOR ANALYSING POWER FOR SPIN 1/2 OR 1.                             SCAT-186
      DO 18 I1=1,MTP                                                    SCAT-187
      I2=I1+MTP                                                         SCAT-188
   18 EX(JEX)=EX(JEX)+AB(2,I2)*AB(1,I1)-AB(1,I2)*AB(2,I1)               SCAT-189
      EX(JEX)=2.D0*EX(JEX)*XZ/EX(1)                                     SCAT-190
      IF (MT3.EQ.3) EX(JEX)=1.22474487D0*EX(JEX)                        SCAT-191
      GO TO 54                                                          SCAT-192
C VECTOR POLARISATION FOR SPIN 1/2 OR 1.                                SCAT-193
   19 DO 20 I1=1,MTT,MT1                                                SCAT-194
   20 EX(JEX)=EX(JEX)+AB(1,I1+1)*AB(2,I1)-AB(2,I1+1)*AB(1,I1)           SCAT-195
      EX(JEX)=2.D0*EX(JEX)*XZ/EX(1)                                     SCAT-196
      IF (MT1.EQ.3) EX(JEX)=1.22474487D0*EX(JEX)                        SCAT-197
      GO TO 54                                                          SCAT-198
C ALL THE OTHER OBSERVABLES.                                            SCAT-199
   21 EX(JEX)=0.D0                                                      SCAT-200
      K1=MF(3,IEX)                                                      SCAT-201
      K2=MF(4,IEX)                                                      SCAT-202
C LOOP ON THE COMPONENTS OF THE DESCRIPTION OF THE OBSERVABLE.          SCAT-203
      DO 53 II=K1,K2                                                    SCAT-204
      IX=1                                                              SCAT-205
      IXY=0                                                             SCAT-206
      IXX=IXY+MTT                                                       SCAT-207
      DO 22 I=1,18                                                      SCAT-208
   22 MO(I)=NCO(I,II)                                                   SCAT-209
      DO 23 IJ=1,6                                                      SCAT-210
      LTT(IJ)=MOD(JQ,2).EQ.1                                            SCAT-211
   23 JQ=JQ/2                                                           SCAT-212
C COMPUTATION OF THE ANGLE FOR A CHANGE OF FRAME.                       SCAT-213
      IF (MOD(JP,1000).EQ.0) GO TO 46                                   SCAT-214
      LXY=.TRUE.                                                        SCAT-215
      IF (LX1.EQ.MOD(JP,1000)) GO TO 45                                 SCAT-216
      LX1=MOD(JP,1000)                                                  SCAT-217
      LX2=0                                                             SCAT-218
      N=MT1                                                             SCAT-219
      IF (LX1.EQ.1) GO TO 26                                            SCAT-220
      GO TO 25                                                          SCAT-221
   24 IF (JP/1000.EQ.0) GO TO 46                                        SCAT-222
      LXY=.FALSE.                                                       SCAT-223
      IF (JP/1000.EQ.LX2) GO TO 45                                      SCAT-224
      LX2=JP/1000                                                       SCAT-225
      N=MT2                                                             SCAT-226
      IF (LX2.EQ.1) GO TO 27                                            SCAT-227
   25 IF (DABS(W7).LT.1.D-5.OR.N.EQ.1) GO TO 43                         SCAT-228
      W1=W6                                                             SCAT-229
      W2=-W7                                                            SCAT-230
      GO TO 31                                                          SCAT-231
C TRANSFORMATION TO THE LABORATORY SYSTEM FOR THE PARTICLE.             SCAT-232
   26 W1=WV(1,NOUT)                                                     SCAT-233
      GO TO 28                                                          SCAT-234
C TRANSFORMATION TO THE LABORATORY SYSTEM FOR THE TARGET.               SCAT-235
   27 W1=-WV(2,NOUT)                                                    SCAT-236
   28 IF (N.EQ.1) GO TO 43                                              SCAT-237
      IF (.NOT.LO(08)) GO TO 29                                         SCAT-238
      W1=WV(4,NOUT)/(CMB*W1)                                            SCAT-239
      W2=CMB*WV(2,1)/WV(4,1)                                            SCAT-240
      W3=DATAN(-W7/(W6*DSQRT(W1*W1+1.D0)+W1*DSQRT(W2*W2+1.D0)))         SCAT-241
      GO TO 30                                                          SCAT-242
   29 W3=DATAN(-W7/(WV(4,NOUT)*WV(2,1)/(WV(4,1)*W1)+W6))                SCAT-243
   30 IF (DABS(W3).LT.1.D-5.OR.N.EQ.1) GO TO 43                         SCAT-244
      W1=DCOS(W3)                                                       SCAT-245
      W2=DSIN(W3)                                                       SCAT-246
   31 DO 32 I=1,MTT                                                     SCAT-247
      AB(1,I+IXX)=0.D0                                                  SCAT-248
   32 AB(2,I+IXX)=0.D0                                                  SCAT-249
      W3=DSQRT(.5D0*(1.D0-W1))                                          SCAT-250
      W5=1.D0                                                           SCAT-251
      DO 33 I=2,N                                                       SCAT-252
   33 W5=-W5*W3                                                         SCAT-253
      IF (DABS(W5).LT.1.D-30) GO TO 43                                  SCAT-254
      W4=0.D0                                                           SCAT-255
      W8=.5D0*DFLOAT(N-1)                                               SCAT-256
      MTY=MT3*MT4                                                       SCAT-257
      X3=-W8                                                            SCAT-258
C TRANSFORMATION OF THE AMPLITUDE MATRIX.                               SCAT-259
      DO 42 I=1,N                                                       SCAT-260
      IF (I.EQ.1) GO TO 34                                              SCAT-261
      W3=W4                                                             SCAT-262
      IF (I.NE.2) W3=W3*DSQRT(DFLOAT((I-2)*(N+2-I)))                    SCAT-263
      W4=W5                                                             SCAT-264
      W5=(2.D0*(X3*W1-W8)*W4/W2-W3)/DSQRT(DFLOAT((I-1)*(N+1-I)))        SCAT-265
      X3=X3+1.D0                                                        SCAT-266
   34 X2=0.D0                                                           SCAT-267
      X5=W5                                                             SCAT-268
      X4=W8                                                             SCAT-269
      DO 41 J=I,N                                                       SCAT-270
      IF (J.EQ.I) GO TO 35                                              SCAT-271
      X1=X2                                                             SCAT-272
      IF (J.NE.I+1) X1=X1*DSQRT(DFLOAT((J-I-1)*(N+1-J+I)))              SCAT-273
      X2=X5                                                             SCAT-274
      X5=(2.D0*(X3-X4*W1)*X2/W2-X1)/DSQRT(DFLOAT((J-I)*(N+I-J)))        SCAT-275
      X4=X4-1.D0                                                        SCAT-276
   35 X=X5                                                              SCAT-277
      L=1+J-I                                                           SCAT-278
      M=N+1-I                                                           SCAT-279
      DO 40 K=1,2                                                       SCAT-280
      DO 39 I1=1,MTY                                                    SCAT-281
      IF (LXY) GO TO 37                                                 SCAT-282
      IXI=IXX+MT1*((I1-1)*MT2+L-1)                                      SCAT-283
      IXJ=IXY+MT1*((I1-1)*MT2+M-1)                                      SCAT-284
      DO 36 I4=1,MT1                                                    SCAT-285
      AB(1,I4+IXI)=AB(1,I4+IXI)+X*AB(1,I4+IXJ)                          SCAT-286
   36 AB(2,I4+IXI)=AB(2,I4+IXI)+X*AB(2,I4+IXJ)                          SCAT-287
      GO TO 39                                                          SCAT-288
   37 IXI=IXX+MT1*((I1-1)*MT2-1)+L                                      SCAT-289
      IXJ=IXY+MT1*((I1-1)*MT2-1)+M                                      SCAT-290
      DO 38 I4=MT1,MT2*MT1,MT1                                          SCAT-291
      AB(1,IXI+I4)=AB(1,IXI+I4)+X*AB(1,IXJ+I4)                          SCAT-292
   38 AB(2,IXI+I4)=AB(2,IXI+I4)+X*AB(2,IXJ+I4)                          SCAT-293
   39 CONTINUE                                                          SCAT-294
      IF (J.EQ.N) GO TO 41                                              SCAT-295
      ML=L                                                              SCAT-296
      L=M                                                               SCAT-297
      M=ML                                                              SCAT-298
      IF (MOD(J+N,2).NE.0) X=-X                                         SCAT-299
   40 CONTINUE                                                          SCAT-300
   41 CONTINUE                                                          SCAT-301
   42 CONTINUE                                                          SCAT-302
      GO TO 45                                                          SCAT-303
   43 DO 44 I=1,MTT                                                     SCAT-304
      AB(1,I+IXX)=AB(1,I+IXY)                                           SCAT-305
   44 AB(2,I+IXX)=AB(2,I+IXY)                                           SCAT-306
   45 IX=IX+1                                                           SCAT-307
      IXY=IXX                                                           SCAT-308
      IXX=IXY+MTT                                                       SCAT-309
      IF (LXY) GO TO 24                                                 SCAT-310
   46 IF (LTT(5)) GO TO 52                                              SCAT-311
      X=0.D0                                                            SCAT-312
C THE FOUR DO LOOPS.                                                    SCAT-313
      DO 51 I1=MI1,MP1                                                  SCAT-314
      J1=I1-N1                                                          SCAT-315
      X1=COE(10*II)                                                     SCAT-316
      IF (LTT(1)) X1=COE(10*II)*COE(I1+L1)                              SCAT-317
      DO 50 I2=MI2,MP2                                                  SCAT-318
      J2=I2-N2                                                          SCAT-319
      X2=X1                                                             SCAT-320
      IF (LTT(2)) X2=X1*COE(L2-I2)                                      SCAT-321
      DO 49 I3=MI3,MP3                                                  SCAT-322
      J3=I3-N3                                                          SCAT-323
      X3=X2                                                             SCAT-324
      IF (LTT(3)) X3=X2*COE(I3+L3)                                      SCAT-325
      DO 48 I4=MI4,MP4                                                  SCAT-326
      J4=I4-N4                                                          SCAT-327
      X4=X3                                                             SCAT-328
      IIJ=MT1*(I4+MT2*(J2-1+MT4*(J1-1+MT3*(IX-1)))-1)                   SCAT-329
      III=MT1*(J4+MT2*(I2-1+MT4*(I1-1+MT3*(IX-1)))-1)                   SCAT-330
      IF (LTT(4)) X4=X3*COE(L4-I4)                                      SCAT-331
      IF (LTT(6)) GO TO 47                                              SCAT-332
      X=X+(AB(1,I3+IIJ)*AB(1,J3+III)+AB(2,I3+IIJ)*AB(2,J3+III))*X4      SCAT-333
      GO TO 48                                                          SCAT-334
   47 X=X+(AB(2,I3+IIJ)*AB(1,J3+III)-AB(1,I3+IIJ)*AB(2,J3+III))*X4      SCAT-335
   48 CONTINUE                                                          SCAT-336
   49 CONTINUE                                                          SCAT-337
   50 CONTINUE                                                          SCAT-338
   51 CONTINUE                                                          SCAT-339
      GO TO 53                                                          SCAT-340
   52 X=COE(10*II)*DZ                                                   SCAT-341
   53 EX(JEX)=EX(JEX)+X                                                 SCAT-342
      EX(JEX)=EX(JEX)/DZ                                                SCAT-343
   54 CONTINUE                                                          SCAT-344
      IF (LKT) GO TO 55                                                 SCAT-345
      XC=DSQRT((XA*W6+XB)**2+W7**2)**3/DABS(XA+XB*W6)                   SCAT-346
      EX(1)=EX(1)*XC                                                    SCAT-347
   55 IF (KLT.EQ.1.OR.LKT) RETURN                                       SCAT-348
      EX(2)=EX(2)*XC                                                    SCAT-349
      IF (LO(81)) EXCN=EXCN*XC                                          SCAT-350
      RETURN                                                            SCAT-351
C PURE COMPOUND NUCLEUS FOR LEVELS JN1 TO JN2.                          SCAT-352
   56 IS=JN1-1                                                          SCAT-353
      DO 63 IV=JN1,JN2                                                  SCAT-354
      EX(IV-IS)=FCN(1,IV)                                               SCAT-355
      IF (IPK.EQ.1) GO TO 62                                            SCAT-356
      IF (LKT) GO TO 59                                                 SCAT-357
      IF (LO(8)) GO TO 57                                               SCAT-358
      XA=1.D0                                                           SCAT-359
      XB=WV(4,1)*WV(1,IV)/(WV(4,IV)*WV(2,1))                            SCAT-360
      GO TO 58                                                          SCAT-361
   57 XA=DSQRT(1.D0+(WV(4,1)/(CMB*WV(2,1)))**2)                         SCAT-362
      XB=DSQRT(WV(1,IV)**2+(WV(4,IV)/CMB)**2)*WV(4,1)/(WV(4,IV)*WV(2,1))SCAT-363
   58 W6=DCOS(THET)                                                     SCAT-364
      W7=DSIN(THET)                                                     SCAT-365
      XC=(XA**2-XB**2)*W7**2+W6**2                                      SCAT-366
      IF (XC.GT.0.D0) XC=DSQRT(XC)                                      SCAT-367
      W6=XC*W6-XA*XB*W7**2                                              SCAT-368
      GO TO 60                                                          SCAT-369
   59 W6=DCOS(THET)                                                     SCAT-370
   60 U1=0.D0                                                           SCAT-371
      U2=1.D0                                                           SCAT-372
      DO 61 J=2,IPK                                                     SCAT-373
      U1=(DFLOAT(4*J-7)*U2*W6-DFLOAT(2*J-4)*U1)/DFLOAT(2*J-3)           SCAT-374
      U2=(DFLOAT(4*J-5)*U1*W6-DFLOAT(2*J-3)*U2)/DFLOAT(2*J-2)           SCAT-375
   61 EX(IV-IS)=EX(IV-IS)+U2*FCN(J,IV)*DFLOAT(4*J-3)                    SCAT-376
   62 IF (.NOT.LKT) EX(IV-IS)=EX(IV-IS)*DSQRT((XA*W6+XB)**2+1.D0-W6**2)*SCAT-377
     1*3/DABS(XA+XB*W6)                                                 SCAT-378
   63 CONTINUE                                                          SCAT-379
      RETURN                                                            SCAT-380
      END                                                               SCAT-381
C 28/06/06                                                      ECIS12  GRAL-000
      SUBROUTINE GRAL(TGR,GRR,FRR,MTHETA,MF,CMTMP,ID1,LT1,LT2)          GRAL-001
C PLOTS OF CROSS-SECTION AND POLARISATIONS WITH AND WITHOUT EXPERIMENTALGRAL-002
C DATA.                                                                 GRAL-003
C INPUT:     TGR:     ANGLES.                                           GRAL-004
C            GRR:     CALCULATED VALUES.                                GRAL-005
C            FRR:     EXPERIMENTAL VALUES.                              GRAL-006
C            MTHETA:  NUMBER OF ANGLES.                                 GRAL-007
C          MF,CMTMP:   EQUIVALENT BY CALL,DESCRIPTION OF DATA (SEE OBSE)GRAL-008
C                     MF(5,J) IS THE NUMBER OF POWER OF 10 IN A LINE    GRAL-009
C                     FOR CROSS SECTIONS AND MUST BE 1 TO PLOT A        GRAL-010
C                     POLARISATION (ALWAYS BETWEEN -1 AND 1).           GRAL-011
C                     CMTMP(I,J) IS A TITLE FOR I=6,10.                 GRAL-012
C            ID1:     NUMBER OF DIFFERENT POLARISATIONS.                GRAL-013
C            LT1:     .TRUE. FOR POLARISATION,                          GRAL-014
C                     .FALSE. FOR CROSS SECTION.                        GRAL-015
C            LT2:     .TRUE. IF THERE ARE NO EXPERIMENTAL DATA.         GRAL-016
C***********************************************************************GRAL-017
      IMPLICIT REAL*8 (A-H,O-Z)                                         GRAL-018
      LOGICAL LT1,LT2                                                   GRAL-019
      DIMENSION TGR(MTHETA),GRR(ID1,MTHETA),FRR(MTHETA),MF(10,*)        GRAL-020
      CHARACTER*1 VGR(112),GRA(17)                                      GRAL-021
      CHARACTER*4 CMTMP(10,*)                                           GRAL-022
      COMMON /INOUT/ MR,MW,MS                                           GRAL-023
      DATA GRA /'+','*',',',':','-','1','2','3','4','5','6','7','8','9',GRAL-024
     1'0',' ','.'/                                                      GRAL-025
      IF (LT1) GO TO 14                                                 GRAL-026
C CROSS SECTIONS.                                                       GRAL-027
      IF ((MF(5,1).LE.0).OR.(MF(5,1).GT.50)) RETURN                     GRAL-028
      NA2=100/MF(5,1)                                                   GRAL-029
      AA2=DFLOAT(NA2)                                                   GRAL-030
      WRITE (MW,1000)                                                   GRAL-031
      WRITE (MW,1001) GRA(1),(CMTMP(J,1),J=6,10)                        GRAL-032
      IF (.NOT.LT2) WRITE (MW,1002)                                     GRAL-033
      AA3=AA2*DFLOAT((MF(5,1)+1)/2)                                     GRAL-034
      AA1=AA2/DLOG(10.D0)                                               GRAL-035
      NA1=101-MF(5,1)*NA2                                               GRAL-036
      A5=101.5D0                                                        GRAL-037
      DO 1 I=1,112                                                      GRAL-038
    1 VGR(I)=GRA(16)                                                    GRAL-039
      DO 2 I=NA1,112,NA2                                                GRAL-040
    2 VGR(I)=GRA(6)                                                     GRAL-041
      WRITE (MW,1003) VGR                                               GRAL-042
      DO 3 I=1,112                                                      GRAL-043
    3 VGR(I)=GRA(17)                                                    GRAL-044
      DO 4 I=NA1,112,NA2                                                GRAL-045
    4 VGR(I)=GRA(2)                                                     GRAL-046
      WRITE (MW,1003) VGR                                               GRAL-047
      DO 11 I=1,MTHETA                                                  GRAL-048
      DO 5 J=2,111                                                      GRAL-049
    5 VGR(J)=GRA(16)                                                    GRAL-050
      DO 6 J=NA1,111,NA2                                                GRAL-051
    6 VGR(J)=GRA(17)                                                    GRAL-052
      IF (GRR(1,I).LT.0.D0) GO TO 27                                    GRAL-053
      A4=AA1*DLOG(GRR(1,I))+A5                                          GRAL-054
      NG=0                                                              GRAL-055
    7 IF (NG.GT.20) GO TO 28                                            GRAL-056
      NG=NG+1                                                           GRAL-057
      IF (A4.GT.2.D0) GO TO 8                                           GRAL-058
      A4=A4+AA3                                                         GRAL-059
      A5=A5+AA3                                                         GRAL-060
      WRITE (MW,1004)                                                   GRAL-061
      GO TO 7                                                           GRAL-062
    8 IF (A4.LT.112.D0) GO TO 9                                         GRAL-063
      A4=A4-AA3                                                         GRAL-064
      A5=A5-AA3                                                         GRAL-065
      WRITE (MW,1005)                                                   GRAL-066
      GO TO 8                                                           GRAL-067
    9 L=IDINT(A4)                                                       GRAL-068
      VGR(L)=GRA(1)                                                     GRAL-069
      IF (LT2) GO TO 10                                                 GRAL-070
C EXPERIMENTAL DATA.                                                    GRAL-071
      IF (FRR(I).LT.0.D0) GO TO 29                                      GRAL-072
      L=IDINT(AA1*DLOG(FRR(I))+A5)                                      GRAL-073
      IF (L.GT.1.AND.L.LT.112) VGR(L)=GRA(2)                            GRAL-074
   10 WRITE (MW,1006) TGR(I),VGR                                        GRAL-075
   11 CONTINUE                                                          GRAL-076
      DO 12 I=1,112                                                     GRAL-077
   12 VGR(I)=GRA(17)                                                    GRAL-078
      DO 13 I=NA1,112,NA2                                               GRAL-079
   13 VGR(I)=GRA(2)                                                     GRAL-080
      WRITE (MW,1003) VGR                                               GRAL-081
      RETURN                                                            GRAL-082
C POLARISATION.                                                         GRAL-083
   14 IF (LT2) GO TO 15                                                 GRAL-084
      WRITE (MW,1000)                                                   GRAL-085
      WRITE (MW,1001) GRA(1),(CMTMP(J,1),J=6,10)                        GRAL-086
      WRITE (MW,1002)                                                   GRAL-087
      GO TO 17                                                          GRAL-088
   15 NK=0                                                              GRAL-089
      DO 16 K=1,ID1                                                     GRAL-090
      IF (MF(5,K).NE.1) GO TO 16                                        GRAL-091
      KN=MOD(NK,15)+1                                                   GRAL-092
      NK=NK+1                                                           GRAL-093
      IF (NK.EQ.1) WRITE (MW,1000)                                      GRAL-094
      WRITE (MW,1001) GRA(KN),(CMTMP(J,K),J=6,10)                       GRAL-095
   16 CONTINUE                                                          GRAL-096
      IF (NK.EQ.0) RETURN                                               GRAL-097
   17 WRITE (MW,1007)                                                   GRAL-098
      DO 18 I=1,112                                                     GRAL-099
   18 VGR(I)=GRA(16)                                                    GRAL-100
      DO 19 I=1,103                                                     GRAL-101
   19 VGR(I)=GRA(17)                                                    GRAL-102
      DO 20 I=2,102,10                                                  GRAL-103
   20 VGR(I)=GRA(2)                                                     GRAL-104
      WRITE (MW,1003) VGR                                               GRAL-105
      DO 24 I=1,MTHETA                                                  GRAL-106
      DO 21 M=2,102                                                     GRAL-107
   21 VGR(M)=GRA(16)                                                    GRAL-108
      VGR(52)=GRA(17)                                                   GRAL-109
      NK=0                                                              GRAL-110
      DO 22 K=1,ID1                                                     GRAL-111
      IF (MF(5,K).NE.1) GO TO 22                                        GRAL-112
      NK=MOD(NK,15)+1                                                   GRAL-113
      M=IDINT(50.D0*GRR(K,I)+52.5D0)                                    GRAL-114
      IF (M.GT.1.AND.M.LE.102) VGR(M)=GRA(NK)                           GRAL-115
   22 CONTINUE                                                          GRAL-116
      IF (LT2) GO TO 23                                                 GRAL-117
      M=IDINT(50.D0*FRR(I)+52.5D0)                                      GRAL-118
      IF (M.GT.1.AND.M.LE.102) VGR(M)=GRA(2)                            GRAL-119
   23 WRITE (MW,1006) TGR(I),VGR                                        GRAL-120
   24 CONTINUE                                                          GRAL-121
      DO 25 I=1,103                                                     GRAL-122
   25 VGR(I)=GRA(17)                                                    GRAL-123
      DO 26 I=2,102,10                                                  GRAL-124
   26 VGR(I)=GRA(2)                                                     GRAL-125
      WRITE (MW,1003) VGR                                               GRAL-126
      RETURN                                                            GRAL-127
   27 WRITE (MW,1008) I,GRR(1,I)                                        GRAL-128
      GO TO 30                                                          GRAL-129
   28 WRITE (MW,1009) I,GRR(1,I)                                        GRAL-130
      GO TO 30                                                          GRAL-131
   29 WRITE (MW,1010) I,FRR(I)                                          GRAL-132
   30 WRITE (MW,1011)                                                   GRAL-133
      RETURN                                                            GRAL-134
 1000 FORMAT ('1')                                                      GRAL-135
 1001 FORMAT (45X,A1,4X,5A4/)                                           GRAL-136
 1002 FORMAT (45X,'+    CALCULATED VALUE'/45X,'*    EXPERIMENTAL VALUE'/GRAL-137
     1)                                                                 GRAL-138
 1003 FORMAT (7X,112A1)                                                 GRAL-139
 1004 FORMAT (40(' -*'))                                                GRAL-140
 1005 FORMAT (40(' *-'))                                                GRAL-141
 1006 FORMAT (F7.2,112A1)                                               GRAL-142
 1007 FORMAT (//6X,' -1',7X,' -.8',6X,' -.6',6X,' -.4',6X,' -.2',7X,' 0'GRAL-143
     1,8X,' .2',7X,' .4',7X,' .6',7X,' .8',7X,' 1')                     GRAL-144
 1008 FORMAT (' FOR THE',I4,'TH LINE, CALCULATED VALUE =',D15.8)        GRAL-145
 1009 FORMAT (' FOR THE',I4,'TH LINE, MORE THAN 20 TRANSLATIONS. CALCULAGRAL-146
     1TED VALUE =',D15.8)                                               GRAL-147
 1010 FORMAT (' FOR THE',I4,'TH LINE, EXPERIMENTAL VALUE =',D15.8)      GRAL-148
 1011 FORMAT (//' **** GRAPH CANCELED ****')                            GRAL-149
      END                                                               GRAL-150
C 09/02/06                                                      ECIS12  EMRO-000
      SUBROUTINE EMRO(IA,I1,I2,X2,X3,RES,NX)                            EMRO-001
C COMPUTATION OF ROTATION MATRIX ELEMENTS.                              EMRO-002
C INPUT:     IA:      TWICE THE FIRST J VALUE.                          EMRO-003
C            I1:      TWICE M1.                                         EMRO-004
C            I2:      TWICE M2.                                         EMRO-005
C            X2:      COSINES OF THETA/2.                               EMRO-006
C            X3:      SINUS OF THETA/2.                                 EMRO-007
C            NX:      NUMBER OF VALUES REQUESTED.                       EMRO-008
C OUTPUT:    RES:     MATRIX ELEMENTS:                                  EMRO-009
C                      J          J+1                     J+NX-1        EMRO-010
C                     R (THETA), R (THETA) ............. R (THETA)      EMRO-011
C                      M1,M2      M1,M2                   M1,M2         EMRO-012
C                     USING THE RECURRENCE RELATION OBTAINED FROM       EMRO-013
C                                   J                  J'               EMRO-014
C                     COS(THETA) * R (THETA)  = SUM   R (THETA)         EMRO-015
C                                   M1,M2       ON J'  M1,M2            EMRO-016
C                                                                       EMRO-017
C***********************************************************************EMRO-018
      IMPLICIT REAL*8 (A-H,O-Z)                                         EMRO-019
      DIMENSION RES(*)                                                  EMRO-020
      NR=1                                                              EMRO-021
      JA=IA                                                             EMRO-022
      X1=X2*X2-X3*X3                                                    EMRO-023
      M1=IABS(I1+I2)/2                                                  EMRO-024
      M2=IABS(I1-I2)/2                                                  EMRO-025
      MJ=M1+M2                                                          EMRO-026
      NJ=MJ                                                             EMRO-027
    1 IF (MJ.LE.JA) GO TO 2                                             EMRO-028
      RES(NR)=0.D0                                                      EMRO-029
      NR=NR+1                                                           EMRO-030
      IF (NR.GT.NX) RETURN                                              EMRO-031
      JA=JA+2                                                           EMRO-032
      GO TO 1                                                           EMRO-033
    2 S1=0.D0                                                           EMRO-034
      S2=0.D0                                                           EMRO-035
      S3=1.D0                                                           EMRO-036
      IF (MJ.EQ.0) GO TO 11                                             EMRO-037
C THE MAGNETIC QUANTUM NUMBERS ARE NOT BOTH ZEROS.                      EMRO-038
      IF (M1.EQ.M2) GO TO 8                                             EMRO-039
C NO MAGNETIC QUANTUM NUMBER IS ZERO.                                   EMRO-040
      IF (M2.EQ.0) GO TO 4                                              EMRO-041
      DO 3 I=1,M2                                                       EMRO-042
    3 S3=S3*X3*DSQRT(DFLOAT(M1+I)/DFLOAT(I))                            EMRO-043
    4 IF (M1.EQ.0) GO TO 6                                              EMRO-044
      DO 5 M=1,M1                                                       EMRO-045
    5 S3=S3*X2                                                          EMRO-046
    6 IF ((I1.GT.I2).AND.(2*(M2/2).NE.M2)) S3=-S3                       EMRO-047
      KX=1                                                              EMRO-048
      X4=0.D0                                                           EMRO-049
      Z1=DFLOAT(M1)                                                     EMRO-050
      Z2=DFLOAT(M2)                                                     EMRO-051
      SL=(Z1-Z2)/DFLOAT(NJ+2)                                           EMRO-052
    7 IF (JA.LE.NJ) GO TO 13                                            EMRO-053
C RECURRENCE.                                                           EMRO-054
      NJ=NJ+2                                                           EMRO-055
      S2=S3                                                             EMRO-056
      Z1=Z1+1.D0                                                        EMRO-057
      Z2=Z2+1.D0                                                        EMRO-058
      MJ=MJ+1                                                           EMRO-059
      X4=X4+1.D0                                                        EMRO-060
      Y2=DSQRT(Z1*Z2*X4*DFLOAT(MJ))                                     EMRO-061
      SJ=DFLOAT(NJ)                                                     EMRO-062
      S3=(SJ-1.D0)*SJ*((X1-SL)*S2-S1)/(2.D0*Y2)                         EMRO-063
      S1=2.D0*Y2*S2/((SJ+1.D0)*SJ)                                      EMRO-064
      SL=SL*(SJ-2.D0)/(SJ+2.D0)                                         EMRO-065
      GO TO 7                                                           EMRO-066
C A MAGNETIC QUANTUM NUMBER IS ZERO.                                    EMRO-067
    8 DO 9 I=1,M1                                                       EMRO-068
    9 S3=S3*X3*X2*DSQRT(DFLOAT(M1+I)/DFLOAT(I))                         EMRO-069
      KX=2                                                              EMRO-070
      IF (I1.GT.I2.AND.(2*(M2/2).NE.M2)) S3=-S3                         EMRO-071
      X4=0.D0                                                           EMRO-072
   10 IF (JA.LE.NJ) GO TO 13                                            EMRO-073
C RECURRENCE.                                                           EMRO-074
      NJ=NJ+2                                                           EMRO-075
      S2=S3                                                             EMRO-076
      MJ=MJ+1                                                           EMRO-077
      X4=X4+1.D0                                                        EMRO-078
      Y2=DSQRT(X4*DFLOAT(MJ))                                           EMRO-079
      S3=(DFLOAT(NJ-1)*X1*S2-S1)/Y2                                     EMRO-080
      S1=Y2*S2                                                          EMRO-081
      GO TO 10                                                          EMRO-082
C THE MAGNETIC QUANTUM NUMBERS ARE BOTH ZEROS.                          EMRO-083
   11 KX=3                                                              EMRO-084
   12 IF (JA.LE.NJ) GO TO 13                                            EMRO-085
C RECURRENCE.                                                           EMRO-086
      NJ=NJ+2                                                           EMRO-087
      SJ=DFLOAT(NJ/2)                                                   EMRO-088
      S2=S3                                                             EMRO-089
      S3=((2.D0*SJ-1.D0)*X1*S2-S1)/SJ                                   EMRO-090
      S1=S2*SJ                                                          EMRO-091
      GO TO 12                                                          EMRO-092
C STORAGE.                                                              EMRO-093
   13 RES(NR)=S3                                                        EMRO-094
      NR=NR+1                                                           EMRO-095
      IF (NR.GT.NX) RETURN                                              EMRO-096
      JA=JA+2                                                           EMRO-097
      GO TO ( 7 , 10 , 12 ),KX                                          EMRO-098
      END                                                               EMRO-099
C 16/10/12                                                      ECIS12  VARI-000
      SUBROUTINE VARI(KF,NW,DW,LO)                                      VARI-001
C ASSIGNS THE VALUES OF THE VARIABLE PARAMETERS AND PRINTS THE OUTPUT   VARI-002
C DURING THE SEARCH.                                                    VARI-003
C INPUT:     KF:      1 BEFORE THE CALL TO THE SEARCH SUBROUTINES:      VARI-004
C                     AT THE FIRST CALL(KE=0) DEFINES THE VARIABLES     VARI-005
C                     IN SEARCH,                                        VARI-006
C                     AT ANY CALL, PRINT CHI2 AND VARIABLES.            VARI-007
C                     0 AFTER THE CALL TO THE SEARCH SUBROUTINES:       VARI-008
C                     AT ANY CALL SETS PARAMETERS TO THEIR VALUE FOR    VARI-009
C                     NEXT EVALUATION,                                  VARI-010
C                     AT THE LAST CALL AND IF KE IS NOT 1, PRINT        VARI-011
C                     ERRORS AND PARAMETERS.                            VARI-012
C            NW:      WORKING AREA FOR INTEGERS.                        VARI-013
C            DW:      WORKING AREA FOR DOUBLE PRECISION IN EQUIVALENCE  VARI-014
C                     BY CALL WITH NW.                                  VARI-015
C            LO:      LOGICAL CONTROLS:                                 VARI-016
C               LO(1)  =.TRUE. ROTATIONAL MODEL-(.F.:VIBRATIONAL MODEL).VARI-017
C               LO(3)  =.TRUE. ANHARMONIC VIBRATIONAL OR ASYMMETRIC     VARI-018
C                              ROTATIONAL MODEL.                        VARI-019
C               LO(4)  =.TRUE. PARAMETRISED SPIN-ORBIT DEFORMATION.     VARI-020
C               LO(6)  =.TRUE. USE DEFORMATION LENGTHS.                 VARI-021
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    VARI-022
C               LO(16) =.TRUE. HEAVY-ION DEFINITION OF REDUCED RADII ANDVARI-023
C                              DEFORMATIONS.                            VARI-024
C               LO(17) =.TRUE. FOLDING MODEL.                           VARI-025
C               LO(41) =.TRUE. FACTORISATION OF 1/(1-COS(THETA)).       VARI-026
C               LO(53) =.TRUE. OUTPUT OF THE NUMBER OF ITERATIONS.      VARI-027
C               LO(55) =.TRUE. OUTPUT OF C-MATRIX ELEMENTS AND OF       VARI-028
C                              COMPOUND NUCLEUS INTERMEDIATE RESULTS.   VARI-029
C               LO(56) =.TRUE. OUTPUT OF S-MATRIX ELEMENTS.             VARI-030
C               LO(57) =.TRUE. OUTPUT PHASE-SHIFTS AT EACH ITERATION.   VARI-031
C               LO(58) =.TRUE. OUTPUT OF THE COEFFICIENTS OF EACH FORM  VARI-032
C                              FACTOR FOR ALL SETS OF EQUATIONS.        VARI-033
C               LO(62) =.TRUE. POTENTIALS WRITTEN ON FILE 62.           VARI-034
C               LO(64) =.TRUE. PRINT RESULTS ON FILES 64 AND 66.        VARI-035
C               LO(65) =.TRUE. PRINT COEFFICIENTS OF THE EXPANSION IN   VARI-036
C                              LEGENDRE POLYNOMIALS ON FILE 65.         VARI-037
C               LO(76) =.TRUE. LO(51) TO LO(65) ARE ALWAYS USED.        VARI-038
C               LO(78) =.TRUE. OUTPUT OF DIFFERENCES BETWEEN            VARI-039
C                              EXPERIMENTAL AND CALCULATED VALUES.      VARI-040
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             VARI-041
C               LO(82) =.TRUE. OLD SIMPLIFIED COMPOUND NUCLEUS.         VARI-042
C               LO(87) =.TRUE. NO WIDTH FLUCTUATIONS.                   VARI-043
C               LO(86) =.TRUE. GAMMA EMISSION IN COMPOUND NUCLEUS.      VARI-044
C               LO(111)=.TRUE. NUCLEAR PARAMETERS ARE CHANGED IN SEARCH.VARI-045
C               LO(112)=.TRUE. SPIN-ORBIT OR COMPOUND NUCLEUS PARAMETERSVARI-046
C                              ARE CHANGED IN SEARCH.                   VARI-047
C               LO(113)=.TRUE. DISPERSION RELATION IS CHANGED IN SEARCH.VARI-048
C               LO(114)=.TRUE. COMPOUND NUCLEUS CONTINUUM IS CHANGED IN VARI-049
C                              SEARCH.                                  VARI-050
C               LO(116)=.TRUE. NO OUTPUT.                               VARI-051
C               LO(118)=.TRUE. FOR LAST RESULTS.                        VARI-052
C               LO(119)=.TRUE. RESULTS WITH THE LAST CALCULATION.       VARI-053
C               LO(120)=.TRUE. OUTPUT AND LAST CALCULATION BEST ONE.    VARI-054
C                                                                       VARI-055
C FOR THE COMMONS /ADDRE/ AND /INTEG/ SEE CALC.                         VARI-056
C FOR THE COMMONS /COUPL/, /DCHI2/ AND /NCOMP/ SEE CALX.                VARI-057
C                                                                       VARI-058
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /ADDRE/:                     VARI-059
C  NWV:       NON INTEGER VALUES FOR THE CHANNELS.                      VARI-060
C  NIPP:      DISPERSION PARAMETERS.                                    VARI-061
C  NPAA:      VALUES OF NUCLEAR PARAMETERS.                             VARI-062
C  NSCN:      LEVEL DENSITY DESCRIPTION.                                VARI-063
C  NFIS:      FISSION DATA FOR COMPOUND NUCLEUS.                        VARI-064
C  NGAM:      GAMMA DATA FOR COMPOUND NUCLEUS.                          VARI-065
C  NPOT:      OPTICAL POTENTIAL PARAMETERS.                             VARI-066
C  NBETA:     DEFORMATION PARAMETERS.                                   VARI-067
C  NTGX:      BEGINNING OF CHI2 AND NORMALISATION OF DATA.              VARI-068
C  NISE:      INDEXES OF THE VARIABLE PARAMETERS IN SEARCH.             VARI-069
C  NRC:       PERMANENT WORKING FIELD FOR THE SEARCH.                   VARI-070
C  NIW:       INTEGER WORKING FIELD FOR THE SEARCH.                     VARI-071
C  NRES:      FUNCTIONS FOR THE SEARCH.                                 VARI-072
C  NXX:       VARIABLES FOR THE SEARCH.                                 VARI-073
C  NT:        TABLE OF REDUCED NUCLEAR MATRIX ELEMENTS.                 VARI-074
C  NIVQ:      TABLE OF MULTIPOLES.                                      VARI-075
C  NIVY:      TABLE OF FORM FACTOR IDENTIFICATION IVY (FOR COMPUTATION).VARI-076
C   USED:     NWV,NIPP,NPAA,NSCN,NFIS,NGAM,NPOT,NBETA,NTGX,NISE,NRC,NIW,VARI-077
C             NRES,NXX,NT,NIVQ,NIVY.                                    VARI-078
C                                                                       VARI-079
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     VARI-080
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             VARI-081
C  NVA:       NUMBER OF NUCLEAR PARAMETERS.                             VARI-082
C   USED:     NPP,NVA.                                                  VARI-083
C                                                                       VARI-084
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCHI2/:                     VARI-085
C  CHI2:      CHI-SQUARE COMPUTED IN SUBROUTINE RESU.                   VARI-086
C  CHI2M:     MINIMUM CHI-SQUARE IN THE SEARCH.                         VARI-087
C  YY(1):     STEP SIZE IN THE SEARCH.                                  VARI-088
C  YY(2):     HALF OF THE SUCCESS MULTIPLICATIVE FACTOR OF THE STEP.    VARI-089
C  YY(3):     VARIOUS MEANINGS.  SEE FITE.                              VARI-090
C   USED:     CHI2,CHI2M,YY.                                            VARI-091
C                                                                       VARI-092
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /INTEG/:                     VARI-093
C  NBET:      NUMBER OF DIFFERENT DEFORMATIONS (VIBRATIONS+ROTATIONS).  VARI-094
C  NCOLR:     NUMBER OF EXPERIMENTAL ANGULAR DISTRIBUTIONS.             VARI-095
C  NREC:      NUMBER OF VARIABLES IN SEARCH.                            VARI-096
C  NTOT:      NUMBER OF EXPERIMENTAL DATA.                              VARI-097
C  KE:        CONTROL OF SEARCH (SEE FITE).                             VARI-098
C   USED:     NBET,NCOLR,NREC,NTOT,KE.                                  VARI-099
C                                                                       VARI-100
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     VARI-101
C  NFISS:     NUMBER OF FISSION TRANSMISSION COEFFICIENTS.              VARI-102
C  NRD:       NUMBER OF GAMMA TRANSMISSION COEFFICIENTS.                VARI-103
C  NCONT:     NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS.                 VARI-104
C  NCONS:     NUMBER OF LEVEL DENSITIES NEEDED.                         VARI-105
C  AZ(I):     SPIN-ORBIT PARAMETRISATION FOR I-1 TO 6,                  VARI-106
C             HAUSER FESHBACH PARAMETERS FOR J=7 TO 11,                 VARI-107
C             GIANT DIPOLE RESONANCE FOR I=12 TO 16.                    VARI-108
C   DEFINED:  AZ.                                                       VARI-109
C   USED:     NFISS,NRD,NCONT,NCONS,AZ.                                 VARI-110
C                                                                       VARI-111
C PARAMETERS IN SEARCH ARE GIVEN BY NW(2-MOD(I,2),NISE+I/2)=INDEX(I)    VARI-112
C STARTING AT NW(1,NISE) FOR I=1 TO NREC:                               VARI-113
C   POSITIVE VALUE: PARAMETER DEFINED BY INDEX(I)                       VARI-114
C   NEGATIVE VALUE -L: PARAMETERS DEFINED BY INDEX(J) FOR J=L+1 TO      VARI-115
C     J=L+INDEX(L) ARE DEFINED AS THE SAME VARIABLE.                    VARI-116
C      1-1000      OPTICAL MODEL,FOLDING PARAMETERS.                    VARI-117
C   1001-2000      DEFORMATIONS FOR A GIVEN POTENTIAL:  - LX(1)=.TRUE.  VARI-118
C   2001-3000      DEFORMATIONS FOR A GIVEN MULTIPOLE:  - LX(1)=.TRUE.  VARI-119
C   3001-4000      INDIVIDUAL DEFORMATION:              - LX(1)=.TRUE.  VARI-120
C   4001-5000      NUCLEAR MODEL PARAMETER:             - LO(111)=.TRUE.VARI-121
C   5001-6000      NUCLEAR MATRIX ELEMENT:              - LX(2)=.TRUE.  VARI-122
C   6001-7000      SPIN-ORBIT AND COMPOUND NUCLEUS PARAMETRISATION:     VARI-123
C    6001-6006     SPIN-ORBIT PARAMETRISATION:          - LX(3)=.TRUE.  VARI-124
C    6007-6011     BZ1, BZ2, BZ3, BZ4, BZ5:     - LO(112)=LX(4)=.TRUE.  VARI-125
C    6012-6016     TGO, BN, FNUG, EGD, GGD:     - LO(112)=LX(5)=.TRUE.  VARI-126
C    6017-6...     SEE DESCRIPTION OF INPUT.                            VARI-127
C   FOR GAMMA      SA, UX, TAU, SG, E0, EX:     - LO(112)=LX(6)=.TRUE.  VARI-128
C   FOR CONTINUUM  SA, UX, TAU, SG, E0, EX:     - LO(114)=LX(7)=.TRUE.  VARI-129
C                  GAMMA TRANSMISSION FACTORS:          - LX(8)=.TRUE.  VARI-130
C                  FISSION TRANSMISSION COEFFICIENT,                    VARI-131
C                  DEGREE OF FREEDOM:                  - LX(9)=.TRUE.   VARI-132
C   7001-8000      DISPERSION RELATIONS PARAMETRISATION:- LO(113)=.TRUE.VARI-133
C  10001-99999     EXTERNAL OPTICAL MODEL (PARAMETERS ABOVE 1000)       VARI-134
C IT STOPS THE CALCULATION FOR AN INDEX OF PARAMETER OUT OF RANGE.      VARI-135
C***********************************************************************VARI-136
      IMPLICIT REAL*8 (A-H,O-Z)                                         VARI-137
      LOGICAL LO(150),LX(9)                                             VARI-138
      DIMENSION NW(2,*),DW(*),R0(8)                                     VARI-139
      COMMON /ADDRE/ NIPH,NJIT,NWV,NIPP,NPAR,NPAA,NSCN,NFIS,NGAM,NNIV,NPVARI-140
     1OT,NBETA,NFM,NTGX,NDONN,NNVI,NDE,NISE,NRC,NIW,NNWI,NCC,MCC,NXA,NAMVARI-141
     21,NFAC,NFG,NXG,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,NXD,MWV,NIXT,NVARI-142
     3TY,NSM,NTX,NRY,NRCO,NRDO,NVC1,NVC2,NNC,NCX                        VARI-143
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   VARI-144
      COMMON /DCHI2/ CHI2,CHI2M,YY(3)                                   VARI-145
      COMMON /INOUT/ MR,MW,MS                                           VARI-146
      COMMON /INTEG/ IDMT,NPLACE,NCOLL,NJMAX,ITERM,JDM,JIT,KMIN,KMAX,NCOVARI-147
     1LS,NCOLT,NBET,LMX,LMAX1,NLT,ISM,NJC,JTX,KCC,MS1,MS2,KBA,KAB,KBC,JTVARI-148
     2H,NCOLR,NREC,NTOT,LMAX2,KE,ITEMM,KXT,LMAX3,NRZ,NTZ,IPM,IPK,MCM(2),VARI-149
     3NCT(6)                                                            VARI-150
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQVARI-151
     1,ACN1,ACN2,AZ(18)                                                 VARI-152
C TRANSFER BETWEEN VARIABLES AND PARAMETERS                             VARI-153
      IF (KF.EQ.1.AND.KE.NE.0) GO TO 36                                 VARI-154
      DO 1 I=111,114                                                    VARI-155
    1 LO(I)=.FALSE.                                                     VARI-156
      DO 2 I=1,9                                                        VARI-157
    2 LX(I)=.FALSE.                                                     VARI-158
      DO 35 I=1,NREC                                                    VARI-159
      J=NW(2-MOD(I,2),NISE+(I-1)/2)                                     VARI-160
      JJ=IABS(J)                                                        VARI-161
      IF (J.NE.JJ) GO TO 3                                              VARI-162
      J1=I                                                              VARI-163
      J2=I                                                              VARI-164
      GO TO 4                                                           VARI-165
    3 J1=JJ+1                                                           VARI-166
      J2=J1+NW(2-MOD(JJ,2),NISE+(JJ-1)/2)-1                             VARI-167
    4 DO 34 K=J1,J2                                                     VARI-168
      J=NW(2-MOD(K,2),NISE+(K-1)/2)                                     VARI-169
      IF ((J.GT.1000).AND.(J.LE.10000)) GO TO 10                        VARI-170
C OPTICAL MODEL AND FOLDING PARAMETERS                                  VARI-171
      IF (J.GT.10000) J=J-9000                                          VARI-172
      IF (LO(7)) GO TO 5                                                VARI-173
      NVAT=42*NPP                                                       VARI-174
      IF (J.GT.NVAT) GO TO 67                                           VARI-175
      IF (MOD(J,42).EQ.25) GO TO 68                                     VARI-176
      GO TO 8                                                           VARI-177
C EXTERNAL OPTICAL PARAMETERS                                           VARI-178
    5 IF (J.GE.NW(2,NPOT+1)) GO TO 69                                   VARI-179
      I1=NW(1,NPOT)-2                                                   VARI-180
      DO 6 L=1,I1                                                       VARI-181
      IF (J.GE.NW(1,NPOT+L).AND.J.LE.NW(2,NPOT+L)) GO TO 7              VARI-182
    6 CONTINUE                                                          VARI-183
      GO TO 70                                                          VARI-184
    7 IF (L.EQ.1) GO TO 8                                               VARI-185
C NOT A FOLDING PARAMETER.                                              VARI-186
      M=NW(1,NPOT+L)                                                    VARI-187
      N=NW(2,NPOT+M-2)                                                  VARI-188
      IV=NW(2,NPOT+N-1)                                                 VARI-189
      IF (IV.GE.1.AND.IV.LE.6) GO TO 8                                  VARI-190
      IF ((IV.LT.0).AND.(J-M.GT.1)) GO TO 71                            VARI-191
      IF ((IV.NE.7).AND.(IV.NE.8)) GO TO 8                              VARI-192
      JY=J                                                              VARI-193
      IF (NW(1,NPOT+NW(2,NPOT+M-2)).NE.1) JY=JY-1                       VARI-194
      IF (M.GT.JY) GO TO 72                                             VARI-195
      IF ((IV.EQ.7).AND.(MOD(JY-M,3).NE.0)) GO TO 73                    VARI-196
      IF ((IV.EQ.8).AND.(MOD(JY+10-M,11).LT.3)) GO TO 74                VARI-197
    8 IF (KF.NE.0) GO TO 9                                              VARI-198
      IF (K.EQ.J1) RAP=DW(NXX+I-1)/DW(NPOT+J-1)                         VARI-199
      DW(NPOT+J-1)=RAP*DW(NPOT+J-1)                                     VARI-200
      GO TO 34                                                          VARI-201
    9 DW(NXX+I-1)=DW(NPOT+J-1)                                          VARI-202
      GO TO 35                                                          VARI-203
   10 J=J-1000                                                          VARI-204
      IF (J.GT.1000) GO TO 15                                           VARI-205
      IF (J.GT.8) GO TO 75                                              VARI-206
C  DEFORMATIONS FOR A GIVEN POTENTIAL                                   VARI-207
      LX(1)=.TRUE.                                                      VARI-208
      DO 11 K1=1,NBET                                                   VARI-209
      IF (LO(1).AND.LO(3).AND.NW(2,NBETA+9*K1-1).NE.0) GO TO 11         VARI-210
      IF (DW(NBETA+9*K1+J-10).NE.0.D0) GO TO 12                         VARI-211
   11 CONTINUE                                                          VARI-212
      GO TO 76                                                          VARI-213
   12 IF (KF.EQ.0) GO TO 13                                             VARI-214
      DW(NXX+I-1)=DW(NBETA+9*K1+J-10)                                   VARI-215
      GO TO 35                                                          VARI-216
   13 IF (K.EQ.J1) RAP=DW(NXX+I-1)/DW(NBETA+9*K1+J-10)                  VARI-217
      DO 14 L=K1,NBET                                                   VARI-218
      IF (LO(1).AND.LO(3).AND.NW(2,NBETA+9*K1-1).NE.0) GO TO 14         VARI-219
      DW(NBETA+9*L+J-10)=DW(NBETA+9*L+J-10)*RAP                         VARI-220
   14 CONTINUE                                                          VARI-221
      GO TO 34                                                          VARI-222
   15 J=J-1000                                                          VARI-223
      IF (J.GT.1000) GO TO 20                                           VARI-224
C DEFORMATIONS FOR A GIVEN MULTIPOLE                                    VARI-225
      IF (J.GT.NBET) GO TO 77                                           VARI-226
      LX(1)=.TRUE.                                                      VARI-227
      DO 16 K1=1,8                                                      VARI-228
      IF (DW(NBETA+9*J+K1-10).NE.0.D0) GO TO 17                         VARI-229
   16 CONTINUE                                                          VARI-230
      GO TO 78                                                          VARI-231
   17 IF (KF.EQ.0) GO TO 18                                             VARI-232
      DW(NXX+I-1)=DW(NBETA+9*J+K1-10)                                   VARI-233
      GO TO 35                                                          VARI-234
   18 IF (K.EQ.J1) RAP=DW(NXX+I-1)/DW(NBETA+9*J+K1-10)                  VARI-235
      DO 19 L=K1,8                                                      VARI-236
   19 DW(NBETA+9*J+L-10)=DW(NBETA+9*J+L-10)*RAP                         VARI-237
      GO TO 34                                                          VARI-238
   20 J=J-1000                                                          VARI-239
      IF (J.GT.1000) GO TO 21                                           VARI-240
C INDIVIDUAL DEFORMATIONS                                               VARI-241
      NBT=10*NBET                                                       VARI-242
      IF (J.GT.NBT) GO TO 79                                            VARI-243
      K1=1+(J-1)/10                                                     VARI-244
      K2=1+MOD(J-1,10)                                                  VARI-245
      IF (K2.GT.8) GO TO 80                                             VARI-246
      LX(1)=.TRUE.                                                      VARI-247
      JK=NBETA+J-1-(J-10)/10                                            VARI-248
      GO TO 32                                                          VARI-249
   21 J=J-1000                                                          VARI-250
      IF (J.GT.1000) GO TO 22                                           VARI-251
C  NUCLEAR PARAMETERS                                                   VARI-252
      IF (J.GT.NVA) GO TO 81                                            VARI-253
      LO(111)=.TRUE.                                                    VARI-254
      JK=NPAA+J-1                                                       VARI-255
      GO TO 32                                                          VARI-256
   22 J=J-1000                                                          VARI-257
      IF (J.GT.1000) GO TO 23                                           VARI-258
C  NUCLEAR MATRIX ELEMENTS                                              VARI-259
      NME=(NIVQ-NT)/3                                                   VARI-260
      IF (J.GT.NME) GO TO 82                                            VARI-261
      LX(2)=.TRUE.                                                      VARI-262
      JK=NT+3*J-1                                                       VARI-263
      GO TO 32                                                          VARI-264
   23 J=J-1000                                                          VARI-265
      IF (J.GT.1000) GO TO 30                                           VARI-266
C  SPIN-ORBIT AND H. F. PARAMETRISATION                                 VARI-267
      IF ((.NOT.LO(81)).AND.(J.GT.6)) GO TO 83                          VARI-268
      IF (J.GT.16) GO TO 27                                             VARI-269
      IF (J.LE.6) GO TO 24                                              VARI-270
      LX(4)=LX(4).OR.(J.LE.11)                                          VARI-271
      LX(5)=LX(5).OR.(J.GT.11)                                          VARI-272
      IF (LO(82).AND.J.GT.9) GO TO 84                                   VARI-273
      IF ((.NOT.LO(86)).AND.(J.GT.11)) GO TO 85                         VARI-274
      IF (LO(82)) GO TO 25                                              VARI-275
      IF ((J.NE.9).AND.(J.LE.11).AND.LO(87)) GO TO 86                   VARI-276
      IF (LO(87)) GO TO 25                                              VARI-277
      IF (J.EQ.7) GO TO 87                                              VARI-278
      IF ((AZ(8).NE.0.D0).AND.(J.GT.8).AND.(J.LE.11)) GO TO 87          VARI-279
      IF ((AZ(8).EQ.0.D0).AND.(J.EQ.8)) GO TO 87                        VARI-280
      GO TO 25                                                          VARI-281
   24 IF (.NOT.LO(4)) GO TO 88                                          VARI-282
      LX(3)=.TRUE.                                                      VARI-283
   25 IF (KF.NE.0) GO TO 26                                             VARI-284
      IF (K.EQ.J1) RAP=DW(NXX+I-1)/AZ(J)                                VARI-285
      AZ(J)=RAP*AZ(J)                                                   VARI-286
      GO TO 34                                                          VARI-287
   26 DW(NXX+I-1)=AZ(J)                                                 VARI-288
      GO TO 35                                                          VARI-289
C LEVEL DENSITY PARAMETERS.                                             VARI-290
   27 J3=J-16                                                           VARI-291
      IF (J3.GT.6*NCONS) GO TO 28                                       VARI-292
      IF (J3.LE.6*(NCONS-NCONT)) LX(6)=.TRUE.                           VARI-293
      IF (J3.GT.6*(NCONS-NCONT)) LX(7)=.TRUE.                           VARI-294
      JK=NSCN+J3-(J3-7)/6                                               VARI-295
      GO TO 32                                                          VARI-296
   28 J3=J3-7*NCONS                                                     VARI-297
      IF (J3.GT.NRD) GO TO 29                                           VARI-298
      LX(8)=.TRUE.                                                      VARI-299
      JK=NGAM+J3-1                                                      VARI-300
      GO TO 32                                                          VARI-301
   29 J3=J3-NRD                                                         VARI-302
      IF (J3.GT.NFISS) GO TO 89                                         VARI-303
      LX(9)=.TRUE.                                                      VARI-304
      JK=NFIS+J-1                                                       VARI-305
      GO TO 32                                                          VARI-306
C DISPERSION PARAMETERS.                                                VARI-307
   30 J=J-1000                                                          VARI-308
      JN=(J-1)/13                                                       VARI-309
      JJ=J-13*JN                                                        VARI-310
      IF (JJ.GT.NPP-1) GO TO 90                                         VARI-311
      IF (NW(2,NIPP+17*JN+2).NE.0) GO TO 91                             VARI-312
      IF ((JJ.LT.6).OR.(JJ.GE.12)) GO TO 31                             VARI-313
      IF ((NW(1,NIPP+17*JN+1).EQ.0).AND.(J.LE.8)) GO TO 92              VARI-314
      IF ((NW(2,NIPP+17*JN+1).EQ.0).AND.(J.GT.8)) GO TO 92              VARI-315
   31 JK=NIPP+2+JJ+3*JN                                                 VARI-316
      LO(113)=.TRUE.                                                    VARI-317
   32 IF (KF.EQ.0) GO TO 33                                             VARI-318
      DW(NXX+I-1)=DW(JK)                                                VARI-319
      GO TO 35                                                          VARI-320
   33 IF (K.EQ.J1) RAP=DW(NXX+I-1)/DW(JK)                               VARI-321
      DW(JK)=RAP*DW(JK)                                                 VARI-322
   34 CONTINUE                                                          VARI-323
   35 CONTINUE                                                          VARI-324
      LO(112)=LX(4).OR.LX(5).OR.LX(6)                                   VARI-325
      LO(114)=LX(7)                                                     VARI-326
   36 IF (KF.EQ.0) GO TO 38                                             VARI-327
      WRITE (MW,1000) NW(1,NIW+1),NW(2,NIW),CHI2,(YY(I),I=1,3)          VARI-328
      WRITE (MW,1001)                                                   VARI-329
      DO 37 I=1,NCOLR                                                   VARI-330
      IF (DW(NTGX+7*I-1).NE.0.D0) WRITE (MW,1002) I,(DW(NTGX+7*I+J-8),J=VARI-331
     13,7)                                                              VARI-332
   37 CONTINUE                                                          VARI-333
      WRITE (MW,1003) (I,DW(NXX+I-1),I=1,NREC)                          VARI-334
      IF (LO(78)) WRITE (MW,1004) (I,DW(NRES+I-1),I=1,NTOT)             VARI-335
      RETURN                                                            VARI-336
   38 IF (KE.EQ.1) RETURN                                               VARI-337
C PRINTING OF RESULTS.                                                  VARI-338
      WRITE (MW,1005) NW(1,NIW+1),NW(2,NIW),CHI2,KE,YY(1)               VARI-339
      IF (KE*(KE-3).NE.0.OR.DW(NRC).LE.0.D0) GO TO 40                   VARI-340
      WRITE (MW,1006) NW(2,NIW+1),YY(3),(DW(NRC+I-1),I=1,NREC)          VARI-341
      WRITE (MW,1007) (DW(NRC+NREC+I-1),I=1,NREC)                       VARI-342
      WRITE (MW,1008)                                                   VARI-343
      L=2*NREC+NRC-1                                                    VARI-344
      DO 39 I=1,NREC                                                    VARI-345
      K=L+1                                                             VARI-346
      L=L+I                                                             VARI-347
   39 WRITE (MW,1009) (DW(J),J=K,L)                                     VARI-348
      GO TO 41                                                          VARI-349
   40 WRITE (MW,1010)                                                   VARI-350
   41 IF (KE.EQ.0) WRITE (MW,1011)                                      VARI-351
      IF (KE.EQ.2) WRITE (MW,1012)                                      VARI-352
      IF (KE.EQ.3) WRITE (MW,1013)                                      VARI-353
      IF (KE.EQ.4) WRITE (MW,1014)                                      VARI-354
      IF (KE.EQ.5) WRITE (MW,1015) NW(2,NIW+1)                          VARI-355
      IF (KE.EQ.6) WRITE (MW,1016) NW(1,NIW+1),NW(2,NIW+1)              VARI-356
      IF (KE.EQ.7) WRITE (MW,1017) NTOT,NREC                            VARI-357
C END OF THE SEARCH                                                     VARI-358
      LO(116)=.FALSE.                                                   VARI-359
      LO(118)=.TRUE.                                                    VARI-360
      IF (LO(76)) GO TO 43                                              VARI-361
      DO 42 I=51,65                                                     VARI-362
   42 LO(I)=LO(I+85)                                                    VARI-363
   43 LO(120)=.NOT.(LO(53).OR.LO(55).OR.LO(56).OR.LO(57).OR.LO(58).OR.LOVARI-364
     1(60).OR.LO(62).OR.LO(64))                                         VARI-365
      IF (LO(41)) LO(120)=LO(120).AND.(.NOT.LO(65))                     VARI-366
      LO(119)=LO(120).AND.(.NOT.(LO(51).OR.LO(64).OR.LO(65)))           VARI-367
      LO(120)=CHI2.EQ.CHI2M.AND.LO(120)                                 VARI-368
C OUTPUT OF FINAL PARAMETERS                                            VARI-369
      WRITE (MW,1018) (LO(J),J=1,100)                                   VARI-370
      IF (LO(7)) GO TO 46                                               VARI-371
      NPO=NPOT-1                                                        VARI-372
C OUTPUT OF USUAL POTENTIALS.                                           VARI-373
      DO 45 J=1,NPP                                                     VARI-374
      IJ=IABS(NW(1,NIPP+15*J-15))                                       VARI-375
      AM3=DW(NWV+18*IJ-17)**.33333333333333D0                           VARI-376
      IF (LO(16)) AM3=AM3+DW(NWV+18*IJ-18)**.33333333333333D0           VARI-377
      WRITE (MW,1019) J,AM3                                             VARI-378
      DO 44 I=1,8                                                       VARI-379
   44 R0(I)=DW(NPO+4*I-2)/AM3                                           VARI-380
      WRITE (MW,1020) (DW(NPO+4*I-3),DW(NPO+4*I-2),R0(I),DW(NPO+4*I-1),DVARI-381
     1W(NPO+4*I),I=1,8),DW(NPO+33)                                      VARI-382
      IF (LO(17)) WRITE (MW,1021) (DW(NPO+I),I=34,42)                   VARI-383
   45 NPO=NPO+1                                                         VARI-384
      GO TO 58                                                          VARI-385
C OUTPUT OF EXTERNAL POTENTIALS.                                        VARI-386
   46 NVMA=NW(1,NPOT)                                                   VARI-387
      WRITE (MW,1022)                                                   VARI-388
   47 IF (NVMA.GE.NW(1,NPOT+1)) GO TO 57                                VARI-389
      I1=NW(1,NVMA+NPOT-1)                                              VARI-390
      IV=NW(2,NVMA+NPOT-1)                                              VARI-391
      IF (IV.EQ.16) GO TO 56                                            VARI-392
      IT1=MOD(I1-1,8)+1                                                 VARI-393
      J1=(I1-1)/8                                                       VARI-394
      I2=NW(1,NPOT+I1-7)                                                VARI-395
      I3=NW(2,NPOT+I1-7)                                                VARI-396
      IF (IV.GE.0) GO TO 48                                             VARI-397
      WRITE (MW,1023) IT1,J1,I2,I3,DW(NPOT+I2-1),DW(NPOT+I2)            VARI-398
      GO TO 56                                                          VARI-399
   48 IF (IV.LT.9) GO TO 49                                             VARI-400
      WRITE (MW,1024) IT1,J1,IV,I2,I3,(DW(NPOT+I-1),I=I2,I3)            VARI-401
      GO TO 56                                                          VARI-402
   49 IF (IV.GT.6) GO TO 55                                             VARI-403
      WRITE (MW,1025) IT1,J1,IV,I2,I3,(DW(NPOT+I-1),I=I2,I3)            VARI-404
      NST=NW(1,NPOT+NVMA+1)                                             VARI-405
      IF (NST.GT.0) GO TO 52                                            VARI-406
      K=IABS(NST)                                                       VARI-407
      EX=DW(NWV+18*K-17)**.33333333333333D0                             VARI-408
      EY=EX                                                             VARI-409
      IF (LO(16)) EX=EX+DW(NWV+18*K-18)**.33333333333333D0              VARI-410
      EY=EY/EX                                                          VARI-411
      EX=DW(NPOT+I2)/EX                                                 VARI-412
      EZ=DW(NPOT+I2-1)                                                  VARI-413
      IF ((.NOT.LO(16)).OR.J1.LE.NPP) GO TO 51                          VARI-414
      ITYZ=IV                                                           VARI-415
      IF (ITYZ.GE.5) ITYZ=ITYZ-4                                        VARI-416
      ITYW=1                                                            VARI-417
      IF (IT1.LE.6) GO TO 50                                            VARI-418
      ITI=7*(J1-NPP)                                                    VARI-419
      ITYW=ITYW*NW(2-MOD(ITI,2),NIVY+(ITI-1)/2)                         VARI-420
   50 IF (LO(6)) ITYW=ITYW-1                                            VARI-421
      IF (ITYZ.GT.1) EZ=EZ/EY**((ITYZ-1)*ITYW)                          VARI-422
   51 WRITE (MW,1026) EZ,EX                                             VARI-423
   52 IF ((IV.NE.5).AND.(IV.NE.6)) GO TO 56                             VARI-424
      WRITE (MW,1027) I2,I3,(DW(NPOT+I-1),I=I2,I3)                      VARI-425
      IF (NST.GT.0) GO TO 56                                            VARI-426
      WRITE (MW,1028)                                                   VARI-427
      NMB=0                                                             VARI-428
   53 NMA=I2                                                            VARI-429
      I4=I2+7                                                           VARI-430
      DO 54 I=I2,I4                                                     VARI-431
      NMB=NMB+1                                                         VARI-432
      J=I-NMA                                                           VARI-433
      IF (IT1.LT.7) J=0                                                 VARI-434
      IF (.NOT.LO(6)) J=J+1                                             VARI-435
   54 R0(NMB)=DW(NPOT+I-1)/EY**J                                        VARI-436
      WRITE (MW,1009) (R0(I),I=1,NMB)                                   VARI-437
      I2=I2+8                                                           VARI-438
      IF (I2.LE.I3) GO TO 53                                            VARI-439
      GO TO 56                                                          VARI-440
   55 WRITE (MW,1025) IT1,J1,IV,I2,I3,(DW(NPOT+I-1),I=I2,I3)            VARI-441
   56 NVMA=I3+1                                                         VARI-442
      GO TO 47                                                          VARI-443
   57 NVMB=NW(2,NPOT+1)                                                 VARI-444
      IF (NVMA.LT.NVMB) WRITE (MW,1029) (DW(NPOT+I-1),I=NVMA,NVMB)      VARI-445
   58 IF (.NOT.LX(1)) GO TO 66                                          VARI-446
C OUTPUT OF DEFORMATIONS.                                               VARI-447
      WRITE (MW,1030) (I,NW(1,NBETA+9*I-1),NW(2,NBETA+9*I-1),(DW(NBETA+9VARI-448
     1*I+J-10),J=1,8),I=1,NBET)                                         VARI-449
      IF (.NOT.LO(16)) GO TO 66                                         VARI-450
      DM=DW(NWV+1)**.33333333333333D0/(DW(NWV)**.33333333333333D0+DW(NWVVARI-451
     1+1)**.33333333333333D0)                                           VARI-452
      WRITE (MW,1031)                                                   VARI-453
      DO 65 I=1,NBET                                                    VARI-454
      K1=0                                                              VARI-455
      K2=0                                                              VARI-456
      IF (LO(3)) GO TO 60                                               VARI-457
   59 K1=1                                                              VARI-458
      K2=NW(1,NBETA+9*I-1)                                              VARI-459
      GO TO 62                                                          VARI-460
   60 IF (LO(1)) GO TO 61                                               VARI-461
      K1=I-1                                                            VARI-462
      K2=K1*NW(1,NBETA+9*I-1)                                           VARI-463
      GO TO 62                                                          VARI-464
   61 IF (NW(2,NBETA+9*I-1).EQ.0) GO TO 59                              VARI-465
   62 IF (.NOT.LO(6)) GO TO 63                                          VARI-466
      K2=K2-K1                                                          VARI-467
      K1=0                                                              VARI-468
   63 DO 64 J=1,6                                                       VARI-469
   64 R0(J)=DW(NBETA+9*I+J-10)/DM**K1                                   VARI-470
      R0(7)=DW(NBETA+9*I-3)/DM**K2                                      VARI-471
      R0(8)=DW(NBETA+9*I-2)/DM**K2                                      VARI-472
   65 WRITE (MW,1032) I,NW(1,NBETA+9*I-1),NW(2,NBETA+9*I-1),R0          VARI-473
C OUTPUT OF OTHER PARAMETERS IN SEARCH                                  VARI-474
   66 IF (LO(111)) WRITE (MW,1033) (DW(NPAA+J-1),I=1,NVA)               VARI-475
      IF (LX(2)) WRITE (MW,1034) (DW(I+2),I=NT,NIVQ,3)                  VARI-476
      IF (LX(3)) WRITE (MW,1035) (AZ(I),I=1,6)                          VARI-477
      IF (LX(4)) WRITE (MW,1036) (AZ(I),I=7,11)                         VARI-478
      IF (LX(5)) WRITE (MW,1037) (AZ(I),I=12,16)                        VARI-479
      IF (LX(6)) WRITE (MW,1038) (I,(DW(NSCN+7*I+J-8),J=1,7),I=1,1)     VARI-480
      IF (LX(7)) WRITE (MW,1038) (I,(DW(NSCN+7*I+J-8),J=1,7),I=1+NCONS-NVARI-481
     1CONT,NCONS)                                                       VARI-482
      IF (LX(8)) WRITE (MW,1039) (I,DW(NGAM+I-1),I=1,NRD)               VARI-483
      IF (LX(9)) WRITE (MW,1040) (I,(DW(NFIS+2*I+J-3),J=1,2),I=1,NFISS) VARI-484
      IF (LO(113)) WRITE (MW,1041) (I,(DW(NIPP+15*I+J-16),J=4,16),I=1,NPVARI-485
     1P)                                                                VARI-486
      RETURN                                                            VARI-487
   67 WRITE (MW,1042) NVAT                                              VARI-488
      GO TO 93                                                          VARI-489
   68 WRITE (MW,1043)                                                   VARI-490
      GO TO 93                                                          VARI-491
   69 WRITE (MW,1044) NW(2,NPOT+1)                                      VARI-492
      GO TO 93                                                          VARI-493
   70 WRITE (MW,1045) I,J,(NW(1,NPOT+L),NW(2,NPOT+L),L=1,I1)            VARI-494
      GO TO 93                                                          VARI-495
   71 WRITE (MW,1046)                                                   VARI-496
      GO TO 93                                                          VARI-497
   72 WRITE (MW,1047)                                                   VARI-498
      GO TO 93                                                          VARI-499
   73 WRITE (MW,1048)                                                   VARI-500
      GO TO 93                                                          VARI-501
   74 WRITE (MW,1049)                                                   VARI-502
      GO TO 93                                                          VARI-503
   75 WRITE (MW,1050)                                                   VARI-504
      GO TO 93                                                          VARI-505
   76 WRITE (MW,1051) I,NW(2-MOD(K,2),NISE+(K-1)/2),J                   VARI-506
      GO TO 93                                                          VARI-507
   77 WRITE (MW,1052) NBET                                              VARI-508
      GO TO 93                                                          VARI-509
   78 WRITE (MW,1053) I,NW(2-MOD(K,2),NISE+(K-1)/2),J                   VARI-510
      GO TO 93                                                          VARI-511
   79 WRITE (MW,1054) NBT                                               VARI-512
      GO TO 93                                                          VARI-513
   80 WRITE (MW,1055)                                                   VARI-514
      GO TO 93                                                          VARI-515
   81 WRITE (MW,1056) NVA                                               VARI-516
      GO TO 93                                                          VARI-517
   82 WRITE (MW,1057) NME                                               VARI-518
      GO TO 93                                                          VARI-519
   83 WRITE (MW,1058)                                                   VARI-520
      GO TO 93                                                          VARI-521
   84 WRITE (MW,1059)                                                   VARI-522
      GO TO 93                                                          VARI-523
   85 WRITE (MW,1060)                                                   VARI-524
      GO TO 93                                                          VARI-525
   86 WRITE (MW,1061)                                                   VARI-526
      GO TO 93                                                          VARI-527
   87 WRITE (MW,1062)                                                   VARI-528
      GO TO 93                                                          VARI-529
   88 WRITE (MW,1063)                                                   VARI-530
      GO TO 93                                                          VARI-531
   89 WRITE (MW,1064)                                                   VARI-532
      GO TO 93                                                          VARI-533
   90 WRITE (MW,1065) NPP                                               VARI-534
      GO TO 93                                                          VARI-535
   91 WRITE (MW,1066)                                                   VARI-536
      GO TO 93                                                          VARI-537
   92 WRITE (MW,1067)                                                   VARI-538
   93 WRITE (MW,1068) I,NW(2-MOD(K,2),NISE+(K-1)/2),J                   VARI-539
      STOP                                                              VARI-540
 1000 FORMAT (/' RUN',I4,'   MAX =',I4,'   ***** CHI2 =',D18.10,' *****'VARI-541
     1,5X,'W(1) =',F10.2,5X,'W(2) =',F5.2,5X,'W(3) =',F10.5)            VARI-542
 1001 FORMAT (/21X,'WEIGHT',12X,'EXP. NORM.',10X,'ERR. NORM.',10X,'CALC.VARI-543
     1 NORM.',12X,'CHI2')                                               VARI-544
 1002 FORMAT (5X,I5,1P,5D20.6)                                          VARI-545
 1003 FORMAT (/' *** VARIABLES'//(6(1X,I3,1P,D16.6)))                   VARI-546
 1004 FORMAT (/' *** FUNCTIONS'//(6(1X,I3,1P,D16.6)))                   VARI-547
 1005 FORMAT (/' RUN',I4,'   MAX =',I4,'   ***** CHI2 =',D18.10,' *****'VARI-548
     1,5X,'KE =',I2,5X,'W(1) =',F12.4)                                  VARI-549
 1006 FORMAT (//' STANDARD ERRORS (VARIANCE AT BEST FIT EQUAL TO DEGREE VARI-550
     1OF FREEDOM:',I6,'.RENORMALISATION FACTOR',D15.6,' )'/(1P,8D15.6)) VARI-551
 1007 FORMAT (/' ERROR ENHANCEMENTS (MULTI/SINGLE VARIABLE ERROR)'/(1P,8VARI-552
     1D15.6))                                                           VARI-553
 1008 FORMAT (/' ERROR CORRELATION MATRIX:')                            VARI-554
 1009 FORMAT (1P,8D15.6)                                                VARI-555
 1010 FORMAT (//' NO INFORMATION ON ERRORS.')                           VARI-556
 1011 FORMAT (//' SEARCH ENDED WITHOUT ERRORS.')                        VARI-557
 1012 FORMAT (//' SEARCH INTERRUPTED BY USER.')                         VARI-558
 1013 FORMAT (//' SEARCH ENDED BY NUMBER OF EVALUATIONS.')              VARI-559
 1014 FORMAT (//' SEARCH ENDED FOR ROUNDING ERRORS.')                   VARI-560
 1015 FORMAT (//' SEARCH ENDED BECAUSE THE FUNCTIONS DO NOT DEPEND ON THVARI-561
     1E VARIABLE',I6)                                                   VARI-562
 1016 FORMAT (//' SEARCH ENDED BECAUSE VARIABLES',2I6,' ARE USELESS IN PVARI-563
     1REPARATORY CALLS.')                                               VARI-564
 1017 FORMAT (//' SEARCH ENDED BECAUSE THE NUMBER OF PARAMETERS',I4,' ISVARI-565
     1 LARGER THAN THE NUMBER OF DATA',I4)                              VARI-566
 1018 FORMAT ('1'/' ******* FINAL RESULTS *******'//' **** FIRST CONTROLVARI-567
     1 CARD ****',2X,'1 ',9(' 1'),' 2 ',9(' 2'),' 3 ',9(' 3'),' 4 ',9(' VARI-568
     24'),' 5'/11X,5('  1 2 3 4 5 6 7 8 9 0')/11X,5(1X,10L2)//' *** SECOVARI-569
     3ND CONTROL CARD ****',2X,'1 ',9(' 1'),' 2 ',9(' 2'),' 3 ',9(' 3'),VARI-570
     4' 4 ',9(' 4'),' 5'/11X,5('  1 2 3 4 5 6 7 8 9 0')/11X,5(1X,10L2)/)VARI-571
 1019 FORMAT (/' OPTICAL POTENTIALS  **',I3,' **     REDUCED RADIUS MULTVARI-572
     1IPLIED BY  ',D15.6/)                                              VARI-573
 1020 FORMAT (' VOLUME/SCALAR REAL POTENTIAL'/' DEPTH',F12.6,' MEV   RADVARI-574
     1IUS',F10.6,' FERMI (REDUCED VALUE',F9.6,')   DIFFUSENESS',F9.6,' FVARI-575
     2ERMI AT THE POWER (1+',F9.6,')'/' VOLUME/SCALAR IMAGINARY POTENTIAVARI-576
     3L'/' DEPTH',F12.6,' MEV   RADIUS',F10.6,' FERMI (REDUCED VALUE',F9VARI-577
     4.6,')   DIFFUSENESS',F9.6,' FERMI AT THE POWER (1+',F9.6,')'/' SURVARI-578
     5FACE/VECTOR REAL POTENTIAL'/' DEPTH',F12.6,' MEV   RADIUS',F10.6,'VARI-579
     6 FERMI (REDUCED VALUE',F9.6,')   DIFFUSENESS',F9.6,' FERMI AT THE VARI-580
     7POWER (1+',F9.6,')'/' SURFACE/VECTOR IMAGINARY POTENTIAL'/' DEPTH'VARI-581
     8,F12.6,' MEV   RADIUS',F10.6,' FERMI (REDUCED VALUE',F9.6,')   DIFVARI-582
     9FUSENESS',F9.6,' FERMI AT THE POWER (1+',F9.6,')'/' REAL SPIN-ORBIVARI-583
     AT/TENSOR POTENTIAL'/' DEPTH',F12.6,' MEV   RADIUS',F10.6,' FERMI (VARI-584
     BREDUCED VALUE',F9.6,')   DIFFUSENESS',F9.6,' FERMI AT THE POWER (1VARI-585
     C+',F9.6,')'/' IMAGINARY SPIN-ORBIT/TENSOR POTENTIAL'/' DEPTH',F12.VARI-586
     D6,' MEV   RADIUS',F10.6,' FERMI (REDUCED VALUE',F9.6,')   DIFFUSENVARI-587
     EESS',F9.6,' FERMI AT THE POWER (1+',F9.6,')'/' COULOMB POTENTIAL'/VARI-588
     F'  CHARGE PRODUCT',F7.0,'  RADIUS',F10.6,' FERMI (REDUCED VALUE',FVARI-589
     G9.6,')   DIFFUSENESS',F9.6,' FERMI AT THE POWER (1+',F9.6,')'/' SPVARI-590
     HIN-ORBIT COULOMB POTENTIAL'/' DEPTH',F12.6,' MEV   RADIUS',F10.6,'VARI-591
     I FERMI (REDUCED VALUE',F9.6,')   DIFFUSENESS',F9.6,' FERMI AT THE VARI-592
     JPOWER (1+',F9.6,')'/14X,'THIRD CHARGE PARAMETER',F9.6)            VARI-593
 1021 FORMAT (/' *** FOLDING MODEL ***'/' REAL PART',10X,'V =',F10.4,6X,VARI-594
     1'R =',F10.4,6X,'A =',F10.4/' IMAGINARY PART',6X,'V =', F10.4,6X,'RVARI-595
     2 =',F10.4,6X,'A =',F10.4/' COULOMB PART',7X,'V =',F10.4,6X,'R =',FVARI-596
     310.4,6X,'A =',F10.4)                                              VARI-597
 1022 FORMAT (/' **** EXTERNAL POTENTIAL PARAMETERS ****'/)             VARI-598
 1023 FORMAT (' (',I1,',',I2,') GIVEN BY POINTS WITH THE PARAMETERS FROMVARI-599
     1',I4,' TO',I4/' STRENGTH =',1P,D15.6,19X,'SCALE =',D15.6)         VARI-600
 1024 FORMAT (' (',I1,',',I2,') TYPE',I3,' FROM',I4,' TO',I4/1P,2D15.6/(VARI-601
     11P,8D15.6))                                                       VARI-602
 1025 FORMAT (' (',I1,',',I2,') TYPE',I3,' FROM',I4,' TO',I4,4X,6D14.6/(VARI-603
     17X,8D14.6))                                                       VARI-604
 1026 FORMAT (' VALUES READ:',F12.6,3X,F9.6)                            VARI-605
 1027 FORMAT (' DEFORMATIONS: PARAMETERS FROM',I4,' TO ',I4,10X,4D18.6/(VARI-606
     152X,4D18.6))                                                      VARI-607
 1028 FORMAT (' DEFORMATIONS READ:')                                    VARI-608
 1029 FORMAT (' FOLDING PARAMETERS:',3F10.5/(20X,3F10.5))               VARI-609
 1030 FORMAT (/' BETA(I,J) FOR  L   K',9X,'V',9X,'W',8X,'VS',8X,'WS',7X,VARI-610
     1'VSO',7X,'WSO',6X,'COUL S.O. COUL'/(5X,I5,5X,I2,2X,I2,2X,8F10.5)) VARI-611
 1031 FORMAT (/10X,'WITHOUT HEAVY ION CORRECTION:'/)                    VARI-612
 1032 FORMAT (5X,I5,5X,I2,2X,I2,2X,8F10.5)                              VARI-613
 1033 FORMAT (/' *** NUCLEAR VARIABLES ***'//(1X,6F20.6))               VARI-614
 1034 FORMAT (/' *** NUCLEAR MATRIX ELEMENTS ***'//(1X,6F20.6))         VARI-615
 1035 FORMAT (/' *** SPIN-ORBIT PARAMETRISATION ***'//1X,6F20.6/)       VARI-616
 1036 FORMAT (/' *** HAUSER-FESHBACH CORRECTIONS ***'//1X,5F20.6/)      VARI-617
 1037 FORMAT (/' *** GIANT DIPOLE RESONANCE PARAM. ***'//1X,5F20.6/)    VARI-618
 1038 FORMAT (/' *** DENSITY OF STATES ***'//(1X,I3,'  SA:',D13.6,6X,'UXVARI-619
     1:',D13.6,5X,'TAU:',D13.6,6X,'SG:',D13.6/28X,'E0:',D13.6,6X,'EX:',DVARI-620
     213.6,7X,'Z:',F5.0))                                               VARI-621
 1039 FORMAT (/' *** GAMMA TRANSMISSION COEFFICIENTS ***'//(1X,4(I5,F20.VARI-622
     16)))                                                              VARI-623
 1040 FORMAT (/' *** FISSION DATA ***'//(1X,2(I5,2F20.6)))              VARI-624
 1041 FORMAT (/' *** DISPERSION RELATION PARAMETERS ***'//(' POTENTIAL',VARI-625
     1I5/1X,6F20.6/1X,6F20.6/1X,F20.6))                                 VARI-626
 1042 FORMAT (' NO OPTICAL PARAMETER INDEX LARGER THAN',I3)             VARI-627
 1043 FORMAT (' NO CHANGE OF COULOMB CHARGES.')                         VARI-628
 1044 FORMAT (' NO EXTERNAL OPTICAL PARAMETER LARGER THAN',I5)          VARI-629
 1045 FORMAT (' VARIABLE',I3,' DEFINED BY',I5,' CANNOT BE USED.'/' THE PVARI-630
     1ARAMETER WHICH CAN BE SEARCHED ARE BETWEEN:'/(4(5X,I6,' TO',I6))) VARI-631
 1046 FORMAT (' FOR A FORM FACTOR GIVEN BY POINTS, THE TWO MULTIPLICATIVVARI-632
     1E FACTOR ONLY CAN BE CHANGED.')                                   VARI-633
 1047 FORMAT (' THE COUPLING OF TWO PARTICLE STATES CANNOT BE CHANGED.')VARI-634
 1048 FORMAT (' ONLY THE OSCILLATOR PARAMETER CAN BE CHANGED FOR A LAGUEVARI-635
     1RRE POLYNOMIAL.')                                                 VARI-636
 1049 FORMAT (' MASSES AND PRODUCT OF CHARGES CANNOT BE CHANGED FOR A SIVARI-637
     1NGLE PARTICLE STATE.')                                            VARI-638
 1050 FORMAT (' NO INDEX FOR DEFORMATION OF A GIVEN POTENTIAL LARGER THAVARI-639
     1N 8.')                                                            VARI-640
 1051 FORMAT (' THE VARIABLE',I3,' CANNOT BE USED BECAUSE ',I5,'  IS A VVARI-641
     1ARIATION OF THE DEFORMATIONS OF POTENTIAL',I3,' WHICH ARE ZERO.') VARI-642
 1052 FORMAT (' NO INDEX FOR MULTIPOLE LARGER THAN',I3)                 VARI-643
 1053 FORMAT (' THE VARIABLE',I3,' CANNOT BE USED BECAUSE ',I5,'  IS A VVARI-644
     1ARIATION FOR A GIVEN MULTIPOLE',I3,' AND THEY ARE ZERO.')         VARI-645
 1054 FORMAT (' NO INDEX FOR INDIVIDUAL MULTIPOLE LARGER THAN',I3)      VARI-646
 1055 FORMAT (' NO INDEX FOR INDIVIDUAL MULTIPOLE EQUAL TO 0 OR 9 MODULOVARI-647
     1 10.')                                                            VARI-648
 1056 FORMAT (' NO INDEX FOR NUCLEAR PARAMETER LARGER THAN',I3)         VARI-649
 1057 FORMAT (' NO INDEX FOR NUCLEAR MATRIX ELEMENT LARGER THAN',I3)    VARI-650
 1058 FORMAT (' NO HAUSER-FESHBACH CORRECTIONS.')                       VARI-651
 1059 FORMAT (' PARAMETER NOT USED FOR SIMPLIFIED COMPOUND NUCLEUS.')   VARI-652
 1060 FORMAT (' NO GAMMA EMISSION IN COMPOUND NUCLEUS.')                VARI-653
 1061 FORMAT (' NO WIDTH FLUCTUATION IN COMPOUND NUCLEUS.')             VARI-654
 1062 FORMAT (' PARAMETER NOT USED IN THIS KIND OF COMPOUND NUCLEUS.')  VARI-655
 1063 FORMAT (' NO PARAMETRISATION OF SOIN-ORBIT DEFORMATION.')         VARI-656
 1064 FORMAT (' THIS LEVEL DENSITY PARAMETER IS NOT USED.')             VARI-657
 1065 FORMAT (' THERE ARE ONLY',I3,' SETS OF DISPERSION PARAMETERS.')   VARI-658
 1066 FORMAT (' THE COEFFICIENTS OF THIS DISPERSION RELATION SHOULD BE RVARI-659
     1EAD EACH TIME AND CANNOT BE IN SEARCH.')                          VARI-660
 1067 FORMAT (' THIS COEFFICIENT OF DISPERSION RELATION IS NOT USED.')  VARI-661
 1068 FORMAT (' VARIABLE',I3,' DEFINED BY',I5,I4,' CANNOT BE USED.'///' VARI-662
     1IN VARI  ...  STOP  ...')                                         VARI-663
      END                                                               VARI-664
C 15/08/12                                                      ECIS12  EVAL-000
      SUBROUTINE EVAL(NW,DW,CM,LO)                                      EVAL-001
C THIS SUBROUTINE CHANGES SOME PARAMETERS TO DO A NEW CALCULATION.      EVAL-002
C THE VALUES READ HERE ARE ABSOLUTE CHANGES ( NEX=0 ),                  EVAL-003
C RELATIVE CHANGES ( NEX>0 ) OR PERCENTAGES ( NEX<0 ).                  EVAL-004
C IF THE LABORATORY ENERGY IS CHANGED, COULOMB FUNCTIONS AND REDUCED    EVAL-005
C NUCLEAR MATRIX ELEMENTS ARE RECALCULATED EVEN IF THEY ARE NOT MODIFIEDEVAL-006
C IF NUCLEAR PARAMETERS ARE CHANGED, REDUCED NUCLEAR MATRIX ELEMENTS AREEVAL-007
C CALCULATED AGAIN. IN ALL THE OTHERS CASES, THE COMPUTATION RESTARTS   EVAL-008
C WITH THE COMPUTATION OF POTENTIALS.                                   EVAL-009
C INDEXES FOR PARAMETERS ARE THE ONES USED IN SEARCH (SEE VARI).        EVAL-010
C HOWEVER 0 MEANS ENERGY IN THE LABORATORY SYSTEM.                      EVAL-011
C INPUT:     NW:      WORKING AREA FOR INTEGERS.                        EVAL-012
C            DW:      WORKING AREA FOR DOUBLE PRECISION IN EQUIVALENCE  EVAL-013
C                     BY CALL WITH NW.                                  EVAL-014
C            CM:      NUCLEAR MASS.                                     EVAL-015
C            LO:      LOGICAL CONTROLS:                                 EVAL-016
C               LO(1)  =.TRUE. ROTATIONAL MODEL-(.F.:VIBRATIONAL MODEL).EVAL-017
C               LO(3)  =.TRUE. ANHARMONIC VIBRATIONAL OR ASYMMETRIC     EVAL-018
C                              ROTATIONAL MODEL.                        EVAL-019
C               LO(4)  =.TRUE. PARAMETRISED SPIN-ORBIT DEFORMATION.     EVAL-020
C               LO(6)  =.TRUE. USE DEFORMATION LENGTHS.                 EVAL-021
C               LO(7)  =.TRUE. MATRIX ELEMENT AND FORM FACTORS READ.    EVAL-022
C               LO(8)  =.TRUE. RELATIVISTIC KINEMATICS.                 EVAL-023
C               LO(16) =.TRUE. HEAVY-ION DEFINITION OF REDUCED RADII ANDEVAL-024
C                              DEFORMATIONS.                            EVAL-025
C               LO(32) =.TRUE. AUTOMATIC SEARCH ON SOME PARAMETERS.     EVAL-026
C               LO(34) =.TRUE. NEXT CALCULATION CHANGING ENERGY AND/OR  EVAL-027
C                              SOME PARAMETERS.                         EVAL-028
C               LO(75) =.TRUE. NO COMPLETE OUTPUT AT THE FIRST RUN OF A EVAL-029
C                              SEARCH.                                  EVAL-030
C               LO(76) =.TRUE. LO(51) TO LO(65) ARE ALWAYS USED.        EVAL-031
C               LO(81) =.TRUE. HAUSER-FESHBACH CORRECTIONS.             EVAL-032
C               LO(82) =.TRUE. OLD SIMPLIFIED COMPOUND NUCLEUS.         EVAL-033
C               LO(86) =.TRUE. GAMMA EMISSION IN COMPOUND NUCLEUS.      EVAL-034
C               LO(87) =.TRUE. NO WIDTH FLUCTUATIONS.                   EVAL-035
C               LO(111)=.TRUE. NUCLEAR PARAMETERS ARE CHANGED IN SEARCH.EVAL-036
C               LO(112)=.TRUE. SPIN-ORBIT OR COMPOUND NUCLEUS PARAMETERSEVAL-037
C                              ARE CHANGED IN SEARCH.                   EVAL-038
C               LO(113)=.TRUE. DISPERSION RELATION IS CHANGED IN SEARCH.EVAL-039
C               LO(114)=.TRUE. COMPOUND NUCLEUS CONTINUUM IS CHANGED IN EVAL-040
C                              SEARCH.                                  EVAL-041
C               LO(115)=.TRUE. FIRST COMPUTATION FOR THIS ENERGY.       EVAL-042
C               LO(116)=.TRUE. NO OUTPUT.                               EVAL-043
C                                                                       EVAL-044
C FOR THE COMMONS /ADDRE/, /INTEG/ AND /TITRE/ SEE CALC.                EVAL-045
C FOR THE COMMONS /COUPL/, /DCHI2/, AND /NCOMP/ SEE CALX.               EVAL-046
C                                                                       EVAL-047
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /ADDRE/:                     EVAL-048
C  NWV:       NON INTEGER VALUES FOR THE CHANNELS.                      EVAL-049
C  NIPP:      DISPERSION PARAMETERS.                                    EVAL-050
C  NSCN:      LEVEL DENSITY DESCRIPTION.                                EVAL-051
C  NPOT:      OPTICAL POTENTIAL PARAMETERS.                             EVAL-052
C  NBETA:     DEFORMATION PARAMETERS.                                   EVAL-053
C  NIW:       INTEGER WORKING FIELD FOR THE SEARCH.                     EVAL-054
C  NT:        TABLE OF REDUCED NUCLEAR MATRIX ELEMENTS.                 EVAL-055
C  NIVQ:      TABLE OF MULTIPOLES.                                      EVAL-056
C  NIVY:      TABLE OF FORM FACTOR IDENTIFICATION IVY (FOR COMPUTATION).EVAL-057
C  NCX:       FIRST FREE ADDRESS FOR COMPUTATION OF POTENTIALS.         EVAL-058
C             HERE, FIRST FREE ADDRESS FOR INPUT.                       EVAL-059
C   USED:     NWV,NIPP,NSCN,NPOT,NBETA,NIW,NT,NIVQ,NIVY,NCX.            EVAL-060
C                                                                       EVAL-061
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /COUPL/:                     EVAL-062
C  NPP:       NUMBER OF OPTICAL POTENTIALS.                             EVAL-063
C  NVA:       NUMBER OF NUCLEAR PARAMETERS.                             EVAL-064
C   USED:     NPP,NVA.                                                  EVAL-065
C                                                                       EVAL-066
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCHI2/:                     EVAL-067
C  CHI2M:     MINIMUM CHI-SQUARE IN THE SEARCH.                         EVAL-068
C  YY(1):     STEP SIZE IN THE SEARCH.                                  EVAL-069
C  YY(3):     VARIOUS MEANINGS.  SEE FITE.                              EVAL-070
C   DEFINED:  CHI2M,YY.                                                 EVAL-071
C                                                                       EVAL-072
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /INTEG/:                     EVAL-073
C  IDMT:      TOTAL WORKING FIELD LENGTH AS DOUBLE PRECISION.           EVAL-074
C  NBET:      NUMBER OF DIFFERENT DEFORMATIONS (VIBRATIONS+ROTATIONS).  EVAL-075
C   USED:     IDMT,NBET.                                                EVAL-076
C                                                                       EVAL-077
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /NCOMP/:                     EVAL-078
C  NFISS:     NUMBER OF FISSION TRANSMISSION COEFFICIENTS.              EVAL-079
C  NRD:       NUMBER OF GAMMA TRANSMISSION COEFFICIENTS.                EVAL-080
C  NCONT:     NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS.                 EVAL-081
C  NCONS:     NUMBER OF LEVEL DENSITIES NEEDED.                         EVAL-082
C  NCOLX:     TOTAL NUMBER OF LEVELS WITHOUT DISCRETISATION.            EVAL-083
C  AZ(I):     SPIN-ORBIT PARAMETRISATION FOR I-1 TO 6,                  EVAL-084
C             HAUSER FESHBACH PARAMETERS FOR J=7 TO 11,                 EVAL-085
C             GIANT DIPOLE RESONANCE FOR I=12 TO 16.                    EVAL-086
C   DEFINED:  AZ.                                                       EVAL-087
C   USED:     NFISS,NRD,NCONT,NCONS,NCOLX,AZ.                           EVAL-088
C                                                                       EVAL-089
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /TITRE/:                     EVAL-090
C  TITLE(18): TITLE OF THE RUN PRINTED AS HEADING OF RESULTS.           EVAL-091
C   DEFINED:  TITLE.                                                    EVAL-092
C                                                                       EVAL-093
C MEANING OF INDEX AND LOGICAL RETURNED:                                EVAL-094
C      1-1000      OPTICAL MODEL,FOLDING PARAMETERS.                    EVAL-095
C   1001-2000      DEFORMATIONS FOR A GIVEN POTENTIAL.                  EVAL-096
C   2001-3000      DEFORMATIONS FOR A GIVEN MULTIPOLE.                  EVAL-097
C   3001-4000      INDIVIDUAL DEFORMATION.                              EVAL-098
C   4001-5000      NUCLEAR MODEL PARAMETER.             - LO(111)=.TRUE.EVAL-099
C   5001-6000      NUCLEAR MATRIX ELEMENT.                              EVAL-100
C   6001-7000      SPIN-ORBIT AND COMPOUND NUCLEUS PARAMETRISATION.     EVAL-101
C                  SPIN-ORBIT PARAMETRISATION:                          EVAL-102
C                  BZ1, BZ2, BZ3, BZ4, BZ5              - LO(112)=.TRUE.EVAL-103
C                  TGO, BN, FNUG, EGD, GGD              - LO(112)=.TRUE.EVAL-104
C                  SA, UX, TAU, SG, E0, EX FOR GAMMA    - LO(112)=.TRUE.EVAL-105
C                  SA, UX, TAU, SG, E0, EX FOR CONTINUUM- LO(114)=.TRUE.EVAL-106
C                  GAMMA TRANSMISSION FACTORS                           EVAL-107
C                  FISSION TRANSMISSION COEFFICIENT, DEGREE OF FREEDOM  EVAL-108
C   7001-8000      DISPERSION RELATIONS PARAMETRISATION - LO(113)=.TRUE.EVAL-109
C  10001-99999     EXTERNAL OPTICAL MODEL (PARAMETERS ABOVE 1000)       EVAL-110
C IT STOPS THE CALCULATION FOR AN INDEX OF PARAMETER OUT OF RANGE       EVAL-111
C                                                                       EVAL-112
C***********************************************************************EVAL-113
      IMPLICIT REAL*8 (A-H,O-Z)                                         EVAL-114
      LOGICAL LO(150),LX                                                EVAL-115
      DIMENSION NW(2,*),DW(*)                                           EVAL-116
      CHARACTER*4 AA(2),TITLE                                           EVAL-117
      CHARACTER*8 BB(2,2)                                               EVAL-118
      COMMON /ADDRE/ NIPH,NJIT,NWV,NIPP,NPAR,NPAA,NSCN,NFIS,NGAM,NNIV,NPEVAL-119
     1OT,NBETA,NFM,NTGX,NDONN,NNVI,NDE,NISE,NRC,NIW,NNWI,NCC,MCC,NXA,NAMEVAL-120
     21,NFAC,NFG,NXG,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,NXD,MWV,NIXT,NEVAL-121
     3TY,NSM,NTX,NRY,NRCO,NRDO,NVC1,NVC2,NNC,NCX                        EVAL-122
      COMMON /COUPL/ IQM,IQMAX,NBT1,NFA,NPP,NSPIN,NVA                   EVAL-123
      COMMON /DCHI2/ CHI2,CHI2M,YY(3)                                   EVAL-124
      COMMON /INOUT/ MR,MW,MS                                           EVAL-125
      COMMON /INTEG/ IDMT,NPLACE,NCOLL,NJMAX,ITERM,JDM,JIT,KMIN,KMAX,NCOEVAL-126
     1LS,NCOLT,NBET,LMX,LMAX1,NLT,ISM,NJC,JTX,KCC,MS1,MS2,KBA,KAB,KBC,JTEVAL-127
     2H,NCOLR,NREC,NTOT,LMAX2,KE,ITEMM,KXT,LMAX3,NRZ,NTZ,IPM,IPK,MCM(2),EVAL-128
     3NCT(6)                                                            EVAL-129
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQEVAL-130
     1,ACN1,ACN2,AZ(18)                                                 EVAL-131
      COMMON /TITRE/ TITLE(18)                                          EVAL-132
      DATA AA /' NEW','LAST'/                                           EVAL-133
      DATA BB /'INCREASE','S )     ','NEW VALU','ES )    '/             EVAL-134
      NVAT=42*NPP                                                       EVAL-135
      LO(34)=.FALSE.                                                    EVAL-136
      LX=.FALSE.                                                        EVAL-137
      READ (MR,1000) LO(34),LX,NIN,NEX,YY(1)                            EVAL-138
      IF (LX) READ (MR,1001) TITLE                                      EVAL-139
      NX=MIN0(1,MAX0(NEX,-1))+2                                         EVAL-140
      I1=1                                                              EVAL-141
      I2=1                                                              EVAL-142
      IF (.NOT.LO(34)) I1=2                                             EVAL-143
      IF (NX.EQ.2) I2=2                                                 EVAL-144
      WRITE (MW,1002) AA(I1),NIN,BB(1,I2),BB(2,I2)                      EVAL-145
      IF (NX.EQ.1) WRITE (MW,1003)                                      EVAL-146
      DO 1 I=111,120                                                    EVAL-147
    1 LO(I)=.FALSE.                                                     EVAL-148
      IF (NCX+2*NIN.GT.IDMT) CALL MEMO('EVAL',IDMT,NCX+2*NIN)           EVAL-149
      READ (MR,1004) (NW(1,2*I+NCX-2),I=1,NIN)                          EVAL-150
      READ (MR,1005) (DW(2*I+NCX-1),I=1,NIN)                            EVAL-151
      DO 50 I=1,NIN                                                     EVAL-152
      NW(1,2*I+NCX-2)=MAX0(0,NW(1,2*I+NCX-2))                           EVAL-153
      J=MOD(NW(1,2*I+NCX-2),1000)                                       EVAL-154
      IK=(NW(1,2*I+NCX-2)+999)/1000                                     EVAL-155
      EY=DW(2*I+NCX-1)                                                  EVAL-156
      IF (IK.NE.0) GO TO 7                                              EVAL-157
C ENERGY IN THE LABORATORY SYSTEM.                                      EVAL-158
      LO(115)=.TRUE.                                                    EVAL-159
      DW(NWV+12)=EY                                                     EVAL-160
      EX=DW(NWV+2)                                                      EVAL-161
      IF (NX.EQ.1) EY=.01D0*EY*EX                                       EVAL-162
      IF (NX.NE.2) EY=EX+EY                                             EVAL-163
      IF (LO(8)) GO TO 2                                                EVAL-164
      DW(NWV+2)=EY*DW(NWV+1)/(DW(NWV)+DW(NWV+1))                        EVAL-165
      GO TO 3                                                           EVAL-166
C RELATIVISTIC C.-M. ENERGY ECM=SQRT((M1+M2)**2+2*M2*ELAB))-M1-M2.      EVAL-167
    2 DW(NWV+2)=CM*(DSQRT((DW(NWV)+DW(NWV+1))**2+2.D0*DW(NWV+1)*EY/CM)-DEVAL-168
     1W(NWV)-DW(NWV+1))                                                 EVAL-169
    3 WRITE (MW,1006) I,J,EY,DW(2*I+NCX-1),DW(NWV+2),EX                 EVAL-170
      IF (NCOLX.EQ.1) GO TO 50                                          EVAL-171
      DO 5 J=2,NCOLX                                                    EVAL-172
      DW(NWV+22*J-20)=DW(NWV+22*J-20)+DW(NWV+2)-EX                      EVAL-173
      IF (LO(8)) GO TO 4                                                EVAL-174
      DW(NWV+22*J-10)=DW(NWV+22*J-20)*(DW(NWV+22*J-22)+DW(NWV+22*J-21))/EVAL-175
     1DW(NWV+22*J-21)                                                   EVAL-176
      GO TO 5                                                           EVAL-177
    4 DW(NWV+22*J-10)=DW(NWV+22*J-20)*(DW(NWV+22*J-20)/(2.D0*CM)+DW(NWV+EVAL-178
     122*J-22)+DW(NWV+22*J-21))/DW(NWV+22*J-21)                         EVAL-179
    5 CONTINUE                                                          EVAL-180
      GO TO 50                                                          EVAL-181
    6 IF (NEX.LT.0) EY=.01D0*EY*EX                                      EVAL-182
      EY=EX+EY                                                          EVAL-183
      GO TO ( 18 , 23 , 29 , 34 , 36 , 38 , 40 , 49 ),IK                EVAL-184
    7 IF (IK.GT.10) GO TO 8                                             EVAL-185
      IF (IK.GT.8) GO TO 52                                             EVAL-186
      GO TO ( 9 , 19 , 25 , 31 , 35 , 37 , 39 , 48 ),IK                 EVAL-187
    8 IK=1                                                              EVAL-188
      J=NW(1,2*I+NCX-2)-9000                                            EVAL-189
    9 IF (LO(7)) GO TO 11                                               EVAL-190
C OPTICAL MODEL AND FOLDING PARAMETERS.                                 EVAL-191
      N=1+MOD(J-1,45)                                                   EVAL-192
      M=1+(J-1)/45                                                      EVAL-193
      K=IABS(NW(1,NIPP+17*M-17))                                        EVAL-194
      IF (J.GT.NVAT.OR.N.EQ.25) GO TO 53                                EVAL-195
      IF (MOD(N,4).NE.2.OR.N.GT.32) GO TO 10                            EVAL-196
      EX=DW(NWV+22*K-21)**.33333333333333D0                             EVAL-197
      IF (LO(16)) EX=EX+DW(NWV+22*K-22)**.33333333333333D0              EVAL-198
      EY=EY*EX                                                          EVAL-199
   10 EX=DW(NPOT+J-1)                                                   EVAL-200
      IF (NX.NE.2) GO TO 6                                              EVAL-201
      GO TO 18                                                          EVAL-202
C EXTERNAL OPTICAL PARAMETERS.                                          EVAL-203
   11 IF (J.GE.NW(2,NPOT+1)) GO TO 54                                   EVAL-204
      I1=NW(1,NPOT)-2                                                   EVAL-205
      DO 12 L=1,I1                                                      EVAL-206
      IF (J.GE.NW(1,NPOT+L).AND.J.LE.NW(2,NPOT+L)) GO TO 13             EVAL-207
   12 CONTINUE                                                          EVAL-208
      GO TO 55                                                          EVAL-209
   13 EX=DW(NPOT+J-1)                                                   EVAL-210
      IF (L.EQ.1) GO TO 17                                              EVAL-211
C NOT A FOLDING PARAMETER.                                              EVAL-212
      M=NW(1,NPOT+L)                                                    EVAL-213
      N=NW(2,NPOT+M-2)                                                  EVAL-214
      IV=NW(2,NPOT+N-1)                                                 EVAL-215
      IF (IV.LT.1.OR.IV.GT.6) GO TO 16                                  EVAL-216
      NST=NW(1,NPOT+N+1)                                                EVAL-217
      IF (NST.GT.0) GO TO 18                                            EVAL-218
      IT1=MOD(NW(1,NPOT+N-1)-1,8)+1                                     EVAL-219
      J1=(NW(1,NPOT+N-1)-1)/8                                           EVAL-220
      J2=4                                                              EVAL-221
      IF (IT1.GT.6) J2=5                                                EVAL-222
      IF (J-M.GT.1.AND.J-M.LT.J2) GO TO 17                              EVAL-223
      K=IABS(NST)                                                       EVAL-224
      FX=DW(NWV+22*K-21)**.33333333333333D0                             EVAL-225
      FY=FX                                                             EVAL-226
      IF (LO(16)) FX=FX+DW(NWV+22*K-22)**.33333333333333D0              EVAL-227
C TRANSFORMATION OF DEPTH AND RADIUS.                                   EVAL-228
      IF (J-M.EQ.1) EY=EY*FX                                            EVAL-229
      FY=FY/FX                                                          EVAL-230
      IF (J.GT.M+2) GO TO 15                                            EVAL-231
      IF ((.NOT.LO(16)).OR.J1.LE.NPP.OR.J.NE.M) GO TO 17                EVAL-232
      ITYZ=IV                                                           EVAL-233
      IF (ITYZ.GE.5) ITYZ=ITYZ-4                                        EVAL-234
      ITYW=1                                                            EVAL-235
      IF (IT1.LE.6) GO TO 14                                            EVAL-236
      ITI=7*(J1-NPP)                                                    EVAL-237
      ITYW=ITYW*NW(2-MOD(ITI,2),NIVY+(ITI-1)/2)                         EVAL-238
   14 IF (LO(6)) ITYW=ITYW-1                                            EVAL-239
      IF (ITYZ.GT.1) EY=EY*FY**((ITYZ-1)*ITYW)                          EVAL-240
      GO TO 17                                                          EVAL-241
C TRANSFORMATION OF DEFORMATIONS.                                       EVAL-242
   15 J3=J-M-J2                                                         EVAL-243
      IF (IT1.LT.7) J3=0                                                EVAL-244
      IF (.NOT.LO(6)) J3=J3+1                                           EVAL-245
      EY=EY*FY**J3                                                      EVAL-246
      GO TO 17                                                          EVAL-247
   16 IF ((IV.LT.0).AND.(J-M.GT.1)) GO TO 56                            EVAL-248
      IF ((IV.NE.7).AND.(IV.NE.8)) GO TO 17                             EVAL-249
      JY=J                                                              EVAL-250
      IF (NW(1,NPOT+NW(2,NPOT+M-2)).NE.1) JY=JY-1                       EVAL-251
      IF (M.GT.JY) GO TO 57                                             EVAL-252
      IF ((IV.EQ.7).AND.(MOD(JY-M,3).NE.0)) GO TO 58                    EVAL-253
      IF ((IV.EQ.8).AND.(MOD(JY+10-M,11).LT.3)) GO TO 59                EVAL-254
   17 IF (NX.NE.2) GO TO 6                                              EVAL-255
   18 IF (.NOT.LO(7)) WRITE (MW,1007) I,J,N,M,EY,DW(2*I+NCX-1),DW(NPOT+JEVAL-256
     1-1)                                                               EVAL-257
      IF (LO(7)) WRITE (MW,1008) I,J,EY,DW(2*I+NCX-1),DW(NPOT+J-1)      EVAL-258
      DW(NPOT+J-1)=EY                                                   EVAL-259
      GO TO 50                                                          EVAL-260
   19 IF (J.GT.8) GO TO 60                                              EVAL-261
C DEFORMATIONS FOR A GIVEN POTENTIAL.                                   EVAL-262
      K2=J                                                              EVAL-263
      DO 20 K1=1,NBET                                                   EVAL-264
      IF (LO(1).AND.LO(3).AND.NW(2,NBETA+9*K1-1).NE.0) GO TO 20         EVAL-265
      IF (DW(NBETA+K2+9*K1-10).NE.0.D0) GO TO 21                        EVAL-266
   20 CONTINUE                                                          EVAL-267
      GO TO 61                                                          EVAL-268
   21 EY=EY/DW(NBETA+K2+9*K1-10)                                        EVAL-269
      K3=1                                                              EVAL-270
      IF ((NX.NE.1).AND.LO(16)) GO TO 32                                EVAL-271
   22 EX=1                                                              EVAL-272
      IF (NX.NE.2) GO TO 6                                              EVAL-273
   23 WRITE (MW,1009) I,NW(1,2*I+NCX-2),K2,K1,EY,DW(2*I+NCX-1)          EVAL-274
      DO 24 L=K1,NBET                                                   EVAL-275
      IF (LO(1).AND.LO(3).AND.NW(2,NBETA+9*K1-1).NE.0) GO TO 24         EVAL-276
      EX=DW(NBETA+K2+9*L-10)*EY                                         EVAL-277
      WRITE (MW,1010) K2,L,EX,DW(NBETA+K2+9*L-10)                       EVAL-278
      DW(NBETA+K2+9*L-10)=EX                                            EVAL-279
   24 CONTINUE                                                          EVAL-280
      GO TO 50                                                          EVAL-281
C DEFORMATIONS FOR A GIVEN MULTIPOLE.                                   EVAL-282
   25 K1=J                                                              EVAL-283
      IF (J.GT.NBET) GO TO 62                                           EVAL-284
      DO 26 K2=1,8                                                      EVAL-285
      IF (DW(NBETA+K2+9*K1-10).NE.0.D0) GO TO 27                        EVAL-286
   26 CONTINUE                                                          EVAL-287
      GO TO 63                                                          EVAL-288
   27 EY=EY/DW(NBETA+K2+9*K1-10)                                        EVAL-289
      K3=2                                                              EVAL-290
      IF ((NX.NE.1).AND.LO(16)) GO TO 22                                EVAL-291
   28 EX=1                                                              EVAL-292
      IF (NX.NE.2) GO TO 6                                              EVAL-293
   29 WRITE (MW,1009) I,NW(1,2*I+NCX-2),K2,K1,EY,DW(2*I+NCX-1)          EVAL-294
      DO 30 L=K2,8                                                      EVAL-295
      EX=DW(NBETA+L+9*K1-10)*EY                                         EVAL-296
      WRITE (MW,1010) L,K1,EX,DW(NBETA+L+9*K1-10)                       EVAL-297
   30 DW(NBETA+L+9*K1-10)=EX                                            EVAL-298
      GO TO 50                                                          EVAL-299
C INDIVIDUAL DEFORMATIONS.                                              EVAL-300
   31 NBT=10*NBET                                                       EVAL-301
      IF (J.GT.NBT) GO TO 64                                            EVAL-302
      K1=1+(J-1)/10                                                     EVAL-303
      K2=1+MOD(J-1,10)                                                  EVAL-304
      IF (K2.GT.8) GO TO 65                                             EVAL-305
      K3=3                                                              EVAL-306
      IF (.NOT.LO(16)) GO TO 33                                         EVAL-307
C SEARCH OF THE CORRECTIONS FOR HEAVY IONS.                             EVAL-308
   32 EX=DW(NWV+1)**.33333333333333D0/(DW(NWV+1)**.33333333333333D0+DW(NEVAL-309
     1WV)**.33333333333333D0)                                           EVAL-310
      JK=1                                                              EVAL-311
      IF (.NOT.LO(1).AND.LO(3)) JK=K1-1                                 EVAL-312
      K=JK                                                              EVAL-313
      IF (K2.GT.6) K=K*NW(1,NBETA+9*K1-1)                               EVAL-314
      IF (LO(6)) K=K-JK                                                 EVAL-315
      EY=EY*EX**K                                                       EVAL-316
      IF (K3-2) 22 , 28 , 33                                            EVAL-317
   33 EX=DW(NBETA+K2+9*K1-10)                                           EVAL-318
      IF (NX.NE.2) GO TO 6                                              EVAL-319
   34 WRITE (MW,1011) I,NW(1,2*I+NCX-2),K2,K1,EY,DW(2*I+NCX-1),DW(NBETA+EVAL-320
     1K2+9*K1-10)                                                       EVAL-321
      DW(NBETA+K2+9*K1-10)=EY                                           EVAL-322
      GO TO 50                                                          EVAL-323
   35 IF (J.GT.NVA) GO TO 66                                            EVAL-324
      EX=DW(NPAA+J-1)                                                   EVAL-325
      IF (NX.NE.2) GO TO 6                                              EVAL-326
   36 WRITE (MW,1012) I,NW(1,2*I+NCX-2),J,EY,DW(2*I+NCX-1),DW(NPAA+J-1) EVAL-327
      DW(NPAA+J-1)=EY                                                   EVAL-328
      GO TO 50                                                          EVAL-329
C  NUCLEAR MATRIX ELEMENTS.                                             EVAL-330
   37 I3=(NIVQ-NT)/3                                                    EVAL-331
      IF (J.GT.I3) GO TO 67                                             EVAL-332
      EX=DW(NT+3*J-3)                                                   EVAL-333
      LO(111)=.TRUE.                                                    EVAL-334
      IF (NX.NE.2) GO TO 6                                              EVAL-335
   38 WRITE (MW,1013) I,NW(1,2*I+NCX-2),J,EY,DW(2*I+NCX-1),DW(NT+3*J-3) EVAL-336
      DW(NT+3*J-3)=EY                                                   EVAL-337
      GO TO 50                                                          EVAL-338
C SPIN-ORBIT PARAMETRISATION.                                           EVAL-339
   39 IF (J.GT.6) GO TO 41                                              EVAL-340
      IF (.NOT.LO(4)) GO TO 68                                          EVAL-341
      EX=AZ(J)                                                          EVAL-342
      IF (NX.NE.2) GO TO 6                                              EVAL-343
   40 IF (J.GT.6) GO TO 43                                              EVAL-344
      WRITE (MW,1014) I,NW(1,2*I+NCX-2),J,EY,DW(2*I+NCX-1),AZ(J)        EVAL-345
      GO TO 45                                                          EVAL-346
C HAUSER-FESBACH CORRECTION.                                            EVAL-347
   41 IF (.NOT.LO(81)) GO TO 69                                         EVAL-348
      IF (J.GT.16) GO TO 46                                             EVAL-349
      IF (LO(82).AND.J.GT.9) GO TO 70                                   EVAL-350
      IF ((.NOT.LO(86)).AND.J.GT.11) GO TO 70                           EVAL-351
      IF (LO(82)) GO TO 42                                              EVAL-352
      IF (J.NE.9.AND.J.LE.11.AND.LO(87)) GO TO 70                       EVAL-353
      IF (LO(87)) GO TO 42                                              EVAL-354
      IF (J.EQ.7) GO TO 70                                              EVAL-355
      IF (AZ(8).NE.0.D0.AND.J.GT.8.AND.J.LE.11) GO TO 70                EVAL-356
      IF (AZ(8).EQ.0.D0.AND.J.EQ.8) GO TO 70                            EVAL-357
   42 EX=AZ(J)                                                          EVAL-358
      IF (NX.NE.2) GO TO 6                                              EVAL-359
   43 IF (J.GT.16) GO TO 47                                             EVAL-360
      LO(112)=.TRUE.                                                    EVAL-361
      K=J-6                                                             EVAL-362
      IF (K.GT.6) GO TO 44                                              EVAL-363
      WRITE (MW,1015) I,NW(1,2*I+NCX-2),K,EY,DW(2*I+NCX-1),AZ(J)        EVAL-364
      GO TO 45                                                          EVAL-365
   44 K=J-5                                                             EVAL-366
      WRITE (MW,1016) I,NW(1,2*I+NCX-2),K,EY,DW(2*I+NCX-1),AZ(J)        EVAL-367
   45 AZ(J)=EY                                                          EVAL-368
      GO TO 50                                                          EVAL-369
   46 JJ=J-16+(J-16)/6                                                  EVAL-370
      EX=DW(NSCN+JJ-1)                                                  EVAL-371
      IF (NX.NE.2) GO TO 6                                              EVAL-372
   47 K=1+(J-17)/NCONS                                                  EVAL-373
      L=1+MOD(J-17,NCONS)                                               EVAL-374
      IF (K.EQ.NCONS-NCONT) LO(112)=.TRUE.                              EVAL-375
      IF (K.GT.NCONS-NCONT) LO(114)=.TRUE.                              EVAL-376
      WRITE (MW,1017) I,NW(1,2*I+NCX-2),L,K,EY,DW(2*I+NCX-1),DW(NSCN+JJ-EVAL-377
     11)                                                                EVAL-378
      DW(NSCN+JJ-1)=EY                                                  EVAL-379
      GO TO 50                                                          EVAL-380
C DISPERSION PARAMETERS.                                                EVAL-381
   48 IF (.NOT.LO(10)) GO TO 71                                         EVAL-382
      K=(J-1)/13+1                                                      EVAL-383
      IF (K.GT.NPP) GO TO 72                                            EVAL-384
      IF (NW(2,NIPP+17*K-14).NE.0) GO TO 73                             EVAL-385
      L=J-13*K+17                                                       EVAL-386
      LO(113)=.TRUE.                                                    EVAL-387
      EX=DW(NIPP+17*K+L-17)                                             EVAL-388
      IF ((EX.EQ.0.D0).OR.(EY.EQ.0.D0)) WRITE (MW,1018) EX,EY           EVAL-389
      IF (NX.NE.2) GO TO 6                                              EVAL-390
   49 WRITE (MW,1019) I,NW(1,2*I+NCX-2),L,K,EY,DW(2*I+NCX-1),DW(NIPP+17*EVAL-391
     1K+L-17)                                                           EVAL-392
      DW(NIPP+17*K+L-17)=EY                                             EVAL-393
   50 CONTINUE                                                          EVAL-394
      IF (.NOT.LO(32)) RETURN                                           EVAL-395
      CHI2M=1.D35                                                       EVAL-396
      IF (YY(1).EQ.0.D0) YY(1)=20.D0                                    EVAL-397
      YY(3)=0.D0                                                        EVAL-398
      NW(2,NIW)=NW(2,NIW)-NW(1,NIW+1)                                   EVAL-399
      NW(1,NIW+1)=1                                                     EVAL-400
      WRITE (MW,1020) NW(2,NIW),YY(1)                                   EVAL-401
      IF (NW(2,NIW).LE.0) GO TO 75                                      EVAL-402
      II=51                                                             EVAL-403
      IF (LO(76).OR.(.NOT.LO(75))) II=59                                EVAL-404
      DO 51 I=II,65                                                     EVAL-405
      LO(I+85)=LO(I)                                                    EVAL-406
   51 LO(I)=.FALSE.                                                     EVAL-407
      LO(116)=.TRUE.                                                    EVAL-408
      RETURN                                                            EVAL-409
   52 WRITE (MW,1021)                                                   EVAL-410
      GO TO 74                                                          EVAL-411
   53 WRITE (MW,1022) NVAT                                              EVAL-412
      GO TO 74                                                          EVAL-413
   54 WRITE (MW,1023) NW(2,NPOT+1)                                      EVAL-414
      GO TO 74                                                          EVAL-415
   55 WRITE (MW,1024) I,EY,J,(NW(1,NPOT+L),NW(2,NPOT+L),L=1,I1)         EVAL-416
      GO TO 74                                                          EVAL-417
   56 WRITE (MW,1025)                                                   EVAL-418
      GO TO 74                                                          EVAL-419
   57 WRITE (MW,1026)                                                   EVAL-420
      GO TO 74                                                          EVAL-421
   58 WRITE (MW,1027)                                                   EVAL-422
      GO TO 74                                                          EVAL-423
   59 WRITE (MW,1028)                                                   EVAL-424
      GO TO 74                                                          EVAL-425
   60 WRITE (MW,1029)                                                   EVAL-426
      GO TO 74                                                          EVAL-427
   61 WRITE (MW,1030) I,NW(1,2*I+NCX-2),K2                              EVAL-428
      GO TO 74                                                          EVAL-429
   62 WRITE (MW,1031) NBET                                              EVAL-430
      GO TO 74                                                          EVAL-431
   63 WRITE (MW,1032) I,NW(1,2*I+NCX-2),K1                              EVAL-432
      GO TO 74                                                          EVAL-433
   64 WRITE (MW,1033) NBT                                               EVAL-434
      GO TO 74                                                          EVAL-435
   65 WRITE (MW,1034)                                                   EVAL-436
      GO TO 74                                                          EVAL-437
   66 WRITE (MW,1035) NVA                                               EVAL-438
      GO TO 74                                                          EVAL-439
   67 WRITE (MW,1036) I3                                                EVAL-440
      GO TO 74                                                          EVAL-441
   68 WRITE (MW,1037)                                                   EVAL-442
      GO TO 74                                                          EVAL-443
   69 WRITE (MW,1038)                                                   EVAL-444
      GO TO 74                                                          EVAL-445
   70 WRITE (MW,1039)                                                   EVAL-446
      GO TO 74                                                          EVAL-447
   71 WRITE (MW,1040)                                                   EVAL-448
      GO TO 74                                                          EVAL-449
   72 WRITE (MW,1041) NPP                                               EVAL-450
      GO TO 74                                                          EVAL-451
   73 WRITE (MW,1042)                                                   EVAL-452
   74 WRITE (MW,1043) I,NW(1,2*I+NCX-2),IK,J,DW(2*I+NCX-1)              EVAL-453
   75 WRITE (MW,1044)                                                   EVAL-454
      STOP                                                              EVAL-455
 1000 FORMAT (2L1,I3,I5,F10.5)                                          EVAL-456
 1001 FORMAT (18A4)                                                     EVAL-457
 1002 FORMAT ('1',A4,' COMPUTATION WITH',I4,'  NEW PARAMETERS',10X,'( INEVAL-458
     1PUT OF ',2A8)                                                     EVAL-459
 1003 FORMAT (20X,'*** VALUES GIVEN AS PERCENTAGES ***')                EVAL-460
 1004 FORMAT (14I5)                                                     EVAL-461
 1005 FORMAT (7F10.5)                                                   EVAL-462
 1006 FORMAT (2X,I2,' PARAM.',I5,3X,'NEW LAB. ENERGY',1P,D15.8,' (',D15.EVAL-463
     18,')',3X,'CENTRE OF MASS ENERGY',D15.6,5X,'OLD VALUE',D15.6)      EVAL-464
 1007 FORMAT (2X,I2,' PARAM.',I5,3X,'VALUE OF V-OPTICAL(',I2,',',I2,') =EVAL-465
     1',1P,D15.6,' (',D15.6,')',3X,'OLD VALUE',D15.6)                   EVAL-466
 1008 FORMAT (2X,I2,' PARAM.',I5,'TH VALUE OF EXTERNAL POTENTIAL =',1P,DEVAL-467
     115.6,' (',D15.6,')',3X,'OLD VALUE',D15.6)                         EVAL-468
 1009 FORMAT (2X,I2,' PARAM.',I5,3X,'PROPORTIONAL TO BETA(',I2,',',I2,')EVAL-469
     1  WITH RATIO',1P,D15.6,' (',D15.6,')')                            EVAL-470
 1010 FORMAT (15X,'BETA(',I2,',',I2,') =',1P,D15.6,5X,'OLD VALUE',D15.6)EVAL-471
 1011 FORMAT (2X,I2,' PARAM.',I5,3X,'BETA(',I2,',',I2,') =',1P,D15.6,' (EVAL-472
     1',E15.6,')',3X,'OLD VALUE',D15.6)                                 EVAL-473
 1012 FORMAT (2X,I2,' PARAM.',I5,3X,'VAR(',I2,') =',1P,D15.6,' (',D15.6,EVAL-474
     1')',3X,'OLD VALUE',D15.6)                                         EVAL-475
 1013 FORMAT (2X,I2,' PARAM.',I5,3X,'T(4,',I3,') =',1P,D15.6,' (',D15.6,EVAL-476
     1')',3X,'OLD VALUE',D15.6)                                         EVAL-477
 1014 FORMAT (2X,I2,' PARAM.',I5,3X,'AZ(',I1,') =',1P,D15.6,' (',D15.6,'EVAL-478
     1)',3X,'OLD VALUE',D15.6)                                          EVAL-479
 1015 FORMAT (2X,I2,' PARAM.',I5,3X,'BZ(',I1,') =',1P,D15.6,' (',D15.6,'EVAL-480
     1)',3X,'OLD VALUE',D15.6)                                          EVAL-481
 1016 FORMAT (2X,I2,' PARAM.',I5,3X,'GIANT RESONANCE(',I1,') =',1P,D15.6EVAL-482
     1,' (',D15.6,')',3X,'OLD VALUE',D15.6)                             EVAL-483
 1017 FORMAT (2X,I2,' PARAM.',I5,3X,'SCN(',I3,',',I3,') =',1P,D15.6,' ('EVAL-484
     1,D15.6,')',3X,'OLD VALUE',D15.6)                                  EVAL-485
 1018 FORMAT (' NO VERIFICATION OF VALIDITY FOR THE DISPERSION PARAMETEREVAL-486
     1',1P,D15.6,' CHANGED INTO',D15.6)                                 EVAL-487
 1019 FORMAT (2X,I2,' PARAM.',I5,3X,'PIP(',I3,',',I3,') =',1P,D15.6,' ('EVAL-488
     1,D15.6,')',3X,'OLD VALUE',D15.6)                                  EVAL-489
 1020 FORMAT (' NEW MAXIMUM NUMBER OF RUNS:',I6,10X,'STARTING SCALE',F10EVAL-490
     1.2)                                                               EVAL-491
 1021 FORMAT (' NO VARIABLE IS DEFINED BY INDEX BETWEEN 8001 AND 10000.'EVAL-492
     1)                                                                 EVAL-493
 1022 FORMAT (' NO OPTICAL PARAMETER INDEX LARGER THAN',I3,' AND NO CHANEVAL-494
     1GE OF COULOMB CHARGES.')                                          EVAL-495
 1023 FORMAT (' NO EXTERNAL OPTICAL PARAMETER LARGER THAN',I5)          EVAL-496
 1024 FORMAT (' VARIABLE',I3,1P,D15.6,' DEFINED BY',I5,' CANNOT BE USED'EVAL-497
     1/' THE PARAMETER WHICH CAN BE SEARCHED ARE BETWEEN:'/(4(5X,I6,' TOEVAL-498
     2',I6)))                                                           EVAL-499
 1025 FORMAT (' FOR A FORM FACTOR GIVEN BY POINTS, THE TWO MULTIPLICATIVEVAL-500
     1E FACTOR ONLY CAN BE CHANGED.')                                   EVAL-501
 1026 FORMAT (' THE COUPLING OF TWO PARTICLE STATES CANNOT BE CHANGED.')EVAL-502
 1027 FORMAT (' ONLY THE OSCILLATOR PARAMETER CAN BE CHANGED FOR A LAGUEEVAL-503
     1RRE POLYNOMIAL.')                                                 EVAL-504
 1028 FORMAT (' MASSES AND PRODUCT OF CHARGES CANNOT BE CHANGED FOR A SIEVAL-505
     1NGLE PARTICLE STATE.')                                            EVAL-506
 1029 FORMAT (' NOT AN INDEX FOR DEFORMATION OF A GIVEN POTENTIAL.')    EVAL-507
 1030 FORMAT (' THE VARIABLE',I3,' CANNOT BE USED BECAUSE ',I5,'  IS A VEVAL-508
     1ARIATION OF THE DEFORMATIONS OF POTENTIAL',I3,' WHICH ARE ZERO.') EVAL-509
 1031 FORMAT (' NO INDEX FOR MULTIPOLE LARGER THAN',I3)                 EVAL-510
 1032 FORMAT (' THE VARIABLE',I3,' CANNOT BE USED BECAUSE ',I5,'  IS A VEVAL-511
     1ARIATION FOR A GIVEN MULTIPOLE',I3,' AND THEY ARE ZERO.')         EVAL-512
 1033 FORMAT (' NO INDEX FOR INDIVIDUAL MULTIPOLE LARGER THAN',I3)      EVAL-513
 1034 FORMAT (' NO INDEX FOR INDIVIDUAL MULTIPOLE EQUAL TO 0 OR 9 MODULOEVAL-514
     1 10')                                                             EVAL-515
 1035 FORMAT (' NO INDEX FOR NUCLEAR LEVEL PARAMETER LARGER THAN',I3)   EVAL-516
 1036 FORMAT (' NO INDEX FOR NUCLEAR MATRIX ELEMENT LARGER THAN',I3)    EVAL-517
 1037 FORMAT (' THE SPIN-ORBIT IS NOT PARAMETRISED.')                   EVAL-518
 1038 FORMAT (' NO HAUSER-FESBACH CORRECTION TO CROSS-SECTIONS.')       EVAL-519
 1039 FORMAT (' PARAMETER NOT USED FOR THESE HAUSER-FESBACH CORRECTION TEVAL-520
     1O CROSS-SECTIONS.')                                               EVAL-521
 1040 FORMAT (' DISPERSION RELATIONS WERE NOT USED IN PREVIOUS COMPUTATIEVAL-522
     1ON.')                                                             EVAL-523
 1041 FORMAT (' THERE ARE ONLY',I3,' DIFFERENT POTENTIALS.')            EVAL-524
 1042 FORMAT (' THE COEFFICIENTS OF THIS DISPERSION RELATION SHOULD BE REVAL-525
     1EAD EACH TIME.')                                                  EVAL-526
 1043 FORMAT (' VARIABLE',I3,' DEFINED BY',I5,' (',I2,I5,')',' WITH VALUEVAL-527
     1E ',D15.6,' CANNOT BE USED.')                                     EVAL-528
 1044 FORMAT (//' IN EVAL  ...  STOP ...')                              EVAL-529
      END                                                               EVAL-530
C 15/08/12                                                      ECIS12  REST-000
      SUBROUTINE REST(KF,NW,DW,IDMX,LO)                                 REST-001
C IF KF=0                                                               REST-002
C IT SAVES ON TAPE MS ALL THE DATA NEEDED TO RE-START A SEARCH STOPPED  REST-003
C BY THE NUMBER OF EVALUATIONS IF LO(35)=.TRUE.                         REST-004
C IF KF.NE.0                                                            REST-005
C IT READS ON TAPE MS TO RE-START THE SEARCH                            REST-006
C IT IS CALLED ONLY IF LO(36)=.TRUE.                                    REST-007
C ******** UNLESS THE MAIN SUBROUTINE IS CHANGED, MS = 8 ***************REST-008
C INPUT:     KE:      0 TO WRITE ON MS, ANY VALUE TO READ ON MS.        REST-009
C            NW,DW:   WORKING ARRAY.                                    REST-010
C            IDMX:    SIZE OF THE WORKING ARRAY.                        REST-011
C            LO(I):   LOGICAL CONTROLS:                                 REST-012
C               LO(35) =.TRUE. SEARCH SAVED ON TAPE 8 IF CORRECTLY ENDEDREST-013
C                              OR STOPPED BY THE NUMBER OF EVALUATIONS. REST-014
C                                                                       REST-015
C THE COMMON /ADDRE/ IS USED IN CALC, CALX, CAL1, VARI, EVAL AND REST.  REST-016
C THE COMMON /ANGUL/ IS USED IN CALX, LECT, SCHE, LCSP, RESU AND REST.  REST-017
C THE COMMON /CONVE/ IS USED IN CALC, CALX, LECT, CAL1, STDP, FOLD,     REST-018
C                               INTI, INSH, INSI, INRH, INRI AND REST.  REST-019
C THE COMMON /COUPL/ IS USED IN CALX, LECL, LECT, REDM, VIBM, ROTM,     REST-020
C                               ROAM, EXTP, LDIS, CAL1, POTE, ROTP,     REST-021
C                               VARI, EVAL AND REST.                    REST-022
C THE COMMON /DCHI2/ IS USED IN CALC, CALX, RESU, VARI, EVAL, REST      REST-023
C                               AND FITE.                               REST-024
C THE COMMON /DCONS/ IS USED IN ECIS, CALC, LECL, LECT, COLF, KHCO,     REST-025
C                               CONU, CAL1, POTE, ROTP, ROTZ, STDP,     REST-026
C                               STBF, MTCH, SCAM, SCHE, LSCP, RESU,     REST-027
C                               SCAT AND REST.                          REST-028
C THE COMMON /INTEG/ IS USED IN CALC, CALX, CAL1, VARI, EVAL AND REST.  REST-029
C THE COMMON /NCOMP/ IS USED IN CALC, CALX, LECT, CONU, GGDR, CAL1,     REST-030
C                               QUAN, SCAM, SCHE, RESU, VARI, EVAL,     REST-031
C                               AND REST.                               REST-032
C THE COMMON /POTE1/ IS USED IN CALC, LECT, REDM, EXTP, POTE, ROTP,     REST-033
C                               STDP, FOLD AND REST.                    REST-034
C THE COMMON /POTE2/ IS USED IN CALC, LECL, REDM, CAL1, POTE, QUAN,     REST-035
C                               MTCH AND REST.                          REST-036
C THE COMMON /TITRE/ IS USED IN CALC, CALX, RESU, EVAL AND REST.        REST-037
C                                                                       REST-038
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /TITRE/:                     REST-039
C  TITLE(18): TITLE OF THE RUN PRINTED AS HEADING OF RESULTS.           REST-040
C   DEFINED:  TITLE.                                                    REST-041
C   USED:     TITLE.                                                    REST-042
C                                                                       REST-043
C***********************************************************************REST-044
      IMPLICIT REAL*8 (A-H,O-Z)                                         REST-045
      LOGICAL LO(150)                                                   REST-046
      DIMENSION NW(2,*),DW(*),T(18)                                     REST-047
      CHARACTER*4 T,TITLE                                               REST-048
      COMMON /ADDRE/ N1(49)                                             REST-049
      COMMON /ANGUL/ N2(14)                                             REST-050
      COMMON /CONVE/ A3(6)                                              REST-051
      COMMON /COUPL/ N3(7)                                              REST-052
      COMMON /DCHI2/ A4(5)                                              REST-053
      COMMON /DCONS/ A5(7)                                              REST-054
      COMMON /INOUT/ MR,MW,MS                                           REST-055
      COMMON /INTEG/ N7(45)                                             REST-056
      COMMON /NCOMP/ N8(52)                                             REST-057
      COMMON /POTE1/ N9(23)                                             REST-058
      COMMON /POTE2/ NA(16)                                             REST-059
      COMMON /TITRE/ TITLE(18)                                          REST-060
      IDMY=IDMX                                                         REST-061
      REWIND MS                                                         REST-062
      IF (KF.NE.0) GO TO 1                                              REST-063
C WRITES COMMONS FIRST AND W AFTER                                      REST-064
      WRITE (MS) IDMX,LO,N1,N2,A3,N3,A4,A5,N7,N8,N9,NA,TITLE            REST-065
C N1(46) IS NRCO,N7(2) IS NPLACE,N7(1) IS IDMT                          REST-066
      I1=N1(46)                                                         REST-067
      WRITE (MW,1000) MS,I1                                             REST-068
      WRITE (MS) (DW(I),I=1,I1)                                         REST-069
      REWIND MS                                                         REST-070
      RETURN                                                            REST-071
C READ COMMONS,COMPUTES LIMITS OF W AND READ W                          REST-072
    1 READ (MS) I,LO,N1,N2,A3,N3,A4,A5,N7,N8,N9,NA,T                    REST-073
      I1=N1(46)                                                         REST-074
      N7(1)=IDMY                                                        REST-075
      WRITE (MW,1001) TITLE,T,N7(1)                                     REST-076
      IF (N7(2).GT.N7(1)) CALL MEMO('REST',N7(1),N7(2))                 REST-077
      READ (MS) (DW(I),I=1,I1)                                          REST-078
      REWIND MS                                                         REST-079
C READS ON 5 IF SAVE HAS TO BE DONE AGAIN AND THE NEW NUMBER OF EVAL.   REST-080
C ANY MODIFICATION OF THE SEARCH CAN BE READ AT THIS PLACE IF THEY      REST-081
C DO NOT SPOIL THE SEARCH                                               REST-082
      LO(35)=.FALSE.                                                    REST-083
      READ (MR,1002) LO(35),N,ECH,RAP                                   REST-084
C N1(20) IS NIW, N7(27) IS NREC                                         REST-085
      IF (N.EQ.0) N=N7(34)+2                                            REST-086
      M=N1(20)                                                          REST-087
      NW(2,M)=NW(2,M)+N                                                 REST-088
      WRITE (MW,1003) MS,I1                                             REST-089
      WRITE (MW,1004) N,NW(2,M)                                         REST-090
      IF (LO(35)) WRITE (MW,1005) MS                                    REST-091
      IF (.NOT.LO(35)) WRITE (MW,1006) MS                               REST-092
      IF (ECH.LT.1.D0) GO TO 2                                          REST-093
      WRITE (MW,1008) A4(3),ECH                                         REST-094
      A4(3)=ECH                                                         REST-095
    2 IF (RAP.LT.1.D0) GO TO 3                                          REST-096
      WRITE (MW,1009) A4(4),RAP                                         REST-097
      A4(4)=RAP                                                         REST-098
    3 RETURN                                                            REST-099
 1000 FORMAT (///15H OUTPUT ON TAPE,I3,24H OF DW FROM DW(1) TO DW(,I6,1HREST-100
     1)///)                                                             REST-101
 1001 FORMAT ('1'//1X,18A4//' RESTART OF COMPUTATION'//' LAST TITLE : ''REST-102
     1''',18A4,''''''//' AVAILABLE WORKING SPACE',I8/)                  REST-103
 1002 FORMAT (L1,I4,5X,2F10.5)                                          REST-104
 1003 FORMAT (' INPUT FROM TAPE',I3,' OF DW FROM DW(1) TO DW(',I6,')'//)REST-105
 1004 FORMAT (/' MAXIMUM NUMBER OF EVALUATIONS INCREASED BY',I4,5X,'NEW REST-106
     1VALUE',I6)                                                        REST-107
 1005 FORMAT (' SAVE ON TAPE',I3,' IF NECESSARY.')                      REST-108
 1006 FORMAT (' NO SAVE ON TAPE',I3)                                    REST-109
 1008 FORMAT (' CHANGE OF ECH FROM',F10.5,' TO',F10.5)                  REST-110
 1009 FORMAT (' CHANGE OF RAP FROM',F10.5,' TO',F10.5)                  REST-111
      END                                                               REST-112
C 14/10/12                                                      ECIS12  FITE-000
      SUBROUTINE FITE(KE,M,N,F,X,E,W,NW,IZ,WA)                          FITE-001
C CHI-SQUARE MINIMISING SUBROUTINE WRITTEN BY G. SCHWEIMER IN KARLSRUHE.FITE-002
C SIMPLIFIED FOR THE USE OF ECIS (NO GRADIENT).                         FITE-003
C SOLVES THE NONLINEAR LEAST SQUARES PROBLEM,                           FITE-004
C USING A LEAST SQUARES INTERPOLATION BETWEEN VARIABLES AND FUNCTIONS.  FITE-005
C CALLED SUBROUTINES: FIT2 /.TRUE./ (LINEAR LEAST SQUARES PROBLEM).     FITE-006
C                     FIT2 /.FALSE./(INVERSION OF A(TRANSPOSED)*A).     FITE-007
C                     FIT1(ONE DIMENSIONAL MINIMUM SEARCH).             FITE-008
C INPUT:     KE:      0 FOR THE FIRST CALL, 1 FOR THE FOLLOWING ONES.   FITE-009
C            M:       NUMBER OF FUNCTIONS, M GE N.                      FITE-010
C            N:       NUMBER OF VARIABLES, N GE 1.                      FITE-011
C            F:       FUNCTION VALUES AT THE POINT X.                   FITE-012
C            X:       STARTING VALUES OF THE VARIABLES.                 FITE-013
C            E:       ABSOLUTE SEARCH ACCURACIES FOR THE VARIABLES.     FITE-014
C            IZ(I)    NUMBER OF POINTS TO BE REMEMBERED FOR I=1         FITE-015
C                     (AT LEAST N+1).                                   FITE-016
C                     MAXIMUM NUMBER OF FUNCTION EVALUATIONS FOR I=2.   FITE-017
C OUTPUT:    KE:      ERROR CODE:                                       FITE-018
C                     KE=0: WITHOUT ERRORS.                             FITE-019
C                     KE=2: USER INTERRUPT.                             FITE-020
C                     KE=3: MAXIMUM NUMBER OF FUNCTION EVALUATIONS.     FITE-021
C                     KE=4: ROUNDING ERRORS.                            FITE-022
C                     KE=5: THE FUNCTIONS DO NOT DEPEND ON X(IZ(4)).    FITE-023
C                     KE=6: USELESS VARIABLES IN THE PREPARATORY CALLS, FITE-024
C                           THE LABELS OF THE VARIABLES ARE IZ(3),IZ(4).FITE-025
C                     KE=7: M LT N.                                     FITE-026
C            W(I):    FOR I<N, STANDARD ERROR OF THE VARIABLE I (FOR A  FITE-027
C                     VARIANCE AT BEST FIT EQUAL TO DEGREE OF FREEDOM). FITE-028
C                     FOR I+N, ERROR ENHANCEMENT (MANY/SINGLE VARIABLE  FITE-029
C                     RESULT).                                          FITE-030
C                     FOR N+N+I+(J*(J-1))/2, ERROR CORRELATION BETWEEN  FITE-031
C                     X(I) AND X(J), I<J.                               FITE-032
C            IZ(I)    NUMBER OF FUNCTION EVALUATIONS FOR I=3.           FITE-033
C                     FOR I=4, NUMBER OF DEGREES OF FREEDOM IF KE=0,2,3 FITE-034
C                     OR 4.  PLACE OF USELESS VARIABLE IF KE=5 OR 6.    FITE-035
C                     EVENTUALLY INDICATIONS FOR ONE DIMENSIONAL SEARCH FITE-036
C                     IF KE=1.                                          FITE-037
C WORKING AREAS:                                                        FITE-038
C            IZ(I):   FOR I=5 TO 4+IZ(1), LABELS OF THE QUADRATIC SUMS. FITE-039
C            W(I):    OF LENGTH MAX(14+N+K*(M+N+1),(N*(N+5))/2)         FITE-040
C                     EVENTUALLY, INDICATIONS FOR ONE DIMENSIONAL       FITE-041
C                     SEARCH. FROM MAX(15,N+1),K SETS OF (FUNCTIONS +   FITE-042
C                     VARIABLES + CHI2). SEE ABOVE THE ADDRESSES IN W   FITE-043
C                     AFTER THE SEARCH                                  FITE-044
C            NW:      EQUIVALENT BY CALL WITH W.                        FITE-045
C            WA(I):   OF LENGTH (M+1)*(N+1)+(N*(N+1))/2. FROM I=1,      FITE-046
C                     GRADIENT OR MATRIX A FOLLOWED BY CENTRAL FUNCTIONSFITE-047
C                     FROM I=1+M*(N+1), CENTRAL VARIABLES,              FITE-048
C                     FROM I=(N+1)*(M+1), MATRIX D.                     FITE-049
C                                                                       FITE-050
C THE WORKING FIELDS IZ AND W CONTAIN ALL INFORMATION TO CONTINUE       FITE-051
C THE SEARCH. THIS ALLOWS A SEARCH WITHIN ANOTHER SEARCH JUST CHANGING  FITE-052
C THE WORKING FIELDS.                                                   FITE-053
C                                                                       FITE-054
C FOR THE COMMON  /DCHI2/  SEE CALX.                                    FITE-055
C                                                                       FITE-056
C SIGNIFICANCE OF THE QUANTITIES IN COMMON /DCHI2/:                     FITE-057
C  CHI2:      CHI-SQUARE COMPUTED IN SUBROUTINE RESU.                   FITE-058
C  YY(1):     STEP SIZE IN THE SEARCH.                                  FITE-059
C  YY(2):     HALF OF THE SUCCESS MULTIPLICATIVE FACTOR OF THE STEP.    FITE-060
C             THE STEP SIZE IS DIVIDED BY 4 TIMES ITS SQUARE AFTER      FITE-061
C             UNSUCCESS.                                                FITE-062
C  YY(3):     CHANGED X VALUE IN PREPARATORY CALLS,                     FITE-063
C             RATIO STEP/DISTANCE OF MINIMUM AFTER PREPARATORY CALLS    FITE-064
C             OR 0. FOR RANDOM PREDICTION,                              FITE-065
C             ERROR RENORMALISATION FACTOR WHEN KE=0,2 OR 3.(SQUARE ROOTFITE-066
C             OF VARIANCE AT BEST FIT DIVIDED BY DEGREE OF FREEDOM).    FITE-067
C   DEFINED:  CHI2,YY.                                                  FITE-068
C   USED:     CHI2,YY.                                                  FITE-069
C                                                                       FITE-070
C***********************************************************************FITE-071
      IMPLICIT REAL*8 (A-H,O-Z)                                         FITE-072
      DIMENSION F(*),X(*),E(*),W(*),NW(*),IZ(*),WA(*)                   FITE-073
      COMMON /DCHI2/ CHI2,CHI2M,YY(3)                                   FITE-074
      DATA EPS /1.D-5/                                                  FITE-075
      JD=(M+1)*(N+1)-1                                                  FITE-076
      JS=14+N                                                           FITE-077
      LM=M+N+1                                                          FITE-078
      K=IZ(1)                                                           FITE-079
      IF (KE.NE.0) GO TO 2                                              FITE-080
      IF (M.LT.N) GO TO 40                                              FITE-081
      IZ(3)=1                                                           FITE-082
      IZ(4)=0                                                           FITE-083
      DO 1 L=1,K                                                        FITE-084
      IZ(L+4)=1+K-L                                                     FITE-085
    1 W(JS+LM*L)=7.D35                                                  FITE-086
      IF (YY(2).LT.1.D0) YY(2)=1.D0                                     FITE-087
      KE=1                                                              FITE-088
    2 JM=JS+LM*IZ(5)-LM                                                 FITE-089
      J3=M*N                                                            FITE-090
      KV=K                                                              FITE-091
      IF (CHI2.LE.0.D0) GO TO 39                                        FITE-092
C ROW OF MATRIX S TO BE REPLACED BY NEW VALUES                          FITE-093
      L=IZ(K+4)                                                         FITE-094
      IF (W(JS+LM*L).EQ.7.D35) KV=L-1                                   FITE-095
      DO 3 I=1,K                                                        FITE-096
      J1=JS+LM*IZ(I+4)                                                  FITE-097
      IF (CHI2.LT.W(J1)) GO TO 4                                        FITE-098
    3 CONTINUE                                                          FITE-099
C ONE DIMENSIONAL SEARCH IS NECESSARY                                   FITE-100
      GO TO 31                                                          FITE-101
    4 IF (I.GT.MAX0(N+1,KV)) GO TO 31                                   FITE-102
C VECTOR OF LABELS OF THE QUADRATIC SUMS                                FITE-103
      IF (KV.LT.K) KV=KV+1                                              FITE-104
      I1=K+4                                                            FITE-105
      I2=K-I                                                            FITE-106
      IF ((IZ(3).GT.N+1).AND.(I.NE.1)) YY(1)=YY(1)/(4.D0*YY(2)**3)      FITE-107
      IF (I2.EQ.0) GO TO 6                                              FITE-108
      DO 5 J=1,I2                                                       FITE-109
      I1=I1-1                                                           FITE-110
    5 IZ(I1+1)=IZ(I1)                                                   FITE-111
      IZ(I1)=L                                                          FITE-112
      JM=JS+LM*IZ(5)-LM                                                 FITE-113
C NEW ROW                                                               FITE-114
    6 J1=JS+LM*(L-1)                                                    FITE-115
      DO 7 I=1,M                                                        FITE-116
      J1=J1+1                                                           FITE-117
    7 W(J1)=F(I)                                                        FITE-118
      DO 8 I=1,N                                                        FITE-119
      J1=J1+1                                                           FITE-120
    8 W(J1)=X(I)                                                        FITE-121
      W(J1+1)=CHI2                                                      FITE-122
      IF (IZ(3).GE.IZ(2)) GO TO 44                                      FITE-123
      IF (N.EQ.1) GO TO 36                                              FITE-124
      IF (IZ(3).GT.N+1) GO TO 13                                        FITE-125
C PREPARATORY FUNCTION EVALUATIONS                                      FITE-126
      MF=IZ(3)                                                          FITE-127
      IF (MF.EQ.1) GO TO 12                                             FITE-128
C SIGNIFICANCE OF THE NEW VARIABLE                                      FITE-129
      X(MF-1)=YY(3)                                                     FITE-130
      S=0.D0                                                            FITE-131
      DO 9 I=1,M                                                        FITE-132
      T=F(I)-W(JS+I)                                                    FITE-133
    9 S=S+T*T                                                           FITE-134
      J=2                                                               FITE-135
      IF (S.LT.EPS*EPS*W(JS+LM)) GO TO 42                               FITE-136
      YY(3)=S                                                           FITE-137
      W(MF-1)=DSQRT(YY(3))                                              FITE-138
      IF (MF.LE.2) GO TO 12                                             FITE-139
C INDEPENDENCE OF THE NEW VARIABLE                                      FITE-140
      DO 11 J=3,MF                                                      FITE-141
      I2=JS+LM*(J-2)                                                    FITE-142
      S=0.D0                                                            FITE-143
      DO 10 I=1,M                                                       FITE-144
   10 S=S+(W(I2+I)-W(JS+I))*(F(I)-W(JS+I))                              FITE-145
      IF (DABS(W(MF-1)*W(J-2)-DABS(S)).LT.EPS*DABS(S)) GO TO 41         FITE-146
   11 CONTINUE                                                          FITE-147
   12 IF (MF.EQ.N+1) GO TO 13                                           FITE-148
      YY(3)=X(MF)                                                       FITE-149
      X(MF)=X(MF)+YY(1)*E(MF)                                           FITE-150
      GO TO 65                                                          FITE-151
C END OF PREPARATORY FUNCTION EVALUATIONS                               FITE-152
C SUM OF INVERSES OF THE QUADRATIC SUMS                                 FITE-153
   13 S=0.D0                                                            FITE-154
      DO 14 L=1,KV                                                      FITE-155
      T=W(JS+LM*L)                                                      FITE-156
   14 S=S+1.D0/(T*T)                                                    FITE-157
      WJA=1.D0/S                                                        FITE-158
C CENTRE OF THE VARIABLES AND FUNCTIONS                                 FITE-159
      I1=M+N                                                            FITE-160
      DO 16 I=1,I1                                                      FITE-161
      J1=JS                                                             FITE-162
      S=0.D0                                                            FITE-163
      DO 15 L=1,KV                                                      FITE-164
      T=W(J1+LM)                                                        FITE-165
      S=S+W(J1+I)/(T*T)                                                 FITE-166
   15 J1=J1+LM                                                          FITE-167
   16 WA(J3+I)=S*WJA                                                    FITE-168
      IF (KE.NE.1) GO TO 48                                             FITE-169
C THE LINEAR APPROXIMATION MEANS THAT THE DIFFERENCE WITH CENTRAL VALUE FITE-170
C F(I,K)-F(I) = SUM F(I,J)*(X(J,K)-X(J)) WHERE F(I),X(J) ARE MEAN VALUESFITE-171
C AND F(I,J) IS THE FIRST DERIVATIVE WITH RESPECT TO X(J).              FITE-172
C USING THE MATRIX D(I,J) = WEIGHTED SUM ON (X(I,K)-X(I))*(X(J,K)-X(J)) FITE-173
C AND WRITING THE CHANGE DX = D*Y, THE BEST FIT IS OBTAINED FOR         FITE-174
C ||F-A*Y||=MIN(Y) WITH A(I,J)=WEIGHTED SUM(F(I,K)-F(I)*(X(J,K)-X(J))   FITE-175
C MATRIX A                                                              FITE-176
   17 J1=0                                                              FITE-177
      DO 20 I=1,N                                                       FITE-178
      U=WA(J3+M+I)                                                      FITE-179
      DO 19 J=1,M                                                       FITE-180
      J1=J1+1                                                           FITE-181
      J2=JS                                                             FITE-182
      S=0.D0                                                            FITE-183
      T=WA(J3+J)                                                        FITE-184
      DO 18 L=1,KV                                                      FITE-185
      V=W(J2+LM)                                                        FITE-186
      S=S+(W(J2+J)-T)*(W(J2+M+I)-U)/(V*V)                               FITE-187
   18 J2=J2+LM                                                          FITE-188
   19 WA(J1)=S*WJA                                                      FITE-189
   20 CONTINUE                                                          FITE-190
      IF (KE.NE.1) GO TO 51                                             FITE-191
C LINEAR LEAST SQUARES PROBLEM                                          FITE-192
      CALL FIT2(M,N,WA,X,NW,IR,.TRUE.)                                  FITE-193
      IF (IR) 43 , 21 , 29                                              FITE-194
C MATRIX D                                                              FITE-195
   21 J1=JD                                                             FITE-196
      JA=J3+M                                                           FITE-197
      DO 24 I=1,N                                                       FITE-198
      T=WA(JA+I)                                                        FITE-199
      DO 23 J=1,I                                                       FITE-200
      J1=J1+1                                                           FITE-201
      J2=JS+M                                                           FITE-202
      S=0.D0                                                            FITE-203
      U=WA(JA+J)                                                        FITE-204
      DO 22 L=1,KV                                                      FITE-205
      V=W(J2+N+1)                                                       FITE-206
      S=S+(W(J2+I)-T)*(W(J2+J)-U)/(V*V)                                 FITE-207
   22 J2=J2+LM                                                          FITE-208
   23 WA(J1)=S*WJA                                                      FITE-209
   24 CONTINUE                                                          FITE-210
C NEW VARIABLES                                                         FITE-211
      DO 26 I=1,N                                                       FITE-212
      I2=1                                                              FITE-213
      J1=JD+(I*I-I)/2                                                   FITE-214
      S=0.D0                                                            FITE-215
      DO 25 J=1,N                                                       FITE-216
      J1=J1+I2                                                          FITE-217
      IF (J.GE.I) I2=J                                                  FITE-218
   25 S=S+WA(J1)*X(J)                                                   FITE-219
   26 WA(I)=WA(JA+I)-S                                                  FITE-220
C TEST OF CONVERGENCE                                                   FITE-221
      A=0.D0                                                            FITE-222
      DO 27 I=1,N                                                       FITE-223
      W(I)=WA(I)-W(JM+M+I)                                              FITE-224
   27 A=DMAX1(A,DABS(W(I)/E(I)))                                        FITE-225
      YY(1)=YY(1)*YY(2)                                                 FITE-226
      IF (A.LT.1.D0.OR.YY(1).LT.1.D0) GO TO 39                          FITE-227
      YY(3)=1.D0                                                        FITE-228
C STEP SIZE LIMITATION                                                  FITE-229
      IF (A.GT.2.D0*YY(1)) YY(3)=2.D0*YY(1)/A                           FITE-230
      DO 28 I=1,N                                                       FITE-231
   28 X(I)=W(JM+M+I)+YY(3)*W(I)                                         FITE-232
      IZ(4)=0                                                           FITE-233
      YY(1)=A*YY(3)                                                     FITE-234
      GO TO 65                                                          FITE-235
C RANDOM PREDICTION                                                     FITE-236
   29 DO 30 I=1,N                                                       FITE-237
   30 X(I)=W(JM+M+I)+YY(1)*E(I)*DFLOAT(MOD(IABS(NW(JM+I)),200)-100)/100.FITE-238
     1D0                                                                FITE-239
      YY(3)=0.D0                                                        FITE-240
      GO TO 65                                                          FITE-241
C ONE DIMENSIONAL SEARCH                                                FITE-242
   31 IF (N.EQ.1) GO TO 37                                              FITE-243
      IF (IZ(3).GE.IZ(2)) GO TO 44                                      FITE-244
      IF (IZ(4).EQ.2) GO TO 33                                          FITE-245
      IZ(4)=2                                                           FITE-246
      DO 32 I=1,N                                                       FITE-247
   32 W(I+14)=X(I)-W(JM+M+I)                                            FITE-248
      NW(1)=3                                                           FITE-249
      NW(2)=20                                                          FITE-250
      W(4)=0.5D0                                                        FITE-251
      W(7)=0.D0                                                         FITE-252
      W(8)=0.D0                                                         FITE-253
      W(9)=0.D0                                                         FITE-254
      W(10)=1.D0                                                        FITE-255
      W(12)=W(JM+LM)                                                    FITE-256
      W(13)=CHI2                                                        FITE-257
      GO TO 34                                                          FITE-258
   33 W(5)=CHI2                                                         FITE-259
      CALL FIT1(KE,NW,W(4))                                             FITE-260
   34 DO 35 I=1,N                                                       FITE-261
   35 X(I)=W(JM+M+I)+W(4)*W(I+14)                                       FITE-262
      IF (KE.EQ.3) KE=2                                                 FITE-263
      IF (KE.EQ.2) GO TO 44                                             FITE-264
      KE=1                                                              FITE-265
      YY(3)=W(4)                                                        FITE-266
      GO TO 65                                                          FITE-267
C ONLY ONE VARIABLE X                                                   FITE-268
   36 IF (IZ(3).GT.1) GO TO 37                                          FITE-269
      KE=0                                                              FITE-270
      W(6)=YY(1)*E(1)                                                   FITE-271
      W(7)=E(1)                                                         FITE-272
      W(8)=0.D0                                                         FITE-273
   37 NW(2)=IZ(2)                                                       FITE-274
      W(4)=X(1)                                                         FITE-275
      W(5)=CHI2                                                         FITE-276
      CALL FIT1(KE,NW,W(4))                                             FITE-277
      IZ(4)=2                                                           FITE-278
      X(1)=W(4)                                                         FITE-279
      IF (KE.EQ.1) GO TO 65                                             FITE-280
      IF (KE.GT.0) KE=KE+1                                              FITE-281
      YY(3)=0.D0                                                        FITE-282
      W(1)=0.D0                                                         FITE-283
      DO 38 J=1,M                                                       FITE-284
   38 F(J)=W(JM+I)                                                      FITE-285
      CHI2=W(JM+LM)                                                     FITE-286
      X(1)=W(JM+LM-1)                                                   FITE-287
      IF (NW(2).NE.0) GO TO 64                                          FITE-288
      W(1)=DSQRT(DABS((W(9)-W(11))/((W(12)-W(13))/(W(9)-W(10))-(W(13)-W(FITE-289
     114))/(W(10)-W(11)))))                                             FITE-290
      W(2)=1.D0                                                         FITE-291
      W(3)=1.D0                                                         FITE-292
      GO TO 61                                                          FITE-293
C END OF SEARCH                                                         FITE-294
   39 KE=0                                                              FITE-295
      IF (CHI2.EQ.0.D0.OR.IZ(2).LT.0) GO TO 65                          FITE-296
      GO TO 45                                                          FITE-297
C ERROR CODE DEFINITION                                                 FITE-298
   40 KE=KE+1                                                           FITE-299
   41 KE=KE+1                                                           FITE-300
   42 KE=KE+1                                                           FITE-301
   43 KE=KE+1                                                           FITE-302
   44 KE=KE+1                                                           FITE-303
      KE=KE+1                                                           FITE-304
C RESTORE OPTIMUM VALUES TO X AND F                                     FITE-305
   45 DO 46 I=1,M                                                       FITE-306
   46 F(I)=W(JM+I)                                                      FITE-307
      DO 47 I=1,N                                                       FITE-308
      X(I)=W(JM+M+I)                                                    FITE-309
   47 W(I)=0.D0                                                         FITE-310
      YY(3)=0.D0                                                        FITE-311
      CHI2=W(JM+LM)                                                     FITE-312
      IF (KE*(KE-3).NE.0.OR.(KE.EQ.3.AND.((YY(3).EQ.0.D0.AND.IZ(3).LE.N)FITE-313
     1))) GO TO 64                                                      FITE-314
C COMPUTATION OF THE ERRORS OF THE VARIABLES - RESTORE MATRIX G         FITE-315
      KV=MIN0(K,IZ(3))                                                  FITE-316
      GO TO 13                                                          FITE-317
C INVERSE OF MATRIX D                                                   FITE-318
   48 T=DSQRT(WJA)                                                      FITE-319
      J1=0                                                              FITE-320
      DO 50 I=1,N                                                       FITE-321
      S=WA(J3+M+I)                                                      FITE-322
      J2=JS+I-LM+M                                                      FITE-323
      DO 49 L=1,KV                                                      FITE-324
      J1=J1+1                                                           FITE-325
   49 WA(J1)=T*(W(J2+L*LM)-S)/W(JS+L*LM)                                FITE-326
   50 CONTINUE                                                          FITE-327
      CALL FIT2(KV,N,WA,WA(JD+1),NW,IR,.FALSE.)                         FITE-328
      IF (IR) 64 , 17 , 64                                              FITE-329
C MATRIX G = A*INVERSE OF D                                             FITE-330
   51 DO 55 L=1,M                                                       FITE-331
      J1=L-M                                                            FITE-332
      DO 53 I=1,N                                                       FITE-333
      I1=JD+(I*I-I)/2                                                   FITE-334
      I2=1                                                              FITE-335
      S=0.D0                                                            FITE-336
      DO 52 J=1,N                                                       FITE-337
      I1=I1+I2                                                          FITE-338
      IF (J.GE.I) I2=J                                                  FITE-339
   52 S=S+WA(I1)*WA(J1+J*M)                                             FITE-340
   53 W(I)=S                                                            FITE-341
      DO 54 J=1,N                                                       FITE-342
   54 WA(J1+J*M)=W(J)                                                   FITE-343
   55 CONTINUE                                                          FITE-344
C DIAGONAL ELEMENTS OF G(T)*G                                           FITE-345
      J1=0                                                              FITE-346
      DO 57 I=1,N                                                       FITE-347
      S=0.D0                                                            FITE-348
      DO 56 L=1,M                                                       FITE-349
      J1=J1+1                                                           FITE-350
   56 S=S+WA(J1)*WA(J1)                                                 FITE-351
   57 W(N+I)=DSQRT(S)                                                   FITE-352
C STANDARD ERRORS AND ERROR CORRELATIONS                                FITE-353
      CALL FIT2(M,N,WA,W(2*N+1),NW,IR,.FALSE.)                          FITE-354
      IF (IR.NE.0) GO TO 64                                             FITE-355
      DO 58 I=1,N                                                       FITE-356
      JDI=2*N+(I*I+I)/2                                                 FITE-357
      W(I)=DSQRT(W(JDI))                                                FITE-358
   58 W(N+I)=W(I)*W(N+I)                                                FITE-359
      J1=2*N                                                            FITE-360
      DO 60 I=1,N                                                       FITE-361
      DO 59 J=1,I                                                       FITE-362
      J1=J1+1                                                           FITE-363
   59 W(J1)=W(J1)/(W(I)*W(J))                                           FITE-364
   60 CONTINUE                                                          FITE-365
C ERROR RENORMALISATION FACTOR                                          FITE-366
   61 S=0.D0                                                            FITE-367
      DO 62 I=1,M                                                       FITE-368
   62 S=S+F(I)                                                          FITE-369
      YY(3)=DSQRT(DABS(CHI2-S*S/M)/MAX0(M-N-1,1))                       FITE-370
      DO 63 I=1,N                                                       FITE-371
   63 W(I)=W(I)*YY(3)                                                   FITE-372
   64 IZ(4)=M-N-1                                                       FITE-373
      IF ((KE-5)*(KE-6).NE.0) GO TO 65                                  FITE-374
      IZ(3)=J-2                                                         FITE-375
      IZ(4)=MF-1                                                        FITE-376
   65 IF (KE.EQ.1) IZ(3)=IZ(3)+1                                        FITE-377
      RETURN                                                            FITE-378
      END                                                               FITE-379
C 08/04/06                                                      ECIS12  FIT1-000
      SUBROUTINE FIT1(KE,I,W)                                           FIT1-001
C MINIMISATION OF A FUNCTION F(X) OF ONE VARIABLE X.                    FIT1-002
C INPUT:     AM:      TABLES OF MULTIPOLES.                             FIT1-003
C CALLING SEQUENCE                                                      FIT1-004
C    KE=0                                                               FIT1-005
C    I(2)=MAXIMUM NUMBER OF FUNCTION EVALUATIONS                        FIT1-006
C    W(1)=START VALUE OF X                                              FIT1-007
C    W(3)=FIRST STEP SIZE                                               FIT1-008
C    W(4)=ABSOLUTE SEARCH ACCURACY                                      FIT1-009
C    W(5)=RELATIVE SEARCH ACCURACY                                      FIT1-010
C  1 W(2)=FUNCTION VALUE F(X) AT X=W(1)                                 FIT1-011
C    CALL FIT1(KE,I,W)                                                  FIT1-012
C    IF(KE.EQ.1) GO TO 1                                                FIT1-013
C    XMIN=W(1)                                                          FIT1-014
C    FMIN=W(2)                                                          FIT1-015
C KE = ERROR CODE: KE=0 NO ERRORS, KE=                                  FIT1-016
C  2 MAXIMUM NUMBER OF FUNCTION EVALUATIONS                             FIT1-017
C  3 ROUNDING ERRORS, PROBABLY BECAUSE BOTH W(4) AND W(5) ARE TOO SMALL FIT1-018
C THE WORKING FIELDS I AND W HAVE THE LENGTH 3 AND 11 RESPECTIVELY      FIT1-019
C THEY CONTAIN ALL INFORMATION FOR THE CONTINUATION OF THE SEARCH       FIT1-020
C THEREFORE A SEARCH WITHIN ANOTHER SEARCH CAN BE DONE JUST CHANGING    FIT1-021
C THE WORKING FIELDS                                                    FIT1-022
C IF 2 FUNCTION VALUES F1 AND F2 ARE KNOWN FOR X = X1 AND X2 RESPECTIVE FIT1-023
C LY WITH X1 NE X2 ENTER THE CALLING SEQUENCE AFTER DEFINING :          FIT1-024
C KE = 1; I(1) = 3; W(6) = X1; W(7) = X2; W(9) = F1; W(10) = F2 AND     FIT1-025
C W(1) = USERS CHOICE                                                   FIT1-026
C WORKING FIELD VARIABLES:                                              FIT1-027
C I(1): CURRENT NUMBER OF FUNCTION EVALUATIONS                          FIT1-028
C I(2): MAXIMUM NUMBER OF FUNCTION EVALUATIONS                          FIT1-029
C I(3): MINIMUM POINTER, THE MINIMUM FUNCTION VALUE IS AT W(7+I(3))     FIT1-030
C W(1): CURRENT VALUE OF X                                              FIT1-031
C W(2): USER SUPPLIED FUNCTION VALUE                                    FIT1-032
C W(3): FIRST STEP SIZE                                                 FIT1-033
C W(4 AND 5): SEARCH ACCURACIES                                         FIT1-034
C W(6, 7 AND 8): X1, X2 AND X3 WITH X1 < X2 < X3                        FIT1-035
C W(9, 10 AND 11): FUNCTION VALUES AT X1, X2 AND X3 RESPECTIVELY        FIT1-036
C***********************************************************************FIT1-037
      IMPLICIT REAL*8 (A-H,O-Z)                                         FIT1-038
      DIMENSION I(3),W(11)                                              FIT1-039
      IF (KE.EQ.1) GO TO 2                                              FIT1-040
      KE=1                                                              FIT1-041
      I(1)=1                                                            FIT1-042
      I(3)=-1                                                           FIT1-043
      W(6)=W(1)                                                         FIT1-044
      W(9)=W(2)                                                         FIT1-045
    1 W(1)=W(1)+W(3)                                                    FIT1-046
      GO TO 11                                                          FIT1-047
    2 IF (I(1).GT.2) GO TO 3                                            FIT1-048
      I(3)=0                                                            FIT1-049
      W(7)=W(1)                                                         FIT1-050
      W(10)=W(2)                                                        FIT1-051
      IF (W(2).LE.W(9)) GO TO 1                                         FIT1-052
      I(3)=-1                                                           FIT1-053
      W(1)=W(6)-W(3)                                                    FIT1-054
      GO TO 11                                                          FIT1-055
    3 IF (I(1).GT.3) GO TO 5                                            FIT1-056
      W(8)=W(1)                                                         FIT1-057
      W(11)=W(2)                                                        FIT1-058
C ORDERING OF THE 3 FIRST VALUES OF X: W(6) < W(7) < W(8).              FIT1-059
      DO 4 J=1,3                                                        FIT1-060
      K=7-MOD(J,2)                                                      FIT1-061
      IF (W(K).LE.W(K+1)) GO TO 4                                       FIT1-062
      W(1)=W(K)                                                         FIT1-063
      W(K)=W(K+1)                                                       FIT1-064
      W(K+1)=W(1)                                                       FIT1-065
      K=K+3                                                             FIT1-066
      W(1)=W(K)                                                         FIT1-067
      W(K)=W(K+1)                                                       FIT1-068
      W(K+1)=W(1)                                                       FIT1-069
    4 CONTINUE                                                          FIT1-070
      I(3)=0                                                            FIT1-071
      IF (W(9).LT.W(10).AND.W(9).LT.W(11)) I(3)=-1                      FIT1-072
      IF (W(11).LT.W(10).AND.W(11).LT.W(9)) I(3)=1                      FIT1-073
      GO TO 9                                                           FIT1-074
C SORT IN THE NEW VALUES OF X AND F.                                    FIT1-075
    5 IF (I(3).EQ.0) GO TO 6                                            FIT1-076
      J=I(3)                                                            FIT1-077
      W(7-J)=W(7)                                                       FIT1-078
      W(10-J)=W(10)                                                     FIT1-079
      IF ((W(7+J)-W(1))*(W(1)-W(7)).GT.0.D0) GO TO 7                    FIT1-080
      W(7)=W(7+J)                                                       FIT1-081
      W(10)=W(10+J)                                                     FIT1-082
      W(7+J)=W(1)                                                       FIT1-083
      W(10+J)=W(2)                                                      FIT1-084
      IF (W(2).GE.W(10)) I(3)=0                                         FIT1-085
      GO TO 9                                                           FIT1-086
    6 J=-1                                                              FIT1-087
      IF (W(1).LT.W(7)) J=1                                             FIT1-088
      IF (W(2).GT.W(10)) GO TO 8                                        FIT1-089
      W(7+J)=W(7)                                                       FIT1-090
      W(10+J)=W(10)                                                     FIT1-091
    7 W(7)=W(1)                                                         FIT1-092
      W(10)=W(2)                                                        FIT1-093
      I31=I(3)+10                                                       FIT1-094
      IF (W(2).LE.W(I31)) I(3)=0                                        FIT1-095
      GO TO 9                                                           FIT1-096
    8 W(7-J)=W(1)                                                       FIT1-097
      W(10-J)=W(2)                                                      FIT1-098
    9 J=7+I(3)                                                          FIT1-099
C ERROR TESTS.                                                          FIT1-100
      IF (W(6).EQ.W(7).OR.W(7).EQ.W(8).OR.(W(9).EQ.W(10).AND.W(10).EQ.W(FIT1-101
     111))) GO TO 14                                                    FIT1-102
      IF (I(1).GE.I(2)) GO TO 15                                        FIT1-103
      IF (I(3).EQ.0) GO TO 10                                           FIT1-104
C STEP SIZE LIMITATION.                                                 FIT1-105
      W(1)=W(J)+(2*I(3))*DABS(W(6)-W(8))                                FIT1-106
      GO TO 11                                                          FIT1-107
C PREDICTION OF THE POSITION OF THE MINIMUM (PARABOLIC APPROXIMATION).  FIT1-108
   10 W(1)=((W(9)-W(10))/(W(6)-W(7))-(W(10)-W(11))/(W(7)-W(8)))/(W(6)-W(FIT1-109
     18))                                                               FIT1-110
      W(1)=.5D0*(W(6)+W(8)+(W(11)-W(9))/(W(1)*(W(6)-W(8))))             FIT1-111
C TEST OF CONVERGENCE.                                                  FIT1-112
      W(2)=DABS(W(1)-W(J))                                              FIT1-113
      IF (W(2).LT.DABS(W(4)).OR.W(2).LT.DABS(W(5)*W(J))) GO TO 12       FIT1-114
   11 I(1)=I(1)+1                                                       FIT1-115
      RETURN                                                            FIT1-116
   12 KE=0                                                              FIT1-117
   13 I37=I(3)+7                                                        FIT1-118
      W(1)=W(I37)                                                       FIT1-119
      I31=I(3)+10                                                       FIT1-120
      W(2)=W(I31)                                                       FIT1-121
      RETURN                                                            FIT1-122
   14 KE=KE+1                                                           FIT1-123
   15 KE=KE+1                                                           FIT1-124
      GO TO 13                                                          FIT1-125
      END                                                               FIT1-126
C 07/03/07                                                      ECIS12  FIT2-000
      SUBROUTINE FIT2(M,N,A,D,IP,IR,LLO)                                FIT2-001
C IF LLO=.TRUE. EX SUBROUTINE LILESQ WRITTEN BY SCHWEIMER..             FIT2-002
C  LINEAR LEAST SQUARES PROBLEM ||B-A*D||=MIN(D)                        FIT2-003
C  SOLVED BY HOUSEHOLDER TRANSFORMATIONS.                               FIT2-004
C INPUT:     M:       NUMBER OF ROWS OF A AND B.                        FIT2-005
C            N:       NUMBER OF COLUMNS OF A AND ROWS OF D.             FIT2-006
C            A:       M*N MATRIX FOLLOWED BY THE VECTOR B OF M          FIT2-007
C                     COMPONENTS (DESTROYED).                           FIT2-008
C OUTPUT:    A:       THE UPPER PART CONTAINS THE TRANSFORMED INPUT A   FIT2-009
C                     A(2,1) CONTAINS THE SQUARE OF THE EUCLIDEAN NORM. FIT2-010
C            D:       VECTOR OF VARIABLES, THE REDUNDANT VARIABLES ARE  FIT2-011
C                     SET TO ZERO. THE ||D||=MIN IS NOT USED BECAUSE THEFIT2-012
C                     COMPONENTS OF D ARE ASSUMED NOT COMMENSURABLE.    FIT2-013
C            IP:      PERMUTATION VECTOR OF N COMPONENTS, IT CONTAINS   FIT2-014
C                     THE COLUMN LABELS OF MATRIX A ORDERED ACCORDING   FIT2-015
C                     THEIR IMPORTANCE IN REDUCING THE EUCLIDEAN NORM.  FIT2-016
C            IR:      ERROR CODE: IR=0 NO ERROR, IR=-1 ALL COMPONENTS   FIT2-017
C                     OF D ARE ZERO AND MAY BE REDUNDANT, IR>0 THE      FIT2-018
C                     FIRST IR COMPONENTS OF IP CONTAIN THE LABELS OF   FIT2-019
C                     THE NONZERO COMPONENTS OF D, THE REMAINING        FIT2-020
C                     COMPONENTS OF D ARE ZERO AND MAY BE REDUNDANT.    FIT2-021
C  NOTE: ALL ARITHMETIC OPERATIONS ARE PERFORMED IN DOUBLE PRECISION,   FIT2-022
C  AN ITERATIVE IMPROVEMENT IS IMPOSSIBLE WITHOUT SAVING A AND B.       FIT2-023
C  THE ROUND OFF ERROR OF ||B-A*D||**2 IS APPROXIMATELY GIVEN BY        FIT2-024
C  ||B(INITIAL)||**2 - ||B(TRANSFORMED)||**2                            FIT2-025
C                                                                       FIT2-026
C IF LLO=.FALSE. EX SUBROUTINE INVATA WRITTEN BY SCHWEIMER.             FIT2-027
C  INVERSION OF THE PRODUCT MATRIX A(TRANSPOSED)*A                      FIT2-028
C  THE MATRIX A IS REDUCED TO AN UPPER TRIANGULAR MATRIX R BY           FIT2-029
C  HOUSEHOLDER TRANSFORMATIONS. THE REMAINING COMPUTATION IS STRAIGHT   FIT2-030
C  FORWARD.                                                             FIT2-031
C INPUT:     M:       NUMBER OF COLUMNS OF MATRIX A.                    FIT2-032
C            N:       NUMBER OF ROWS OF MATRIX A, M >= N > 0.           FIT2-033
C            A:       INPUT MATRIX (DESTROYED).                         FIT2-034
C OUTPUT:    A:       TRIANGULAR MATRIX R, R=A(I,J) I<=J=1,N.           FIT2-035
C            D:       VECTOR OF LENGTH (N*(N+1))/2, IT CONTAINS THE     FIT2-036
C                     UPPER TRIANGULAR PART OF THE INVERSE OF A(T)*A.   FIT2-037
C            IP:      PERMUTATION VECTOR OF LENGTH N, ITS FIRST IR      FIT2-038
C                     COMPONENTS CONTAIN THE LABELS OF THE USEFUL       FIT2-039
C                     COLUMNS OF A, THE LAST COMPONENTS CONTAIN THE     FIT2-040
C                     LABELS OF THE COLUMNS WHICH ARE LINEAR            FIT2-041
C                     COMBINATIONS OF THE FIRST.                        FIT2-042
C            IR:      ERROR CODE: IR=0 NO ERROR (RANK OF MATRIX A IS N),FIT2-043
C                     IR=-1 RANK OF MATRIX A IS ZERO, IR>0 RANK OF      FIT2-044
C                     MATRIX A IS IR, THE INVERSE OF A(T)*A IS COMPUTED FIT2-045
C                     CONSIDERING THE IR COLUMNS OF A INDICATED BY THE  FIT2-046
C                     FIRST IR COMPONENTS OF IP.                        FIT2-047
C***********************************************************************FIT2-048
      IMPLICIT REAL*8 (A-H,O-Z)                                         FIT2-049
      LOGICAL LLO                                                       FIT2-050
      DIMENSION A(M,*),D(*),IP(N)                                       FIT2-051
      IR=0                                                              FIT2-052
      N1=N                                                              FIT2-053
      IF (LLO) N1=N+1                                                   FIT2-054
      DO 1 J=1,N                                                        FIT2-055
    1 IP(J)=J                                                           FIT2-056
C ROTATION LOOP.                                                        FIT2-057
      DO 13 K=1,N                                                       FIT2-058
C PIVOT ELEMENT    COLUMN J WHICH GENERATES THE LARGEST NEW A(*,M) AND  FIT2-059
C AND LINE I OF THE LARGEST ELEMENT OF COLUMN J IF LLO=.TRUE.           FIT2-060
C COLUMN AND LINE OF LARGEST ELEMENT IF LLO=.FALSE.                     FIT2-061
      U=0.D0                                                            FIT2-062
      DO 7 J=K,N                                                        FIT2-063
      C=0.D0                                                            FIT2-064
      DO 2 I=K,M                                                        FIT2-065
      IF (DABS(A(I,J)).LE.DABS(C)) GO TO 2                              FIT2-066
      L2=I                                                              FIT2-067
      C=A(I,J)                                                          FIT2-068
    2 CONTINUE                                                          FIT2-069
      IF (C.EQ.0.D0) GO TO 7                                            FIT2-070
      S=0.D0                                                            FIT2-071
      IF (LLO) GO TO 4                                                  FIT2-072
      IF (DABS(C).LT.U) GO TO 7                                         FIT2-073
      U=DABS(C)                                                         FIT2-074
      DO 3 I=K,M                                                        FIT2-075
      V=A(I,J)/C                                                        FIT2-076
    3 S=S+V*V                                                           FIT2-077
      GO TO 6                                                           FIT2-078
    4 T=0.D0                                                            FIT2-079
      DO 5 I=K,M                                                        FIT2-080
      V=A(I,J)/C                                                        FIT2-081
      S=S+V*V                                                           FIT2-082
    5 T=T+V*A(I,N1)                                                     FIT2-083
      IF (U.GE.T*(T/S)) GO TO 7                                         FIT2-084
      U=T*(T/S)                                                         FIT2-085
    6 SIG=C*DSQRT(S)                                                    FIT2-086
      L=J                                                               FIT2-087
      L1=L2                                                             FIT2-088
    7 CONTINUE                                                          FIT2-089
      IF (U.EQ.0.D0) GO TO 14                                           FIT2-090
C PERMUTE COLUMNS OF A(K).                                              FIT2-091
      I=IP(L)                                                           FIT2-092
      IP(L)=IP(K)                                                       FIT2-093
      IP(K)=I                                                           FIT2-094
      DO 8 I=1,M                                                        FIT2-095
      C=A(I,L)                                                          FIT2-096
      A(I,L)=A(I,K)                                                     FIT2-097
    8 A(I,K)=C                                                          FIT2-098
C PERMUTE LINES OF A(K).                                                FIT2-099
      DO 9 J=K,N1                                                       FIT2-100
      C=A(K,J)                                                          FIT2-101
      A(K,J)=A(L1,J)                                                    FIT2-102
    9 A(L1,J)=C                                                         FIT2-103
C ROTATION OF THE LOWER COLUMN FRAGMENT OF A(K) AND B(K).               FIT2-104
      U=SIG+A(K,K)                                                      FIT2-105
      V=A(K,K)/SIG                                                      FIT2-106
      A(K,K)=-SIG                                                       FIT2-107
      L=K+1                                                             FIT2-108
      IF (L.GT.M) A(K,L)=-A(K,L)                                        FIT2-109
      IF (L.GT.N1.OR.L.GT.M) GO TO 13                                   FIT2-110
      DO 12 J=L,N1                                                      FIT2-111
      S=V*A(K,J)                                                        FIT2-112
      DO 10 I=L,M                                                       FIT2-113
      T=A(I,K)/SIG                                                      FIT2-114
   10 S=S+T*A(I,J)                                                      FIT2-115
      T=(A(K,J)+S)/U                                                    FIT2-116
      A(K,J)=-S                                                         FIT2-117
      DO 11 I=L,M                                                       FIT2-118
   11 A(I,J)=A(I,J)-T*A(I,K)                                            FIT2-119
   12 CONTINUE                                                          FIT2-120
   13 CONTINUE                                                          FIT2-121
C END OF ROTATION LOOP.                                                 FIT2-122
      K=N                                                               FIT2-123
      GO TO 15                                                          FIT2-124
   14 K=K-1                                                             FIT2-125
      IR=K                                                              FIT2-126
   15 IF (LLO) GO TO 22                                                 FIT2-127
      IF (K.EQ.0) GO TO 29                                              FIT2-128
C INVERSE OF THE TRIANGULAR MATRIX R STORED IN D.                       FIT2-129
      DO 18 J=1,K                                                       FIT2-130
      D(J)=A(J,J)                                                       FIT2-131
      A(J,J)=1.D0/D(J)                                                  FIT2-132
      IF (J.EQ.1) GO TO 18                                              FIT2-133
      I=J                                                               FIT2-134
      DO 17 L=2,J                                                       FIT2-135
      I1=I                                                              FIT2-136
      I=I-1                                                             FIT2-137
      S=0.D0                                                            FIT2-138
      DO 16 L1=I1,J                                                     FIT2-139
   16 S=S+A(I,L1)*A(J,L1)                                               FIT2-140
   17 A(J,I)=-S/D(I)                                                    FIT2-141
   18 CONTINUE                                                          FIT2-142
C INVERSE OF THE PRODUCT MATRIX.                                        FIT2-143
      DO 21 J=1,K                                                       FIT2-144
      DO 20 I=1,J                                                       FIT2-145
      L=MAX0(IP(J),IP(I))                                               FIT2-146
      IJ=IP(I)+IP(J)+(L*(L-3))/2                                        FIT2-147
      S=0.D0                                                            FIT2-148
      DO 19 L1=J,K                                                      FIT2-149
   19 S=S+A(L1,I)*A(L1,J)                                               FIT2-150
   20 D(IJ)=S                                                           FIT2-151
   21 CONTINUE                                                          FIT2-152
      GO TO 30                                                          FIT2-153
C SQUARE OF THE EUCLIDEAN NORM.                                         FIT2-154
   22 S=0.D0                                                            FIT2-155
      L=K+1                                                             FIT2-156
      IF (K.EQ.M) GO TO 24                                              FIT2-157
      DO 23 I=L,M                                                       FIT2-158
   23 S=S+A(I,N1)*A(I,N1)                                               FIT2-159
   24 A(2,1)=S                                                          FIT2-160
      IF (K.EQ.N) GO TO 26                                              FIT2-161
C COMPONENTS OF D WHICH DO NOT REDUCE THE EUCLIDEAN NORM.               FIT2-162
      DO 25 J=L,N                                                       FIT2-163
      IJ=IP(J)                                                          FIT2-164
   25 D(IJ)=0.D0                                                        FIT2-165
      IF (K.EQ.0) GO TO 29                                              FIT2-166
C COMPUTATION OF D.                                                     FIT2-167
   26 IJ=IP(K)                                                          FIT2-168
      D(IJ)=A(K,N1)/A(K,K)                                              FIT2-169
      IF (K.EQ.1) GO TO 30                                              FIT2-170
      DO 28 J=2,K                                                       FIT2-171
      L=K+2-J                                                           FIT2-172
      S=A(L-1,N1)                                                       FIT2-173
      DO 27 I=L,K                                                       FIT2-174
      IJ=IP(I)                                                          FIT2-175
   27 S=S-A(L-1,I)*D(IJ)                                                FIT2-176
      IJ=IP(L-1)                                                        FIT2-177
   28 D(IJ)=S/A(L-1,L-1)                                                FIT2-178
      GO TO 30                                                          FIT2-179
C ERROR CODE.                                                           FIT2-180
   29 IR=-1                                                             FIT2-181
   30 RETURN                                                            FIT2-182
      END                                                               FIT2-183
