      SUBROUTINE ECIS(inpnam,outnam)
C 01/01/04                                                      ECIS03  ECIS-000
C USE CHARACTER*4 IF THE TYPE OF ARGUMENT IS CONTROLLED BY COMPILER     ECIS-001
C THE FUJITSU COMPILER GIVES AN "INFORMATION" DIAGNOSTIC FOR THE        ECIS-002
C EQUIVALENCE STATEMENT MIXING CHARACTER TYPE WITH OTHER TYPES.         ECIS-003
      PARAMETER (IDMX=4000000)                                          ECIS-004
      DIMENSION NW(2,IDMX)                                              ECIS-005
      CHARACTER*4 CW(2,IDMX)                                            ECIS-006
      CHARACTER*(*) inpnam, outnam
      REAL*8 DW(IDMX)                                                   ECIS-007
      EQUIVALENCE (DW,NW,CW,W)                                          ECIS-008
      COMMON DW                                                         ECIS-009
C THE COMMON /INOUT/ ALLOWS TO CHANGE THE INPUT FILE "MR", THE OUTPUT   ECIS-010
C FILE "MW" AND SAVE FILE "MS" WITHOUT MODIFICATION OF THE SUBROUTINES. ECIS-011
C INPA, INPB AND INPC WRITE STILL WRITE "DESCRIPTION OF INPUT" ON FILE  ECIS-012
C 6. THESES VALUES ARE NOT SAVED ON TAPE MS.                            ECIS-013
      COMMON /INOUT/ MR,MW,MS                                           ECIS-014
      MR=75                                                             ECIS-015
      MW=76                                                             ECIS-016
      MS=78                                                             ECIS-017
      OPEN(75,file=inpnam,STATUS='OLD')
      OPEN(76,file=outnam)
      OPEN(78,file='file78')
      OPEN(58,file='ecis03.cs')
      OPEN(55,file='ecis03.dat')
      OPEN(59,file='ecis03.ics')
      OPEN(60,file='file60')
      OPEN(61,file='file61')
      OPEN(62,file='file62')
      OPEN(63,file='ecis03.tlj')
      OPEN(64,file='file64')
      OPEN(65,file='file65')
      OPEN(66,file='file66')
      OPEN(85,file='ecis03.ang')
      OPEN(86,file='file86')
      OPEN(87,file='file87')
      OPEN(88,file='file88')
      OPEN(89,file='file89')
      OPEN(99,file='file99')
      CALL CALC(NW,CW,DW,IDMX)                                          ECIS-018
      CLOSE(75)
      CLOSE(76)
      CLOSE(78,status='delete')
      CLOSE(58)
      CLOSE(55)
      CLOSE(59)
      CLOSE(60,status='delete')
      CLOSE(61,status='delete')
      CLOSE(62,status='delete')
      CLOSE(63)
      CLOSE(64,status='delete')
      CLOSE(65,status='delete')
      CLOSE(66,status='delete')
      CLOSE(85)
      CLOSE(86,status='delete')
      CLOSE(87,status='delete')
      CLOSE(88,status='delete')
      CLOSE(89,status='delete')
      CLOSE(99,status='delete')
      RETURN                                                            ECIS-019
      END                                                               ECIS-020
C 01/01/04                                                      ECIS03  HORA-000
      SUBROUTINE HORA                                                   HORA-001
C GIVES THE TIME ELAPSED SINCE THE FIRST CALL AND SINCE THE LAST CALL   HORA-002
C IT USES A FUNCTION WHICH RETURNS IN MILLISECONDS THE TIME LEFT FOR A  HORA-003
C RUN OF "MSEC" SECONDS (DEFAULT VALUE 3600).                           HORA-004
C***********************************************************************HORA-005
      COMMON /INOUT/ MR,MW,MS                                           HORA-006
      DATA NX,M0,M2 /0,0,0/                                             HORA-007
      IF (NX.NE.0) GO TO 1                                              HORA-008
      CALL STIM(M0)                                                     HORA-009
      M2=M0                                                             HORA-010
      NX=1                                                              HORA-011
      WRITE (MW,1000) M0                                                HORA-012
      RETURN                                                            HORA-013
    1 CALL STIM(M1)                                                     HORA-014
      N5=M2-M1                                                          HORA-015
      NT=M0-M1                                                          HORA-016
      M2=M1                                                             HORA-017
      NS=NT/1000                                                        HORA-018
      NT=NT-1000*NS                                                     HORA-019
      NM=NS/60                                                          HORA-020
      NS=NS-60*NM                                                       HORA-021
      NH=NM/60                                                          HORA-022
      NM=NM-60*NH                                                       HORA-023
      WRITE (MW,1001) NH,NM,NS,NT,N5                                    HORA-024
      RETURN                                                            HORA-025
 1000 FORMAT (' FIRST CALL TO HORA',10X,I10,' MILLISECONDS')            HORA-026
 1001 FORMAT (' *** TOTAL TIME ***',I3,'H',I3,'MN',I3,'S',I4,' MS',10X,'HORA-027
     1DIFFERENCE SINCE LAST CALL',I9,' MILLISECONDS')                   HORA-028
      END                                                               HORA-029
C 01/01/04                                                      ECIS03  STIM-000
      SUBROUTINE STIM(I)                                                STIM-001
C RETURNS INTEGER VALUE OF CPU TIME LEFT FOR A JOB OF "MSEC" SECONDS    STIM-002
C IN MILLISECONDS.                                                      STIM-003
C***********************************************************************STIM-004
      COMMON /CNSEC/ MSEC                                               STIM-005
      DIMENSION A(2)                                                    STIM-006
      B=ETIME(A)                                                        STIM-007
      I=INT(1000.*(FLOAT(MSEC)-B))                                      STIM-008
      RETURN                                                            STIM-009
      END                                                               STIM-010
C 01/01/04                                                      ECIS03  MEMO-000
      SUBROUTINE MEMO(NAME,IDMT,NPLACE,IX)                              MEMO-001
C CONTROL OF MEMORY ARRAY                                               MEMO-002
C INPUT:   NAME     NAME OF CALLING SUBROUTINE                          MEMO-003
C          IDMT     PREVIOUS SPACE                                      MEMO-004
C          NPLACE   REQUESTED SPACE                                     MEMO-005
C IX: CONTROL NUMBER IX=1     ABSOLUTE VALUES OF IDMT AND NPLACE        MEMO-006
C                    IX=2     RELATIVE VALUES OF IDMT AND NPLACE        MEMO-007
C***********************************************************************MEMO-008
      CHARACTER*4 NAME                                                  MEMO-009
      COMMON /INOUT/ MR,MW,MS                                           MEMO-010
      IF (IDMT.GE.NPLACE) RETURN                                        MEMO-011
      IF (IX.NE.1) GO TO 1                                              MEMO-012
      WRITE (MW,1000) IDMT,NPLACE                                       MEMO-013
      GO TO 2                                                           MEMO-014
    1 IF (IX.NE.2) WRITE (MW,1001) IX                                   MEMO-015
      I=NPLACE-IDMT                                                     MEMO-016
      WRITE (MW,1002) I                                                 MEMO-017
    2 WRITE (MW,1003) NAME                                              MEMO-018
      STOP                                                              MEMO-019
 1000 FORMAT (' NOT ENOUGH PLACE .....   ',I10,' MEMORIES ALLOWED',I10,'MEMO-020
     1 MEMORIES REQUESTED'/)                                            MEMO-021
 1001 FORMAT (' IX = ',I4,' NOT ALLOWED. USING IX=2'//)                 MEMO-022
 1002 FORMAT (' WORKING SPACE TOO SMALL':,I6,' MEMORIES MISSING'/)      MEMO-023
 1003 FORMAT (' IN ',A4,'  ... STOP ...')                               MEMO-024
      END                                                               MEMO-025
C 01/01/04                                                      ECIS03  CALC-000
      SUBROUTINE CALC(NW,CW,DW,IDMX)                                    CALC-001
C MAIN SUBROUTINE OF THE PROGRAM                                        CALC-002
C W,NW,DW ARE THE WORKING SPACE IN EQUIVALENCE BY CALL,STARTING AS      CALC-003
C REAL*8. THEY ARE RESPECTIVELY REAL, INTEGER AND DOUBLE PRECISION.     CALC-004
C IDMX IS THE LENGTH OF DW.                                             CALC-005
C                                                                       CALC-006
C ADDRESSES IN THE WORKING FIELD DEFINED HERE (FOR OTHERS, SEE CALX)    CALC-007
C IN COMMON /DECOU/                                                     CALC-008
C 34- NT       HERE, ALSO REDUCED NUCLEAR MATRIX ELEMENTS               CALC-009
C 35- NIVQ     TABLE OF MULTIPOLES                                      CALC-010
C 36- NIVY     TABLE OF FORM FACTOR IDENTIFICATION IVY (FOR COMPUTATION)CALC-011
C 37- NIVZ     TABLE OF FORM FACTOR IDENTIFICATION IVZ (FOR USE)        CALC-012
C 38- NCOI     ADDRESS OF THE TABLE FOR DISCRETISATION OF CONTINUUM     CALC-013
C 39- MIPI     SAME AS NIPI FOR THE DISCRETISATION OF CONTINUUM         CALC-014
C 40- NXD      ADDRESS OF WEIGHTS AND STEPS OF CONTINUUM                CALC-015
C 41- MWV      SAME AS NWV FOR THE DISCRETISATION OF CONTINUUM          CALC-016
C 42- NIXT     TRANSMISSION COEFFICIENTS OF UNCOUPLED STATES            CALC-017
C 43- NTY      TEMPORARY RESULTS OF COMPOUND NUCLEUS FOR INTERPOLATION  CALC-018
C 44- NTX      PARTIAL REACTION CROSS SECTIONS AND COMPOUND NUCLEUS     CALC-019
C 45- NRY      COMPOUND NUCLEUS COEFFICIENTS                            CALC-020
C 46- NRCO     STRENGTH OF COULOMB CENTRAL POTENTIALS FOR CORRECTIONS   CALC-021
C 47- NRDO     STRENGTH OF COULOMB TRANSITION POTENTIALS FOR CORRECTIONSCALC-022
C 48- NVC1     REAL POTENTIALS                                          CALC-023
C 49- NVC2     IMAGINARY POTENTIALS                                     CALC-024
C 50- NNC      FIRST FREE ADDRESS AFTER COMPUTATION OF POTENTIALS       CALC-025
C 51- NCX      FIRST FREE ADDRESS FOR COMPUTATION OF POTENTIALS         CALC-026
C OTHER INTEGER DATA OF COMMON /DECOU/                                  CALC-027
C 52- IDMT     TOTAL WORKING FIELD LENGTH AS SINGLE PRECISION           CALC-028
C 53-98          SEE CALX                                               CALC-029
C 99- KXT      NUMBER OF PENETRABILITIES FOR UNCOUPLED STATES           CALC-030
C100- NRZ      NUMBER OF RESULTS TO SAVE FOR MINIMUM CHI2               CALC-031
C101- NTZ      NUMBER OF MEMORIES TO INITIALISE TO ZERO FOR SCATTERING  CALC-032
C              MATRIX AND COMPOUND NUCLEUS RESULTS                      CALC-033
C102- LMAX3    EFFECTIVE NUMBER OF COULOMB FUNCTIONS                    CALC-034
C103- IPM      NUMBER PF J VALUES USED FOR SCATTERING MATRIX (IN CAL1)  CALC-035
C105- IPK      NUMBER PF J VALUES USED FOR COMPOUND NUCLEUS (IN CAL1)   CALC-036
C106-111         SEE CALX                                               CALC-037
C                                                                       CALC-038
C IN COMMON /TITR/   TITLE:        COMMENT CARD REPRODUCED IN THE OUTPUTCALC-039
C IN COMMON /DCHI/   CHI2,CHI2M:   CHI-SQUARE AND MINIMUM CHI-SQUARE    CALC-040
C                    YY(3):        INDICATIONS FOR SEARCH   SEE FITE    CALC-041
C IN COMMON /DCONS/  CM,CHB:       NUCLEAR MASS AND H BAR               CALC-042
C                    CK,CMB,CCZ:   DERIVED CONSTANTS                    CALC-043
C FOR COMMONS /POTE1/ AND /POTE2/ SEE REDM                              CALC-044
C FOR COMMON /NCOMP/ SEE CALX, LECT AND COLF                            CALC-045
C                                                                       CALC-046
C ******** MEANING OF THE LOGICAL CONTROLS LO ********                  CALC-047
C                                                                       CALC-048
C LO(I+100)=.NOT.LO(I) FOR I=1,100                                      CALC-049
C LO(235+I)=LO(50+I) FOR I=1,15 DURING SEARCH IF LO(51) TO LO(65) ARE   CALC-050
C USED ONLY FOR COMPLETE OUTPUT                                         CALC-051
C THE VALUES OF THE FIRST 100 LO ARE READ IN CALX ON TWO DATA CARDS     CALC-052
C THE FIRST DATA CARD IS FOR 1-50,THE SECOND FOR 51-100                 CALC-053
C ONLY,THE VALUES LISTED ON THE INPUT DESCRIPTION ARE USED              CALC-054
C *** FOR THEIR MEANING, SEE THIS DESCRIPTION *****                     CALC-055
C EXCEPTION IF LO(36)=.TRUE.: ONLY THE FIRST CARD IS READ, THE PROGRAM  CALC-056
C DOES NOT TAKE THEM INTO ACCOUNT BUT CONTINUE A SEARCH SAVED ON TAPE NSCALC-057
C *** MEANING OF LO(I) FOR I GREATER THAN 200 ****                      CALC-058
C LO(201) IS TRUE IF THERE IS NO REAL SPIN-ORBIT POTENTIAL              CALC-059
C LO(202) IS TRUE IF THERE IS NO IMAGINARY SPIN-ORBIT POTENTIAL         CALC-060
C LO(203) IS TRUE IF THERE IS NO COULOMB SPIN-ORBIT POTENTIAL           CALC-061
C LO(204) IS TRUE IF CONVERGENCE IS OBTAINED IN THE ITERATION           CALC-062
C LO(205) IS TRUE IF CONVERGENCE IS OBTAINED FOR THIS EQUATION          CALC-063
C LO(206) IS TRUE WHEN THE ITERATION IS NOT THE LAST ONE PERMITTED      CALC-064
C LO(207) IS TRUE IF ALL THE COUPLINGS HAVE TO BE CALCULATED BEFOREHAND CALC-065
C LO(208) IS TRUE IF THE DIAGONAL COULOMB CORRECTIONS ARE NEEDED        CALC-066
C LO(209) IS TRUE FOR DIRAC POTENTIALS                                  CALC-067
C LO(210) IS TRUE IF DERIVATIVES ARE NEEDED                             CALC-068
C LO(211) IS TRUE IF NUCLEAR PARAMETERS ARE CHANGED IN SEARCH           CALC-069
C LO(212) IS TRUE IF SP.-ORB. OR COMP. NUCL. PARAM. IS CHANGED IN SEARCHCALC-070
C LO(213) IS TRUE IF DISPERSION RELATION IS CHANGED IN SEARCH           CALC-071
C LO(215) IS TRUE IF IT IS THE FIRST COMPUTATION FOR THIS ENERGY        CALC-072
C LO(216) IS TRUE FOR NO OUTPUT                                         CALC-073
C LO(217) IS TRUE FOR ALL THE CALCULATIONS EXCEPT THE FIRST             CALC-074
C LO(218) IS TRUE FOR LAST RESULTS                                      CALC-075
C LO(219) IS TRUE FOR RESULTS WITHOUT DOING THE CALCULATION AGAIN       CALC-076
C LO(220) IS TRUE FOR OUTPUT AND LAST CALCULATION IS THE BEST ONE       CALC-077
C LO(221) IS TRUE FOR OPTICAL MODEL WITHOUT COUPLING                    CALC-078
C LO(222) IS NOT USED                                                   CALC-079
C LO(223) IS TRUE IF LO(18) IS .TRUE. AND NO SPIN IN THE INITIAL STATE  CALC-080
C LO(224) IS TRUE FOR COMPOUND NUCLEUS OR PUNCH OF TRANSMISSION COEFF.  CALC-081
C LO(225) IS TRUE IN CAL1 FOR A CALL TO USUAL COUPLED EQUATIONS SUBR.   CALC-082
C LO(226) IS TRUE IF THERE ARE OBSERVABLES IN THE LABORATORY SYSTEM     CALC-083
C LO(227) IS TRUE FOR COULOMB CORRECTIONS WITH PURE REGULAR FUNCTIONS   CALC-084
C LO(228) IS TRUE FOR NO COPY OF UNCOUPLED FUNCTIONS AND PHASE-SHIFT    CALC-085
C LO(229) IS TRUE FOR REAL SPIN-ORBIT OR DIRAC EQUATION                 CALC-086
C LO(230) IS TRUE FOR IMAGINARY SPIN-ORBIT OR DIRAC EQUATION            CALC-087
C LO(231) IS TRUE IF LO(18)=.TRUE. WITH NON ZERO SPINS FOR GROUND STATE CALC-088
C LO(232) IS TRUE IF THE TOTAL SPIN IS TOO LARGE TO COMPUTE COMP. NUC.  CALC-089
C LO(233) IS TRUE STORE FISS. AND GAMMA TRANS. COEFF. FOR INTERPOLATION CALC-090
C LO(234) IS FREE                                                       CALC-091
C LO(235) IS FREE                                                       CALC-092
C LO(211) TO LO(220) ARE INITIALISED TO .FALSE. IN CALX                 CALC-093
C LO(216) TO LO(220) ARE INITIALISED TO .FALSE. IN EVAL                 CALC-094
C***********************************************************************CALC-095
      IMPLICIT REAL*8 (A-H,O-Z)                                         CALC-096
      LOGICAL LO(250)                                                   CALC-097
      DIMENSION NW(2,IDMX),DW(IDMX)                                     CALC-098
      CHARACTER*4 FIN,TITLE,CW(2*IDMX)                                  CALC-099
      DATA FIN /4HFIN /                                                 CALC-100
      COMMON /DECOU/ NJIT,NIPP,NPAA,NWV,NIPH,NSCN,NPAR,NNIV,NFIS,NGAM,NPCALC-101
     1OT,NBETA,NFM,NTGX,NDONN,NRC,NIW,NDE,NISE,NNVI,NNWI,NCC,MCC,NXA,NAMCALC-102
     21,NFAC,NFAM,NPAD,NFG,NXG,NSM,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,CALC-103
     3NXD,MWV,NIXT,NTY,NTX,NRY,NRCO,NRDO,NVC1,NVC2,NNC,NCX,IDMT,NCOLL,NJCALC-104
     4MAX,ITERM,NPP,JDM,JIT,NSEC,LMD,MCM(2),NCOLS,NCOLT,KMAX,KMIN,NVA,NBCALC-105
     5ET,NBT1,LMX,LMAX1,NLT,ISM,IQM,IQMAX,MS1,MS2,NCT(6),KBA,KAB,KBC,KCCCALC-106
     6,NJC,JTX,JTH,NCOLR,NREC,NTOT,NFA,LMAX2,KE,ITEMM,NPLACE,KXT,NRZ,NTZCALC-107
     7,LMAX3,IPM,IPK,BJM,EITER,ACONV,CONJ,H,NSPIN                       CALC-108
      COMMON /TITR/ TITLE(18)                                           CALC-109
      COMMON /DCHI/ CHI2,CHI2M,YY(3)                                    CALC-110
      COMMON /DCONS/ CM,CK,CHB,CMB,CCZ                                  CALC-111
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM              CALC-112
      COMMON /POTE2/ ITY(8),INVT,INTV,INSL,NPX                          CALC-113
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQCALC-114
     1,ACN(20)                                                          CALC-115
      COMMON /INOUT/ MR,MW,MS                                           CALC-116
      IDMT=IDMX                                                         CALC-117
C CONSTANTS COMPUTED FROM THE FUNDAMENTAL CONSTANTS, ATOMIC MASS, HBAR*CCALC-118
C AND ALPHA, AS GIVEN IN THE EUROPEAN PHYSICAL JOURNAL, PAGE 73, VOLUME CALC-119
C 15 (2000) REFERRING FOR THESE VALUES TO THE 1998 CODATA SET WHICH MAY CALC-120
C BE FOUND AT http://physics.nist.gov/constants                         CALC-121
C     CM=931.494013 +/- 0.000037 MeV                                    CALC-122
      CM=931.494013D0                                                   CALC-123
C     CHB=197.3269601 +/- 0.0000078 (*1.0E-9 eV*cm)                     CALC-124
      CHB=197.3269601D0                                                 CALC-125
C     CZ=137.03599976 +/- 0.00000050 without dimension                  CALC-126
      CZ=137.03599976D0                                                 CALC-127
      CMB=CM/CHB                                                        CALC-128
      CK=2.D0*CM/CHB**2                                                 CALC-129
      CCZ=CHB/CZ                                                        CALC-130
C MAIN INPUT                                                            CALC-131
    1 CHI2M=1.D35                                                       CALC-132
      CALL CALX(NW,CW,DW,LO)                                            CALC-133
      IF (TITLE(1).EQ.FIN) RETURN                                       CALC-134
      NSP1D=NSP(1)                                                      CALC-135
      IF (LO(36)) GO TO 17                                              CALC-136
    2 NSP(1)=NSP1D                                                      CALC-137
      NSP(3)=NSP(1)-NSP(2)                                              CALC-138
      CALL COLF(NCOLX,NCOLL,NW,DW(NWV),DW(NFG),DW(NXG),ISM,LMAX1,LMAX2,HCALC-139
     1,NW(1,NT),DW(NT),IDMT-NT,LMAX3,NW(1,NNIV),KXT,LO)                 CALC-140
C COMPUTATION OF NUCLEAR MATRIX ELEMENTS AND SPACE FOR FORM FACTORS     CALC-141
    3 IF (LO(61)) WRITE (61,1000) DW(NWV),DW(NWV+11),DW(NWV+1),NW(2,2),NCALC-142
     1COLL                                                              CALC-143
      CALL REDM(NW(1,NNIV),NW(1,NT),DW(NT),NW,NCOLL,IT,NW(1,NBETA),DW(NBCALC-144
     1ETA),NBT1,NW(1,NIPH),NW(1,NPAR),DW(NPAA),NVA,IQMAX,NSPIN,DW(NFAC),CALC-145
     2NFA,NPP,IM,IDMT-NT,LO)                                            CALC-146
      NIVQ=NT+3*IT                                                      CALC-147
      NIVY=NIVQ+(3*IM+1)/2                                              CALC-148
      NIVZ=NIVY+(7*INTC+1)/2                                            CALC-149
      NCOI=NIVZ+2*INTV                                                  CALC-150
      IF (LO(107).OR.LO(217)) GO TO 6                                   CALC-151
      NPOT=NCOI                                                         CALC-152
      CALL EXTP(NPP,NCOLS,NCOLX,DW(NWV),NW(1,NNIV),NW(1,NT),NW(1,NIVY),NCALC-153
     1W(1,NIVQ),NW,DW(NFAC),NFA,DW(NPOT),NW(1,NPOT),NW(1,NPOT+2),NW(1,NICALC-154
     2PP),DW(NIPP),IDMT-NPOT,LO)                                        CALC-155
C PERMUTATION OF POTENTIALS AND INFORMATIONS ON TRANSITIONS             CALC-156
      N=NPOT-NT                                                         CALC-157
      M=NPOT+NW(2,NPOT+1)                                               CALC-158
      IF (N+M.GT.IDMT) CALL MEMO('CALC',IDMT,N+M,1)                     CALC-159
      NN=2*N                                                            CALC-160
      N1=2*NT-2                                                         CALC-161
      N2=2*M-2                                                          CALC-162
      DO 4 I=1,NN                                                       CALC-163
    4 CW(N2+I)=CW(N1+I)                                                 CALC-164
      NN=NN+2*NW(2,NPOT+1)                                              CALC-165
      N2=N2-2*NW(2,NPOT+1)                                              CALC-166
      DO 5 I=1,NN                                                       CALC-167
    5 CW(N1+I)=CW(N2+I)                                                 CALC-168
      NPOT=NT                                                           CALC-169
      NT=NPOT+NW(2,NPOT+1)                                              CALC-170
      NIVQ=NT+3*IT                                                      CALC-171
      NIVY=NIVQ+(3*IM+1)/2                                              CALC-172
      NIVZ=NIVY+(7*INTC+1)/2                                            CALC-173
    6 NCOI=NIVZ+2*INTV                                                  CALC-174
      MIPI=NCOI+2*NCONT                                                 CALC-175
      NXD=MIPI                                                          CALC-176
      MWV=NXD                                                           CALC-177
      NIE=0                                                             CALC-178
      NIXT=MWV+18*NIE                                                   CALC-179
    7 CALL DISP(NW,DW(NWV),NW(1,NIPP),DW(NIPP),NW(1,NPOT),DW(NPOT),NCOLXCALC-180
     1-NCONT,LO)                                                        CALC-181
      IF (NCONT.EQ.0) GO TO 10                                          CALC-182
      IF (.NOT.(LO(214).OR.LO(215))) GO TO 9                            CALC-183
      CALL CONU(0,NW,DW(NWV),NW(1,MIPI),DW(MWV),NW(1,NCOI),DW(NXD),DW(NSCALC-184
     1CN),KXT,LO)                                                       CALC-185
      NXD=MIPI+(11*NIE+1)/2                                             CALC-186
      MWV=NXD+3*NIE                                                     CALC-187
      NIXT=MWV+18*NIE                                                   CALC-188
      IF (NIXT.GT.IDMT) CALL MEMO('CALC',IDMT,NIXT,1)                   CALC-189
      NCOLT=NCOLX+NIE-NCONT                                             CALC-190
      NSP(1)=NSP(1)+NCOLT-NCOLX                                         CALC-191
      NSP(3)=NSP(3)+NCOLT-NCOLX                                         CALC-192
    8 CALL CONU(1,NW,DW(NWV),NW(1,MIPI),DW(MWV),NW(1,NCOI),DW(NXD),DW(NSCALC-193
     1CN),KXT,LO)                                                       CALC-194
    9 CALL DISP(NW(1,MIPI),DW(MWV),NW(1,NIPP),DW(NIPP),NW(1,NPOT),DW(NPOCALC-195
     1T),NIE,LO)                                                        CALC-196
   10 NDP=2*NCOLL+NSP(1)+1                                              CALC-197
      NDQ=KBA+NSP(3)-NSP(1)                                             CALC-198
      NTY=NIXT+KXT                                                      CALC-199
      NSM=NTY                                                           CALC-200
      IF (LO(81).AND.LO(233)) NSM=NSM+KMAX*(KCC+2+NCOLT-NCOLS)          CALC-201
      NTX=NSM+2*NJMAX*KBA                                               CALC-202
      NRY=NTX+NCOLS+1                                                   CALC-203
      IF (LO(81)) NRY=NTX+NCOLL+NCOLT+3                                 CALC-204
      NRCO=NRY                                                          CALC-205
      IF (LO(81)) NRCO=NRCO+KMAX*NCOLS                                  CALC-206
      NRZ=NRCO-NSM                                                      CALC-207
      NTZ=NRCO-NTY                                                      CALC-208
      IF (LO(32)) NRCO=2*NRCO-NSM                                       CALC-209
      NRDO=NRCO+2*NPX                                                   CALC-210
      IF (LO(100)) NRDO=NRCO+2*NCOLT                                    CALC-211
      NVC1=NRDO+2*INTV                                                  CALC-212
      NVC2=NVC1+ITY(2)*ISM                                              CALC-213
      NNC=NVC1+ITX(1)*ISM                                               CALC-214
      IF (LO(100)) NNC=NVC1+ITX(7)*ISM                                  CALC-215
      NCX=NVC1+ITXM*ISM                                                 CALC-216
      NPLACE=MAX0(NPLACE,NCX,NNC+((NREC+1)*(2*NTOT+2+NREC)/2+1)/2)      CALC-217
   11 CALL GGDR(NW,DW(NWV),DW(NSCN),LO)                                 CALC-218
      IF (LO(213)) GO TO 12                                             CALC-219
      IF (LO(54)) WRITE (MW,1001) NPLACE                                CALC-220
      IF (NPLACE.GT.IDMT) CALL MEMO('CALC',IDMT,NPLACE,1)               CALC-221
      CALL STIM(K1)                                                     CALC-222
C MAIN COMPUTATION                                                      CALC-223
   12 CALL CAL1(NW,CW,DW,LO)                                            CALC-224
      IF (LO(177)) CALL HORA                                            CALC-225
      IF (LO(218).OR.LO(132)) GO TO 18                                  CALC-226
C AUTOMATIC SEARCH                                                      CALC-227
      CALL STIM(K2)                                                     CALC-228
      IF (LO(34)) NW(2,NIW)=-1+NW(1,NIW+1)+(K1-10*NSEC)/(K1-K2)         CALC-229
      K1=K2                                                             CALC-230
      IF (NW(1,NIW+1).GT.1.OR.LO(76).OR.LO(75)) GO TO 14                CALC-231
C CHANGE OF CONTROLS IF FULL OUTPUT WAS NOT REQUESTED AT THE FIRST RUN  CALC-232
      DO 13 I=51,58                                                     CALC-233
      LO(I+185)=LO(I)                                                   CALC-234
      LO(I)=.FALSE.                                                     CALC-235
   13 LO(I+100)=.TRUE.                                                  CALC-236
      LO(216)=.TRUE.                                                    CALC-237
C IDENTIFICATION OF VARIABLES                                           CALC-238
   14 CALL VARI(1,NW,DW,LO)                                             CALC-239
C SAVE THE SEARCH ON TAPE NS.                                           CALC-240
      IF (LO(35).AND.NW(1,NIW+1).GE.NW(2,NIW)) CALL REST(0,NW,DW,LO,IDMTCALC-241
     1)                                                                 CALC-242
C HANDLING OF VARIABLES                                                 CALC-243
   15 CALL FITE(KE,NTOT,NREC,DW(NRES),DW(NXX),DW(NDE),DW(NRC),NW(1,NRC),CALC-244
     1NW(1,NIW),DW(NNC))                                                CALC-245
C TRANSFORMATION OF VARIABLES INTO PARAMETERS                           CALC-246
   16 CALL VARI(0,NW,DW,LO)                                             CALC-247
      IF (KE.EQ.1) GO TO 19                                             CALC-248
      LO(211)=LO(52).OR.LO(61).OR.LO(211)                               CALC-249
      LO(212)=LO(212).OR.LO(10)                                         CALC-250
      GO TO 19                                                          CALC-251
C CONTINUATION OF A PREVIOUS SEARCH                                     CALC-252
   17 CALL REST(1,NW,DW,LO,IDMT)                                        CALC-253
      IF (LO(177)) CALL HORA                                            CALC-254
      CALL STIM(K1)                                                     CALC-255
      IF ((KE.NE.1).AND.(NW(1,NIW+1).NE.1)) GO TO 16                    CALC-256
      GO TO 15                                                          CALC-257
   18 N=IDMT-NPLACE                                                     CALC-258
      WRITE (MW,1002) NPLACE,N                                          CALC-259
      IF (LO(35).AND.LO(32).AND.(KE.EQ.0)) CALL REST(0,NW,DW,LO,IDMT)   CALC-260
      IF (LO(137)) GO TO 1                                              CALC-261
      CALL EVAL(NW,DW,CM,LO)                                            CALC-262
      KE=0                                                              CALC-263
      IF (LO(215)) GO TO 2                                              CALC-264
   19 IF (LO(211)) GO TO 3                                              CALC-265
      IF (LO(213)) GO TO 7                                              CALC-266
      IF (LO(214)) GO TO 8                                              CALC-267
      IF (LO(212)) GO TO 11                                             CALC-268
      GO TO 12                                                          CALC-269
 1000 FORMAT ('<RED.MAT.>',F10.2,F10.5,F10.2,2I5)                       CALC-270
 1001 FORMAT (10X,'REQUIRED WORKING FIELD',I10)                         CALC-271
 1002 FORMAT (//' *** WORKSPACE USED IN THIS COMPUTATION',I10,'  ***',  CALC-272
     110X,I10,18H MEMORIES NOT USED)                                    CALC-273
      END                                                               CALC-274
C 01/01/04                                                      ECIS03  CALX-000
      SUBROUTINE CALX(NW,CW,DW,LO)                                      CALX-001
C CALX AND THE SUBROUTINES CALLED BY IT READ ALL THE INPUT EXCEPT FOR   CALX-002
C REDUCED NUCLEAR MATRIX ELEMENTS AND EXTERNAL FORM FACTORS.            CALX-003
C NW,CW,DW ARE THE WORKING FIELD IN EQUIVALENCE BY CALL.                CALX-004
C LO IS THE TABLE OF LOGICAL CONTROLS (SEE CALC) .                      CALX-005
C                                                                       CALX-006
C USE OF SOME PARTS OF THE WORKING ARRAY (W,NW,DW):                     CALX-007
C  1:   IPI(11,NCOLX) INTEGER VALUES FOR THE DESCRIPTION OF CHANNELS.   CALX-008
C           FIRST INDEX:                                                CALX-009
C       1 - PARITY (0 FOR + AND 1 FOR -)                                CALX-010
C       2 - MULTIPLICITY OF INCIDENT PARTICLE                           CALX-011
C       3 - MULTIPLICITY OF THE TARGET                                  CALX-012
C       4 - PRODUCT OF CHARGES                                          CALX-013
C       5 - INDEX OF POTENTIAL                                          CALX-014
C       6,7,8,9 - BEGINNING AND END IN THE TWO PARTS OF TABLE MF-FM     CALX-015
C                           (SEE DEPH)                                  CALX-016
C      10 - MAXIMUM ANGULAR MOMENTUM                                    CALX-017
C      11 - INDEX OF POTENTIAL ENERGY DEPENDENT BY DISPERSION RELATIONS CALX-018
C  NIPP:    IPP(2,15,NPP)/PIP(15,NPP) DISPERSION PARAMETERS             CALX-019
C     1,1 - FIRST LEVEL USING THIS POTENTIAL BEFORE INPUT OF PARAMETERS CALX-020
C           REPLACED BY ADDRESS OF REFERENCE ENERGY IN WV (3 OR 12)     CALX-021
C     2,1 - N2 - POWER FOR LARGE NEGATIVE ENERGY CORRECTIONS            CALX-022
C     1,2 - NV - |NV| POWER FOR VOLUME POTENTIAL                        CALX-023
C     2,2 - NS - |NS| POWER FOR SURFACE POTENTIAL                       CALX-024
C             SUM OF TWO TERMS IF NV OR NS ARE NEGATIVE                 CALX-025
C             ABSENCE OF VOLUME OR SURFACE TERM IF NV OR NS ARE 0.      CALX-026
C       3 - ENERGY CORRESPONDING TO THE DEPTHS READ                     CALX-027
C       4 - FERMI ENERGY EF                                             CALX-028
C       5 - THRESHOLD ENERGY EP                                         CALX-029
C       6 - LARGE ENERGY STARTING VALUE ABOVE FERMI ENERGY EA           CALX-030
C       7 - EXPONENTIAL VARIATION OF REAL SPIN-ORBIT                    CALX-031
C       8 - LINEAR VARIATION OF IMAGINARY SPIN-ORBIT                    CALX-032
C       9 - BV PARAMETER FOR VOLUME POTENTIALS                          CALX-033
C      10 - STRENGTH OF LARGE POSITIVE ENERGY TERM IN VOLUME POTENTIAL  CALX-034
C           SECOND BV' PARAMETER FOR VOLUME POTENTIALS IF NV<0          CALX-035
C      11 - EXPONENTIAL DECREASE IN SQRT|E| FOR LARGE ENERGY TERMS OF   CALX-036
C           VOLUME POTENTIALS OR FRACTION IN THE FIRST TERM IF NV<0     CALX-037
C      12 - BS PARAMETER FOR SURFACE POTENTIALS                         CALX-038
C      13 - EXPONENTIAL DECREASE OF A SURFACE POTENTIAL OR SECOND BS'   CALX-039
C           PARAMETER FOR SURFACE POTENTIALS IF NS<0                    CALX-040
C      14 - NON-LOCALITY RANGE PARAMETER OF SURFACE POTENTIAL OR        CALX-041
C           FRACTION IN THE FIRST TERM IF NS<0                          CALX-042
C      15 - EXPONENTIAL VARIATION OF H.F. REAL VOLUME POTENTIAL         CALX-043
C  NWV:     WV(18,NCOLX) IBM-DOUBLE PRECISION VALUES FOR THE CHANNELS   CALX-044
C       1 - MASS OF INCIDENT PARTICLE                                   CALX-045
C       2 - MASS OF THE TARGET                                          CALX-046
C       3 - ENERGY IN THE CENTER OF MASS IN MEV                         CALX-047
C       4 - K WAVE NUMBER                                               CALX-048
C       5 - COULOMB PARAMETER                                           CALX-049
C       6 - SQUARE ROOT OF KF/KI (MODIFIED BY RATIO OF STEP SIZES)      CALX-050
C       7 - ENERGY IN THE CENTER OF MASS IN MEV ( FOR DIRAC EQUATION )  CALX-051
C       8 - SQUARE ROOT OF RATIO TO REDUCED UNITS                       CALX-052
C       9 - K WAVE NUMBER MULTIPLIED BY RATIO OF STEP SIZES             CALX-053
C      10 - REDUCED ENERGY TERM                                         CALX-054
C      11 - STEP SIZE FOR THIS LEVEL                                    CALX-055
C      12 - ENERGY IN THE LABORATORY SYSTEM IN MEV                      CALX-056
C      13,14,15,16,17,18 - DISPERSION CORRECTIONS (SEE DISP)            CALX-057
C                                                                       CALX-058
C ADDRESSES IN THE WORKING FIELD DEFINED HERE ( COMMON /DECOU/ )        CALX-059
C  3- NIPI=1   INTEGER VALUES FOR THE CHANNEL DESCRIPTION (SEE ABOVE)   CALX-060
C  5- NIPH     NUMBER OF PHONONS FOR THE HARMONIC VIBRATIONAL MODEL     CALX-061
C  1- NJIT     DATA FOR INTERPOLATION ON TOTAL SPIN (LIMIT/STEP)        CALX-062
C  4- NWV      IBM-DOUBLE PRECISION VALUES FOR THE CHANNELS (SEE ABOVE) CALX-063
C  2- NIPP     DISPERSION PARAMETERS (SEE ABOVE)                        CALX-064
C  7- NPAR     INDICATIONS FOR NUCLEAR PARAMETERS                       CALX-065
C  3- NPAA     VALUES OF NUCLEAR PARAMETERS                             CALX-066
C  6- NSCN     LEVEL DENSITY DESCRIPTION                                CALX-067
C  8- NNIV     ADDRESSES OF REDUCED NUCLEAR MATRIX ELEMENTS AND COULOMB CALX-068
C              INTEGRALS IN NIV(NCOLL,NCOLL,3)                          CALX-069
C  9- NFIS     FISSION DATA FOR COMPOUND NUCLEUS                        CALX-070
C 10- NGAM     GAMMA DATA FOR COMPOUND NUCLEUS                          CALX-071
C 11- NPOT     OPTICAL POTENTIAL PARAMETERS                             CALX-072
C 12- NBETA    DEFORMATION PARAMETERS                                   CALX-073
C 13- NFM      HELICITIES AND OBSERVABLES (SEE DEPH,LECD AND OBSE)      CALX-074
C 14- NTGX     BEGINNING OF CHI2 AND NORMALISATION OF DATA              CALX-075
C 15- NDONN    EXPERIMENTAL DATA                                        CALX-076
C 16- NRC      PERMANENT WORKING FIELD FOR THE SEARCH                   CALX-077
C 17- NIW      INTEGER WORKING FIELD FOR THE SEARCH                     CALX-078
C 18- NDE      SEARCH ACCURACIES                                        CALX-079
C 19- NISE     INDEXES OF THE VARIABLE PARAMETERS                       CALX-080
C 20- NNVI     TABLE OF ADDRESSES OF COUPLING COEFFICIENTS              CALX-081
C 21- NNWI     SAME AS NNVI FOR SYMMETRISED EQUATIONS                   CALX-082
C 22- NCC      TABLE OF ENERGIES, L*(L+1) AND L*S  (SEE QUAN)           CALX-083
C 23- MCC      SAME AS NCC FOR SYMMETRISED EQUATIONS                    CALX-084
C 24- NXA      TABLE OF COEFFICIENTS OF SYMMETRISATION                  CALX-085
C 25- NAM1     COMPUTATION OF OBSERVABLES (SEE OBSE)                    CALX-086
C 26- NFAC     TABLE OF LOG OF FACTORIALS FOR GEOMETRIC COEFFICIENTS    CALX-087
C 27- NFAM     MATCHING VALUES (SEE MTCH)                               CALX-088
C 28- NPAD     PADE APPROXIMANTS                                        CALX-089
C 29- NFG      COULOMB FUNCTIONS AND FINITE INTEGRALS                   CALX-090
C 30- NXG      COULOMB PHASES AND INFINITE INTEGRALS                    CALX-091
C 31- NSM      STANDARD AND HELICITY SCATTERING MATRIX ELEMENTS         CALX-092
C 32- NRES     FUNCTIONS FOR THE SEARCH                                 CALX-093
C 33- NXX      VARIABLES FOR THE SEARCH                                 CALX-094
C 34- NT       FIRST FREE ADDRESS                                       CALX-095
C 35-52          SEE CALC                                               CALX-096
C OTHER INTEGER DATA OF COMMON /DECOU/                                  CALX-097
C 53- NCOLL    NUMBER OF COUPLED CHANNELS                               CALX-098
C 54- NJMAX    MAXIMUM NUMBER OF J-VALUES                               CALX-099
C 55- ITERM    MAXIMUM NUMBER OF ITERATIONS                             CALX-100
C 56- NPP      NUMBER OF OPTICAL POTENTIALS                             CALX-101
C 57- JDM      MINIMUM NUMBER OF TOTAL SPIN                             CALX-102
C 58- JIT      NUMBER OF RATES OF INTERPOLATION ON TOTAL SPIN           CALX-103
C 59- NSEC     MAXIMUM NUMBER OF SECONDS FOR A JOB                      CALX-104
C 60- LMD      DIMENSION OF A TABLE OF COEFFICIENTS: 2 BUT 3 FOR DIRAC  CALX-105
C 61- MCM(1)   MAXIMUM ANGULAR MOMENTUM FOR CENTRAL COULOMB CORRECTIONS CALX-106
C 62- MCM(2)   MAXIMUM ANGULAR MOMENTUM FOR SPIN-ORBIT COULOMB CORRECT. CALX-107
C 63- NCOLS    NUMBER OF CHANNELS WITH ANGULAR DISTRIBUTIONS            CALX-108
C 64- NCOLT    NUMBER OF CHANNELS INCLUDING UNCOUPLED STATES            CALX-109
C 65- KMAX     MAXIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUS          CALX-110
C 66- KMIN     MINIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUS          CALX-111
C 67- NVA      NUMBER OF NUCLEAR PARAMETERS                             CALX-112
C 68- NBET     NUMBER OF DIFFERENT DEFORMATIONS (VIBRATIONS+ROTATIONS)  CALX-113
C 69- NBT1     NUMBER OF PHONONS (VIBRATIONS)                           CALX-114
C 70- LMX      DIFFERENCE BETWEEN NUMBER OF J-VALUES AND OF COUL. FUNCT.CALX-115
C 71- LMAX1    NUMBER OF L-VALUES FOR COULOMB FUNCTIONS                 CALX-116
C 72- NLT      MEMORIES NEEDED FOR LEGENDRE POLYNOMIALS                 CALX-117
C 73- ISM      NUMBER OF INTEGRATION STEPS                              CALX-118
C 74- IQM      MAXIMUM L-VALUE OF DEFORMATION IN ROTATIONAL MODEL       CALX-119
C 75- IQMAX    MAXIMUM L-EXPANSION IN ROTATIONAL MODEL                  CALX-120
C 76- MS1      LARGEST PARTICLE MULTIPLICITY                            CALX-121
C 77- MS2      LARGEST TARGET MULTIPLICITY                              CALX-122
C 78- NCT(6)   NUMBER OF EQUATIONS FOR EACH PARITY IN 1 AND 2           CALX-123
C              NUMBER OF SOLUTIONS FOR EACH PARITY IN 3 AND 4           CALX-124
C              NUMBER OF COMP. NUCL. COEFF. FOR EACH PARITY IN 5 AND 6  CALX-125
C 84- KBA      NUMBER OF INDEPENDENT AMPLITUDES WITHOUT UNCOUPLED STATESCALX-126
C 85- KAB      MAXIMUM NUMBER OF EQUATIONS                              CALX-127
C 86- KBC      MAXIMUM NUMBER OF SOLUTIONS                              CALX-128
C 87- KCC      NUMBER OF INDEPENDENT AMPLITUDES WITH UNCOUPLED STATES   CALX-129
C 88- NJC      MAXIMUM NUMBER OF OBSERVABLES AT EQUIDISTANT ANGLES      CALX-130
C 89- JTX      MAXIMUM NUMBER OF CALCULATED VALUES FOR A PLOT           CALX-131
C 90- JTH      MAXIMUM NUMBER OF ANGLES FOR A PLOT                      CALX-132
C 91- NCOLR    NUMBER OF EXPERIMENTAL ANGULAR DISTRIBUTIONS             CALX-133
C 92- NREC     NUMBER OF VARIABLES IN SEARCH                            CALX-134
C 93- NTOT     NUMBER OF EXPERIMENTAL DATA                              CALX-135
C 94- NFA      NUMBER OF LOGARITHMS OF FACTORIALS                       CALX-136
C 95- LMAX2    NUMBER OF L VALUES FOR COULOMB PHASES                    CALX-137
C 96- KE       CONTROL OF SEARCH (SEE FITE)                             CALX-138
C 97- ITEMM    MAXIMUM NUMBER OF ITERATIONS AT THE BEGINNING OF A RUN   CALX-139
C 98- NPLACE   MAXIMUM WORKING FIELD USED                               CALX-140
C 99-104          SEE CALC                                              CALX-141
C OTHER NON INTEGER DATA OF COMMON /DECOU/                              CALX-142
C105- H        STEP SIZE FOR INTEGRATION                                CALX-143
C106- BJM      CONVERGENCE COEFFICIENT OF IMAGINARY POTENTIAL           CALX-144
C107- EITER    CONVERGENCE CRITERION FOR S-MATRIX                       CALX-145
C108- ACONV    CONVERGENCE CRITERION FOR POTENTIAL AND FUNCTION         CALX-146
C109- CONJ     CONVERGENCE CRITERION FOR THE SCATTERING AMPLITUDES      CALX-147
C110- NSPIN    TWICE THE K-VALUE OF THE ROTATIONAL BAND                 CALX-148
C                                                                       CALX-149
C COMMON /NCOMP/NSP(1) NUMBER OF UNCOUPLED LEVELS FOR COMPOUND NUCLEUS  CALX-150
C                      INCLUDING DISCRETISATION OF CONTINUUM            CALX-151
C               NSP(2) NUMBER OF THESE LEVELS WITH ANGULAR DISTRIBUTION CALX-152
C               NSP(3) NUMBER OF THESE LEVELS WITHOUT ANGULAR DISTRIB.  CALX-153
C               NFISS  NUMBER OF FISSION TRANSMISSION COEFFICIENTS      CALX-154
C               NRD    NUMBER OF GAMMA TRANSMISSION COEFFICIENTS        CALX-155
C               NCONT: NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS         CALX-156
C               NCOJ:  NUMBER OF SPINS OF THE TARGET FOR A CONTINUUM    CALX-157
C               NCONS: NUMBER OF LEVEL DENSITIES NEEDED                 CALX-158
C               NIE:   NUMBER OF UNCOUPLED STATES ADDED FOR DISCRET.    CALX-159
C               NCOLX: TOTAL NUMBER OF LEVELS WITHOUT DISCRETISATION    CALX-160
C               NDP:   ADDRESS OF FISSION AND GAMMA FINAL RESULTS       CALX-161
C               NDQ:   ADDRESS OF FISSION AND GAMMA INTERMEDIATE RESULTSCALX-162
C               ACN1:  RATIO SIZE/STEP FOR DISCRETISATION OF A CONTINUUMCALX-163
C               ACN2:  MAXIMUM NUMBER OF STEPS BY MEV FOR A CONTINUUM   CALX-164
C               AZ, ....: SEE LECT AND COLF                             CALX-165
C COMMON /TITR/ TITLE: COMMENT CARD REPRODUCED IN THE OUTPUT            CALX-166
C COMMON /ANGL/ THETA1,THETA2,DTHETA,DTHE    SEE LECT                   CALX-167
C COMMON /NCJL/ NCJ:   NUMBER OF FACTORISATIONS OF 1/(1-COS)            CALX-168
C               NL:   DIRECTIVES FOR EXPANSION WITH LEGENDRE POLYNOMIALSCALX-169
C COMMON /DCHI/ SEE CALC AND FITE                                       CALX-170
C***********************************************************************CALX-171
      IMPLICIT REAL*8 (A-H,O-Z)                                         CALX-172
      LOGICAL LO(250)                                                   CALX-173
      DIMENSION NW(2,5),NGR(2),NPR(2),DESC(3),DW(1)                     CALX-174
      CHARACTER*4 FIN,DESC,TITLE,CW(2,1)                                CALX-175
      COMMON /DECOU/ NJIT,NIPP,NPAA,NWV,NIPH,NSCN,NPAR,NNIV,NFIS,NGAM,NPCALX-176
     1OT,NBETA,NFM,NTGX,NDONN,NRC,NIW,NDE,NISE,NNVI,NNWI,NCC,MCC,NXA,NAMCALX-177
     21,NFAC,NFAM,NPAD,NFG,NXG,NSM,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,CALX-178
     3NXD,MWV,NIXT,NTY,NTX,NRY,NRCO,NRDO,NVC1,NVC2,NNC,NCX,IDMT,NCOLL,NJCALX-179
     4MAX,ITERM,NPP,JDM,JIT,NSEC,LMD,MCM(2),NCOLS,NCOLT,KMAX,KMIN,NVA,NBCALX-180
     5ET,NBT1,LMX,LMAX1,NLT,ISM,IQM,IQMAX,MS1,MS2,NCT(6),KBA,KAB,KBC,KCCCALX-181
     6,NJC,JTX,JTH,NCOLR,NREC,NTOT,NFA,LMAX2,KE,ITEMM,NPLACE,KXT,NRZ,NTZCALX-182
     7,LMAX3,IPM,IPK,BJM,EITER,ACONV,CONJ,H,NSPIN                       CALX-183
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQCALX-184
     1,ACN1,ACN2,AZ(18)                                                 CALX-185
      COMMON /TITR/ TITLE(18)                                           CALX-186
      COMMON /ANGL/ THETA1,THETA2,DTHETA,DTHE                           CALX-187
      COMMON /DCHI/ CHI2,CHI2M,YY(3)                                    CALX-188
      COMMON /NCJL/ NCJ,NL(3)                                           CALX-189
      COMMON /DCONS/ CM,CK,CHB,CMB,CCZ                                  CALX-190
      COMMON /CNSEC/ MSEC                                               CALX-191
      COMMON /INOUT/ MR,MW,MS                                           CALX-192
      DATA FIN,DESC /'FIN ','DESC','RIPT','ION '/                       CALX-193
    1 READ (MR,1000) TITLE                                              CALX-194
      DO 2 J=1,3                                                        CALX-195
      IF (TITLE(J).NE.DESC(J)) GO TO 3                                  CALX-196
    2 CONTINUE                                                          CALX-197
      CALL INPA                                                         CALX-198
      CALL INPB                                                         CALX-199
      CALL INPC                                                         CALX-200
      GO TO 1                                                           CALX-201
    3 IF (TITLE(1).EQ.FIN) RETURN                                       CALX-202
      DO 4 I=1,100                                                      CALX-203
    4 LO(I)=.FALSE.                                                     CALX-204
      READ (MR,1001) (LO(I),I=1,50)                                     CALX-205
      IF (LO(7).AND.LO(10)) GO TO 20                                    CALX-206
C IF LO(36)=.TRUE. RETURN TO RESTART A SEARCH SAVED ON TAPE 8           CALX-207
      IF (LO(36)) RETURN                                                CALX-208
      READ (MR,1001) (LO(I),I=51,100)                                   CALX-209
      READ (MR,1002) NCOLL,NJMAX,ITERM,NPP,NCJ,NGR,NPR,LMZ,JDM,LML,JIT,MCALX-210
     1N                                                                 CALX-211
C ELIMINATION OF CONTRADICTIONS BETWEEN LOGICAL CONTROLS                CALX-212
      IF (NCOLL.LE.1) LO(28)=.TRUE.                                     CALX-213
      IF (.NOT.LO(31)) LO(32)=.FALSE.                                   CALX-214
      IF (LO(14)) LO(13)=.TRUE.                                         CALX-215
      IF (LO(19)) LO(11)=.TRUE.                                         CALX-216
      IF (LO(92)) ITERM=1                                               CALX-217
      IF (LO(18)) LO(29)=.TRUE.                                         CALX-218
      IF (LO(100)) LO(29)=.FALSE.                                       CALX-219
      LO(209)=LO(99).OR.LO(100)                                         CALX-220
      IF (LO(82)) LO(84)=.FALSE.                                        CALX-221
      IF (LO(82)) LO(85)=.FALSE.                                        CALX-222
      IF (LO(82)) LO(86)=.FALSE.                                        CALX-223
      IF (LO(82).OR.LO(84).OR.LO(85).OR.LO(86)) LO(81)=.TRUE.           CALX-224
      LO(44)=LO(44).AND.LO(11)                                          CALX-225
      IF (.NOT.LO(99)) GO TO 5                                          CALX-226
      LO(11)=.FALSE.                                                    CALX-227
      LO(19)=.FALSE.                                                    CALX-228
      IF (LO(1)) LO(3)=.FALSE.                                          CALX-229
      IF (.NOT.LO(1)) LO(2)=.FALSE.                                     CALX-230
      IF ((.NOT.LO(10)).OR.(.NOT.LO(12))) LO(20)=.FALSE.                CALX-231
    5 LMD=2                                                             CALX-232
      LO(224)=LO(81).OR.LO(63)                                          CALX-233
      IF (LO(100)) LMD=3                                                CALX-234
      WRITE (MW,1003) IDMT                                              CALX-235
      DO 6 I=1,100                                                      CALX-236
    6 LO(100+I)=.NOT.LO(I)                                              CALX-237
C OUTPUT OF LOGICAL CONTROLS                                            CALX-238
      IF (LO(171)) GO TO 7                                              CALX-239
      WRITE (MW,1004) (LO(I),LO(50+I),I=1,2),LO(53),LO(3),LO(54),LO(55),CALX-240
     1LO(4),(LO(I),LO(51+I),I=5,7),LO(8),LO(9)                          CALX-241
      WRITE (MW,1005) LO(10),LO(59),(LO(I),LO(49+I),I=11,15),LO(16),LO(1CALX-242
     17),LO(65),LO(18),(LO(I),LO(47+I),I=19,20)                         CALX-243
      WRITE (MW,1006) (LO(47+I),LO(I),I=21,22),(LO(I),LO(48+I),I=23,25),CALX-244
     1LO(74),(LO(I),LO(49+I),I=26,28),LO(78)                            CALX-245
      WRITE (MW,1007) LO(29),(LO(I),LO(50+I),I=31,37),LO(91),(LO(I),LO(5CALX-246
     11+I),I=41,42)                                                     CALX-247
      WRITE (MW,1008) LO(43),LO(94),LO(44),LO(98),(LO(I),LO(54+I),I=45,4CALX-248
     16)                                                                CALX-249
    7 IF (LO(171)) WRITE (MW,1009) (LO(I),I=1,100)                      CALX-250
      WRITE (MW,1010) TITLE                                             CALX-251
      READ (MR,1011) H,RM,BJM,EITER,ACONV,CONJ                          CALX-252
C DEFECT VALUES OF NJMAX,ITERM,NPP,NCJ,NPR,NGR,EITER,ACONV,CONJ         CALX-253
C FOR NPR AND NGR, SEE DEPH                                             CALX-254
      IF (NJMAX.EQ.0) NJMAX=20                                          CALX-255
      IF (ITERM.EQ.0) ITERM=20                                          CALX-256
      IF (NPP.EQ.0) NPP=1                                               CALX-257
      IF (NPR(1).EQ.0) NPR(1)=1                                         CALX-258
      IF (NPR(2).EQ.0) NPR(2)=1                                         CALX-259
      IF (NGR(1).EQ.0) NGR(1)=2                                         CALX-260
      IF (NGR(2).EQ.0) NGR(2)=2                                         CALX-261
      IF (NCJ.LE.0) NCJ=1                                               CALX-262
      IF (JIT.EQ.0) JIT=1                                               CALX-263
      IF (LO(143)) JIT=0                                                CALX-264
      IF (MN.LE.0) MN=1                                                 CALX-265
      NJMAX=MN*NJMAX                                                    CALX-266
      IF (EITER.EQ.0.D0) EITER=1.D-5                                    CALX-267
      IF (ACONV.EQ.0.D0) ACONV=1.D-5                                    CALX-268
      IF (CONJ.EQ.0.D0) CONJ=1.D-5                                      CALX-269
      MSEC=3600                                                         CALX-270
      NSEC=100                                                          CALX-271
      IF (LO(34)) READ (MR,1002) MSEC,NSEC                              CALX-272
      IF (MSEC.EQ.0) MSEC=3600                                          CALX-273
      IF (NSEC.EQ.0) NSEC=100                                           CALX-274
      CALL HORA                                                         CALX-275
C OUTPUT OF TITLE, MASSES, ETC..                                        CALX-276
      WRITE (MW,1012) NJMAX,JDM,CONJ,NGR,NPR                            CALX-277
      IF (LO(41)) WRITE (MW,1013) NCJ                                   CALX-278
      IF (LML.NE.0) WRITE (MW,1014) LML                                 CALX-279
      IF (LO(121)) WRITE (MW,1015) ITERM,EITER,ACONV                    CALX-280
      LO(228)=LO(21).OR.LO(29).OR.BJM.NE.0.D0                           CALX-281
      IF (BJM.NE.0.D0) WRITE (MW,1016) BJM                              CALX-282
      IF (LO(21)) WRITE (MW,1017)                                       CALX-283
      IF (LO(21).AND.LO(42)) WRITE (MW,1018) ITERM                      CALX-284
      IF (LO(32).AND.LO(34)) WRITE (MW,1019) MSEC,NSEC                  CALX-285
C INITIALISATION OF A SEARCH OR A SINGLE RUN                            CALX-286
      DO 8 I=211,220                                                    CALX-287
    8 LO(I)=.FALSE.                                                     CALX-288
      LO(215)=.TRUE.                                                    CALX-289
C LIMITATION ON ANGULAR MOMENTUM FOR COULOMB CORRECTIONS                CALX-290
      MCM(1)=3                                                          CALX-291
      MCM(2)=2                                                          CALX-292
      IF (LO(145)) GO TO 9                                              CALX-293
      READ (MR,1002) MC1,MC2                                            CALX-294
      IF (MC1.GT.0) MCM(1)=MIN0(MC1,5)                                  CALX-295
      IF (MC2.GT.0) MCM(2)=MIN0(MC2,4)                                  CALX-296
      IF (MC1.LT.0) MCM(1)=0                                            CALX-297
      IF (MC2.LT.0) MCM(2)=0                                            CALX-298
      WRITE (MW,1020) MCM                                               CALX-299
    9 NL2=3*NJMAX                                                       CALX-300
      NL3=2*NJMAX                                                       CALX-301
C LEGENDRE POLYNOMIALS DATA                                             CALX-302
      IF (LO(165)) GO TO 10                                             CALX-303
      READ (MR,1002) NL                                                 CALX-304
      IF (NL(1).EQ.0) NL(1)=2                                           CALX-305
      IF (NL(2).NE.0) NL2=NL(2)                                         CALX-306
      IF (NL(3).NE.0) NL3=NL(3)                                         CALX-307
      IF (LO(65)) WRITE (MW,1021) NL                                    CALX-308
C COMPOUND NUCLEUS DATA                                                 CALX-309
   10 NSP(1)=0                                                          CALX-310
      NSP(2)=0                                                          CALX-311
      NSP(3)=0                                                          CALX-312
      NFISS=0                                                           CALX-313
      NRD=0                                                             CALX-314
      NCONT=0                                                           CALX-315
      NCONS=0                                                           CALX-316
      IF (LO(184).AND.LO(185).AND.LO(186)) GO TO 11                     CALX-317
      READ (MR,1022) NSP(1),NSP(2),NFISS,NRD,NCONT,NCOJ,KMIN,KMAX,ACN1,ACALX-318
     1CN2                                                               CALX-319
      IF (LO(184)) NSP(1)=0                                             CALX-320
      NSP(2)=MIN0(NSP(1),NSP(2))                                        CALX-321
      NSP(3)=NSP(1)-NSP(2)                                              CALX-322
      IF (NSP(3).LT.NCONT) GO TO 21                                     CALX-323
      IF (LO(185)) NFISS=0                                              CALX-324
      IF (LO(186)) NRD=0                                                CALX-325
      IF (NFISS.EQ.0) LO(85)=.FALSE.                                    CALX-326
      LO(185)=.NOT.LO(85)                                               CALX-327
      IF (LO(84).OR.LO(85).OR.LO(86)) WRITE (MW,1023) NSP,NFISS,NRD,NCONCALX-328
     1T                                                                 CALX-329
      NCONS=NCONT                                                       CALX-330
      IF (LO(86).AND.NRD.EQ.0) NCONS=NCONS+1                            CALX-331
      IF (NCONT.EQ.0) GO TO 11                                          CALX-332
      IF (NCOJ.LE.0) NCOJ=30                                            CALX-333
      IF (ACN1.LE.1.D0) ACN1=8.D0                                       CALX-334
      IF (ACN2.LE.1.D0) ACN2=8.D0                                       CALX-335
      WRITE (MW,1024) NCOJ,ACN1,ACN2                                    CALX-336
   11 NCOLX=NCOLL+NSP(1)                                                CALX-337
      NCOLS=NCOLL+NSP(2)                                                CALX-338
      NCOLT=NCOLX                                                       CALX-339
      NIPH=(11*NCOLX+1)/2+1                                             CALX-340
      NJIT=NIPH+NCOLL                                                   CALX-341
      IF (LO(7)) NJIT=NIPH                                              CALX-342
      NWV=NJIT+JIT                                                      CALX-343
      NIPP=NWV+18*NCOLX                                                 CALX-344
      NPAR=NIPP+15*NPP                                                  CALX-345
      NPLACE=NPAR                                                       CALX-346
      CALL MEMO('CALX',IDMT,NPLACE,1)                                   CALX-347
C INTERPOLATION DATA                                                    CALX-348
      IF (LO(143)) GO TO 13                                             CALX-349
      K=NJIT                                                            CALX-350
      READ (MR,1002) (NW(1,NJIT+I-1),NW(2,NJIT+I-1),I=1,JIT)            CALX-351
      WRITE (MW,1025) (NW(1,NJIT+I-1),NW(2,NJIT+I-1),I=1,JIT)           CALX-352
      M=0                                                               CALX-353
      L=-1                                                              CALX-354
      DO 12 I=1,JIT                                                     CALX-355
      IF (NW(1,NJIT+I-1).LT.L) GO TO 22                                 CALX-356
      L=NW(1,NJIT+I-1)                                                  CALX-357
      NW(2,NJIT+I-1)=NW(2,NJIT+I-1)-M                                   CALX-358
      M=M+NW(2,NJIT+I-1)                                                CALX-359
   12 K=K+2                                                             CALX-360
      WRITE (MW,1026) (NW(2,NJIT+I-1),I=1,JIT)                          CALX-361
C INPUT OF LEVEL DESCRIPTIONS                                           CALX-362
   13 CALL LECL(NCOLX,NCOLL,NPP,NCONT,NW,NW(1,NIPH),DW(NWV),NW(1,NIPP),NCALX-363
     1W(1,NPAR),DW(NPAR),NVA,NA,NB,NIMAX,NBET,CM,IDMT-NPAR,LO)          CALX-364
      NPAA=NPAR+NA                                                      CALX-365
      NSCN=NPAA+NVA+NB                                                  CALX-366
      IF (KMIN.EQ.0) KMIN=IABS(NW(2,1)-NW(1,2))/2+NW(1,1)               CALX-367
      IF (KMAX.EQ.0) KMAX=NJMAX                                         CALX-368
      LO(233)=LO(43).AND.((NW(1,NJIT).LT.KMAX).OR.(NW(2,NJIT).NE.0))    CALX-369
C INPUT OF POTENTIALS, DEFORMATIONS ......                              CALX-370
      NBT1=NBET                                                         CALX-371
      LMX=NIMAX/2+2                                                     CALX-372
      LMAX1=NJMAX+LMX                                                   CALX-373
      IF (LML.EQ.0) LML=LMAX1                                           CALX-374
      NW(2,5)=LML                                                       CALX-375
      NFIS=NSCN+7*NCONS                                                 CALX-376
      NGAM=NFIS+2*NFISS                                                 CALX-377
      NNIV=NGAM+NRD                                                     CALX-378
      NPOT=NNIV+(3*NCOLL*NCOLL+1)/2                                     CALX-379
      NBETA=NPOT+34*NPP                                                 CALX-380
      IF (LO(7)) NBETA=NPOT                                             CALX-381
      IF (NBETA+9*NBET.GT.IDMT) CALL MEMO('CALX',IDMT,NBETA+9*NBET,1)   CALX-382
      IF (DW(NWV+4).EQ.0.) NL2=NL3                                      CALX-383
      NLT=MAX0(NL2,NL3)                                                 CALX-384
      IF (LO(165)) NLT=0                                                CALX-385
      CALL LECT(NBET,NW,NW(1,NIPP),DW(NIPP),DW(NWV),NW(1,NBETA),DW(NBETACALX-386
     1),DW(NPOT),DW(NFIS),DW(NGAM),NPP,RM,ACONV,IDMT-NBETA,H,NSPIN,ISM,ICALX-387
     2QM,IQMAX,DW(NSCN),CK,CM,LO)                                       CALX-388
      NFM=NBETA+9*NBET                                                  CALX-389
      IF (LO(74)) CALL HORA                                             CALX-390
C HELICITY AMPLITUDES AND OBSERVABLES                                   CALX-391
      NJX=NCOLL                                                         CALX-392
      CALL DEPH(NCOLL,NCOLS,DW(NWV),NW,NW(1,NFM),MS1,MS2,NCT,KCC,KBA,KABCALX-393
     1,KBC,KTGR,NGR,NPR,JTX,NW(1,NNIV),NJC,NJX,NJY,IDMT-NFM,LO)         CALX-394
      JTH=0                                                             CALX-395
      IF (LO(166)) JTH=IDINT((THETA2-THETA1)/DTHETA+1.5D0)              CALX-396
      JTX=JTX*JTH                                                       CALX-397
      NGRM=NFM+5*KCC                                                    CALX-398
      NNVI=NFM+5*KTGR                                                   CALX-399
      NREC=0                                                            CALX-400
      NTOT=0                                                            CALX-401
      IF (LO(131)) GO TO 17                                             CALX-402
C NUMBER OF PARAMETERS IN SEARCH AND EXPERIMENTAL DATA                  CALX-403
      READ (MR,1027) NCOLR,NREC,NFIT,NESSAI,YY(1),YY(2)                 CALX-404
C SEARCH CONDITIONS                                                     CALX-405
C DEFECT VALUES FOR NESSAI (MAXIMUM NUMBER OF EVALUATIONS) AND ECH      CALX-406
C NFIT IS THE NUMBER OF FUNCTIONS STORED FOR SEARCH BEYOND NREC+1       CALX-407
      IF (NESSAI.EQ.0) NESSAI=100                                       CALX-408
      KFIT=NREC+NFIT+1                                                  CALX-409
      IF (YY(1).EQ.0.D0) YY(1)=20.D0                                    CALX-410
      IF (YY(2).LT.1.D0) YY(2)=1.D0                                     CALX-411
      YY(3)=0.D0                                                        CALX-412
      WRITE (MW,1028) NCOLR                                             CALX-413
      IF (NCOLR.LE.0) GO TO 15                                          CALX-414
      KTGR=KTGR+NCOLR                                                   CALX-415
      NTGX=NFM+5*KTGR                                                   CALX-416
      NDONN=NTGX+7*NCOLR                                                CALX-417
C EXPERIMENTAL DATA                                                     CALX-418
      IF (NDONN.GT.IDMT) CALL MEMO('CALX',IDMT,NDONN,1)                 CALX-419
      CALL LECD(NCOLS,NCOLT,NCOLR,DW(NWV),NW(1,NNVI),NW(1,NTGX),DW(NTGX)CALX-420
     1,DW(NDONN),NGR,NTOT,NREC,DW(NDONN),NW(1,NDONN),NMX,KFIT,NESSAI,YY,CALX-421
     2JTH,NJY,IDMT-NDONN,LO)                                            CALX-422
      JTX=MAX0(JTH,JTX)                                                 CALX-423
      NNVI=NDONN+6*NTOT                                                 CALX-424
      IF (LO(132)) GO TO 17                                             CALX-425
      IF (NREC.LE.0) GO TO 16                                           CALX-426
      NDE=NNVI                                                          CALX-427
      NISE=NDE+NREC                                                     CALX-428
      NRC=NISE+NMX/2                                                    CALX-429
      NIW=NRC+MAX0(14+NREC+KFIT*(NTOT+NREC+1),(NREC*(NREC+5))/2)        CALX-430
      IF (NIW.GT.IDMT) CALL MEMO('CALX',IDMT,NIW,1)                     CALX-431
      NW(1,NIW)=KFIT                                                    CALX-432
      NW(2,NIW)=NESSAI                                                  CALX-433
      NW(1,NIW+1)=1                                                     CALX-434
      NNVI=NIW+(KFIT+5)/2                                               CALX-435
      I1=51                                                             CALX-436
      IF (LO(76).OR.LO(175)) I1=59                                      CALX-437
      DO 14 I=I1,65                                                     CALX-438
      LO(I+185)=LO(I)                                                   CALX-439
      LO(I)=.FALSE.                                                     CALX-440
   14 LO(I+100)=.TRUE.                                                  CALX-441
      LO(216)=LO(75)                                                    CALX-442
      GO TO 17                                                          CALX-443
   15 WRITE (MW,1029)                                                   CALX-444
      LO(31)=.FALSE.                                                    CALX-445
      LO(131)=.TRUE.                                                    CALX-446
   16 IF (LO(32)) WRITE (MW,1030)                                       CALX-447
      LO(32)=.FALSE.                                                    CALX-448
      LO(132)=.TRUE.                                                    CALX-449
   17 IF (LO(74)) CALL HORA                                             CALX-450
      NNWI=NNVI                                                         CALX-451
      IF (LO(231)) NNWI=NNWI+(3*KAB*KAB+1)/2                            CALX-452
      NCC=NNWI+2*KAB*KAB                                                CALX-453
      MCC=NCC                                                           CALX-454
      IF (LO(231)) MCC=MCC+3*KAB                                        CALX-455
      NXA=MCC+3*KAB                                                     CALX-456
      NAM1=NXA                                                          CALX-457
      IF (LO(231)) NAM1=NAM1+KBC*KBC                                    CALX-458
      NAM2=NAM1+4*(NJY+16)                                              CALX-459
      IF (NAM2.GT.IDMT) CALL MEMO('CALX',IDMT,NAM2,1)                   CALX-460
C DO LOOPS AND CG-COEFFICIENTS FOR OBSERVABLES                          CALX-461
      CALL OBSE(NW(1,NGRM),CW(1,NGRM),KTGR-KCC,NCOLR,NW,CW(1,NAM1),NW(1,CALX-462
     1NAM1),CW(1,NAM1),DW(NAM2),CW(1,NAM2),NW(1,NAM2),JCAL,IDMT-NAM2,LO)CALX-463
      NFA=4*LMAX1+10-2*NJMAX                                            CALX-464
      NFAC=NAM1+JCAL                                                    CALX-465
      NFAM=NFAC+NFA+1                                                   CALX-466
      NPAD=NFAM+KAB*(2*KBC+8)                                           CALX-467
      IF (LO(224)) NPAD=NFAM+KAB*(2*KAB+8)                              CALX-468
      NFG=NPAD+2*ITERM*(KAB+2)                                          CALX-469
      IF (LO(21).OR.LO(22)) NFG=NPAD                                    CALX-470
      LMAX2=LMAX1                                                       CALX-471
      IF (.NOT.LO(208)) GO TO 18                                        CALX-472
      LMAX1=LMZ+LMX                                                     CALX-473
      IF (LMZ.EQ.0) LMAX1=LMAX2-NJMAX/2                                 CALX-474
      IF (LMZ.LT.0) LMAX1=LMAX2                                         CALX-475
      WRITE (MW,1031) LMAX2,LMAX1                                       CALX-476
   18 NXG=NFG+4*NJX*LMAX1                                               CALX-477
      NRES=NXG+NJX*LMAX2                                                CALX-478
      KE=0                                                              CALX-479
      NXX=NRES+NTOT                                                     CALX-480
      NT=NXX+NREC                                                       CALX-481
      ITEMM=ITERM                                                       CALX-482
      NPLACE=NT                                                         CALX-483
      IF (NPLACE.GT.IDMT) CALL MEMO('CALX',IDMT,NPLACE,1)               CALX-484
      DW(NFAC)=0.D0                                                     CALX-485
      DO 19 I=1,NFA                                                     CALX-486
   19 DW(NFAC+I)=DW(NFAC+I-1)+DLOG(DFLOAT(I))                           CALX-487
      RETURN                                                            CALX-488
   20 WRITE (MW,1032)                                                   CALX-489
      GO TO 23                                                          CALX-490
   21 WRITE (MW,1033) NSP(3),NCONT                                      CALX-491
      GO TO 23                                                          CALX-492
   22 WRITE (MW,1034) I,NW(K,1),L                                       CALX-493
   23 WRITE (MW,1035)                                                   CALX-494
      STOP                                                              CALX-495
 1000 FORMAT (18A4)                                                     CALX-496
 1001 FORMAT (50L1)                                                     CALX-497
 1002 FORMAT (14I5)                                                     CALX-498
 1003 FORMAT ('1',20X,'E. C. I. S. CODE FOR COUPLED CHANNELS CALCULATIONCALX-499
     1S ( 2003 ) WORKING FIELD LENGTH =',I10//24X,'TO OBTAIN THE INPUT DCALX-500
     2ESCRIPTION, PUNCH ''DESCRIPTION '' IN COLUMNS 1-12 OF THE FIRST CACALX-501
     3RD'//)                                                            CALX-502
 1004 FORMAT ('  1-',L2,' - ROTATIONAL MODEL-(.F.: VIBRATIONAL MODEL).',CALX-503
     18X,'| 51-',L2,' - OUTPUT OF POTENTIALS.'/'  2-',L2,' - SECOND ORDECALX-504
     2R VIBRATIONAL MODEL-(.F.: FIRST ORDER) | 52-',L2,' - OUTPUT OF REDCALX-505
     3UCED NUCLEAR MATRIX ELEMENTS.'/9X,'OR CONSTRAINED ASYMMETRIC ROTATCALX-506
     4IONAL MODEL.',7X,'| 53-',L2,' - OUTPUT OF THE NUMBER OF ITERATIONSCALX-507
     5.'/'  3-',L2,' - ANHARMONIC VIBRATIONAL MODEL-(.F.: HARMONIC) OR  CALX-508
     6 | 54-',L2,' - OUTPUT OF THE LENGTH USED IN THE WORKING FIELD.'/9XCALX-509
     7,'ASYMMETRIC ROTATIONAL MODEL-(.F.: SYMMETRIC).',5X,'| 55-',L2,' -CALX-510
     8 OUTPUT OF C-MATRIX ELEMENTS AND COMPOUND NUCLEUS'/'  4-',L2,' - PCALX-511
     9ARAMETRISED SPIN-ORBIT DEFORMATION-(.F.:STANDARD)|',9X,'INTERMEDIACALX-512
     ATE RESULTS.'/'  5-',L2,' - DIFFERENT DEFORMATION FOR EACH POTENTIACALX-513
     BL(.F.:SAME)| 56-',L2,' - OUTPUT OF S-MATRIX ELEMENTS.'/'  6-',L2,'CALX-514
     C - USE OF DEFORMATION LENGTHS.',23X,'| 57-',L2,' - OUTPUT OF PHASECALX-515
     D-SHIFTS AT EACH E.C.I.S. ITERATION.'/'  7-',L2,' - NUCLEAR MATRIX CALX-516
     EELEMENTS AND FORM FACTORS ON CARDS.| 58-',L2,' - OUTPUT OF THE COECALX-517
     FFFICIENTS OF EACH FORM FACTOR.'/'  8-',L2,' - RELATIVISTIC KINEMATCALX-518
     GICS.',26X,'|',9X,'FOR ALL SETS OF EQUATIONS.'/'  9-',L2,' - SYMMETCALX-519
     HRISED WOODS-SAXON FORM FOR NEGATIVE RADII.  |')                   CALX-520
 1005 FORMAT (' 10-',L2,' - DISPERSION RELATIONS FOR POTENTIALS.',9X,5X,CALX-521
     1'| 59-',L2,' - TOTAL ELASTIC REACTION CROSS-SECTIONS WRITTEN ON FICALX-522
     2LE 58'/ 59X,'|',9X,'AND TOTAL INELASTIC REACTION CROSS-SECTIONS ONCALX-523
     3 FILE 59.'/' 11-',L2,' - DEFORMED COULOMB POTENTIAL.',23X,'| 60-',CALX-524
     4L2,' - S-MATRIX ELEMENTS WRITTEN ON FILE 60.'/' 12-',L2,' - DEFORMCALX-525
     5ED IMAGINARY POTENTIAL.',21X,'| 61-',L2,' - REDUCED NUCLEAR MATRIXCALX-526
     6 ELEMENTS WRITTEN ON FILE 61.'/' 13-',L2,' - DEFORMED REAL SPIN-ORCALX-527
     7BIT/TENSOR POTENTIAL.',8X,'| 62-',L2,' - POTENTIALS WRITTEN ON FILCALX-528
     8E 62.'/' 14-',L2,' - DEFORMED IMAGINARY SPIN-ORBIT/TENSOR POTENTIACALX-529
     9L.   | 63-',L2,' - PENETRABILITIES WRITTEN ON FILE 63.'/' 15-',L2,CALX-530
     A' - REDUCED NUCLEAR MATRIX ELEMENTS READ FROM CARDS.  | 64-',L2,' CALX-531
     B- RESULTS FOR EXPERIMENTAL DATA ON FILE 64'/' 16-',L2,' - HEAVY-IOCALX-532
     CN DEFINITION OF RADII AND DEFORMATIONS.   |',9X,'AND AT EQUIDISTANCALX-533
     DT ANGLES WRITTEN ON FILE 66.'/' 17-',L2,' - FOLDING MODEL.',36X,'|CALX-534
     E 65-',L2,' - LEGENDRE EXPANSION FOR CROSS-SECTIONS WRITTEN ON FILECALX-535
     F 65.'/' 18-',L2,' - PROJECTILE-TARGET ANTISYMMETRISATION.',13X,'|'CALX-536
     G/' 19-',L2,' - DEFORMED COULOMB SPIN-ORBIT POTENTIAL.',12X,'| 66-'CALX-537
     H,L2,' - NO CALCULATION AT EQUIDISTANT ANGLES.'/' 20-',L2,' - DISPECALX-538
     IRSION RELATIONS FOR TRANSITION FORM-FACTORS. | 67-',L2,' - NO PLOTCALX-539
     J OF EXPERIMENTAL DATA.')                                          CALX-540
 1006 FORMAT (59X,'| 68-',L2,' - NO PLOT OF CROSS-SECTIONS AT EQUIDISTANCALX-541
     1T ANGLES.'/' 21-',L2,' - USUAL COUPLED EQUATIONS-(.F.: ITERATIONS)CALX-542
     2.',8X,'| 69-',L2,' - NO PLOT OF POLARISATIONS AT EQUIDISTANT ANGLECALX-543
     3S.'/' 22-',L2,' - NO USE OF PADE FOR CONVERGENCE OF THE ITERATIONSCALX-544
     4. |'/' 23-',L2,' - NO USE OF PADE WITHOUT CONVERGENCE.',15X,'| 71-CALX-545
     5',L2,' - DETAILED OUTPUT OF LOGICAL CONTROLS.'/' 24-',L2,' - COUPLCALX-546
     6ING POTENTIALS COMPUTED AT EACH ITERATION.   | 72-',L2,' - NO OUTPCALX-547
     7UT OF EXPERIMENTAL DATA AS THEY ARE READ.'/' 25-',L2,' - COMPLETE CALX-548
     8CALCULATION UP TO THE END-(.F.: ONE ITE- | 73-',L2,' - NO OUTPUT OCALX-549
     9F EXTERNAL POTENTIALS AS THEY ARE READ.'/9X,'RATION ONLY AS SOON ACALX-550
     AS TWO ITERATIONS ARE ENOUGH).| 74-',L2,' - OUTPUT OF VARIATIONS INCALX-551
     B STORAGE.'/' 26-',L2,' - INTEGRATION STABILISED FOR LONG RANGE POTCALX-552
     CENTIAL.  | 75-',L2,' - NO COMPLETE OUTPUT AT THE FIRST RUN OF A SECALX-553
     DARCH.'/' 27-',L2,' - NUMEROV''S METHOD FOR SINGLE EQUATIONS-(.F.: CALX-554
     EMODI- | 76-',L2,' - LO(51) TO LO(65) ARE ALWAY USED-(.F.: ONLY FORCALX-555
     F'/9X,'FIED NUMEROV''S METHOD).',27X,'|',9X,'COMPLETE OUTPUT)'/' 28CALX-556
     G-',L2,' - COMPUTATION UP TO J-CONVERGENCE-(F.: STOP WHEN    | 77-'CALX-557
     H,L2,' - NO OUTPUT OF TIME DIFFERENCES DURING THE SEARCH.'/9X,'ALL CALX-558
     ITHE INHOMOGENEOUS TERMS ARE NEGLIGIBLE).',6X,'| 78-',L2,' - NO OUTCALX-559
     JPUT OF DIFFERENCES BETWEEN EXPERIMENTAL')                         CALX-560
 1007 FORMAT (' 29-',L2,' - NO DIAGONAL TERM IN SECOND MEMBERS.',15X,'|'CALX-561
     1,9X,'AND CALCULATED VALUES.'/59X,'|'/' 31-',L2,' - INPUT OF EXPERICALX-562
     2MENTAL DATA AND CHI2 CALCULATION.  | 81-',L2,' - HAUSER-FESHBACH CCALX-563
     3ORRECTIONS TO CROSS-SECTIONS.'/' 32-',L2,' - AUTOMATIC SEARCH ON SCALX-564
     4OME PARAMETERS.',14X,'| 82-',L2,' - SIMPLEST COMPOUND NUCLEUS FORMCALX-565
     5ALISM.'/' 33-',L2,' - SYMMETRISED CHI2 FOR CROSS-SECTIONS.',14X,'|CALX-566
     6 83-',L2,' - NO ENGELBRETCH-WEIDENMULLER TRANSF. IN C.-N.'/' 34-',CALX-567
     7L2,' - NUMBER OF EVALUATIONS LIMITED BY THE JOB CARD.    | 84-',L2CALX-568
     8,' - UNCOUPLED LEVELS FOR COMPOUND NUCLEUS.'/' 35-',L2,' - SEARCH CALX-569
     9SAVED ON TAPE 8 IF ENDED BY LACK OF TIME.  | 85-',L2,' - FISSION DCALX-570
     AATA IN COMPOUND NUCLEUS.'/' 36-',L2,' - RESTART A SEARCH FROM TAPECALX-571
     B 8.',21X,'| 86-',L2,' - GAMMA EMISSION DATA IN COMPOUND NUCLEUS.'/CALX-572
     C' 37-',L2,' - NEXT CALCULATION CHANGING ENERGY AND/OR SOME',6X,'| CALX-573
     D87-',L2,' - NO WIDTH FLUCTUATIONS.'/9X,'PARAMETERS.',39X,'|'/59X,'CALX-574
     E| 91-',L2,' - EQUIDISTANT ANGLES IN THE LABORATORY SYSTEM.'/' 41-'CALX-575
     F,L2,' - FACTORISATION OF 1/(1-COS(THETA)) IN AMPLITUDES.  | 92-',LCALX-576
     G2,' - PURE DWBA CALCULATION.'/' 42-',L2,' - SCHMIDT''S ORTHOGONAL.CALX-577
     H IN USUAL COUPLED EQUATIONS. | 93-',L2,' - NO RECOIL CORRECTION FOCALX-578
     IR REACTIONS.')                                                    CALX-579
 1008 FORMAT (' 43-',L2,' - INTERPOLATION ON TOTAL SPIN.',22X,'| 94-',L2CALX-580
     1,' - NON STANDARD OBSERVABLES AT EQUIDISTANT ANGLES.'/' 44-',L2,' CALX-581
     2- COULOMB CORRECTIONS.',30X,'| 98-',L2,' - USE OF REST MASS IN DIRCALX-582
     3AC EQUATIONS.'/' 46-',L2,' - ANGULAR MOMENTUM LIMIT FOR COULOMB COCALX-583
     4RRECTIONS.   | 99-',L2,' - SCHROEDINGER EQUIVALENT TO DIRAC EQUATICALX-584
     5ON.'/' 46-',L2,' - RESTRICTED COULOMB CORRECTIONS.',19X,'|100-',L2CALX-585
     6,' - COMPLETE DIRAC EQUATION.'/'1')                               CALX-586
 1009 FORMAT (//' **** FIRST CONTROL CARD ****',2X,'1 ',9(' 1'),' 2 ',9(CALX-587
     1' 2'),' 3 ',9(' 3'),' 4 ',9(' 4'),' 5'/ 11X,5('  1 2 3 4 5 6 7 8 9CALX-588
     2 0')/11X,5(1X,10L2)//' *** SECOND CONTROL CARD ****',2X,'1 ',9(' 1CALX-589
     3'),' 2 ',9(' 2'),' 3 ',9(' 3'),' 4 ',9(' 4'),' 5'/11X,5('  1 2 3 4CALX-590
     4 5 6 7 8 9 0')/11X,5(1X,10L2)/)                                   CALX-591
 1010 FORMAT (10X,82('*')/10X,'*',80X,'*'/10X,'*',4X,18A4,4X,'*'/10X,'*'CALX-592
     1,80X,'*'/10X,82('*')/)                                            CALX-593
 1011 FORMAT (7F10.3)                                                   CALX-594
 1012 FORMAT (' MAXIMUM NUMBER OF J',I6,'  (MIN',I3,') STOP WHEN MAXIMUMCALX-595
     1 S-MATRIX ELEMENT IS LESS THAN',D18.4//' PLOT CONDITIONS FOR CROSSCALX-596
     2-SECTIONS',2I5,5X,'FOR POLARISATIONS',2I5/)                       CALX-597
 1013 FORMAT (4X,I3,' FACTORISATION OF 1/(1-COS(THETA)) IN THE AMPLITUDECALX-598
     1S')                                                               CALX-599
 1014 FORMAT (' ANGULAR MOMENTA LIMITED TO',I5)                         CALX-600
 1015 FORMAT (10X,'ITERATION METHOD:  MAXIMUM NUMBER OF ITERATIONS',I10/CALX-601
     110X,'CONVERGENCE CRITERION:',D15.2,' FOR S-MATRIX',D15.2,' FOR POTCALX-602
     2ENTIALS AND FUNCTIONS'/)                                          CALX-603
 1016 FORMAT (' IMAGINARY POTENTIAL INCREASED WITH A FACTOR',F10.5,' FORCALX-604
     1 BETTER CONVERGENCE')                                             CALX-605
 1017 FORMAT (' USUAL COUPLED EQUATIONS')                               CALX-606
 1018 FORMAT (' SCHMIDT''S ORTHOGONALISATION EVERY',I5,'  STEPS')       CALX-607
 1019 FORMAT (5X,I5,' MAXIMUM NUMBER OF SECONDS FOR A JOB'/5X,I5,' HUNDRCALX-608
     1EDTHS OF SECOND TO PRINT FINAL OUTPUT')                           CALX-609
 1020 FORMAT (' COULOMB CORRECTIONS LIMITED TO ANGULAR MOMENTA',I2,' FORCALX-610
     1 CENTRAL TERM AND',I2,' FOR SPIN-ORBIT TERM')                     CALX-611
 1021 FORMAT (/' INDICATIONS FOR EXPANSION OF CROSS-SECTIONS IN LEGENDRECALX-612
     1 POLYNOMIALS:',3I5)                                               CALX-613
 1022 FORMAT (8I5,2F10.5)                                               CALX-614
 1023 FORMAT (/' COMPOUND NUCLEUS INPUT:',I5,' UNCOUPLED STATES',I4,' WICALX-615
     1TH ANGULAR DISTRIBUTION AND',I4,' WITHOUT ANGULAR DISTRIBUTION'/24CALX-616
     2X,I5,' FISSION TRANSM. COEFF.'/24X,I5,' GAMMA TRANSM. COEFF.'/24X,CALX-617
     3I5,' CONTINUA')                                                   CALX-618
 1024 FORMAT (' MAXIMUM NUMBER OF SPIN VALUES IN THE CONTINUUM:',I5/' DICALX-619
     1SCRETISATION WITH:',2F10.5)                                       CALX-620
 1025 FORMAT (' INTERPOLATION OF S-MATRIX',3(2X,'FROM',I6,'  BY STEPS OFCALX-621
     1',I4,'+1')/(26X,3(2X,'FROM',I6,'  BY STEPS OF',I4,'+1')))         CALX-622
 1026 FORMAT (' UNCUMULATED INCREASES  ',3(27X,I4)/(24X,3(27X,I4)))     CALX-623
 1027 FORMAT (4I5,2F10.5)                                               CALX-624
 1028 FORMAT (//5X,I5,'  EXPERIMENTAL ANGULAR DISTRIBUTIONS'/)          CALX-625
 1029 FORMAT (' THERE ARE NO EXPERIMENTAL DATA   ...  NO SEARCH')       CALX-626
 1030 FORMAT (' NO PARAMETER IN SEARCH')                                CALX-627
 1031 FORMAT (2X,I10,' COULOMB PHASES AND INDEFINITE INTEGRALS'/2X,I10,'CALX-628
     1 COULOMB FUNCTIONS AND FINITE INTEGRALS')                         CALX-629
 1032 FORMAT (' DISPERSION RELATIONS NOT ALLOWED WITH EXTERNAL POTENTIALCALX-630
     1S'/)                                                              CALX-631
 1033 FORMAT (' NUMBER OF UNCOUPLED STATES WITHOUT ANGULAR DISTRIBUTION'CALX-632
     1,I5,' LESS THAN THE NUMBER OF CONTINUA:',I5)                      CALX-633
 1034 FORMAT (2X,I3,'TH LIMIT OF INTERPOLATION',I6,' SMALLER THAN PREVIOCALX-634
     1US ONE',I6)                                                       CALX-635
 1035 FORMAT (' IN CALX  ... STOP ...')                                 CALX-636
      END                                                               CALX-637
C 01/01/04                                                      ECIS03  INPA-000
      SUBROUTINE INPA                                                   INPA-001
      WRITE (6,1000)                                                    INPA-002
 1000 FORMAT ('01/01/04',64X,'ECIS-000'/15X,'DESCRIPTION OF INPUT OF ECIINPA-003
     1S03',27X,'ECIS-001'/15X,'******************************',27X,'ECISINPA-004
     2-002'/72X,'ECIS-003'/72X,'ECIS-004'/72X,'ECIS-005'/'CARDS READ IN INPA-005
     3SUBROUTINE CALX',43X,'ECIS-006'/'*****************************',43INPA-006
     4X,'ECIS-007'/72X,'ECIS-008'/'CARD 1',34X,'FORMAT (18A4)',19X,'ECISINPA-007
     5-009'/'******',66X,'ECIS-010'/6X,'TITLE OF THE RUN WHICH WILL BE PINPA-008
     6RINTED AS HEADING OF RESULTS.',5X,'ECIS-011'/72X,'ECIS-012'/6X,'IFINPA-009
     7 TITLE=''DESCRIPTION '' THIS INPUT DESCRIPTION IS LISTED.',9X,'ECIINPA-010
     8S-013'/9X,'(1829 LINES CORRECTLY PRINTED IN 31 PAGES)',21X,'ECIS-0INPA-011
     914'/10X,'AFTER THIS LISTING, GO BACK TO CARD 1.',24X,'ECIS-015'/72INPA-012
     AX,'ECIS-016'/6X,'IF TITLE=''FIN '' THE CALCULATION IS STOPPED.',23INPA-013
     BX,'ECIS-017'/72X,'ECIS-018'/11X,'THESE CONTROL WORDS MUST BE PUNCHINPA-014
     CED FROM COLUMN 1.',11X,'ECIS-019'/72X,'ECIS-020'/'CARD 2',34X,'FORINPA-015
     DMAT (50L1)',19X,'ECIS-021'/'******',66X,'ECIS-022'/6X,'50 FIRST LOINPA-016
     EGICAL CONTROLS LO. ENTER ''T'' IN THE CORRESPONDING',6X,'ECIS-023'INPA-017
     F/6X,'COLUMN FOR .TRUE. AND NOTHING FOR .FALSE..',24X,'ECIS-024'/72INPA-018
     GX,'ECIS-025'/' MODEL',66X,'ECIS-026'/7X,'1- LO(1)  ROTATIONAL MODEINPA-019
     HL-(INVERSE: VIBRATIONAL MODEL).',9X,'ECIS-027'/7X,'2- LO(2)  SECONINPA-020
     ID ORDER VIBRATIONAL MODEL-(INVERSE: FIRST ORDER). ECIS-028'/17X,'OINPA-021
     JR CONSTRAINED ASYMMETRIC ROTATIONAL MODEL (BAND MIXINGECIS-029')  INPA-022
      WRITE (6,1001)                                                    INPA-023
 1001 FORMAT (17X,'PARAMETERS OF THE FIRST TWO 2+ COMPUTED FROM THE',7X,INPA-024
     1'ECIS-030'/17X,'QUADRUPOLE ''GAMMA'' IN THE DAVYDOV-FILIPPOV MODELINPA-025
     2).',5X,'ECIS-031'/7X,'3- LO(3)  ANHARMONIC VIBRATIONAL MODEL-(INVEINPA-026
     3RSE: HARMONIC) OR',4X,'ECIS-032'/17X,'ASYMMETRIC ROTATIONAL MODEL-INPA-027
     4(INVERSE: SYMMETRIC).',6X,'ECIS-033'/7X,'4- LO(4)  PARAMETRISED SPINPA-028
     5IN-ORBIT DEFORMATION-(INVERSE: STANDARD)ECIS-034'/7X,'5- LO(5)  DIINPA-029
     6FFERENT DEFORMATION FOR EACH POTENTIAL-(INVERSE: SAMEECIS-035'/17XINPA-030
     7,'DEFORMATION).',42X,'ECIS-036'/7X,'6- LO(6)  DEFORMATION LENGTHS INPA-031
     8READ INSTEAD OF DEFORMATIONS FOR   ECIS-037'/17X,'WOODS-SAXON FORMINPA-032
     9 FACTORS.',30X,'ECIS-038'/7X,'7- LO(7)  NUCLEAR MATRIX ELEMENT ANDINPA-033
     A FORM FACTORS READ ON CARDS. ECIS-039'/17X,'THIS IS NOT ALLOWED FOINPA-034
     BR SCHROEDINGER EQUIVALENT OF',5X,'ECIS-040'/17X,'DIRAC EQUATION. WINPA-035
     CITH SPIN IN SOME CHANNEL AND NO',7X,'ECIS-041'/17X,'COULOMB SPIN-OINPA-036
     DRBIT, USE ALSO LO(46)=.TRUE..',12X,'ECIS-042'/7X,'8- LO(8)  RELATIINPA-037
     EVISTIC KINEMATICS (REDUCED MASS REPLACED BY',6X,'ECIS-043'/17X,'SIINPA-038
     FMILAR FORMULA WITH RELATIVISTIC ENERGIES).',11X,'ECIS-044'/7X,'9- INPA-039
     GLO(9)  SYMMETRIC WOODS-SAXON FORM FACTORS WHEN THE RADIUS IS  ECISINPA-040
     H-045'/17X,'NEGATIVE.',46X,'ECIS-046'/6X,'10- LO(10) ENERGY DEPENDEINPA-041
     INT POTENTIALS BY DISPERSION RELATIONS.   ECIS-047'/17X,'NOT ALLOWEINPA-042
     JD WITH EXTERNAL POTENTIALS (LO(7)=.TRUE.).   ECIS-048'/72X,'ECIS-0INPA-043
     K49'/' INTERACTION',60X,'ECIS-050')                                INPA-044
      WRITE (6,1002)                                                    INPA-045
 1002 FORMAT (6X,'11- LO(11) DEFORMED COULOMB POTENTIAL. WITH LO(7)=.FALINPA-046
     1SE., IT IS  ECIS-051'/17X,'SET .FALSE. BY THE CODE IF NO CHARGE ISINPA-047
     2 READ.',10X,'ECIS-052'/6X,'12- LO(12) DEFORMED IMAGINARY POTENTIALINPA-048
     3 (VOLUME AND SURFACE OR',4X,'ECIS-053'/17X,'SCALAR AND VECTOR).',3INPA-049
     46X,'ECIS-054'/6X,'13- LO(13) DEFORMED REAL SPIN-ORBIT OR TENSOR POINPA-050
     5TENTIAL. WITH',5X,'ECIS-055'/17X,'LO(7)=.FALSE., IT IS SET .FALSE.INPA-051
     6 BY THE CODE IF NO',5X,'ECIS-056'/17X,'NON ZERO SPIN AND NO RELATEINPA-052
     7D POTENTIAL ARE READ.',7X,'ECIS-057'/6X,'14- LO(14) DEFORMED IMAGIINPA-053
     8NARY SPIN-ORBIT OR TENSOR POTENTIAL. IF  ECIS-058'/17X,'.TRUE., LOINPA-054
     9(13) IS SET .TRUE.. WITH LO(7)=.FALSE., IT ISECIS-059'/17X,'SET .FINPA-055
     AALSE. BY THE CODE AS FOR LO(13).',17X,'ECIS-060'/''/6X,'15- LO(15INPA-056
     B) REDUCED NUCLEAR MATRIX ELEMENTS READ FROM CARDS.',7X,'ECIS-061'/INPA-057
     C17X,'IT IS NECESSARY FOR THE ANHARMONIC VIBRATIONAL MODEL.  ECIS-0INPA-058
     D62'/6X,'16- LO(16) HEAVY-ION DEFINITION OF REDUCED RADII AND DEFORINPA-059
     EMATIONS.ECIS-063'/17X,'WHEN THERE ARE DIFFERENT MASSES IN DIFFERENINPA-060
     FT CHANNELS, ECIS-064'/17X,'THE MASSES TO BE USED CAN BE INDICATED INPA-061
     GBY THE FIRST',4X,'ECIS-065'/17X,'INPUT, BUT ONLY THE MASSES OF THEINPA-062
     H FIRST LEVEL CAN BE   ECIS-066'/17X,'USED FOR THE BACK TRANSFORMATINPA-063
     IION OF THE RESULTS OF A   ECIS-067'/17X,'SEARCH OR IN THE SUBROUTIINPA-064
     JNE EVAL (LO(37)=.TRUE.).',6X,'ECIS-068'/17X,'IF LO(6)=.TRUE., ONLYINPA-065
     K COULOMB DEFORMATION LENGTHS ARE  ECIS-069')                      INPA-066
      WRITE (6,1003)                                                    INPA-067
 1003 FORMAT (17X,'CHANGED.',47X,'ECIS-070'/6X,'17- LO(17) FOLDING MODELINPA-068
     1. WITH EXTERNAL FORM FACTORS THE FOLDING  ECIS-071'/17X,'PARAMETERINPA-069
     2S ARE USED INDEPENDENTLY OF THIS LOGICAL.',5X,'ECIS-072'/6X,'18- LINPA-070
     3O(18) PROJECTILE-TARGET ANTISYMMETRISATION, VALID ONLY FOR   ECIS-INPA-071
     4073'/17X,'SAME SPIN OF THE PARTICLE AND THE TARGET AND POSITIVE  EINPA-072
     5CIS-074'/17X,'PARITY IN THE SCHROEDINGER FORMALISM. FOR SPIN 0,',6INPA-073
     6X,'ECIS-075'/17X,'THE S-MATRIX IS COMPUTED ONLY FOR EVEN TOTAL SPIINPA-074
     7NS.',4X,'ECIS-076'/17X,'FOR SPIN NON 0., THE AMPLITUDES ARE SYMMETINPA-075
     8RISED BUT',4X,'ECIS-077'/17X,'THIS DO NOT CORRECT THE LACK OF SYMMINPA-076
     9ETRY OF THE',8X,'ECIS-078'/17X,'INTERACTION BETWEEN PARTICLE AND TINPA-077
     AARGET.',15X,'ECIS-079'/6X,'19- LO(19) DEFORMED COULOMB SPIN-ORBIT INPA-078
     BPOTENTIAL. IF .TRUE.,',6X,'ECIS-080'/17X,'LO(11) IS SET .TRUE.. WIINPA-079
     CTH LO(7)=.FALSE., IT IS SET',4X,'ECIS-081'/17X,'.FALSE. BY THE CODINPA-080
     DE AS FOR LO(13). (NEEDS LO(13)=.TRUE.ECIS-082'/17X,'WITH A REAL SPINPA-081
     EIN-ORBIT POTENTIAL, EVEN VERY SMALL)',5X,'ECIS-083'/6X,'20- LO(20)INPA-082
     F ENERGY DEPENDENCE OF TRANSITION FORM-FACTORS WHEN',6X,'ECIS-084'/INPA-083
     G17X,'LO(10)=.TRUE. . THIS DEPENDENCE IS THE GEOMETRIC MEAN  ECIS-0INPA-084
     H85'/17X,'VALUE OF THE DEPENDENCE OF THE LEVELS BETWEEN WHICH',4X,'INPA-085
     IECIS-086'/17X,'THE TRANSITION FORM-FACTOR OCCURS. IT CANNOT BE USEINPA-086
     JD   ECIS-087'/17X,'WITH LO(12)=.FALSE. .',34X,'ECIS-088')         INPA-087
      WRITE (6,1004)                                                    INPA-088
 1004 FORMAT ('  NOTE:  IN THE ROTATIONAL MODELS, THE OPTICAL POTENTIALSINPA-089
     1 (FOR ELASTIC  ECIS-089'/'  ****  SCATTERING) ARE ALWAYS DEFORMED.INPA-090
     2 TO AVOID THIS, WHEN LO(11),',4X,'ECIS-090'/8X,'LO(12),LO(13),LO(1INPA-091
     34) OR LO(19) IS .FALSE., USE LO(5)=.TRUE.',5X,'ECIS-091'/8X,'AND EINPA-092
     4NTER 0. FOR THE CORRESPONDING DEFORMATIONS.',16X,'ECIS-092'/72X,'EINPA-093
     5CIS-093'/' INTEGRATION',60X,'ECIS-094'/6X,'21- LO(21) USUAL COUPLEINPA-094
     6D EQUATIONS-(INVERSE: ITERATIONS).',9X,'ECIS-095'/17X,'NOT ALLOWEDINPA-095
     7 WITH DIRAC EQUATION. WHEN IT IS USED WITH  ECIS-096'/17X,'DEFORMEINPA-096
     8D SPIN-ORBIT, THE DERIVATIVE TERMS ARE NOT TAKENECIS-097'/17X,'INTINPA-097
     9O ACCOUNT AND THE COMPUTATION IS INCORRECT.',9X,'ECIS-098'/6X,'22-INPA-098
     A LO(22) NO USE OF PADE APPROXIMANTS FOR CONVERGENCE OF THE',5X,'ECINPA-099
     BIS-099'/17X,'ITERATIONS.',44X,'ECIS-100'/6X,'23- LO(23) NO USE OF INPA-100
     CPADE APPROXIMANT RESULTS AND SHIFT TO USUAL  ECIS-101'/17X,'COUPLEINPA-101
     DD EQUATIONS WHEN CONVERGENCE IS NOT OBTAINED.',4X,'ECIS-102'/6X,'2INPA-102
     E4- LO(24) COMPUTATION OF COUPLING POTENTIALS AT EACH ITERATION.  EINPA-103
     FCIS-103'/17X,'(SAVES SPACE BUT LOSES TIME, CHIEFLY IN ROTATIONAL',INPA-104
     G5X,'ECIS-104'/17X,'MODEL).',48X,'ECIS-105'/6X,'25- LO(25) COMPLETEINPA-105
     H CALCULATION UP TO THE END-(INVERSE: ONE',7X,'ECIS-106'/17X,'ITERAINPA-106
     ITION ONLY AS SOON AS TWO ITERATIONS ARE ENOUGH).  ECIS-107'/6X,'26INPA-107
     J- LO(26) STABILISATION OF INTEGRATION FOR LONG RANGE CONSTANT   ECINPA-108
     KIS-108')                                                          INPA-109
      WRITE (6,1005)                                                    INPA-110
 1005 FORMAT (17X,'POTENTIALS. AN ADDITIONAL TERM IN H**6 IS INTRODUCED INPA-111
     1INECIS-109'/17X,'THE TRUNCATION IN SUCH A WAY THAT THE TERM IN H**INPA-112
     26 OF  ECIS-110'/17X,'THE TOTAL TRUNCATION ERROR CANCELS OUT FOR A INPA-113
     3CONSTANT  ECIS-111'/17X,'POTENTIAL.',45X,'ECIS-112'/6X,'27- LO(27)INPA-114
     4 NUMEROV''S METHOD FOR SINGLE EQUATIONS-(INVERSE:',8X,'ECIS-113'/1INPA-115
     57X,'MODIFIED NUMEROV''S METHOD). FOR SINGLE EQUATION AND',4X,'ECISINPA-116
     6-114'/17X,'CONSTANT POTENTIAL, TRUNCATION ERRORS ARE OF OPPOSITE  INPA-117
     7ECIS-115'/17X,'SIGN.',50X,'ECIS-116'/6X,'28- LO(28) COMPUTATION UPINPA-118
     8 TO J-CONVERGENCE-(INVERSE: STOP WHEN ALLECIS-117'/17X,'THE INHOMOINPA-119
     9GENEOUS TERMS ARE NEGLIGIBLE). FOR ELASTIC   ECIS-118'/17X,'SCATTEINPA-120
     ARING (ONLY ONE CHANNEL) LO(21) OR LO(28) MUST BE ECIS-119'/17X,'.TINPA-121
     BRUE.. IN THIS CASE LO(28) IS SET .TRUE. BY THE CODE. ECIS-120'/''INPA-122
     C/6X,'29- LO(29) NO DIAGONAL TERMS IN SECOND MEMBERS FOR ITERATIONSINPA-123
     D OF  ECIS-121'/17X,'SCHROEDINGER EQUATIONS. (INVERSE: ALL COUPLINGINPA-124
     ES ARE IN ECIS-122'/17X,'SECOND MEMBERS. THE UNCOUPLED SOLUTIONS DOINPA-125
     F NOT DEPEND  ECIS-123'/17X,'ON THE CHANNEL SPIN BUT CONVERGENCE CAINPA-126
     GN BE SLOWER IN   ECIS-124'/17X,'SOME PROBLEMS. NO EFFECT IN FIRST INPA-127
     HORDER VIBRATIONAL',4X,'ECIS-125'/17X,'MODEL, NO USE IN DIRAC EQUATINPA-128
     IIONS: IF LO(100)=.TRUE.,   ECIS-126'/17X,'LO(29) IS SET .FALSE.). INPA-129
     JFOR CONVENIENCE, LO(29) IS SET ECIS-127'/17X,'.FALSE. IF LO(18)=.TINPA-130
     KRUE. .',29X,'ECIS-128'/72X,'ECIS-129'/' SEARCH',65X,'ECIS-130')   INPA-131
      WRITE (6,1006)                                                    INPA-132
 1006 FORMAT (6X,'31- LO(31) INPUT OF EXPERIMENTAL DATA AND CALCULATION INPA-133
     1OF A CHI2.  ECIS-131'/17X,'IT IS SET .FALSE. IF NO EXPERIMENTAL DAINPA-134
     2TA ARE READ.',4X,'ECIS-132'/6X,'32- LO(32) AUTOMATIC SEARCH ON SOMINPA-135
     3E PARAMETERS. IT IS SET .FALSE. ECIS-133'/17X,'IF NO PARAMETERS ARINPA-136
     4E IN SEARCH.',24X,'ECIS-134'/6X,'33- LO(33) SYMMETRISED CHI2 FOR CINPA-137
     5ROSS-SECTIONS WITH FIXED',9X,'ECIS-135'/17X,'NORMALISATION-(INVERSINPA-138
     6E: USUAL CHI2). THE CHI2',10X,'ECIS-136'/17X,'CONTRIBUTION IS MULTINPA-139
     7IPLIED BY THE RATIO OF',13X,'ECIS-137'/17X,'EXPERIMENTAL TO CALCULINPA-140
     8ATED VALUE.',22X,'ECIS-138'/6X,'34- LO(34) NUMBER OF EVALUATIONS IINPA-141
     9N THE SEARCH LIMITED BY THE JOB ECIS-139'/17X,'CARD. THIS OPTION CINPA-142
     AAN BE USED ONLY IF THE REMAINING',4X,'ECIS-140'/17X,'CPU TIME IS AINPA-143
     BVAILABLE TO THE CODE ON YOUR COMPUTER.',4X,'ECIS-141'/17X,'A MAXIMINPA-144
     CUM RUNNING TIME MUST BE READ.',19X,'ECIS-142'/6X,'35- LO(35) SEARCINPA-145
     DH SAVED ON TAPE 8 IF CORRECTLY ENDED OR STOPPED BYECIS-143'/17X,'TINPA-146
     EHE NUMBER OF EVALUATIONS.',29X,'ECIS-144'/6X,'36- LO(36) RESTART AINPA-147
     F SEARCH FROM TAPE 8.',26X,'ECIS-145'/6X,'37- LO(37) NEXT CALCULATIINPA-148
     GON CHANGING ONLY ENERGY AND SOME OPTICAL ECIS-146'/17X,'PARAMETERSINPA-149
     H.',44X,'ECIS-147'/72X,'ECIS-148'/' LONG RANGE INTERACTION',49X,'ECINPA-150
     IIS-149'/6X,'41- LO(41) FACTORISATION OF 1/(1-COS(THETA)) IN THE AMINPA-151
     JPLITUDES. ITECIS-150'/17X,'IS NEEDED FOR DIRAC EQUATION OR WITH SPINPA-152
     KIN-ORBIT COULOMBECIS-151'/17X,'POTENTIAL.',45X,'ECIS-152')        INPA-153
      WRITE (6,1007)                                                    INPA-154
 1007 FORMAT (6X,'42- LO(42) SCHMIDT''S ORTHOGONALISATION OF SOLUTIONS IINPA-155
     1N USUAL',6X,'ECIS-153'/17X,'COUPLED EQUATIONS.',37X,'ECIS-154'/6X,INPA-156
     2'43- LO(43) INTERPOLATION ON TOTAL SPIN.',27X,'ECIS-155'/6X,'44- LINPA-157
     3O(44) COULOMB CORRECTIONS. LO(44) IS SET .FALSE. IF LO(11) ISECIS-INPA-158
     4156'/17X,'.FALSE. . OUTSIDE THE DIRAC FORMALISM IT IS BETTER TO  EINPA-159
     5CIS-157'/17X,'USE ALSO LO(29)=.TRUE..',32X,'ECIS-158'/6X,'45- LO(4INPA-160
     65) LIMITATION ON THE ANGULAR MOMENTA FOR COULOMB',10X,'ECIS-159'/1INPA-161
     77X,'CORRECTIONS. DEFAULT OPTIONS ARE 3 FOR CENTRAL TERM',4X,'ECIS-INPA-162
     8160'/17X,'AND 2 FOR SPIN-ORBIT TERM. MAXIMUM VALUES ARE',10X,'ECISINPA-163
     9-161'/17X,'RESPECTIVELY 5 AND 4.',34X,'ECIS-162'/6X,'46- LO(46) REINPA-164
     ASTRICTED COULOMB CORRECTIONS. (SAVES STORAGE).',7X,'ECIS-163'/17X,INPA-165
     B'IF LO(44)=.FALSE. THE DIAGONAL CORRECTIONS USED IN',5X,'ECIS-164'INPA-166
     C/17X,'DIRAC FORMALISM OR FOR THE COULOMB SPIN-ORBIT ARE',6X,'ECIS-INPA-167
     D165'/17X,'SUPPRESSED. IF LO(44)=.TRUE. INDICATIONS FOR THESE',5X,'INPA-168
     EECIS-166'/17X,'RESTRICTIONS BETWEEN CHANNELS WILL BE READ.',12X,'EINPA-169
     FCIS-167'/'  NOTE:  IF LO(36)=.TRUE. A SEARCH SAVED ON TAPE 8 IS REINPA-170
     GSTARTED;',8X,'ECIS-168'/'  ****  NO OTHER LOGICAL CONTROL FROM THIINPA-171
     HS CARD IS TAKEN INTO ACCOUNT.  ECIS-169'/8X,'INSTEAD OF THE FOLLOWINPA-172
     IING CARDS, GO TO ''RESTART INPUT: CARDS',5X,'ECIS-170'/8X,'READ ININPA-173
     J SUBROUTINE REST''.',39X,'ECIS-171'/72X,'ECIS-172'/'CARD 3',34X,'FINPA-174
     KORMAT (50L1)',19X,'ECIS-173'/'******',66X,'ECIS-174')             INPA-175
      WRITE (6,1008)                                                    INPA-176
 1008 FORMAT (6X,'LOGICAL CONTROLS FROM 51 TO 100 (AS FOR PREVIOUS CARD)INPA-177
     1.',11X,'ECIS-175'/72X,'ECIS-176'/' PRINTING IN COMPLETE OUTPUT',44INPA-178
     2X,'ECIS-177'/7X,'1- LO(51) OUTPUT OF POTENTIALS.',34X,'ECIS-178'/7INPA-179
     3X,'2- LO(52) OUTPUT OF REDUCED NUCLEAR MATRIX ELEMENTS.',13X,'ECISINPA-180
     4-179'/7X,'3- LO(53) OUTPUT OF THE NUMBER OF ITERATIONS.',20X,'ECISINPA-181
     5-180'/''/7X,'4- LO(54) OUTPUT OF THE LENGTH USED IN THE WORKING FINPA-182
     6IELD.',8X,'ECIS-181'/7X,'5- LO(55) OUTPUT OF C-MATRIX ELEMENTS ANDINPA-183
     7 OF COMPOUND NUCLEUS',4X,'ECIS-182'/17X,'INTERMEDIATE RESULTS.',34INPA-184
     8X,'ECIS-183'/7X,'6- LO(56) OUTPUT OF S-MATRIX ELEMENTS',28X,'ECIS-INPA-185
     9184'/7X,'7- LO(57) OUTPUT OF PHASE-SHIFTS AT EACH E.C.I.S. ITERATIINPA-186
     AON.',5X,'ECIS-185'/7X,'8- LO(58) OUTPUT OF THE COEFFICIENTS OF EACINPA-187
     BH FORM FACTOR FOR ALL ECIS-186'/17X,'SETS OF EQUATIONS.',37X,'ECISINPA-188
     C-187'/'  NOTE:  IN A SEARCH, LO(51) TO LO(58) ARE USED FOR THE COMINPA-189
     DPLETE RESULTSECIS-188'/'  ****  (AT THE FIRST CALCULATION IF LO(75INPA-190
     E)=.FALSE. AND AT THE END OF   ECIS-189'/8X,'THE SEARCH).',52X,'ECIINPA-191
     FS-190'/72X,'ECIS-191'/' PUNCH AND RESULTS IN LAST OUTPUT',39X,'ECIINPA-192
     GS-192'/7X,'9- LO(59) FOR NEUTRON SCATTERING, TOTAL REACTION, ELASTINPA-193
     HIC AND',4X,'ECIS-193'/17X,'REACTION CROSS-SECTION WRITTEN ON FILE INPA-194
     I58. FOR CHARGED ECIS-194'/17X,'PARTICLES, REACTION CROSS-SECTION WINPA-195
     JRITTEN ON FILE 58.  ECIS-195'/17X,'INELASTIC CROSS-SECTIONS WRITTEINPA-196
     KN ON FILE 59.',11X,'ECIS-196')                                    INPA-197
      WRITE (6,1009)                                                    INPA-198
 1009 FORMAT (6X,'10- LO(60) S-MATRIX ELEMENTS WRITTEN ON FILE 60.',18X,INPA-199
     1'ECIS-197'/6X,'11- LO(61) REDUCED NUCLEAR MATRIX ELEMENTS WRITTEN INPA-200
     2ON FILE 61.',4X,'ECIS-198'/6X,'12- LO(62) POTENTIALS WRITTEN ON FIINPA-201
     3LE 62.',25X,'ECIS-199'/6X,'13- LO(63) PENETRABILITIES WRITTEN ON FINPA-202
     4ILE 63. WITH ITERATIONS,   ECIS-200'/17X,'THE CODE COMPUTES ALL THINPA-203
     5E SOLUTIONS.',19X,'ECIS-201'/6X,'14- LO(64) RESULTS FOR EXPERIMENTINPA-204
     6AL DATA ON FILE 64 AND AT',8X,'ECIS-202'/17X,'EQUIDISTANT ANGLES WINPA-205
     7RITTEN ON FILE 66.',17X,'ECIS-203'/6X,'15- LO(65) COEFFICIENTS OF INPA-206
     8THE EXPANSION IN LEGENDRE POLYNOMIALS  ECIS-204'/17X,'WRITTEN ON FINPA-207
     9ILE 65.',36X,'ECIS-205'/'  NOTE:  IN A SEARCH,LO(59) TO LO(65) AREINPA-208
     A USED ONLY IN THE LAST RESULT. ECIS-206'/'  ****  THERE ARE INTRODINPA-209
     BUCED FOR NEUTRON SCATTERING, IN PECULIAR, ON THEECIS-207'/8X,'SUGGINPA-210
     CESTION OF E. BAUGE, R. CAPOTE AND A. KONING. FOE EACH RUN,  ECIS-2INPA-211
     D08'/8X,'THE FIRST LINE (FORMAT A10,,F10.2,F10.5,F10.2,2I5) WITH THINPA-212
     EE',5X,'ECIS-209'/4X,'1-10  IDENTIFICATION <CROSS-S.>, <INE.C.S.>, INPA-213
     F<S-MATRIX>, <RED.MAT.>,ECIS-210'/10X,'<POTENTI.>, <TLJ',5X,'>, <EXINPA-214
     GP.DAT.>, <LEGENDRE>, <ANG.DIS.> FORECIS-211'/10X,'FILES 58 TO 66.'INPA-215
     H,47X,'ECIS-212'/3X,'11-20 THE MASS OF THE INCIDENT PARTICLE.',29X,INPA-216
     I'ECIS-213'/3X,'21-30 THE ENERGY IN THE LABORATORY SYSTEM.',27X,'ECINPA-217
     JIS-214'/3X,'31-40 THE MASS OF THE TARGET.',40X,'ECIS-215'/3X,'41-4INPA-218
     K5 THE PRODUCT OF CHARGES.',40X,'ECIS-216')                        INPA-219
      WRITE (6,1010)                                                    INPA-220
 1010 FORMAT (3X,'46-50 THE NUMBER OF LINES OR THE NUMBER OF SUBSETS WHIINPA-221
     1CH ARE HEADED  ECIS-217'/9X,'BY SOME INDICATIONS INCLUDING THEIR OINPA-222
     2WN NUMBER OF LINES, EXCEPTECIS-218'/9X,'FOR 61 AND 62. FOR 61, IT INPA-223
     3IS THE NUMBER OF COUPLED STATES AND  ECIS-219'/9X,'THE REMAINING OINPA-224
     4F THE OUTPUT CAN BE USED BY THE PROGRAM.',8X,'ECIS-220'/9X,'FOR 62INPA-225
     5, IT IS THE NUMBER OF FORM-FACTORS AND THE REMAINING OF  ECIS-221'INPA-226
     6/9X,'THE OUTPUT CAN ALSO BE USED BY THE PROGRAM, REPLACING THE',6XINPA-227
     7,'ECIS-222'/9X,'IDENTIFICATIONS BY THE SUITABLE INPUT.',25X,'ECIS-INPA-228
     8223'/72X,'ECIS-224'/' PRINTING IN THE LAST RESULT',44X,'ECIS-225'/INPA-229
     96X,'16- LO(66) NO CALCULATION AT EQUIDISTANT ANGLES.',18X,'ECIS-22INPA-230
     A6'/6X,'17- LO(67) NO PLOT OF EXPERIMENTAL DATA.',26X,'ECIS-227'/6XINPA-231
     B,'18- LO(68) NO PLOT OF CROSS-SECTIONS AT EQUIDISTANT ANGLES.',7X,INPA-232
     C'ECIS-228'/6X,'19- LO(69) NO PLOT OF POLARISATIONS AT EQUIDISTANT INPA-233
     DANGLES.',8X,'ECIS-229'/72X,'ECIS-230'/' PRINTING AT THE BEGINNING INPA-234
     EAND IN A SEARCH',30X,'ECIS-231'/6X,'21- LO(71) DETAILED OUTPUT OF INPA-235
     FLOGICAL CONTROLS.',19X,'ECIS-232'/6X,'22- LO(72) NO OUTPUT OF EXPEINPA-236
     GRIMENTAL DATA WHEN THEY ARE READ.',5X,'ECIS-233'/6X,'23- LO(73) NOINPA-237
     H OUTPUT OF EXTERNAL POTENTIALS WHEN THEY ARE READ.   ECIS-234'/6X,INPA-238
     I'24- LO(74) OUTPUT OF TIME IN DIFFERENT STEPS OF COMPUTATION.',6X,INPA-239
     J'ECIS-235'/6X,'25- LO(75) NO COMPLETE OUTPUT AT THE FIRST RUN OF AINPA-240
     K SEARCH.',7X,'ECIS-236')                                          INPA-241
      WRITE (6,1011)                                                    INPA-242
 1011 FORMAT (6X,'26- LO(76) LO(51) TO LO(65) ARE ALWAYS USED-(INVERSE: INPA-243
     1ONLY FOR',4X,'ECIS-237'/17X,'COMPLETE OUTPUT).',38X,'ECIS-238'/6X,INPA-244
     2'27- LO(77) NO OUTPUT OF TIME DIFFERENCES DURING THE SEARCH.',7X,'INPA-245
     3ECIS-239'/6X,'28- LO(78) NO OUTPUT OF DIFFERENCES BETWEEN EXPERIMEINPA-246
     4NTAL AND',6X,'ECIS-240'/17X,'CALCULATED VALUES.',37X,'ECIS-241'/72INPA-247
     5X,'ECIS-242'/''/' COMPOUND NUCLEUS',55X,'ECIS-243'/6X,'31- LO(81)INPA-248
     6 HAUSER-FESHBACH CORRECTIONS TO CROSS-SECTIONS.',9X,'ECIS-244'/17XINPA-249
     7,'WITH ITERATIONS, THE CODE COMPUTES ALL THE SOLUTIONS.  ECIS-245'INPA-250
     8/17X,'IF LO(82), LO(84), LO(85) OR LO(86) IS .TRUE., LO(81)  ECIS-INPA-251
     9246'/17X,'IS SET .TRUE..',41X,'ECIS-247'/6X,'32- LO(82) OLD SIMPLIINPA-252
     AFIED COMPOUND NUCLEUS (EXCLUDES UNCOUPLED',4X,'ECIS-248'/17X,'STATINPA-253
     BES, FISSION AND GAMMAS; LO(84), LO(85), LO(86) ARE ECIS-249'/17X,'INPA-254
     CSET .FALSE.).',42X,'ECIS-250'/6X,'33- LO(83) NO ENGELBRETCH-WEIDENINPA-255
     DMULLER TRANSFORMATION IN COMPOUND ECIS-251'/17X,'NUCLEUS.',47X,'ECINPA-256
     EIS-252'/6X,'34- LO(84) UNCOUPLED LEVELS FOR COMPOUND NUCLEUS. IT IINPA-257
     FS SET',7X,'ECIS-253'/17X,'.FALSE. IF NONE ARE READ.',30X,'ECIS-254INPA-258
     G'/6X,'35- LO(85) FISSION TRANSMISSION COEFFICIENTS (TO BE READ FROINPA-259
     HM',5X,'ECIS-255'/17X,'CARDS) FOR COMPOUND NUCLEUS. IT IS SET .FALSINPA-260
     IE. IF NONE ECIS-256'/17X,'ARE READ.',46X,'ECIS-257'/6X,'36- LO(86)INPA-261
     J GAMMA EMISSION IN COMPOUND NUCLEUS.',20X,'ECIS-258'/6X,'37- LO(87INPA-262
     K) NO WIDTH FLUCTUATIONS.',33X,'ECIS-259'/72X,'ECIS-260')          INPA-263
      WRITE (6,1012)                                                    INPA-264
 1012 FORMAT (' MISCELLANEOUS',58X,'ECIS-261'/6X,'41- LO(91) ANGULAR DISINPA-265
     1TRIBUTION AT EQUIDISTANT ANGLES IN THE',6X,'ECIS-262'/17X,'LABORATINPA-266
     2ORY SYSTEM',38X,'ECIS-263'/6X,'42- LO(92) PURE DWBA CALCULATION.',INPA-267
     333X,'ECIS-264'/6X,'43- LO(93) NO RECOIL CORRECTION FOR REACTIONS.'INPA-268
     4,20X,'ECIS-265'/6X,'44- LO(94) NON STANDARD OBSERVABLES AT EQUIDISINPA-269
     5TANT ANGLES.',8X,'ECIS-266'/6X,'48- LO(98) USE OF REST MASS IN DIRINPA-270
     6AC EQUATION.',20X,'ECIS-267'/6X,'49- LO(99) SCHROEDINGER EQUIVALENINPA-271
     7T TO DIRAC EQUATION. DIFFUSENESS ECIS-268'/17X,'OF COULOMB POTENTIINPA-272
     8ALS MUST BE 0. LO(11) AND LO(19) ARE ECIS-269'/17X,'SET .FALSE.. NINPA-273
     9O ASYMMETRIC ROTATIONAL MODEL AND NO',5X,'ECIS-270'/17X,'SECOND ORINPA-274
     ADER VIBRATIONAL MODEL: THE CORRESPONDING',6X,'ECIS-271'/17X,'LOGICINPA-275
     BAL ARE SET .FALSE..',31X,'ECIS-272'/6X,'50- LO(100) COMPLETE DIRACINPA-276
     C EQUATION.',30X,'ECIS-273'/72X,'ECIS-274'/'CARD 4',34X,'FORMAT (14INPA-277
     DI5)',19X,'ECIS-275'/'******',66X,'ECIS-276'/7X,'1- 5   NCOLL  NUMBINPA-278
     EER OF NUCLEAR STATES. IT DOES NOT INCLUDE THE  ECIS-277'/21X,'NUMBINPA-279
     FER OF UNCOUPLED STATES FOR COMPOUND NUCLEUS.   ECIS-278'/7X,'6-10 INPA-280
     G  NJMAX  MAXIMUM NUMBER OF CHANNEL SPIN. (DEFAULT OPTION 20)ECIS-2INPA-281
     H79'/21X,'THE MAXIMUM VALUE OF THE TOTAL ANGULAR MOMENTUM J  ECIS-2INPA-282
     I80'/21X,'WILL BE NJMAX-1 WHEN IT IS INTEGER OR NJMAX-.5 WHENECIS-2INPA-283
     J81'/21X,'IT IS HALF-INTEGER.',32X,'ECIS-282'/6X,'11-15   ITERM  MAINPA-284
     KXIMUM NUMBER OF ECIS ITERATIONS. (DEFAULT OPTION ECIS-283')       INPA-285
      WRITE (6,1013)                                                    INPA-286
 1013 FORMAT (21X,'20). MUST BE 1 FOR DWBA CALCULATIONS.',14X,'ECIS-284'INPA-287
     1/6X,'16-20   NPP',4X,'NUMBER OF OPTICAL POTENTIALS. (DEFAULT OPTIOINPA-288
     2N 1).  ECIS-285'/21X,'THE FIRST ONE IS DEFORMED WHEN THE FORM FACTINPA-289
     3ORS',4X,'ECIS-286'/21X,'ARE NOT READ ON CARDS.',29X,'ECIS-287'/6X,INPA-290
     4'21-25   NCJ',4X,'NUMBER OF FACTORISATIONS OF 1/(1-COS(THETA)) IN'INPA-291
     5,4X,'ECIS-288'/21X,'THE AMPLITUDES. (DEFAULT OPTION 1).',16X,'ECISINPA-292
     6-289'/6X,'26-30   NGR(1) NUMBER OF DECADES IN LOGARITHMIC SCALE ININPA-293
     7 PLOTS OF ECIS-290'/21X,'ELASTIC CROSS-SECTIONS IN THE STANDARD OPINPA-294
     8TION',6X,'ECIS-291'/21X,'(DEFAULT OPTION 2). FOR CHARGED PARTICLESINPA-295
     9, THE',5X,'ECIS-292'/21X,'CROSS-SECTION DIVIDED BY RUTHERFORD''S CINPA-296
     AROSS-SECTIONECIS-293'/21X,'IS PLOTTED.',40X,'ECIS-294'/6X,'31-35  INPA-297
     B NGR(2) AS NGR(1),FOR INELASTIC CHANNELS.(DEFAULT OPTION 2)ECIS-29INPA-298
     C5'/6X,'36-40   NPR(1) PLOT INDICATIONS FOR ELASTIC POLARISATIONS AINPA-299
     DT',6X,'ECIS-296'/21X,'EQUIDISTANT ANGLES. IF THERE ARE N DIFFERENTINPA-300
     E',7X,'ECIS-297'/21X,'ANGULAR DISTRIBUTIONS OF POLARISATIONS, NPR(1INPA-301
     F) IS  ECIS-298'/21X,'THE SUM FOR I=1 TO N OF K(I)*(2**(I-1)) WHEREINPA-302
     G',6X,'ECIS-299'/21X,'K(I)=1 FOR A PLOT AND 0 FOR NO PLOT OF THE I-INPA-303
     HTH',4X,'ECIS-300'/21X,'DISTRIBUTION.(DEFAULT OPTION 1)',20X,'ECIS-INPA-304
     I301'/14X,'STANDARD OPTIONS: SPIN 0 - NO POLARISATION.',15X,'ECIS-3INPA-305
     J02'/32X,'SPIN 1/2 - VECTOR POLARISATION.',9X,'ECIS-303'/32X,'SPIN INPA-306
     K>1/2 - IT11, T20, T21, T22.',8X,'ECIS-304'/'')                   INPA-307
      WRITE (6,1014)                                                    INPA-308
 1014 FORMAT (6X,'41-45   NPR(2) AS NPR(1),FOR INELASTIC CHANNELS.(DEFAUINPA-309
     1LT OPTION 1)ECIS-305'/14X,'STANDARD OPTIONS: SPIN 0 - NO POLARISATINPA-310
     2ION.',15X,'ECIS-306'/22X,'SPIN 1/2 - VECT. ANA. POWER, VECT. POL.,INPA-311
     3 SPIN-FLIPECIS-307'/22X,'SPIN >1/2 - IT11, VECT. POL., T20, T21, TINPA-312
     422.',6X,'ECIS-308'/6X,'46-50   LMZ',4X,'NUMBER OF J VALUES FOR WHIINPA-313
     5CH THE RADIAL EQUATIONS  ECIS-309'/21X,'ARE SOLVED WHEN COULOMB COINPA-314
     6RRECTIONS ARE USED. THIS ECIS-310'/21X,'NUMBER CAN BE AUTOMATICALLINPA-315
     7Y DECREASED IF THE',7X,'ECIS-311'/21X,'IRREGULAR FUNCTIONS ARE TOOINPA-316
     8 LARGE. THE ASYMPTOTIC  ECIS-312'/21X,'REGION WHERE THE PHASE-SHIFINPA-317
     9TS ARE COMPUTED',9X,'ECIS-313'/21X,'ANALYTICALLY IS ABOVE THIS VALINPA-318
     AUE. THE BEST VALUE OFECIS-314'/21X,'LMZ IS THE MAXIMUM VALUE OF J INPA-319
     BNEEDED BY THE SAME   ECIS-315'/21X,'COMPUTATION WITHOUT CHARGE ANDINPA-320
     C WITHOUT ANOMALOUS   ECIS-316'/21X,'MAGNETIC MOMENT. (DEFAULT OPTIINPA-321
     DON NJMAX/2, BUT ENTERECIS-317'/21X,'A NEGATIVE VALUE IF YOU WANT TINPA-322
     EO USE NJMAX).',8X,'ECIS-318'/6X,'51-55   JDM',4X,'TOTAL SPIN ABOVEINPA-323
     F WHICH STOP OR REDUCTION TO ONE',4X,'ECIS-319'/21X,'ITERATION CAN INPA-324
     GOCCUR. (LIMITS LO(25),LO(28)=.FALSE.)ECIS-320'/6X,'56-60   LML',4XINPA-325
     H,'MAXIMUM ANGULAR MOMENTUM (DEFAULT OPTION MAXIMUM). ECIS-321'/21XINPA-326
     I,'WITHOUT LONG RANGE INTERACTION, A LIMIT IS GIVEN   ECIS-322'/21XINPA-327
     J,'FOR EACH LEVEL SUCH THAT THE REGULAR COULOMB',7X,'ECIS-323'/21X,INPA-328
     K'FUNCTION IS LARGER THAN 1.D-30 AT MATCHING RADIUS. ECIS-324')    INPA-329
      WRITE (6,1015)                                                    INPA-330
 1015 FORMAT (6X,'61-65   JIT',4X,'NUMBER OF RATES OF INTERPOLATION FOR INPA-331
     1TOTAL SPIN.   ECIS-325'/21X,'(DEFAULT VALUE 1).',33X,'ECIS-326'/6XINPA-332
     2,'66-70   MN',5X,'MULTIPLICATIVE FACTOR FOR NJMAX READ IN COLUMNS'INPA-333
     3,4X,'ECIS-327'/21X,'6-10 ALLOWING TO USE MORE THAN NJMAX>10**5.',8INPA-334
     4X,'ECIS-328'/21X,'(DEFAULT VALUE 1)',34X,'ECIS-329'/'  NOTE:  IF LINPA-335
     5O(94)=.TRUE. NGR AND NPR ARE NOT TAKEN INTO ACCOUNT IN',5X,'ECIS-3INPA-336
     630'/'  ****  COMPUTATIONS AT EQUIDISTANT ANGLES BECAUSE SUCH INDICINPA-337
     7ATIONS WILLECIS-331'/8X,'BE READ AGAIN, BUT NGR IS ALWAYS USED FORINPA-338
     8 PLOTS OF EXPERIMENTAL ECIS-332'/8X,'CROSS-SECTIONS.',49X,'ECIS-33INPA-339
     93'/72X,'ECIS-334'/'CARD 5',34X,'FORMAT (7F10.5)',17X,'ECIS-335'/'*INPA-340
     A*****',66X,'ECIS-336'/8X,'1-10   H',5X,'INTEGRATION STEP SIZE IN FINPA-341
     BERMIS. (DEFAULT OPTION   ECIS-337'/21X,'MIN(0.5/WAVE NUMBER, 0.5*MINPA-342
     CIN(DIFFUSENESSES)),',6X,'ECIS-338'/21X,'WITHOUT THE DIFFUSENESSES INPA-343
     DIF LO(7)=.TRUE.).',8X,'ECIS-339'/7X,'11-20   RM',4X,'MATCHING RADIINPA-344
     EUS.(IF LO(7)=.TRUE. DEFAULT OPTION 20.ECIS-340'/21X,'IF LO(7)=.FALINPA-345
     FSE., FOR EACH NON ZERO POTENTIAL, THE ECIS-341'/21X,'RADIUS WHERE INPA-346
     GITS ABSOLUTE VALUE IS (ACONV*ECM/WAVE ECIS-342'/21X,'NUMBER) IS COINPA-347
     HMPUTED AND RM IS THE LARGEST OF THEM. ECIS-343'/21X,'FOR COULOMB FINPA-348
     IORM FACTORS, RADIUS+10*DIFFUSENESS IS ECIS-344'/21X,'USED)',46X,'EINPA-349
     JCIS-345'/7X,'21-30   BJM   COEFFICIENT OF THE IMAGINARY POTENTIAL INPA-350
     KTO BE ADDED ECIS-346')                                            INPA-351
      WRITE (6,1016)                                                    INPA-352
 1016 FORMAT (21X,'TO THE UNCOUPLED EQUATIONS AND REMOVED IN THE',6X,'ECINPA-353
     1IS-347'/21X,'SECOND MEMBER TO ACCELERATE CONVERGENCE FOR',8X,'ECISINPA-354
     2-348'/21X,'SCHROEDINGER EQUATIONS.',28X,'ECIS-349'/7X,'31-40   EITINPA-355
     3ER CONVERGENCE CRITERION FOR S-MATRIX IN THE ITERATIONECIS-350'/21INPA-356
     4X,'(DEFAULT OPTION 1.E-5).',28X,'ECIS-351'/7X,'41-50   ACONV VALUEINPA-357
     5 BELOW WHICH FUNCTIONS AND POTENTIALS ARE',5X,'ECIS-352'/21X,'NEGLINPA-358
     6ECTED IN ITERATIONS.(DEFAULT OPTION 1.E-5).',4X,'ECIS-353'/21X,'ACINPA-359
     7ONV IS ALSO USED IN THE DEFAULT VALUE OF RM.',5X,'ECIS-354'/7X,'51INPA-360
     8-60   CONJ  CONVERGENCE CRITERION FOR J VALUES.',16X,'ECIS-355'/21INPA-361
     9X,'(DEFAULT OPTION 1.E-5).',28X,'ECIS-356'/72X,'ECIS-357'/'LIMITATINPA-362
     AION OF JOB TIME',18X,'FORMAT (14I5)',19X,'ECIS-358'/'*************INPA-363
     B*********',50X,'ECIS-359'/'  IF LO(34) IS .TRUE., OTHERWISE GO TO INPA-364
     C''LIMITATION TO COULOMB CORR... '' ECIS-360'/7X,'1- 5   MSEC   TIMINPA-365
     DE ALLOWED FOR THE JOB IN SECONDS, USED ONLY FOR ECIS-361'/21X,'A SINPA-366
     EEARCH LIMITED BY THIS TIME. (DEFAULT VALUE 3600)ECIS-362'/7X,'6-10INPA-367
     F   NSEC   TIME NEEDED AT THE END OF A SEARCH TO PRINT FINAL  ECIS-INPA-368
     G363'/21X,'RESULTS IN HUNDREDTHS OF SECOND.(DEFAULT VALUE 100)ECIS-INPA-369
     H364'/72X,'ECIS-365'/''/'LIMITATION TO COULOMB CORRECTIONS',7X,'FOINPA-370
     IRMAT (14I5)',19X,'ECIS-366'/'*********************************',39INPA-371
     JX,'ECIS-367'/'  IF LO(45) IS .TRUE., OTHERWISE GO TO ''LEGENDRE EXINPA-372
     KPANSION DATA''',8X,'ECIS-368')                                    INPA-373
      WRITE (6,1017)                                                    INPA-374
 1017 FORMAT (7X,'1- 5   MCM(1)  MAXIMUM ANGULAR MOMENTUM FOR THE COMPUTINPA-375
     1ATION OF   ECIS-369'/22X,'THE CORRECTIONS DUE TO THE COULOMB POTENINPA-376
     2TIAL.',5X,'ECIS-370'/22X,'(DEFAULT OPTION 3, VALUE LIMITED TO 5).'INPA-377
     3,11X,'ECIS-371'/7X,'6-10   MCM(2)  SAME FOR THE SPIN-ORBIT COULOMBINPA-378
     4 POTENTIAL.',8X,'ECIS-372'/22X,'(DEFAULT OPTION 2, VALUE LIMITED TINPA-379
     5O 4).',11X,'ECIS-373'/' NOTE:  ENTER A NEGATIVE VALUE TO USE 0. A INPA-380
     6BLANK OR 0 IS REPLACED BY',4X,'ECIS-374'/' *****  THE DEFAULT OPTIINPA-381
     7ONS DESCRIBED ABOVE.',28X,'ECIS-375'/72X,'ECIS-376'/'LEGENDRE EXPAINPA-382
     8NSION DATA',17X,'FORMAT (14I5)',19X,'ECIS-377'/'******************INPA-383
     9*****',49X,'ECIS-378'/'  IF LO(65) IS .TRUE., OTHERWISE GO TO ''COINPA-384
     AMPOUND NUCLEUS DATA''.',9X,'ECIS-379'/7X,'1- 5   NL(1)  POWER OF (INPA-385
     B1-COS(THETA)) FOR THE EXPANSION IN',7X,'ECIS-380'/21X,'LEGENDRE POINPA-386
     CLYNOMIALS OF THE INTERFERENCE BETWEEN   ECIS-381'/21X,'COULOMB ANDINPA-387
     D NUCLEAR ELASTIC SCATTERING. POWER OF   ECIS-382'/21X,'(1-COS(THETINPA-388
     EA)**2) IF LO(18) IS .TRUE..',13X,'ECIS-383'/21X,'(DEFAULT OPTION 2INPA-389
     F).',32X,'ECIS-384'/7X,'6-10   NL(2)  NUMBER OF LEGENDRE POLYNOMIALINPA-390
     GS FOR ELASTIC',9X,'ECIS-385'/21X,'SCATTERING OF CHARGED PARTICLES.INPA-391
     H (DEFAULT OPTION   ECIS-386'/21X,'1.5 NUMBER OBTAINED WITHOUT COULINPA-392
     IOMB AMPLITUDE).',4X,'ECIS-387'/6X,'11-15   NL(3)  NUMBER OF LEGENDINPA-393
     JRE POLYNOMIALS FOR ELASTIC',9X,'ECIS-388'/21X,'SCATTERING OF UNCHAINPA-394
     KRGED PARTICLES, INELASTIC',7X,'ECIS-389')                         INPA-395
      WRITE (6,1018)                                                    INPA-396
 1018 FORMAT (21X,'SCATTERING AND COMPOUND NUCLEUS. (DEFAULT OPTION   ECINPA-397
     1IS-390'/21X,'MAXIMUM NUMBER).',35X,'ECIS-391'/72X,'ECIS-392'/'COMPINPA-398
     2OUND NUCLEUS DATA',19X,'FORMAT (8I5,2F10.5)',13X,'ECIS-393'/'*****INPA-399
     3****************',51X,'ECIS-394'/'  IF LO(84) OR LO(85) OR LO(86) INPA-400
     4IS .TRUE., OTHERWISE GO TO',14X,'ECIS-395'/'  ''INTERPOLATION ON TINPA-401
     5OTAL SPIN''.',40X,'ECIS-396'/7X,'1- 5   NSP(1) NUMBER OF UNCOUPLEDINPA-402
     6 STATES AND CONTINUA. IF IS',5X,'ECIS-397'/21X,'REPLACED BY MIN(NSINPA-403
     7P(1),NSP(2)). IF IT IS ZERO,',5X,'ECIS-398'/21X,'LO(84)=.FALSE.',3INPA-404
     87X,'ECIS-399'/7X,'6-10   NSP(2) NUMBER OF UNCOUPLED STATES WITH ANINPA-405
     9GULAR',12X,'ECIS-400'/21X,'DISTRIBUTION. THEY MUST BE THE FIRST GIINPA-406
     AVEN.',8X,'ECIS-401'/6X,'11-15   NFISS  NUMBER OF FISSION DATA. IF INPA-407
     BNFISS=0, LO(85)=.FALSE. ECIS-402'/6X,'16-20   NRD',4X,'NUMBER OF GINPA-408
     CAMMA TRANSMISSION FACTORS. IF IT IS 0,  ECIS-403'/21X,'THESE COEFFINPA-409
     DICIENTS ARE COMPUTED.',19X,'ECIS-404'/6X,'21-25   NCONT  NUMBER OFINPA-410
     E CONTINUA. THEY MUST BE THE LAST GIVEN,   ECIS-405'/21X,'NO ANGULAINPA-411
     FR DISTRIBUTION CAN BE REQUESTED FOR THEM. ECIS-406'/6X,'26-30   NCINPA-412
     GOJ   NUMBER OF VALUES OF THE SPIN OF THE RESIDUAL',7X,'ECIS-407'/2INPA-413
     H1X,'NUCLEUS FOR THE CONTINUA. (DEFAULT OPTION 30).',5X,'ECIS-408'/INPA-414
     I6X,'31-35   KMIN   MINIMUM NUMBER OF J VALUES FOR COMPOUND NUCLEUSINPA-415
     J',4X,'ECIS-409'/21X,'(DEFAULT OPTION: MINIMUM VALUE FOR S WAVES ININPA-416
     K',6X,'ECIS-410'/21X,'ENTRANCE CHANNEL).',33X,'ECIS-411')          INPA-417
      WRITE (6,1019)                                                    INPA-418
 1019 FORMAT (6X,'36-40   KMAX   MAXIMUM NUMBER OF J VALUES FOR COMPOUNDINPA-419
     1 NUCLEUS',4X,'ECIS-412'/21X,'(DEFAULT OPTION NJMAX).',28X,'ECIS-41INPA-420
     23'/6X,'41-50   ACN1   RATIO ENERGY/STEP FOR THE DISCRETISATION OF INPA-421
     3THE',4X,'ECIS-414'/21X,'CONTINUA AT LARGE ENERGY . (DEFAULT OPTIONINPA-422
     4 8.).',4X,'ECIS-415'/6X,'51-60   ACN2   NUMBER OF STEPS PER MEV FOINPA-423
     5R THE DISCRETISATION OF  ECIS-416'/21X,'THE CONTINUA AT LOW ENERGYINPA-424
     6. (DEFAULT OPTION 8.).   ECIS-417'/'  NOTE:  THE SHIFT FROM THE USINPA-425
     7E OF ACN1 TO ACN2 OCCURS BELOW THE ENERGY ECIS-418'/'  ****  ACN1/INPA-426
     8ACN2. BELOW THIS ENERGY, THE INTERVAL IS DIVIDED IN EQUAL  ECIS-41INPA-427
     99'/4X,'STEPS WITH A MINIMUM OF TWO STEPS. CALCULATIONS ARE DONE WIINPA-428
     ATH THE   ECIS-420'/4X,'ENERGY OF THE MIDDLE OF THE STEP.',35X,'ECIINPA-429
     BS-421'/9X,'WITHOUT KMIN THE CALCULATION CAN STOP BEFORE ANY SIGNIFINPA-430
     CICANT   ECIS-422'/4X,'RESULT. WITH INTERPOLATION ON TOTAL SPIN BELINPA-431
     DOW KMAX, A HUGE STORAGE ECIS-423'/4X,'ARRAY, PROPORTIONAL TO KMAX,INPA-432
     E IS NEEDED FOR UNCOUPLED STATES WITH',4X,'ECIS-424'/4X,'ANGULAR DIINPA-433
     FSTRIBUTION.',47X,'ECIS-425'/''/9X,'COMPOUND NUCLEUS CALCULATION IINPA-434
     GS STOPPED AT THE J VALUE LARGER  ECIS-426'/4X,'THAN KMIN ONE FOR WINPA-435
     HHICH THE LARGEST COMPOUND NUCLEUS CONTRIBUTION ISECIS-427'/4X,'LESINPA-436
     IS THAN CONJ**2. THE CODE CANNOT DEAL WITH VERY LARGE J VALUES.   EINPA-437
     JCIS-428'/72X,'ECIS-429'/'INTERPOLATION ON TOTAL SPIN',13X,'FORMAT INPA-438
     K(14I5)',19X,'ECIS-430')                                           INPA-439
      WRITE (6,1020)                                                    INPA-440
 1020 FORMAT ('***************************',45X,'ECIS-431'/'  IF LO(43) INPA-441
     1IS .TRUE., OTHERWISE GO TO  ''CARDS READ IN SUBROUTINE LECT''.ECISINPA-442
     2-432'/8X,'1- 5   LS(1) FIRST LIMIT.',39X,'ECIS-433'/8X,'6-10   LD(INPA-443
     31) NUMBER OF VALUES SKIPPED.',26X,'ECIS-434'/7X,'11-15   LS(2) SECINPA-444
     4OND LIMIT.',38X,'ECIS-435'/7X,'16-20   LD(2) NUMBER OF VALUES SKIPINPA-445
     5PED.',26X,'ECIS-436'/3X,'....................  UP TO LS(JIT) AND LINPA-446
     6D(JIT)   ...................ECIS-437'/7X,'THE CALCULATION IS STOPPINPA-447
     7ED IF VALUES LS DECREASE. THE VALUES LD  ECIS-438'/' ARE CHANGED TINPA-448
     8O BE USED CUMULATIVELY IN THE PROGRAM. IF LO(18)=.TRUE.,  ECIS-439INPA-449
     9'/' AND THE SPINS IN THE GROUND STATE ARE BOTH ZERO, THE VALUES LDINPA-450
     A READ AREECIS-440'/' MULTIPLIED BY 2.',55X,'ECIS-441'/72X,'ECIS-44INPA-451
     B2'/72X,'ECIS-443'/'CARDS READ IN SUBROUTINE LECL',43X,'ECIS-444'/'INPA-452
     C*****************************',43X,'ECIS-445'/72X,'ECIS-446'/'FOR INPA-453
     DEACH NUCLEAR STATE:',49X,'ECIS-447'/'***********************',49X,INPA-454
     E'ECIS-448'/6X,'BEGINNING WITH THE GROUND-STATE AND INCLUDING UNCOUINPA-455
     FPLED STATES FORECIS-449'/6X,'COMPOUND NUCLEUS CALCULATION WHICH MUINPA-456
     GST BE AT THE END.',12X,'ECIS-450'/6X,'THE BEST ORDER IS THE ONE OFINPA-457
     H DECREASING COUPLING STRENGTH.',8X,'ECIS-451'/72X,'ECIS-452'/'NUCLINPA-458
     IEAR STATES -SPINS AND MASSES -',6X,'FORMAT (F5.2,2I2,A1,5F10.5)',5INPA-459
     JX,'ECIS-453'/'***********************************',37X,'ECIS-454')INPA-460
      WRITE (6,1021)                                                    INPA-461
 1021 FORMAT (7X,'1- 5   SP2: SPIN OF THE TARGET (2*SP2+1 KEPT IN IPI(3,INPA-462
     1I)).',7X,'ECIS-455'/7X,'6- 7   N:   FURTHER DESCRIPTION OF THE STAINPA-463
     2TE.',20X,'ECIS-456'/14X,'IN THE ROTATIONAL MODEL, MUST BE NON-ZEROINPA-464
     3 FOR THE MEMBER  ECIS-457'/22X,'OF A VIBRATIONAL BAND.',28X,'ECIS-INPA-465
     4458'/14X,'IN THE VIBRATIONAL MODEL, CAN BE NON-ZERO FOR THE GROUNDINPA-466
     5  ECIS-459'/22X,'STATE TO AVOID THE INPUT OF NEXT CARD.',12X,'ECISINPA-467
     6-460'/14X,'NOT USED IF LO(3) = .TRUE. (ANHARMONIC VIBRATIONAL  MODINPA-468
     7EL ECIS-461'/22X,'OR ASYMMETRIC ROTATIONAL MODEL), IF LO(7) = .TRUINPA-469
     8E.ECIS-462'/22X,'(EXTERNAL POTENTIALS) AND UNCOUPLED STATES.',7X,'INPA-470
     9ECIS-463'/7X,'8- 9   K:   OPTICAL POTENTIAL. (DEFAULT OPTION,1 FORINPA-471
     A GROUND-STATEECIS-464'/19X,'AND SAME AS LAST ONE FOR EXCITED STATEINPA-472
     B).',13X,'ECIS-465'/9X,'10   SPI: PARITY OF THE NUCLEAR STATE: ''+'INPA-473
     C' OR ''-'' BUT ONLY ''-'' ECIS-466'/19X,'IS NEEDED (''+'' FOR A BLINPA-474
     DANK OR ANY OTHER CHARACTER).  ECIS-467'/19X,'THIS DATA IS KEPT AS INPA-475
     E0 OR 1 IN IPI(1,I).',13X,'ECIS-468'/6X,'11-20   ENERGY OF THE PROJINPA-476
     FECTILE IN THE LABORATORY SYSTEM IN MEV  ECIS-469'/14X,'FOR THE GROINPA-477
     GUND STATE. EXCITATION ENERGY FOR THE OTHERS.   ECIS-470'/6X,'21-30INPA-478
     H   SP1: SPIN OF THE PARTICLE (2*SP1+1 KEPT IN IPI(2,I)).',5X,'ECISINPA-479
     I-471'/6X,'31-40   WV(1,I):   MASS OF THE PROJECTILE IN A.M.U.  .',INPA-480
     J12X,'ECIS-472'/19X,'IF THIS VALUE IS NOT ZERO FOR AN EXCITED STATEINPA-481
     K, THE  ECIS-473')                                                 INPA-482
      WRITE (6,1022)                                                    INPA-483
 1022 FORMAT (19X,'SPIN OF THE PROJECTILE, ITS MASS AND THE PRODUCT OF  INPA-484
     1ECIS-474'/19X,'CHARGES READ ON THIS CARD ARE TAKEN INTO ACCOUNT. IINPA-485
     2F ECIS-475'/19X,'THIS MASS IS ZERO, VALUES OF SP1, SP2, SP3, WV(1,INPA-486
     3I)  ECIS-476'/19X,'AND WV(2,I) ARE TAKEN FROM THE PRECEDING LEVEL.INPA-487
     4',6X,'ECIS-477'/6X,'41-50   WV(2,I):   MASS OF THE TARGET IN A.M.UINPA-488
     5.  .',16X,'ECIS-478'/6X,'51-60   SP3: PRODUCT OF THE CHARGES OF THINPA-489
     6E TARGET AND OF THE',6X,'ECIS-479'/19X,'PARTICLE (SP3 KEPT IN IPI(INPA-490
     74,IV)).',20X,'ECIS-480'/'  NOTE:  ONLY THIS CARD IS READ FOR UNCOUINPA-491
     8PLED STATES AND CONTINUA',7X,'ECIS-481'/'  ****  USED FOR COMPOUNDINPA-492
     9 NUCLEUS CALCULATION.',26X,'ECIS-482'/72X,'ECIS-483'/''/'DESCRIPTINPA-493
     AION OF VIBRATIONS  (IF N IS NOT 0 IN ROTATIONAL MODEL OR N IS 0 ECINPA-494
     BIS-484'/'*************************  IN VIBRATIONAL MODEL AND LO(3)INPA-495
     C=LO(7)=.FALSE.)ECIS-485'/72X,'ECIS-486'/'NUMBER OF PHONONS',23X,'FINPA-496
     DORMAT (14I5)',19X,'ECIS-487'/'*****************',55X,'ECIS-488'/7XINPA-497
     E,'1- 5   IPH(I)  DESCRIPTION OF THE STATE.',25X,'ECIS-489'/14X,'ININPA-498
     F THE VIBRATIONAL MODEL: 0 FOR GROUND STATE',14X,'ECIS-490'/22X,'1 INPA-499
     GOR 2 FOR PURE 1 OR 2-PHONONS STATE',14X,'ECIS-491'/22X,'3 FOR A MIINPA-500
     HXTURE OF 1 AND 2-PHONONS STATES.',8X,'ECIS-492'/14X,'IN THE ROTATIINPA-501
     IONAL MODEL: 0 FOR GROUND-STATE BAND',10X,'ECIS-493'/39X,'1 FOR VIBINPA-502
     JRATIONAL BAND',11X,'ECIS-494'/39X,'2 FOR A MIXTURE OF THEM',10X,'EINPA-503
     KCIS-495')                                                         INPA-504
      WRITE (6,1023)                                                    INPA-505
 1023 FORMAT (7X,'6-10   ROTATIONAL MODEL: NUMBER OF THE VIBRATION IN THINPA-506
     1E ORDER OF ECIS-496'/14X,'INPUT. (SEE ''CARDS READ IN LECT'')',25XINPA-507
     2,'ECIS-497'/14X,'VIBRATIONAL MODEL: NUMBER OF THE PHONON OF THE ONINPA-508
     3E-PHONON ECIS-498'/14X,'STATE OR OF THE FIRST PHONON OF THE TWO-PHINPA-509
     4ONONS STATE.',4X,'ECIS-499'/6X,'11-15   VIBRATIONAL MODEL: NUMBER INPA-510
     5OF THE SECOND PHONON OF THE',5X,'ECIS-500'/14X,'TWO-PHONONS STATE.INPA-511
     6',40X,'ECIS-501'/6X,'16-20   VIBRATIONAL MODEL: NUMBER OF THE ONE-INPA-512
     7PHONON COMPONENT OF  ECIS-502'/14X,'A MIXED STATE.',44X,'ECIS-503'INPA-513
     8/'  NOTE:  THE TOTAL NUMBER OF PHONONS WILL BE THE LARGEST NUMBER INPA-514
     9READ',4X,'ECIS-504'/'  ****  IN THE COLUMNS 6 TO 20.',41X,'ECIS-50INPA-515
     A5'/72X,'ECIS-506'/'PHONONS MIXING PARAMETER',16X,'FORMAT (7F10.5)'INPA-516
     B,17X,'ECIS-507'/'************************',48X,'ECIS-508'/'  IF IPINPA-517
     CH IS 3 (VIBRATIONAL MODEL) OR IPH IS 2 (ROTATIONAL MODEL)',8X,'ECIINPA-518
     DS-509'/7X,'1-10   BT IN DEGREES.',44X,'ECIS-510'/6X,'THE NUCLEAR SINPA-519
     ETATE IS:  COS(BT)*(1 PHONON) + SIN(BT)*(2 PHONONS).  ECIS-511'/14XINPA-520
     F,'OR:  COS(BT)*(VIBR. BAND) + SIN(BT)*(GROUND BAND).',8X,'ECIS-512INPA-521
     G'/72X,'ECIS-513'/'FOR ASYMMETRIC ROTATIONAL MODEL',41X,'ECIS-514'/INPA-522
     H'*******************************',41X,'ECIS-515'/' IF LO(1)=LO(3)=INPA-523
     I.TRUE.',50X,'ECIS-516'/5X,'THERE ARE N=SP(*,4)/2 BAND MIXING PARAMINPA-524
     JETERS BETWEEN THE N+1 BANDS ECIS-517'/'  DEFINED AS ATAN(A(2*I)/A(INPA-525
     K2*I-2)) WHERE A(I) IS THE AMPLITUDE OF BAND IECIS-518')           INPA-526
      WRITE (6,1024)                                                    INPA-527
 1024 FORMAT (5X,'IF N IS NOT 0 AND THE REDUCED MATRIX ELEMENTS ARE NOT INPA-528
     1READ ON CARDSECIS-519'/72X,'ECIS-520'/'MIXING PARAMETERS',23X,'FORINPA-529
     2MAT (7F10.5)',17X,'ECIS-521'/'*****************',55X,'ECIS-522'/7XINPA-530
     3,'1-10   BT(1)  IN DEGREES.',40X,'ECIS-523'/6X,'11-20   BT(2)  IN INPA-531
     4DEGREES.',40X,'ECIS-524'/6X,'21-30   BT(3)  IN DEGREES.',40X,'ECISINPA-532
     5-525'/6X,'31-40   BT(4)  IN DEGREES.',40X,'ECIS-526'/6X,'41-50   BINPA-533
     6T(5)  IN DEGREES.',40X,'ECIS-527'/6X,'51-60   .................',4INPA-534
     71X,'ECIS-528'/6X,'THE NUCLEAR STATE IS:   COS(BT(1))*Y(AI,0) + SININPA-535
     8(BT(1))*COS(BT(2))ECIS-529'/6X,'*(Y(AI,2)+S*Y(AI,-2))*SQRT(0.5) + INPA-536
     9SIN(BT(1))*SIN(BT(2))*COS(BT(3))ECIS-530'/6X,'*(Y(AI,4)+S*Y(AI,-4)INPA-537
     A)*SQRT(0.5) + ....... WHERE S=(-)**(AI+SPI).  ECIS-531'/'  NOTE: FINPA-538
     BOR UNNATURAL PARITY STATES (SPI=-), BT(1) WILL BE IGNORED IN   ECIINPA-539
     CS-532'/'  **** THE CALCULATION AND REPLACED BY 90. DEGREES.',21X,'INPA-540
     DECIS-533'/8X,'IF LO(15)=.TRUE., ALL THE NUCLEAR PARAMETERS (QUANTIINPA-541
     ETIES GIVEN  ECIS-534'/4X,'IN DEGREES) HAVE TO BE READ IN ORDER TO INPA-542
     FAVOID A CHANGE IN THIS PART ECIS-535'/4X,'OF INPUT WHEN SHIFTING LINPA-543
     GO(15) FROM .FALSE. TO .TRUE..  THEY ARE NOT ECIS-536'/4X,'USED ANDINPA-544
     H CANNOT BE IN SEARCH.',39X,'ECIS-537'/72X,'ECIS-538'/72X,'ECIS-539INPA-545
     I'/'CARDS READ IN SUBROUTINE LECT',43X,'ECIS-540'/'****************INPA-546
     J*************',43X,'ECIS-541'/72X,'ECIS-542'/''/'PHONON DESCRIPTIINPA-547
     KONS',21X,'FORMAT (2I5,F10.5,I5)',11X,'ECIS-543')                  INPA-548
      WRITE (6,1025)                                                    INPA-549
 1025 FORMAT ('*******************',53X,'ECIS-544'/'FOR EVERY PHONON INVINPA-550
     1OLVED',47X,'ECIS-545'/7X,'1- 5   NBTA(9,*) = L ANGULAR MOMENTUM USINPA-551
     2ED ALSO FOR HEAVY ION',4X,'ECIS-546'/7X,'6-10   NBTA(10,*) = K MAGINPA-552
     3NETIC QUANTUM NUMBER OF THE VIBRATION INECIS-547'/21X,'ROTATIONAL INPA-553
     4MODEL. IN THE VIBRATIONAL MODEL, MUST BEECIS-548'/21X,'ZERO TO USEINPA-554
     5 THIS PHONON IN L=0 SECOND ORDER TERMS. ECIS-549'/6X,'11-20   BETAINPA-555
     6(1,*)   PHONON AMPLITUDE FOR THE REAL POTENTIAL.',6X,'ECIS-550'/6XINPA-556
     7,'21-25   IK   LEVEL OF WHICH THE MASSES ARE USED FOR HEAVY-ION',5INPA-557
     8X,'ECIS-551'/21X,'CORRECTIONS. (DEFAULT OPTION IK=1).',16X,'ECIS-5INPA-558
     952'/72X,'ECIS-553'/'PHONON AMPLITUDES OF OTHER POTENTIALS   FORMATINPA-559
     A (7F10.5)',17X,'ECIS-554'/'*************************************',INPA-560
     B35X,'ECIS-555'/6X,'IF DEFORMATIONS ARE NOT THE SAME FOR ALL POTENTINPA-561
     CIALS (LO(5)=.TRUE.)ECIS-556'/7X,'1-10   BETA(2,*) FOR VOLUME IMAGIINPA-562
     DNARY POTENTIAL.',17X,'ECIS-557'/6X,'11-20   BETA(3,*) FOR SURFACE INPA-563
     EREAL POTENTIAL.',21X,'ECIS-558'/6X,'21-30   BETA(4,*) FOR SURFACE INPA-564
     FIMAGINARY POTENTIAL.',16X,'ECIS-559'/6X,'31-40   BETA(5,*) FOR REAINPA-565
     GL SPIN-ORBIT.',28X,'ECIS-560'/6X,'41-50   BETA(6,*) FOR IMAGINARY INPA-566
     HSPIN-ORBIT.',23X,'ECIS-561'/6X,'51-60   BETA(7,*) FOR COULOMB POTEINPA-567
     INTIAL.',26X,'ECIS-562'/6X,'61-70   BETA(8,*) FOR COULOMB SPIN-ORBIINPA-568
     JT POTENTIAL.',15X,'ECIS-563'/'  NOTE:  IF LO(5)=.FALSE., BETA(I,*)INPA-569
     K=BETA(1,*) FOR I=2,8.',15X,'ECIS-564'/'  ****',66X,'ECIS-565')    INPA-570
      WRITE (6,1026)                                                    INPA-571
 1026 FORMAT (72X,'ECIS-566'/'DEFORMATIONS OF ROTATIONAL MODEL',8X,'FORMINPA-572
     1AT (2I5,F10.5,I5)',11X,'ECIS-567'/'*******************************INPA-573
     2*',40X,'ECIS-568'/' ONLY IF LO(1)=.TRUE. AND LO(7)=.FALSE., OTHERWINPA-574
     3ISE GO TO ''OPTICAL MODEL ECIS-569'/' PARAMETERS''.',59X,'ECIS-570INPA-575
     4'/7X,'1- 5   IQM',4X,'LARGEST ORDER OF DEFORMATION.',22X,'ECIS-571INPA-576
     5'/7X,'6-10   IQMAX  MAXIMUM L-VALUE OF MULTIPOLE EXPANSION.',12X,'INPA-577
     6ECIS-572'/6X,'11-20   ASPIN, THE K-VALUE OF THE BAND, USED ONLY ININPA-578
     7 SYMMETRIC',4X,'ECIS-573'/21X,'ROTATIONAL MODEL.',34X,'ECIS-574'/6INPA-579
     8X,'21-25   IK',5X,'LEVEL OF WHICH THE MASSES ARE USED FOR HEAVY-IOINPA-580
     9N   ECIS-575'/21X,'CORRECTIONS. (DEFAULT OPTION IK=1).',16X,'ECIS-INPA-581
     A576'/'  NOTE:  IN THE ASYMMETRIC ROTATIONAL MODEL IQM IS LIMITED TINPA-582
     BO 35',8X,'ECIS-577'/'  ****  AND IQMAX IS LIMITED TO 8.',38X,'ECISINPA-583
     C-578'/72X,'ECIS-579'/'DEFORMATIONS OF REAL VOLUME POTENTIAL   FORMINPA-584
     DAT (7F10.5)',17X,'ECIS-580'/'*************************************INPA-585
     E',35X,'ECIS-581'/4X,'IQ = IQM/2 VALUES FOR SYMMETRIC ROTATIONAL MOINPA-586
     FDEL',20X,'ECIS-582'/4X,'IQ = IQM-1 VALUES FOR ASYMMETRIC ROTATIONAINPA-587
     GL MODEL',19X,'ECIS-583'/7X,'1-10   BETA(1,1)  DEFORMATION OF THE RINPA-588
     HEAL POTENTIAL.',13X,'ECIS-584'/6X,'11-20   BETA(1,2)  DEFORMATION INPA-589
     IOF THE REAL POTENTIAL.',13X,'ECIS-585'/6X,'21-30   BETA(1,3)  DEFOINPA-590
     JRMATION OF THE REAL POTENTIAL.',13X,'ECIS-586'/6X,'31-40   BETA(1,INPA-591
     K4)  DEFORMATION OF THE REAL POTENTIAL.',13X,'ECIS-587')           INPA-592
      WRITE (6,1027)                                                    INPA-593
 1027 FORMAT (6X,'41-50   BETA(1,5)  DEFORMATION OF THE REAL POTENTIAL.'INPA-594
     1,13X,'ECIS-588'/'...............................',41X,'ECIS-589'/6INPA-595
     2X,'EVENTUALLY, ON NEXT CARD:',9X,'FORMAT (7F10.5)',17X,'ECIS-590'/INPA-596
     37X,'1-10   BETA(1,8)  DEFORMATION OF THE REAL POTENTIAL.',13X,'ECIINPA-597
     4S-591'/6X,'11-20   BETA(1,9)  DEFORMATION OF THE REAL POTENTIAL. .INPA-598
     5...',8X,'ECIS-592'/6X,'..... AND SO ON UP TO BETA(1,IQ).',33X,'ECIINPA-599
     6S-593'/72X,'ECIS-594'/'DEFORMATIONS FOR OTHER POTENTIALS',7X,'FORMINPA-600
     7AT (7F10.5)',17X,'ECIS-595'/'*********************************',39INPA-601
     8X,'ECIS-596'/6X,'IF DEFORMATIONS ARE NOT THE SAME FOR ALL POTENTIAINPA-602
     9LS (LO(5)=.TRUE.)ECIS-597'/7X,'1-10   BETA(2,I) DEFORMATION OF THEINPA-603
     A VOLUME IMAGINARY POTENTIAL.  ECIS-598'/6X,'11-20   BETA(3,I) DEFOINPA-604
     BRMATION OF THE SURFACE REAL POTENTIAL.',6X,'ECIS-599'/6X,'21-30   INPA-605
     CBETA(4,I) DEFORMATION OF THE SURFACE IMAGINARY POTENTIAL. ECIS-600INPA-606
     D'/6X,'31-40   BETA(5,I) DEFORMATION FOR THE REAL SPIN-ORBIT.',12X,INPA-607
     E'ECIS-601'/''/6X,'41-50   BETA(6,I) DEFORMATION FOR THE IMAGINARYINPA-608
     F SPIN-ORBIT.',7X,'ECIS-602'/6X,'51-60   BETA(7,I) DEFORMATION FOR INPA-609
     GTHE COULOMB POTENTIAL.',10X,'ECIS-603'/6X,'61-70   BETA(8,I) DEFORINPA-610
     HMATION FOR THE COULOMB SPIN-ORBIT.',9X,'ECIS-604'/' THERE ARE IQ SINPA-611
     IUCH CARDS',48X,'ECIS-605'/'  NOTE:  IF LO(5)=.FALSE., BETA(I,J)=BEINPA-612
     JTA(1,J) FOR I=2,6 AND J=1,IQ.',4X,'ECIS-606'/'  ****',66X,'ECIS-60INPA-613
     K7'/72X,'ECIS-608')                                                INPA-614
      RETURN                                                            INPA-615
      END                                                               INPA-616
C 01/01/04                                                      ECIS03  INPB-000
      SUBROUTINE INPB                                                   INPB-001
      WRITE (6,1028)                                                    INPB-002
 1028 FORMAT ('EXPLANATION OF DEFORMATIONS OF THE ROTATIONAL MODEL:',20XINPB-003
     1,'ECIS-609'/'****************************************************'INPB-004
     2,20X,'ECIS-610'/'FOR SYMMETRIC ROTATIONAL MODEL  (LO(3)=.FALSE.)',INPB-005
     325X,'ECIS-611'/7X,'THE ORDER OF DEFORMATION IS L=2, 4, 6, ... AND INPB-006
     4SO ON.',12X,'ECIS-612'/7X,'THE RADIAL DEPENDENCE OF POTENTIALS IS:INPB-007
     5',26X,'ECIS-613'/10X,'R = R0*(1 + BETA(*,1)*Y(2,0).+ BETA(*,2)*Y(4INPB-008
     6,0) + .....)',6X,'ECIS-614'/10X,'ODD ORDER DEFORMATIONS ARE NOT REINPB-009
     7AD.',26X,'ECIS-615'/72X,'ECIS-616'/'FOR THE ASYMMETRIC ROTATIONAL INPB-010
     8MODEL (LO(3)=.TRUE.)',22X,'ECIS-617'/7X,'THE ORDER OF DEFORMATIONSINPB-011
     9 ARE (L,K)=(2,0), (2,2), (4,0), (4,2),  ECIS-618'/10X,'(4,4), (6,0INPB-012
     A) .... AND SO ON. THERE ARE LIMITED TO (8,8).',6X,'ECIS-619'/7X,'TINPB-013
     BHE RADIAL DEPENDENCE OF POTENTIALS IS:',26X,'ECIS-620'/10X,'R = R0INPB-014
     C*(1 + BETA(*,1)*(COS(BETA(*,2))*Y(2,0)+SIN(BETA(*,2))*  ECIS-621'/INPB-015
     D10X,'(Y(2,2)+Y(2,-2))*SQRT(0.5)) + BETA(*,3)*(COS(BETA(*,4))*Y(4,0INPB-016
     E)ECIS-622'/10X,'+SIN(BETA(*,4)*(COS(BETA(*,5))*(Y(4,2)+Y(4,-2))*SQINPB-017
     FRT(0.5))',4X,'ECIS-623'/10X,'+SIN(BETA(*,5))*(Y(4,4)+Y(4,-4))*SQRTINPB-018
     G(0.5)) + ..............  ECIS-624'/3X,'THE ''GAMMA'' TYPE BETAS ASINPB-019
     H BETA(*,I) FOR I=2,4,5,7... ARE IN DEGREES. ECIS-625'/3X,'********INPB-020
     I************************************************************ ECIS-INPB-021
     J626'/'FOR THE CONSTRAINED ASYMMETRIC ROTATIONAL MODEL, WHEN LO(2)=INPB-022
     K.TRUE., THE ECIS-627')                                            INPB-023
      WRITE (6,1029)                                                    INPB-024
 1029 FORMAT (7X,'BAND MIXING COEFFICIENTS ARE CALCULATED FROM ''GAMMA''INPB-025
     1=BETA(*,2)   ECIS-628'/7X,'IN THE DAVYDOV-FILIPPOV MODEL. THE SEQUINPB-026
     2ENCE OF STATES MUST BE',4X,'ECIS-629'/7X,'THE GROUND STATE, THE FIINPB-027
     3RST 2+, THE SECOND 2+,THE OTHER STATES   ECIS-630'/7X,'DESCRIBED AINPB-028
     4S IN THE GENERAL CASE (THERE CAN BE ONLY THE GROUND   ECIS-631'/7XINPB-029
     5,'STATE AND THE FIRST 2+). THE MIXING PARAMETER OF THE FIRST 2+',4INPB-030
     6X,'ECIS-632'/7X,'STATE IS USED AS ''GAMMA'' VALUE INSTEAD OF BETA(INPB-031
     71,2), BUT THE',5X,'ECIS-633'/7X,'DIFFERENCES BETWEEN BETA(I,3) AREINPB-032
     8 KEPT. THE MIXING PARAMETER',5X,'ECIS-634'/7X,'OF THE SECOND 2+ STINPB-033
     9ATE IS IGNORED. IN A SEARCH, THE INDEX 4001   ECIS-635'/7X,'SHOULDINPB-034
     A BE USED INSTEAD OF 2002 OR 3011 FOR ''GAMMA''.',14X,'ECIS-636'/72INPB-035
     BX,'ECIS-637'/'DEFORMATIONS OF ANHARMONIC VIBRATIONAL MODEL',28X,'EINPB-036
     CCIS-638'/'********************************************',28X,'ECIS-INPB-037
     D639'/'  NOTE:  IN THIS MODEL, THERE IS AN UNIQUE RATIO 1/SQRT(4*PIINPB-038
     E) FOR ANY   ECIS-640'/'  ****  ORDER OF DEFORMATION. TO BE CONSISTINPB-039
     FENT WITH THE HARMONIC',8X,'ECIS-641'/8X,'VIBRATIONAL MODEL, THE DEINPB-040
     GFORMATIONS INDICATED BELOW SHOULD BE   ECIS-642'/8X,'BETA, BETA**2INPB-041
     H/SQRT(4*PI) AND BETA**3/(4*PI) RESPECTIVELY.',7X,'ECIS-643'/72X,'EINPB-042
     ICIS-644'/'DEFORMATIONS',28X,'FORMAT (7F10.5)',17X,'ECIS-645'/'****INPB-043
     J********',60X,'ECIS-646'/' ONLY IF LO(1)=.FALSE. AND .LO(3)=.TRUE.INPB-044
     K, LO(5) OR LO(16)=.TRUE.,',7X,'ECIS-647')                         INPB-045
      WRITE (6,1030)                                                    INPB-046
 1030 FORMAT (' OTHERWISE GO TO ''OPTICAL MODEL PARAMETERS''.',28X,'ECISINPB-047
     1-648'/7X,'1-10   BETA(1,*) FOR CENTRAL POTENTIAL.',26X,'ECIS-649'/INPB-048
     26X,'11-20   BETA(2,*) FOR VOLUME IMAGINARY POTENTIAL.',17X,'ECIS-6INPB-049
     350'/6X,'21-30   BETA(3,*) FOR SURFACE REAL POTENTIAL.',21X,'ECIS-6INPB-050
     451'/6X,'31-40   BETA(4,*) FOR SURFACE IMAGINARY POTENTIAL.',16X,'EINPB-051
     5CIS-652'/6X,'41-50   BETA(5,*) FOR REAL SPIN-ORBIT.',28X,'ECIS-653INPB-052
     6'/6X,'51-60   BETA(6,*) FOR IMAGINARY SPIN-ORBIT.',23X,'ECIS-654'/INPB-053
     76X,'61-70   BETA(7,*) FOR COULOMB POTENTIAL.',26X,'ECIS-655'/72X,'INPB-054
     8ECIS-656'/'  NEXT CARD:',28X,'FORMAT (7F10.5)',17X,'ECIS-657'/'  *INPB-055
     9*********',60X,'ECIS-658'/7X,'1-10   BETA(8,*) FOR COULOMB SPIN-ORINPB-056
     ABIT POTENTIAL.',15X,'ECIS-659'/'THERE ARE FOUR SETS OF SUCH CARDS,INPB-057
     B ONE FOR EACH ORDER OF DEFORMATION.   ECIS-660'/72X,'ECIS-661'/''INPB-058
     C/'ANGULAR MOMENTA',25X,'FORMAT (14I5)',19X,'ECIS-662'/'***********INPB-059
     D****',57X,'ECIS-663'/' ONLY IF LO(16)=.TRUE., OTHERWISE GO TO ''DEINPB-060
     EFORMATIONS''.(IF LO(6)=.TRUE.,ECIS-664'/'HEAVY-ION DEFINITION DO NINPB-061
     FOT CHANGE NON COULOMB DEFORMATION LENGTHS).',4X,'ECIS-665'/8X,'1- INPB-062
     G5  FOR ZEROTH ORDER (DEFAULT 2). (NOT USED)',18X,'ECIS-666'/8X,'6-INPB-063
     H10  FOR FIRST ORDER (DEFAULT 2).',30X,'ECIS-667'/7X,'11-15  FOR SEINPB-064
     ICOND ORDER (DEFAULT 2).',29X,'ECIS-668'/7X,'16-20  FOR THIRD ORDERINPB-065
     J (DEFAULT 2).',30X,'ECIS-669'/7X,'21-25  IK   LEVEL OF WHICH THE MINPB-066
     KASSES ARE USED FOR HEAVY-ION',5X,'ECIS-670')                      INPB-067
      WRITE (6,1031)                                                    INPB-068
 1031 FORMAT (14X,'CORRECTIONS. (DEFAULT OPTION IK=1).',23X,'ECIS-671'/9INPB-069
     1X,'ENTER A NEGATIVE VALUE IF YOU WANT 0.',26X,'ECIS-672'/72X,'ECISINPB-070
     2-673'/'OPTICAL POTENTIAL PARAMETERS',44X,'ECIS-674'/'*************INPB-071
     3***************',44X,'ECIS-675'/'NPP LOOPS TO ''EQUIDISTANT ANGLESINPB-072
     4'' IF LO(7)=.FALSE. AND LO(10)=.FALSE.   ECIS-676'/'  IF LO(7)=.TRINPB-073
     5UE. AND LO(10)=.TRUE. GO TO ''DISPERSION PARAMETERS'' IN',4X,'ECISINPB-074
     6-677'/'  THIS LOOP, IF LO(7)=.TRUE. AND LO(10)=.FALSE. SKIP THEM.'INPB-075
     7,14X,'ECIS-678'/72X,'ECIS-679'/'THE PROGRAM SEARCHES TO WHICH NUCLINPB-076
     8EAR LEVEL THE POTENTIAL BELONGS. IF   ECIS-680'/'  NONE IS FOUND, INPB-077
     9A WARNING IS PRINTED AND THE FIRST ONE IS CHOSEN.',6X,'ECIS-681'/7INPB-078
     A2X,'ECIS-682'/'VOLUME OR SCALAR REAL POTENTIAL',9X,'FORMAT (3F10.5INPB-079
     B)',17X,'ECIS-683'/'*******************************',41X,'ECIS-684'INPB-080
     C/7X,'1-10   VAL(1)   DEPTH IN MEV.',36X,'ECIS-685'/6X,'11-20   VALINPB-081
     D(2)   REDUCED RADIUS IN FERMIS.',24X,'ECIS-686'/6X,'21-30   VAL(3)INPB-082
     E   DIFFUSENESS IN FERMIS.',27X,'ECIS-687'/72X,'ECIS-688'/'VOLUME OINPB-083
     FR SCALAR IMAGINARY POTENTIAL',4X,'FORMAT (3F10.5)',17X,'ECIS-689'/INPB-084
     G'************************************',36X,'ECIS-690'/7X,'1-10   VINPB-085
     HAL(4)   DEPTH IN MEV.',36X,'ECIS-691'/6X,'11-20   VAL(5)   REDUCEDINPB-086
     I RADIUS IN FERMIS.',24X,'ECIS-692'/6X,'21-30   VAL(6)   DIFFUSENESINPB-087
     JS IN FERMIS.',27X,'ECIS-693'/72X,'ECIS-694'/'SURFACE OR VECTOR REAINPB-088
     KL POTENTIAL',8X,'FORMAT (3F10.5)',17X,'ECIS-695')                 INPB-089
      WRITE (6,1032)                                                    INPB-090
 1032 FORMAT ('********************************',40X,'ECIS-696'/7X,'1-10INPB-091
     1   VAL(7)   DEPTH IN MEV.',36X,'ECIS-697'/6X,'11-20   VAL(8)   REDINPB-092
     2UCED RADIUS IN FERMIS.',24X,'ECIS-698'/6X,'21-30   VAL(9)   DIFFUSINPB-093
     3ENESS IN FERMIS.',27X,'ECIS-699'/72X,'ECIS-700'/'SURFACE OR VECTORINPB-094
     4 IMAGINARY POTENTIAL   FORMAT (3F10.5)',17X,'ECIS-701'/'**********INPB-095
     5***************************',35X,'ECIS-702'/7X,'1-10   VAL(10)  DEINPB-096
     6PTH IN MEV.',36X,'ECIS-703'/6X,'11-20   VAL(11)  REDUCED RADIUS ININPB-097
     7 FERMIS.',24X,'ECIS-704'/6X,'21-30   VAL(12)  DIFFUSENESS IN FERMIINPB-098
     8S.',27X,'ECIS-705'/72X,'ECIS-706'/'SPIN-ORBIT OR TENSOR REAL POTENINPB-099
     9TIAL',5X,'FORMAT (3F10.5)',17X,'ECIS-707'/'***********************INPB-100
     A************',37X,'ECIS-708'/7X,'1-10   VAL(13)  DEPTH IN MEV.',36INPB-101
     BX,'ECIS-709'/6X,'11-20   VAL(14)  REDUCED RADIUS IN FERMIS.',24X,'INPB-102
     CECIS-710'/6X,'21-30   VAL(15)  DIFFUSENESS IN FERMIS.',27X,'ECIS-7INPB-103
     D11'/72X,'ECIS-712'/'SPIN-ORBIT/TENSOR IMAGINARY POTENTIAL   FORMATINPB-104
     E (3F10.5)',17X,'ECIS-713'/'*************************************',INPB-105
     F35X,'ECIS-714'/7X,'1-10   VAL(16)  DEPTH IN MEV.',36X,'ECIS-715'/6INPB-106
     GX,'11-20   VAL(17)  REDUCED RADIUS IN FERMIS.',24X,'ECIS-716'/6X,'INPB-107
     H21-30   VAL(18)  DIFFUSENESS IN FERMIS.',27X,'ECIS-717'/'  NOTE:  INPB-108
     ITHE SPIN-ORBIT OPERATOR IS ALWAYS 2*(L.S)',22X,'ECIS-718'/'  **** INPB-109
     J FOR SPIN 1/2 PARTICLE, THE DEPTH IS THE USUAL VALUE.',12X,'ECIS-7INPB-110
     K19')                                                              INPB-111
      WRITE (6,1033)                                                    INPB-112
 1033 FORMAT (8X,'FOR SPIN 1 PARTICLE, THE DEPTH IS THE HALF OF THE USUAINPB-113
     1L VALUE.  ECIS-720'/72X,'ECIS-721'/''/'COULOMB POTENTIAL',23X,'FOINPB-114
     2RMAT (3F10.5)',17X,'ECIS-722'/'*****************',55X,'ECIS-723'/7INPB-115
     3X,'1-10   VAL(20)  REDUCED COULOMB RADIUS IN FERMIS.',16X,'ECIS-72INPB-116
     44'/6X,'11-20   VAL(21)  DIFFUSENESS OF A WOODS-SAXON CHARGE DISTRIINPB-117
     5BUTION.ECIS-725'/6X,'21-30   VAL(25)  THIRD PARAMETER OF A FERMI CINPB-118
     6HARGE DISTRIBUTION.  ECIS-726'/72X,'ECIS-727'/'SPIN-ORBIT COULOMB INPB-119
     7POTENTIAL',12X,'FORMAT (3F10.5)',17X,'ECIS-728'/'*****************INPB-120
     8***********',44X,'ECIS-729'/7X,'1-10   VAL(22)  ANOMALOUS MAGNETICINPB-121
     9 MOMENT (LESS HALF CHARGE IN   ECIS-730'/14X,'DIRAC FORMALISM) MULINPB-122
     ATIPLIED BY THE CHARGE OF THE TARGET.  ECIS-731'/6X,'11-20   VAL(23INPB-123
     B)  REDUCED RADIUS IN FERMIS.',24X,'ECIS-732'/6X,'21-30   VAL(24)  INPB-124
     CDIFFUSENESS IN FERMIS.',27X,'ECIS-733'/'  NOTE:  IF VAL(21)=0. OR INPB-125
     DVAL(24)=0. A HOMOGENEOUS CHARGE DISTRIBUTION  ECIS-734'/'  ****  IINPB-126
     ES USED. THE PRODUCT OF CHARGES IS COPIED INTO VAL(19).',9X,'ECIS-7INPB-127
     F35'/9X,'WHEN THE DIFFUSENESS OF THE CHARGE IS NOT ZERO, THE WOODS-INPB-128
     GSAXONECIS-736'/8X,'FORM FACTOR IS MULTIPLIED BY 1+VAL(25)*R**2. THINPB-129
     HE SAME PARAMETER ECIS-737'/8X,'VAL(25) IS USED FOR THESE TWO LAST INPB-130
     IPOTENTIALS, IF THEIR',9X,'ECIS-738'/8X,'DIFFUSENESS IS NOT ZERO.',INPB-131
     J40X,'ECIS-739'/9X,'IF LO(9)=.TRUE., ENTER A NEGATIVE RADIUS TO USEINPB-132
     K A SYMMETRIC',4X,'ECIS-740')                                      INPB-133
      WRITE (6,1034)                                                    INPB-134
 1034 FORMAT (8X,'WOODS-SAXON FORM FACTOR.',40X,'ECIS-741'/9X,'IF A DIFFINPB-135
     1USENESS OR THE RADIUS OF A COULOMB POTENTIAL WITHOUT  ECIS-742'/8XINPB-136
     2,'DIFFUSENESS IS NEGATIVE, ITS ABSOLUTE VALUE IS TAKEN INTO',7X,'EINPB-137
     3CIS-743'/8X,'ACCOUNT IN SUBROUTINE ROTP AND A MESSAGE PRINTED.',15INPB-138
     4X,'ECIS-744'/72X,'ECIS-745'/'*** END OF DO-LOOP FOR POTENTIALS WITINPB-139
     5HOUT FOLDING AND DISPERSION ***',4X,'ECIS-746'/'*** RELATIONS (LO(INPB-140
     610)=.FALSE. AND LO(17)=.FALSE.) ***',19X,'ECIS-747'/72X,'ECIS-748'INPB-141
     7/'FOLDING FOR REAL POTENTIALS',13X,'FORMAT (3F10.5)',17X,'ECIS-749INPB-142
     8'/'***************************',45X,'ECIS-750'/' ONLY IF LO(17)=.TINPB-143
     9RUE., OTHERWISE GO TO ''DISPERSION PARAMETERS''.',8X,'ECIS-751'/7XINPB-144
     A,'1-10   VAL(26) ''V'' PARAMETER',37X,'ECIS-752'/6X,'11-20   VAL(2INPB-145
     B7) ''R'' PARAMETER',37X,'ECIS-753'/6X,'21-30   VAL(28) ''A'' PARAMINPB-146
     CETER',37X,'ECIS-754'/72X,'ECIS-755'/'FOLDING FOR IMAGINARY POTENTIINPB-147
     DALS',8X,'FORMAT (3F10.5)',17X,'ECIS-756'/'************************INPB-148
     E********',40X,'ECIS-757'/7X,'1-10   VAL(29) ''V'' PARAMETER.',36X,INPB-149
     F'ECIS-758'/6X,'11-20   VAL(30) ''R'' PARAMETER.',36X,'ECIS-759'/6XINPB-150
     G,'21-30   VAL(31) ''A'' PARAMETER.',36X,'ECIS-760'/72X,'ECIS-761'/INPB-151
     H'FOLDING FOR COULOMB POTENTIALS',10X,'FORMAT (3F10.5)',17X,'ECIS-7INPB-152
     I62'/'******************************',42X,'ECIS-763'/7X,'1-10   VALINPB-153
     J(32) ''V'' PARAMETER.',36X,'ECIS-764'/6X,'11-20   VAL(33) ''R'' PAINPB-154
     KRAMETER.',36X,'ECIS-765')                                         INPB-155
      WRITE (6,1035)                                                    INPB-156
 1035 FORMAT (6X,'21-30   VAL(34) ''A'' PARAMETER.',36X,'ECIS-766'/72X,'INPB-157
     1ECIS-767'/'EXPLANATION OF FOLDING PARAMETERS:  THE FOLDING FUNCTIOINPB-158
     2NS ARE NORMALISEDECIS-768'/'**********************************  TOINPB-159
     3 1.  TO FOLD AN OPTICAL POTENTIAL,ECIS-769'/4X,'ENTER THE TRUE CHAINPB-160
     4RGE, THE DEPTH OF CENTRAL POTENTIAL EQUAL TO THE  ECIS-770'/4X,'DEINPB-161
     5PTH OF THE NUCLEON POTENTIAL MULTIPLIED BY THE NUMBER OF NUCLEONS INPB-162
     6ECIS-771'/4X,'IN THE PROJECTILE, AND THE DEPTH OF OF SPIN-ORBIT POINPB-163
     7TENTIAL EQUAL TOECIS-772'/4X,'THE DEPTH OF THE NUCLEON SPIN-ORBIT INPB-164
     8POTENTIAL DIVIDED BY THE NUMBER ECIS-773'/4X,'OF NUCLEONS IN THE PINPB-165
     9ROJECTILE.',38X,'ECIS-774'/6X,'''V''=0',4X,'NO FOLDING.',46X,'ECISINPB-166
     A-775'/6X,'''A''=0',4X,'GAUSSIAN FORM FACTOR WITH THE RANGE ''R''.'INPB-167
     B,17X,'ECIS-776'/6X,'''R''=0',4X,'HULTHEN FORM FACTOR (EXP(-R/''V''INPB-168
     C)-EXP(-R/''A''))/R.',9X,'ECIS-777'/15X,'REDUCED TO YUKAWA FORM FACINPB-169
     DTOR EXP(-R/''V'')/R IF ''A''=0.',4X,'ECIS-778'/6X,'OTHERWISE  SAXOINPB-170
     EN FORM FACTOR 1/(1+EXP((R-''R'')/''A'').',15X,'ECIS-779'/6X,'IF A INPB-171
     FFOLDING PARAMETER IS NEGATIVE, THE ABSOLUTE VALUE IS TAKEN   ECIS-INPB-172
     G780'/4X,'INTO ACCOUNT IN SUBROUTINE FOLD AND A MESSAGE PRINTED.',1INPB-173
     H4X,'ECIS-781'/6X,'ALL THE DERIVATIVES OF POTENTIALS NEEDED ARE OBTINPB-174
     IAINED BY NUMERICALECIS-782'/4X,'DERIVATION AFTER FOLDING.',43X,'ECINPB-175
     JIS-783'/72X,'ECIS-784'/''/'DISPERSION PARAMETERS',19X,'FORMAT (2IINPB-176
     K5,6F10.5)',13X,'ECIS-785'/'*********************',51X,'ECIS-786') INPB-177
      WRITE (6,1036)                                                    INPB-178
 1036 FORMAT (' ONLY IF LO(10)=.TRUE., OTHERWISE GO TO ''END OF DO-LOOP INPB-179
     1FOR POTENTIALS''.ECIS-787'/4X,'1- 5   IPP(1,1)  1 ENERGIES IN LABOINPB-180
     2RATORY SYSTEM, ANYTHING FOR',6X,'ECIS-788'/21X,'CENTER OF MASS ENEINPB-181
     3RGY.',29X,'ECIS-789'/4X,'6-10   IPP(2,1)  N2 POWER IN LARGE NEGATIINPB-182
     4VE ENERGY CORRECTION TERM. ECIS-790'/21X,'MUST BE EVEN AND POSITIVINPB-183
     5E. IF 0, TERM NOT USED.',4X,'ECIS-791'/3X,'11-20   PIP(3)',4X,'ENEINPB-184
     6RGY FOR WHICH THE IMAGINARY DEPTHS ARE READ.',4X,'ECIS-792'/21X,'(INPB-185
     7DEFAULT OPTION: ENERGY OF THE FIRST LEVEL USING   ECIS-793'/21X,'TINPB-186
     8HIS POTENTIAL).',35X,'ECIS-794'/3X,'21-30   PIP(4)',4X,'EF FERMI EINPB-187
     9NERGY. (DEFAULT OPTION -6.8 MEV).',8X,'ECIS-795'/3X,'31-40   PIP(5INPB-188
     A)',4X,'EP THRESHOLD ENERGY. (DEFAULT OPTION FERMI ENERGY).ECIS-796INPB-189
     B'/3X,'41-50   PIP(6)',4X,'EA LARGE ENERGY STARTING VALUE ABOVE FERINPB-190
     CMI ENERGY. ECIS-797'/21X,'(DEFAULT OPTION 60 MEV).',27X,'ECIS-798'INPB-191
     D/3X,'51-60   PIP(7)',4X,'AVSO EXPONENTIAL DECREASE OF REAL SPIN-ORINPB-192
     EBIT.',6X,'ECIS-799'/3X,'61-70   PIP(8)',4X,'AWSO LINEAR DECREASE OINPB-193
     FF IMAGINARY SPIN-ORBIT.',6X,'ECIS-800'/72X,'ECIS-801'/'NEXT CARD',INPB-194
     G31X,'FORMAT (2I5,6F10.5)',13X,'ECIS-802'/'*********',63X,'ECIS-803INPB-195
     H'/4X,'1- 5   IPP(1,2)  NV WITH |NV| POWER FOR VOLUME OR SCALAR POTINPB-196
     IENTIAL. ECIS-804'/4X,'6-10   IPP(2,2)  NS WITH |NS| POWER FOR SURFINPB-197
     JACE OR VECTOR POTENTIAL.ECIS-805'/3X,'11-20   PIP(9)',4X,'BV CONSTINPB-198
     KANT FOR VOLUME OR SCALAR POTENTIAL.',8X,'ECIS-806')               INPB-199
      WRITE (6,1037)                                                    INPB-200
 1037 FORMAT (3X,'21-30   PIP(10)   ALP COEFFICIENT OF LARGE POSITIVE ENINPB-201
     1ERGY TERM IN   ECIS-807'/21X,'VOLUME POTENTIAL. (DEFAULT OPTION 1.INPB-202
     265).',11X,'ECIS-808'/21X,'SECOND BV'' PARAMETER FOR VOLUME POTENTIINPB-203
     3ALS IF NV<0 ECIS-809'/21X,'(DEFAULT OPTION 2*BV).',29X,'ECIS-810'/INPB-204
     43X,'31-40   PIP(11)   CV EXPONENTIAL DECREASE IN SQRT|E| FOR LARGEINPB-205
     5',7X,'ECIS-811'/21X,'ENERGY TERMS OF VOLUME POTENTIALS OR',15X,'ECINPB-206
     6IS-812'/21X,'FV FRACTION OF THE FIRST TERM IF NV<0.',13X,'ECIS-813INPB-207
     7'/3X,'41-50   PIP(12)   BS CONSTANT FOR SURFACE OR VECTOR POTENTIAINPB-208
     8L.',7X,'ECIS-814'/3X,'51-60   PIP(13)   CS EXPONENTIAL DECREASE OFINPB-209
     9 A SURFACE POTENTIAL.',4X,'ECIS-815'/21X,'(DEFAULT OPTION 0.0036).INPB-210
     A IF NS IS NEGATIVE',9X,'ECIS-816'/21X,'BS'' SECOND CONSTANT FOR SUINPB-211
     BRFACE OR VECTOR',10X,'ECIS-817'/21X,'POTENTIAL FOR NS<0 (DEFAULT OINPB-212
     CPTION 2*BW).',10X,'ECIS-818'/3X,'61-70   PIP(14)   CR NON-LOCALITYINPB-213
     D RANGE PARAMETER OF SURFACE',9X,'ECIS-819'/21X,'POTENTIAL OR FRACTINPB-214
     EION IN THE FIRST TERM IF NS<0.   ECIS-820'/72X,'ECIS-821'/'NEXT CAINPB-215
     FRD',31X,'FORMAT (7F10.5)',17X,'ECIS-822'/'*********',63X,'ECIS-823INPB-216
     G'/4X,'1-10   PIP(15)   AHF EXPONENTIAL DECREASE OF H.F. REAL VOLUMINPB-217
     HE',7X,'ECIS-824'/21X,'POTENTIAL WHICH NEEDS THE SAME GEOMETRY FOR INPB-218
     IREAL   ECIS-825'/21X,'AND IMAGINARY VOLUME POTENTIAL.',20X,'ECIS-8INPB-219
     J26'/72X,'ECIS-827'/'EXPLANATION OF DISPERSION PARAMETERS:',35X,'ECINPB-220
     KIS-828'/'*************************************',35X,'ECIS-829')   INPB-221
      WRITE (6,1038)                                                    INPB-222
 1038 FORMAT ('FOR POSITIVE VALUES OF NV: THE VOLUME IMAGINARY POTENTIALINPB-223
     1 AT THE ENERGY ECIS-830'/'************************** E IS ASSUMED INPB-224
     2TO BE SUCH THAT ''V(2*EF-E)=V(E)''ECIS-831'/4X,'WITH ''V(E)=V*(E-EINPB-225
     3F)**NV/((E-EF)**NV+BV**NV)'' WITH ADDITION FOR',6X,'ECIS-832'/4X,'INPB-226
     4E>EF+EA OF ''ALP*[SQRT(E)+.5*(EF+EA)**(3/2)/E-1.5*SQRT(EF+EA)]'' AINPB-227
     5ND  ECIS-833'/4X,'FOR E<EF-EA OF ''-V(E)*(EF-E-EA)**N2/((EF-E-EA)*INPB-228
     6*N2+EA**N2)'' WHERE   ECIS-834'/4X,'V(E) WAS GIVEN ABOVE; THESE EXINPB-229
     7PRESSION CAN BE DAMPED BY A FACTOR',4X,'ECIS-835'/4X,'''EXP[-CV*SQINPB-230
     8RT(E-EF-EA)]'' AND ''EXP[-CV*SQRT(EF-EA-E)]'' RESPECTIVELY. ECIS-8INPB-231
     936'/4X,'THE VALUE OF ''V'' IS SUCH THAT THIS GIVES THE STRENGTH REINPB-232
     AAD AT THE   ECIS-837'/4X,'ENERGY PIP(3). THE REAL VOLUME POTENTIALINPB-233
     B WITH THE SAME GEOMETRY,',4X,'ECIS-838'/4X,'OBTAINED BY DISPERSIONINPB-234
     C RELATION (AS DESCRIBED BY C. MAHAUX AND',6X,'ECIS-839'/4X,'R. SARINPB-235
     DTOR IN NUCL. PHYS A528 (1991) 253), IS ADDED TO THE REAL',6X,'ECISINPB-236
     E-840'/4X,'POTENTIAL.',58X,'ECIS-841'/'FOR POSITIVE VALUES OF NS: TINPB-237
     FHE SURFACE IMAGINARY POTENTIAL ''W(E)'' IN THEECIS-842'/'*********INPB-238
     G***************** SCHROEDINGER FORMALISM IS ASSUMED TO HAVE THEECIINPB-239
     HS-843'/4X,'SAME ENERGY DEPENDENCE AS ''V(E)'' GIVEN ABOVE MULTIPLIINPB-240
     IED BY',10X,'ECIS-844'/4X,'''EXP[-CS*|E-EF|-CR*(E-EF)]''. THE NON-LINPB-241
     JOCALITY RANGE PARAMETER ''CR''  ECIS-845'/4X,'IS THE INVERSE OF ''INPB-242
     KEB'' GIVEN BY EQUATIONS (3.17) AND (3.18) OF',6X,'ECIS-846')      INPB-243
      WRITE (6,1039)                                                    INPB-244
 1039 FORMAT (4X,'C. MAHAUX AND R. SARTOR IN NUCL. PHYS A458 (1986) 25. INPB-245
     1THE REAL',6X,'ECIS-847'/''/4X,'SURFACE POTENTIAL WITH THE SAME GEINPB-246
     2OMETRY, OBTAINED BY DISPERSION',4X,'ECIS-848'/4X,'RELATION IS ADDEINPB-247
     3D TO THE REAL POTENTIAL. THERE IS NOT THE DEFAULT   ECIS-849'/4X,'INPB-248
     4OPTION CR=.0125 TO ALLOW TO USE 0.',34X,'ECIS-850'/'FOR NEGATIVE VINPB-249
     5ALUES OF NV: THE VOLUME IMAGINARY POTENTIAL IS ASSUMED TO ECIS-851INPB-250
     6'/'************************** BE THE SUM OF TWO TERMS SIMILAR TO 'INPB-251
     7'V(E)''',4X,'ECIS-852'/4X,'USED FOR POSITIVE VALUES, WITH THE POWEINPB-252
     8R |NV| AND THE PARAMETERS BV ECIS-853'/4X,'AND BV'' RESPECTIVELY. INPB-253
     9THE STRENGTHS ARE SUCH THAT THE FIRST TERM IS ECIS-854'/4X,'FV TIMINPB-254
     AES THE VALUE READ AT THE ENERGY PIP(3).',23X,'ECIS-855'/'FOR NEGATINPB-255
     BIVE VALUES OF NS: THE SURFACE IMAGINARY POTENTIAL IS THE',7X,'ECISINPB-256
     C-856'/'************************** DIFFERENCE OF TWO TERMS SIMILAR INPB-257
     DTO THOSE USEDECIS-857'/4X,'FOR POSITIVE VALUES OF NV, WITH THE POWINPB-258
     EER |NS|, THE PARAMETERS BS,  ECIS-858'/4X,'BS'' RESPECTIVELY AND TINPB-259
     FHE SAME STRENGTH.',29X,'ECIS-859'/6X,'THE VECTOR DISPERSIVE POTENTINPB-260
     GIAL OF THE DIRAC FORMALISM IS TREATED ECIS-860'/4X,'AS THE SCALAR INPB-261
     HONE WITHOUT LARGE ENERGY TERMS.',23X,'ECIS-861'/6X,'THE POWERS NV,INPB-262
     I NS AND N2 MUST BE EVEN. INPUT OF 0 SUPPRESSES THE  ECIS-862'/4X,'INPB-263
     JUSE OF DISPERSION RELATION FOR THE CORRESPONDING POTENTIAL.',9X,'EINPB-264
     KCIS-863'/72X,'ECIS-864')                                          INPB-265
      WRITE (6,1040)                                                    INPB-266
 1040 FORMAT (6X,'******  END OF DO-LOOP FOR POTENTIALS ******',22X,'ECIINPB-267
     1S-865'/72X,'ECIS-866'/'EQUIDISTANT ANGLES',22X,'FORMAT (7F10.5)',1INPB-268
     27X,'ECIS-867'/'******************',54X,'ECIS-868'/' ONLY IF LO(66)INPB-269
     3=.FALSE., OTHERWISE GO TO ''SPIN-ORBIT PARAMETRISATION''.  ECIS-86INPB-270
     49'/7X,'1-10   THETA1   FIRST ANGLE.',37X,'ECIS-870'/6X,'11-20   DTINPB-271
     5HETA   STEP. (DEFAULT OPTION 1.)',24X,'ECIS-871'/6X,'21-30   THETAINPB-272
     62   LAST ANGLE.',38X,'ECIS-872'/6X,'31-40   DTHE',5X,'AVERAGING ANINPB-273
     7GLE. VALUES LISTED ARE 1/3 OF THE SUMECIS-873'/23X,'OF VALUES AT TINPB-274
     8HETA AND THETA+/-DTHE.',13X,'ECIS-874'/72X,'ECIS-875'/'SPIN-ORBIT INPB-275
     9PARAMETRISATION',14X,'FORMAT (7F10.5)',17X,'ECIS-876'/'***********INPB-276
     A***************',46X,'ECIS-877'/' ONLY IF LO(4)=.TRUE., OTHERWISE INPB-277
     BGO TO ''HAUSER-FESHBACH CORRECTIONS''.   ECIS-878'/7X,'1-10   AZ1.INPB-278
     C',54X,'ECIS-879'/6X,'11-20   AZ2.',8X,'(THESE PARAMETERS ARE IN ANINPB-279
     D ARRAY',13X,'ECIS-880'/6X,'21-30   AZ3.',54X,'ECIS-881'/6X,'31-40 INPB-280
     E  AZ4.',8X,'AZ(16) FROM AZ(1) TO AZ(6) FOR THE SEARCH)',4X,'ECIS-8INPB-281
     F82'/6X,'41-50   AZ5.',54X,'ECIS-883'/6X,'51-60   AZ6.',54X,'ECIS-8INPB-282
     G84'/'  NOTE: THE UNPARAMETRISED SPIN-ORBIT DEFORMATION IS:',19X,'EINPB-283
     HCIS-885'/'  ****   AZ1=AZ4=0.,  AZ2=AZ3=AZ5=AZ6=1.',32X,'ECIS-886'INPB-284
     I/8X,'THE SPIN-ORBIT DEFORMATION MULTIPLIED BY X IS:',18X,'ECIS-887INPB-285
     J'/10X,'AZ1=AZ4=0., AZ2=1., AZ3=AZ5=AZ6=X .',27X,'ECIS-888'/8X,'THEINPB-286
     K ''INCORRECT'' SPIN-ORBIT DEFORMATION IS:',22X,'ECIS-889')        INPB-287
      WRITE (6,1041)                                                    INPB-288
 1041 FORMAT (10X,'AZ1=AZ2=AZ5=AZ6=0., AZ3=AZ4=0.5 .',29X,'ECIS-890'/8X,INPB-289
     1'FOR THE MOST GENERAL PARAMETRISATION OF DEFORMED SPIN-ORBIT SEE EINPB-290
     2CIS-891'/7X,'COMMENT CARDS IN SUBROUTINE QUAN.',32X,'ECIS-892'/72XINPB-291
     3,'ECIS-893'/'HAUSER-FESHBACH CORRECTIONS',13X,'FORMAT (7F10.5)',17INPB-292
     4X,'ECIS-894'/'***************************',45X,'ECIS-895'/' ONLY IINPB-293
     5F LO(81)=.TRUE., OTHERWISE GO TO ''CARDS READ IN SUBROUTINE DEPH''INPB-294
     6.ECIS-896'/6X,'1-10   BZ1.   SQUARE ROOT OF ELASTIC ENHANCEMENT.',INPB-295
     717X,'ECIS-897'/20X,'(DEFAULT OPTION 1.4142).',28X,'ECIS-898'/5X,'1INPB-296
     81-20   BZ2.   IF LO(82)=.TRUE., SPIN CUT-OFF PARAMETER (DEFAULT   INPB-297
     9ECIS-899'/20X,'OPTION 3.5). IF LO(82)=.FALSE., PARTICLE DEGREES OFINPB-298
     A ECIS-900'/20X,'FREEDOM.',44X,'ECIS-901'/5X,'21-30   BZ3.   SQUAREINPB-299
     B ROOT OF LEVEL DENSITY PARAMETER.',13X,'ECIS-902'/20X,'(DEFAULT OPINPB-300
     CTION 100.). IF LO(82)=LO(87)=.FALSE.,',4X,'ECIS-903'/20X,'PARAMETEINPB-301
     DR BZ3 IN MOLDAUER''S FORMULA GIVEN BELOW.',4X,'ECIS-904'/20X,'(DEFINPB-302
     EAULT OPTION 1.212).',29X,'ECIS-905'/''/5X,'31-40   BZ4.   IF LO(8INPB-303
     F2)=LO(87)=.FALSE., PARAMETER BZ4 IN MOL-',5X,'ECIS-906'/20X,'DAUERINPB-304
     G''S FORMULA GIVEN BELOW. (DEFAULT OPTION 0.78). ECIS-907'/5X,'41-5INPB-305
     H0   BZ5.   IF LO(82)=LO(87)=.FALSE., PARAMETER BZ5 IN MOL-',5X,'ECINPB-306
     IIS-908'/20X,'DAUER''S FORMULA GIVEN BELOW. (DEFAULT OPTION 0.228).INPB-307
     JECIS-909'/'  NOTE:  THE PENETRABILITIES, WHICH ARE PROBABILITIES OINPB-308
     KF COMPOUND',7X,'ECIS-910')                                        INPB-309
      WRITE (6,1042)                                                    INPB-310
 1042 FORMAT ('  ****  NUCLEUS FORMATION, ARE RELATED TO PARTIAL CROSS-SINPB-311
     1ECTIONS MINUS  ECIS-911'/8X,'THE REACTION CROSS-SECTION TO THE CHAINPB-312
     2NNELS TAKEN INTO ACCOUNT.  ECIS-912'/9X,'IF LO(82)=.TRUE., DENOTININPB-313
     3G BY TI AND TF THE PENETRABILITIES',4X,'ECIS-913'/8X,'DEFINED ABOVINPB-314
     4E FOR THE INCOMING AND THE OUTGOING CHANNELS, THE   ECIS-914'/8X,'INPB-315
     5HAUSER-FESHBACH CORRECTION IS: TI*TF/(4*(SUM ON ALL THE T)+',5X,'EINPB-316
     6CIS-915'/8X,'+BZ3**2*(2*J+1)*EXP(-(J*J+J)/(2*BZ2**2)) FOR INELASTIINPB-317
     7C CHANNELS,ECIS-916'/8X,'MULTIPLIED BY BZ1**2 FOR THE ELASTIC ONE.INPB-318
     8',23X,'ECIS-917'/8X,'FOR THE SEARCH, THESE QUANTITIES ARE IN AZ FRINPB-319
     9OM AZ(7) TO AZ(9). ECIS-918'/9X,'FOR LO(82)=.FALSE.: WITHOUT FLUCTINPB-320
     AUATIONS (LO(87)=.TRUE.), BZ1  ECIS-919'/8X,'IS USED AND CAN BE IN INPB-321
     BSEARCH; WITH FLUCTUATIONS (LO(87)=.FALSE.)ECIS-920'/8X,'THE GIVEN INPB-322
     CVALUE OF BZ2 IS USED IF BZ2 IS NOT 0; IF BZ2=0., THE  ECIS-921'/8XINPB-323
     D,'CHANNEL DEGREE OF FREEDOM PARAMETER, FORMULA (1) IN P.A.',8X,'ECINPB-324
     EIS-922'/8X,'MOLDAUER, NUCLEAR PHYSICS A344 (1980), PAGE 185-195, WINPB-325
     FHICH IS:  ECIS-923'/12X,'1.78D0+(TL**1.212D0-0.78D0)*DEXP(-0.228D0INPB-326
     G*SUM ON TL)',8X,'ECIS-924'/8X,'IS GENERALISED BY THE EXPRESSION:',INPB-327
     H31X,'ECIS-925'/12X,'1.D0+BZ4+(TL**BZ3-BZ4)*DEXP(-BZ5*SUM ON TL)',1INPB-328
     I7X,'ECIS-926'/8X,'IF LO(82)=.TRUE. BZ1 AND BZ2 CAN BE IN SEARCH; IINPB-329
     JF LO(82)=.FALSE.ECIS-927'/8X,'AND LO(87)=.TRUE. BZ3 CAN BE IN SEARINPB-330
     KCH; IF LO(82)=LO(87)=.FALSE.ECIS-928')                            INPB-331
      WRITE (6,1043)                                                    INPB-332
 1043 FORMAT (8X,'BZ2 CAN BE IN SEARCH, BUT IF BZ2=0., BZ3, BZ4 AND BZ5 INPB-333
     1CAN ALSO  ECIS-929'/8X,'BE IN SEARCH.',51X,'ECIS-930'/72X,'ECIS-93INPB-334
     21'/'FISSION DATA',28X,'FORMAT (7F10.5)',17X,'ECIS-932'/'**********INPB-335
     3**',60X,'ECIS-933'/'IF LO(82)=.TRUE., GO TO ''CARDS READ IN SUBROUINPB-336
     4TINE DEPH''.',16X,'ECIS-934'/'IF LO(85)=.FALSE., GO TO ''GIANT DIPINPB-337
     5OLE RESONANCE DESCRIPTION''.',10X,'ECIS-935'/6X,'1-10   FISS(1,*) INPB-338
     6 TRANSMISSION COEFFICIENT',24X,'ECIS-936'/5X,'11-20   FISS(2,*)  DINPB-339
     7EGREES OF FREEDOM. IF <.5, IT IS REPLACED BY 0.ECIS-937'/'  THERE INPB-340
     8ARE NFISS SUCH CARDS. THE FIRST COEFFICIENT IS FOR THE SMALLEST ECINPB-341
     9IS-938'/'TOTAL J VALUE OF THE SYSTEM AND THE SAME PARITY OF THE GRINPB-342
     AOUND STATE. THEECIS-939'/'SECOND ONE IS FOR THE OPPOSITE PARITY. TINPB-343
     BHE FOLLOWING ONES ARE FOR HIGHERECIS-940'/'J VALUES, WITH THE SAMEINPB-344
     C ORDER FOR PARITIES.',29X,'ECIS-941'/72X,'ECIS-942'/'GIANT DIPOLE INPB-345
     DRESONANCE DESCRIPTION',6X,'FORMAT (7F10.5)',17X,'ECIS-943'/'******INPB-346
     E****************************',38X,'ECIS-944'/'  ONLY IF LO(86)=.TRINPB-347
     FUE., OTHERWISE GO TO ''LEVEL DENSITY FOR CONTINUUM''. ECIS-945'/3XINPB-348
     G,'IF NRD IS NOT 0, GO TO ''GAMMA TRANSMISSION FACTORS''.',17X,'ECIINPB-349
     HS-946'/7X,'DATA TO COMPUTE THE (NEUTRON, GAMMA) CROSS-SECTION WHENINPB-350
     I THE GIANTECIS-947'/3X,'DIPOLE RESONANCE MODEL IS USED (SEE E. LYNINPB-351
     JN, ''THE THEORY OF NEUTRON  ECIS-948'/3X,'RESONANCE REACTIONS'', PINPB-352
     KAGES 321/326 AND A. GILBERT AND A.G.W.',8X,'ECIS-949')            INPB-353
      WRITE (6,1044)                                                    INPB-354
 1044 FORMAT (3X,'CAMERON, CAN. JOUR. OF PHYSICS 43, 1446, 1965, PAGES 1INPB-355
     1475/1476).',5X,'ECIS-950'/6X,'1-10   TGO   SLOW S-WAVE NEUTRON GAMINPB-356
     2MA WIDTHS/SPACING FOR',9X,'ECIS-951'/19X,'NORMALISATION. IF TGO=0,INPB-357
     3 LO(86) IS SET .FALSE.',7X,'ECIS-952'/5X,'11-20   BN',4X,'NEUTRON INPB-358
     4SEPARATION ENERGY.(DEFAULT OPTION 8.).',7X,'ECIS-953'/5X,'21-30   INPB-359
     5FNUG  RADIATIVE DEGREES OF FREEDOM.',24X,'ECIS-954'/19X,'IF LESS TINPB-360
     6HAN 1., IT IS REPLACED BY FNUG=20.',10X,'ECIS-955'/5X,'31-40   EGDINPB-361
     7   ENERGY OF THE GIANT DIPOLE RESONANCE.',16X,'ECIS-956'/19X,'(DEFINPB-362
     8AULT OPTION 163*(N*Z)**2/(N+Z)**(4/3).).',9X,'ECIS-957'/19X,'THE SINPB-363
     9TRONG ABSORPTION MODEL ID USED IF EGD < 0.',6X,'ECIS-958'/19X,'(SIINPB-364
     AMPLE BEHAVIOUR AS E**3 INSTEAD OF RESONANCE',7X,'ECIS-959'/19X,'WIINPB-365
     BTH A FACTOR E**4)',34X,'ECIS-960'/5X,'41-50   GGD   RESONANCE WIDTINPB-366
     CH. (DEFAULT OPTION 5.).',16X,'ECIS-961'/4X,'FOR THE SEARCH, THESE INPB-367
     DQUANTITIES ARE IN AZ FROM AZ(12) TO AZ(16).   ECIS-962'/72X,'ECIS-INPB-368
     E963'/''/'GAMMA TRANSMISSION FACTORS',14X,'FORMAT (7F10.5)',17X,'EINPB-369
     FCIS-964'/'**************************',46X,'ECIS-965'/' ONLY IF LO(INPB-370
     G86)=.TRUE. AND NRD IS NOT 0.',32X,'ECIS-966'/6X,'1-10   GAM(1) FORINPB-371
     H L=0.',44X,'ECIS-967'/5X,'11-20   GAM(2) FOR L=1.',44X,'ECIS-968'/INPB-372
     I5X,'.......................',44X,'ECIS-969'/5X,'61-70   GAM(7) FORINPB-373
     J L=6.',44X,'ECIS-970'/'  UP TO GAM(NRD), EVENTUALLY ON OTHERS CARDINPB-374
     KS.',27X,'ECIS-971'/72X,'ECIS-972')                                INPB-375
      WRITE (6,1045)                                                    INPB-376
 1045 FORMAT ('LEVEL DENSITY OF COMPOUND NUCLEUS',7X,'FORMAT (7F10.5)',1INPB-377
     17X,'ECIS-973'/'*********************************',39X,'ECIS-974'/3INPB-378
     2X,'IF THERE ARE GAMMA TRANSMISSION PARAMETERS COMPUTED WITH THE GIINPB-379
     3ANT   ECIS-975'/'DIPOLE RESONANCE MODEL (LO(86)=.TRUE. AND NRD=0 IINPB-380
     4N ''COMPOUND NUCLEUS',4X,'ECIS-976'/'DATA''),  OR CONTINUA (NCONT INPB-381
     5NOT 0 IN ''COMPOUND NUCLEUS DATA''), OTHERWISEECIS-977'/'GO TO ''CINPB-382
     6ARDS READ IN SUBROUTINE DEPH''.',34X,'ECIS-978'/3X,'FOR THE TOTAL INPB-383
     7RESIDUAL NUCLEUS NEEDED FOR THE GAMMA GIANT RESONANCE, ECIS-979'/'INPB-384
     8FOLLOWED BY THE RESIDUAL NUCLEUS OF EACH CONTINUUM:',21X,'ECIS-980INPB-385
     9'/6X,'1-10   SCN(7,I) Z:   CHARGE OF THE COMPOUND NUCLEUS',15X,'ECINPB-386
     AIS-981'/5X,'11-20   SCN(1,I) SA:  LEVEL DENSITY PARAMETER FOR S-WAINPB-387
     BVE RESONANCE ECIS-982'/27X,'SPACING. (DEFAULT OPTION (.0091*(SHELLINPB-388
     C CORR. ECIS-983'/27X,'-.23*ND)+.143)*NA WHERE NA IS THE TOTAL',6X,INPB-389
     D'ECIS-984'/27X,'NUMBER OF NUCLEONS, ND THE MINIMUM DISTANCE  ECIS-INPB-390
     E985'/27X,'TO A MAGIC NUMBER FOR PROTONS OR NEUTRONS ANDECIS-986'/2INPB-391
     F7X,'SHELL CORRECTIONS ARE GIVEN BY COOK: SEE',5X,'ECIS-987'/27X,'TINPB-392
     GABLES AND REFERENCES IN SUBROUTINE LDEN).   ECIS-988'/5X,'21-30   INPB-393
     HSCN(2,I) UX:  MATCHING ENERGY FOR THE TWO DENSITY FORMULA  ECIS-98INPB-394
     I9'/27X,'SHIFTED BY PAIRING ENERGY. (DEFAULT VALUE',4X,'ECIS-990'/2INPB-395
     J7X,'2.5+150/NA).',33X,'ECIS-991'/5X,'31-40   SCN(3,I) TAU: NUCLEARINPB-396
     K TEMPERATURE. (DEFAULT OPTION',9X,'ECIS-992')                     INPB-397
      WRITE (6,1046)                                                    INPB-398
 1046 FORMAT (27X,'1/TAU=SQRT(SA/UX)-1.5/UX).',19X,'ECIS-993'/5X,'41-50 INPB-399
     1  SCN(4,I) SG:  SPIN CUT OFF PARAMETER. (DEFAULT OPTION',6X,'ECIS-INPB-400
     2994'/27X,'FORMULA (11) OF GILBERT AND CAMERON).',8X,'ECIS-995'/5X,INPB-401
     3'51-60   SCN(5,I) E0:  ENERGY SHIFT. (DEFAULT OPTION FORMULA (28) INPB-402
     4OFECIS-996'/27X,'GILBERT AND CAMERON).',24X,'ECIS-997'/5X,'61-70  INPB-403
     5 SCN(6,I) EX:  MATCHING ENERGY BETWEEN THE TWO DENSITY',6X,'ECIS-9INPB-404
     698'/27X,'FORMULAE. (DEFAULT OPTION UX+PAIRING WITH',4X,'ECIS-999'/INPB-405
     727X,'PAIRING GIVEN BY COOK)',23X,'ECIS1000'/'  NOTE:  THE DIMENSIOINPB-406
     8NS OF THE ARRAY SCN ARE 7 AND NCONS. SCN(J,I)',6X,'ECIS1001'/'  **INPB-407
     9**  CAN BE SEARCHED FOR J=1 TO 6. IF SCN(J,I) IS 0., IT IS REPLACEINPB-408
     AD ECIS1002'/8X,'BY THE DEFAULT OPTION COMPUTED WITH THE SCN(J,K) FINPB-409
     BOR K<I. IF',4X,'ECIS1003'/8X,'SCN(3,I) IS NEGATIVE, IT IS REPLACEDINPB-410
     C BY THE DEFAULT OPTION',6X,'ECIS1004'/8X,'COMPUTED WITH DEFAULT OPINPB-411
     DTIONS FOR SA AND UX. AFTER REPLACEMENT, ECIS1005'/8X,'DENSITY PARAINPB-412
     EMETERS USED, WHICH MUST BE TAKEN INTO ACCOUNT FOR A ECIS1006'/8X,'INPB-413
     FSEARCH OR A CHANGE USING LO(37)=.TRUE. ARE LISTED AT THE END.   ECINPB-414
     GIS1007'/72X,'ECIS1008'/72X,'ECIS1009'/'CARDS READ IN SUBROUTINE DEINPB-415
     HPH',43X,'ECIS1010'/'*****************************',43X,'ECIS1011'/INPB-416
     I72X,'ECIS1012'/'NUMBER OF OBSERVABLES BY CHANNEL',8X,'FORMAT (14I5INPB-417
     J)',19X,'ECIS1013'/'********************************',40X,'ECIS1014INPB-418
     K')                                                                INPB-419
      WRITE (6,1047)                                                    INPB-420
 1047 FORMAT (4X,'(NON-STANDARD OBSERVABLES) ONLY IF LO(94)=.TRUE. AND LINPB-421
     1O(66)=.FALSE.,ECIS1015'/4X,'OTHERWISE GO TO ''RESTRICTED COULOMB CINPB-422
     2ORRECTIONS''.',19X,'ECIS1016'/7X,'1- 5   NUMBER OF OBSERVABLES FORINPB-423
     3 THE ELASTIC SCATTERING.',9X,'ECIS1017'/7X,'6-10   NUMBER OF OBSERINPB-424
     4VABLES FOR THE FIRST EXCITED STATE.',8X,'ECIS1018'/6X,'11-15   NUMINPB-425
     5BER OF OBSERVABLES FOR THE SECOND EXCITED STATE.',7X,'ECIS1019'/6XINPB-426
     6,'16-20   NUMBER OF OBSERVABLES FOR THE THIRD EXCITED STATE.',8X,'INPB-427
     7ECIS1020'/6X,'21-25   ...........',47X,'ECIS1021'/14X,'UP TO THE LINPB-428
     8AST COUPLED CHANNEL (NCOLL VALUES).',12X,'ECIS1022'/72X,'ECIS1023'INPB-429
     9/''/'FOR EACH COUPLED STATE',50X,'ECIS1024'/'********************INPB-430
     A**',50X,'ECIS1025'/72X,'ECIS1026'/'OBSERVABLE IDENTIFICATIONS',14XINPB-431
     B,'FORMAT (14I5)',19X,'ECIS1027'/'**************************',46X,'INPB-432
     CECIS1028'/7X,'1- 5   FIRST OBSERVABLE WHICH MUST BE THE CROSS-SECTINPB-433
     DION (ENTER A ECIS1029'/14X,'BLANK OR 0) .',45X,'ECIS1030'/7X,'6-10INPB-434
     E   SECOND OBSERVABLE.',40X,'ECIS1031'/6X,'11-15   THIRD OBSERVABLEINPB-435
     F.',41X,'ECIS1032'/6X,'16-20   FOURTH OBSERVABLE.',40X,'ECIS1033'/6INPB-436
     GX,'21-25   FIFTH OBSERVABLE.',41X,'ECIS1034'/6X,'26-30   .........INPB-437
     H..',47X,'ECIS1035'/14X,'UP TO THE LAST OBSERVABLE.',32X,'ECIS1036'INPB-438
     I/72X,'ECIS1037'/3X,'STANDARD DESCRIPTION  0   CROSS-SECTION.',29X,INPB-439
     J'ECIS1038'/3X,'********************  1   CROSS-SECTION / RUTHERFORINPB-440
     KD''S CROSS-SECTION.ECIS1039')                                     INPB-441
      WRITE (6,1048)                                                    INPB-442
 1048 FORMAT (25X,'2   VECTOR ANALYSING POWER.',20X,'ECIS1040'/6X,'3',5XINPB-443
     1,'VECTOR POLARISATION.',40X,'ECIS1041'/12X,'(NOTE A RATIO SQRT(2.)INPB-444
     2 WITH IT11 FOR SPIN 1/2 FOR 2 AND 3). ECIS1042'/6X,'4',5X,'T20 .',INPB-445
     355X,'ECIS1043'/6X,'5',5X,'T21 .',55X,'ECIS1044'/6X,'6',5X,'T22 .',INPB-446
     455X,'ECIS1045'/6X,'7',5X,'KYY OR D  DEFINED AS -A(1100 1100)-A(110INPB-447
     50 1-100)',12X,'ECIS1046'/6X,'8',5X,'KXX OR R  DEFINED AS  A(1100 1INPB-448
     6100)-A(1100 1-100)',12X,'ECIS1047'/6X,'9',5X,'KZZ OR A'' DEFINED AINPB-449
     7S  A(1000 1000)',26X,'ECIS1048'/5X,'10',5X,'KXZ OR R'' DEFINED AS INPB-450
     8-SQRT(2.) A(1100 1000)',17X,'ECIS1049'/5X,'11',5X,'KZX OR A  DEFININPB-451
     9ED AS -SQRT(2.) A(1000 1100)',17X,'ECIS1050'/5X,'12',5X,'SPIN-FLIPINPB-452
     A :  (A(0000,0000)+A(1100,1100)+A(1100,1-100))/2',4X,'ECIS1051'/5X,INPB-453
     B'13',5X,'VECTOR ANALYSING POWER OF THE TARGET',24X,'ECIS1052'/10X,INPB-454
     C'(NOTE A RATIO SQRT(2.) WITH IT11 FOR SPIN 1/2 FOR 2, 3 AND 13)ECIINPB-455
     DS1053'/5X,'14',5X,'AYY  DEFINED AS -A(1111 0000)-A(111-1 0000)',17INPB-456
     EX,'ECIS1054'/5X,'15',5X,'AXX  DEFINED AS  A(1111 0000)-A(111-1 000INPB-457
     F0)',17X,'ECIS1055'/5X,'16',5X,'AZZ  DEFINED AS  A(1010 0000)',31X,INPB-458
     G'ECIS1056'/5X,'17',5X,'AXZ  DEFINED AS -SQRT(2.) A(1110 0000)',22XINPB-459
     H,'ECIS1057'/5X,'18',5X,'AZX  DEFINED AS -SQRT(2.) A(1011 0000)',22INPB-460
     IX,'ECIS1058'/5X,'19',5X,'RESERVED FOR A SET OF EXPERIMENTAL DATA WINPB-461
     JHICH ARE REACTION  ECIS1059'/17X,'CROSS-SECTIONS. SEE ''CARDS READINPB-462
     K IN SUBROUTINE LECD''',4X,'ECIS1060')                             INPB-463
      WRITE (6,1049)                                                    INPB-464
 1049 FORMAT (12X,'NOTE THAT 12 AND 19 WERE PREVIOUSLY 7 AND 8.',16X,'ECINPB-465
     1IS1061'/72X,'ECIS1062'/4X,'NON STANDARD DESCRIPTION',4X,'ENTER A NINPB-466
     2EGATIVE VALUE, DIFFERENT FOR   ECIS1063'/4X,'*********************INPB-467
     3***',4X,'DIFFERENT OBSERVABLES. THE DESCRIPTION  ECIS1064'/32X,'WIINPB-468
     4LL BE READ IN SUBROUTINE OBSE.',8X,'ECIS1065'/10X,'CROSS-SECTIONS INPB-469
     5MUST BE BEFORE POLARISATIONS.',18X,'ECIS1066'/72X,'ECIS1067'/'PLOTINPB-470
     6 INDICATIONS',24X,'FORMAT (14I5)',19X,'ECIS1068'/'****************INPB-471
     7',56X,'ECIS1069'/7X,'1- 5   NUMBER OF DECADES IN LOGARITHMIC SCALEINPB-472
     8S FOR CROSS-SECTION.ECIS1070'/7X,'6-10   INDICATION FOR SECOND OBSINPB-473
     9ERVABLE.',25X,'ECIS1071'/6X,'11-15   INDICATION FOR THIRD OBSERVABINPB-474
     ALE.',26X,'ECIS1072'/6X,'16-20   ...................',39X,'ECIS1073INPB-475
     B'/14X,'UP TO THE LAST OBSERVABLE.',32X,'ECIS1074'/6X,'INDICATIONS INPB-476
     CFOR POLARISATIONS ARE ''1'' FOR PLOT AND ''0'' FOR NO PLOTECIS1075INPB-477
     D'/72X,'ECIS1076'/6X,'******  END OF DO-LOOP FOR NUCLEAR STATES ***INPB-478
     E***',18X,'ECIS1077'/72X,'ECIS1078'/'RESTRICTED COULOMB CORRECTIONSINPB-479
     F',10X,'FORMAT (14I5)',19X,'ECIS1079'/'****************************INPB-480
     G**',42X,'ECIS1080'/4X,'IF LO(44) AND LO(46)=.TRUE., OTHERWISE GO TINPB-481
     HO ''CARDS READ IN',9X,'ECIS1081'/'  SUBROUTINE CALX''.  FOR EACH NINPB-482
     IUCLEAR LEVEL:',28X,'ECIS1082'/''/10X,'1- 5   NIV(I,J,3) BETWEEN LINPB-483
     JEVEL I AND LEVEL J FOR J=1.',8X,'ECIS1083'/10X,'6-10   NIV(I,J,3) INPB-484
     KBETWEEN LEVEL I AND LEVEL J FOR J=2.',8X,'ECIS1084')              INPB-485
      WRITE (6,1050)                                                    INPB-486
 1050 FORMAT (9X,'11-15   .........................',30X,'ECIS1085'/17X,INPB-487
     1'ENTER ''1'' FOR COULOMB CORRECTION AND ''0'' FOR NONE.',5X,'ECIS1INPB-488
     2086'/4X,'ONLY VALUES FOR J SMALLER THAN OR EQUAL TO I ARE TAKEN ININPB-489
     3TO ACCOUNT.ECIS1087'/9X,'THERE ARE NCOLL SUCH CARDS.',36X,'ECIS108INPB-490
     48'/72X,'ECIS1089'/72X,'ECIS1090'/'CARDS READ IN SUBROUTINE CALX',4INPB-491
     53X,'ECIS1091'/'*****************************',43X,'ECIS1092'/' ONLINPB-492
     6Y IF LO(31)=.TRUE., OTHERWISE GO TO ''CARDS READ IN SUBROUTINE OBSINPB-493
     7E''.ECIS1093'/72X,'ECIS1094'/'CHI2 CONDITIONS',25X,'FORMAT (4I5,2FINPB-494
     810.5)',13X,'ECIS1095'/'***************',57X,'ECIS1096'/7X,'1- 5   INPB-495
     9NCOLR  NUMBER OF ANGULAR DISTRIBUTIONS. IF SOME OF THEM   ECIS1097INPB-496
     A'/21X,'ARE SUMS ON SEVERAL LEVELS, THEY ACCOUNT FOR THEIR ECIS1098INPB-497
     B'/21X,'NUMBER OF LEVELS IN NCOLR.',25X,'ECIS1099'/7X,'6-10   NREC INPB-498
     C  NUMBER OF PARAMETERS IN SEARCH.',20X,'ECIS1100'/6X,'11-15   NFITINPB-499
     D   NUMBER OF FUNCTIONS KEPT IN THE SEARCH BEYOND THE  ECIS1101'/21INPB-500
     EX,'MINIMUM NUMBER WHICH IS NREC+1 .',19X,'ECIS1102'/6X,'16-20   NEINPB-501
     FSSAI MAXIMUM NUMBER OF EVALUATIONS. (DEFAULT OPTION 100)ECIS1103'/INPB-502
     G21X,'THIS VALUE IS NOT USED WHEN LO(34)=.TRUE..',9X,'ECIS1104'/6X,INPB-503
     H'21-30   ECH',4X,'SEARCH SCALE. (DEFAULT OPTION 20.).',16X,'ECIS11INPB-504
     I05'/21X,'IN THE PRELIMINARY RUNS, VARIABLES ARE CHANGED BY  ECIS11INPB-505
     J06'/21X,'THE PRODUCT OF THIS NUMBER WITH THEIR ACCURACY. IN ECIS11INPB-506
     K07')                                                              INPB-507
      WRITE (6,1051)                                                    INPB-508
 1051 FORMAT (21X,'THE OTHERS RUNS, THE CHANGE OF ANY VARIABLE IS',5X,'EINPB-509
     1CIS1108'/21X,'LIMITED BY TWICE THIS VALUE.',23X,'ECIS1109'/6X,'31-INPB-510
     240   RAP',4X,'RATIO OF INCREASE FOR THE SEARCH SCALE AFTER A RUN EINPB-511
     3CIS1110'/21X,'FOR WHICH THE CHI2 DECREASED. (DEFAULT OPTION 1.)  EINPB-512
     4CIS1111'/21X,'THE VALUE OF ECH IS THE PRODUCT BY RAP OF THE LAST EINPB-513
     5CIS1112'/21X,'MAXIMUM CHANGE OF PARAMETER WHICH GAVE A LOWER CHI2EINPB-514
     6CIS1113'/21X,'THE VALUE 1 LEADS SAFELY TO THE MINIMUM. A VALUE   EINPB-515
     7CIS1114'/21X,'LARGER THAN 1. LEADS QUICKER TOWARDS THE MINIMUM.  EINPB-516
     8CIS1115'/21X,'A VALUE LESS THAN 1. IS REPLACED BY 1.',13X,'ECIS111INPB-517
     96'/72X,'ECIS1117'/72X,'ECIS1118'/'CARDS READ IN SUBROUTINE LECD',4INPB-518
     A3X,'ECIS1119'/'*****************************',43X,'ECIS1120'/' ONLINPB-519
     BY IF NCOLR IS NOT 0, OTHERWISE GO TO ''CARDS READ IN SUBROUTINE OBINPB-520
     CSE''ECIS1121'/'THE ANGULAR DISTRIBUTIONS CAN BE READ IN ANY ORDER.INPB-521
     D',21X,'ECIS1122'/72X,'ECIS1123'/'FOR EACH ANGULAR DISTRIBUTION',43INPB-522
     EX,'ECIS1124'/'*****************************',43X,'ECIS1125'/72X,'EINPB-523
     FCIS1126'/'IDENTIFICATION',26X,'FORMAT (L1,I1,I3,2I5,5X,3F10.5) ECIINPB-524
     GS1127'/'**************',58X,'ECIS1128'/10X,'1   LX LOGICAL. IF LX=INPB-525
     H.TRUE. THE EXPERIMENTAL ERRORS ARE',6X,'ECIS1129'/14X,'PERCENTAGESINPB-526
     I. LX IS SET .FALSE. IF THE OBSERVABLE',10X,'ECIS1130'/14X,'IDENTIFINPB-527
     JICATION IS NOT 0, 1 OR 19.',25X,'ECIS1131'/10X,'2   1 IF THE ANGLEINPB-528
     KS ARE IN THE LABORATORY SYSTEM, 0 OTHERWISE.ECIS1132')            INPB-529
      WRITE (6,1052)                                                    INPB-530
 1052 FORMAT (7X,'3- 5   NT   NUMBER OF ANGLES.',36X,'ECIS1133'/7X,'6-10INPB-531
     1   NUMBER OF THE NUCLEAR STATE.',30X,'ECIS1134'/6X,'11-15   OBSERVINPB-532
     2ABLE IDENTIFICATION. (SEE COMMENTS ON ''OBSERVABLE   ECIS1135'/14XINPB-533
     3,'IDENTIFICATION'' IN ''CARDS READ IN SUBROUTINE DEPH'').',6X,'ECIINPB-534
     4S1136'/6X,'21-30   WEIGHT OF THIS OBSERVABLE IN CHI2. (DEFAULT OPTINPB-535
     5ION 1.)',4X,'ECIS1137'/6X,'31-40   EXPERIMENTAL NORMALISATION OF DINPB-536
     6ATA. (DEFAULT OPTION 1.)   ECIS1138'/6X,'41-50   ERROR ON EXPERIMEINPB-537
     7NTAL NORMALISATION. (IF 0., THE',10X,'ECIS1139'/14X,'NORMALISATIONINPB-538
     8 IS FIXED).',34X,'ECIS1140'/''/16X,'THE EXPERIMENTAL VALUES AND TINPB-539
     9HEIR ERRORS ARE DIVIDED BY ECIS1141'/14X,'THE ''RENORMALISATION PAINPB-540
     ARAMETER''. IF THE NORMALISATION IS  ECIS1142'/14X,'FIXED, THIS PARINPB-541
     BAMETER IS THE ''EXPERIMENTAL NORMALISATION''.ECIS1143'/14X,'IF THEINPB-542
     C NORMALISATION IS NOT FIXED, THE SQUARE OF THE',6X,'ECIS1144'/14X,INPB-543
     D'DIFFERENCE BETWEEN THE ''EXPERIMENTAL NORMALISATION'' AND   ECIS1INPB-544
     E145'/14X,'THIS PARAMETER DIVIDED BY THE ''ERROR ON EXPERIMENTAL',6INPB-545
     FX,'ECIS1146'/14X,'NORMALISATION'' IS ADDED TO THE CHI2 FOR THIS OBINPB-546
     GSERVABLE   ECIS1147'/14X,'FOLLOWING THE DEFINITION OF THE CHI2. THINPB-547
     HE ''CALCULATED',5X,'ECIS1148'/14X,'NORMALISATION'' IS THE VALUE OFINPB-548
     I THE ''RENORMALISATION',7X,'ECIS1149'/14X,'PARAMETER'' WHICH MINIMINPB-549
     JISES THE CHI2. EXPERIMENTAL VALUES  ECIS1150'/14X,'AND ERRORS ARE INPB-550
     KDIVIDED BY IT.',29X,'ECIS1151')                                   INPB-551
      WRITE (6,1053)                                                    INPB-552
 1053 FORMAT (16X,'IF FOR TWO SUCCESSIVE ANGULAR DISTRIBUTIONS, BOTH',7XINPB-553
     1,'ECIS1152'/14X,'CROSS-SECTIONS OR POLARISATIONS, THE ''ERRORS ON'INPB-554
     2,11X,'ECIS1153'/14X,'EXPERIMENTAL NORMALISATIONS'' ARE NON-0 AND TINPB-555
     3HE SAME AND   ECIS1154'/14X,'THE TWO ''EXPERIMENTAL NORMALISATION'INPB-556
     4' ARE IDENTICAL, THE   ECIS1155'/14X,'RENORMALISATION PARAMETERS AINPB-557
     5RE THE SAME FOR THESE TWO',5X,'ECIS1156'/14X,'ANGULAR DISTRIBUTIONINPB-558
     6S AND ONE VALUE IS ADDED TO THE CHI2  ECIS1157'/14X,'FOR EACH ONE.INPB-559
     7',45X,'ECIS1158'/'  NOTE:  IF NT=0, THE ANGULAR DISTRIBUTION DESCRINPB-560
     8IBED HERE IS NOT',8X,'ECIS1159'/'  ****  EXPERIMENTALLY SEPARATED INPB-561
     9FROM THE FOLLOWING ONE. IT CANNOT',6X,'ECIS1160'/8X,'HAPPEN FOR THINPB-562
     AE LAST ANGULAR DISTRIBUTION AND THE OBSERVABLES',4X,'ECIS1161'/8X,INPB-563
     B'MUST BE OF THE SAME KIND (IF NOT, THE PROGRAM STOPS).',11X,'ECIS1INPB-564
     C162'/8X,'ANGULAR DISTRIBUTION IS ATTRIBUTED TO THE LEVEL READ WITHINPB-565
     DOUT',4X,'ECIS1163'/8X,'NT=0 WHICH CAN BE ANY OF THEM.',34X,'ECIS11INPB-566
     E64'/12X,'THE PROGRAM STOPS ALSO IF THE CHANNEL NUMBER IS TOO LARGEINPB-567
     F   ECIS1165'/8X,'OR IF THE OBSERVABLE IDENTIFICATION IS LARGER THAINPB-568
     GN 19.',10X,'ECIS1166'/72X,'ECIS1167'/'DATA CARD FOR EACH ANGLE',16INPB-569
     HX,'FORMAT (6F10.5)',17X,'ECIS1168'/'************************',48X,INPB-570
     I'ECIS1169'/7X,'1-10   ANGLE IN DEGREES.',41X,'ECIS1170'/6X,'11-20 INPB-571
     J  EXPERIMENTAL VALUE.',39X,'ECIS1171'/6X,'21-30   EXPERIMENTAL ERRINPB-572
     KOR.',39X,'ECIS1172')                                              INPB-573
      WRITE (6,1054)                                                    INPB-574
 1054 FORMAT (6X,'31-40   WIDTH OF DETECTOR. (IF NON 0.,THREE CALCULATIOINPB-575
     1NS ARE DONE ECIS1173'/14X,'AT THE EXPERIMENTAL ANGLE AND AT PLUS AINPB-576
     2ND MINUS THIS',6X,'ECIS1174'/14X,'WIDTH, THE CALCULATED VALUE WILLINPB-577
     3 BE THE MEAN VALUE).',6X,'ECIS1175'/6X,'41-50   ANGULAR ERROR. (IFINPB-578
     4 NON 0. AND THE WIDTH OF DETECTOR NON 0.ECIS1176'/14X,'THE EXPERIMINPB-579
     5ENTAL ERROR IS INCREASED TO TAKE INTO ACCOUNT  ECIS1177'/14X,'THE INPB-580
     6SLOPE OF THE CALCULATED CURVE).',23X,'ECIS1178'/'  NOTE:  IF THE OINPB-581
     7BSERVABLE IDENTIFICATION IS 19, THE SET OF EXPERIMENTALECIS1179'/'INPB-582
     8  ****  VALUES ARE TOTAL CROSS-SECTIONS OF WHICH THE CHANNEL IS REINPB-583
     9AD IN ECIS1180'/8X,'FLOATING VALUE INSTEAD OF THE ANGLE. FOR CHANNINPB-584
     AEL 0., IT IS THE  ECIS1181'/8X,'TOTAL REACTION CROSS-SECTION, NOT INPB-585
     BTAKING INTO ACCOUNT THE',7X,'ECIS1182'/8X,'COULOMB SCATTERING. FORINPB-586
     C CHANNEL -1., IT IS THE TOTAL',12X,'ECIS1183'/8X,'CROSS-SECTION ASINPB-587
     D DEFINED FOR NEUTRONS. WEIGHT AND EXPERIMENTAL  ECIS1184'/8X,'NORMINPB-588
     EALISATION ARE TAKEN INTO ACCOUNT. FOR COMPOUND NUCLEUS,',5X,'ECIS1INPB-589
     F185'/8X,'UNCOUPLED LEVELS, CONTINUA, FISSION AND GAMMA CROSS-SECTIINPB-590
     GONS',4X,'ECIS1186'/8X,'FOLLOW THE COUPLED STATES.',38X,'ECIS1187'/INPB-591
     H72X,'ECIS1188'/72X,'ECIS1189'/'CARDS READ IN SUBROUTINE CALX',43X,INPB-592
     I'ECIS1190'/'*****************************',43X,'ECIS1191'/' ONLY IINPB-593
     JF LO(31)=.TRUE., OTHERWISE GO TO ''CARDS READ IN SUBROUTINE OBSE''INPB-594
     K.ECIS1192'/72X,'ECIS1193')                                        INPB-595
      WRITE (6,1055)                                                    INPB-596
 1055 FORMAT ('SEARCH ACCURACIES',23X,'FORMAT (7F10.3)',17X,'ECIS1194'/'INPB-597
     1*****************',55X,'ECIS1195'/' ONLY IF LO(32)=.TRUE. AND NEITINPB-598
     2HER NCOLR AND NREC IS 0, OTHERWISE GO TO ECIS1196'/' ''CARDS READ INPB-599
     3IN SUBROUTINE OBSE''.',39X,'ECIS1197'/''/7X,'1-10   SEARCH ACCURAINPB-600
     4CY FOR THE FIRST VARIABLE.',19X,'ECIS1198'/6X,'11-20   SEARCH ACCUINPB-601
     5RACY FOR THE SECOND VARIABLE.',18X,'ECIS1199'/6X,'21-30   SEARCH AINPB-602
     6CCURACY FOR THE THIRD VARIABLE.',19X,'ECIS1200'/6X,'31-40   ......INPB-603
     7..............',38X,'ECIS1201'/14X,'UP TO NREC VALUES.',40X,'ECIS1INPB-604
     8202'/6X,'THE SEARCH ACCURACIES CANNOT BE 0..THERE IS NO DEFAULT OPINPB-605
     9TION.',4X,'ECIS1203'/'  THEY REFER TO VALUES USED IN THE PROGRAM AINPB-606
     AS REAL RADII OR',13X,'ECIS1204'/'  DEFORMATIONS CHANGED FOR HEAVY INPB-607
     BIONS.',34X,'ECIS1205'/72X,'ECIS1206'/'INDICES OF VARIABLES',20X,'FINPB-608
     CORMAT (14I5)',19X,'ECIS1207'/'********************',52X,'ECIS1208'INPB-609
     D/7X,'1- 5   INDEX OF THE FIRST VARIABLE.',30X,'ECIS1209'/7X,'6-10 INPB-610
     E  INDEX OF THE SECOND VARIABLE.',29X,'ECIS1210'/6X,'11-15   INDEX INPB-611
     FOF THE THIRD VARIABLE.',30X,'ECIS1211'/6X,'16-20   ...............INPB-612
     G.....',38X,'ECIS1212'/14X,'UP TO NREC VALUES.',40X,'ECIS1213'/72X,INPB-613
     H'ECIS1214'/4X,'INDEX SPECIFICATIONS:',47X,'ECIS1215'/4X,'*********INPB-614
     I************',47X,'ECIS1216'/7X,'1-1000   OPTICAL MODEL AND FOLDININPB-615
     JG PARAMETERS VAL(I).(SEE, ABOVE,ECIS1217'/16X,'OPTICAL POTENTIAL PINPB-616
     KARAMETERS). POSSIBLE VALUES 1 TO',5X,'ECIS1218')                  INPB-617
      RETURN                                                            INPB-618
      END                                                               INPB-619
C 01/01/04                                                      ECIS03  INPC-000
      SUBROUTINE INPC                                                   INPC-001
      WRITE (6,1056)                                                    INPC-002
 1056 FORMAT (16X,'34*NPP. PARAMETERS OF EXTERNAL FORM FACTORS IN THE ORINPC-003
     1DERECIS1219'/16X,'DEFINED WHEN THEY ARE READ. ONLY FLOATING VALUESINPC-004
     2 CAN BE ECIS1220'/16X,'IN SEARCH POSSIBLE VALUES 1 TO 1000. ABOVE,INPC-005
     3 ADD 9000.   ECIS1221'/16X,'CHOOSING SEARCH ACCURACIES, NOTE THAT INPC-006
     4REDUCED RADII ARE ECIS1222'/16X,'NOT USED BUT ONLY RADII.',32X,'ECINPC-007
     5IS1223'/4X,'1001-2000   DEFORMATIONS FOR A GIVEN POTENTIAL. POSSIBINPC-008
     6LE VALUES 1001ECIS1224'/16X,'TO 1008.(NOT THE ANGLES OF ASYMMETRICINPC-009
     7 ROTATIONAL MODEL) ECIS1225'/4X,'2001-3000   DEFORMATIONS FOR A GIINPC-010
     8VEN MULTIPOLE. POSSIBLE VALUES 2001ECIS1226'/16X,'TO 2000+NBET WHEINPC-011
     9RE NBET IS THE TOTAL NUMBER OF PHONONS  ECIS1227'/16X,'AND DEFORMAINPC-012
     ATIONS AS LISTED IN THE OUTPUT.',15X,'ECIS1228'/4X,'3001-4000   INDINPC-013
     BIVIDUAL DEFORMATION. (THE UNIT OF THE INDEX IS THE   ECIS1229'/16XINPC-014
     C,'POTENTIAL, THE TENTH IS THE DEFORMATION). TO SIMPLIFY   ECIS1230INPC-015
     D'/16X,'NOTATIONS, POSSIBLE VALUE ARE 3001 TO 3000+10*NBET WITH ECIINPC-016
     ES1231'/16X,'NBET DEFINED ABOVE. VALUES 3XX9 AND 3XX0 ARE EXCLUDED.INPC-017
     F  ECIS1232'/16X,'NOTE THAT DEFORMATION LENGTHS ARE USED IN THE SEAINPC-018
     GRCH IF ECIS1233'/16X,'LO(6)=.TRUE..',43X,'ECIS1234'/4X,'4001-5000 INPC-019
     H  NUCLEAR MODEL PARAMETERS. (IN THE ORDER OF INPUT).',6X,'ECIS1235INPC-020
     I'/4X,'5001-6000   REDUCED NUCLEAR MATRIX ELEMENTS. (ORDER OF INPUTINPC-021
     J IF THEYECIS1236'/16X,'ARE READ ON CARDS, OR ORDER OF COMPUTATION INPC-022
     KAS LISTED).  ECIS1237')                                           INPC-023
      WRITE (6,1057)                                                    INPC-024
 1057 FORMAT (4X,'6001-7000   SPIN-ORBIT PARAMETRISATION, HAUSER-FESHBACINPC-025
     1H CORRECTIONS.ECIS1238'/16X,'AND COMPOUND NUCLEUS PARAMETERS. POSSINPC-026
     2IBLE VALUES ARE:   ECIS1239'/16X,'6001-6006 FOR SPIN-ORBIT PARAMETINPC-027
     3RISATION,',15X,'ECIS1240'/16X,'6007-6011 FOR HAUSER-FESHBACH CORREINPC-028
     4CTIONS,',14X,'ECIS1241'/16X,'6012-6016 FOR GIANT DIPOLE RESONANCE INPC-029
     5PARAMETERS,',8X,'ECIS1242'/16X,'(IN A TEST, 6015 WAS USELESS FOR LINPC-030
     6O(87)=.FALSE., 6014   ECIS1243'/16X,'AND 6015 IF LO(97=.TRUE.)',31INPC-031
     7X,'ECIS1244'/16X,'6017-6016+6*NCONS FOR LEVEL DENSITY PARAMETERS IINPC-032
     8N ORDER ECIS1245'/16X,'GIVEN BY SCN(6,NCONS), SKIPPING THE CHARGE.INPC-033
     9 ONLY VALUES ECIS1246'/16X,'PRINTED AS USED VALUES CAN BE CHANGED.INPC-034
     A',18X,'ECIS1247'/16X,'(IN A TEST, SCN(5,I) WAS USELESS FOR GAMMA, INPC-035
     BSCN(1,I),   ECIS1248'/16X,'SCN(2,I) AND SCN(6,I) FOR A CONTINUUM)'INPC-036
     C,18X,'ECIS1249'/16X,'6016+6*NCONS-6016+6*NCONS+NRD GAMMA TRANSMISSINPC-037
     DION COEFF. ECIS1250'/16X,'6016+6*NCONS+NRD-6016+6*NCONS+NRD+2*NFISINPC-038
     ES FISSION',7X,'ECIS1251'/16X,'TRANSMISSION COEFFICIENTS.',30X,'ECIINPC-039
     FS1252'/4X,'7001-8000   DISPERSION PARAMETER FROM PIP(4,*) TO PIP(1INPC-040
     G5,*) WITHOUT ECIS1253'/16X,'POSSIBILITY TO CHANGE THE DESCRIPTION INPC-041
     HINDUCED BY THE',4X,'ECIS1254'/16X,'INTEGER VALUES IPP(*,1,*), IPP(INPC-042
     I*,2,*) AN ENERGY',9X,'ECIS1255'/16X,'REFERENCE PIP(3,*). POSSIBLE INPC-043
     JVALUES FROM 7001 TO',8X,'ECIS1256'/16X,'7000+12*NPP.',44X,'ECIS125INPC-044
     K7'/'')                                                           INPC-045
      WRITE (6,1058)                                                    INPC-046
 1058 FORMAT (3X,'10001-99999  TO CONTINUE 1-1000 WHEN THERE ARE MORE THINPC-047
     1AN 1000 VALUES ECIS1258'/16X,'WITH EXTERNAL FORM FACTORS. USE THE INPC-048
     2NUMBER OF THE',7X,'ECIS1259'/16X,'LISTING INCREASED BY 9000.',30X,INPC-049
     3'ECIS1260'/'  NOTE:  ANY NEGATIVE NUMBER -K IN THE CARD ABOVE MEANINPC-050
     4S THAT K VARIABLESECIS1261'/'  ****  WILL BE KEPT PROPORTIONAL IN INPC-051
     5THE SEARCH. THIS VALUE IS REPLACED ECIS1262'/8X,'BY -*ADDRESS WHERINPC-052
     6E K FOLLOWED BY K INDICES OF PARAMETERS IS',5X,'ECIS1263'/8X,'STORINPC-053
     7ED',58X,'ECIS1264'/72X,'ECIS1265'/'LINKS BETWEEN VARIABLES',17X,'FINPC-054
     8ORMAT (14I5)',19X,'ECIS1266'/'***********************',49X,'ECIS12INPC-055
     967'/4X,'FOR EVERY NEGATIVE VALUE -K IN THE PRECEDING CARD:',18X,'EINPC-056
     ACIS1268'/7X,'1- 5   INDEX OF THE FIRST VARIABLE.',30X,'ECIS1269'/7INPC-057
     BX,'6-10   INDEX OF THE SECOND VARIABLE.',29X,'ECIS1270'/6X,'11-15 INPC-058
     C  INDEX OF THE THIRD VARIABLE.',30X,'ECIS1271'/6X,'16-20   .......INPC-059
     D...........',40X,'ECIS1272'/14X,'UP TO K INDICES.',42X,'ECIS1273'/INPC-060
     E72X,'ECIS1274'/72X,'ECIS1275'/'CARDS READ IN SUBROUTINE OBSE',43X,INPC-061
     F'ECIS1276'/'*****************************',43X,'ECIS1277'/' ONLY IINPC-062
     GF THERE IS ANY NON STANDARD OBSERVABLE (IDENTIFIED BY A NEGATIVE EINPC-063
     HCIS1278'/' NUMBER), OTHERWISE GO TO ''CARDS READ IN SUBROUTINE REDINPC-064
     IM''.',14X,'ECIS1279'/72X,'ECIS1280'/'FOR EACH NON STANDARD OBSERVAINPC-065
     JBLE',40X,'ECIS1281'/'********************************',40X,'ECIS12INPC-066
     K82'/72X,'ECIS1283')                                               INPC-067
      WRITE (6,1059)                                                    INPC-068
 1059 FORMAT ('DEFINITION AND NAME',21X,'FORMAT (2L1,I1,I2,I5,5A4)',7X,'INPC-069
     1ECIS1284'/'*******************',53X,'ECIS1285'/10X,'1   LT1  ''T''INPC-070
     2 FOR AN OBSERVABLE DEFINED WITH AN AXIS',11X,'ECIS1286'/19X,'PERPEINPC-071
     3NDICULAR TO THE REACTION PLANE. THE DESCRIPTION ECIS1287'/19X,'IS INPC-072
     4CHANGED BY A ROTATION R(PI/2,PI/2,PI/2) TO THE',4X,'ECIS1288'/19X,INPC-073
     5'DEFINITION WITH RESPECT TO THE DIRECTION OF PARTICLE ECIS1289'/19INPC-074
     6X,'(HELICITY). USE A BLANK FOR THE USUAL HELICITY',7X,'ECIS1290'/1INPC-075
     79X,'DESCRIPTION.',41X,'ECIS1291'/10X,'2   LT2  ''T'' IF THE OBSERVINPC-076
     8ABLE IS NOT COMPLETELY DEFINED BY   ECIS1292'/19X,'TENSORS. SEE NOINPC-077
     9TE BELOW ''QUANTUM NUMBERS''.',11X,'ECIS1293'/10X,'3   BLANK OR 0 INPC-078
     AFOR OBSERVABLE IN THE CENTER OF MASS SYSTEM.   ECIS1294'/14X,'1',1INPC-079
     B0X,'FOR OBSERVABLE IN THE LABORATORY SYSTEM.',7X,'ECIS1295'/14X,'2INPC-080
     C',10X,'FOR OBSERVABLE DEFINED WITH RESPECT TO THE',5X,'ECIS1296'/3INPC-081
     D0X,'INCIDENT BEAM.',28X,'ECIS1297'/7X,'4- 5   KX   POSITIVE NUMBERINPC-082
     E, IDENTIFICATION OF THE OBSERVABLE',4X,'ECIS1298'/19X,'READ WITH -INPC-083
     FKX.',39X,'ECIS1299'/7X,'6-10   K',4X,'NUMBER OF COMPONENTS OF THE INPC-084
     GDESCRIPTION.',13X,'ECIS1300'/6X,'11-30   NAME OF THE OBSERVABLE WHINPC-085
     HICH WILL BE USED IN THE OUTPUT.  ECIS1301'/72X,'ECIS1302'/'QUANTUMINPC-086
     I NUMBERS',25X,'FORMAT (8I5)',20X,'ECIS1303'/'***************',57X,INPC-087
     J'ECIS1304'/7X,'1- 5   TENSOR ORDER OF THE INCOMING PARTICLE.',20X,INPC-088
     K'ECIS1305')                                                       INPC-089
      WRITE (6,1060)                                                    INPC-090
 1060 FORMAT (7X,'6-10   RELATED MAGNETIC QUANTUM NUMBER.',26X,'ECIS1306INPC-091
     1'/6X,'11-15   TENSOR ORDER OF THE INITIAL NUCLEUS.',22X,'ECIS1307'INPC-092
     2/6X,'16-20   RELATED MAGNETIC QUANTUM NUMBER.',26X,'ECIS1308'/6X,'INPC-093
     321-25   TENSOR ORDER OF THE OUTGOING PARTICLE.',20X,'ECIS1309'/6X,INPC-094
     4'26-30   RELATED QUANTUM NUMBER.',35X,'ECIS1310'/6X,'31-35   TENSOINPC-095
     5R ORDER OF THE FINAL NUCLEUS.',24X,'ECIS1311'/6X,'36-40   RELATED INPC-096
     6QUANTUM NUMBER.',35X,'ECIS1312'/4X,'THERE ARE K SUCH CARDS.',45X,'INPC-097
     7ECIS1313'/'  NOTE:  IF LT2=.TRUE., SOME COUPLES (TENSOR ORDER, MAGINPC-098
     8NETIC QUANTUM',4X,'ECIS1314'/'  ****  NUMBER) CAN BE REPLACED BY NINPC-099
     9ON TENSOR NOTATION (MI, MF). IN THISECIS1315'/8X,'CASE, USE (MI-S-INPC-100
     A1) AND (MF-S-1) WHERE S IS THE SPIN OF PARTICLE ECIS1316'/8X,'OR TINPC-101
     BARGET.',54X,'ECIS1317'/72X,'ECIS1318'/''/'COEFFICIENTS OF COMPONEINPC-102
     CNTS',14X,'FORMAT (6F10.5)',17X,'ECIS1319'/'***********************INPC-103
     D***',46X,'ECIS1320'/7X,'1-10   COEFFICIENT OF THE FIRST COMPONENT.INPC-104
     E',23X,'ECIS1321'/6X,'11-20   COEFFICIENT OF THE SECOND COMPONENT.'INPC-105
     F,22X,'ECIS1322'/6X,'21-30   ...................',39X,'ECIS1323'/14INPC-106
     GX,'UP TO K VALUES.',43X,'ECIS1324'/72X,'ECIS1325'/'IMAGINARY PART INPC-107
     HOF COEFFICIENTS',10X,'FORMAT (6F10.5)',17X,'ECIS1326'/'***********INPC-108
     I*******************',42X,'ECIS1327'/' ONLY IF LT1=.TRUE. OR LT2=.TINPC-109
     JRUE., OTHERWISE GO TO NEXT OBSERVABLE.',5X,'ECIS1328'/7X,'1-10   IINPC-110
     KMAGINARY PART FOR THE FIRST COMPONENT.',19X,'ECIS1329')           INPC-111
      WRITE (6,1061)                                                    INPC-112
 1061 FORMAT (6X,'11-20   IMAGINARY PART FOR THE SECOND COMPONENT.',18X,INPC-113
     1'ECIS1330'/6X,'21-30   ....................',38X,'ECIS1331'/14X,'UINPC-114
     2P TO K VALUES.',43X,'ECIS1332'/'  NOTE:  THE QUANTUM NUMBERS ARE CINPC-115
     3HECKED AND ERRORS CAN STOP THE',8X,'ECIS1333'/'  ****  PROGRAM (TOINPC-116
     4O LARGE MAGNETIC QUANTUM NUMBERS, NEGATIVE TENSOR',4X,'ECIS1334'/8INPC-117
     5X,'ORDER, ODD SUM OF MAGNETIC QUANTUM NUMBERS FOR OBSERVABLE',7X,'INPC-118
     6ECIS1335'/8X,'DEFINED WITH THE AXIS PERPENDICULAR TO THE REACTION INPC-119
     7PLANE).',5X,'ECIS1336'/9X,'THE OBSERVABLES CAN BE READ IN ANY ORDEINPC-120
     8R.',22X,'ECIS1337'/9X,'POLARISATION OF THE TARGET IS DESCRIBED IN INPC-121
     9THE SYSTEM OF THE   ECIS1338'/8X,'PARTICLE.',55X,'ECIS1339'/72X,'EINPC-122
     ACIS1340'/72X,'ECIS1341'/'CARDS READ IN SUBROUTINE REDM',43X,'ECIS1INPC-123
     B342'/'******************************',42X,'ECIS1343'/6X,'IF LO(7)=INPC-124
     C.TRUE. OR LO(15)=.TRUE.. OTHERWISE GO TO ''CARDS READ IN  ECIS1344INPC-125
     D'/3X,'SUBROUTINE EVAL''.',52X,'ECIS1345'/72X,'ECIS1346'/6X,'IN THEINPC-126
     E SUBROUTINE REDM, THERE IS THE FOLLOWING DO LOOP:',11X,'ECIS1347'/INPC-127
     F10X,'DO 16 I1=1,NCOLL',46X,'ECIS1348'/10X,'DO 15 I2=I1,NCOLL',45X,INPC-128
     G'ECIS1349'/10X,'.........',53X,'ECIS1350'/7X,'15 CONTINUE',54X,'ECINPC-129
     HIS1351'/7X,'16 CONTINUE',54X,'ECIS1352'/6X,'INSIDE WHICH MUST BE RINPC-130
     IEAD:',40X,'ECIS1353'/72X,'ECIS1354'/'LOOP CONTROL AND NUMBER CARD'INPC-131
     J,12X,'FORMAT (3I5)',20X,'ECIS1355'/'****************************',INPC-132
     K44X,'ECIS1356')                                                   INPC-133
      WRITE (6,1062)                                                    INPC-134
 1062 FORMAT (7X,'1- 5   J1 WHICH MUST BE EQUAL TO I1. (IF NOT THE RUN IINPC-135
     1S STOPPED).ECIS1357'/7X,'6-10   J2 WHICH MUST BE EQUAL TO I2. (IF INPC-136
     2NOT THE RUN IS STOPPED).ECIS1358'/6X,'11-15   K  NUMBER OF REDUCEDINPC-137
     3 NUCLEAR MATRIX ELEMENTS.',13X,'ECIS1359'/72X,'ECIS1360'/'REDUCED INPC-138
     4NUCLEAR MATRIX ELEMENTS',9X,'FORMAT (4I5,F20.12)',13X,'ECIS1361'/'INPC-139
     5*******************************',41X,'ECIS1362'/'IF K IS NOT 0:',5INPC-140
     68X,'ECIS1363'/7X,'1- 5   FORM FACTOR IDENTIFICATION.',31X,'ECIS136INPC-141
     74'/7X,'6-10   MULTIPOLARITY. (IF TRIANGULAR RELATION  OR PARITY ISINPC-142
     8',6X,'ECIS1365'/18X,'TRANSGRESSED THE RUN IS STOPPED). ENTER L FORINPC-143
     9 A',7X,'ECIS1366'/18X,'MAGNETIC MULTIPOLE TRANSITION BM(L-1).',16XINPC-144
     A,'ECIS1367'/6X,'11-15   2*S WHERE S IS THE TRANSFER OF SPIN. S CANINPC-145
     B BE NOT 0 EVEN  ECIS1368'/18X,'IF LO(7)=.FALSE. (IF LO(7)=.TRUE. TINPC-146
     CHE RUN IS STOPPED  ECIS1369'/18X,'WHEN TRIANGULAR RELATION IS NOT INPC-147
     DFULFILLED).',11X,'ECIS1370'/14X,'INDICATION FOR EXISTENCE OF MAGNEINPC-148
     ETIC MULTIPOLE COULOMB',4X,'ECIS1371'/18X,'FORM FACTOR FOR THE TARGINPC-149
     FET, WITH S=0: ENTER ''-1''.',5X,'ECIS1372'/18X,'THIS FORM FACTOR IINPC-150
     GNCLUDES NO CENTRAL AND NO',11X,'ECIS1373'/18X,'SPIN-ORBIT CONTRIBUINPC-151
     HTION.',30X,'ECIS1374'/6X,'16-20   2*J WHERE J IS THE TRANSFER OF TINPC-152
     IOTAL SPIN IF THE VALUE',4X,'ECIS1375'/18X,'GIVEN FOR 2*S IS NOT ''INPC-153
     J0'' OR ''-1''. IN THIS CASE THE',4X,'ECIS1376'/18X,'CALCULATION ISINPC-154
     K STOPPED IF THERE IS NOT A TRIANGULAR   ECIS1377')                INPC-155
      WRITE (6,1063)                                                    INPC-156
 1063 FORMAT (18X,'RELATION BETWEEN L, S AND J.',26X,'ECIS1378'/''/14X,INPC-157
     1'INDICATION FOR EXISTENCE OF AN ASSOCIATED SPIN-ORBIT FORM ECIS137INPC-158
     29'/18X,'FACTOR WHEN 2*S IS ''0'': ENTER ''1'' IF THERE IS ONE,',4XINPC-159
     3,'ECIS1380'/18X,'''0'' OR A BLANK IF THERE IS NONE.',22X,'ECIS1381INPC-160
     4'/6X,'21-40   VALUE. THE RATIO BETWEEN A MAGNETIC MULTIPOLE COULOMINPC-161
     5B',5X,'ECIS1382'/18X,'EXCITATION BM(L-1) AND AN ELECTRIC ONE BE(L)INPC-162
     6 IS',7X,'ECIS1383'/18X,'SQRT(BM(L-1)/BE(L)) (SQRT(.01106*BM(L-1)/BINPC-163
     7E(L)) IF',4X,'ECIS1384'/18X,'BM(L-1) IS EXPRESSED IN NUCLEAR MAGNEINPC-164
     8TONS SQUARES.',4X,'ECIS1385'/8X,'THERE ARE K SUCH CARDS.',41X,'ECIINPC-165
     9S1386'/72X,'ECIS1387'/4X,'FORM FACTOR IDENTIFICATION',42X,'ECIS138INPC-166
     A8'/4X,'**************************',42X,'ECIS1389'/6X,'FOR ANHARMONINPC-167
     BIC VIBRATIONAL MODEL: THE ORDER OF DERIVATIVE.',8X,'ECIS1390'/13X,INPC-168
     C'(FROM 0 TO 3).',45X,'ECIS1391'/6X,'FOR HARMONIC VIBRATIONAL MODELINPC-169
     D:',35X,'ECIS1392'/13X,'FIRST ORDER:  K1, NUMBER OF THE PHONON IS OINPC-170
     ERDER OF INPUT.  ECIS1393'/13X,'SECOND ORDER: K1+K2*(NBT1+1)  WHEREINPC-171
     F K1 AND K2 ARE THE',6X,'ECIS1394'/17X,'NUMBER OF THE PHONONS IN THINPC-172
     GE ORDER OF INPUT, WITH K2   ECIS1395'/17X,'LARGER THAN K1 AND NBT1INPC-173
     H THE TOTAL NUMBER OF PHONONS.   ECIS1396'/72X,'ECIS1397'/6X,'FOR SINPC-174
     IYMMETRIC ROTATIONAL MODEL: 1+L WHERE L IS THE MULTIPOLARITY  ECIS1INPC-175
     J398'/13X,'MULTIPLIED BY 1000 PLUS THE IDENTIFICATION OF THE',10X,'INPC-176
     KECIS1399')                                                        INPC-177
      WRITE (6,1064)                                                    INPC-178
 1064 FORMAT (13X,'VIBRATIONAL BAND AS IN HARMONIC VIBRATIONAL MODEL.',9INPC-179
     1X,'ECIS1400'/13X,'A L=0 OR L=1 VIBRATION TERM GENERATE A MONOPOLE INPC-180
     2OR DIPOLE  ECIS1401'/13X,'CORRECTION TERM.',43X,'ECIS1402'/6X,'FORINPC-181
     3 ASYMMETRIC ROTATIONAL MODEL: DEFINED AS 1000* THE ''ORDER OF   ECINPC-182
     4IS1403'/13X,'DEFORMATION''. (SEE ''DEFORMATIONS OF ROTATIONAL MODEINPC-183
     5LS'').   ECIS1404'/72X,'ECIS1405'/6X,'FOR EXTERNAL FORM FACTOR MODINPC-184
     6EL: IF THE FORM FACTOR IDENTIFICATION ECIS1406'/13X,'IS BLANK OR ZINPC-185
     7ERO, AN IDENTIFICATION IS DEFINED IN SEQUENCE ECIS1407'/13X,'A NEGINPC-186
     8ATIVE VALUE INDICATES THAT THERE IS A CORRECTION TERM ECIS1408'/13INPC-187
     9X,'TO BE ADDED IN SUCH A WAY THAT THE INTEGRAL OF THE SUM WITHECISINPC-188
     A1409'/13X,'R**(L+2) VANISHES (L BEING THE ANGULAR MOMENTUM RELATEDINPC-189
     B TO ECIS1410'/13X,'THIS FORM FACTOR). IF THE FORM FACTOR IDENTIFICINPC-190
     CATION IS NONECIS1411'/13X,'ZERO, ITS ABSOLUTE VALUE MUST BE IN SEQINPC-191
     DUENCE OR REFER TO A ECIS1412'/13X,'FORM FACTOR ALREADY DEFINED WITINPC-192
     EH THE SAME SIGN.',12X,'ECIS1413'/72X,'ECIS1414'/'  NOTE ON REDUCEDINPC-193
     F MATRIX ELEMENTS:  THE SPIN ANGULAR DESCRIPTION FOR A  ECIS1415'/'INPC-194
     G  ********************************  PARTIAL WAVE WITH TOTAL SPIN JINPC-195
     HJ AND ECIS1416'/'  WITH QUANTUM NUMBERS L1 AND J1 FOR THE PARTICLEINPC-196
     I, I1 FOR THE TARGET IS ECIS1417'/'  ((I**L1*Y(L1) , S1)J1 ,I1)JJ. INPC-197
     JTHE INTERACTION FOR THE TRANSFER OF',5X,'ECIS1418')               INPC-198
      WRITE (6,1065)                                                    INPC-199
 1065 FORMAT ('  ANGULAR MOMENTUM L, OF SPIN S AND OF TOTAL SPIN J, IS TINPC-200
     1HE SCALAR',6X,'ECIS1419'/'  PRODUCT OF A TENSOR OPERATOR Q(J)NUCLEINPC-201
     2AR FOR THE TARGET BY THE TENSOR ECIS1420'/'  PRODUCT OF (I**L*Y(L)INPC-202
     3 , Q(S)PAR)J FOR THE PARTICLE.',19X,'ECIS1421'/4X,'(((L2,S2)J2,I2)INPC-203
     4JJ|(Q(L),Q(S))J.Q(J)|((L1,S1)J1,I1)JJ) =',13X,'ECIS1422'/'  (-)**(INPC-204
     5JJ+I2+J1+(L1+L2+L)/2)) * C9J(L2,L1,L,S2,S1,S,J2,J1,J) *',9X,'ECIS1INPC-205
     6423'/'  C6J(J2,J,J1,I1,JJ,I2) * C3J(L1,L,L2,0,0,0) * SQRT((2J+1)*(INPC-206
     72L+1)*',6X,'ECIS1424'/'  (2S+1)(2L1+1)*(2L2+1)*(2J1+1)*(2J2+1)) /CINPC-207
     8OMPUTED IN SUBROUTINE QUAN/  ECIS1425'/'  * (S2||Q(S)||S1)/(2S+1) INPC-208
     9* (I2||Q(J)||I1) * (4*PI)**(-1/2) /WHICH IS   ECIS1426'/'  THE REDINPC-209
     AUCED NUCLEAR MATRIX ELEMENT READ HERE, EXCEPT FOR THE SQUARE   ECIINPC-210
     BS1427'/'  ROOT WHICH IS INCLUDED IN FORM FACTORS/.',30X,'ECIS1428'INPC-211
     C/72X,'ECIS1429'/4X,'THIS MATRIX ELEMENT IS REAL AND SYMMETRIC WHENINPC-212
     D THE ''REDUCED NUCLEAR ECIS1430'/'  MATRIX ELEMENT'' IS SUCH THAT INPC-213
     E (S2,I2 || Q(S) Q(J) ||S1,I1) =',10X,'ECIS1431'/'  (-)**(I2+S2-I1-INPC-214
     FS1+S+J) * (S1,I1 || Q(S) Q(J) ||S2,I2). IN MACROSCOPIC ECIS1432'/'INPC-215
     G  MODELS, S=0 AND THE PHASE BECOMES (-)**(I2-I1)*(PRODUCT OF PARITINPC-216
     HIES). ECIS1433'/4X,'A FACTOR I**(-L) MUST BE TAKEN INTO ACCOUNT ININPC-217
     I THE DEFINITION OF',4X,'ECIS1434'/'  Q(J)NUCLEAR AND A PHASE I INTINPC-218
     JRODUCED FOR NEGATIVE PARITY STATES.',6X,'ECIS1435')               INPC-219
      WRITE (6,1066)                                                    INPC-220
 1066 FORMAT (4X,'WHEN S=0, (S2|| ||S1) = SQRT(2*S1+1) IS COMPUTED IN SUINPC-221
     1BROUTINE QUAN ECIS1436'/4X,'THE FACTOR (2S+1) INTRODUCED IN QUAN TINPC-222
     2O USE THE SAME REDUCED MATRIX ECIS1437'/'  ELEMENT WHEN TARGET ANDINPC-223
     3 PARTICLE ARE EXCHANGED.',23X,'ECIS1438'/''/4X,'FOR A MAGNETIC MUINPC-224
     4LTIPOLE COULOMB TRANSITION BM(L-1), THE FORM FACTORECIS1439'/'  ISINPC-225
     5 THE ONE OF AN ELECTRIC MULTIPOLE TRANSITION BE(L) DIVIDED BY',7X,INPC-226
     6'ECIS1440'/'  MR(M*C/HBAR)**2, WHERE M AND MR AND MP ARE ATOMIC ANINPC-227
     7D REDUCED MASSES  ECIS1441'/'  RESPECTIVELY.',57X,'ECIS1442'/72X,'INPC-228
     8ECIS1443'/72X,'ECIS1444'/'CARDS READ IN SUBROUTINE EXTP',43X,'ECISINPC-229
     91445'/'*****************************',43X,'ECIS1446'/'  IF (LO(7)=INPC-230
     A.TRUE., OTHERWISE GO TO ''CARDS READ IN SUBROUTINE EVAL''.',4X,'ECINPC-231
     BIS1447'/72X,'ECIS1448'/'IDENTIFICATION',26X,'FORMAT (12I5)',19X,'EINPC-232
     CCIS1449'/'**************',58X,'ECIS1450'/7X,'1- 5   L1',4X,'LEVEL INPC-233
     DI.',44X,'ECIS1451'/7X,'6-10   L2',4X,'LEVEL IP.',43X,'ECIS1452'/6XINPC-234
     E,'11-15   ML',4X,'SEQUENCE NUMBER OF THE FORM FACTOR IN THE TABLE INPC-235
     FOF  ECIS1453'/20X,'REDUCED NUCLEAR MATRIX ELEMENTS BETWEEN LEVEL IINPC-236
     G AND ECIS1454'/20X,'LEVEL IP. IT MUST BE 0 FOR POTENTIALS. USE THEINPC-237
     H',6X,'ECIS1455'/20X,'VALUE -ML TO ENTER THE CORRECTION TERM TO THEINPC-238
     I FORM  ECIS1456'/20X,'FACTOR READ WITH ML.',32X,'ECIS1457'/6X,'16-INPC-239
     J20   ITYP =  1 REAL VOLUME OR SCALAR POTENTIAL',17X,'ECIS1458'/22XINPC-240
     K,'2 IMAGINARY VOLUME OR SCALAR POTENTIAL',12X,'ECIS1459')         INPC-241
      WRITE (6,1067)                                                    INPC-242
 1067 FORMAT (22X,'3 REAL SURFACE OR VECTOR POTENTIAL',16X,'ECIS1460'/22INPC-243
     1X,'4 IMAGINARY SURFACE OR VECTOR POTENTIAL',11X,'ECIS1461'/22X,'5 INPC-244
     2REAL SPIN-ORBIT OR TENSOR POTENTIAL',13X,'ECIS1462'/22X,'6 IMAGINAINPC-245
     3RY SPIN-ORBIT OR TENSOR POTENTIAL',8X,'ECIS1463'/22X,'7 COULOMB POINPC-246
     4TENTIAL',31X,'ECIS1464'/22X,'8 COULOMB SPIN-ORBIT POTENTIAL',20X,'INPC-247
     5ECIS1465'/6X,'21-25   L1X   NON POSITIVE OR L1 OF THE FORM FACTOR INPC-248
     6TO BE COPIED  ECIS1466'/20X,'INTO THE NEW ONE.',35X,'ECIS1467'/6X,INPC-249
     7'26-30   L2X   L2 OF THE FORM FACTOR TO BE COPIED IF L1X IS NOT',4INPC-250
     8X,'ECIS1468'/20X,'POSITIVE.',43X,'ECIS1469'/6X,'31-35   MLX   SAMEINPC-251
     9 FOR ML IF L1X IS NOT POSITIVE.',17X,'ECIS1470'/6X,'36-40   ITYPX INPC-252
     ASAME FOR ITYP IF L1X IS NOT POSITIVE, MUST BE EQUAL ECIS1471'/20X,INPC-253
     B'TO ITYP.',44X,'ECIS1472'/20X,'NEGATIVE NUMBER FOR STANDARD FORM FINPC-254
     CACTORS WITH NON  ECIS1473'/20X,'POSITIVE VALUE OF L1X IN COLUMNS 2INPC-255
     D1-30:',13X,'ECIS1474'/24X,'-1  WOODS-SAXON POTENTIAL.',22X,'ECIS14INPC-256
     E75'/24X,'-2  FIRST DERIVATIVE OF WOODS-SAXON POTENTIAL.  ECIS1476'INPC-257
     F/24X,'-3  SECOND DERIVATIVE OF WOODS-SAXON POTENTIAL. ECIS1477'/24INPC-258
     GX,'-4  THIRD DERIVATIVE OF WOODS-SAXON POTENTIAL.  ECIS1478'/12X,'INPC-259
     H(THE N TH DERIVATIVE IS ALWAYS DIVIDED BY FACT(N)*SQRT(4*PI)ECIS14INPC-260
     I79'/17X,'AND MULTIPLIED BY R**N ONLY IF LO(6)=.FALSE.)',10X,'ECIS1INPC-261
     J480'/24X,'-5  DEFORMED WOODS-SAXON POTENTIAL.',13X,'ECIS1481'/24X,INPC-262
     K'-6  DERIVATIVE OF DEFORMED WOODS-SAXON POTENTIALECIS1482')       INPC-263
      WRITE (6,1068)                                                    INPC-264
 1068 FORMAT (24X,'-7  LAGUERRE POLYNOMIAL.',24X,'ECIS1483'/24X,'-8  SOLINPC-265
     1UTION IN REAL WOODS-SAXON POTENTIAL.',5X,'ECIS1484'/24X,'-9  BESSEINPC-266
     2L EXPANSION.',27X,'ECIS1485'/24X,'-10 EXPANSION WITH LAGUERRE POLYINPC-267
     3NOMIALS.',8X,'ECIS1486'/20X,'(SEE BELOW ''SPECIAL MEANING OF L1X, INPC-268
     4L2X AND MLX ..'')ECIS1487'/6X,'41-45   NST   CHANNEL OF WHICH THE INPC-269
     5STEP SIZE IS USED (DEFAULT',5X,'ECIS1488'/20X,'VALUE: THE CHANNEL INPC-270
     6WHICH USES IT FOR A CENTRAL',6X,'ECIS1489'/20X,'POTENTIAL, 1 FOR AINPC-271
     7 TRANSITION POTENTIAL). IF NST IS ECIS1490'/20X,'NEGATIVE FOR A STINPC-272
     8ANDARD FORM FACTOR WITH ITYPX=-1 TOECIS1491'/20X,'ITYPX=-6, USE OFINPC-273
     9 A REDUCED RADIUS, TAKING INTO',6X,'ECIS1492'/20X,'ACCOUNT LO(16) INPC-274
     A(HEAVY-ION DEFINITION) AND LO(6)',5X,'ECIS1493'/20X,'(USE OF DEFORINPC-275
     BMATION LENGTHS).',23X,'ECIS1494'/6X,'46-50   NFOLD 0 FOR NO FOLDININPC-276
     CG OR ADDRESS OF FOLDING PARAMETERS   ECIS1495'/20X,'IN THEIR LIST INPC-277
     DREAD BELOW. NFOLD CAN BE DIFFERENT FORECIS1496'/''/20X,'A COPIED INPC-278
     EFORM FACTOR AND ALLOWS THE FOLDING WITH A  ECIS1497'/20X,'DIFFERENINPC-279
     FT MULTIPOLARITY. IT CAN BE USED WITH A',6X,'ECIS1498'/20X,'FORM FAINPC-280
     GCTOR GIVEN BY POINTS.',24X,'ECIS1499'/6X,'51-55   NINT  IF NOT 0, INPC-281
     HTHE STRENGTH IS THE INTEGRAL OF THIS FORM ECIS1500'/20X,'FACTOR WIINPC-282
     ITH R**(L+2) WHERE L IS THE RELEVANT ANGULARECIS1501'/20X,'MOMENTUMINPC-283
     J. WHEN NINT, IS A POSITIVE NUMBER, THE',6X,'ECIS1502'/20X,'INTEGRAINPC-284
     KL WITH R**(L+1) HAS TO BE GIVEN; WITH A',6X,'ECIS1503')           INPC-285
      WRITE (6,1069)                                                    INPC-286
 1069 FORMAT (20X,'NEGATIVE INTEGER, THE USUAL STRENGTH HAS TO BE GIVENEINPC-287
     1CIS1504'/20X,'AND IS REPLACED BY THIS INTEGRAL AT ITS FIRST',7X,'EINPC-288
     2CIS1505'/20X,'CALCULATION. FOR SPIN-ORBIT POTENTIALS, IT IS THE   INPC-289
     3ECIS1506'/20X,'INTEGRAL OF THE FORM FACTOR WITHOUT DERIVATION. THIINPC-290
     4SECIS1507'/20X,'STRENGTH IS OF THE SAME SIGN AS THE DEPTH OF THE',INPC-291
     54X,'ECIS1508'/20X,'STANDARD DESCRIPTION. FOR COULOMB POTENTIALS, TINPC-292
     6HIS  ECIS1509'/20X,'STRENGTH IS THE LAST VALUE MULTIPLIED BY',12X,INPC-293
     7'ECIS1510'/20X,'(2*L+1)*R**(L+1)/1.43998 . IF NST IS NEGATIVE FOR INPC-294
     8A ECIS1511'/20X,'FORM FACTOR COPIED, INPUT OF A MULTIPLICATION FACINPC-295
     9TORECIS1512'/20X,'IN NEXT CARD.',39X,'ECIS1513'/72X,'ECIS1514'/'MEINPC-296
     AANING OF L1X, L2X AND MLX FOR NEGATIVE VALUES OF ITYPX (COLUMNS 36INPC-297
     B-40)ECIS1515'/'***************************************************INPC-298
     C*********************ECIS1516'/6X,'21-25   L1X   -L1X IS THE MAGNEINPC-299
     DTIC QUANTUM NUMBER OF THE VIBRATIONECIS1517'/20X,'WHEN ITYPX=-6.',INPC-300
     E38X,'ECIS1518'/20X,'-L1X IS THE NUMBER OF NODES WHEN ITYPX=-7 OR -INPC-301
     F8',5X,'ECIS1519'/20X,'(USED ONLY WHEN MLX=0 OR MLX=1).',20X,'ECIS1INPC-302
     G520'/20X,'-L1X IS THE ORDER OF DERIVATION OF BESSEL FUNCTIONS ECISINPC-303
     H1521'/20X,'OR LAGUERRE POLYNOMIALS WHEN ITYPX=-9 OR -10.',7X,'ECISINPC-304
     I1522'/6X,'26-30   L2X   NUMBER OF DEFORMATIONS WHEN ITYPX=-5 OR -6INPC-305
     J.',9X,'ECIS1523'/20X,'A DIVISION FACTOR FOR THE STEPS IN COMPUTINGINPC-306
     K BOUND  ECIS1524')                                                INPC-307
      WRITE (6,1070)                                                    INPC-308
 1070 FORMAT (20X,'FUNCTION (DEFAULT VALUE 4) WHEN ITYPX=-8.',11X,'ECIS1INPC-309
     1525'/20X,'NUMBER OF BESSEL FUNCTIONS OR LAGUERRE POLYNOMIALS  ECISINPC-310
     21526'/20X,'WHEN ITYPX=-9 OR -10.',31X,'ECIS1527'/6X,'31-35   MLX  INPC-311
     3 ANGULAR MOMENTUM OF THE VIBRATION WHEN ITYPX=-6.',4X,'ECIS1528'/2INPC-312
     40X,'NUMBER OF BOUND FUNCTIONS WHEN ITYPX=-7 OR -8:',6X,'ECIS1529'/INPC-313
     520X,'=0 OR 1 FOR ONE FUNCTION WITH THE QUANTUM NUMBERS OFECIS1530'INPC-314
     6/31X,'THE TRANSITION,',26X,'ECIS1531'/20X,'=2 FOR TWO FUNCTIONS WIINPC-315
     7TH THE SAME ITYPX,',11X,'ECIS1532'/20X,'=3 WHEN ITYPX=-8 FOR A LAGINPC-316
     8UERRE POLYNOMIAL FOR THE  ECIS1533'/31X,'SECOND FUNCTION.',25X,'ECINPC-317
     9IS1534'/20X,'L-VALUE OF BESSEL FUNCTIONS OR LAGUERRE POLYNOMIALS EINPC-318
     ACIS1535'/20X,'WHEN ITYPX=-9 OR -10 (DEFAULT OPTION: ANGULAR',7X,'EINPC-319
     BCIS1536'/20X,'MOMENTUM OF THE FORM FACTOR, ENTER A NEGATIVE VALUE INPC-320
     CECIS1537'/20X,'TO USE 0).',42X,'ECIS1538'/'  ERRORS IN THIS CARD SINPC-321
     DTOP THE PROGRAM.',33X,'ECIS1539'/72X,'ECIS1540'/'  NOTE:  IF THEREINPC-322
     E IS NO SPIN FOR THE PARTICLE IN ALL THE CHANNELS, THE  ECIS1541'/'INPC-323
     F  ****  SPIN-ORBIT POTENTIALS (ITYP = 5 , 6 AND 8) ARE NOT READ, BINPC-324
     GUT',4X,'ECIS1542'/8X,'THEY ARE REQUIRED AS SOON AS THERE IS AT LEAINPC-325
     HST A NON SPIN-0',5X,'ECIS1543'/8X,'PARTICLE AT LEAST FOR ONE LEVELINPC-326
     I. FOR THE TRANSITIONS WITH A',5X,'ECIS1544'/8X,'TRANSFER OF SPIN SINPC-327
     J WHICH IS NOT ZERO THERE ARE NO SPIN-ORBIT',4X,'ECIS1545')        INPC-328
      WRITE (6,1071)                                                    INPC-329
 1071 FORMAT (8X,'POTENTIALS (NO TENSOR TERM IN DIRAC FORMALISM). THERE INPC-330
     1IS A',6X,'ECIS1546'/8X,'COULOMB POTENTIAL FOR INTEGRAL SPIN TRANSFINPC-331
     2ER EVEN FOR L=0.',6X,'ECIS1547'/9X,'VOLUME AND SURFACE POTENTIALS INPC-332
     3ARE READ SEPARATELY EXCEPT FOR   ECIS1548'/8X,'ITYPX=-7 AND -8. ININPC-333
     4 THE DIRAC FORMALISM ITYPX=-7 AND ITYPX=-8   ECIS1549'/8X,'CANNOT INPC-334
     5BE USED. FOR MAGNETIC COULOMB INTERACTION, ONLY THE',6X,'ECIS1550'INPC-335
     6/8X,'COULOMB POTENTIAL IS READ. THE FORM FACTORS WITH ITYPX=-5 TO INPC-336
     7-9 ECIS1551'/8X,'CAN BE COPIED ONLY IF THEY INVOLVE THE SAME MULTIINPC-337
     8POLARITY. THEREECIS1552'/8X,'IS NO LIMITATION FOR ITYPX=-7 AND -8 INPC-338
     9IF THEY INVOLVE TWO BOUND  ECIS1553'/8X,'FUNCTIONS. THE COPIED FORINPC-339
     AM FACTORS CAN BE FOLDED DIFFERENTLY.   ECIS1554'/72X,'ECIS1555'/'INPC-340
     B'/' ALLOWED VALUES OF ITYPX FOR STANDARD POTENTIALS',24X,'ECIS1556INPC-341
     C'/' ***********************************************',24X,'ECIS1557INPC-342
     D'/' *** ML = 0 ******',54X,'ECIS1558'/' ITYPX =',4X,'-1',4X,'-2',4INPC-343
     EX,'-3',4X,'-4',4X,'-5',4X,'-6',4X,'-7',4X,'-8  -9,-10',8X,'ECIS155INPC-344
     F9'/' ITYP = 1   YES   NO',4X,'NO',4X,'NO',4X,'YES   NO',4X,'NO',4XINPC-345
     G,'NO   YES',10X,'ECIS1560'/' ITYP = 2   YES   NO',4X,'NO',4X,'NO',INPC-346
     H4X,'YES   NO',4X,'NO',4X,'NO   YES',10X,'ECIS1561'/' ITYP = 3   YEINPC-347
     IS   NO',4X,'NO',4X,'NO',4X,'YES   NO',4X,'NO',4X,'NO   YES',10X,'EINPC-348
     JCIS1562'/' ITYP = 4   YES   NO',4X,'NO',4X,'NO',4X,'YES   NO',4X,'INPC-349
     KNO',4X,'NO   YES',10X,'ECIS1563')                                 INPC-350
      WRITE (6,1072)                                                    INPC-351
 1072 FORMAT (' ITYP = 5   YES   NO',4X,'NO',4X,'NO',4X,'YES   NO',4X,'NINPC-352
     1O',4X,'NO   YES',10X,'ECIS1564'/' ITYP = 6   YES   NO',4X,'NO',4X,INPC-353
     2'NO',4X,'YES   NO',4X,'NO',4X,'NO   YES',10X,'ECIS1565'/' ITYP = 7INPC-354
     3   YES   NO',4X,'NO',4X,'NO',4X,'YES   NO',4X,'NO',4X,'NO   YES',1INPC-355
     40X,'ECIS1566'/' ITYP = 8   YES   NO',4X,'NO',4X,'NO',4X,'YES   NO'INPC-356
     5,4X,'NO',4X,'NO   YES',10X,'ECIS1567'/' **** ML IS NOT 0 ****',50XINPC-357
     6,'ECIS1568'/' ITYPX =',4X,'-1',4X,'-2',4X,'-3',4X,'-4',4X,'-5',4X,INPC-358
     7'-6',4X,'-7',4X,'-8  -9,-10',8X,'ECIS1569'/' ITYP = 1   YES   YES INPC-359
     8  YES   YES   YES   YES   YES   YES  YES',10X,'ECIS1570'/' ITYP = INPC-360
     92   YES   YES   YES   YES   YES   YES   YES   YES  YES',10X,'ECIS1INPC-361
     A571'/' ITYP = 3   YES   YES   YES   YES   YES   YES   NO',4X,'NO  INPC-362
     B YES',10X,'ECIS1572'/' ITYP = 4   YES   YES   YES   YES   YES   YEINPC-363
     CS   NO',4X,'NO   YES',10X,'ECIS1573'/' ITYP = 5   YES   YES   YES INPC-364
     D  YES   YES   YES   NO',4X,'NO   YES',10X,'ECIS1574'/' ITYP = 6   INPC-365
     EYES   YES   YES   YES   YES   YES   NO',4X,'NO   YES',10X,'ECIS157INPC-366
     F5'/' ITYP = 7   NO',4X,'YES   YES   YES   YES   YES   NO',4X,'NO  INPC-367
     G YES',10X,'ECIS1576'/' ITYP = 8   NO',4X,'YES   YES   YES   YES   INPC-368
     HYES   NO',4X,'NO   YES',10X,'ECIS1577'/72X,'ECIS1578'/' NUMBER OF INPC-369
     IPARAMETERS TO STORE:',41X,'ECIS1579'/12X,'10',4X,'10',4X,'10',4X,'INPC-370
     J10  11+L2X 13+L2X 11',4X,'22   13+L2X',7X,'ECIS1580'/' THERE IS ONINPC-371
     KE MORE FOR COULOMB POTENTIALS AND ITYPX=-1 TO -6.',11X,'ECIS1581')INPC-372
      WRITE (6,1073)                                                    INPC-373
 1073 FORMAT (' THERE ARE 5 MORE PARAMETERS FOR ITYPX=-7 AND MLX=2.',20XINPC-374
     1,'ECIS1582'/' THERE ARE 16 OR 6 MORE PARAMETERS FOR ITYPX=-8 AND MINPC-375
     2LX=2 OR MLX=3.',5X,'ECIS1583'/72X,'ECIS1584'/'STRENGTH AND SCALINGINPC-376
     3 FACTOR',13X,'FORMAT (7F10.5)',17X,'ECIS1585'/'*******************INPC-377
     4********',45X,'ECIS1586'/'  IF ITYPX IS NEGATIVE GO TO ''PARAMETERINPC-378
     5S OF STANDARD FORM FACTORS''.',5X,'ECIS1587'/'  THEN IF L1X IS POSINPC-379
     6ITIVE GO BACK TO ''IDENTIFICATION'' CARD.',13X,'ECIS1588'/10X,'1  INPC-380
     7 .TRUE. TO ALLOW EXTRAPOLATION BEYOND THE LAST POINT. IF ITECIS158INPC-381
     89'/14X,'IS .FALSE., VALUES BEYOND THE LAST POINT WILL BE 0.',7X,'EINPC-382
     9CIS1590'/7X,'2-10   MULTIPLICATIVE FACTOR FOR THE STRENGTH (DEFAULINPC-383
     AT VALUE 1.).ECIS1591'/6X,'11-20   MULTIPLICATIVE FACTOR FOR THE STINPC-384
     BEP SIZE (DEFAULT VALUE 1.)ECIS1592'/72X,'ECIS1593'/'NUMERICAL VALUINPC-385
     CES OF THE POTENTIALS',6X,'FORMAT (2(F10.5,F20.10),A4)',5X,'ECIS159INPC-386
     D4'/'**********************************',38X,'ECIS1595'/7X,'1-10   INPC-387
     EREXT  RADIUS.',45X,'ECIS1596'/6X,'11-30   FEXT  VALUE AT REXT.',38INPC-388
     FX,'ECIS1597'/6X,'31-40   REXT  RADIUS.',45X,'ECIS1598'/6X,'41-60  INPC-389
     G FEXT  VALUE AT REXT.',38X,'ECIS1599'/6X,'61-64   LAST  CONTROL WOINPC-390
     HRD WHICH MUST BE ''LAST'' FOR THE LAST POINTECIS1600'/7X,'IF THIS INPC-391
     ICONTROL WORD IS NOT ''LAST'' GO TO NEXT SUCH CARD.',9X,'ECIS1601'/INPC-392
     J'  NOTE:  THE GIVEN RADII MUST BE IN INCREASING ORDER AND THEIR NUINPC-393
     KMBER   ECIS1602')                                                 INPC-394
      WRITE (6,1074)                                                    INPC-395
 1074 FORMAT ('  ***** EVEN. MANY POINTS ARE NEEDED FOR COULOMB POTENTIAINPC-396
     1L FOR WHICH THEECIS1603'/8X,'EXTRAPOLATION DOES NOT WORK WELL. IF INPC-397
     2ITS DEPTH IS GIVEN BY THE  ECIS1604'/8X,'INTEGRAL, (NINT NOT 0), TINPC-398
     3HESE VALUES DESCRIBE THE CHARGE',8X,'ECIS1605'/8X,'DISTRIBUTION.',INPC-399
     451X,'ECIS1606'/9X,'THE SIGN OF THE POTENTIALS IS THE ONE OF THEIR INPC-400
     5DEPTH WHEN',6X,'ECIS1607'/8X,'WOODS-SAXON FORM FACTORS ARE USED FOINPC-401
     6R SCHROEDINGER EQUATIONS ANDECIS1608'/8X,'FOR DIRAC EQUATION.',45XINPC-402
     7,'ECIS1609'/9X,'THE SPIN-ORBIT ''CENTRAL'' HAVE TO BE GIVEN AS 1/RINPC-403
     8 D/DR(V(R))',4X,'ECIS1610'/8X,'EXCEPT IF ITS STRENGTH IS DEFINED BINPC-404
     9Y ITS INTEGRAL OR IS FOLDED. ECIS1611'/9X,'THE SPIN-ORBIT TRANSITIINPC-405
     AON POTENTIALS HAVE TO BE GIVEN AS V(R), ECIS1612'/8X,'FROM WHICH 1INPC-406
     B/R D/DR(V(R)) AND V(R)/R**2 ARE INTERNALLY COMPUTED.ECIS1613'/72X,INPC-407
     C'ECIS1614'/''/'MULTIPLICATIVE FACTOR',19X,'FORMAT (7F10.5)',17X,'INPC-408
     DECIS1615'/'*********************',51X,'ECIS1616'/'  IF NINT IS NOTINPC-409
     E NEGATIVE FOR A COPIED FORM FACTOR GO BACK TO',11X,'ECIS1617'/'''IINPC-410
     FDENTIFICATION'' CARD.',50X,'ECIS1618'/7X,'1-10   MULTIPLICATIVE FAINPC-411
     GCTOR FOR THE STRENGTH (MUST NOT BE 0.).  ECIS1619'/72X,'ECIS1620'/INPC-412
     H'PARAMETERS OF STANDARD FORM FACTORS',37X,'ECIS1621'/'************INPC-413
     I***********************',37X,'ECIS1622'/' ONLY IF L1X IS NOT POSITINPC-414
     JIVE AND ITYPX IS NEGATIVE, OTHERWISE GO TO',5X,'ECIS1623'/' NEXT 'INPC-415
     K'IDENTIFICATION CARD''.',44X,'ECIS1624'/72X,'ECIS1625')           INPC-416
      WRITE (6,1075)                                                    INPC-417
 1075 FORMAT ('IF ITYPX=-1 TO -6:',54X,'ECIS1626'/'******************',5INPC-418
     14X,'ECIS1627'/72X,'ECIS1628'/'PARAMETERS OF THE POTENTIAL',13X,'FOINPC-419
     2RMAT (7F10.5)',17X,'ECIS1629'/'***************************',45X,'EINPC-420
     3CIS1630'/7X,'1-10   DEPTH OF POTENTIAL.',39X,'ECIS1631'/14X,'PRODUINPC-421
     4CT OF DEPTH AND DEFORMATION FOR A TRANSITION FORM',4X,'ECIS1632'/1INPC-422
     58X,'FACTOR.',47X,'ECIS1633'/14X,'PRODUCT OF CHARGES FOR COULOMB POINPC-423
     6TENTIAL.',17X,'ECIS1634'/14X,'PRODUCT OF CHARGES AND DEFORMATION FINPC-424
     7OR COULOMB TRANSITION ECIS1635'/18X,'FORM FACTOR.',42X,'ECIS1636'/INPC-425
     86X,'11-20   RADIUS OF VOLUME POTENTIAL.',31X,'ECIS1637'/6X,'21-30 INPC-426
     9  DIFFUSENESS OF VOLUME POTENTIAL.',26X,'ECIS1638'/6X,'31-40   EXPINPC-427
     AONENTIATION FACTOR (THE FORM FACTOR IS AT THE POWER',4X,'ECIS1639'INPC-428
     B/18X,'1+THIS VALUE).',40X,'ECIS1640'/6X,'41-50   THIRD PARAMETER OINPC-429
     CF A FERMI CHARGE DISTRIBUTION FOR A',6X,'ECIS1641'/14X,'COULOMB POINPC-430
     DTENTIAL.',40X,'ECIS1642'/72X,'ECIS1643'/'DEFORMATIONS FOR ITYPX=-5INPC-431
     E OR -6',9X,'FORMAT (7F10.5)',17X,'ECIS1644'/'*********************INPC-432
     F**********',41X,'ECIS1645'/7X,'1-10   DEFORMATION FOR L=1.',38X,'EINPC-433
     GCIS1646'/6X,'11-20   DEFORMATION FOR L=2.',38X,'ECIS1647'/6X,'21-3INPC-434
     H0   DEFORMATION FOR L=3.',38X,'ECIS1648'/6X,'31-40   DEFORMATION FINPC-435
     IOR L=4.',38X,'ECIS1649'/6X,'41-50   .......... AND SO ON UP TO L2XINPC-436
     J ....',23X,'ECIS1650'/'  NOTE:  ODD AND EVEN DEFORMATIONS ARE USEDINPC-437
     K, STARTING BY L=1.',11X,'ECIS1651')                               INPC-438
      WRITE (6,1076)                                                    INPC-439
 1076 FORMAT ('  ****  THE RADII MUST BE VALUES ALREADY MULTIPLIED BY A*INPC-440
     1*(1/3).',8X,'ECIS1652'/8X,'NO CHECK IS DONE ON PRODUCT OF CHARGES INPC-441
     2WHEN THEY ARE READ OR TO ECIS1653'/8X,'PREVENT A SEARCH ON THEM.',INPC-442
     339X,'ECIS1654'/72X,'ECIS1655'/'IF ITYPX=-7 OR -8:',54X,'ECIS1656'/INPC-443
     4'******************',54X,'ECIS1657'/72X,'ECIS1658'/'QUANTUM NUMBERINPC-444
     5S',25X,'FORMAT (12I5)',19X,'ECIS1659'/'***************',57X,'ECIS1INPC-445
     6660'/'IF MLX=0 OR MLX=1, THE NUMBER OF NODES IS L2X AND THE QUANTUINPC-446
     7M NUMBERS   ECIS1661'/'ARE THOSE OF THE TRANSITION. IN THIS CASE, INPC-447
     8GO TO NEXT CARD.',13X,'ECIS1662'/'IF MLX=2 OR MLX=3:',54X,'ECIS166INPC-448
     93'/7X,'1- 5   NP: NUMBER OF NODES OF THE FIRST BOUND FUNCTION.',10INPC-449
     AX,'ECIS1664'/7X,'6-10   LP: ANGULAR MOMENTUM OF THE FIRST BOUND FUINPC-450
     BNCTION.',9X,'ECIS1665'/6X,'11-15   SP: VALUE OF 2*S FOR THE FIRST INPC-451
     CBOUND FUNCTION.',12X,'ECIS1666'/6X,'16-20   JP: VALUE OF 2*J FOR TINPC-452
     DHE FIRST BOUND FUNCTION.',12X,'ECIS1667'/6X,'21-25   NH: NUMBER OFINPC-453
     E NODES OF THE SECOND BOUND FUNCTION.',9X,'ECIS1668'/6X,'26-30   LHINPC-454
     F: ANGULAR MOMENTUM OF THE SECOND BOUND FUNCTION.',8X,'ECIS1669'/6XINPC-455
     G,'31-35   SH: VALUE OF 2*S FOR THE SECOND BOUND FUNCTION.',11X,'ECINPC-456
     HIS1670'/6X,'36-40   JH: VALUE OF 2*J FOR THE SECOND BOUND FUNCTIONINPC-457
     I.',11X,'ECIS1671'/6X,'41-45   NVC NOT 0 TO TAKE INTO ACCOUNT PARTIINPC-458
     JCLE-HOLE COUPLING',5X,'ECIS1672'/18X,'(USED ONLY WITH SP=1 AND SH=INPC-459
     K1).',23X,'ECIS1673'/72X,'ECIS1674'/'')                           INPC-460
      WRITE (6,1077)                                                    INPC-461
 1077 FORMAT ('FOR ITYPX=-7:',27X,'FORMAT (7F10.5)',17X,'ECIS1675'/'****INPC-462
     1*********',59X,'ECIS1676'/7X,'1-10   OSCILLATOR PARAMETER FOR THE INPC-463
     2FIRST BOUND FUNCTION.',8X,'ECIS1677'/6X,'11-20   OSCILLATOR PARAMEINPC-464
     3TER FOR THE SECOND BOUND FUNCTION.',7X,'ECIS1678'/'FOR MLX=0 OR 1 INPC-465
     4OR ITYPX=-8 WITH MLX=3, ONLY THE FIRST PARAMETER IS READ.ECIS1679'INPC-466
     5/'FOR MLX=2, IF THE SECOND PARAMETER IS 0., THE FIRST ONE IS COPIEINPC-467
     6D.',6X,'ECIS1680'/72X,'ECIS1681'/'FOR ITYPX=-8:',27X,'FORMAT (7F10INPC-468
     7.5)',17X,'ECIS1682'/'*************',59X,'ECIS1683'/7X,'1-10   BINDINPC-469
     8ING ENERGY. IF THIS VALUE IS NEGATIVE, THE BOUND STATEECIS1684'/14INPC-470
     9X,'IS REPLACED BY A SCATTERING STATE NORMALISED TO',11X,'ECIS1685'INPC-471
     A/14X,'SIN(KR+DELTA) AT INFINITY.',32X,'ECIS1686'/6X,'11-20   TOTALINPC-472
     B MASS.',47X,'ECIS1687'/6X,'21-30   MASS OF BOUND PARTICLE (DEFAULTINPC-473
     C VALUE 1.).',16X,'ECIS1688'/6X,'31-40   PRODUCT OF CHARGES.',39X,'INPC-474
     DECIS1689'/6X,'41-50   REAL POTENTIAL FOR UNBOUND STATES OR STARTININPC-475
     EG VALUE FOR   ECIS1690'/14X,'THE SEARCH ON BOUND STATE (DEFAULT VAINPC-476
     FLUES 35 MEV).',8X,'ECIS1691'/6X,'51-60   REDUCED RADIUS OF REAL POINPC-477
     GTENTIAL.',25X,'ECIS1692'/6X,'61-70   DIFFUSENESS OF REAL POTENTIALINPC-478
     H.',28X,'ECIS1693'/72X,'ECIS1694'/'ON NEXT CARD:',27X,'FORMAT (7F10INPC-479
     I.5)',17X,'ECIS1695'/'*************',59X,'ECIS1696'/7X,'1-10   DEPTINPC-480
     JH OF SPIN-ORBIT POTENTIAL.',28X,'ECIS1697'/6X,'11-20   REDUCED RADINPC-481
     KIUS OF SPIN-ORBIT POTENTIAL.',19X,'ECIS1698')                     INPC-482
      WRITE (6,1078)                                                    INPC-483
 1078 FORMAT (6X,'21-30   DIFFUSENESS OF SPIN-ORBIT POTENTIAL.',22X,'ECIINPC-484
     1S1699'/6X,'31-40   REDUCED RADIUS OF COULOMB POTENTIAL.',22X,'ECISINPC-485
     21700'/'FOR MLX=2, GO BACK TO ''FOR ITYPX=-8:''.',34X,'ECIS1701'/'FINPC-486
     3OR MLX=3, GO BACK TO ''FOR ITYPX=-7:'' TO READ ONE OSCILLATOR PARAINPC-487
     4METER. ECIS1702'/'  NOTE:  REDUCED RADII ARE USED FOR ITYPX=-8.',2INPC-488
     57X,'ECIS1703'/'  ****  USING THE PRODUCT OF TWO BOUND FUNCTIONS, TINPC-489
     6HEIR COUPLING TO THE ECIS1704'/8X,'ANGULAR MOMENTUM OF THE TRANSITINPC-490
     7ION IS COMPUTED BY THE CODE ONLY ECIS1705'/8X,'IF THEIR SPINS ARE INPC-491
     8BOTH 1/2 AND THE NUCLEAR MATRIX ELEMENT',6X,'ECIS1706'/8X,'SHOULD INPC-492
     9BE THE STRENGTH OF THE INTERACTION. FOR SPINS NOT 1/2,   ECIS1707'INPC-493
     A/8X,'THIS COUPLING SHOULD BE INCLUDED IN THE NUCLEAR MATRIX ELEMENINPC-494
     BT. ECIS1708'/72X,'ECIS1709'/'IF ITYPX=-9 OR -10:',53X,'ECIS1710'/'INPC-495
     C*******************',53X,'ECIS1711'/72X,'ECIS1712'/'STRENGTHS',31XINPC-496
     D,'FORMAT (7F10.5)',17X,'ECIS1713'/'*********',63X,'ECIS1714'/8X,'1INPC-497
     E-10   STRENGTH OF THE INTEGRAL WITH R**(L+2). (FOR COULOMB',5X,'ECINPC-498
     FIS1715'/15X,'POTENTIALS AND COUPLINGS, GIVE THE DESCRIPTION OF',8XINPC-499
     G,'ECIS1716'/15X,'CHARGE DENSITY OR TRANSITION. THE STRENGTH MUST BINPC-500
     HE',7X,'ECIS1717'/15X,'GIVEN. FOR POTENTIALS, IT IS THE PRODUCT OF INPC-501
     ICHARGES).',4X,'ECIS1718'/7X,'11-20   FOR ITYPX=-9, RADIAL EXTENSIOINPC-502
     JN OF BESSEL FUNCTION',8X,'ECIS1719'/15X,'(DEFAULT VALUE MATCHING RINPC-503
     KADIUS).',25X,'ECIS1720')                                          INPC-504
      WRITE (6,1079)                                                    INPC-505
 1079 FORMAT (15X,'FOR ITYPX=-10, PARAMETER B OF LAGUERRE POLYNOMIAL',8XINPC-506
     1,'ECIS1721'/15X,'(DEFAULT VALUE 1). THE POTENTIAL IS SUM ON N OF',INPC-507
     210X,'ECIS1722'/15X,'X**L L(L+1/2,N,X**2) EXP(-x**2/2) WHERE X=R/B.INPC-508
     3',11X,'ECIS1723'/7X,'21-30   STRENGTH OF FIRST BESSEL FUNCTION/LAGINPC-509
     4UERRE POLYNOMIAL.   ECIS1724'/7X,'31-40   STRENGTH OF SECOND BESSEINPC-510
     5L FUNCTION/LAGUERRE POLYNOMIAL.  ECIS1725'/7X,'41-50   STRENGTH OFINPC-511
     6 THIRD BESSEL FUNCTION/LAGUERRE POLYNOMIAL.   ECIS1726'/7X,'51-60 INPC-512
     7  STRENGTH OF FOURTH BESSEL FUNCTION/LAGUERRE POLYNOMIAL.  ECIS172INPC-513
     87'/7X,'61-70   STRENGTH OF FIFTH BESSEL FUNCTION/LAGUERRE POLYNOMIINPC-514
     9AL.   ECIS1728'/72X,'ECIS1729'/' EVENTUALLY, ON NEXT CARD:',14X,'FINPC-515
     AORMAT (7F10.5)',17X,'ECIS1730'/' *************************',46X,'EINPC-516
     BCIS1731'/8X,'1-10   STRENGTH OF SIXTH BESSEL FUNCTION/LAGUERRE POLINPC-517
     CYNOMIAL.   ECIS1732'/7X,'11-20   STRENGTH OF SEVENTH BESSEL FUNCTIINPC-518
     DON/LAGUERRE POLYNOMIAL. ECIS1733'/7X,'21-30   .......... AND SO ONINPC-519
     E UP TO L2X ....',22X,'ECIS1734'/''/'  NOTE:  WITH BESSEL FUNCTIONINPC-520
     F OR LAGUERRE POLYNOMIAL OR LAGUERRE',8X,'ECIS1735'/'  ****  POLYNOINPC-521
     GMIALS, GIVE THE SPIN-ORBIT V(R) AND NEVER 1/R D/DR V(R).  ECIS1736INPC-522
     H'/'  THE LAGUERRE POLYNOMIALS ARE X**L EXP(-X**2) L^(L+1/2)_N(2X**INPC-523
     I2) WHERE ECIS1737'/'  X=R/B (UNNORMALISED POLYNOMIALS AS DEFINED IINPC-524
     JN BATEMAN OR ABRAMOWITZ,  ECIS1738'/'  WITH A PARAMETER B INVERSE INPC-525
     KOF THE HARMONIC OSCILLATOR PARAMETER).',5X,'ECIS1739')            INPC-526
      WRITE (6,1080)                                                    INPC-527
 1080 FORMAT (5X,'THE PROGRAM STOPS IF FORM FACTORS ARE MISSING.',21X,'EINPC-528
     1CIS1740'/72X,'ECIS1741'/'FOLDING PARAMETERS',22X,'FORMAT (7E10.5)'INPC-529
     2,17X,'ECIS1742'/'******************',54X,'ECIS1743'/'  IF THE MAXIINPC-530
     3MUM POSITIVE VALUE OF ''NFOLD'' READ IN COLUMNS 46-50 OF THE ECIS1INPC-531
     4744'/'IDENTIFICATION CARDS IS N, READ N TIMES:',32X,'ECIS1745'/8X,INPC-532
     5'1-10   VAL(25) ''V'' PARAMETER',36X,'ECIS1746'/7X,'11-20   VAL(26INPC-533
     6) ''R'' PARAMETER',36X,'ECIS1747'/7X,'21-30   VAL(27) ''A'' PARAMEINPC-534
     7TER',36X,'ECIS1748'/'FOR EXPLANATIONS, SEE ''CARDS READ IN SUBROUTINPC-535
     8INE LECT''.',18X,'ECIS1749'/72X,'ECIS1750'/72X,'ECIS1751'/'CARDS RINPC-536
     9EAD IN SUBROUTINE EVAL',43X,'ECIS1752'/'**************************INPC-537
     A***',43X,'ECIS1753'/3X,'IF LO(37)=.TRUE., OTHERWISE GO TO THE BEGIINPC-538
     BNNING OF ANOTHER DATA SET. ECIS1754'/72X,'ECIS1755'/'NUMBER OF CHAINPC-539
     CNGES',23X,'FORMAT (2L1,I3,I5,F10.5)',8X,'ECIS1756'/'**************INPC-540
     D***',55X,'ECIS1757'/10X,'1   LO(37)',5X,'.TRUE. FOR OTHER CALLS TOINPC-541
     E THIS SUBROUTINE',6X,'ECIS1758'/25X,'.FALSE. FOR THE LAST CALL.',2INPC-542
     F1X,'ECIS1759'/10X,'2   LX',9X,'.TRUE. TO READ ANOTHER TITLE',19X,'INPC-543
     GECIS1760'/7X,'3- 5   NIN',8X,'NUMBER OF PARAMETERS TO CHANGE.',16XINPC-544
     H,'ECIS1761'/7X,'6-10   NEX',8X,'INDICATION FOR THE USE OF THE VALUINPC-545
     IES TO BE READECIS1762'/27X,'>0  INCREMENTS',31X,'ECIS1763'/27X,'=0INPC-546
     J  NEW VALUES',31X,'ECIS1764'/27X,'<0  PERCENTAGE OF INCREASE',19X,INPC-547
     K'ECIS1765')                                                       INPC-548
      WRITE (6,1081)                                                    INPC-549
 1081 FORMAT (6X,'11-20   ECH',8X,'NEW SEARCH SCALE. (DEFAULT OPTION 20.INPC-550
     1)',9X,'ECIS1766'/72X,'ECIS1767'/'CARD 1',34X,'FORMAT (18A4)',19X,'INPC-551
     2ECIS1768'/'******',66X,'ECIS1769'/'IF LX=.TRUE.  NEW TITLE WHICH WINPC-552
     3ILL BE PRINTED AS HEADING OF RESULTS.',4X,'ECIS1770'/72X,'ECIS1771INPC-553
     4'/'IDENTIFICATIONS',25X,'FORMAT (14I5)',19X,'ECIS1772'/'**********INPC-554
     5*****',57X,'ECIS1773'/7X,'1- 5   INDEX OF FIRST PARAMETER.',33X,'EINPC-555
     6CIS1774'/7X,'6-10   INDEX OF SECOND PARAMETER.',32X,'ECIS1775'/6X,INPC-556
     7'11-15   ........................',34X,'ECIS1776'/10X,'UP TO NIN VINPC-557
     8ALUES, EVENTUALLY ON OTHER CARDS, STARTING IN 1-5. ECIS1777'/3X,'NINPC-558
     9OTE:  A NEGATIVE VALUE IS REPLACED BY ZERO.',25X,'ECIS1778'/3X,'**INPC-559
     A**   INDEX ZERO IS THE TOTAL ENERGY.',31X,'ECIS1779'/10X,'THE OTHEINPC-560
     BR INDICES ARE THE SAME AS THE ONES USED FOR SEARCH,   ECIS1780'/9XINPC-561
     C,'WITH THE LIMITATIONS ALREADY DESCRIBED.',24X,'ECIS1781'/72X,'ECIINPC-562
     DS1782'/'NEW VALUES',30X,'FORMAT (7F10.5)',17X,'ECIS1783'/'********INPC-563
     E**',62X,'ECIS1784'/7X,'1-10   FIRST NEW PARAMETER.',38X,'ECIS1785'INPC-564
     F/6X,'11-20   SECOND NEW PARAMETER.',37X,'ECIS1786'/6X,'21-30   ...INPC-565
     G.................',38X,'ECIS1787'/'  IF LO(37)=.TRUE. GO AGAIN TO INPC-566
     H''CARDS READ IN SUBROUTINE EVAL''.',9X,'ECIS1788'/'  IF LO(37)=.FAINPC-567
     ILSE. GO TO THE BEGINNING OF NEXT DATA SET.',15X,'ECIS1789'/'  NOTEINPC-568
     J:  THERE ARE DIFFERENT USES OF THIS POSSIBILITY:',18X,'ECIS1790') INPC-569
      WRITE (6,1082)                                                    INPC-570
 1082 FORMAT ('  *****  1) AS A SEARCH STOPS USUALLY BEFORE THE MINIMUM,INPC-571
     1 IT CAN BE',5X,'ECIS1791'/8X,'REFINED BY USING NEX POSITIVE AND ININPC-572
     2TRODUCING AN INCREMENT ''0.'' ECIS1792'/8X,'FOR ANY PARAMETER, IN INPC-573
     3SEARCH OR NOT IN SEARCH.',18X,'ECIS1793'/''/9X,'2) WHEN SEARCHINGINPC-574
     4 THE MINIMUM OF THE CHI2 AS A FUNCTION OF SOMEECIS1794'/8X,'FIXED INPC-575
     5PARAMETER. THE NEXT SEARCH STARTS WITH THE VALUES OF THE  ECIS1795INPC-576
     6'/8X,'PARAMETERS IN SEARCH OBTAINED IN THE LAST SEARCH.',15X,'ECISINPC-577
     71796'/9X,'3) WHEN SOME RESULT MUST BE OBTAINED FOR DIFFERENT VALUEINPC-578
     8S OF   ECIS1797'/8X,'THE PARAMETERS.',49X,'ECIS1798'/72X,'ECIS1799INPC-579
     9'/72X,'ECIS1800'/'RESTART INPUT: CARDS READ IN SUBROUTINE REST',28INPC-580
     AX,'ECIS1801'/'********************************************',28X,'EINPC-581
     BCIS1802'/72X,'ECIS1803'/'RESTART CONDITIONS',22X,'FORMAT (L1,I4,I5INPC-582
     C,2F10.5)',8X,'ECIS1804'/'******************',54X,'ECIS1805'/10X,'1INPC-583
     D   LO(35)  THE ONLY CONTROL WHICH CAN BE CHANGED, ALL THE',4X,'ECIINPC-584
     ES1806'/14X,'OTHERS BEING THOSE OF LAST RUN.',27X,'ECIS1807'/7X,'2-INPC-585
     F 5   NEW MAXIMUM NUMBER OF EVALUATIONS.',24X,'ECIS1808'/7X,'6-10  INPC-586
     G NEW VALUE OF NSEC. (DEFAULT VALUE: THE OLD ONE).',10X,'ECIS1809'/INPC-587
     H6X,'11-20   NEW VALUE OF ECH.',41X,'ECIS1810'/6X,'11-20   NEW VALUINPC-588
     IE OF RAP.',41X,'ECIS1811'/14X,'IF THEY ARE LESS THAN 1., ECH OR RAINPC-589
     JP ARE NOT CHANGED.',5X,'ECIS1812'/72X,'ECIS1813'/72X,'ECIS1814')  INPC-590
      WRITE (6,1083)                                                    INPC-591
 1083 FORMAT ('*********************************************************INPC-592
     1***************ECIS1815'/72X,'ECIS1816'/30X,'*******************',INPC-593
     223X,'ECIS1817'/30X,'*  NEXT DATA SET  *',23X,'ECIS1818'/30X,'*****INPC-594
     3**************',23X,'ECIS1819'/72X,'ECIS1820'/6X,'''FIN'' IN COLUMINPC-595
     4NS 1-3 TO STOP THE JOB WITHOUT DIAGNOSTIC.',10X,'ECIS1821'/72X,'ECINPC-596
     5IS1822'/7X,'FOR ANY TROUBLE, WRITE (AND EVEN SEND LISTINGS) TO',15INPC-597
     6X,'ECIS1823'/5X,'JACQUES RAYNAL/SERVICE DE PHYSIQUE THEORIQUE/C.E.INPC-598
     7-SACLAY',11X,'ECIS1824'/15X,'91191 GIF-SUR-YVETTE CEDEX/FRANCE',24INPC-599
     8X,'ECIS1825'/72X,'ECIS1826'/5X,'FAX: (33)(1) 69.08-81-20',43X,'ECIINPC-600
     9S1827'/5X,'E-MAIL: RAYNAL@SPHT.SACLAY.CEA.FR',34X,'ECIS1828'/72X,'INPC-601
     AECIS1829')                                                        INPC-602
      RETURN                                                            INPC-603
      END                                                               INPC-604
C 01/01/04                                                      ECIS03  LECL-000
      SUBROUTINE LECL(NCOLX,NCOLL,NPP,NCONT,IPI,IPH,WV,IPP,NPA,PA,NVA,N LECL-001
     1A,NB,NIMAX,NBET,CM,IDT,LO)                                        LECL-002
C INPUT OF LEVEL DESCRIPTIONS.                                          LECL-003
C INPUT VARIABLES:   NCOLX:  TOTAL NUMBER OF NUCLEAR STATES             LECL-004
C                    NCOLL:  NUMBER OF COUPLED NUCLEAR STATES           LECL-005
C                    NPP:    NUMBER OF OPTICAL POTENTIALS               LECL-006
C                    NCONT:  NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS   LECL-007
C                    CM:     NUCLEAR MASS IN MEV                        LECL-008
C                    IDT:    FREE SPACE IN NPA,PA                       LECL-009
C                    LO:     LOGICAL CONTROLS. FOR 1, 2, 3, 7, 8, 15,   LECL-010
C                            18 AND 100 SEE DESCRIPTION OF INPUT.       LECL-011
C             101, 102, 103 AND 115 ARE OPPOSITE OF 1, 2, 3 AND 15      LECL-012
C             LO(209)=.TRUE.  FOR DIRAC POTENTIALS                      LECL-013
C OUTPUT VARIABLES:  IPI(J,*) FOR J = 1, 2, 3, 4, 5 AND 11:  SEE CALX   LECL-014
C                    IPH(2,J):  FOR VIBRATIONAL MODEL, NUMBER OF PHONONSLECL-015
C                        FOR I=1, J=1,NCOLL. IF IPH(1,J) IS 3, THE STATELECL-016
C                        IS A MIXTURE OF 1 AND 2-PHONONS STATES.        LECL-017
C                               FOR ROTATIONAL MODEL, IPH(1,J) IS 1 FOR LECL-018
C                        A VIBRATIONAL BAND AND 2 FOR A MIXTURE WITH    LECL-019
C                        THE GROUND STATE BAND.                         LECL-020
C                               ADDRESS OF THE DESCRIPTION OF MIXED     LECL-021
C                        MIXED STATES IN IPH(2,J).                      LECL-022
C                    WV(J,*) FOR J = 1, 2, 3 AND 12:  SEE CALX          LECL-023
C                    NPA,PA: STORAGE OF NUCLEAR PARAMETERS EQUIVALENT   LECL-024
C                            BY CALL                                    LECL-025
C                    IPP(1,J): FIRST LEVEL USING POTENTIAL J (TEMPORARY)LECL-026
C                    NVA:    NUMBER OF NUCLEAR PARAMETERS               LECL-027
C                    NA:     NUMBER OF INTEGER PARAMETER INFORMATIONS   LECL-028
C                    NB:     STORAGE IN ROAM FOR ASYMMETRIC ROTATION    LECL-029
C                    NIMAX:  TWICE MAXIMUM SUM OF SPINS TARGET+PARTICLE LECL-030
C                    NBET:   NUMBER OF DIFFERENT PHONONS                LECL-031
C                    LO:     LOGICAL CONTROLS: DEFINED FOR IDENTICAL    LECL-032
C                            PARTICLE AND TARGET, LO(223)=.TRUE. FOR NO LECL-033
C                            SPIN IN THE GROUND STATE AND LO(231)=.TRUE.LECL-034
C                            FOR NON ZERO SPINS IN THE GROUND STATE     LECL-035
C IN COMMON /POTE2/  NPX:    NUMBER OF POT. WITH DISP. (TEMPORARY)      LECL-036
C***********************************************************************LECL-037
      IMPLICIT REAL*8 (A-H,O-Z)                                         LECL-038
      LOGICAL LO(250)                                                   LECL-039
      CHARACTER*1 SIGM,SPI                                              LECL-040
      DIMENSION IPI(11,NCOLX),IPP(30,NPP),IPH(2,NCOLL),WV(18,NCOLX),NPA(LECL-041
     12,1),PA(1)                                                        LECL-042
      COMMON /POTE2/ ITY(8),INVT,INTV,INSL,NPX                          LECL-043
      COMMON /INOUT/ MR,MW,MS                                           LECL-044
      DATA SIGM /'-'/                                                   LECL-045
C OUTPUT OF NUCLEAR MODEL                                               LECL-046
      IF (LO(7)) GO TO 3                                                LECL-047
      IF (LO(1)) GO TO 2                                                LECL-048
      IF (LO(3)) GO TO 1                                                LECL-049
      IF (LO(102)) WRITE (MW,1000)                                      LECL-050
      IF (LO(2)) WRITE (MW,1001)                                        LECL-051
      GO TO 4                                                           LECL-052
    1 WRITE (MW,1002)                                                   LECL-053
      IF (LO(115)) GO TO 28                                             LECL-054
      GO TO 4                                                           LECL-055
    2 IF (LO(103)) WRITE (MW,1003)                                      LECL-056
      IF (LO(3)) WRITE (MW,1004)                                        LECL-057
      GO TO 4                                                           LECL-058
    3 WRITE (MW,1005)                                                   LECL-059
C INPUT OF CHANNEL DESCRIPTION                                          LECL-060
    4 NVA=0                                                             LECL-061
      NA=0                                                              LECL-062
      NB=0                                                              LECL-063
      NBET=0                                                            LECL-064
      NIMAX=0                                                           LECL-065
      DO 5 IV=1,NPP                                                     LECL-066
    5 IPP(1,IV)=-1                                                      LECL-067
      DO 26 IV=1,NCOLX                                                  LECL-068
      READ (MR,1006) SP2,N,K,SPI,E,SP1,WV(1,IV),WV(2,IV),SP3            LECL-069
      IPI(2,IV)=1+IDINT(2.00001D0*SP1)                                  LECL-070
      IPI(3,IV)=1+IDINT(2.00001D0*SP2)                                  LECL-071
      IPI(4,IV)=IDINT(SP3)                                              LECL-072
      IF (IV.NE.1) GO TO 8                                              LECL-073
      WV(12,1)=E                                                        LECL-074
      IF (K.EQ.0) K=1                                                   LECL-075
      IF (LO(18).AND.((IPI(3,1).NE.IPI(2,1)).OR.(SPI.EQ.SIGM).OR.LO(100)LECL-076
     1)) GO TO 29                                                       LECL-077
      LO(223)=LO(18).AND.IPI(2,1)*IPI(3,1).EQ.1                         LECL-078
      LO(231)=LO(18).AND.IPI(2,1)*IPI(3,1).NE.1                         LECL-079
      AMRED=WV(1,1)*WV(2,1)/(WV(1,1)+WV(2,1))                           LECL-080
      IF (LO(8)) GO TO 6                                                LECL-081
      WV(3,1)=E*WV(2,1)/(WV(1,1)+WV(2,1))                               LECL-082
      GO TO 7                                                           LECL-083
C RELATIVISTIC C.-M. ENERGY ECM=SQRT((M1+M2)**2+2*M2*ELAB))-M1-M2       LECL-084
    6 WV(3,1)=CM*(DSQRT((WV(1,1)+WV(2,1))**2+2.D0*WV(2,1)*E/CM)-WV(1,1)-LECL-085
     1WV(2,1))                                                          LECL-086
    7 AM3=WV(2,1)**.33333333333333D0                                    LECL-087
      BM3=WV(1,1)**.33333333333333D0                                    LECL-088
      WRITE (MW,1007) WV(2,1),SP3,AM3,WV(1,1),AMRED,SP1,BM3             LECL-089
      WRITE (MW,1008) E,WV(3,1)                                         LECL-090
      E=0.D0                                                            LECL-091
      GO TO 12                                                          LECL-092
    8 IF (WV(1,IV).EQ.0.D0) GO TO 9                                     LECL-093
      AMRED=WV(1,IV)*WV(2,IV)/(WV(1,IV)+WV(2,IV))                       LECL-094
      AM3=WV(2,IV)**.33333333333333D0                                   LECL-095
      BM3=WV(1,IV)**.33333333333333D0                                   LECL-096
      WRITE (MW,1007) WV(2,IV),SP3,AM3,WV(1,IV),AMRED,SP1,BM3           LECL-097
      GO TO 10                                                          LECL-098
    9 WV(1,IV)=WV(1,IV-1)                                               LECL-099
      WV(2,IV)=WV(2,IV-1)                                               LECL-100
      IPI(2,IV)=IPI(2,IV-1)                                             LECL-101
      IPI(4,IV)=IPI(4,IV-1)                                             LECL-102
      SP2=0.5D0*DFLOAT(IPI(3,IV)-1)                                     LECL-103
      SP3=IPI(4,IV)                                                     LECL-104
   10 WV(3,IV)=WV(3,1)-E                                                LECL-105
      IF((NCONT+IV.LE.NCOLX).AND.LO(8)) WV(2,IV)=WV(1,1)+WV(2,1)-WV(1,IVLECL-106
     1)+E/CM                                                            LECL-107
      IF (K.EQ.0) K=IPI(5,IV-1)                                         LECL-108
      IF (LO(8)) GO TO 11                                               LECL-109
      WV(12,IV)=WV(3,IV)*(WV(1,IV)+WV(2,IV))/WV(2,IV)                   LECL-110
      GO TO 12                                                          LECL-111
   11 WV(12,IV)=WV(3,IV)*(WV(3,IV)/(2.D0*CM)+WV(1,IV)+WV(2,IV))/WV(2,IV)LECL-112
   12 IF (LO(209).AND.IPI(2,IV).NE.2) GO TO 30                          LECL-113
      IF (K.GT.NPP.OR.K.LE.0) GO TO 31                                  LECL-114
      IPI(5,IV)=K                                                       LECL-115
      IF (IPP(1,K).EQ.-1) IPP(1,K)=IV                                   LECL-116
      NIMAX=MAX0(NIMAX,IPI(2,IV)+IPI(3,IV))                             LECL-117
      IPI(1,IV)=0                                                       LECL-118
      IF (SPI.EQ.SIGM) IPI(1,IV)=1                                      LECL-119
      IF (IV.LE.NCOLL) GO TO 14                                         LECL-120
C UNCOUPLED STATES FOR COMPOUND NUCLEUS                                 LECL-121
      IF (NCONT+IV.GT.NCOLX) GO TO 13                                   LECL-122
      WRITE (MW,1009) IV,SP2,SPI,E,K                                    LECL-123
      GO TO 26                                                          LECL-124
C CONTINUUM FOR COMPOUND NUCLEUS                                        LECL-125
   13 WRITE (MW,1010) IV,SP2,SPI,E,K                                    LECL-126
      GO TO 26                                                          LECL-127
   14 IF (LO(7)) GO TO 16                                               LECL-128
      NNPA=0                                                            LECL-129
      NNVA=0                                                            LECL-130
      IF (LO(1).AND.N.EQ.0.OR.(LO(101).AND.(N.NE.0.OR.LO(3)))) GO TO 15 LECL-131
C INPUT OF PHONONS IN HARMONIC VIBRATIONAL OR SYMMETRIC ROTATIONAL MODELLECL-132
      READ (MR,1011) IPH(1,IV),IPH(2,IV),I2,I3                          LECL-133
      NBET=MAX0(NBET,IPH(2,IV),I2,I3)                                   LECL-134
      M=IPH(1,IV)+1                                                     LECL-135
      GO TO ( 16 , 18 , 19 , 19 ) , M                                   LECL-136
C GROUND STATE                                                          LECL-137
   15 IPH(1,IV)=0                                                       LECL-138
      IF (LO(1)) GO TO 17                                               LECL-139
   16 WRITE (MW,1012) IV,SP2,SPI,E,K                                    LECL-140
      GO TO 26                                                          LECL-141
   17 WRITE (MW,1013) IV,SP2,SPI,E,K                                    LECL-142
      IF (LO(103)) GO TO 26                                             LECL-143
      NNVA=(IPI(3,IV)-1)/4                                              LECL-144
      GO TO 20                                                          LECL-145
C 1 PHONON STATE                                                        LECL-146
   18 IF (LO(101)) WRITE (MW,1014) IV,SP2,SPI,E,K,IPH(2,IV)             LECL-147
      IF (LO(1)) WRITE (MW,1015) IV,SP2,SPI,E,K,IPH(2,IV)               LECL-148
      GO TO 26                                                          LECL-149
   19 NNPA=IPH(1,IV)-1                                                  LECL-150
      NNVA=M-2                                                          LECL-151
      IF (LO(103)) NNVA=NNVA+1                                          LECL-152
   20 IF (NA+NVA+NNPA+2.GT.IDT) CALL MEMO('LECL',NA+NVA+NNPA+2,IDT,2)   LECL-153
      IF ((NVA.EQ.0).OR.(NNPA.EQ.0)) GO TO 22                           LECL-154
      DO 21 I=NVA,1,-1                                                  LECL-155
   21 PA(NNPA+NA+I)=PA(NA+I)                                            LECL-156
   22 IF (LO(3)) GO TO 25                                               LECL-157
      WRITE (MW,1012) IV,SP2,SPI,E,K                                    LECL-158
C 2 PHONON STATE                                                        LECL-159
      NA=NA+1                                                           LECL-160
      NPA(1,NA)=IPH(2,IV)                                               LECL-161
      IF (LO(1)) GO TO 24                                               LECL-162
      IPH(2,IV)=NA                                                      LECL-163
      NPA(2,NA)=I2                                                      LECL-164
      IF (M.EQ.4) GO TO 23                                              LECL-165
      WRITE (MW,1016) NPA(1,NA),NPA(2,NA)                               LECL-166
      GO TO 26                                                          LECL-167
C MIXTURE OF 1 PHONON AND 2 PHONON STATE - INPUT OF MIXING PARAMETER    LECL-168
   23 NA=NA+1                                                           LECL-169
      NPA(1,NA)=I3                                                      LECL-170
   24 NVA=NVA+1                                                         LECL-171
      NPA(2,NA)=NVA                                                     LECL-172
      READ (MR,1017) PA(NA+NVA)                                         LECL-173
      B1=0.0174532925199433D0*PA(NA+NVA)                                LECL-174
      C1=DCOS(B1)                                                       LECL-175
      C3=DSIN(B1)                                                       LECL-176
      IF (LO(101)) WRITE (MW,1018) PA(NA+NVA),C3,NPA(1,NA-1),I2,C1,I3   LECL-177
      IF (LO(1)) WRITE (MW,1019) PA(NA+NVA),C3,NPA(1,NA),C1             LECL-178
      GO TO 26                                                          LECL-179
C ASYMMETRIC ROTATIONAL MODEL - INPUT OF MIXING PARAMETERS              LECL-180
   25 IF (LO(101)) GO TO 26                                             LECL-181
      IPH(1,IV)=NNVA                                                    LECL-182
      IPH(2,IV)=NVA                                                     LECL-183
      NB=NB+NNVA+1                                                      LECL-184
      IF (NNVA.EQ.0) GO TO 26                                           LECL-185
      READ (MR,1017) (PA(NA+NVA+J),J=1,NNVA)                            LECL-186
      WRITE (MW,1020) (PA(NA+NVA+J),J=1,NNVA)                           LECL-187
      NVA=NVA+NNVA                                                      LECL-188
   26 CONTINUE                                                          LECL-189
      IF (LO(1).AND.LO(2).AND.LO(3)) NVA=MAX0(NVA,5)                    LECL-190
      NPX=0                                                             LECL-191
      DO 27 I=1,NCOLL                                                   LECL-192
      IPI(11,I)=IPI(5,I)                                                LECL-193
      IF (LO(10)) IPI(11,I)=I                                           LECL-194
   27 NPX=MAX0(NPX,IPI(11,I))                                           LECL-195
      RETURN                                                            LECL-196
   28 WRITE (MW,1021)                                                   LECL-197
      GO TO 33                                                          LECL-198
   29 WRITE (MW,1022)                                                   LECL-199
      GO TO 33                                                          LECL-200
   30 SP1=0.5D0*DFLOAT(IPI(2,IV))                                       LECL-201
      WRITE (MW,1023) SP1                                               LECL-202
      GO TO 32                                                          LECL-203
   31 WRITE (MW,1024) K,NPP                                             LECL-204
   32 WRITE (MW,1012) IV,SP2,SPI,E,K                                    LECL-205
   33 WRITE (MW,1025)                                                   LECL-206
      STOP                                                              LECL-207
 1000 FORMAT (/' FIRST ORDER VIBRATIONAL MODEL'/)                       LECL-208
 1001 FORMAT (/' SECOND ORDER VIBRATIONAL MODEL'/)                      LECL-209
 1002 FORMAT (/' ANHARMONIC VIBRATIONAL MODEL'/)                        LECL-210
 1003 FORMAT (/' SYMMETRIC ROTATIONAL MODEL'/)                          LECL-211
 1004 FORMAT (/' ASYMMETRIC ROTATIONAL MODEL'/)                         LECL-212
 1005 FORMAT (/' EXTERNAL FORM FACTOR MODEL'/)                          LECL-213
 1006 FORMAT (F5.2,2I2,A1,5F10.5)                                       LECL-214
 1007 FORMAT (/' TARGET',14X,'MASS =',F10.5,11X,'PRODUCT OF CHARGES =',FLECL-215
     16.0,11X,'AT**1/3 =',D15.6/' INCIDENT PARTICLE',3X,'MASS =',F10.5,3LECL-216
     2X,'REDUCED MASS =',D15.6,3X,'SPIN =',F4.1,3X,'AP**1/3 =',D15.6)   LECL-217
 1008 FORMAT (10X,'ENERGY(LAB) =',D15.6,' MEV',10X,'ENERGY(C. M.) =',D15LECL-218
     1.6,' MEV'/)                                                       LECL-219
 1009 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-220
     14,' MEV',10X,'POTENTIAL',I5,6X,'***** UNCOUPLED STATE *****')     LECL-221
 1010 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-222
     14,' MEV',10X,'POTENTIAL',I5,6X,'***** START OF A CONTINUUM *****')LECL-223
 1011 FORMAT (14I5)                                                     LECL-224
 1012 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-225
     14,' MEV',10X,'POTENTIAL',I5)                                      LECL-226
 1013 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-227
     14,' MEV',10X,'POTENTIAL',I5,6X,'GROUND STATE BAND')               LECL-228
 1014 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-229
     14,' MEV',10X,'POTENTIAL',I5,6X,' PHONON STATE WITH PHONON',I3)    LECL-230
 1015 FORMAT (' N =',I3,' -   SPIN =',F4.1,A1,' EXCITATION ENERGY =',F8.LECL-231
     14,' MEV',10X,'POTENTIAL',I5,6X,'VIBRATIONAL BAND OF PHONON',I3)   LECL-232
 1016 FORMAT (23X,'2 PHONONS STATE, WITH PHONONS',I3,' AND',I3)         LECL-233
 1017 FORMAT (7F10.5)                                                   LECL-234
 1018 FORMAT (23X,'MIXING OF 1 AND 2 PHONON STATES WITH',F9.3,' DEGREES'LECL-235
     1/23X,F10.5,' 2 PHONONS STATE, WITH PHONONS',I3,' AND',I3,'  + ',F1LECL-236
     20.5,' 1 PHONON STATE WITH PHONON',I3)                             LECL-237
 1019 FORMAT (23X,'MIXING OF VIBRATIONAL AND GROUND BANDS WITH',F9.3,' DLECL-238
     1EGREES'/23X,F10.5,' VIBRATIONAL BAND OF PHONON',I3,' AND',F10.5,' LECL-239
     2GROUND STATE BAND')                                               LECL-240
 1020 FORMAT (23X,'BAND MIXING COEFF.',5F10.5)                          LECL-241
 1021 FORMAT (' THE NUCLEAR REDUCED MATRIX ELEMENTS MUST BE READ IN THISLECL-242
     1 MODEL')                                                          LECL-243
 1022 FORMAT (' PROJECTILE-TARGET ANTISYMMETRISATION VALID ONLY FOR SPINLECL-244
     1 OF PARTICLE EQUAL TO SPIN OF TARGET AND POSITIVE PARITY'/49X,'ANDLECL-245
     2 SCHROEDINGER FORMALISM')                                         LECL-246
 1023 FORMAT (' PARTICLE SPIN',F5.1,' NOT ALLOWED FOR DIRAC EQUATION')  LECL-247
 1024 FORMAT (' POTENTIAL',I3,' WILL NOT BE READ.TOTAL NUMBER IS:',I3)  LECL-248
 1025 FORMAT (/' IN LECL  ... STOP ...')                                LECL-249
      END                                                               LECL-250
C 01/01/04                                                      ECIS03  LECT-000
      SUBROUTINE LECT(NBET,IPI,IPP,PIP,WV,NBTA,BETA,VAL,FISS,GAM,NPP,RM,LECT-001
     1ACONV,IDT,H,NSPIN,ISM,IQM,IQMAX,SCN,CK,CM,LO)                     LECT-002
C LECT READS ALL INPUT EXCEPT THE 5 FIRST DATA CARDS,THE LEVELS, THE    LECT-003
C EXPERIMENTAL DATA,THE SEARCH CONDITIONS,THE NUCLEAR REDUCED MATRIX    LECT-004
C ELEMENTS AND THE FORM FACTORS.                                        LECT-005
C INPUT VARIABLES:  NBET:     NUMBER OF PHONONS                         LECT-006
C                   IPI(J,*): MULTIPLICITY OF PARTICLE FOR J=2          LECT-007
C                             PRODUCT OF CHARGES FOR J=4                LECT-008
C                   IPP(1,*): FIRST LEVEL USING A POTENTIAL             LECT-009
C                   WV(J,*):  FOR J = 1, 2, 3, 12: SEE CALX             LECT-010
C                   NPP:      NUMBER OF OPTICAL POTENTIALS              LECT-011
C                   RM:       MATCHING RADIUS (VALUE READ)              LECT-012
C                   ACONV:    CONVERGENCE PARAMETER FOR POTENTIALS.     LECT-013
C                   IDT:      LENGTH FREE FOR BETA                      LECT-014
C                   H:        INTEGRATION STEP (VALUE READ)             LECT-015
C                   CK:       2*CM/(H BAR)**2                           LECT-016
C                   CM:       NUCLEAR MASS IN MEV                       LECT-017
C                   LO:       LOGICAL CONTROLS. FOR 1, 3, 4, 5, 6, 7, 8,LECT-018
C                             10, 11, 12, 13, 14, 16, 17, 19, 44, 46,   LECT-019
C                             66, 81, 82, 85, 86 AND 99, SEE DESCRIPTIONLECT-020
C                             OF INPUT. 101-200, ARE OPPOSITE TO 1-100. LECT-021
C                   LO(209)=.TRUE. DIRAC POTENTIALS                     LECT-022
C INPUT VARIABLE BY COMMON                                              LECT-023
C /NCOMP/           NFISS:    NUMBER OF FISSION TRANSM. COEFFICIENTS    LECT-024
C                   NRD:      NUMBER OF GAMMA TRANSMISSION COEFFICIENTS LECT-025
C                   NCONT:    NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS  LECT-026
C                   NCONS:    NUMBER OF LEVEL DENSITIES NEEDED          LECT-027
C                   NCOLX:    TOTAL NUMBER OF DISCRETE LEVELS           LECT-028
C OUTPUT VARIABLES: NBET:     NUMBER OF PHONONS PLUS DEFORMATIONS       LECT-029
C                   IPP,PIP:  EQUIVALENT BY CALL: DISPERSION PARAMETERS LECT-030
C                   NBTA(J,I) QUANTUM NUMBERS OF DEFORM. FOR J=17,18    LECT-031
C                   BETA(J,I) NUCLEAR DEFORMATION FOR POTENTIAL J=1,8   LECT-032
C                   VAL(I,N)  (25 OPTICAL +9 FOLDING PARAMETERS)* NPP   LECT-033
C                   FISS:     FISSION DATA FOR COMPOUND NUCLEUS         LECT-034
C                   GAM:      GAMMA DATA FOR COMPOUND NUCLEUS           LECT-035
C                   RM:       MATCHING RADIUS (DEFAULT OPTION)          LECT-036
C                   H:        INTEGRATION STEP (DEFAULT OPTION)         LECT-037
C                   NSPIN:    TWICE THE K-VALUE OF THE ROTATIONAL BAND  LECT-038
C                   ISM:      NUMBER OF INTEGRATION STEPS               LECT-039
C                   IQM:      MAXIMUM L-VALUE OF DEF. IN ROTAT. MODEL   LECT-040
C                   IQMAX:    MAXIMUM L-EXPANSION IN ROTATIONAL MODEL   LECT-041
C                   SCN:      DESCRIPTIONS OF LEVEL DENSITIES           LECT-042
C                   LO(201)=.TRUE. NO REAL SPIN-ORBIT POTENTIAL         LECT-043
C                   LO(202)=.TRUE. NO IMAGINARY SPIN-ORBIT POTENTIAL    LECT-044
C                   LO(203)=.TRUE. NO COULOMB SPIN-ORBIT POTENTIAL      LECT-045
C                   LO(208)=.TRUE. DIAGONAL COULOMB CORRECT. ARE NEEDED LECT-046
C                   LO(229)=.TRUE. REAL SPIN-ORBIT OR DIRAC EQUATION    LECT-047
C                   LO(230)=.TRUE. IMAG. SPIN-ORBIT OR DIRAC EQUATION   LECT-048
C OUTPUT VARIABLE BY COMMON   (SEE INPUT DESCRIPTION FOR MOST OF THEM)  LECT-049
C /ANGL/            THETA1,THETA2,DTHETA,DTHE: INDICATIONS FOR OUTPUT ATLECT-050
C                             EQUIDISTANT ANGLES.                       LECT-051
C /NCOMP/           AZ(6):    DEFORMED SPIN-ORBIT PARAMETERS            LECT-052
C                             SEE ALSO COMMENT IN SUBROUTINE QUAN       LECT-053
C                   BZ(5):    HAUSER-FESHBACH AND MOLDAUER'S PARAMETERS LECT-054
C                   TG0,BN,FNUG,EGD,GGD:  MOLDAUER'S DATA FOR GIANT     LECT-055
C                                         RESONANCE                     LECT-056
C***********************************************************************LECT-057
      IMPLICIT REAL*8 (A-H,O-Z)                                         LECT-058
      DIMENSION VAL(34,1),IPP(2,15,1),PIP(15,1),BETA(9,1),RO(6),GAM(1),FLECT-059
     1ISS(2,1),NBTA(18,1),SCN(7,1),WV(18,1),IPI(11,3)                   LECT-060
      CHARACTER*4 ALEG(6),BLEG(2),CLEG(6)                               LECT-061
      LOGICAL LO(250),LT(6)                                             LECT-062
      COMMON /ANGL/ THETA1,THETA2,DTHETA,DTHE                           LECT-063
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQLECT-064
     1,ACN1,ACN2,AZ(6),BZ(5),TG0,BN,FNUG,EGD,GGD,TG1,SGSQ               LECT-065
      COMMON /INOUT/ MR,MW,MS                                           LECT-066
      DATA BLEG,CLEG /'NOT ','    ',' VOL','UME ',' SCA','LAR ',' VEC','LECT-067
     1TOR '/                                                            LECT-068
      IF (LO(8)) GO TO 1                                                LECT-069
      X2=DSQRT(CK*WV(3,1)*WV(1,1)*WV(2,1)/(WV(1,1)+WV(2,1)))            LECT-070
      GO TO 2                                                           LECT-071
    1 X2=DSQRT(0.125D0*CK*WV(3,1)*(WV(3,1)/CM+2.D0*WV(1,1)+2.D0*WV(2,1))LECT-072
     1*(WV(3,1)/CM+2.D0*WV(1,1))*(WV(3,1)/CM+2.D0*WV(2,1)))/(WV(3,1)/CM+LECT-073
     2WV(1,1)+WV(2,1))                                                  LECT-074
    2 IQM=0                                                             LECT-075
      IF (NBET.EQ.0) GO TO 6                                            LECT-076
C INPUT OF PHONON DEFORMATIONS IN VIBRATIONAL AND ROTATIONAL MODELS     LECT-077
      DO 5 I=1,NBET                                                     LECT-078
      READ (MR,1000) NBTA(17,I),NBTA(18,I),BETA(1,I),K                  LECT-079
      DO 3 J=2,8                                                        LECT-080
    3 BETA(J,I)=BETA(1,I)                                               LECT-081
      IF (LO(5)) READ (MR,1001) (BETA(J,I),J=2,8)                       LECT-082
      WRITE (MW,1002) I,NBTA(17,I),NBTA(18,I),(BETA(J,I),J=1,8)         LECT-083
      IF (LO(116)) GO TO 5                                              LECT-084
      IF (K.EQ.0) K=1                                                   LECT-085
      K=MIN0(K,NCOLX)                                                   LECT-086
      AM3=WV(2,K)**.33333333333333D0                                    LECT-087
      BM3=WV(1,K)**.33333333333333D0                                    LECT-088
      CM3=AM3/(AM3+BM3)                                                 LECT-089
      DM3=1.D0                                                          LECT-090
      IF (LO(6)) DM3=CM3                                                LECT-091
      DO 4 J=1,6                                                        LECT-092
    4 BETA(J,I)=BETA(J,I)*CM3/DM3                                       LECT-093
      BETA(7,I)=BETA(7,I)*CM3**NBTA(17,I)/DM3                           LECT-094
      BETA(8,I)=BETA(8,I)*CM3**NBTA(17,I)/DM3                           LECT-095
      WRITE (MW,1003) K,(BETA(J,I),J=1,8)                               LECT-096
    5 CONTINUE                                                          LECT-097
    6 IF (LO(7)) GO TO 20                                               LECT-098
      IF (LO(101)) GO TO 15                                             LECT-099
C INPUT OF DEFORMATIONS FOR THE ROTATIONAL MODEL                        LECT-100
      READ (MR,1000) IQM,IQMAX,ASPIN,K                                  LECT-101
      NSPIN=IDINT(2.D0*ASPIN+0.1D0)                                     LECT-102
      IQ=NBET+1                                                         LECT-103
      JQ=NBET+IQM/2                                                     LECT-104
      IF (LO(103)) GO TO 7                                              LECT-105
      JQ=NBET+IQM                                                       LECT-106
      IF ((IQM.GT.35).OR.(IQMAX.GT.8)) GO TO 43                         LECT-107
    7 IF (9*JQ.GT.IDT) CALL MEMO('LECT',IDT,9*JQ,2)                     LECT-108
      READ (MR,1001) (BETA(1,I),I=IQ,JQ)                                LECT-109
      M=0                                                               LECT-110
      L=0                                                               LECT-111
      DO 11 I=IQ,JQ                                                     LECT-112
      IF (LO(3)) GO TO 8                                                LECT-113
      L=2*(I-NBET)                                                      LECT-114
      GO TO 9                                                           LECT-115
    8 M=M+2                                                             LECT-116
      IF (M.LE.L) GO TO 9                                               LECT-117
      L=L+2                                                             LECT-118
      M=0                                                               LECT-119
    9 NBTA(17,I)=L                                                      LECT-120
      NBTA(18,I)=M                                                      LECT-121
      DO 10 J=2,8                                                       LECT-122
   10 BETA(J,I)=BETA(1,I)                                               LECT-123
   11 CONTINUE                                                          LECT-124
      IF (LO(5)) READ (MR,1001) ((BETA(J,I),J=2,8),I=IQ,JQ)             LECT-125
      WRITE (MW,1004) IQMAX,ASPIN                                       LECT-126
      WRITE (MW,1005) (I,NBTA(17,I),NBTA(18,I),(BETA(J,I),J=1,8),I=IQ,JQLECT-127
     1)                                                                 LECT-128
      IF (LO(116)) GO TO 14                                             LECT-129
      IF (K.EQ.0) K=1                                                   LECT-130
      K=MIN0(K,NCOLX)                                                   LECT-131
      AM3=WV(2,K)**.33333333333333D0                                    LECT-132
      BM3=WV(1,K)**.33333333333333D0                                    LECT-133
      CM3=AM3/(AM3+BM3)                                                 LECT-134
      DM3=1.D0                                                          LECT-135
      IF (LO(6)) DM3=CM3                                                LECT-136
      DO 13 I=IQ,JQ                                                     LECT-137
      IF (NBTA(18,I).NE.0) GO TO 13                                     LECT-138
      DO 12 K=1,6                                                       LECT-139
   12 BETA(K,I)=BETA(K,I)*CM3/DM3                                       LECT-140
      BETA(7,I)=BETA(7,I)*CM3**NBTA(17,I)/DM3                           LECT-141
      BETA(8,I)=BETA(8,I)*CM3**NBTA(17,I)/DM3                           LECT-142
   13 CONTINUE                                                          LECT-143
      WRITE (MW,1006) K                                                 LECT-144
      WRITE (MW,1005) (I,NBTA(17,I),NBTA(18,I),(BETA(J,I),J=1,8),I=IQ,JQLECT-145
     1)                                                                 LECT-146
   14 NBET=JQ                                                           LECT-147
      GO TO 20                                                          LECT-148
C ANHARMONIC VIBRATIONAL MODEL WITH DIFFERENT DEFORMATIONS              LECT-149
   15 IF (LO(103)) GO TO 20                                             LECT-150
      IF (36.GT.IDT) CALL MEMO('LECT',IDT,36,2)                         LECT-151
      WRITE (MW,1007)                                                   LECT-152
      DO 17 I=1,4                                                       LECT-153
      DO 16 J=1,8                                                       LECT-154
   16 BETA(J,I)=1.D0                                                    LECT-155
      NBTA(17,I)=0                                                      LECT-156
      NBTA(18,I)=0                                                      LECT-157
      IF (LO(5)) READ (MR,1001) (BETA(J,I),J=1,8)                       LECT-158
   17 WRITE (MW,1008) I,NBTA(17,I),(BETA(J,I),J=1,8)                    LECT-159
      NBET=4                                                            LECT-160
      IF (LO(116)) GO TO 20                                             LECT-161
      READ (MR,1009) (NBTA(17,J),J=1,4),K                               LECT-162
      IF (K.EQ.0) K=1                                                   LECT-163
      K=MIN0(K,NCOLX)                                                   LECT-164
      AM3=WV(2,K)**.33333333333333D0                                    LECT-165
      BM3=WV(1,K)**.33333333333333D0                                    LECT-166
      CM3=AM3/(AM3+BM3)                                                 LECT-167
      DM3=1.D0                                                          LECT-168
      IF (LO(6)) DM3=CM3                                                LECT-169
      WRITE (MW,1006) K                                                 LECT-170
      DO 19 I=2,4                                                       LECT-171
      IF (NBTA(17,I).EQ.0) NBTA(17,I)=2                                 LECT-172
      IF (NBTA(17,I).LT.0) NBTA(17,I)=0                                 LECT-173
      DO 18 J=1,6                                                       LECT-174
   18 BETA(J,I)=BETA(J,I)*(CM3/DM3)**(I-1)                              LECT-175
      BETA(7,I)=BETA(7,I)*(CM3**NBTA(17,I)/DM3)**(I-1)                  LECT-176
      BETA(8,I)=BETA(8,I)*(CM3**NBTA(17,I)/DM3)**(I-1)                  LECT-177
   19 WRITE (MW,1010) I,NBTA(17,I),(BETA(J,I),J=1,8)                    LECT-178
C INPUT OF OPTICAL MODEL PARAMETERS                                     LECT-179
   20 W2=10.D20                                                         LECT-180
      LO(201)=.TRUE.                                                    LECT-181
      LO(202)=.TRUE.                                                    LECT-182
      LO(203)=.TRUE.                                                    LECT-183
      LO(208)=.FALSE.                                                   LECT-184
      LT(4)=.TRUE.                                                      LECT-185
      LT(6)=.TRUE.                                                      LECT-186
      W1=0.D0                                                           LECT-187
      W3=X2/(ACONV*WV(3,1))                                             LECT-188
      DO 30 IP=1,NPP                                                    LECT-189
      IJ=IPP(1,1,IP)                                                    LECT-190
      IF (IJ.NE.-1) GO TO 21                                            LECT-191
      IPP(1,1,IP)=1                                                     LECT-192
      WRITE (MW,1011) IP                                                LECT-193
      IJ=1                                                              LECT-194
   21 IF (LO(7)) GO TO 23                                               LECT-195
      AM3=WV(2,IJ)**.33333333333333D0                                   LECT-196
      IF (LO(16)) AM3=AM3+WV(1,IJ)**.33333333333333D0                   LECT-197
      WRITE (MW,1012) IP,AM3                                            LECT-198
      DO 22 I=1,6                                                       LECT-199
      ALEG(I)=BLEG(2)                                                   LECT-200
      READ (MR,1013) VAL(3*I-2,IP),RO(I),VAL(3*I,IP)                    LECT-201
      VAL(3*I-1,IP)=AM3*RO(I)                                           LECT-202
      IF (VAL(3*I-2,IP).EQ.0.D0) GO TO 22                               LECT-203
      W1=DMAX1(W1,VAL(3*I-1,IP)+DLOG(W3*DABS(VAL(3*I-2,IP)))*VAL(3*I,IP)LECT-204
     1)                                                                 LECT-205
      W2=DMIN1(W2,VAL(3*I,IP))                                          LECT-206
   22 CONTINUE                                                          LECT-207
      LT(1)=IPI(2,IJ).EQ.1.OR.VAL(13,IP).EQ.0.D0                        LECT-208
      LT(2)=IPI(2,IJ).EQ.1.OR.VAL(16,IP).EQ.0.D0                        LECT-209
      LO(201)=LO(201).AND.LT(1)                                         LECT-210
      LO(202)=LO(202).AND.LT(2)                                         LECT-211
C OUTPUT OF OPTICAL PARAMETERS                                          LECT-212
      IF (LO(112)) ALEG(2)=BLEG(1)                                      LECT-213
      IF (LT(1).OR.LO(113)) ALEG(5)=BLEG(1)                             LECT-214
      IF (LT(2).OR.LO(114)) ALEG(6)=BLEG(1)                             LECT-215
      ALEG(4)=ALEG(2)                                                   LECT-216
      WRITE (MW,1014) (ALEG(I),VAL(3*I-2,IP),VAL(3*I-1,IP),RO(I),VAL(3*ILECT-217
     1,IP),I=1,6)                                                       LECT-218
      READ (MR,1013) RO(1),VAL(21,IP),VAL(25,IP)                        LECT-219
      READ (MR,1013) VAL(22,IP),RO(2),VAL(24,IP)                        LECT-220
      IF (LO(99)) VAL(21,IP)=0.D0                                       LECT-221
      IF (LO(99)) VAL(24,IP)=0.D0                                       LECT-222
      VAL(19,IP)=IPI(4,IJ)                                              LECT-223
      VAL(20,IP)=AM3*RO(1)                                              LECT-224
      LT(3)=VAL(19,IP).EQ.0.D0                                          LECT-225
      LT(4)=LT(3).AND.LT(4)                                             LECT-226
      ALEG(1)=BLEG(2)                                                   LECT-227
      IF (LT(3).OR.LO(111)) ALEG(1)=BLEG(1)                             LECT-228
      VAL(23,IP)=AM3*RO(2)                                              LECT-229
      LT(5)=VAL(22,IP).EQ.0.OR.IPI(2,IJ).EQ.1                           LECT-230
      LO(203)=LO(203).AND.LT(5)                                         LECT-231
      LT(6)=LT(5).AND.LT(6)                                             LECT-232
      ALEG(2)=BLEG(2)                                                   LECT-233
      IF (LT(5).OR.LO(119)) ALEG(2)=BLEG(1)                             LECT-234
      WRITE (MW,1015) (ALEG(I),VAL(3*I+16,IP),VAL(3*I+17,IP),RO(I),VAL(3LECT-235
     1*I+18,IP),I=1,2),VAL(25,IP)                                       LECT-236
      LO(208)=LO(208).OR.VAL(22,IP).NE.0..OR.(LO(209).AND.VAL(19,IP).NE.LECT-237
     10.)                                                               LECT-238
      W1=DMAX1(W1,VAL(20,IP)+10.D0*VAL(21,IP),VAL(23,IP)+10.D0*VAL(24,IPLECT-239
     1))                                                                LECT-240
      IF (VAL(21,IP).NE.0.D0) W2=DMIN1(W2,VAL(21,IP))                   LECT-241
      IF (VAL(24,IP).NE.0.D0) W2=DMIN1(W2,VAL(24,IP))                   LECT-242
      IF (LO(117)) GO TO 23                                             LECT-243
C INPUT OF FOLDING PARAMETERS                                           LECT-244
      READ (MR,1013) (VAL(I,IP),I=26,34)                                LECT-245
      WRITE (MW,1016) (VAL(I,IP),I=26,34)                               LECT-246
   23 IF (LO(110)) GO TO 30                                             LECT-247
C INPUT OF DISPERSION PARAMETERS                                        LECT-248
      READ (MR,1017) IPPIP,IPP(2,1,IP),(PIP(J,IP),J=3,8)                LECT-249
      READ (MR,1017) IPP(1,2,IP),IPP(2,2,IP),(PIP(J,IP),J=9,14)         LECT-250
      READ (MR,1013) PIP(15,IP)                                         LECT-251
      IF (MOD(IPP(2,1,IP),2).NE.0.OR.MOD(IPP(1,2,IP),2).NE.0.OR.MOD(IPP(LECT-252
     12,2,IP),2).NE.0) GO TO 44                                         LECT-253
      IF ((IPP(1,2,IP).NE.0.AND.VAL(4,IP).EQ.0.D0).OR.(IPP(2,2,IP).NE.0.LECT-254
     1AND.VAL(10,IP).EQ.0.D0)) GO TO 45                                 LECT-255
      IF (PIP(7,IP).NE.0.D0.AND.VAL(13,IP).EQ.0.D0) GO TO 46            LECT-256
      IF (PIP(8,IP).NE.0.D0.AND.VAL(16,IP).EQ.0.D0) GO TO 47            LECT-257
      IF (PIP(15,IP).NE.0.D0.AND.VAL(1,IP).EQ.0.D0) GO TO 48            LECT-258
      IF (IPPIP.EQ.1) GO TO 24                                          LECT-259
      IPPIP=0                                                           LECT-260
      WRITE (MW,1018)                                                   LECT-261
      GO TO 25                                                          LECT-262
   24 IPP(1,1,IP)=-IPP(1,1,IP)                                          LECT-263
      WRITE (MW,1019)                                                   LECT-264
   25 IF (PIP(3,IP).EQ.0.D0) PIP(3,IP)=WV(9*IPPIP+3,IJ)                 LECT-265
      IF (PIP(4,IP).EQ.0.D0) PIP(4,IP)=-6.8D0                           LECT-266
      IF (PIP(5,IP).EQ.0.D0) PIP(5,IP)=PIP(4,IP)                        LECT-267
      WRITE (MW,1020) (PIP(I,IP),I=3,5)                                 LECT-268
      IF (PIP(7,IP).NE.0.D0) WRITE (MW,1021) VAL(13,IP),PIP(7,IP),PIP(3,LECT-269
     1IP)                                                               LECT-270
      IF (PIP(8,IP).NE.0.D0) WRITE (MW,1022) VAL(16,IP),PIP(8,IP),PIP(3,LECT-271
     1IP)                                                               LECT-272
      IF (PIP(15,IP).NE.0.D0) WRITE (MW,1023) VAL(1,IP),PIP(15,IP),PIP(3LECT-273
     1,IP)                                                              LECT-274
      I1=1                                                              LECT-275
      IF (LO(209)) I1=3                                                 LECT-276
      IF (IPP(1,2,IP).LT.0) GO TO 26                                    LECT-277
      WRITE (MW,1024) CLEG(I1),CLEG(I1+1),IPP(1,2,IP),PIP(9,IP)         LECT-278
      IF (IPP(2,1,IP).NE.0.OR.PIP(10,IP).NE.0.D0) WRITE (MW,1025) PIP(4,LECT-279
     1IP),PIP(6,IP),IPP(2,1,IP),PIP(10,IP),PIP(11,IP)                   LECT-280
      GO TO 27                                                          LECT-281
   26 WRITE (MW,1026) CLEG(I1),CLEG(I1+1),IPP(1,2,IP),PIP(9,IP),PIP(10,ILECT-282
     1P),PIP(11,IP)                                                     LECT-283
   27 IF (LO(209)) GO TO 29                                             LECT-284
      IF (IPP(2,2,IP).LT.0) GO TO 28                                    LECT-285
      WRITE (MW,1027) IPP(2,2,IP),PIP(12,IP),PIP(13,IP),PIP(14,IP)      LECT-286
      GO TO 30                                                          LECT-287
   28 IF (PIP(13,IP).EQ.0.D0) PIP(13,IP)=2.D0*PIP(12,IP)                LECT-288
      WRITE (MW,1028) IPP(2,2,IP),PIP(12,IP),PIP(13,IP)                 LECT-289
      GO TO 30                                                          LECT-290
   29 IF (IPP(2,2,IP).GE.0) WRITE (MW,1024) CLEG(5),CLEG(6),IPP(2,2,IP),LECT-291
     1PIP(12,IP)                                                        LECT-292
      IF (IPP(2,2,IP).LT.0) WRITE (MW,1026) CLEG(5),CLEG(6),IPP(2,2,IP),LECT-293
     1PIP(12,IP),PIP(13,IP),PIP(14,IP)                                  LECT-294
   30 CONTINUE                                                          LECT-295
      IF (LO(99)) LO(202)=.FALSE.                                       LECT-296
      IF (LO(107)) GO TO 32                                             LECT-297
      DO 31 IJ=1,NCOLX                                                  LECT-298
      LT(4)=LT(4).AND.IPI(4,IJ).EQ.0.                                   LECT-299
      LT(6)=LT(6).AND.IPI(2,IJ).EQ.1                                    LECT-300
   31 LO(202)=LO(202).AND.IPI(2,IJ).EQ.1                                LECT-301
      W1=20.D0                                                          LECT-302
      LO(201)=LO(202)                                                   LECT-303
      LO(203)=LO(202).OR.LT(6)                                          LECT-304
      LO(208)=LO(209).OR.(.NOT.LO(203))                                 LECT-305
   32 LO(201)=LO(201).AND.LO(202)                                       LECT-306
      LO(229)=(.NOT.LO(201)).OR.LO(209)                                 LECT-307
      LO(230)=(.NOT.LO(202)).OR.LO(209)                                 LECT-308
      LO(13)=.NOT.(LO(113).OR.LO(201))                                  LECT-309
      LO(14)=.NOT.(LO(114).OR.LO(202))                                  LECT-310
      LO(11)=.NOT.(LO(111).OR.LT(4))                                    LECT-311
      LO(19)=.NOT.(LO(119).OR.LT(6))                                    LECT-312
      IF (LO(19)) LO(11)=.TRUE.                                         LECT-313
      LO(208)=LO(208).OR.LO(44)                                         LECT-314
      IF (LO(144).AND.LO(46)) LO(208)=.FALSE.                           LECT-315
C DEFAULT VALUE OF MATCHING RADIUS: MAX(R*A**1/3+10*A)                  LECT-316
C DEFAULT VALUE FOR INTEGRATION STEP: MIN(MIN(A)/2,1/(2*K))             LECT-317
      IF (RM.LE.0.D0) RM=W1                                             LECT-318
      IF (H.LE.0.D0) H=DMIN1(W2/2.D0,0.5D0/X2)                          LECT-319
      ISM=IDINT(RM/H+0.5D0)                                             LECT-320
      H=DFLOAT(ISM)                                                     LECT-321
      H=RM/H                                                            LECT-322
      RM=H*ISM                                                          LECT-323
      WRITE (MW,1029) H,RM                                              LECT-324
      IF (LO(66)) GO TO 33                                              LECT-325
C INPUT OF LIMITS FOR CALCULATION AT EQUIDISTANT ANGLES                 LECT-326
      READ (MR,1001) THETA1,DTHETA,THETA2,DTHE                          LECT-327
      IF (DTHETA.EQ.0.D0) DTHETA=1.D0                                   LECT-328
      IF ((THETA2-THETA1)*DTHETA.LT.0.D0) DTHETA=-DTHETA                LECT-329
      WRITE (MW,1030) THETA1,DTHETA,THETA2,DTHE                         LECT-330
C INPUT OF DEFORMED SPIN-ORBIT PARAMETERS                               LECT-331
   33 AZ(1)=0.D0                                                        LECT-332
      AZ(2)=1.D0                                                        LECT-333
      AZ(3)=1.D0                                                        LECT-334
      AZ(4)=0.D0                                                        LECT-335
      AZ(5)=1.D0                                                        LECT-336
      AZ(6)=1.D0                                                        LECT-337
      IF (LO(104)) GO TO 34                                             LECT-338
      READ (MR,1001) AZ                                                 LECT-339
      WRITE (MW,1031) AZ                                                LECT-340
   34 IF (LO(181)) GO TO 41                                             LECT-341
      READ (MR,1001) BZ                                                 LECT-342
      IF (BZ(1).EQ.0.D0) BZ(1)=1.4142D0                                 LECT-343
      IF (LO(182)) GO TO 35                                             LECT-344
      IF (BZ(2).EQ.0.D0) BZ(2)=3.5D0                                    LECT-345
      IF (BZ(3).EQ.0.D0) BZ(3)=100.D0                                   LECT-346
      WRITE (MW,1032) (BZ(I),I=1,3)                                     LECT-347
      GO TO 41                                                          LECT-348
   35 IF (BZ(3).EQ.0.D0) BZ(3)=1.212D0                                  LECT-349
      IF (BZ(4).EQ.0.D0) BZ(4)=0.78D0                                   LECT-350
      IF (BZ(5).EQ.0.D0) BZ(5)=0.228D0                                  LECT-351
      WRITE (MW,1033) (BZ(I),I=1,5)                                     LECT-352
      IF (LO(185)) GO TO 37                                             LECT-353
      WRITE (MW,1034) NFISS                                             LECT-354
      DO 36 I=1,NFISS                                                   LECT-355
      READ (MR,1001) FISS(1,I),FISS(2,I)                                LECT-356
      IF (FISS(2,I).LT.0.5D0) FISS(2,I)=0.D0                            LECT-357
   36 WRITE (MW,1035) FISS(1,I),FISS(2,I)                               LECT-358
   37 IF (LO(186)) GO TO 39                                             LECT-359
      WRITE (MW,1036)                                                   LECT-360
      IF (NRD.GT.0) GO TO 38                                            LECT-361
      READ (MR,1001) TG0,BN,FNUG,EGD,GGD                                LECT-362
      READ (MR,1001) SCN(7,1),(SCN(I,1),I=1,6)                          LECT-363
      IF (BN.EQ.0.D0) BN=8.D0                                           LECT-364
      IF (FNUG.LT.1.D0) FNUG=20.D0                                      LECT-365
      IF (TG0.EQ.0.D0) LO(86)=.FALSE.                                   LECT-366
      WRITE (MW,1037) TG0,BN,FNUG,EGD,GGD                               LECT-367
      WRITE (MW,1038)                                                   LECT-368
      J=1                                                               LECT-369
      WRITE (MW,1039) J,(SCN(I,J),I=1,7)                                LECT-370
      NA=IDINT(WV(2,1)+WV(1,1)+.5D0)                                    LECT-371
      CALL LDEN(NA,SCN(1,1))                                            LECT-372
      GO TO 39                                                          LECT-373
   38 READ (MR,1001) (GAM(I),I=1,NRD)                                   LECT-374
      WRITE (MW,1040) (GAM(I),I=1,NRD)                                  LECT-375
   39 IF (NCONT.EQ.0) GO TO 41                                          LECT-376
      WRITE (MW,1041)                                                   LECT-377
      J1=1+NCONS-NCONT                                                  LECT-378
      DO 40 J=J1,NCONS                                                  LECT-379
      READ (MR,1001) SCN(7,J),(SCN(I,J),I=1,6)                          LECT-380
      WRITE (MW,1039) J,(SCN(I,J),I=1,7)                                LECT-381
      NA=IDINT(WV(2,NCOLX+J-NCONS)+.5D0)                                LECT-382
   40 CALL LDEN(NA,SCN(1,J))                                            LECT-383
   41 DO 42 I=1,100                                                     LECT-384
   42 LO(I+100)=.NOT.LO(I)                                              LECT-385
      RETURN                                                            LECT-386
   43 WRITE (MW,1042) IQM,IQMAX                                         LECT-387
      GO TO 50                                                          LECT-388
   44 WRITE (MW,1043) IP,IPP(1,2,IP),IPP(2,2,IP),IPP(2,1,IP)            LECT-389
      GO TO 50                                                          LECT-390
   45 WRITE (MW,1044) IP,(IPP(I,2,IP),VAL(6*I-2,IP),I=1,2)              LECT-391
      GO TO 49                                                          LECT-392
   46 WRITE (MW,1045) IP,IP,PIP(7,IP),VAL(13,IP)                        LECT-393
      GO TO 49                                                          LECT-394
   47 WRITE (MW,1046) IP,IP,PIP(8,IP),VAL(16,IP)                        LECT-395
      GO TO 49                                                          LECT-396
   48 WRITE (MW,1047) IP,IP,PIP(15,IP),VAL(1,IP)                        LECT-397
   49 WRITE (MW,1048)                                                   LECT-398
   50 WRITE (MW,1049)                                                   LECT-399
      STOP                                                              LECT-400
 1000 FORMAT (2I5,F10.5,I5)                                             LECT-401
 1001 FORMAT (7F10.5)                                                   LECT-402
 1002 FORMAT (10X,'PHONON',I3,5X,'L =',I3,5X,'K =',I3,5X,'BETA =',8F8.5)LECT-403
 1003 FORMAT (12X,'AFTER HEAVY ION CORRECTION I =',I2,'  BETA =',8F8.5) LECT-404
 1004 FORMAT (/10X,'MULTIPOLE EXPANSION UP TO IQMAX =',I3,20X,'K =',F7.2LECT-405
     1,' BAND')                                                         LECT-406
 1005 FORMAT (/' BETA(I,J) FOR  L   K ',8X,'V',9X,'W',8X,'VS',8X,'WS',7XLECT-407
     1,'VSO',7X,'WSO',6X,'COUL S.O. COUL'/(5X,I5,5X,I2,2X,I2,2X,8F10.5))LECT-408
 1006 FORMAT (/10X,'AFTER HEAVY ION CORRECTION I =',I3/)                LECT-409
 1007 FORMAT (/10X,'RATIOS OF ANHARMONIC DEFORMATIONS'/25X,'V',9X,'W',8XLECT-410
     1,'VS',8X,'WS',7X,'VSO',7X,'WSO',6X,'COUL S.O. COUL')              LECT-411
 1008 FORMAT (' ORDER',I3,6X,I3,2X,8F10.5)                              LECT-412
 1009 FORMAT (14I5)                                                     LECT-413
 1010 FORMAT (' ORDER',I3,'  IQ =',I3,2X,8F10.5)                        LECT-414
 1011 FORMAT (/' ***** NO STATE FOR THE POTENTIAL',I3,' *** WE USE THE GLECT-415
     1ROUND STATE'/)                                                    LECT-416
 1012 FORMAT (//' OPTICAL POTENTIALS  **',I3,' **     REDUCED RADIUS MULLECT-417
     1TIPLIED BY  ',D15.6/)                                             LECT-418
 1013 FORMAT (3F10.5)                                                   LECT-419
 1014 FORMAT (2X,A4,'DEFORMED  VOLUME/SCALAR REAL POTENTIAL'/14X,'DEPTH'LECT-420
     1,F12.6,' MEV   RADIUS',F10.6,' FERMI (REDUCED VALUE',F9.6,')    DILECT-421
     2FFUSENESS',F9.6,' FERMI'//2X,A4,'DEFORMED  VOLUME/SCALAR IMAGINARYLECT-422
     3 POTENTIAL'/14X,'DEPTH',F12.6,' MEV   RADIUS',F10.6,' FERMI (REDUCLECT-423
     4ED VALUE',F9.6,')    DIFFUSENESS',F9.6,' FERMI'//  2X,A4,'DEFORMEDLECT-424
     5  SURFACE/VECTOR REAL POTENTIAL'/14X,'DEPTH',F12.6,' MEV   RADIUS'LECT-425
     6,F10.6,' FERMI (REDUCED VALUE',F9.6,')    DIFFUSENESS',F9.6,' FERMLECT-426
     7I'//2X,A4,'DEFORMED  SURFACE/VECTOR IMAGINARY POTENTIAL'/14X,'DEPTLECT-427
     8H',F12.6,' MEV   RADIUS',F10.6,' FERMI (REDUCED VALUE',F9.6,')    LECT-428
     9DIFFUSENESS',F9.6,' FERMI'//2X,A4,'DEFORMED  REAL SPIN-ORBIT/TENSOLECT-429
     AR POTENTIAL'/14X,'DEPTH',F12.6,' MEV   RADIUS',F10.6,' FERMI (REDULECT-430
     BCED VALUE',F9.6,')    DIFFUSENESS',F9.6,' FERMI'//2X,A4,'DEFORMED LECT-431
     C IMAGINARY SPIN-ORBIT/TENSOR POTENTIAL'/14X,'DEPTH',F12.6,' MEV   LECT-432
     DRADIUS',F10.6,' FERMI (REDUCED VALUE',F9.6,')    DIFFUSENESS',F9.6LECT-433
     E,' FERMI')                                                        LECT-434
 1015 FORMAT (/2X,A4,'DEFORMED  COULOMB POTENTIAL'/' PRODUCT OF CHARGES'LECT-435
     1,F9.0,10X,'RADIUS',F10.6,' FERMI (REDUCED VALUE',F9.6,')    DIFFUSLECT-436
     2ENESS',F9.6,' FERMI'//2X,A4,'DEFORMED  SPIN-ORBIT COULOMB POTENTIALECT-437
     3L'/14X,'DEPTH',F12.6,' MEV   RADIUS',F10.6,' FERMI (REDUCED VALUE'LECT-438
     4,F9.6,')    DIFFUSENESS',F9.6,' FERMI'/14X,'THIRD CHARGE PARAMETERLECT-439
     5',F9.6)                                                           LECT-440
 1016 FORMAT (/' *** FOLDING MODEL ***'/' REAL PART      V =',F10.4,6X,'LECT-441
     1R =',F10.4,6X,'A =',F10.4/' IMAGINARY PART V =',F10.4,6X,'R =',F10LECT-442
     2.4,6X,'A =',F10.4/' COULOMB PART   V =',F10.4,6X,'R =',F10.4,6X,'ALECT-443
     3 =',F10.4/)                                                       LECT-444
 1017 FORMAT (2I5,6F10.5)                                               LECT-445
 1018 FORMAT (' USE OF CENTER OF MASS ENERGIES')                        LECT-446
 1019 FORMAT (' USE OF LABORATORY ENERGIES')                            LECT-447
 1020 FORMAT (' IMAGINARY DEPTHS READ FOR',F12.6,' MEV   FERMI ENERGY:',LECT-448
     1F12.6,' MEV   TRESHOLD ENERGY:',F12.6)                            LECT-449
 1021 FORMAT (' EXPONENTIAL DECREASE OF REAL SPIN-ORBIT POTENTIAL:',3X,FLECT-450
     112.6,'*EXP(-',F10.6,'(E-',F10.6,')) MEV')                         LECT-451
 1022 FORMAT (' LINEAR DECREASE OF IMAGINARY SPIN-ORBIT POTENTIAL:',3X,FLECT-452
     112.6,'-',F10.6,'*(E-',F10.6,') MEV')                              LECT-453
 1023 FORMAT (' EXPONENTIAL DECREASE OF HARTREE-FOCK POTENTIAL:',6X,F12.LECT-454
     16,'*EXP(-',F10.6,'(E-',F10.6,')) MEV')                            LECT-455
 1024 FORMAT (2A4,':   POWER =',I3,5X,'B =',F10.4)                      LECT-456
 1025 FORMAT (' FOR ENERGIES ''E'' SUCH THAT |',F12.6,'-''E''| >',F12.6,LECT-457
     1' MEV'/' CORRECTIONS WITH POWER',I3,' FOR NEGATIVES ENERGIES AND CLECT-458
     2OEFFICIENT',F12.6,' FOR POSITIVE ENERGIES'/15X,'DAMPING FACTOR',F1LECT-459
     32.6)                                                              LECT-460
 1026 FORMAT (2A4,':   POWER =',I3,5X,'SUM OF B1 =',F10.4,5X,'AND B2 =',LECT-461
     1F10.4,5X,'CONTRIBUTION OF B1 =',F10.5)                            LECT-462
 1027 FORMAT (' SURFACE:   POWER =',I3,5X,'B =',F10.4,5X,' DECREASING RALECT-463
     1TE =',F10.6,5X,' NON LOCALITY PARAMETER =',F10.4)                 LECT-464
 1028 FORMAT (' SURFACE:   POWER =',I3,5X,'DIFFERENCE OF B1 =',F10.4,5X,LECT-465
     1'AND B2 =',F10.4)                                                 LECT-466
 1029 FORMAT (/' INTEGRATION STEP SIZE =',F8.5,10X,'MATCHING RADIUS =',FLECT-467
     18.3,' FERMI')                                                     LECT-468
 1030 FORMAT (/' SCATTERING ANGLES FROM',F7.3,' IN STEPS OF',F7.3,' UP TLECT-469
     1O',F8.3,' DEGREES   AVERAGED WITH +/-',F8.3,' DEGREES'/)          LECT-470
 1031 FORMAT (10X,'****** AZ ******',D15.8)                             LECT-471
 1032 FORMAT (/' SQUARE ROOT OF ELASTIC ENHANCEMENT FACTOR',8X,D15.8/' SLECT-472
     1PIN CUT-OFF PARAMETER',27X,D15.8/' SQUARE ROOT OF LEVEL DENSITY PALECT-473
     2RAMETER',11X,D15.8)                                               LECT-474
 1033 FORMAT (/' SQUARE ROOT OF ELASTIC ENHANCEMENT FACTOR WITHOUT FLUCTLECT-475
     1UATIONS',7X,D15.8/' PARTICLE WIDTH FLUCTUATION DEGREE OF FREEDOM',LECT-476
     225X,D15.8/' PARAMETERS OF MOLDAUER''S FORMULA',22X,3D15.8)        LECT-477
 1034 FORMAT (/I5,' FISSION DATA')                                      LECT-478
 1035 FORMAT (10X,2D15.8)                                               LECT-479
 1036 FORMAT (/' GAMMA DATA')                                           LECT-480
 1037 FORMAT (5X,'TG0:',D13.6,6X,'BN:',D13.6,4X,'FNUG:',D13.6,5X,'EGD:',LECT-481
     1D13.6,5X,'GGD:',D13.6)                                            LECT-482
 1038 FORMAT (' DENSITY OF STATES GIVEN BY')                            LECT-483
 1039 FORMAT (' READ VALUES'/(1X,I3,'  SA:',D13.6,6X,'UX:',D13.6,5X,'TAULECT-484
     1:',D13.6,6X,'SG:',D13.6/28X,'E0:',D13.6,6X,'EX:',D13.6,7X,'Z:',F5.LECT-485
     20))                                                               LECT-486
 1040 FORMAT (8D15.8)                                                   LECT-487
 1041 FORMAT (' DENSITY OF STATES FOR CONTINUUM GIVEN BY')              LECT-488
 1042 FORMAT (' IQM =',I3,' OR IQMAX =',I3,' ARE LARGER THAN THE MAXIMUMLECT-489
     1 VALUES 35 OR 8 OF THE ASYMMETRIC ROTATIONAL MODEL')              LECT-490
 1043 FORMAT (' FOR DISPERSION RELATIONS OF POTENTIAL',I3,' ALL THE FOLLLECT-491
     1OWING INTEGERS MUST BE EVEN'/10X,'NV =',I4,10X,'NS =',I4,10X,'N2 =LECT-492
     2',I4)                                                             LECT-493
 1044 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED FOR DISPERSION RELATILECT-494
     1ONS BECAUSE AN IMAGINARY STRENGTH IS 0:'/10X,'NV =',I3,'  WV =',D1LECT-495
     23.6,10X,'NS =',I3,'  WS =',D13.6)                                 LECT-496
 1045 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THELECT-497
     1 REAL SPIN-ORBIT OF WHICH THE STRENGTH IS 0':/10X,'PIP(7,',I2,') =LECT-498
     2',D13.6,'  VLS =',D13.6)                                          LECT-499
 1046 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THELECT-500
     1 IMAGINARY SPIN-ORBIT OF WHICH THE STRENGTH IS 0':/10X,'PIP(8,',I2LECT-501
     2,') =',D13.6,'  WLS =',D13.6)                                     LECT-502
 1047 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THELECT-503
     1 HARTREE-FOCK POTENTIAL OF WHICH THE STRENGTH IS 0':/10X,'PIP(15,'LECT-504
     2,I2,') =',D13.6,'  V =',D13.6)                                    LECT-505
 1048 FORMAT (' GIVE VALUES FOR ANOTHER ENERGY'/)                       LECT-506
 1049 FORMAT (//' IN LECT  ... STOP ...')                               LECT-507
      END                                                               LECT-508
C 01/01/04                                                      ECIS03  LDEN-000
      SUBROUTINE LDEN(NA,SCN)                                           LDEN-001
C COMPOUND NUCLEUS PREPARATORY COMPUTATIONS ADDED BY MOLDAUER WITH PRSL LDEN-002
C INPUT VARIABLES: NA:      TOTAL MASS OF THE COMPOUND NUCLEUS          LDEN-003
C                  SCN:     DESCRIPTIONS OF LEVEL DENSITIES             LDEN-004
C OUTPUT VARIABLES:                                                     LDEN-005
C IN SCN:  1-SA  2-UX   3-TAU  4-SG   5-E0   6-EX   7-NZ                LDEN-006
C DATA PZ, PN, SZ AND SN ARE THE ONE USED BY THE CODE GNASH             LDEN-007
C***********************************************************************LDEN-008
      IMPLICIT REAL*8 (A-H,O-Z)                                         LDEN-009
      DIMENSION SCN(7)                                                  LDEN-010
      REAL*4 PZ(100),PN(150),SZ(100),SN(150)                            LDEN-011
      COMMON /INOUT/ MR,MW,MS                                           LDEN-012
      DATA PZ /0.,5.05,0.,4.50,0.,3.95,0.,3.40,0.,2.90,0.,2.46,0.,2.09,0LDEN-013
     1.,1.62,0.,1.62,0.,1.83,0.,1.73,0.,1.35,0.,1.54,0.,1.28,0.26,0.88,0LDEN-014
     2.19,1.35,-.05,1.52,-.09,1.17,.04,1.24,0.29,1.09,.26,1.17,.23,1.15,LDEN-015
     3-.08,1.35,0.34,1.05,.28,1.27,0.,1.05,0.,1.,.09,1.2,.2,1.4,.93,1.,-LDEN-016
     4.2,1.19,.09,.97,0.,.92,.11,.68,.05,.68,-.22,.79,.09,.69,.01,.72,0.LDEN-017
     5,.4,.16,.73,0.,.46,.17,.89,0.,.79,0.,.89,0.,.81,-.06,.69,-.2,.71,-LDEN-018
     6.12,.72,0.,.77,2*0./                                              LDEN-019
      DATA PN /0.,5.25,0.,4.70,0.,4.15,0.,3.58,0.,3.05,0.,2.67,0.,1.8,0.LDEN-020
     1,1.67,0.,1.86,0.,2.04,0.,1.64,0.,1.44,0.,1.54,0.,1.3,0.,1.27,0.,1.LDEN-021
     229,.08,1.41,-.08,1.5,-.05,2.24,-.47,1.43,-.15,1.44,.06,1.56,.25,1.LDEN-022
     357,-.16,1.46,0.,.93,.01,.62,-.5,1.42,.13,1.52,-.65,.8,-.08,1.29,-.LDEN-023
     447,1.25,-.44,.97,.08,1.65,-.11,1.26,-.46,1.06,0.22,1.55,-.07,1.37,LDEN-024
     50.1,1.2,-.27,.92,-.35,1.19,0.,1.05,-.25,1.61,-.21,.9,-.21,.74,-.38LDEN-025
     6,.72,-.34,.92,-.26,.94,.01,.65,-.36,.83,.11,.67,.05,1.,.51,1.04,.3LDEN-026
     73,.68,-.27,.81,.09,.75,.17,.86,.14,1.1,-.22,.84,-.47,.48,.02,.88,.LDEN-027
     824,.52,.27,.41,-.05,.38,.15,.67,0.,.61,0.,.78,0.,.67,0.,.67,0.,.79LDEN-028
     9,0.,.6,.04,.64,-.06,.45,.05,.26,-.22,.39,0.,.39/                  LDEN-029
      DATA SZ /.19,.38,.57,.75,.94,1.13,1.32,1.51,1.70,2.10,2.91,4.17,5.LDEN-030
     172,7.8,8.97,9.7,10.1,10.7,11.38,12.07,12.55,13.24,13.93,14.71,15.5LDEN-031
     23,16.37,17.36,18.6,18.7,18.01,17.87,17.08,16.6,16.75,16.5,16.35,16LDEN-032
     3.22,16.41,16.89,16.43,16.68,16.73,17.45,17.29,17.44,17.82,18.62,18LDEN-033
     4.27,19.39,19.91,19.14,18.26,17.4,16.42,15.77,14.37,13.91,13.1,13.1LDEN-034
     51,11.43,10.89,10.75,10.62,10.41,10.21,9.85,9.47,9.03,8.61,8.13,7.4LDEN-035
     66,7.48,7.2,7.13,7.06,6.78,6.64,6.64,7.68,7.89,8.41,8.49,7.88,6.3,5LDEN-036
     7.47,4.78,4.37,4.17,4.13,4.32,4.55,5.04,5.28,6.06,6.28,6.87,7.20,7.LDEN-037
     874,2*0./                                                          LDEN-038
      DATA SN /0.62,1.24,1.85,2.47,3.09,3.71,4.33,4.95,5.56,6.18,6.8,7.5LDEN-039
     13,7.55,7.21,7.44,8.07,8.94,9.81,10.6,11.39,12.54,13.68,14.34,14.19LDEN-040
     2,13.83,13.5,13.,12.13,12.6,13.26,14.13,14.92,15.52,16.38,17.16,17.LDEN-041
     355,18.03,17.59,19.03,18.71,18.8,18.99,18.46,18.25,17.76,17.38,16.7LDEN-042
     42,15.62,14.38,12.88,13.23,13.81,14.9,14.86,15.76,16.2,17.62,17.73,LDEN-043
     518.16,18.67,19.69,19.51,20.17,19.48,19.98,19.83,20.2,19.72,19.87,1LDEN-044
     69.24,18.44,17.61,17.1,16.16,15.9,15.33,14.76,13.54,12.63,10.65,10.LDEN-045
     71,8.89,10.25,9.79,11.39,11.72,12.43,12.96,13.43,13.37,12.96,12.11,LDEN-046
     811.92,11.,10.8,10.42,10.39,9.69,9.27,8.93,8.57,8.02,7.59,7.33,7.23LDEN-047
     9,7.05,7.42,6.75,6.6,6.38,6.36,6.49,6.25,5.85,5.48,4.53,4.3,3.39,2.LDEN-048
     A35,1.66,.81,0.46,-.96,-1.69,-2.53,-3.16,-1.87,-.41,.71,1.66,2.62,3LDEN-049
     B.22,3.76,4.1,4.46,4.83,5.09,5.18,5.17,5.1,5.01,4.97,5.09,5.03,4.93LDEN-050
     C,5.28,5.49,5.50,5.37,5.30/                                        LDEN-051
      NZ=IDINT(SCN(7)+.1D0)                                             LDEN-052
      IF (NZ.LE.0) NZ=NA/2                                              LDEN-053
      NN=NA-NZ                                                          LDEN-054
      AA=NA                                                             LDEN-055
      SC=0.D0                                                           LDEN-056
      PR=0.D0                                                           LDEN-057
C SA GIVEN BY P. J. BRANCAZIO AND A. G. W. CAMERON, CANADIAN JOURNAL OF LDEN-058
C PHYSICS 47 (1969) 1029.                                               LDEN-059
      IF (NZ.GT.100.OR.NN.GT.150) GO TO 1                               LDEN-060
      SC=DBLE(SN(NN)-SZ(NZ))                                            LDEN-061
      PR=DBLE(PN(NN)+PZ(NZ))                                            LDEN-062
      ND=MIN0(IABS(NZ-2),IABS(NZ-8),IABS(NZ-20),IABS(NZ-28),IABS(NZ-50),LDEN-063
     1IABS(NZ-82),IABS(NZ-126),IABS(NN-2),IABS(NN-8),IABS(NN-20),IABS(NNLDEN-064
     2-28),IABS(NN-50),IABS(NN-82),IABS(NN-126),IABS(NN-184))           LDEN-065
    1 SA=DABS((.0091D0*(SC-.23D0*DFLOAT(ND))+.143D0)*AA)                LDEN-066
      IF (SCN(1).EQ.0.D0) SCN(1)=SA                                     LDEN-067
      UX=2.5D0+150.D0/AA                                                LDEN-068
      IF (SCN(2).EQ.0.D0) SCN(2)=UX                                     LDEN-069
      TAU=1.D0/(DSQRT(SCN(1)/SCN(2))-1.5D0/SCN(2))                      LDEN-070
      IF (TAU.GT.0.D0) GO TO 2                                          LDEN-071
      SCN(3)=1.D0/(DSQRT(SA/UX)-1.5D0/UX)                               LDEN-072
      WRITE (MW,1000) TAU,SCN(3)                                        LDEN-073
    2 IF (SCN(3).EQ.0.D0) SCN(3)=TAU                                    LDEN-074
      SG=DSQRT(0.0888D0*DSQRT(SCN(1)*SCN(2))*AA**0.666666667D0)         LDEN-075
      IF (SCN(4).EQ.0.D0) SCN(4)=SG                                     LDEN-076
      EX=DABS(SCN(2)+PR)                                                LDEN-077
      E0=EX-SCN(3)*(2.D0*DSQRT(SCN(1)*SCN(2))+DLOG(SCN(3)/(16.9705627D0*LDEN-078
     1SCN(1)**.25D0*SCN(2)**1.25D0*SCN(4))))                            LDEN-079
      IF (SCN(5).EQ.0.D0) SCN(5)=E0                                     LDEN-080
      IF (SCN(6).EQ.0.D0) SCN(6)=EX                                     LDEN-081
      WRITE (MW,1001) (SCN(J),J=1,7)                                    LDEN-082
      RETURN                                                            LDEN-083
 1000 FORMAT (5X,'TEMPERATURE',F10.5,' REPLACED BY',F10.5)              LDEN-084
 1001 FORMAT (' USED VALUES'/(4X,'  SA:',D13.6,6X,'UX:',D13.6,5X,'TAU:',LDEN-085
     1D13.6,6X,'SG:',D13.6/28X,'E0:',D13.6,6X,'EX:',D13.6,7X,'Z:',F5.0))LDEN-086
      END                                                               LDEN-087
C 01/01/04                                                      ECIS03  DEPH-000
      SUBROUTINE DEPH(NCOLL,NCOLS,WV,IPI,MF,MS1,MS2,NCT,KCC,KBA,KAB,KBC,DEPH-001
     1KTGR,NGR,NPR,JTX,NIV,NJC,NJX,NJY,NMAX,LO)                         DEPH-002
C HELICITY QUANTUM NUMBERS AND CHOICE OF OBSERVABLES FOR THE OUTPUT     DEPH-003
C INPUT VARIABLES: NCOLL:  NUMBER OF COUPLED NUCLEAR LEVELS             DEPH-004
C                  NCOLS:  NUMBER OF LEVELS WITH ANGULAR DISTRIBUTION   DEPH-005
C                  WV,IPI:     SEE CALX                                 DEPH-006
C                  NGR:    INDICATION FOR PLOTS OF CROSS-SECTION: NUMBERDEPH-007
C                          OF POWERS OF 10 BY 100 POINTS                DEPH-008
C                  NPR:    INDICATIONS FOR PLOTS OF POLARISATIONS:      DEPH-009
C                          1 FIRST ONE,2 SECOND,3 FIRST AND SECOND ..ETCDEPH-010
C          ON A BINARY BASIS. THE FIRST VALUE OF NGR AND NPR IS FOR THE DEPH-011
C          GROUND STATE AND THE SECOND ONE FOR THE EXCITED STATES       DEPH-012
C                  NMAX:   MAXIMUM NUMBER OF AMPLITUDES                 DEPH-013
C                  LO:     LOGICAL CONTROLS                             DEPH-014
C OUTPUT VARIABLES:MF:     TABLE OF QUANTUM NUMBERS AND OBSERVABLES     DEPH-015
C                  IPI(J=5 TO 8,I): BEGINNING AND END FOR EACH LEVEL IN DEPH-016
C                       THE TWO PARTS OF THE TABLE MF                   DEPH-017
C                  MS1,MS2:   LARGEST PARTICLE AND TARGET MULTIPLICITIESDEPH-018
C                  NCT:   NUMBER OF EQUATIONS FOR EACH PARITY IN 1 AND 2DEPH-019
C                         NUMBER OF SOLUTIONS FOR EACH PARITY IN 3 AND 4DEPH-020
C                         NUMBER OF COMP. NUCL. COEFF. IN 5 AND 6       DEPH-021
C                  KCC:   NUMBER OF INDEPENDENT COMPOUND NUCLEUS COEFF. DEPH-022
C                  KBA:   NUMBER OF INDEPENDENT COUPLED AMPLITUDES      DEPH-023
C                  KAB:   MAXIMUM NUMBER OF COUPLED EQUATIONS           DEPH-024
C                  KBC:   MAXIMUM NUMBER OF SOLUTIONS NEEDED            DEPH-025
C                  KTGR:  LENGTH OF THE TABLE MF                        DEPH-026
C                  JTX:   MAXIMUM NUMBER OF KINDS OF POLARISATION       DEPH-027
C                  NIV(*,*,3): ADDRESS OF COULOMB INTEGRALS             DEPH-028
C                  NJC:    1+MAXIMUM NUMBER OF OBSERV. AT EQUID. ANGLES DEPH-029
C                  NJX:    NUMBER OF SETS OF COULOMB FUNCT. AND INTEGRALDEPH-030
C                  NJY:    MAXIMUM LABEL OF NON STANDARD OBSERVABLE     DEPH-031
C                                                                       DEPH-032
C   **** TABLE MF **** FIRST PART                                       DEPH-033
C FOR EACH INDEPENDENT AMPLITUDE (WITH RESPECT TO PARITY ONLY)          DEPH-034
C  MF(1,*)  HELICITY OF THE OUTGOING PARTICLE                           DEPH-035
C  MF(2,*)  HELICITY OF THE RESIDUAL TARGET                             DEPH-036
C  MF(3,*)  HELICITY OF THE INCOMING PARTICLE                           DEPH-037
C  MF(4,*)  HELICITY OF THE TARGET                                      DEPH-038
C    THESE HELICITIES ARE NUMBERED FROM THE LOWEST VALUE                DEPH-039
C  MF(5,*)  TWICE THE MAGNETIC QUANTUM NUMBER OF THE ROTATION MATRIX    DEPH-040
C    ELEMENTS RELATED TO THE INITIAL STATE                              DEPH-041
C  MF(6,*)  TWICE THE MAGNETIC QUANTUM NUMBER OF THE ROTATION MATRIX    DEPH-042
C    ELEMENTS FOR THE FINAL STATE; HOWEVER, WITH ABSOLUTE VALUE 99999 ITDEPH-043
C    INDICATES THAT THE LAST COMPUTED MATRIX ELEMENTS CAN BE USED WITH  DEPH-044
C    THE SIGN OF MF(10,*). A RE-ORDERING OF THE HELICITIES HAS BEEN DONEDEPH-045
C  MF(7,*)  DIRECT ADDRESS OF THE AMPLITUDE IN AN ONE-ROW MATRIX        DEPH-046
C  MF(8,*)  DIRECT ADDRESS OF PARITY RELATED AMPLITUDE OR 0 IF THERE IS DEPH-047
C    NONE                                                               DEPH-048
C  MF(9,*)  RELATIVE SIGN BETWEEN THE AMPLITUDES MF(7,*) AND MF(8,*)    DEPH-049
C  MF(10,*) RELATIVE SIGN FOR ROTATION MATRIX ELEMENTS FOR MF(6,*)=99999DEPH-050
C***********************************************************************DEPH-051
      IMPLICIT REAL*8 (A-H,O-Z)                                         DEPH-052
      LOGICAL LO(250)                                                   DEPH-053
      DIMENSION IPI(11,3),MF(10,1),NGR(2),NPR(2),NIV(NCOLL,NCOLL,3),WV(1DEPH-054
     18,1),NCT(6)                                                       DEPH-055
      COMMON /INOUT/ MR,MW,MS                                           DEPH-056
      NJC=2                                                             DEPH-057
      NJY=0                                                             DEPH-058
      JTX=0                                                             DEPH-059
      NCT(5)=0                                                          DEPH-060
      NCT(6)=0                                                          DEPH-061
      KCC=0                                                             DEPH-062
      MS1=0                                                             DEPH-063
      MS2=0                                                             DEPH-064
      NI=IPI(2,1)                                                       DEPH-065
      MI=IPI(3,1)                                                       DEPH-066
C LOOP ON THE NUCLEAR LEVELS                                            DEPH-067
      DO 13 I=1,NCOLS                                                   DEPH-068
      IP=MOD(IPI(1,I)+IPI(1,1),2)                                       DEPH-069
      KI=KCC+1                                                          DEPH-070
      IPI(6,I)=KI                                                       DEPH-071
      NJ=IPI(2,I)                                                       DEPH-072
      MJ=IPI(3,I)                                                       DEPH-073
      MS1=MAX0(MS1,NJ)                                                  DEPH-074
      MS2=MAX0(MS2,MJ)                                                  DEPH-075
      DO 10 I1=1,NJ                                                     DEPH-076
      J1=NJ+1-I1                                                        DEPH-077
      DO 9 I2=1,MJ                                                      DEPH-078
      J2=MJ+1-I2                                                        DEPH-079
      DO 8 I3=1,NI                                                      DEPH-080
      J3=NI+1-I3                                                        DEPH-081
      DO 7 I4=1,MI                                                      DEPH-082
      J4=MI+1-I4                                                        DEPH-083
      IF (KCC.LT.KI) GO TO 3                                            DEPH-084
C SEARCH FOR PARITY CONJUGATE AMONG THE AMPLITUDES ALREADY OBTAINED     DEPH-085
      DO 1 J=KI,KCC                                                     DEPH-086
      IF ((MF(1,J).EQ.J1).AND.(MF(2,J).EQ.J2).AND.(MF(3,J).EQ.J3).AND.(MDEPH-087
     1F(4,J).EQ.J4)) GO TO 2                                            DEPH-088
    1 CONTINUE                                                          DEPH-089
      GO TO 3                                                           DEPH-090
    2 MF(8,J)=I1+NJ*(I2-1+MJ*(I4-1+MI*(I3-1)))                          DEPH-091
      MF(9,J)=1-2*MOD(IP+J1+I2+J3+I4,2)                                 DEPH-092
      GO TO 7                                                           DEPH-093
C NEW AMPLITUDE                                                         DEPH-094
    3 KCC=KCC+1                                                         DEPH-095
      IF (5*KCC.GE.NMAX) CALL MEMO('DEPH',NMAX,5*KCC,2)                 DEPH-096
      MF(1,KCC)=I1                                                      DEPH-097
      MF(2,KCC)=I2                                                      DEPH-098
      MF(3,KCC)=I3                                                      DEPH-099
      MF(4,KCC)=I4                                                      DEPH-100
      MF(5,KCC)=2*(MF(3,KCC)-MF(4,KCC))-IPI(2,1)+IPI(3,1)               DEPH-101
      MF(6,KCC)=2*(MF(1,KCC)-MF(2,KCC))-IPI(2,I)+IPI(3,I)               DEPH-102
      MF(7,KCC)=I1+NJ*(I2-1+MJ*(I4-1+MI*(I3-1)))                        DEPH-103
      MF(8,KCC)=0                                                       DEPH-104
      MF(9,KCC)=0                                                       DEPH-105
      MF(10,KCC)=0                                                      DEPH-106
      IF (KCC.LE.KI) GO TO 7                                            DEPH-107
C SEARCH FOR RELATED ROTATION MATRIX ELEMENTS                           DEPH-108
      KK=KCC-1                                                          DEPH-109
      M1=IABS(MF(5,KCC)+MF(6,KCC))/2                                    DEPH-110
      M2=IABS(MF(5,KCC)-MF(6,KCC))/2                                    DEPH-111
      DO 6 J=KI,KK                                                      DEPH-112
      IF (MF(6,J).EQ.99999) GO TO 6                                     DEPH-113
      M3=IABS(MF(5,J)+MF(6,J))/2                                        DEPH-114
      M4=IABS(MF(5,J)-MF(6,J))/2                                        DEPH-115
      IF (M1.NE.M3.OR.M2.NE.M4) GO TO 6                                 DEPH-116
      MF(10,KCC)=1-MOD(IABS(MF(5,J)-MF(5,KCC)+MF(6,KCC)-MF(6,J))/2,4)   DEPH-117
      MF(6,KCC)=99999                                                   DEPH-118
      JA=J+1                                                            DEPH-119
      IF (JA.EQ.KCC) GO TO 7                                            DEPH-120
C PERMUTATION OF AMPLITUDES                                             DEPH-121
      DO 5 M1=1,10                                                      DEPH-122
      M2=MF(M1,KCC)                                                     DEPH-123
      DO 4 M3=JA,KCC                                                    DEPH-124
      M4=KCC+JA-M3                                                      DEPH-125
    4 MF(M1,M4)=MF(M1,M4-1)                                             DEPH-126
    5 MF(M1,JA)=M2                                                      DEPH-127
      GO TO 7                                                           DEPH-128
    6 CONTINUE                                                          DEPH-129
    7 CONTINUE                                                          DEPH-130
    8 CONTINUE                                                          DEPH-131
    9 CONTINUE                                                          DEPH-132
   10 CONTINUE                                                          DEPH-133
      IPI(7,I)=KCC                                                      DEPH-134
C COMPUTATION OF THE NUMBER OF COUPLED EQUATIONS                        DEPH-135
      L=NJ*MJ                                                           DEPH-136
      KK1=L/2                                                           DEPH-137
      KK2=L-KK1                                                         DEPH-138
      IF (KK1.EQ.KK2) GO TO 11                                          DEPH-139
      N=MJ/2+NJ/2+IPI(1,I)                                              DEPH-140
      IF (2*(N/2).EQ.N) GO TO 11                                        DEPH-141
      KK1=KK1+1                                                         DEPH-142
      KK2=KK1-1                                                         DEPH-143
   11 NCT(5)=NCT(5)+KK2                                                 DEPH-144
      NCT(6)=NCT(6)+KK1                                                 DEPH-145
      IF (I.NE.1) GO TO 12                                              DEPH-146
      NCT(3)=NCT(5)                                                     DEPH-147
      NCT(4)=NCT(6)                                                     DEPH-148
   12 IF (I.NE.NCOLL) GO TO 13                                          DEPH-149
      NCT(1)=NCT(5)                                                     DEPH-150
      NCT(2)=NCT(6)                                                     DEPH-151
      KAB=MAX0(NCT(1),NCT(2))                                           DEPH-152
      KBC=MAX0(NCT(3),NCT(4))                                           DEPH-153
      IF (NCT(4).EQ.0) KAB=NCT(1)                                       DEPH-154
      IF (NCT(3).EQ.0) KAB=NCT(2)                                       DEPH-155
      KBA=KCC                                                           DEPH-156
   13 CONTINUE                                                          DEPH-157
      IF (KBA.EQ.KCC) WRITE (MW,1000) KBC,KAB,KBA                       DEPH-158
      IF (KBA.NE.KCC) WRITE (MW,1001) KBC,KAB,KBA,KCC                   DEPH-159
      KTGR=KCC                                                          DEPH-160
      IPI(9,NCOLS)=IPI(7,NCOLS)                                         DEPH-161
      IF (LO(66)) GO TO 25                                              DEPH-162
C***********************************************************************DEPH-163
C   **** TABLE MF-FM **** SECOND PART                                   DEPH-164
C  THIS PART OF THE TABLE IS PROLONGATED IN LECD FOR EACH ANGULAR       DEPH-165
C  DISTRIBUTION AND WILL BE UPDATED BY OBSE      - FOR EACH OBSERVABLE  DEPH-166
C  MF(1,*)             LEVEL                                            DEPH-167
C  MF(2,*)             KIND OF OBSERVABLE: 0 FOR CROSS-SECTION, 1 FOR   DEPH-168
C                      C.-S./RUTH.,-2 AND -3 FOR VECTOR ANALYSING POWER DEPH-169
C                      AND POLARISATION FOR SPINS NOT GREATER THAN 1    DEPH-170
C  MF(3,I), MF(4,I)    BEGINNING AND END OF THE DESCRIPTION IN AM (OBSE)DEPH-171
C  MF(5,*)             INDICATION FOR PLOTS                             DEPH-172
C  MF(6,*) TO M(10,*)  CONTAINS THE LEGEND   (IN OBSE)                  DEPH-173
C  ****STANDARD OPTIONS****                                             DEPH-174
C FOR ALL STATES : CROSS SECTION                                        DEPH-175
C FOR GROUND STATE WITH CHARGED PARTICLES: CROSS SECTION DIVIDED BY     DEPH-176
C       RUTHERFORD'S CROSS-SECTION                                      DEPH-177
C FOR SPIN 1/2 - GROUND STATE  POLARISATION                             DEPH-178
C FOR SPIN 1/2 EXCITED STATES  VECT. ANA. POWER,POLAR. AND SPIN-FLIP    DEPH-179
C FOR SPIN LARGER THAN 1/2  GROUND STATE IT11,T20,T21 AND T22           DEPH-180
C FOR EXCITED STATES,IT11,VECT. POLAR.,T20,T21,T22                      DEPH-181
C  *** NON-STANDARD OPTIONS ***                                         DEPH-182
C  THE FIRST ONE MUST BE THE CROSS-SECTION                              DEPH-183
C ANY OBSERVABLE NOT DESCRIBED BELOW IS IDENTIFIED BY A NEGATIVE NUMBER DEPH-184
C  OF WHICH THE POSITIVE VALUE MUST BE FOUND BY OBSE                    DEPH-185
C  FOLLOWED BY THE DESCRIPTION OF THE OBSERVABLE                        DEPH-186
C **** STANDARD DESCRIPTIONS ****                                       DEPH-187
C 0  CROSS SECTION                                                      DEPH-188
C  1  CROSS SECTION DIVIDED BY RUTHERFORD'S CROSS SECTION               DEPH-189
C  2  VECTOR ANALYSING POWER                                            DEPH-190
C  3  VECTOR POLARISATION                                               DEPH-191
C  4  T20     5  T21     6  T22                                         DEPH-192
C  7  KYY OR D  DEFINED AS -A(1100 1100)-A(1100 1-100)                  DEPH-193
C  8  KXX OR R  DEFINED AS  A(1100 1100)-A(1100 1-100)                  DEPH-194
C  9  KZZ OR A' DEFINED AS  A(1000 1000)                                DEPH-195
C 10  KXZ OR R' DEFINED AS -SQRT(2.) A(1100 1000)                       DEPH-196
C 11  KZX OR A  DEFINED AS -SQRT(2.) A(1000 1100)                       DEPH-197
C 12  SPIN-FLIP :  (A(0000,0000)+A(1100,1100)+A(1100,1-100))/2          DEPH-198
C 13  VECTOR ANALYSING POWER OF THE TARGET                              DEPH-199
C   (NOTE A RATIO SQRT(2.) WITH IT11 FOR SPIN 1/2 FOR 2, 3 AND 13)      DEPH-200
C 14  AYY  DEFINED AS -A(1111 0000)-A(111-1 0000)                       DEPH-201
C 15  AXX  DEFINED AS  A(1111 0000)-A(111-1 0000)                       DEPH-202
C 16  AZZ  DEFINED AS  A(1010 0000)                                     DEPH-203
C 17  AXZ  DEFINED AS -SQRT(2.) A(1110 0000)                            DEPH-204
C 18  AZX  DEFINED AS -SQRT(2.) A(1011 0000)                            DEPH-205
C 19  RESERVED FOR A SET OF EXPERIMENTAL DATA WHICH ARE REACTION        DEPH-206
C          CROSS-SECTIONS. SEE "CARDS READ IN SUBROUTINE LECD"          DEPH-207
C***********************************************************************DEPH-208
      KX=KCC                                                            DEPH-209
      IY=1                                                              DEPH-210
      IF (LO(194)) GO TO 14                                             DEPH-211
      READ (MR,1002) (IPI(9,I),I=1,NCOLL)                               DEPH-212
      WRITE (MW,1003) (I,IPI(9,I),I=1,NCOLL)                            DEPH-213
   14 DO 24 I=1,NCOLL                                                   DEPH-214
      IF (LO(94)) GO TO 19                                              DEPH-215
C THERE MUST BE AT LEAST PLACE TO STORE SIX OBSERVABLES                 DEPH-216
      IF (5*KX+30.GE.NMAX) CALL MEMO('DEPH',NMAX,5*KX+30,2)             DEPH-217
      KX=KX+1                                                           DEPH-218
      IPI(9,I)=1                                                        DEPH-219
      MF(2,KX)=0                                                        DEPH-220
      IF ((I.NE.1).OR.(IPI(4,1).EQ.0)) GO TO 15                         DEPH-221
      IPI(9,1)=2                                                        DEPH-222
      KX=KX+1                                                           DEPH-223
      MF(2,KX)=1                                                        DEPH-224
   15 MF(5,KX)=NGR(IY)                                                  DEPH-225
      IF (NI.EQ.1) GO TO 19                                             DEPH-226
      IPI(9,I)=IPI(9,I)+1                                               DEPH-227
      KX=KX+1                                                           DEPH-228
      MF(2,KX)=2                                                        DEPH-229
      IX=NPR(IY)/2                                                      DEPH-230
      MF(5,KX)=NPR(1)-2*IX                                              DEPH-231
      IF (NI.GT.2) GO TO 17                                             DEPH-232
      IF (I.EQ.1) GO TO 19                                              DEPH-233
      IF (IPI(2,I).GT.3) GO TO 16                                       DEPH-234
      IF (IPI(2,I).EQ.1) GO TO 19                                       DEPH-235
      IPI(9,I)=IPI(9,I)+1                                               DEPH-236
      KX=KX+1                                                           DEPH-237
      MF(2,KX)=3                                                        DEPH-238
      MF(5,KX)=MOD(IX,2)                                                DEPH-239
      IX=IX/2                                                           DEPH-240
   16 KX=KX+1                                                           DEPH-241
      MF(2,KX)=12                                                       DEPH-242
      MF(5,KX)=MOD(IX,2)                                                DEPH-243
      IPI(9,I)=IPI(9,I)+1                                               DEPH-244
      GO TO 19                                                          DEPH-245
   17 IPI(9,I)=IPI(9,I)+3                                               DEPH-246
      DO 18 L=4,6                                                       DEPH-247
      KX=KX+1                                                           DEPH-248
      MF(2,KX)=L                                                        DEPH-249
      MF(5,KX)=MOD(IX,2)                                                DEPH-250
   18 IX=IX/2                                                           DEPH-251
   19 K1=KTGR+1                                                         DEPH-252
      IPI(8,I)=K1                                                       DEPH-253
      KTGR=KTGR+IPI(9,I)                                                DEPH-254
      IPI(9,I)=KTGR                                                     DEPH-255
      IF (5*KTGR.GE.NMAX) CALL MEMO('DEPH',NMAX,5*KTGR,2)               DEPH-256
      DO 20 J=K1,KTGR                                                   DEPH-257
   20 MF(1,J)=I                                                         DEPH-258
      IF (LO(194)) GO TO 22                                             DEPH-259
      READ (MR,1002) (MF(2,J),J=K1,KTGR)                                DEPH-260
      IF (MF(2,K1).NE.0) WRITE (MW,1004)                                DEPH-261
      READ (MR,1002) (MF(5,J),J=K1,KTGR)                                DEPH-262
      MF(2,K1)=0                                                        DEPH-263
      WRITE (MW,1005) I,(MF(2,J),J=K1,KTGR)                             DEPH-264
      WRITE (MW,1006) (MF(5,J),J=K1,KTGR)                               DEPH-265
      DO 21 J=K1,KTGR                                                   DEPH-266
      IF (MF(2,J).GT.18) GO TO 32                                       DEPH-267
   21 CONTINUE                                                          DEPH-268
   22 JT=0                                                              DEPH-269
      DO 23 J=K1,KTGR                                                   DEPH-270
      NJY=MAX0(NJY,-MF(2,J))                                            DEPH-271
      IF (MF(2,J).EQ.0.OR.MF(2,J).EQ.1) GO TO 23                        DEPH-272
      JT=JT+1                                                           DEPH-273
   23 CONTINUE                                                          DEPH-274
      JTX=MAX0(JTX,JT)                                                  DEPH-275
      NJC=MAX0(NJC,KTGR-K1+2)                                           DEPH-276
   24 IY=2                                                              DEPH-277
      IF (LO(81)) NJC=MAX0(NJC+2,6)                                     DEPH-278
   25 IY=0                                                              DEPH-279
      IF (LO(44)) IY=1                                                  DEPH-280
      IF (LO(46).AND.LO(44)) WRITE (MW,1007)                            DEPH-281
      DO 28 I=1,NCOLL                                                   DEPH-282
      IF (LO(46).AND.LO(44)) GO TO 27                                   DEPH-283
      DO 26 J=1,NCOLL                                                   DEPH-284
   26 NIV(I,J,3)=IY                                                     DEPH-285
      IF (LO(208)) NIV(I,I,3)=1                                         DEPH-286
      GO TO 28                                                          DEPH-287
   27 READ (MR,1002) (NIV(I,J,3),J=1,NCOLL)                             DEPH-288
      WRITE (MW,1008) I,(J,NIV(I,J,3),J=1,NCOLL)                        DEPH-289
   28 CONTINUE                                                          DEPH-290
      NJ=NJX                                                            DEPH-291
      DO 30 I=1,NCOLL                                                   DEPH-292
      DO 29 J=1,I                                                       DEPH-293
      L=NIV(I,J,3)                                                      DEPH-294
      NIV(I,J,3)=0                                                      DEPH-295
C NO COUL. CORR. WITH DIFF. PARTICLE MASS, CHARGES OR A CLOSED CHANNEL  DEPH-296
      IF (L.EQ.0.OR.IPI(4,I).NE.IPI(4,J).OR.WV(1,I).NE.WV(1,J).OR.WV(3,IDEPH-297
     1).LT.0..OR.WV(3,J).LT.0.) GO TO 29                                DEPH-298
      NJX=NJX+1                                                         DEPH-299
      NIV(I,J,3)=NJX                                                    DEPH-300
   29 NIV(J,I,3)=NIV(I,J,3)                                             DEPH-301
   30 CONTINUE                                                          DEPH-302
      IF (NJ.EQ.NJX) RETURN                                             DEPH-303
      WRITE (MW,1009)                                                   DEPH-304
      DO 31 I=1,NCOLL                                                   DEPH-305
   31 WRITE (MW,1010) I,(NIV(I,J,3),J,J=1,NCOLL)                        DEPH-306
      RETURN                                                            DEPH-307
   32 WRITE (MW,1011)                                                   DEPH-308
      STOP                                                              DEPH-309
 1000 FORMAT (/5X,I3,' SOLUTIONS',I10,' COUPLED EQUATIONS',I10,' INDEPENDEPH-310
     1DENT AMPLITUDES'/)                                                DEPH-311
 1001 FORMAT (/5X,I3,' SOLUTIONS',I10,' COUPLED EQUATIONS',I10,' INDEPENDEPH-312
     1DENT AMPLITUDES',I10,' SETS OF COMPOUND COEFF.'/)                 DEPH-313
 1002 FORMAT (14I5)                                                     DEPH-314
 1003 FORMAT (/' EQUIDISTANT ANGLES OUTPUT'//(10X,'CHANNEL',I3,5X,I3,' ODEPH-315
     1BSERVABLES'))                                                     DEPH-316
 1004 FORMAT (' THE FIRST OBSERVABLE MUST BE THE CROSS SECTION: LABEL 0'DEPH-317
     1)                                                                 DEPH-318
 1005 FORMAT (' OBSERVABLES FOR CHANNEL',I3,'  : ',18I5/(24X,18I5))     DEPH-319
 1006 FORMAT (12X,'GRAPH INFORMATION: ',18I5/(24X,18I5))                DEPH-320
 1007 FORMAT (/' COULOMB CORRECTIONS ( 1=YES, 0=NO)')                   DEPH-321
 1008 FORMAT (' I =',I2,4X,10(' J =',I2,':',I1,2X)/(10X,10(' J =',I2,':'DEPH-322
     1,I1,2X)))                                                         DEPH-323
 1009 FORMAT (/' STORAGE OF COULOMB CORRECTIONS')                       DEPH-324
 1010 FORMAT (' I =',I2,2X,6(I6,' FOR J =',I2)/(10X,6(I6,' FOR J =',I2))DEPH-325
     1)                                                                 DEPH-326
 1011 FORMAT (//' THE STANDARD OBSERVABLES ARE ONLY 19 FOR ANY OTHER GIVDEPH-327
     1E A NEGATIVE INTEGER'///' IN DEPH  ... STOP ...')                 DEPH-328
      END                                                               DEPH-329
C 01/01/04                                                      ECIS03  LECD-000
      SUBROUTINE LECD(NCOLL,NCOLT,NCOLR,WV,MF,MFM,FM,DONN,NP,NTOT,NREC,DLECD-001
     1W,NW,NMX,KFIT,NESSAI,YY,JTX,NJY,NMAX,LO)                          LECD-002
C INPUT OF EXPERIMENTAL DATA AND SEARCH INFORMATIONS                    LECD-003
C INPUT VARIABLES: NCOLL: NUMBER OF NUCLEAR LEVELS WITH ANGULAR DISTRIB.LECD-004
C                  NCOLT: NUMBER OF TOTAL CROSS-SECTIONS                LECD-005
C                  NCOLR: NUMBER OF ANGULAR DISTRIBUTIONS               LECD-006
C                  WV(3,*):  ENERGY IN THE CENTER OF MASS IN MEV        LECD-007
C                  NP:    INDICATIONS FOR PLOTS OF CROSS-SECTION        LECD-008
C                  NREC:  NUMBER OF PARAMETERS IN SEARCH                LECD-009
C                  JTX:   MAXIMUM NUMBER OF ANGLES FOR A GRAPH          LECD-010
C                  NMAX:  MAXIMUM NUMBER OF DATA FOR THE WORKING SPACE  LECD-011
C                  LO:    LOGICAL CONTROLS. IF LO(72)=.TRUE. NO OUTPUT OLECD-012
C                         EXPERIMENTAL DATA                             LECD-013
C OUTPUT VARIABLES:JTX:   MAXIMUM NUMBER OF ANGLES FOR A GRAPH          LECD-014
C                  NJY:   MAXIMUM INDEX OF NON STANDARD OBSERVABLE      LECD-015
C                  MF:    CONTINUATION OF THE SECOND PART OF MF AS      LECD-016
C                         DESCRIBED IN DEPH                             LECD-017
C                  MFM,FM:IN EQUIVALENCE BY CALL: MFM(1,*) CHANNEL,     LECD-018
C                         MFM(2,*), MFM(3,*) BEGINNING AND END OF DATA, LECD-019
C                         MFM(4,*) INDICATION C.M./LAB AS 0/1,          LECD-020
C                         FM(3,*) WEIGHT,                               LECD-021
C                         FM(4,*) AND FM(5,*) NORM AND ITS ERROR,       LECD-022
C                         FM(6,*) PLACE FOR CALCULATED NORMALISATION,   LECD-023
C                         FM(7,*) PLACE FOR CALCULATED CHI2.            LECD-024
C                  DONN:  EXPERIMENTAL DATA: ANGLE, VALUE, ERROR,       LECD-025
C                         ANGULAR WIDTH AND PLACE FOR CORRECTED ERROR   LECD-026
C                  NTOT:  NUMBER OF EXPERIMENTAL DATA                   LECD-027
C                  DW:    ACCURACY OF PARAMETERS IN SEARCH              LECD-028
C                  NW:    INDEXES OF PARAMETERS IN SEARCH               LECD-029
C                  NMX:   NUMBER OF INDEXES                             LECD-030
C      IF THE NUMBER OF DATA FOR AN OBSERVABLE IS 0,IT IS SUMMED        LECD-031
C      WITH THE NEXT OBSERVABLE WHICH MUST BE OF THE SAME KIND          LECD-032
C***********************************************************************LECD-033
      IMPLICIT REAL*8 (A-H,O-Z)                                         LECD-034
      LOGICAL LO(250),LT,LX                                             LECD-035
      DIMENSION DONN(6,1),FM(7,NCOLR),MFM(14,NCOLR),MF(10,NCOLR),NP(2),DLECD-036
     1W(NMAX),NW(2*NMAX),YY(3),WV(18,1)                                 LECD-037
      COMMON /INOUT/ MR,MW,MS                                           LECD-038
      LT=.TRUE.                                                         LECD-039
      NTOT=0                                                            LECD-040
      NCLR=0                                                            LECD-041
      NMX=NREC+1                                                        LECD-042
      DO 4 IV=1,NCOLR                                                   LECD-043
C INPUT OF THE DEFINITION OF THE ANGULAR DISTRIBUTION                   LECD-044
      LX=.FALSE.                                                        LECD-045
      READ (MR,1000) LX,MFM(4,IV),NT,MFM(1,IV),MF(2,IV),(FM(J,IV),J=3,5)LECD-046
      IF (MFM(1,IV).GT.NCOLL) GO TO 7                                   LECD-047
      IF (WV(3,MFM(1,IV)).LE.0.D0) GO TO 8                              LECD-048
      IF (MF(2,IV).GT.19) GO TO 9                                       LECD-049
      IF (FM(3,IV).EQ.0.D0) FM(3,IV)=1.D0                               LECD-050
      IF (FM(4,IV).EQ.0.D0) FM(4,IV)=1.D0                               LECD-051
      FM(6,IV)=1.D0                                                     LECD-052
      FM(7,IV)=0.D0                                                     LECD-053
      MF(1,IV)=MFM(1,IV)                                                LECD-054
      JTX=MAX0(JTX,NT)                                                  LECD-055
      NJY=MAX0(NJY,-MF(2,IV))                                           LECD-056
      MF(5,IV)=1                                                        LECD-057
      MF2=MIN0(2,MFM(1,IV))                                             LECD-058
      IF (MF(2,IV).EQ.0.OR.MF(2,IV).EQ.1) MF(5,IV)=NP(MF2)              LECD-059
      IF (LO(172).AND.NT.EQ.0) WRITE (MW,1001) IV,NT,MFM(1,IV),MF(2,IV) LECD-060
      IF (.NOT.LT.AND.(MF(2,IV).NE.MF(2,IV-1))) GO TO 10                LECD-061
      LT=NT.NE.0                                                        LECD-062
      NS=NTOT+1                                                         LECD-063
      NTOT=NTOT+NT                                                      LECD-064
      MFM(2,IV)=NS                                                      LECD-065
      MFM(3,IV)=NTOT                                                    LECD-066
      IF (.NOT.LT) GO TO 4                                              LECD-067
      NCLR=NCLR+1                                                       LECD-068
      IF (LO(172)) WRITE (MW,1002) IV,NT,MFM(1,IV),MF(2,IV),(FM(I,IV),I=LECD-069
     13,5)                                                              LECD-070
      IF (LO(172).AND.(MF(2,IV).EQ.19)) WRITE (MW,1003)                 LECD-071
      LX=LX.AND.(MF(2,IV).EQ.0.OR.MF(2,IV).EQ.1.OR.MF(2,IV).EQ.19)      LECD-072
      IF (LO(172).AND.LX) WRITE (MW,1004)                               LECD-073
      IF (LO(172).AND.MFM(4,IV).EQ.1) WRITE (MW,1005)                   LECD-074
      IF (3*NTOT+3.GE.NMAX) CALL MEMO('LECD',NMAX,3*NTOT+3,2)           LECD-075
C INPUT OF THE ANGULAR DISTRIBUTION DATA                                LECD-076
      DO 1 I=NS,NTOT                                                    LECD-077
      READ (MR,1006) (DONN(J,I),J=1,5)                                  LECD-078
      IF (LX) DONN(3,I)=DONN(2,I)*DONN(3,I)*.01D0                       LECD-079
      DONN(6,I)=DONN(3,I)                                               LECD-080
      IF (LO(172)) WRITE (MW,1007) I,(DONN(J,I),J=1,5)                  LECD-081
    1 CONTINUE                                                          LECD-082
      IF (MF(2,IV).LT.19) GO TO 3                                       LECD-083
C CHECK OF TOTAL CROSS-SECTION DATA                                     LECD-084
      DO 2 I=NS,NTOT                                                    LECD-085
      J=IDINT(DONN(1,I)+.1D0)                                           LECD-086
      IF (J.LT.0.OR.J.GT.NCOLT+2) GO TO 11                              LECD-087
      IF (J.GT.0.AND.J.LE.NCOLT.AND.WV(3,J).LE.0.D0) GO TO 12           LECD-088
      IF (LO(181)) GO TO 11                                             LECD-089
      IF (LO(185).AND.J.EQ.NCOLT+1) GO TO 11                            LECD-090
      IF (LO(186).AND.J.EQ.NCOLT+2) GO TO 11                            LECD-091
    2 CONTINUE                                                          LECD-092
    3 IF (FM(5,IV).EQ.0.) GO TO 4                                       LECD-093
      NTOT=NTOT+1                                                       LECD-094
C NORMALISATION AS A DATA FOR THE SEARCH                                LECD-095
      DONN(2,NTOT)=FM(4,IV)                                             LECD-096
      DONN(3,NTOT)=FM(5,IV)                                             LECD-097
      IF (LO(172)) WRITE (MW,1008) NTOT,DONN(2,NTOT),DONN(3,NTOT)       LECD-098
    4 CONTINUE                                                          LECD-099
      IF (LO(172).AND.(NCOLR.NE.NCLR)) WRITE (MW,1009) NCLR,NCOLR       LECD-100
      IF (LO(132).OR.(NREC.EQ.0)) GO TO 6                               LECD-101
      WRITE (MW,1010) NREC,KFIT,NESSAI,YY(1),YY(2)                      LECD-102
      NISE=12*NTOT+2*NREC                                               LECD-103
      IF (NISE+NMX.GE.2*NMAX) CALL MEMO('LECD',NMAX,(NISE+NMX)/2,2)     LECD-104
      READ (MR,1006) (DW(6*NTOT+I),I=1,NREC)                            LECD-105
      READ (MR,1011) (NW(NISE+I),I=1,NREC)                              LECD-106
      WRITE (MW,1012) (I,NW(NISE+I),DW(6*NTOT+I),I=1,NREC)              LECD-107
      DO 5 I=1,NREC                                                     LECD-108
C A NEGATIVE VALUE -K INSTEAD OF INDEXES OF PARAMETERS MEANS THAT K     LECD-109
C PARAMETERS WILL BE KEPT PROPORTIONAL - INPUT OF THEIR INDEXES         LECD-110
      K=-NW(NISE+I)                                                     LECD-111
      IF (K.LT.0) GO TO 5                                               LECD-112
      NW(NISE+NMX)=K                                                    LECD-113
      IF (NISE+NMX+K.GE.2*NMAX) CALL MEMO('LECD',NMAX,(NISE+NMX+K)/2,2) LECD-114
      READ (MR,1011) (NW(NISE+NMX+J),J=1,K)                             LECD-115
      WRITE (MW,1013) I,(NW(NISE+NMX+J),J=1,K)                          LECD-116
      NW(NISE+I)=-NMX                                                   LECD-117
      NMX=NMX+K+1                                                       LECD-118
    5 CONTINUE                                                          LECD-119
    6 IF (LT) RETURN                                                    LECD-120
      WRITE (MW,1014)                                                   LECD-121
      GO TO 13                                                          LECD-122
    7 WRITE (MW,1015) MFM(1,IV)                                         LECD-123
      GO TO 13                                                          LECD-124
    8 WRITE (MW,1016) MFM(1,IV)                                         LECD-125
      GO TO 13                                                          LECD-126
    9 WRITE (MW,1017)                                                   LECD-127
      GO TO 13                                                          LECD-128
   10 WRITE (MW,1018) MF(2,IV),MF(2,IV-1)                               LECD-129
      GO TO 13                                                          LECD-130
   11 WRITE (MW,1019) DONN(1,I),I                                       LECD-131
      GO TO 13                                                          LECD-132
   12 WRITE (MW,1020) DONN(1,I),I                                       LECD-133
   13 WRITE (MW,1021)                                                   LECD-134
      STOP                                                              LECD-135
 1000 FORMAT (L1,I1,I3,2I5,5X,3F10.5)                                   LECD-136
 1001 FORMAT (/'  ANG. DISTR.',I3,I9,' DATA   LEVEL =',I3,5X,'KIND =',I3LECD-137
     1,' UNRESOLVED WITH THE FOLLOWING ONE'/)                           LECD-138
 1002 FORMAT (/'  ANG. DISTR.',I3,I9,' DATA   LEVEL =',I3,5X,'KIND =',I3LECD-139
     1//5X,'WEIGHT',D12.4,5X,'NORM',D12.4,'  WITH ERROR',D12.4//23X,'ANGLECD-140
     2LE',14X,'VALUE',15X,'ERROR',12X,'ANG. WIDTH',10X,'ANG. ERROR'/)   LECD-141
 1003 FORMAT (' THESE DATA ARE TOTAL CROSS-SECTIONS')                   LECD-142
 1004 FORMAT (' INPUT OF PERCENTAGE ERRORS')                            LECD-143
 1005 FORMAT (' ANGLES IN THE LABORATORY SYSTEM')                       LECD-144
 1006 FORMAT (7F10.5)                                                   LECD-145
 1007 FORMAT (5X,I5,5D20.6)                                             LECD-146
 1008 FORMAT (5X,I5,' DATA WHICH IS A NORMALISATION',D20.6,' WITH ERROR'LECD-147
     1,D20.6)                                                           LECD-148
 1009 FORMAT (/5X,I5,' DIFFERENT ANGULAR DISTRIBUTIONS INSTEAD OF',I5/) LECD-149
 1010 FORMAT (//5X,I5,' PARAMETERS IN SEARCH'/5X,I5,' RESULTS STORED'/5XLECD-150
     1,I5,' RUNS    STARTING SCALE',F10.2/12X,'MULTIPLICATION FACTOR',F1LECD-151
     20.2/)                                                             LECD-152
 1011 FORMAT (14I5)                                                     LECD-153
 1012 FORMAT (5X,I5,5X,I5,5X,F15.8)                                     LECD-154
 1013 FORMAT (5X,I5,' VARIABLE DEFINED AS',20I5/(18X,20I5))             LECD-155
 1014 FORMAT (//'  THE LAST ANGULAR DISTRIBUTION INCLUDE NO DATA')      LECD-156
 1015 FORMAT (//' LEVEL NUMBER',I4,' TOO LARGE')                        LECD-157
 1016 FORMAT (//' LEVEL',I4,' CLOSED')                                  LECD-158
 1017 FORMAT (//' THERE ARE ONLY 20 KIND OF PROGRAMMED OBSERVABLES'//'  LECD-159
     1FOR OTHER KINDS, INTRODUCE A NEGATIVE NUMBER  AND,LATER,THEIR DESCLECD-160
     2RIPTION')                                                         LECD-161
 1018 FORMAT (//' THE KIND =',I3,' OF THIS OBSERVABLE IS NOT THE SAME ASLECD-162
     1 THE KIND =',I3,' OF THE PREVIOUS ONE WHICH WAS EMPTY')           LECD-163
 1019 FORMAT (' ANGULAR DATA',F10.5,' FOR',I4,' DATA NOT ALLOWED FOR TOTLECD-164
     1AL CROSS-SECTION')                                                LECD-165
 1020 FORMAT (' ANGULAR DATA',F10.5,' FOR',I4,' DATA NOT ALLOWED FOR CLOLECD-166
     1SED CHANNEL')                                                     LECD-167
 1021 FORMAT (//' IN LECD  ... STOP ...')                               LECD-168
      END                                                               LECD-169
C 01/01/04                                                      ECIS03  OBSE-000
      SUBROUTINE OBSE(MF,CMF,NT,NCOLR,IPI,AM,ITX,ITZ,BM,CBM,NX,JCAL,JTN,OBSE-001
     1LO)                                                               OBSE-002
C COMPUTES FOR EACH OBSERVABLE ALL THE INDICATIONS FOR DO LOOPS AND THE OBSE-003
C GEOMETRICAL COEFFICIENTS NEEDED IN SCAT                               OBSE-004
C INPUT VARIABLES: MF,CMF: INFORMATIONS COMING FROM DEPH AND LECD       OBSE-005
C                  NT:     NUMBER OF ROWS OF MF                         OBSE-006
C                  NCOLR:  NUMBER OF EXPERIMENTAL ANGULAR DISTRIBUTIONS OBSE-007
C                  IPI(J=2,3,I): MULTIPLICITY OF PARTICLE AND TARGET    OBSE-008
C                  JTN:    LENGTH AVAILABLE IN AM                       OBSE-009
C                  LO:     LOGICAL CONTROLS                             OBSE-010
C      THE SUBROUTINE RETURNS LO(226)=.TRUE. IF THERE IS AN OBSERVABLE  OBSE-011
C  NOT IN THE CENTER OF MASS SYSTEM.                                    OBSE-012
C OUTPUT VARIABLES:AM:   CHARACTER*4 FOR TRANSFER, SEE DESCRIPTION BELOWOBSE-013
C                  JCAL:   LENGTH OF AM                                 OBSE-014
C                  MF,CMF: EQU. BY CALL, SECOND PART UPDATED (SEE DEPH) OBSE-015
C WORKING FIELDS:  BM(9,*), CBM AND NX(18,*) IN EQUIVALENCE BY CALL     OBSE-016
C                  THE RESULTS ARE STORED AFTER THE WORKING FIELD       OBSE-017
C                  AND COPIED IN AM BEFORE RETURN.                      OBSE-018
C                  ITX(6,*) AND ITZ(6,*) TO STORE LEGENDS,              OBSE-019
C                           IN EQUIVALENCE WITH AM                      OBSE-020
C***********************************************************************OBSE-021
C  THE FIRST PART OF THE AM TABLE IS SETS OF 10 D. P. INDICATIONS,EACH  OBSE-022
C     OF THEM RELATED TO A SINGLE "A" - THE 8 FIRST ARE INDICATIONS FOR OBSE-023
C     THE 4 DO LOOPS, 9 IS A SET OF 6 LOGICAL IN A BINARY CODE AND INDI-OBSE-024
C     CATION FOR CHANGE OF FRAME FOR THE PARTICLE AND THE TARGET UNDER  OBSE-025
C     THE FORM N1+1000*N2, 10 IS THE AMPLITUDE.                         OBSE-026
C  THE SECOND PART ARE TENSOR OPERATOR MATRIX ELEMENTS.                 OBSE-027
C       INDICATIONS FOR A DO LOOP ARE 4 INTEGER                         OBSE-028
C        IM: LOWER BOUND                                                OBSE-029
C        IP: UPPER BOUND                                                OBSE-030
C        NM: DIFFERENCE OF MAGNETIC QUANTUM NUMBERS                     OBSE-031
C        IL: WHEN ADDED TO THE INDEX OF THE DO LOOP,ADDRESS OF THE      OBSE-032
C             MATRIX ELEMENT FROM THE TOP OF TABLE AM                   OBSE-033
C       THE 4 FIRST LOGICALS  ARE .TRUE. IF THERE IS A TENSOR OPERATOR  OBSE-034
C        FOR THE RELATED DO LOOP,.FALSE. FOR IDENTITY OPERATOR.         OBSE-035
C        THE FIFTH IS .TRUE. FOR NO TENSOR OPERATOR AT ALL              OBSE-036
C        THE SIXTH IS .TRUE. FOR PURE IMAGINARY COEFFICIENT             OBSE-037
C       INDICATION FOR CHANGE OF FRAME ARE                              OBSE-038
C            1 FOR LABORATORY SYSTEM                                    OBSE-039
C            2 FOR AXIS ALONG THE INCIDENT DIRECTION                    OBSE-040
C***********************************************************************OBSE-041
      IMPLICIT REAL*8 (A-H,O-Z)                                         OBSE-042
      LOGICAL LT1,LT2,LZ(6),LO(250)                                     OBSE-043
      DIMENSION IY(2,20),ITX(7,21),MT(4),IPI(11,3),MF(10,NT),NX(18,12),MOBSE-044
     1X(8,24),NZ(2),BM(9,12),CX(24)                                     OBSE-045
      CHARACTER*4 ITZ(7,21),IZ(5,20),CMF(10,NT),AM(2,1),CBM(2,9,1)      OBSE-046
      COMMON /INOUT/ MR,MW,MS                                           OBSE-047
      DATA IY /4*1,2*2,2*3,2*4,2*5,2*6,7,8,9,10,2*11,2*12,2*13,14,16,2*1OBSE-048
     17,18,19,20,21,2*22,2*23,2*24,2*1/                                 OBSE-049
      DATA CX /6*1.D0,2*-1.D0,1.D0,-1.D0,1.D0,2*-1.4142136573791504D0,3*OBSE-050
     1.5D0,1.4142136999999999D0,2*-1.D0,1.D0,-1.D0,1.D0,2*-1.41421365737OBSE-051
     291504D0/                                                          OBSE-052
      DATA MX,JTS /8*0,2*1,10*0,2*1,2*0,2,7*0,2,1,6*0,2*2,6*0,2*1,2*0,2*OBSE-053
     11,2*0,2*1,2*0,1,-1,2*0,2*1,2*0,2*1,2*0,2*1,2*0,1,-1,2*0,1,3*0,1,3*OBSE-054
     20,2*1,2*0,1,3*0,1,3*0,2*1,10*0,2*1,2*0,2*1,2*0,2*1,2*0,1,-1,4*0,2*OBSE-055
     31,4*0,4*1,4*0,3*1,-1,4*0,4*1,4*0,3*1,-1,4*0,1,0,1,5*0,3*1,5*0,1,0,OBSE-056
     42*1,5*0/                                                          OBSE-057
      DATA IZ /'   C','ROSS','-SEC','TION','    ','   C','. S.','/RUT','OBSE-058
     1HER.','    ','   A','SYM.',' OR ','IT11',2*'    ','VECT','. PO','LOBSE-059
     2AR.',4*'    ',' T20',4*'    ',' T21',4*'    ',' T22',3*'    ','KYYOBSE-060
     3','OR D',3*'    ','KXX ','OR R',2*'    ','   K','ZZ O','R A''',3*'OBSE-061
     4','KZX ','OR A',2*'    ','   K','XZ O','R R''',2*'    ','   S','PIOBSE-062
     5N-','FLIP',2*'    ','TARG','ET A','SYM.',4*'    ',' AYY',4*'    ',OBSE-063
     6' AXX',4*'    ' ,' AZZ',4*'    ',' AXZ',4*'    ',' AZX',2*'    ','OBSE-064
     7 TOT','AL C','.-S.','    '/                                       OBSE-065
      IF (JTN.LT.270) CALL MEMO('OBSE',JTN,270,2)                       OBSE-066
C TRANSFER OF STANDARD DESCRIPTIONS                                     OBSE-067
      DO 2 I=1,24                                                       OBSE-068
      DO 1 J=1,8                                                        OBSE-069
    1 NX(J+6,I)=MX(J,I)                                                 OBSE-070
    2 BM(3,I)=CX(I)                                                     OBSE-071
      DO 4 I=1,20                                                       OBSE-072
      ITX(1,I)=IY(1,I)                                                  OBSE-073
      ITX(2,I)=IY(2,I)                                                  OBSE-074
      DO 3 J=3,7                                                        OBSE-075
    3 ITZ(J,I)=IZ(J-2,I)                                                OBSE-076
    4 CONTINUE                                                          OBSE-077
      LO(226)=.FALSE.                                                   OBSE-078
      KIT=20                                                            OBSE-079
      KNX=24                                                            OBSE-080
      JCAL=0                                                            OBSE-081
      MT(1)=IPI(2,1)                                                    OBSE-082
      MT(2)=IPI(3,1)                                                    OBSE-083
C VERIFICATION OF INDICATIONS ALREADY IN MF(1,I)                        OBSE-084
      DO 5 I=1,NT                                                       OBSE-085
      IF (MF(2,I).LE.18) GO TO 5                                        OBSE-086
      IF (MF(2,I).EQ.19.AND.NT-I.GE.NCOLR) GO TO 83                     OBSE-087
      IF (MF(2,I).GT.19) GO TO 84                                       OBSE-088
    5 MF(6,I)=0                                                         OBSE-089
      IF (LO(194).AND.LO(131)) GO TO 56                                 OBSE-090
C SEARCH FOR NON STANDARD OBSERVABLES                                   OBSE-091
    6 DO 7 L=1,NT                                                       OBSE-092
      IF (MF(2,L).LT.0) GO TO 8                                         OBSE-093
    7 CONTINUE                                                          OBSE-094
      GO TO 56                                                          OBSE-095
    8 KZ=KIT                                                            OBSE-096
      KIT=KIT+1                                                         OBSE-097
C INPUT OF THE DESCRIPTION OF NON STANDARD OBSERVABLES                  OBSE-098
      LT1=.FALSE.                                                       OBSE-099
      LT2=.FALSE.                                                       OBSE-100
      READ (MR,1000) LT1,LT2,LT3,KX,K,(ITZ(J,KIT),J=3,7)                OBSE-101
      K1=KNX+1                                                          OBSE-102
      KNX=KNX+K                                                         OBSE-103
      IF (9*KNX.GT.JTN) CALL MEMO('OBSE',JTN,9*KNX,2)                   OBSE-104
      READ (MR,1001) ((NX(J,I),J=7,14),I=K1,KNX)                        OBSE-105
      READ (MR,1002) (BM(3,I),I=K1,KNX)                                 OBSE-106
      IF (LT1.OR.LT2) READ (MR,1002) (BM(1,I),I=K1,KNX)                 OBSE-107
    9 K2=K1                                                             OBSE-108
      WRITE (MW,1003) KX,(ITZ(J,KIT),J=3,7),K                           OBSE-109
      IF (LT1) WRITE (MW,1004)                                          OBSE-110
      IF (LT3.EQ.1) WRITE (MW,1005)                                     OBSE-111
      IF (LT3.EQ.2) WRITE (MW,1006)                                     OBSE-112
      IF (.NOT.LT2) GO TO 22                                            OBSE-113
C OUTPUT OF THE DESCRIPTION NOT COMPLETELY IN TENSOR NOTATION           OBSE-114
C IF LT2=.TRUE. , OBSERVABLES CAN BE DEFINED AS MATRIX ELEMENTS         OBSE-115
C (MI,MF). IN THIS CASE,THE VALUES READ ARE (MI-S-1,MF-S-1) INSTEAD OF  OBSE-116
C THE QUANTUM NUMBERS OF TENSOR OPERATOR.                               OBSE-117
      WRITE (MW,1007)                                                   OBSE-118
   10 K3=MIN0(K2+5,KNX)                                                 OBSE-119
      WRITE (MW,1008) ((NX(I,J),I=11,14),J=K2,K3)                       OBSE-120
      WRITE (MW,1009) (BM(3,I),I=K2,K3)                                 OBSE-121
      WRITE (MW,1010) ((NX(I,J),I=7,10),J=K2,K3)                        OBSE-122
      WRITE (MW,1011) (BM(1,I),I=K2,K3)                                 OBSE-123
      K2=K3+1                                                           OBSE-124
      IF (K2.LE.KNX) GO TO 10                                           OBSE-125
      IV=MF(1,L)                                                        OBSE-126
      MT(3)=IPI(2,IV)                                                   OBSE-127
      MT(4)=IPI(3,IV)                                                   OBSE-128
      KLT=1                                                             OBSE-129
C SEARCH FOR NON TENSOR DESCRIPTION - PSEUDO-LOOP FOR IJ                OBSE-130
      IJ=1                                                              OBSE-131
   11 K2=K1                                                             OBSE-132
      K6=KNX                                                            OBSE-133
   12 IF (K2.GT.K6) GO TO 14                                            OBSE-134
      DO 13 K=K2,K6                                                     OBSE-135
      IF (NX(2*IJ+5,K).LT.0) GO TO 15                                   OBSE-136
   13 CONTINUE                                                          OBSE-137
   14 IF (K6.NE.KNX) GO TO 27                                           OBSE-138
      GO TO 20                                                          OBSE-139
C RECURRENCE COMPUTATION OF (-)**(S-MF)*<S S MI -MF|L M>/SQRT(2*S+1)    OBSE-140
C STARTING WITH THE MINIMUM VALUE OF L                                  OBSE-141
   15 M1=MT(IJ)+NX(2*IJ+5,K)                                            OBSE-142
      M2=MT(IJ)+NX(2*IJ+6,K)                                            OBSE-143
      IF (M1.LT.0.OR.M2.LT.0) GO TO 85                                  OBSE-144
      M4=M1-M2                                                          OBSE-145
      M3=IABS(M4)+1                                                     OBSE-146
      M5=MT(IJ)                                                         OBSE-147
      E2=0.D0                                                           OBSE-148
      E3=1.D0                                                           OBSE-149
      C1=DFLOAT(M1+M2-MT(IJ)+1)                                         OBSE-150
      D2=0.D0                                                           OBSE-151
      C2=0.D0                                                           OBSE-152
      DO 18 M=M3,M5                                                     OBSE-153
      IF (M.EQ.M3) GO TO 16                                             OBSE-154
      E1=E2                                                             OBSE-155
      E2=E3                                                             OBSE-156
      D1=D2                                                             OBSE-157
      F1=DFLOAT(((M-1)**2-M4**2)*(MT(IJ)**2-(M-1)**2))                  OBSE-158
      F2=DFLOAT((2*M-1)*(2*M-3))                                        OBSE-159
      D2=DSQRT(F1/F2)                                                   OBSE-160
      E3=(C1*E2-D1*E1)/D2                                               OBSE-161
   16 KNX=KNX+1                                                         OBSE-162
      DO 17 JI=7,14                                                     OBSE-163
   17 NX(JI,KNX)=NX(JI,K)                                               OBSE-164
      NX(2*IJ+5,KNX)=M-1                                                OBSE-165
      NX(2*IJ+6,KNX)=M4                                                 OBSE-166
      C2=C2+E3*E3                                                       OBSE-167
   18 BM(1,KNX)=E3                                                      OBSE-168
C NORMALISATION AND SIGN GIVEN BY COEFFICIENT FOR MAXIMUM VALUE OF L    OBSE-169
      C2=C2*DFLOAT(MT(IJ))                                              OBSE-170
      C2=1.D0/DSQRT(C2)                                                 OBSE-171
      IF (E3.LT.0.D0) C2=-C2                                            OBSE-172
      IF (MOD(NX(2*IJ+6,K),2).EQ.0) C2=-C2                              OBSE-173
      DO 19 M=M3,M5                                                     OBSE-174
      JI=KNX+M-M5                                                       OBSE-175
      BM(3,JI)=BM(3,K)*BM(1,JI)*C2                                      OBSE-176
   19 BM(1,JI)=BM(1,K)*BM(1,JI)*C2                                      OBSE-177
      BM(3,K)=0.D0                                                      OBSE-178
      BM(1,K)=0.D0                                                      OBSE-179
      K2=K+1                                                            OBSE-180
      GO TO 12                                                          OBSE-181
   20 IJ=IJ+1                                                           OBSE-182
      IF (IJ.LE.4) GO TO 11                                             OBSE-183
      K2=K1                                                             OBSE-184
      LT2=.FALSE.                                                       OBSE-185
      IF (LT1) GO TO 22                                                 OBSE-186
C IF AXIS OF QUANTIFICATION NOT IN VERTICAL PLANE, TAKE IMAGINARY       OBSE-187
C AMPLITUDE FOR PURE IMAGINARY TENSORS                                  OBSE-188
      DO 21 K=K1,KNX                                                    OBSE-189
      M1=NX(7,K)+NX(9,K)+NX(11,K)+NX(13,K)                              OBSE-190
      IF (MOD(M1,2).NE.0) BM(3,K)=BM(1,K)                               OBSE-191
   21 CONTINUE                                                          OBSE-192
   22 IF (LT1) GO TO 35                                                 OBSE-193
C THE FIRST NON ZERO MAGNETIC QUANTUM NUMBER MUST BE POSITIVE           OBSE-194
      DO 26 K4=K1,KNX                                                   OBSE-195
      BM(1,K4)=0.D0                                                     OBSE-196
      DO 23 J=8,14,2                                                    OBSE-197
      IF (NX(J,K4)) 24 , 23 , 26                                        OBSE-198
   23 CONTINUE                                                          OBSE-199
      GO TO 26                                                          OBSE-200
   24 IK=0                                                              OBSE-201
      DO 25 J=8,14,2                                                    OBSE-202
      IK=IK+NX(J-1,K4)+NX(J,K4)                                         OBSE-203
   25 NX(J,K4)=-NX(J,K4)                                                OBSE-204
      IF (2*(IK/2).NE.IK) BM(3,K4)=-BM(3,K4)                            OBSE-205
   26 CONTINUE                                                          OBSE-206
      KLT=2                                                             OBSE-207
C REDUCTION OF THE DESCRIPTION                                          OBSE-208
C FOR CHANGE INTO TENSORS IF KLT=1, FOR HERE IF KLT=2                   OBSE-209
C FOR CHANGE TO AXIS IN THE REACTION PLANE IF KLT=3                     OBSE-210
   27 IF (K1.GT.KNX) GO TO 86                                           OBSE-211
      DO 30 K4=K1,KNX                                                   OBSE-212
      IF (DABS(BM(3,K4))+DABS(BM(1,K4)).LT..1D-6) GO TO 32              OBSE-213
      K5=K4-1                                                           OBSE-214
      IF (K1.GT.K5) GO TO 30                                            OBSE-215
      DO 29 J=K1,K5                                                     OBSE-216
      DO 28 I=7,14                                                      OBSE-217
      IF (NX(I,J).NE.NX(I,K4)) GO TO 29                                 OBSE-218
   28 CONTINUE                                                          OBSE-219
      GO TO 31                                                          OBSE-220
   29 CONTINUE                                                          OBSE-221
   30 CONTINUE                                                          OBSE-222
      GO TO ( 20 , 35 , 50 ),KLT                                        OBSE-223
   31 BM(3,J)=BM(3,J)+BM(3,K4)                                          OBSE-224
      BM(1,J)=BM(1,J)+BM(1,K4)                                          OBSE-225
   32 KNX=KNX-1                                                         OBSE-226
      IF (KNX.LT.K4) GO TO 27                                           OBSE-227
      DO 34 K=K4,KNX                                                    OBSE-228
      DO 33 J=7,14                                                      OBSE-229
   33 NX(J,K)=NX(J,K+1)                                                 OBSE-230
      BM(1,K)=BM(1,K+1)                                                 OBSE-231
   34 BM(3,K)=BM(3,K+1)                                                 OBSE-232
      GO TO 27                                                          OBSE-233
C OUTPUT OF THE DESCRIPTION                                             OBSE-234
   35 K3=MIN0(K2+5,KNX)                                                 OBSE-235
      WRITE (MW,1008) ((NX(I,J),I=11,14),J=K2,K3)                       OBSE-236
      WRITE (MW,1012) (BM(3,I),I=K2,K3)                                 OBSE-237
      WRITE (MW,1010) ((NX(I,J),I=7,10),J=K2,K3)                        OBSE-238
      IF (LT1) WRITE (MW,1011) (BM(1,I),I=K2,K3)                        OBSE-239
      K2=K3+1                                                           OBSE-240
      IF (K2.LE.KNX) GO TO 35                                           OBSE-241
      DO 37 K=K1,KNX                                                    OBSE-242
      DO 36 I=8,14,2                                                    OBSE-243
      IF (IABS(NX(I,K)).GT.NX(I-1,K).OR.NX(I-1,K).LT.0) GO TO 87        OBSE-244
   36 CONTINUE                                                          OBSE-245
   37 CONTINUE                                                          OBSE-246
      IF (.NOT.LT1) GO TO 54                                            OBSE-247
C CHANGE FROM VERTICAL AXIS OF QUANTIFICATION TO HELICITY DESCRIPTION   OBSE-248
C BY THE ROTATION R(PI/2,PI/2,PI/2)                                     OBSE-249
      DO 39 I=K1,KNX                                                    OBSE-250
      M1=IABS(NX(8,I))+IABS(NX(10,I))+IABS(NX(12,I))+IABS(NX(14,I))     OBSE-251
      M2=M1/2                                                           OBSE-252
      IF (2*M2.NE.M1) GO TO 88                                          OBSE-253
      IF (2*(M2/2).EQ.M2) GO TO 38                                      OBSE-254
      BM(3,I)=-BM(3,I)                                                  OBSE-255
      BM(1,I)=-BM(1,I)                                                  OBSE-256
   38 IF (M1.EQ.0) BM(1,I)=0.D0                                         OBSE-257
   39 CONTINUE                                                          OBSE-258
      KLT=3                                                             OBSE-259
C PSEUDO-LOOP ON IJ TO 50                                               OBSE-260
      IJ=7                                                              OBSE-261
   40 J1=KNX                                                            OBSE-262
      DO 47 K3=K1,KNX                                                   OBSE-263
      K=NX(IJ,K3)                                                       OBSE-264
      N1=K+NX(IJ+1,K3)+1                                                OBSE-265
      N=2*K+1                                                           OBSE-266
      E3=1.D0                                                           OBSE-267
      IF (K.EQ.0) GO TO 42                                              OBSE-268
C ROTATION MATRIX ELEMENTS FOR PI/2                                     OBSE-269
      DO 41 I=1,K                                                       OBSE-270
   41 E3=E3*.5D0                                                        OBSE-271
   42 C1=0.D0                                                           OBSE-272
      E2=0.D0                                                           OBSE-273
      FJ=DFLOAT(K)                                                      OBSE-274
      FS=-FJ                                                            OBSE-275
      DO 43 I=1,N1                                                      OBSE-276
      IF (I.EQ.1) GO TO 43                                              OBSE-277
      C2=C1                                                             OBSE-278
      C1=DSQRT(DFLOAT((I-1)*(1+N-I)))                                   OBSE-279
      E1=E2                                                             OBSE-280
      E2=E3                                                             OBSE-281
      E3=(2.D0*FJ*E2-E1*C2)/C1                                          OBSE-282
      FS=FS+1.D0                                                        OBSE-283
   43 F2=0.D0                                                           OBSE-284
      F3=E3                                                             OBSE-285
      D1=0.D0                                                           OBSE-286
      DO 46 J=1,N                                                       OBSE-287
      IF (J.EQ.1) GO TO 44                                              OBSE-288
      D2=D1                                                             OBSE-289
      D1=DSQRT(DFLOAT((J-1)*(1+N-J)))                                   OBSE-290
      F1=F2                                                             OBSE-291
      F2=F3                                                             OBSE-292
      F3=(2.D0*FS*F2-F1*D2)/D1                                          OBSE-293
   44 J1=J1+1                                                           OBSE-294
      IF (9*J1.GT.JTN) CALL MEMO('OBSE',JTN,9*J1,2)                     OBSE-295
      DO 45 L=7,14                                                      OBSE-296
   45 NX(L,J1)=NX(L,K3)                                                 OBSE-297
      BM(3,J1)=F3*BM(3,K3)                                              OBSE-298
      BM(1,J1)=F3*BM(1,K3)                                              OBSE-299
   46 NX(IJ+1,J1)=J-1-K                                                 OBSE-300
   47 CONTINUE                                                          OBSE-301
C REDUCTION OF THE DESCRIPTION                                          OBSE-302
      J2=K1-1                                                           OBSE-303
      J3=KNX+1                                                          OBSE-304
      DO 49 J4=J3,J1                                                    OBSE-305
      J2=J2+1                                                           OBSE-306
      DO 48 L=7,14                                                      OBSE-307
   48 NX(L,J2)=NX(L,J4)                                                 OBSE-308
      BM(3,J2)=BM(3,J4)                                                 OBSE-309
   49 BM(1,J2)=BM(1,J4)                                                 OBSE-310
      KNX=J2                                                            OBSE-311
      GO TO 27                                                          OBSE-312
   50 IJ=IJ+2                                                           OBSE-313
      IF (IJ.LE.13) GO TO 40                                            OBSE-314
      DO 53 J1=K1,KNX                                                   OBSE-315
      M1=NX(7,J1)+NX(9,J1)+NX(11,J1)+NX(13,J1)                          OBSE-316
      M2=NX(8,J1)+NX(10,J1)+NX(12,J1)+NX(14,J1)+4*M1                    OBSE-317
      M3=M2/2                                                           OBSE-318
      IF (2*(M1/2).EQ.M1) GO TO 51                                      OBSE-319
      IF (2*M3.NE.M2) GO TO 52                                          OBSE-320
      BM(3,J1)=BM(1,J1)                                                 OBSE-321
      GO TO 52                                                          OBSE-322
   51 IF (2*M3.EQ.M2) GO TO 52                                          OBSE-323
      BM(3,J1)=-BM(1,J1)                                                OBSE-324
   52 IF (2*(M3/2).NE.M3) BM(3,J1)=-BM(3,J1)                            OBSE-325
   53 CONTINUE                                                          OBSE-326
      LT1=.FALSE.                                                       OBSE-327
      WRITE (MW,1013)                                                   OBSE-328
      K=KNX+1-K1                                                        OBSE-329
      GO TO 9                                                           OBSE-330
C STORAGE OF THE DESCRIPTION                                            OBSE-331
   54 L1=0                                                              OBSE-332
      ITX(1,KIT)=K1                                                     OBSE-333
      ITX(2,KIT)=KNX                                                    OBSE-334
      DO 55 I=1,NT                                                      OBSE-335
      IF (MF(2,I).NE.-KX) GO TO 55                                      OBSE-336
      MF(2,I)=KZ                                                        OBSE-337
      MF(6,I)=LT3                                                       OBSE-338
      L1=L1+1                                                           OBSE-339
   55 CONTINUE                                                          OBSE-340
      IF (L1.EQ.0) WRITE (MW,1014) KX                                   OBSE-341
      GO TO 6                                                           OBSE-342
C COMPUTATION OF ALL THE INDICATIONS NEEDED FOR THE OBSERVABLES         OBSE-343
C (BEGINNING AND END OF DO LOOPS,GEOMETRICAL COEFFICIENTS ...)          OBSE-344
   56 DO 57 I=1,NT                                                      OBSE-345
      I1=MF(2,I)+1                                                      OBSE-346
      MF(3,I)=ITX(1,I1)                                                 OBSE-347
   57 MF(4,I)=ITX(2,I1)                                                 OBSE-348
      LT1=.FALSE.                                                       OBSE-349
   58 LT1=.NOT.LT1                                                      OBSE-350
C LT1=.TRUE.  FIRST PASSAGE: NUMBER OF INFORMATIONS NEEDED FOR DO LOOPS OBSE-351
C LT1=.FALSE. SECOND ONE: COMPUTATION OF GEOMETRICAL COEFFICIENTS WHICH OBSE-352
C ARE STORED AFTER THE INDICATIONS FOR DO LOOPS                         OBSE-353
      ICAL=0                                                            OBSE-354
      NCAL=0                                                            OBSE-355
      DO 78 I=1,NT                                                      OBSE-356
      IV=MF(1,I)                                                        OBSE-357
      MT(3)=IPI(2,IV)                                                   OBSE-358
      MT(4)=IPI(3,IV)                                                   OBSE-359
      IF (MF(2,I).LE.0.OR.MF(2,I).EQ.19) GO TO 78                       OBSE-360
      IF (MF(2,I).NE.1) GO TO 59                                        OBSE-361
      IF (IV.NE.1) GO TO 89                                             OBSE-362
      GO TO 78                                                          OBSE-363
   59 IF ((MF(2,I).EQ.2.AND.MT(1).LE.3).OR.(MF(2,I).EQ.3.AND.MT(3).LE.3)OBSE-364
     1) GO TO 62                                                        OBSE-365
      IF (I.EQ.1) GO TO 63                                              OBSE-366
      I1=I-1                                                            OBSE-367
      DO 60 J=1,I1                                                      OBSE-368
      IF (MF(1,I).EQ.MF(1,J).AND.MF(2,I).EQ.MF(2,J)) GO TO 61           OBSE-369
   60 CONTINUE                                                          OBSE-370
      GO TO 63                                                          OBSE-371
   61 MF(3,I)=MF(3,J)                                                   OBSE-372
      MF(4,I)=MF(4,J)                                                   OBSE-373
      GO TO 78                                                          OBSE-374
   62 MF(2,I)=-MF(2,I)                                                  OBSE-375
      IF ((MF(2,I).EQ.-2.AND.MT(1).EQ.0).OR.(MF(2,I).EQ.-3.AND.MT(3).EQ.OBSE-376
     10)) GO TO 90                                                      OBSE-377
      GO TO 78                                                          OBSE-378
   63 I1=MF(3,I)                                                        OBSE-379
      I2=MF(4,I)                                                        OBSE-380
      DO 77 KI=I1,I2                                                    OBSE-381
      KT=0                                                              OBSE-382
      DO 73 L=1,4                                                       OBSE-383
      K=NX(2*L+5,KI)                                                    OBSE-384
      NM=NX(2*L+6,KI)                                                   OBSE-385
      KT=KT+K                                                           OBSE-386
      IF (K.GT.MT(L)) GO TO 91                                          OBSE-387
      IF (ICAL.EQ.0) GO TO 65                                           OBSE-388
      DO 64 N=1,ICAL                                                    OBSE-389
      IF (MT(L).EQ.NX(15,N).AND.K.EQ.NX(16,N).AND.NM.EQ.NX(17,N)) GO TO OBSE-390
     1 71                                                               OBSE-391
   64 CONTINUE                                                          OBSE-392
   65 ICAL=ICAL+1                                                       OBSE-393
      IF (9*ICAL.GT.JTN) CALL MEMO('OBSE',JTN,9*ICAL,2)                 OBSE-394
      NX(15,ICAL)=MT(L)                                                 OBSE-395
      NX(16,ICAL)=K                                                     OBSE-396
      NX(17,ICAL)=NM                                                    OBSE-397
      NX(18,ICAL)=JCAL                                                  OBSE-398
      IF (LT1) GO TO 73                                                 OBSE-399
      IL=MT(L)                                                          OBSE-400
      NX(1,ICAL)=MAX0(1,1+NM)                                           OBSE-401
      NX(2,ICAL)=MIN0(IL,IL+NM)                                         OBSE-402
      NX(3,ICAL)=NM                                                     OBSE-403
      NX(4,ICAL)=JCAL-NX(1,ICAL)+1                                      OBSE-404
      IF (NX(16,ICAL).EQ.0) GO TO 70                                    OBSE-405
C RECURRENCE COMPUTATION OF GEOMETRICAL COEFFICIENTS                    OBSE-406
      F3=DSQRT(DFLOAT(2*K+1))                                           OBSE-407
      DO 66 J=1,K                                                       OBSE-408
   66 F3=-F3*DSQRT(DFLOAT(IL-J)/DFLOAT(IL+J))                           OBSE-409
      JNM=NM                                                            OBSE-410
      INM=IABS(JNM)                                                     OBSE-411
      IF (JNM.EQ.0) GO TO 68                                            OBSE-412
      IF (INM.NE.JNM.AND.2*(INM/2).NE.INM) F3=-F3                       OBSE-413
      DO 67 J=1,INM                                                     OBSE-414
   67 F3=F3*DSQRT(DFLOAT((K+J)*(K-J+1))/DFLOAT(J*(IL-J)))               OBSE-415
   68 JCAL=JCAL+1                                                       OBSE-416
      IS=NX(2,ICAL)-NX(1,ICAL)                                          OBSE-417
      IF (JCAL+IS.GT.JTS) CALL MEMO('OBSE',JTS,JCAL+IS,2)               OBSE-418
      BM(JCAL,KX)=F3                                                    OBSE-419
      IF (IS.LT.1) GO TO 70                                             OBSE-420
      F2=0.D0                                                           OBSE-421
      D1=K*(K+1)-(IL+1)*(INM-1)                                         OBSE-422
      C2=0.D0                                                           OBSE-423
      DO 69 J=1,IS                                                      OBSE-424
      C1=C2                                                             OBSE-425
      C2=DSQRT(DFLOAT(J*(IL-J)*(J+INM)*(IL-J-INM)))                     OBSE-426
      D1=D1+DFLOAT(2*(2*J-2-IL+INM))                                    OBSE-427
      F1=F2                                                             OBSE-428
      F2=F3                                                             OBSE-429
      F3=-(D1*F2+C1*F1)/C2                                              OBSE-430
      JCAL=JCAL+1                                                       OBSE-431
      BM(JCAL,KX)=F3                                                    OBSE-432
   69 CONTINUE                                                          OBSE-433
   70 N=ICAL                                                            OBSE-434
   71 IF (LT1) GO TO 73                                                 OBSE-435
      DO 72 MA=1,4                                                      OBSE-436
      MC=20*NCAL+4*L+MA-4                                               OBSE-437
   72 NX(MC,KX)=NX(MA,N)                                                OBSE-438
      LZ(L)=NX(16,N).NE.0                                               OBSE-439
   73 CONTINUE                                                          OBSE-440
      IF (LT1) GO TO 76                                                 OBSE-441
      LZ(5)=KT.EQ.0                                                     OBSE-442
      LZ(6)=2*(KT/2).NE.KT                                              OBSE-443
      NZ(1)=0                                                           OBSE-444
      NZ(2)=0                                                           OBSE-445
      IF (LZ(4)) NZ(2)=MF(6,I)                                          OBSE-446
      IF (LZ(3).OR.LZ(4)) NZ(1)=MF(6,I)                                 OBSE-447
      LO(226)=LO(226).OR.NZ(1).NE.0                                     OBSE-448
      IA1=0                                                             OBSE-449
      IA2=1                                                             OBSE-450
      DO 74 LI=1,6                                                      OBSE-451
      IF (LZ(LI)) IA1=IA1+IA2                                           OBSE-452
   74 IA2=2*IA2                                                         OBSE-453
      NX(20*NCAL+17,KX)=IA1                                             OBSE-454
      NX(20*NCAL+18,KX)=NZ(1)+1000*NZ(2)                                OBSE-455
      BM(10*NCAL+10,KX)=BM(3,KI)                                        OBSE-456
      DO 75 LI=2,4,2                                                    OBSE-457
      IF (.NOT.LZ(LI)) GO TO 75                                         OBSE-458
      IM=NX(20*NCAL+4*LI-3,KX)                                          OBSE-459
      NX(20*NCAL+4*LI-3,KX)=MT(LI)-NX(20*NCAL+4*LI-2,KX)+1              OBSE-460
      NX(20*NCAL+4*LI-2,KX)=MT(LI)-IM+1                                 OBSE-461
      NX(20*NCAL+4*LI-1,KX)=-NX(20*NCAL+4*LI-1,KX)                      OBSE-462
      NX(20*NCAL+4*LI,KX)=NX(20*NCAL+4*LI,KX)+IM+NX(20*NCAL+4*LI-2,KX)  OBSE-463
   75 CONTINUE                                                          OBSE-464
   76 NCAL=NCAL+1                                                       OBSE-465
   77 CONTINUE                                                          OBSE-466
      IF (LT1) GO TO 78                                                 OBSE-467
      MF(4,I)=NCAL                                                      OBSE-468
      MF(3,I)=NCAL+I1-I2                                                OBSE-469
   78 CONTINUE                                                          OBSE-470
      IF (.NOT.LT1) GO TO 79                                            OBSE-471
      KX=MAX0(KNX,ICAL)+1                                               OBSE-472
      JCAL=10*NCAL                                                      OBSE-473
      JTS=JTN-18*(KX-1)                                                 OBSE-474
      IF (JCAL.GT.JTS) CALL MEMO('OBSE',JTS,JCAL,2)                     OBSE-475
      GO TO 58                                                          OBSE-476
C STORAGE OF LEGENDS AND COPY OF RESULTS                                OBSE-477
   79 DO 81 I=1,NT                                                      OBSE-478
      I5=IABS(MF(2,I))+1                                                OBSE-479
      DO 80 J=3,7                                                       OBSE-480
   80 CMF(J+3,I)=ITZ(J,I5)                                              OBSE-481
   81 CONTINUE                                                          OBSE-482
      DO 82 I=1,JCAL                                                    OBSE-483
      AM(1,I)=CBM(1,I,KX)                                               OBSE-484
   82 AM(2,I)=CBM(2,I,KX)                                               OBSE-485
      RETURN                                                            OBSE-486
   83 WRITE (MW,1015) I,MF(2,I)                                         OBSE-487
      GO TO 92                                                          OBSE-488
   84 WRITE (MW,1016) I,MF(2,I)                                         OBSE-489
      GO TO 92                                                          OBSE-490
   85 WRITE (MW,1017) NX(2*IJ+5,K),NX(2*IJ+6,K),MT(IJ)                  OBSE-491
      GO TO 92                                                          OBSE-492
   86 WRITE (MW,1018)                                                   OBSE-493
      GO TO 92                                                          OBSE-494
   87 WRITE (MW,1019) NX(2*I-1,K1),NX(2*I,K1)                           OBSE-495
      GO TO 92                                                          OBSE-496
   88 WRITE (MW,1020)                                                   OBSE-497
      GO TO 92                                                          OBSE-498
   89 WRITE (MW,1021) MF(1,I)                                           OBSE-499
      GO TO 92                                                          OBSE-500
   90 WRITE (MW,1022) MF(1,I)                                           OBSE-501
      GO TO 92                                                          OBSE-502
   91 WRITE (MW,1023) MT(L),MF(2,I),L,K                                 OBSE-503
   92 WRITE (MW,1024)                                                   OBSE-504
      STOP                                                              OBSE-505
 1000 FORMAT (2L1,I1,I2,I5,5A4)                                         OBSE-506
 1001 FORMAT (8I5)                                                      OBSE-507
 1002 FORMAT (6F10.5)                                                   OBSE-508
 1003 FORMAT (/' OBSERVABLE',I3,' LABELLED',5X,5A4,10X,I3,' COMPONENTS')OBSE-509
 1004 FORMAT (' DEFINED WITH AN AXIS PERPENDICULAR TO THE REACTION PLANEOBSE-510
     1')                                                                OBSE-511
 1005 FORMAT (' DEFINED IN THE LABORATORY SYSTEM')                      OBSE-512
 1006 FORMAT (' DEFINED WITH RESPECT TO THE INCIDENT BEAM')             OBSE-513
 1007 FORMAT (' NOT COMPLETELY DEFINED BY TENSORS')                     OBSE-514
 1008 FORMAT (/6(11X,4I2,2X))                                           OBSE-515
 1009 FORMAT (6(' +',F8.4,'*M',9X))                                     OBSE-516
 1010 FORMAT (6(11X,4I2,2X))                                            OBSE-517
 1011 FORMAT (' IMAGINARY PARTS'/6(1X,F8.5,12X))                        OBSE-518
 1012 FORMAT (6(' +',F8.4,'*A',9X))                                     OBSE-519
 1013 FORMAT (//' AFTER TRANSFORMATION'/)                               OBSE-520
 1014 FORMAT (' THE OBSERVABLE READ WITH NUMBER',I4,' IS NOT USED')     OBSE-521
 1015 FORMAT (' THE',I4,'TH OBSERVABLE, OF KIND',I2,' MUST BE FOR EXPERIOBSE-522
     1MENTAL DATA')                                                     OBSE-523
 1016 FORMAT (' THE',I4,'TH OBSERVABLE, OF KIND',I2,' IS NOT DEFINED')  OBSE-524
 1017 FORMAT (' NON TENSOR INDICATIONS',I4,' AND',I4,' INCORRECT FOR (2*OBSE-525
     1S+1) =',I3)                                                       OBSE-526
 1018 FORMAT (' ZERO OBSERVABLE')                                       OBSE-527
 1019 FORMAT (/' TOO LARGE MAGNETIC QUANTUM NUMBER OR NEGATIVE MULTIPOLAOBSE-528
     1RITY',2I6)                                                        OBSE-529
 1020 FORMAT (' THE SUM OF MAGNETIC QUANTUM NUMBERS IS ODD FOR ONE COMPOOBSE-530
     1NENT')                                                            OBSE-531
 1021 FORMAT (' NO CROSS SECTION DIVIDED BY RUTHERFORD''S FOR THE INELASOBSE-532
     1TIC CHANNEL',I3)                                                  OBSE-533
 1022 FORMAT (' NO POLARISATION FOR A ZERO SPIN IN THE CHANNEL',I3)     OBSE-534
 1023 FORMAT (5X,I5,' IS A TOO SMALL SPIN IN CHANNEL',I4,' AND PARTICLE'OBSE-535
     1,I4,' FOR A POLARISATION OF TENSOR ORDER',I4)                     OBSE-536
 1024 FORMAT (//' IN OBSE  ... STOP ...')                               OBSE-537
      END                                                               OBSE-538
C 01/01/04                                                      ECIS03  COLF-000
      SUBROUTINE COLF(NCOLT,NCOLL,IPI,WV,FG,XG,ISM,LMAX1,LMAX2,H,IEXP,Z,COLF-001
     1LM,LMAX3,NIV,KXT,LO)                                              COLF-002
C COULOMB FUNCTIONS AT THE MATCHING POINT RM=ISM*H                      COLF-003
C INPUT VARIABLES: NCOLT:   NUMBER OF NUCLEAR STATES (COUPLED OR NOT)   COLF-004
C                           AND CONTINUA FOR COMPOUND NUCLEUS           COLF-005
C                  NCOLL:   NUMBER OF COUPLED STATES                    COLF-006
C                  IPI(J,*):PRODUCT OF CHARGES FOR J=4                  COLF-007
C                  WV(J,*): MASS OF PARTICLE AND TARGET FOR J=1,2       COLF-008
C                           CENTER OF MASS ENERGY IN MEV FOR J=3        COLF-009
C                  ISM:     NUMBER OF POINTS FOR INTEGRATION            COLF-010
C                  LMAX1:   MAXIMUM NUMBER OF COULOMB FUNCTIONS         COLF-011
C                  LMAX2:   MAXIMUM NUMBER OF COULOMB PHASE SHIFTS      COLF-012
C                  H:       INTEGRATION STEP SIZE IN FERMIS             COLF-013
C                  LM:      LENGTH OF WORKING SPACE AS SINGLE PRECISION COLF-014
C                  NIV(*,*,3): ADDRESSES OF COULOMB INTEGRALS           COLF-015
C                  LO:      LOGICAL CONTROLS                            COLF-016
C FOR COMMON /NCOMP/ SEE CALX, LECT AND COLF                            COLF-017
C IN COMMON /NCOMP/NRD,NFISS: NUMBER OF GAMMA AND FISSION TRANSMISSION  COLF-018
C                             COEFFICIENTS READ IN LECT                 COLF-019
C                  TG0,BN,FNUG,EGD,GGD:  NEUTRON BINDING ENERGY         COLF-020
C                           GIANT DIPOLE RESONANCE ENERGY AND WIDTH ....COLF-021
C IN COMMON /DCONT/  XE,XM,XN:      RELATIVISTIC ENERGY AND MASS (COLF) COLF-022
C                    XZ:            CONVERSION FACTOR TO MILLIBARNS     COLF-023
C OUTPUT VARIABLES:WV(4,*): WAVE NUMBER IN 1/FERMI                     COLF-024
C                  WV(5,*): COULOMB PARAMETER                           COLF-025
C                  WV(6,*): SQUARE ROOT OF RATIOS OF WAVE NUMBERS       COLF-026
C                           (MODIFIED BY STEP SIZES)                    COLF-027
C                  WV(7,*): RELATIVISTIC ENERGY                         COLF-028
C                  WV(8,*): STEP SIZE TIMES RATIO OF WAVE NUMBER TO     COLF-029
C                                SQUARE ROOT OF NON RELATIVISTIC ENERGY COLF-030
C                  WV(9,*): WAVE NUMBER MULTIPLIES BY RATIO OF STEPS    COLF-031
C                  WV(10,*):SQUARE OF THE PRODUCT OF WAVE NUMBER BY THE COLF-032
C                                STEP SIZE                              COLF-033
C                  WV(11,*):STEP SIZE FOR THE LEVEL                     COLF-034
C TO TAKE INTO ACCOUNT RECOIL WHEN THE MASSES ARE NOT THE SAME IN ALL   COLF-035
C THE CHANNELS, THE WV(8,*) AND WV(9,*) ARE MULTIPLIED BY A SCALE FACTORCOLF-036
C X=(INITIAL TARGET MASS)/(TARGET MASS) AND WV(10,*) IS MULTIPLIED BY   COLF-037
C ITS SQUARE. ALWAYS WV(10,*)=(H*WV(9,*))**2.                           COLF-038
C                  FG(M,I=1 TO 4,IV): F,FP,G,GP FOR L=M-1 AND IV=1,NCOLLCOLF-039
C                   AND INTEGRALS OF F*F,F*G,G*F AND G*G/R**2 FROM RM TOCOLF-040
C                   INFINITY IF LO(44)=.TRUE. FOR IV GREATER THAN NCOLL COLF-041
C                  XG(M,IV): SIGMA(M-1)-SIGMA(0) FOR IV=1,NCOLL         COLF-042
C                   AND INTEGRALS OF F*F/R**2 FROM ZERO TO INFINITY     COLF-043
C                   IF LO(44)=.TRUE. FOR IV GREATER THAN NCOLL          COLF-044
C                  KXT:   TOTAL NUMBER OF PENETRABILITIES               COLF-045
C                  KXT:   NUMBER OF PENETRABILITIES FOR UNCOUPLED STATESCOLF-046
C                  LMAX3: EFFECTIVE MAXIMUM NUMBER OF COULOMB FUNCTIONS COLF-047
C                  IPI(J,I): FOR I=NCOLL+1 TO NCOLT, MAXIMUM L+1 AND    COLF-048
C                   STARTING ADDRESS OF PENETRABILITIES IN 7 AND 9      COLF-049
C WORKING FIELD IN FCOU: IEXP(I), I=1,LMAX1  POWERS OF 10 FOR LARGE     COLF-050
C                    VALUES OF FUNCTIONS (MULTIPLES OF 10**30)          COLF-051
C WORKING FIELD IN CORI:  Z  SEE IN CORI                                COLF-052
C***********************************************************************COLF-053
      IMPLICIT REAL*8 (A-H,O-Z)                                         COLF-054
      LOGICAL LO(250)                                                   COLF-055
      DIMENSION WV(18,1),FG(LMAX1,4,1),XG(LMAX2,1),Z(1),IEXP(1),NIV(NCOLCOLF-056
     1L,NCOLL,3),IPI(11,3)                                              COLF-057
      COMMON /DCONS/ CM,CK,CHB,CMB,CCZ                                  COLF-058
      COMMON /DCONT/ XE,XM,XN,XZ                                        COLF-059
      COMMON /INOUT/ MR,MW,MS                                           COLF-060
      KXT=0                                                             COLF-061
      XM=CM*WV(1,1)*WV(2,1)/(WV(1,1)+WV(2,1))                           COLF-062
      IF (LO(98)) XM=CM*WV(1,1)                                         COLF-063
      IF (.NOT.LO(209)) WRITE (MW,1000)                                 COLF-064
      IF (LO(209)) WRITE (MW,1001) XM                                   COLF-065
      XN=CHB**2/(2.D0*XM)                                               COLF-066
C CHECK OF THE LENGTH OF WORKING FIELD FOR IEXP                         COLF-067
      IF (LM.LT.LMAX1) CALL MEMO('COLF',LM,LMAX1,2)                     COLF-068
      AMRD=XM/CM                                                        COLF-069
      AMR=WV(3,1)/CM+WV(1,1)+WV(2,1)                                    COLF-070
      LMAX3=LMAX1                                                       COLF-071
C WAVE NUMBER,COULOMB PARAMETER AND CALL TO COULOMB SUBROUTINES         COLF-072
      DO 11 I=1,NCOLT                                                   COLF-073
      REC=1.D0                                                          COLF-074
      IF (LO(193).AND.WV(1,1).NE.WV(1,I)) REC=WV(2,1)/WV(2,I)           COLF-075
      HREC=H*REC                                                        COLF-076
      RM=ISM*H                                                          COLF-077
      WV(11,I)=HREC                                                     COLF-078
      IF (LO(8)) GO TO 1                                                COLF-079
      AMRD=WV(1,I)*WV(2,I)/(WV(1,I)+WV(2,I))                            COLF-080
      WSK2=CK*WV(3,I)*AMRD                                              COLF-081
      GO TO 3                                                           COLF-082
    1 AMT=WV(2,I)                                                       COLF-083
      IF (LO(209)) GO TO 2                                              COLF-084
C REDUCED MASS REPLACED BY REDUCED ENERGY (H.V. GERAMB'S SUGGESTION)    COLF-085
C FOR RELATIVISTIC CONVENTIONAL SCHROEDINGER EQUATION                   COLF-086
      IF (LO(44)) AMT=WV(2,1)                                           COLF-087
      AMRD=(AMR**4-(WV(1,I)**2-AMT**2)**2)/(4.D0*AMR**3)                COLF-088
    2 WSK2=0.125D0*CK*WV(3,I)*(WV(3,I)/CM+2.D0*WV(1,I)+2.D0*AMT)*(WV(3,ICOLF-089
     1)/CM+2.D0*WV(1,I))*(WV(3,I)/CM+2.D0*AMT)/AMR**2                   COLF-090
    3 WV(4,I)=DSQRT(DABS(WSK2))                                         COLF-091
      WV(9,I)=WV(4,I)*REC                                               COLF-092
      WV(6,I)=DSQRT(WV(9,I)/WV(9,1))                                    COLF-093
      WV(8,I)=HREC*DSQRT(CK*AMRD)                                       COLF-094
      WV(10,I)=HREC*HREC*WSK2                                           COLF-095
      IF (LO(209)) GO TO 4                                              COLF-096
      WV(5,I)=0.5D0*CK*CCZ*AMRD*IPI(4,I)/WV(4,I)                        COLF-097
      G=AMRD*(WV(1,I)+WV(2,I))/(WV(1,I)*WV(2,I))                        COLF-098
      IF (I.LE.NCOLL) WRITE (MW,1002) I,(WV(J,I),J=4,6),G,AMRD,HREC     COLF-099
      GO TO 5                                                           COLF-100
    4 HPC=CHB*WV(4,I)                                                   COLF-101
      WV(7,I)=DSQRT(HPC**2+XM**2)                                       COLF-102
      WV(5,I)=CCZ*IPI(4,I)/WV(4,I)*WV(7,I)/CHB**2                       COLF-103
      IF (I.LE.NCOLL) WRITE (MW,1002) I,(WV(J,I),J=4,7),HREC            COLF-104
    5 IF (DABS(WV(5,I)).GT.400.D0) WV(5,I)=400.D0*WV(5,I)/DABS(WV(5,I)) COLF-105
      IF (I.GT.NCOLL) GO TO 7                                           COLF-106
      RAU=RM*WV(9,I)                                                    COLF-107
      ETA=WV(5,I)                                                       COLF-108
      IF (WV(3,I).GT.0.) GO TO 6                                        COLF-109
      CALL COCL(FG(1,1,I),FG(1,2,I),FG(1,3,I),FG(1,4,I),XG(1,I),ETA,RAU,COLF-110
     1LMAX1-1)                                                          COLF-111
      GO TO 8                                                           COLF-112
    6 LX=LMAX1                                                          COLF-113
      CALL FCOU(LX-1,ETA,RAU,FG(1,1,I),FG(1,2,I),FG(1,3,I),FG(1,4,I),IEXCOLF-114
     1P,XG(1,I))                                                        COLF-115
      GO TO 8                                                           COLF-116
    7 LY=0                                                              COLF-117
      IF (WV(3,I).GT.0.) LY=MIN0(IDINT(4.D0+3.3D0*DSQRT(WV(3,I))),LMAX1)COLF-118
      IPI(10,I)=LY-1                                                    COLF-119
      IPI(8,I)=KXT                                                      COLF-120
      KXT=KXT+LY*IPI(2,I)                                               COLF-121
      GO TO 11                                                          COLF-122
    8 IPI(10,I)=IPI(10,1)                                               COLF-123
      IF (WSK2.LT.0.D0) GO TO 11                                        COLF-124
C COMPUTATION OF COULOMB PHASE-SHIFTS                                   COLF-125
      LMX1=LMAX3                                                        COLF-126
C CORRECTION OF LARGE VALUE AND SEARCH FOR MAXIMUM EFFECTIVE NUMBER     COLF-127
C OF COULOMB FUNCTIONS                                                  COLF-128
      DO 9 J=1,LMX1                                                     COLF-129
      IF (IEXP(J).EQ.0) GO TO 9                                         COLF-130
      IF (LO(208).OR.IEXP(J).GT.15) LMAX3=MIN0(LMAX3,J)                 COLF-131
      FG(J,1,I)=FG(J,1,I)*1.D-15                                        COLF-132
      FG(J,2,I)=FG(J,2,I)*1.D-15                                        COLF-133
      FG(J,3,I)=FG(J,3,I)*1.D15                                         COLF-134
      FG(J,4,I)=FG(J,4,I)*1.D15                                         COLF-135
    9 CONTINUE                                                          COLF-136
      IF (LMX1.NE.LMAX3) WRITE (MW,1003) LMX1,LMAX3                     COLF-137
      IF (.NOT.LO(208)) IPI(10,I)=MIN0(LMAX3-1,IPI(10,1))               COLF-138
C COMPUTATION OF COULOMB INTEGRALS                                      COLF-139
      XI=XG(1,I)                                                        COLF-140
      SI=WV(9,I)                                                        COLF-141
      DO 10 J=1,I                                                       COLF-142
      K=NIV(I,J,3)                                                      COLF-143
      IF (K.EQ.0) GO TO 10                                              COLF-144
      XJ=XG(1,J)                                                        COLF-145
      EJ=WV(5,J)                                                        COLF-146
      SJ=WV(9,J)                                                        COLF-147
      CALL CORI(ETA,EJ,SI,SJ,RM,XG(1,K),XI,XJ,FG(1,1,I),FG(1,1,J),Z,LMAXCOLF-148
     11,LMAX2,LM,LMAX3,FG(1,1,K))                                       COLF-149
   10 CONTINUE                                                          COLF-150
   11 CONTINUE                                                          COLF-151
      XZ=10.D0/DFLOAT(IPI(2,1)*IPI(3,1))/WV(4,1)**2                     COLF-152
      DO 13 I=1,NCOLL                                                   COLF-153
      XG(1,I)=0.D0                                                      COLF-154
      DO 12 J=2,LMAX2                                                   COLF-155
   12 XG(J,I)=XG(J-1,I)+DATAN2(WV(5,I),DFLOAT(J-1))                     COLF-156
   13 CONTINUE                                                          COLF-157
      XE=WV(7,1)                                                        COLF-158
      RETURN                                                            COLF-159
 1000 FORMAT (/' LEVEL       WAVE NUMBER  COULOMB PARAMETER   SQRT(K OUTCOLF-160
     1/K IN)   REL. ENHANC.      REDUCED MASS       STEP SIZE')         COLF-161
 1001 FORMAT (/' LEVEL       WAVE NUMBER  COULOMB PARAMETER   SQRT(K OUTCOLF-162
     1/K IN)   REL. ENERGY        STEP SIZE  ** MASS =',F15.8,' **')    COLF-163
 1002 FORMAT (1X,I5,6F18.10)                                            COLF-164
 1003 FORMAT (' NUMBER OF FINITE COULOMB INTEGRALS REDUCED FROM',I6,' TOCOLF-165
     1',I6)                                                             COLF-166
      END                                                               COLF-167
C 01/01/04                                                      ECIS03  COCL-000
      SUBROUTINE COCL(G,GD,F,FD,SIGMA,ETA,R,L)                          COCL-001
C COMPUTATION OF LOGARITHMIC DERIVATIVE AT THE MATCHING RADIUS OF       COCL-002
C INCREASING AND DECREASING SOLUTIONS WITH WRONSKIAN EQUAL TO UNITY     COCL-003
C FOR CLOSED CHANNELS.                                                  COCL-004
C FOR NEGATIVE VALUES OF ETA, THE LOGARITHMIC DERIVATIVE OF THE         COCL-005
C DECREASING SOLUTION IS COMPUTED, THE LOGARITHMIC DERIVATIVE OF THE    COCL-006
C INCREASING FUNCTION IS ASSUMED OPPOSITE. IF A NEGATIVE ETA DIFFERS    COCL-007
C BY LESS THAN 1/4 PERCENT OF AN INTEGER THE NEXT INTEGER VALUE IS      COCL-008
C USED (LAGUERRE POLYNOMIAL); IN OTHER CASES, C BACKWARDS INTEGRATION   COCL-009
C STARTING BEYOND THE OSCILLATIONS ESTIMATED UP TO 2*|ETA|.             COCL-010
C                                                                       COCL-011
C INPUT VARIABLES: ETA: COULOMB PARAMETER; ETA >= 0                     COCL-012
C                  R:   |K|*R VALUE                                     COCL-013
C                  L:   MAXIMUM L VALUE                                 COCL-014
C OUTPUT VARIABLES: SIGMA(I)=0 FOR I = 1 TO L+1                         COCL-015
C       F(I):  DECREASING SOLUTION AT (ETA,RHO) FOR I = 1 TO L+1        COCL-016
C       FD(I): DERIVATIVE OF F(I) FOR I = 1 TO L+1                      COCL-017
C       G(I):  INCREASING SOLUTION FOR I = 1 TO L+1                     COCL-018
C       GD(I): DERIVATIVE OF F(I) FOR I = 1 TO L+1                      COCL-019
C       SIGMA(I) RETIRNS 0.                                             COCL-020
C THE FUNCTIONS ARE RENORMALISED TO F=G AND SUCH THAT  F*GD-G*FD=1      COCL-021
C***********************************************************************COCL-022
      IMPLICIT REAL*8 (A-H,O-Z)                                         COCL-023
      DIMENSION G(1),GD(1),F(1),FD(1),SIGMA(1),S(7)                     COCL-024
      DATA GAMA /0.577215664901533D0/                                   COCL-025
C FOR L=0                                                               COCL-026
      IF (ETA.LE.-1.D-6) GO TO 17                                       COCL-027
      IF (ETA.GT.1.D-6) GO TO 1                                         COCL-028
C NO COULOMB POTENTIAL                                                  COCL-029
      FP=-1.D0                                                          COCL-030
      GP=1.D0                                                           COCL-031
      GO TO 14                                                          COCL-032
    1 IF ((ETA+1.D0)*R.GT.8.D0) GO TO 9                                 COCL-033
C SERIES EXPANSION                                                      COCL-034
      R2=-R*R                                                           COCL-035
      ET2=ETA+ETA                                                       COCL-036
      U0=0.D0                                                           COCL-037
      U1=R                                                              COCL-038
      V0=1.D0                                                           COCL-039
      V1=0.D0                                                           COCL-040
      U=U0+U1                                                           COCL-041
      V=V0+V1                                                           COCL-042
      UP=1.D0                                                           COCL-043
      VP=0.D0                                                           COCL-044
      DO 3 N=2,10000                                                    COCL-045
      XN=DFLOAT(N)                                                      COCL-046
      XN1=XN*(XN-1.D0)                                                  COCL-047
      U2=(ET2*R*U1-R2*U0)/XN1                                           COCL-048
      U=U+U2                                                            COCL-049
      V2=(ET2*R*V1-R2*V0-ET2*(2.D0*XN-1.D0)*U2)/XN1                     COCL-050
      V=V+V2                                                            COCL-051
      UP=UP+XN*U2/R                                                     COCL-052
      VP=VP+XN*V2/R                                                     COCL-053
      IF (DABS(U2).GT.1.D-16*DABS(U)) GO TO 2                           COCL-054
      IF (DABS(V2).LE.1.D-16*DABS(V)) GO TO 4                           COCL-055
    2 U0=U1                                                             COCL-056
      U1=U2                                                             COCL-057
      V0=V1                                                             COCL-058
    3 V1=V2                                                             COCL-059
    4 XX=DABS(ETA)                                                      COCL-060
      IF (XX.LT.1.D-8) GO TO 7                                          COCL-061
      Y=XX                                                              COCL-062
      K=0                                                               COCL-063
      IF (XX.LE.7.5D0) K=IDINT(8.5D0-XX)                                COCL-064
      X=1.D0+XX+DFLOAT(K)                                               COCL-065
      UU=1.D0/X**2                                                      COCL-066
      PSR=DLOG(X)-.5D0/X-UU/12.D0+UU**2/120.D0-UU**3/252.D0+UU**4/240.D0COCL-067
     1-UU**5/132.D0+UU**6*691.D0/32760.D0                               COCL-068
      IF (K.EQ.0) GO TO 6                                               COCL-069
      DO 5 I=1,K                                                        COCL-070
    5 PSR=PSR-1.D0/(X-DFLOAT(I))                                        COCL-071
    6 PSR=PSR-.5D0/Y+2.D0*GAMA-1.D0                                     COCL-072
      GO TO 8                                                           COCL-073
    7 PSR=GAMA-1.D0                                                     COCL-074
    8 CE=ET2*(PSR+DLOG(2.D0*R))                                         COCL-075
      FP=(VP+UP*CE+ET2*U/R)/(V+U*CE)                                    COCL-076
      GO TO 14                                                          COCL-077
    9 IF (R.LT.10.D0*(ETA+1.D0)) GO TO 11                               COCL-078
C ASYMPTOTIC EXPANSION                                                  COCL-079
      C=1.D0/R                                                          COCL-080
      A=1.D0                                                            COCL-081
      B=A                                                               COCL-082
      D=0.D0                                                            COCL-083
      DO 10 M=1,26                                                      COCL-084
      AM=DFLOAT(M)                                                      COCL-085
      A=-A*0.5D0*(ETA+AM-1.D0)*(ETA+AM)*C/AM                            COCL-086
      B=B+A                                                             COCL-087
   10 D=D-A*AM*C                                                        COCL-088
      FP=D/B-1.D0-ETA/R                                                 COCL-089
      GO TO 14                                                          COCL-090
C LONG RANGE INTEGRATION                                                COCL-091
   11 H=DMIN1(.001953125D0,.25D0*R)                                     COCL-092
      N=1+IDINT(10.D0/H)                                                COCL-093
      S(6)=DEXP(-H)                                                     COCL-094
      S(7)=1.D0                                                         COCL-095
      V2=H**2*(1.D0+2.D0*ETA/(R+H*DFLOAT(N)))/12.D0                     COCL-096
      V3=H**2*(1.D0+2.D0*ETA/(R+H*DFLOAT(N-1)))/12.D0                   COCL-097
      DO 13 I=N-2,-3,-1                                                 COCL-098
      DO 12 J=1,6                                                       COCL-099
   12 S(J)=S(J+1)/S(7)                                                  COCL-100
      V1=V2                                                             COCL-101
      V2=V3                                                             COCL-102
      V3=H**2*(1.D0+2.D0*ETA/(R+H*DFLOAT(I)))/12.D0                     COCL-103
   13 S(7)=(S(6)*(2.D0+10.D0*V2)-S(5)*(1.D0-V1))/(1.D0-V3)              COCL-104
      FP=((S(1)-S(7))/60.D0+.15D0*(S(6)-S(2))+.75D0*(S(3)-S(5)))/H/S(4) COCL-105
   14 XX=1.D0                                                           COCL-106
      MP=L+25+IDINT(5.D0*DABS(ETA))                                     COCL-107
      DO 15 M=MP,1,-1                                                   COCL-108
      XM=DFLOAT(M)                                                      COCL-109
      A=ETA/XM                                                          COCL-110
      B=A+XM/R                                                          COCL-111
      XX=-(A*A-1.D0)/(B+XX)+B                                           COCL-112
      IF (M.LE.L) GD(M)=XX                                              COCL-113
   15 CONTINUE                                                          COCL-114
      DO 16 M=1,L+1                                                     COCL-115
      X=DSQRT(DABS(GD(M)-FP))                                           COCL-116
      XM=DFLOAT(M)                                                      COCL-117
      F(M)=1.D0/X                                                       COCL-118
      FD(M)=FP/X                                                        COCL-119
      G(M)=1.D0/X                                                       COCL-120
      GD(M)=GD(M)/X                                                     COCL-121
      A=ETA/XM                                                          COCL-122
      B=A+XM/R                                                          COCL-123
   16 FP=(A*A-1.D0)/(B-FD(M)/F(M))-B                                    COCL-124
      GO TO 25                                                          COCL-125
   17 LP=IDINT(-ETA+.5D0)                                               COCL-126
      IF (DABS((DFLOAT(LP)+ETA)/ETA).LT..0025D0) GO TO 22               COCL-127
      LL=MIN0(L,IDINT(-ETA))                                            COCL-128
      RP=DMAX1(-2.D0*ETA-R,0.D0)                                        COCL-129
      DO 20 M=0,LL                                                      COCL-130
      AL=M*(M+1)                                                        COCL-131
      H=DMIN1(.001953125D0,R/DFLOAT(4+M))                               COCL-132
      N=IDINT(1.D0+(40.D0+RP)/H)                                        COCL-133
      RR=R+DFLOAT(N)*H                                                  COCL-134
      V2=H**2*(1.D0+AL/RR**2+2.D0*ETA/RR)/12.D0                         COCL-135
      RR=R+DFLOAT(N-1)*H                                                COCL-136
      V3=H**2*(1.D0+AL/RR**2+2.D0*ETA/RR)/12.D0                         COCL-137
      S(6)=DEXP(-H)                                                     COCL-138
      S(7)=1.D0                                                         COCL-139
      DO 19 I=N-2,-3,-1                                                 COCL-140
      DO 18 J=1,6                                                       COCL-141
   18 S(J)=S(J+1)/S(7)                                                  COCL-142
      V1=V2                                                             COCL-143
      V2=V3                                                             COCL-144
      RR=R+DFLOAT(I)*H                                                  COCL-145
      V3=H**2*(1.D0+AL/RR**2+2.D0*ETA/RR)/12.D0                         COCL-146
   19 S(7)=(S(6)*(2.D0+10.D0*V2)-S(5)*(1.D0-V1))/(1.D0-V3)              COCL-147
      FP=((S(1)-S(7))/60.D0+.15D0*(S(6)-S(2))+.75D0*(S(3)-S(5)))/H      COCL-148
      FF=S(4)                                                           COCL-149
      GP=1.D0                                                           COCL-150
      IF (FP.NE.0.D0) GP=-FP                                            COCL-151
      GG=1.D0                                                           COCL-152
      IF (FF.NE.0.D0) GG=FF                                             COCL-153
      X=DSQRT(DABS(GP*FF-GG*FP))                                        COCL-154
      F(M+1)=FF/X                                                       COCL-155
      FD(M+1)=FP/X                                                      COCL-156
      G(M+1)=GG/X                                                       COCL-157
      GD(M+1)=GP/X                                                      COCL-158
   20 CONTINUE                                                          COCL-159
      IF (LL.EQ.L) GO TO 25                                             COCL-160
      FP=FD(LL+1)/F(LL+1)                                               COCL-161
      DO 21 M=LL+1,L                                                    COCL-162
      XM=DFLOAT(M)                                                      COCL-163
      A=ETA/XM                                                          COCL-164
      B=A+XM/R                                                          COCL-165
      FP=(A*A-1.D0)/(B-FD(M)/F(M))-B                                    COCL-166
      X=DSQRT(DABS(2.D0*FP))                                            COCL-167
      F(M+1)=1.D0/X                                                     COCL-168
      FD(M+1)=FP/X                                                      COCL-169
      G(M+1)=1.D0/X                                                     COCL-170
   21 GD(M+1)=-FP/X                                                     COCL-171
      GO TO 25                                                          COCL-172
   22 FF=1.D0                                                           COCL-173
      FP=1.D0                                                           COCL-174
      MP=L+50-IDINT(5.D0*ETA)                                           COCL-175
      DO 24 M=MP,1,-1                                                   COCL-176
      FFM=DFLOAT(M)                                                     COCL-177
      A=ETA/FFM                                                         COCL-178
      B=A+FFM/R                                                         COCL-179
      Z=FP+B*FF                                                         COCL-180
      FP=B*Z-(A*A-1.D0)*FF                                              COCL-181
      FF=Z                                                              COCL-182
      IF (DABS(FF).LT.1.D0) GO TO 23                                    COCL-183
      FP=FP/FF                                                          COCL-184
      FF=1.D0                                                           COCL-185
   23 IF (M.GT.L+1) GO TO 24                                            COCL-186
      GP=1.D0                                                           COCL-187
      IF (FP.NE.0.D0) GP=-FP                                            COCL-188
      GG=1.D0                                                           COCL-189
      IF (FF.NE.0.D0) GG=FF                                             COCL-190
      X=DSQRT(DABS(GP*FF-GG*FP))                                        COCL-191
      F(M)=FF/X                                                         COCL-192
      FD(M)=FP/X                                                        COCL-193
      G(M)=GG/X                                                         COCL-194
      GD(M)=GP/X                                                        COCL-195
   24 CONTINUE                                                          COCL-196
   25 DO 26 M=0,L                                                       COCL-197
   26 SIGMA(M+1)=0.D0                                                   COCL-198
      RETURN                                                            COCL-199
      END                                                               COCL-200
C 01/01/04                                                      ECIS03  FCOU-000
      SUBROUTINE FCOU(L,ETA,RO,F,FP,G,GP,IEXP,SIGMA)                    FCOU-001
COULOMB FUNCTIONS FOR RHO > 0 AND -500 < ETA < 500   EX - DFCOUL        FCOU-002
C  FOR THE MATHEMATICAL DESCRIPTION SEE CHR. BARDIN ET. AL. CEA-N-906   FCOU-003
C  OR BARDIN ET AL. COMP. PHYSICS COMM. VOL 3 (1972) PAGES 73-87        FCOU-004
C  NUMERICAL ACCURACY: AT LEAST 8 SIGNIFICANT DIGITS, AN EXCEPTION IS   FCOU-005
C  THE REGION -8 < ETA < -6 AND RO < 125/6                              FCOU-006
C THE CALCULATION OF PHASE-SHIFTS HAS BEEN SUPPRESSED EXCEPT FOR L=0    FCOU-007
      IMPLICIT REAL*8 (A-H,O-Z)                                         FCOU-008
      DIMENSION F(1),FP(1),G(1),GP(1),IEXP(1),SIGMA(1)                  FCOU-009
      COMMON /INOUT/ MR,MW,MS                                           FCOU-010
      IF (RO.GT.0.D0.AND.DABS(ETA).LE.500.D0) GO TO 1                   FCOU-011
      WRITE (MW,1000) ETA,RO                                            FCOU-012
      STOP                                                              FCOU-013
    1 CALL FCZ0(ETA,RO,F1,FP1,G1,GP1,IEXP1,SIGMA1)                      FCOU-014
      F(1)=F1                                                           FCOU-015
      FP(1)=FP1                                                         FCOU-016
      G(1)=G1                                                           FCOU-017
      GP(1)=GP1                                                         FCOU-018
      IEXP(1)=IEXP1                                                     FCOU-019
      SIGMA(1)=SIGMA1                                                   FCOU-020
      IF (L.LE.0) RETURN                                                FCOU-021
      LINF=0                                                            FCOU-022
      LIN=1                                                             FCOU-023
      IND=0                                                             FCOU-024
      L1=L+1                                                            FCOU-025
      ETAC=ETA*ETA                                                      FCOU-026
      IF ((ETA.GT.0.D0.AND.RO.LT.ETA+ETA.OR.RO.LT.ETA+DSQRT(ETAC+1.D0)))FCOU-027
     1 GO TO 7                                                          FCOU-028
      IF (RO.GE.ETA+DSQRT(ETAC+DFLOAT(L*(L+1)))) GO TO 5                FCOU-029
    2 ROINF=ETA+DSQRT(ETAC+DFLOAT(LINF*(LINF+1)))                       FCOU-030
      IF (RO.LT.ROINF) GO TO 3                                          FCOU-031
      IF (LINF.GE.L) GO TO 4                                            FCOU-032
      LINF=LINF+1                                                       FCOU-033
      GO TO 2                                                           FCOU-034
    3 IND=1                                                             FCOU-035
    4 LIN=LINF+1                                                        FCOU-036
    5 XM=1.D0                                                           FCOU-037
      IF (IND.EQ.0) LIN=L1                                              FCOU-038
      DO 6 J=2,LIN                                                      FCOU-039
      ZIG=(DSQRT(ETAC+XM*XM))/XM                                        FCOU-040
      ZAG=ETA/XM+XM/RO                                                  FCOU-041
      F(J)=(ZAG*F(J-1)-FP(J-1))/ZIG                                     FCOU-042
      FP(J)=ZIG*F(J-1)-ZAG*F(J)                                         FCOU-043
      G(J)=(ZAG*G(J-1)-GP(J-1))/ZIG                                     FCOU-044
      GP(J)=ZIG*G(J-1)-ZAG*G(J)                                         FCOU-045
      IEXP(J)=IEXP(1)                                                   FCOU-046
    6 XM=XM+1.D0                                                        FCOU-047
      IF (IND.EQ.0) RETURN                                              FCOU-048
    7 FTEST=F(LIN)                                                      FCOU-049
      FPTEST=FP(LIN)                                                    FCOU-050
      LMAX=LINF+25+IDINT(5.D0*DABS(ETA))                                FCOU-051
      IF (LMAX.LT.L) LMAX=L                                             FCOU-052
      FI=1.D0                                                           FCOU-053
      FPI=1.D0                                                          FCOU-054
    8 XM=DFLOAT(LMAX+1)                                                 FCOU-055
      ZIG=(DSQRT(ETAC+XM*XM))/XM                                        FCOU-056
      ZAG=ETA/XM+XM/RO                                                  FCOU-057
      FL=(ZAG*FI+FPI)/ZIG                                               FCOU-058
      FPL=ZAG*FL-ZIG*FI                                                 FCOU-059
      IF (DABS(FL).LT.1.D15.AND.DABS(FPL).LT.1.D15) GO TO 9             FCOU-060
      FL=FL*1.D-15                                                      FCOU-061
      FPL=FPL*1.D-15                                                    FCOU-062
    9 FI=FL                                                             FCOU-063
      FPI=FPL                                                           FCOU-064
      IF (LMAX.LE.L) GO TO 11                                           FCOU-065
   10 LMAX=LMAX-1                                                       FCOU-066
      GO TO 8                                                           FCOU-067
   11 F(LMAX+1)=FL                                                      FCOU-068
      FP(LMAX+1)=FPL                                                    FCOU-069
      IF (LMAX.GT.LINF) GO TO 10                                        FCOU-070
      FACT=FTEST/F(LIN)                                                 FCOU-071
      FACTP=FPTEST/FP(LIN)                                              FCOU-072
      INDICE=IEXP(1)/15                                                 FCOU-073
      XM=DFLOAT(LINF)                                                   FCOU-074
      DO 13 J=LIN,L1                                                    FCOU-075
      F(J)=F(J)*FACT                                                    FCOU-076
      FP(J)=FP(J)*FACTP                                                 FCOU-077
      IF (J.EQ.1) GO TO 13                                              FCOU-078
      ZIG=(DSQRT(ETAC+XM*XM))/XM                                        FCOU-079
      ZAG=ETA/XM+XM/RO                                                  FCOU-080
      G(J)=(ZAG*G(J-1)-GP(J-1))/ZIG                                     FCOU-081
      GP(J)=ZIG*G(J-1)-ZAG*G(J)                                         FCOU-082
      IF (DABS(G(J)).LT.1.D15.AND.DABS(GP(J)).LT.1.D15) GO TO 12        FCOU-083
      G(J)=G(J)/1.D15                                                   FCOU-084
      GP(J)=GP(J)/1.D15                                                 FCOU-085
      INDICE=INDICE+1                                                   FCOU-086
   12 IEXP(J)=INDICE*15                                                 FCOU-087
      A=DLOG10(DABS(FP(J)))+DLOG10(DABS(G(J)))                          FCOU-088
      B=0.D0                                                            FCOU-089
      IF (A.GE.0.D0) B=1.D0                                             FCOU-090
      I1=IDINT(B+A)                                                     FCOU-091
      I2=IDINT(B+DLOG10(DABS(GP(J)))+DLOG10(DABS(F(J))))                FCOU-092
      F(J)=F(J)*1.D1**(-I2)                                             FCOU-093
      FP(J)=FP(J)*1.D1**(-I1)                                           FCOU-094
   13 XM=XM+1.D0                                                        FCOU-095
      RETURN                                                            FCOU-096
 1000 FORMAT ('  FCOU   ***  ETA =',1P,D13.5,',  RHO =',D13.5,'   ARGUMEFCOU-097
     1NT OUT OFF RANGE')                                                FCOU-098
      END                                                               FCOU-099
C 01/01/04                                                      ECIS03  FCZ0-000
      SUBROUTINE FCZ0(ETA,RO,F0,FP0,G0,GP0,IEXP,SIGMA)                  FCZ0-001
C THE LOWER LIMIT OF RICCATI METHOD FOR POSITIVE ETA HAS BEEN CHANGED   FCZ0-002
C FROM 30. TO 28. TO AVOID AN OVERFLOW IN THE NORMALISATION             FCZ0-003
      IMPLICIT REAL*8 (A-H,O-Z)                                         FCZ0-004
      SIGMA=SIGM(ETA)                                                   FCZ0-005
      IEXP=0                                                            FCZ0-006
      IF (ETA.LE.28.D0.AND.ETA.GE.-8.D0) GO TO 1                        FCZ0-007
      CALL YFRI(ETA,RO,F0,FP0,G0,GP0,IEXP,SIGMA)                        FCZ0-008
      RETURN                                                            FCZ0-009
    1 IF (ETA.NE.0.D0) GO TO 2                                          FCZ0-010
      F0=DSIN(RO)                                                       FCZ0-011
      G0=DCOS(RO)                                                       FCZ0-012
      FP0=G0                                                            FCZ0-013
      GP0=-F0                                                           FCZ0-014
      RETURN                                                            FCZ0-015
    2 BORNE=1.666666666666667D0*DABS(ETA)+7.5D0                         FCZ0-016
      IF (RO.LT.BORNE) GO TO 3                                          FCZ0-017
      CALL YFAS(ETA,RO,F0,FP0,G0,GP0,SIGMA)                             FCZ0-018
      RETURN                                                            FCZ0-019
    3 IF (ETA.GE.10.D0) GO TO 4                                         FCZ0-020
      IF (ETA.LE.0.D0) GO TO 5                                          FCZ0-021
      IF (RO-2.D0) 15 , 5 , 5                                           FCZ0-022
    4 IF (ETA.GT.(5.D0*RO+6.D1)/7.D0) GO TO 15                          FCZ0-023
C RS=-1 FOR NORMALISATION AT THE ORIGIN,RS=1 A RO=END                   FCZ0-024
    5 IF (ETA.LT.2.5) GO TO 6                                           FCZ0-025
      RS=1.D0                                                           FCZ0-026
      CALL YFAS(ETA,BORNE,F0,FP0,G0,GP0,SIGMA)                          FCZ0-027
      GO TO 8                                                           FCZ0-028
    6 RS=-1.D0                                                          FCZ0-029
C          CLENSHAW AT THE ORIGIN                                       FCZ0-030
      IF (ETA) 7,8,8                                                    FCZ0-031
    7 N=IDINT(-0.5D0*ETA+5.D0)                                          FCZ0-032
      GO TO 9                                                           FCZ0-033
    8 N=IDINT(ETA/5.D0+5.D0)                                            FCZ0-034
    9 N=10*(N/2+1)                                                      FCZ0-035
      TM1=1.D0                                                          FCZ0-036
      T=2.D0*RO/BORNE-1.D0                                              FCZ0-037
      X=T+T                                                             FCZ0-038
      DO 10 I=1,N                                                       FCZ0-039
      TP1=X*T-TM1                                                       FCZ0-040
      TM1=T                                                             FCZ0-041
   10 T=TP1                                                             FCZ0-042
      T=TM1                                                             FCZ0-043
      A1=1.D-30                                                         FCZ0-044
      A2=0.D0                                                           FCZ0-045
      B1=0.D0                                                           FCZ0-046
      B2=A1                                                             FCZ0-047
      S=1.D0                                                            FCZ0-048
      SA=0.D0                                                           FCZ0-049
      SB=0.D0                                                           FCZ0-050
      Z1=0.D0                                                           FCZ0-051
      Z1P=0.D0                                                          FCZ0-052
      AP12=0.D0                                                         FCZ0-053
      AP11=0.D0                                                         FCZ0-054
      BP11=0.D0                                                         FCZ0-055
      Z2=0.D0                                                           FCZ0-056
      Z2P=0.D0                                                          FCZ0-057
      AP22=0.D0                                                         FCZ0-058
      AP21=0.D0                                                         FCZ0-059
      BP21=0.D0                                                         FCZ0-060
      A0=8.D0*ETA/BORNE-1.D0                                            FCZ0-061
      BD=4.D0/(BORNE*BORNE)                                             FCZ0-062
      B0=BD*DFLOAT(N+2)                                                 FCZ0-063
      B4=BD*DFLOAT(N-1)                                                 FCZ0-064
      R4=4.D0*DFLOAT(N)                                                 FCZ0-065
C          BACKWARDS RECURRENCE                                         FCZ0-066
   11 AM11=A0*(A1-AP11)+AP12-B0*B1-B4*BP11                              FCZ0-067
      AM21=A0*(A2-AP21)+AP22-B0*B2-B4*BP21                              FCZ0-068
      SA=SA+S*A1                                                        FCZ0-069
      SB=SB+S*A2                                                        FCZ0-070
      Z1=Z1+A1*T                                                        FCZ0-071
      Z1P=Z1P+B1*T                                                      FCZ0-072
      Z2=Z2+A2*T                                                        FCZ0-073
      Z2P=Z2P+B2*T                                                      FCZ0-074
      IF (R4.EQ.0.D0) GO TO 12                                          FCZ0-075
      BM11=R4*A1+BP11                                                   FCZ0-076
      AP12=AP11                                                         FCZ0-077
      AP11=A1                                                           FCZ0-078
      A1=AM11                                                           FCZ0-079
      BP11=B1                                                           FCZ0-080
      B1=BM11                                                           FCZ0-081
      BM21=R4*A2+BP21                                                   FCZ0-082
      AP22=AP21                                                         FCZ0-083
      AP21=A2                                                           FCZ0-084
      A2=AM21                                                           FCZ0-085
      BP21=B2                                                           FCZ0-086
      B2=BM21                                                           FCZ0-087
      B4=B4-BD                                                          FCZ0-088
      B0=B0-BD                                                          FCZ0-089
      R4=R4-4.D0                                                        FCZ0-090
      S=S*RS                                                            FCZ0-091
      TM1=X*T-TP1                                                       FCZ0-092
      TP1=T                                                             FCZ0-093
      T=TM1                                                             FCZ0-094
      GO TO 11                                                          FCZ0-095
   12 A=AP21-AM21                                                       FCZ0-096
      B=AM11-AP11                                                       FCZ0-097
      SA=A*SA+B*SB                                                      FCZ0-098
      A1=A*A1+B*A2                                                      FCZ0-099
      B1=A*B1+B*B2                                                      FCZ0-100
      Z1=A*Z1+B*Z2                                                      FCZ0-101
      Z1P=A*Z1P+B*Z2P                                                   FCZ0-102
      SA=(SA-0.5D0*A1)/T                                                FCZ0-103
      Z1=Z1-0.5D0*A1                                                    FCZ0-104
      Z1P=Z1P-0.5D0*B1                                                  FCZ0-105
      IF (RS.LT.0.D0) GO TO 13                                          FCZ0-106
      S=F0/(BORNE*SA)                                                   FCZ0-107
      GO TO 14                                                          FCZ0-108
   13 PIETA=3.141592653589793D0*ETA                                     FCZ0-109
      S=DEXP(PIETA)                                                     FCZ0-110
      S=DEXP(-PIETA/2.D0)*DSQRT(2.D0*PIETA/(S-1.D0/S))/SA               FCZ0-111
   14 F0=S*RO*Z1                                                        FCZ0-112
      FP0=S*(Z1+RO*Z1P/BORNE)                                           FCZ0-113
      GO TO 18                                                          FCZ0-114
C   REGULAR SERIES AT THE ORIGIN                                        FCZ0-115
   15 PI=3.141592653589793D0                                            FCZ0-116
      RO2=RO*RO                                                         FCZ0-117
      ETAP=ETA+ETA                                                      FCZ0-118
      PIETA=PI*ETA                                                      FCZ0-119
      B=DEXP(PIETA)                                                     FCZ0-120
      B=DEXP(0.5D0*PIETA)*DSQRT((B-1.D0/B)/(2.D0*PIETA))                FCZ0-121
      U0=0.D0                                                           FCZ0-122
      U1=RO                                                             FCZ0-123
      U=U0+U1                                                           FCZ0-124
      UP=1.D0                                                           FCZ0-125
      XN=2.D0                                                           FCZ0-126
      DO 16 N=2,10000                                                   FCZ0-127
      XN1=XN*(XN-1.D0)                                                  FCZ0-128
      U2=(ETAP*RO*U1-RO2*U0)/XN1                                        FCZ0-129
      U=U+U2                                                            FCZ0-130
      UP=UP+XN*U2/RO                                                    FCZ0-131
      IF (DABS(U1)+DABS(U2).LT.1.D-10*DABS(U)) GO TO 17                 FCZ0-132
      U0=U1                                                             FCZ0-133
      U1=U2                                                             FCZ0-134
   16 XN=XN+1.D0                                                        FCZ0-135
   17 F0=U/B                                                            FCZ0-136
      FP0=UP/B                                                          FCZ0-137
   18 CALL YFIR(ETA,RO,G0,GP0,SIGMA)                                    FCZ0-138
      RETURN                                                            FCZ0-139
      END                                                               FCZ0-140
C 01/01/04                                                      ECIS03  YFRI-000
      SUBROUTINE YFRI(ETA,RAU,FO,FPO,GO,GPO,IDIV,SIGMA)                 YFRI-001
      IMPLICIT REAL*8 (A-H,O-Z)                                         YFRI-002
      DIMENSION Q(5),QP(5)                                              YFRI-003
C        COEFFICIENTS RICCATI                                           YFRI-004
      DATA G61,G62,G63,G64,G65,G66,G67,G68,G69,G610,G611/ 1.159057617187YFRI-005
     15D-2,3.863525390625D-2,4.6600341796875D-2,4.8583984375D-2,1.156514YFRI-006
     248567708D0,5.6874755859375D0,1.323888288225445D1,1.713083224826384YFRI-007
     3D1,1.269003295898436D1,5.05523681640625D0,8.42539464010415D-1/    YFRI-008
      DATA G81,G82,G83,G84,G85,G86,G87,G88,G89,G810,G811,G812,G813,G814,YFRI-009
     1G815/ 1.851092066083633D-2,8.63842964172363D-2,1.564757823944092D-YFRI-010
     21,1.430139541625977D-1,1.924622058868408D-1,8.500803152720129D0,7.YFRI-011
     3265429720878595D1,3.057942376817972D2,7.699689544836672D2,1.254157YFRI-012
     4054424285D3,1.361719536066055D3,9.831831171035763D2,4.547869927883YFRI-013
     5148D2,1.222640538215636D2,1.455524450256709D1/                    YFRI-014
      DATA GP61,GP62,GP63,GP64,GP65,GP66/ 0.289764404296875D-1,0.2318115YFRI-015
     1234375D0,0.8056640625D0,1.6015625D0,0.3046875D0,5.625D0/          YFRI-016
      DATA GP81,GP82,GP83,GP84,GP85,GP86,GP87,GP88/ 0.647882223129272D-1YFRI-017
     1,0.6910743713378906D0,0.3322952270507811D1,0.94830322265625D1,17.6YFRI-018
     296533203125D0,34.787109375D0,50.203125D0,78.75D0/                 YFRI-019
      DATA Q/ 0.4959570165D-1,0.8888888889D-2,0.2455199181D-2,0.91089580YFRI-020
     161D-3,0.2534684115D-3/                                            YFRI-021
      DATA QP,HO,HPO/ 0.1728260369D0,0.3174603174D-3,0.3581214850D-2,0.3YFRI-022
     1117824680D-3,0.9073966427D-3,2*0.D0/                              YFRI-023
      ETAC=ETA*ETA                                                      YFRI-024
      ETA2=ETA+ETA                                                      YFRI-025
      ETARO=ETA*RAU                                                     YFRI-026
      IND=0                                                             YFRI-027
      JND=0                                                             YFRI-028
      IG=0                                                              YFRI-029
      IDIV=0                                                            YFRI-030
      IF (ETA.GT.0.D0) GO TO 1                                          YFRI-031
      IF (-ETARO-14.0625D0) 3 , 15 , 15                                 YFRI-032
    1 IF (DABS(RAU-ETA2).LE.1.D-9) GO TO 14                             YFRI-033
      IF (RAU-ETA2) 6 , 14 , 2                                          YFRI-034
    2 IF (RAU-ETA2-2.D1*(ETA**0.25D0)) 4 , 15 , 15                      YFRI-035
    3 NN=1                                                              YFRI-036
      GO TO 5                                                           YFRI-037
    4 NN=0                                                              YFRI-038
    5 CALL YFCL(ETA,RAU,FO,FPO,GO,GPO,SIGMA,IDIV,NN)                    YFRI-039
      RETURN                                                            YFRI-040
    6 IF (ETARO.LE.12.D0) GO TO 3                                       YFRI-041
      TRA=ETA2-6.75D0*(ETA**0.4D0)                                      YFRI-042
      IF (RAU.LE.TRA) GO TO 7                                           YFRI-043
      IND=1                                                             YFRI-044
      JND=1                                                             YFRI-045
      RO=RAU                                                            YFRI-046
      RAU=TRA                                                           YFRI-047
      RAU0=TRA                                                          YFRI-048
C             RICCATI   1                                               YFRI-049
    7 X=RAU/ETA2                                                        YFRI-050
      U=(1.D0-X)/X                                                      YFRI-051
      X2=X*X                                                            YFRI-052
      RU=DSQRT(U)                                                       YFRI-053
      RX=DSQRT(X)                                                       YFRI-054
      TRE=1.D0/(U*RU*ETA2)                                              YFRI-055
      TRB=TRE*TRE                                                       YFRI-056
      FI=(DSQRT((1.D0-X)*X)+DATAN2(RX,DSQRT(1.D0-RX*RX))-1.5707963267948YFRI-057
     197D0)*ETA2                                                        YFRI-058
      TR1=-0.25D0*DLOG(U)                                               YFRI-059
      TR2=-((9.D0*U+6.D0)*U+5.D0)/48.D0                                 YFRI-060
      TR3=((((-3.D0*U-4.D0)*U+6.D0)*U+12.D0)*U+5.D0)/64.D0              YFRI-061
      TR4=-((((((U+2.D0)*945.D0*U+1395.D0)*U+12300.D0)*U+25191.D0)*U+198YFRI-062
     190.D0)*U+5525.D0)/46080.D0                                        YFRI-063
      TR5=((((((((-27.D0*U-72.D0)*U-68.D0)*U+360.D0)*U+2190.D0)*U+4808.DYFRI-064
     10)*U+5148.D0)*U+2712.D0)*U+565.D0)/2048.D0                        YFRI-065
      TR6=-((((((((((G61*U+G62)*U+G63)*U+G64)*U+G65)*U+G66)*U+G67)*U+G68YFRI-066
     1)*U+G69)*U+G610)*U+G611)                                          YFRI-067
      TR7=((((((((((((-81.D0*U-324.D0)*U-486.D0)*U-404.D0)*U+4509.D0)*U+YFRI-068
     152344.D0)*U+233436.D0)*U+567864.D0)*U+838521.D0)*U+775884.D0)*U+44YFRI-069
     21450.D0)*U+141660.D0)*U+19675.D0)/6144.D0                         YFRI-070
      TR8=(((((((((((((G81*U+G82)*U+G83)*U+G84)*U+G85)*U+G86)*U+G87)*U+GYFRI-071
     188)*U+G89)*U+G810)*U+G811)*U+G812)*U+G813)*U+G814)*U+G815         YFRI-072
      FI=FI+TRE*(TR2+TRB*(TR4+TRB*(TR6+TRB*TR8)))                       YFRI-073
      PSI=-FI                                                           YFRI-074
      TRA=TR1+TRB*(TR3+TRB*(TR5+TRB*TR7))                               YFRI-075
      FI=FI+TRA                                                         YFRI-076
      PSI=PSI+TRA                                                       YFRI-077
      FIP=RU*ETA2                                                       YFRI-078
      TRA=1.D0/(X2*U)                                                   YFRI-079
      TR1=0.25D0                                                        YFRI-080
      TRE=TRE/(X2*X2*U)                                                 YFRI-081
      TRB=TRB/(X2*X2)                                                   YFRI-082
      TR2=-(8.D0*X-3.D0)/32.D0                                          YFRI-083
      TR3=((24.D0*X-12.D0)*X+3.D0)/64.D0                                YFRI-084
      TR4=(((-1536.D0*X+704.D0)*X-336.D0)*X+63.D0)/2048.D0              YFRI-085
      TR5=((((1920.D0*X-576.D0)*X+504.D0)*X-180.D0)*X+27.D0)/1024.D0    YFRI-086
      TR6=((((-GP66*X+GP65)*X-GP64)*X+GP63)*X-GP62)*X+GP61              YFRI-087
      TR7=-((((((-40320.D0*X-10560.D0)*X-13248.D0)*X+7560.D0)*X-3132.D0)YFRI-088
     1*X+756.D0)*X-81.D0)/2048.D0                                       YFRI-089
      TR8=-(((((((GP88*X+GP87)*X+GP86)*X-GP85)*X+GP84)*X-GP83)*X+GP82)*XYFRI-090
     1-GP81)                                                            YFRI-091
      FIP=FIP+TRE*(TR2+TRB*(TR4+TRB*(TR6+TRB*TR8)))                     YFRI-092
      PSIP=-FIP                                                         YFRI-093
      TRA=TRA*(TR1+TRB*(TR3+TRB*(TR5+TRB*TR7)))                         YFRI-094
      FIP=FIP+TRA                                                       YFRI-095
      PSIP=PSIP+TRA                                                     YFRI-096
      XXX=34.588776394910686D0                                          YFRI-097
      INDG=IDINT(PSI/XXX)                                               YFRI-098
      IDIV=15*INDG                                                      YFRI-099
      IF (INDG.EQ.0) GO TO 8                                            YFRI-100
      PSI=PSI-XXX*INDG                                                  YFRI-101
      FI=FI+XXX*INDG                                                    YFRI-102
    8 FO=0.5D0*DEXP(FI)                                                 YFRI-103
      GO=DEXP(PSI)                                                      YFRI-104
      FPO=FO*FIP/ETA2                                                   YFRI-105
      GPO=GO*PSIP/ETA2                                                  YFRI-106
      IF (JND.EQ.0) RETURN                                              YFRI-107
      RAU=RO                                                            YFRI-108
      GO=FO                                                             YFRI-109
      GPO=FPO                                                           YFRI-110
    9 X=RAU0-RO                                                         YFRI-111
      X2=X*X                                                            YFRI-112
      X3=X*X2                                                           YFRI-113
      UNR=1.D0/RAU0                                                     YFRI-114
      ETR0=1.D0-2.D0*ETA*UNR                                            YFRI-115
      U0=GO                                                             YFRI-116
      U1=-X*GPO                                                         YFRI-117
      U2=-0.5D0*ETR0*X2*U0                                              YFRI-118
      S=U0+U1+U2                                                        YFRI-119
      V1=U1/X                                                           YFRI-120
      V2=2.D0*U2/X                                                      YFRI-121
      T=V1+V2                                                           YFRI-122
      XN=3.D0                                                           YFRI-123
      DO 11 N=3,10000                                                   YFRI-124
      XN1=XN-1.D0                                                       YFRI-125
      XN1=XN*XN1                                                        YFRI-126
      U3=X*U2*UNR*(1.D0-2.D0/XN)-ETR0*U1*X2/XN1+X3*U0*UNR/XN1           YFRI-127
      S=S+U3                                                            YFRI-128
      V3=XN*U3/X                                                        YFRI-129
      T=T+V3                                                            YFRI-130
      IF (DABS(U3).GT.1.D-10*DABS(S)) GO TO 10                          YFRI-131
      IF (DABS(V3).LE.1.D-10*DABS(T)) GO TO 12                          YFRI-132
   10 U0=U1                                                             YFRI-133
      U1=U2                                                             YFRI-134
      U2=U3                                                             YFRI-135
   11 XN=XN+1.D0                                                        YFRI-136
   12 IF (IG.EQ.0) GO TO 13                                             YFRI-137
      GO=S                                                              YFRI-138
      GPO=-T                                                            YFRI-139
      FO=HO                                                             YFRI-140
      FPO=HPO                                                           YFRI-141
      RETURN                                                            YFRI-142
   13 HO=S                                                              YFRI-143
      HPO=-T                                                            YFRI-144
   14 ET0=ETA**(0.1666666666666667D0)                                   YFRI-145
      ETAD=ETAC*ETAC                                                    YFRI-146
      ET=ETA**(0.6666666666666667D0)                                    YFRI-147
      ET1=ET*ET                                                         YFRI-148
      ET2=ET1*ET1                                                       YFRI-149
      ET3=ET2*ET                                                        YFRI-150
      ET4=ETAD*ET                                                       YFRI-151
      ET5=ET4*ET                                                        YFRI-152
      FO=1.D0-Q(1)/ET1-Q(2)/ETAC-Q(3)/ET3-Q(4)/ETAD-Q(5)/ET5            YFRI-153
      GO=1.D0+Q(1)/ET1-Q(2)/ETAC+Q(3)/ET3-Q(4)/ETAD+Q(5)/ET5            YFRI-154
      FPO=1.D0+QP(1)/ET+QP(2)/ETAC+QP(3)/ET2+QP(4)/ETAD+QP(5)/ET4       YFRI-155
      GPO=1.D0-QP(1)/ET+QP(2)/ETAC-QP(3)/ET2+QP(4)/ETAD-QP(5)/ET4       YFRI-156
      FO=0.7063326373D0*ET0*FO                                          YFRI-157
      GO=1.223404016D0*ET0*GO                                           YFRI-158
      FPO=0.4086957323D0*FPO/ET0                                        YFRI-159
      GPO=-0.7078817734D0*GPO/ET0                                       YFRI-160
      IDIV=0                                                            YFRI-161
      IF (IND.EQ.0) RETURN                                              YFRI-162
      IG=1                                                              YFRI-163
      RAU0=ETA2                                                         YFRI-164
      GO TO 9                                                           YFRI-165
C        RICCATI 2 ET 3                                                 YFRI-166
   15 X=ETA2/RAU                                                        YFRI-167
      X2=X*X                                                            YFRI-168
      U=1.D0-X                                                          YFRI-169
      RU=DSQRT(U)                                                       YFRI-170
      U3=U*U*U                                                          YFRI-171
      TRD=1.D0/(U3*ETA2*ETA2)                                           YFRI-172
      TRC=X2*TRD                                                        YFRI-173
      TRE=1.D0/(U*RU*ETA2)                                              YFRI-174
      FI=-0.25D0*DLOG(U)                                                YFRI-175
      TRB=TRD/64.D0                                                     YFRI-176
      TR3=(((3.D0*U-4.D0)*U-6.D0)*U+12.D0)*U-5.D0                       YFRI-177
      TR5=((((((((-27.D0*U+72.D0)*U-68.D0)*U-360.D0)*U+2190.D0)*U-4808.DYFRI-178
     10)*U+5148.D0)*U-2712.D0)*U+565.D0)/32.D0                          YFRI-179
      TR7=((((((((((((81.D0*U-324.D0)*U+486.D0)*U-404.D0)*U-4509.D0)*U+5YFRI-180
     12344.D0)*U-233436.D0)*U+567864.D0)*U-838521.D0)*U+775884.D0)*U-441YFRI-181
     2450.D0)*U+141660.D0)*U-19675.D0)/96.D0                            YFRI-182
      FI=FI+TRB*(TR3+TRD*(TR5+TRD*TR7))                                 YFRI-183
      FIP=0.25D0/U                                                      YFRI-184
      TRB=3.D0*TRC/(64.D0*U)                                            YFRI-185
      TR3=(4.D0-X)*X-8.D0                                               YFRI-186
      TR5=((((9.D0*X-60.D0)*X+168.D0)*X-192.D0)*X+640.D0)/16.D0         YFRI-187
      TR7=((((((-27.D0*X+252.D0)*X-1044.D0)*X+2520.D0)*X-4416.D0)*X-3520YFRI-188
     1.D0)*X-13440.D0)/32.D0                                            YFRI-189
      FIP=FIP+TRB*(TR3+TRC*(TR5+TRC*TR7))                               YFRI-190
      TRA=DABS((RU-1.D0)/(RU+1.D0))                                     YFRI-191
      PSI=(0.5D0*DLOG(TRA)+RU/X)*ETA2+0.785398163397448D0               YFRI-192
      TR2=-((9.D0*U-6.D0)*U+5.D0)/48.D0                                 YFRI-193
      TR4=((((((U-2.D0)*945.D0*U+1395.D0)*U-12300.D0)*U+25191.D0)*U-1989YFRI-194
     10.D0)*U+5525.D0)/46080.D0                                         YFRI-195
      TR6=(((((((((-G61*U+G62)*U-G63)*U+G64)*U-G65)*U+G66)*U-G67)*U+G68)YFRI-196
     1*U-G69)*U+G610)*U-G611                                            YFRI-197
      TR8=(((((((((((((G81*U-G82)*U+G83)*U-G84)*U+G85)*U-G86)*U+G87)*U-GYFRI-198
     188)*U+G89)*U-G810)*U+G811)*U-G812)*U+G813)*U-G814)*U+G815         YFRI-199
      PSI=PSI+TRE*(TR2+TRD*(TR4+TRD*(TR6+TRD*TR8)))                     YFRI-200
      PSIP=-RU*ETA2/X2                                                  YFRI-201
      TRB=TRE*X/U                                                       YFRI-202
      TR2=(3.D0*X-8.D0)/32.D0                                           YFRI-203
      TR4=-(((63.D0*X-336.D0)*X+704.D0)*X-1536.D0)/2048.D0              YFRI-204
      TR6=((((GP61*X-GP62)*X+GP63)*X-GP64)*X+GP65)*X-GP66               YFRI-205
      TR8=((((((-GP81*X+GP82)*X-GP83)*X+GP84)*X-GP85)*X+GP86)*X+GP87)*X+YFRI-206
     1GP88                                                              YFRI-207
      PSIP=PSIP+TRB*(TR2+TRC*(TR4+TRC*(TR6+TRC*TR8)))                   YFRI-208
      TRA=DEXP(FI)                                                      YFRI-209
      FO=TRA*DSIN(PSI)                                                  YFRI-210
      GO=TRA*DCOS(PSI)                                                  YFRI-211
      IF (ETA.GT.0.D0) GO TO 16                                         YFRI-212
      TRA=FO                                                            YFRI-213
      FO=-GO                                                            YFRI-214
      GO=TRA                                                            YFRI-215
   16 TRA=-ETA2/(RAU*RAU)                                               YFRI-216
      FPO=(FIP*FO+PSIP*GO)*TRA                                          YFRI-217
      GPO=(FIP*GO-PSIP*FO)*TRA                                          YFRI-218
      RETURN                                                            YFRI-219
      END                                                               YFRI-220
C 01/01/04                                                      ECIS03  YFCL-000
      SUBROUTINE YFCL(ETA,RO,U,UP,V,VP,SIGMA,IDIV,NN)                   YFCL-001
      IMPLICIT REAL*8 (A-H,O-Z)                                         YFCL-002
      IDIV=0                                                            YFCL-003
      ETAP=ETA+ETA                                                      YFCL-004
      RO2=RO*RO                                                         YFCL-005
      IF (NN.EQ.1) GO TO 4                                              YFCL-006
C          CLENSHAW ASYMPTOTIC                                          YFCL-007
      E2=ETA*ETA                                                        YFCL-008
      M=IDINT(40.D0+ETA/4.D0)                                           YFCL-009
      M=2*(M/2)                                                         YFCL-010
      I=1                                                               YFCL-011
      R=DFLOAT(M)                                                       YFCL-012
      D4=4.D0*R                                                         YFCL-013
      TM1=1.D0                                                          YFCL-014
      T=4.D0*ETA/RO-1.D0                                                YFCL-015
      Z=T+T                                                             YFCL-016
      DO 1 J=1,M                                                        YFCL-017
      TP1=Z*T-TM1                                                       YFCL-018
      TM1=T                                                             YFCL-019
    1 T=TP1                                                             YFCL-020
      T=TM1                                                             YFCL-021
      GR=0.D0                                                           YFCL-022
      GPR=0.D0                                                          YFCL-023
      SCR=0.D0                                                          YFCL-024
      EP1R=0.D0                                                         YFCL-025
      ER=0.D0                                                           YFCL-026
      DP1R=0.D0                                                         YFCL-027
      DR=1.D-25                                                         YFCL-028
      C1R=R+1.D0                                                        YFCL-029
      C0R=E2-R*(R+1.D0)                                                 YFCL-030
      GI=0.D0                                                           YFCL-031
      GPI=0.D0                                                          YFCL-032
      SCI=0.D0                                                          YFCL-033
      EP1I=0.D0                                                         YFCL-034
      EI=0.D0                                                           YFCL-035
      DP1I=0.D0                                                         YFCL-036
      DI=0.D0                                                           YFCL-037
      C1I=-3.D0*ETA                                                     YFCL-038
      C0I=-(R+R+1.D0)*ETA                                               YFCL-039
C          BACKWARDS RECURRENCE                                         YFCL-040
    2 SCZ=C0R*C0R+C0I*C0I                                               YFCL-041
      C2R=C1R*DR-C1I*DI+0.5D0*(DP1R+ER+EP1R)-ETA*DP1I                   YFCL-042
      C2I=C1R*DI+C1I*DR+0.5D0*(DP1I+EI+EP1I)+ETA*DP1R                   YFCL-043
      CR=(C2R*C0R+C2I*C0I)/SCZ                                          YFCL-044
      CI=(C0R*C2I-C0I*C2R)/SCZ                                          YFCL-045
      GR=GR+CR*T                                                        YFCL-046
      GPR=GPR+DR*T                                                      YFCL-047
      SCR=SCR+I*CR                                                      YFCL-048
      GI=GI+CI*T                                                        YFCL-049
      GPI=GPI+DI*T                                                      YFCL-050
      SCI=SCI+I*CI                                                      YFCL-051
      IF (R.EQ.0.D0) GO TO 3                                            YFCL-052
      EM1R=D4*DR+EP1R                                                   YFCL-053
      DM1R=D4*CR+DP1R                                                   YFCL-054
      EP1R=ER                                                           YFCL-055
      ER=EM1R                                                           YFCL-056
      DP1R=DR                                                           YFCL-057
      DR=DM1R                                                           YFCL-058
      EM1I=D4*DI+EP1I                                                   YFCL-059
      DM1I=D4*CI+DP1I                                                   YFCL-060
      EP1I=EI                                                           YFCL-061
      EI=EM1I                                                           YFCL-062
      DP1I=DI                                                           YFCL-063
      DI=DM1I                                                           YFCL-064
      TM1=Z*T-TP1                                                       YFCL-065
      TP1=T                                                             YFCL-066
      T=TM1                                                             YFCL-067
      C0R=C0R+R+R                                                       YFCL-068
      C0I=C0I+ETAP                                                      YFCL-069
      C1R=C1R-1.D0                                                      YFCL-070
      I=-I                                                              YFCL-071
      D4=D4-4.D0                                                        YFCL-072
      R=R-1.D0                                                          YFCL-073
      GO TO 2                                                           YFCL-074
    3 SCR=SCR-0.5D0*CR                                                  YFCL-075
      GR=GR-0.5D0*CR                                                    YFCL-076
      GPR=GPR-0.5D0*DR                                                  YFCL-077
      SCI=SCI-0.5D0*CI                                                  YFCL-078
      GI=GI-0.5D0*CI                                                    YFCL-079
      GPI=GPI-0.5D0*DI                                                  YFCL-080
      Z=SIGMA+RO-ETA*DLOG(RO+RO)                                        YFCL-081
      SCZ=SCR*SCR+SCI*SCI                                               YFCL-082
      CR=DCOS(Z)                                                        YFCL-083
      CI=DSIN(Z)                                                        YFCL-084
      DR=(CR*SCR+CI*SCI)/SCZ                                            YFCL-085
      DI=(CI*SCR-CR*SCI)/SCZ                                            YFCL-086
      SCI=1.D0-ETA/RO                                                   YFCL-087
      SCR=ETAP/RO2                                                      YFCL-088
      CR=-GI*SCI-GPR*SCR                                                YFCL-089
      CI=GR*SCI-GPI*SCR                                                 YFCL-090
      VP=DR*CR-DI*CI                                                    YFCL-091
      UP=DR*CI+DI*CR                                                    YFCL-092
      V=DR*GR-DI*GI                                                     YFCL-093
      U=DR*GI+DI*GR                                                     YFCL-094
      RETURN                                                            YFCL-095
C          SERIES AT THE ORIGIN                                         YFCL-096
    4 PI=3.141592653589793D0                                            YFCL-097
      PIETA=PI*ETA                                                      YFCL-098
      IF (DABS(PIETA).GT.36.D0) GO TO 5                                 YFCL-099
      P=DSQRT((DEXP(2.D0*PIETA)-1.D0)/(2.D0*PIETA))                     YFCL-100
      GO TO 7                                                           YFCL-101
    5 IF (PIETA.GT.0.D0) GO TO 6                                        YFCL-102
      P=1.D0/DSQRT(-PIETA-PIETA)                                        YFCL-103
      GO TO 7                                                           YFCL-104
    6 Z=34.588776394910686D0                                            YFCL-105
      IDIV=IDINT(PIETA/Z)                                               YFCL-106
      P=DEXP(PIETA-IDIV*Z)/DSQRT(PIETA+PIETA)                           YFCL-107
      IDIV=15*IDIV                                                      YFCL-108
    7 Z1=ETAP*(PSI(ETA)+.6931471805599453D0)                            YFCL-109
      U0=0.D0                                                           YFCL-110
      U1=RO                                                             YFCL-111
      V0=1.D0                                                           YFCL-112
      V1=Z1*RO                                                          YFCL-113
      U=U0+U1                                                           YFCL-114
      V=V0+V1                                                           YFCL-115
      UP=1.D0                                                           YFCL-116
      VP=Z1                                                             YFCL-117
      XN=2.D0                                                           YFCL-118
      DO 9 N=2,10000                                                    YFCL-119
      XN1=XN*(XN-1.D0)                                                  YFCL-120
      U2=(ETAP*RO*U1-RO2*U0)/XN1                                        YFCL-121
      U=U+U2                                                            YFCL-122
      V2=(ETAP*RO*V1-RO2*V0-ETAP*(XN+XN-1.D0)*U2)/XN1                   YFCL-123
      V=V+V2                                                            YFCL-124
      UP=UP+XN*U2/RO                                                    YFCL-125
      VP=VP+XN*V2/RO                                                    YFCL-126
      IF (DABS(U2).GT.1.D-14*DABS(U)) GO TO 8                           YFCL-127
      IF (DABS(V2).LE.1.D-14*DABS(V)) GO TO 10                          YFCL-128
    8 U0=U1                                                             YFCL-129
      U1=U2                                                             YFCL-130
      V0=V1                                                             YFCL-131
      V1=V2                                                             YFCL-132
    9 XN=XN+1.D0                                                        YFCL-133
   10 PP=V+ETAP*U*DLOG(RO)                                              YFCL-134
      W=U/P                                                             YFCL-135
      WP=UP/P                                                           YFCL-136
      V=P*PP                                                            YFCL-137
      VP=P*(VP+ETAP*(UP*DLOG(RO)+U/RO))                                 YFCL-138
      U=W                                                               YFCL-139
      UP=WP                                                             YFCL-140
      RETURN                                                            YFCL-141
      END                                                               YFCL-142
C 01/01/04                                                      ECIS03  YFAS-000
      SUBROUTINE YFAS(ETA,RAU,FO,FPO,GO,GPO,SIGO)                       YFAS-001
      IMPLICIT REAL*8 (A-H,O-Z)                                         YFAS-002
C          ASYMPTOTIC EXPANSIONS                                        YFAS-003
      TRB=0.D0                                                          YFAS-004
      RAU2=RAU+RAU                                                      YFAS-005
      ETAC=ETA*ETA                                                      YFAS-006
      N=0                                                               YFAS-007
      PS=1.D0                                                           YFAS-008
      GS=0.D0                                                           YFAS-009
      PT=0.D0                                                           YFAS-010
      GT=1.D0-ETA/RAU                                                   YFAS-011
      SF=PS                                                             YFAS-012
      SG=GS                                                             YFAS-013
      SPF=PT                                                            YFAS-014
      SPG=GT                                                            YFAS-015
    1 DENOM=DFLOAT(N+1)*RAU2                                            YFAS-016
      AN=DFLOAT(N+N+1)*ETA/DENOM                                        YFAS-017
      BN=(ETAC-DFLOAT(N*(N+1)))/DENOM                                   YFAS-018
      PS1=AN*PS-BN*PT                                                   YFAS-019
      GS1=AN*GS-BN*GT-PS1/RAU                                           YFAS-020
      PT1=AN*PT+BN*PS                                                   YFAS-021
      GT1=AN*GT+BN*GS-PT1/RAU                                           YFAS-022
      SF=SF+PS1                                                         YFAS-023
      SG=SG+GS1                                                         YFAS-024
      SPF=SPF+PT1                                                       YFAS-025
      SPG=SPG+GT1                                                       YFAS-026
      N=N+1                                                             YFAS-027
      IF (DABS(PS1).GT.TRB) TRB=DABS(PS1)                               YFAS-028
      IF (DABS(PS1).LT.1.D-10*TRB.OR.BN.LT.-1.D0) GO TO 2               YFAS-029
      PS=PS1                                                            YFAS-030
      GS=GS1                                                            YFAS-031
      PT=PT1                                                            YFAS-032
      GT=GT1                                                            YFAS-033
      GO TO 1                                                           YFAS-034
    2 TETAO=RAU-ETA*DLOG(RAU2)+SIGO                                     YFAS-035
      TRA=DSIN(TETAO)                                                   YFAS-036
      TRB=DCOS(TETAO)                                                   YFAS-037
      GO=SF*TRB-SPF*TRA                                                 YFAS-038
      GPO=SG*TRB-SPG*TRA                                                YFAS-039
      FO=SPF*TRB+SF*TRA                                                 YFAS-040
      FPO=SPG*TRB+SG*TRA                                                YFAS-041
      RETURN                                                            YFAS-042
      END                                                               YFAS-043
C 01/01/04                                                      ECIS03  YFIR-000
      SUBROUTINE YFIR(ETA,RO,G0,GP0,SIGMA)                              YFIR-001
C  IRREGULAR COULOMB FUNCTION                                           YFIR-002
      IMPLICIT REAL*8(A-H,O-Z)                                          YFIR-003
      IF (ETA.LE.0.D0) GO TO 9                                          YFIR-004
      IF ((RO.LE.(54.D0-ETA)/80.D0).OR.(ETA.LE.22.D0.AND.RO.LE.(30.D0-ETYFIR-005
     1A)/20.D0).OR.(ETA.LE.18.D0.AND.RO.LE.0.075D0*(26.D0-ETA)).OR.(ETA.YFIR-006
     2LE.10.D0.AND.RO.LE..15D0*(18.D0-ETA)).OR.(ETA.LE.3.D0.AND.RO.LE.2.YFIR-007
     325D0+7.35D0*(3.D0-ETA))) GO TO 5                                  YFIR-008
C   TAYLOR SERIES STARTING FROM RAU0                                    YFIR-009
    1 RAU0=1.666666666666667D0*DABS(ETA)+7.5D0                          YFIR-010
      CALL YFAS(ETA,RAU0,F0,FP0,G0,GP0,SIGMA)                           YFIR-011
      X=RAU0-RO                                                         YFIR-012
      X2=X*X                                                            YFIR-013
      X3=X*X2                                                           YFIR-014
      UNR=1.D0/RAU0                                                     YFIR-015
      ETR0=1.D0-2.D0*ETA*UNR                                            YFIR-016
      U0=G0                                                             YFIR-017
      U1=-X*GP0                                                         YFIR-018
      U2=-0.5D0*ETR0*X2*U0                                              YFIR-019
      S=U0+U1+U2                                                        YFIR-020
      V1=U1/X                                                           YFIR-021
      V2=2.D0*U2/X                                                      YFIR-022
      T=V1+V2                                                           YFIR-023
      XN=3.D0                                                           YFIR-024
      DO 3 N=3,10000                                                    YFIR-025
      XN1=XN-1.D0                                                       YFIR-026
      XN1=XN*XN1                                                        YFIR-027
      U3=X*U2*UNR*(1.D0-2.D0/XN)-ETR0*U1*X2/XN1+X3*U0*UNR/XN1           YFIR-028
      S=S+U3                                                            YFIR-029
      V3=XN*U3/X                                                        YFIR-030
      T=T+V3                                                            YFIR-031
      IF (DABS(U3).GT.1.D-11*DABS(S)) GO TO 2                           YFIR-032
      IF (DABS(V3).LE.1.D-11*DABS(T)) GO TO 4                           YFIR-033
    2 U0=U1                                                             YFIR-034
      U1=U2                                                             YFIR-035
      U2=U3                                                             YFIR-036
    3 XN=XN+1.D0                                                        YFIR-037
    4 G0=S                                                              YFIR-038
      GP0=-T                                                            YFIR-039
      RETURN                                                            YFIR-040
C   SERIES AT THE ORIGIN                                                YFIR-041
    5 PI=3.141592653589793D0                                            YFIR-042
      RO2=RO*RO                                                         YFIR-043
      ETAP=ETA+ETA                                                      YFIR-044
      PIETA=PI*ETA                                                      YFIR-045
      PIETA2=0.5D0*PIETA                                                YFIR-046
      B=DEXP(PIETA)                                                     YFIR-047
      B=DEXP(PIETA2)*DSQRT((B-1.D0/B)/(2.D0*PIETA))                     YFIR-048
      C1=ETAP*(PSI(ETA)+.6931471805599453D0)                            YFIR-049
      U0=0.D0                                                           YFIR-050
      U1=RO                                                             YFIR-051
      V0=1.D0                                                           YFIR-052
      V1=C1*RO                                                          YFIR-053
      U=U0+U1                                                           YFIR-054
      V=V0+V1                                                           YFIR-055
      UP=1.D0                                                           YFIR-056
      VP=C1                                                             YFIR-057
      XN=2.D0                                                           YFIR-058
      DO 7 N=2,10000                                                    YFIR-059
      XN1=XN*(XN-1.D0)                                                  YFIR-060
      U2=(ETAP*RO*U1-RO2*U0)/XN1                                        YFIR-061
      U=U+U2                                                            YFIR-062
      V2=(ETAP*RO*V1-RO2*V0-ETAP*(XN+XN-1.D0)*U2)/XN1                   YFIR-063
      V=V+V2                                                            YFIR-064
      UP=UP+XN*U2/RO                                                    YFIR-065
      VP=VP+XN*V2/RO                                                    YFIR-066
      IF (DABS(U2).GT.1.D-14*DABS(U)) GO TO 6                           YFIR-067
      IF (DABS(V2).LE.1.D-14*DABS(V)) GO TO 8                           YFIR-068
    6 U0=U1                                                             YFIR-069
      U1=U2                                                             YFIR-070
      V0=V1                                                             YFIR-071
      V1=V2                                                             YFIR-072
    7 XN=XN+1.D0                                                        YFIR-073
    8 GP=V+ETAP*U*DLOG(RO)                                              YFIR-074
      G0=B*GP                                                           YFIR-075
      GP0=B*(VP+ETAP*(UP*DLOG(RO)+U/RO))                                YFIR-076
      RETURN                                                            YFIR-077
    9 IF (RO.LE.0.5D0*ETA+9.D0) GO TO 5                                 YFIR-078
      GO TO 1                                                           YFIR-079
      END                                                               YFIR-080
C 01/01/04                                                      ECIS03  SIGM-000
      FUNCTION SIGM(ETA)                                                SIGM-001
C  COULOMB PHASE SHIFT SIGMA0                                           SIGM-002
      IMPLICIT REAL*8 (A-H,O-Z)                                         SIGM-003
      DIMENSION C(2,13)                                                 SIGM-004
      DATA C1,C2,C3,C4,C5,C6,C7,C /8.333333333333333D-2,-2.7777777777777SIGM-005
     178D-3,7.936507936507937D-4,-5.952380952380952D-4,8.417508417508417SIGM-006
     2D-4,-1.917526917526918D-3,6.41025641025641D-3,1.D-16,1.4D-15,-5.4DSIGM-007
     3-15,-2.07D-14,5.1D-13,-3.6968D-12,7.7823D-12,1.043427D-10,-1.18127SIGM-008
     446D-9,5.0020075D-9,6.116095D-9,-2.056338417D-7,1.133027232D-6,-1.2SIGM-009
     5504934821D-6,-2.01348547807D-5,1.280502823882D-4,-2.152416741149D-SIGM-010
     64,-1.1651675918591D-3,7.218943246663D-3,-9.621971527877D-3,-4.2197SIGM-011
     77345555443D-2,.1665386113822915D0,-4.20026350340952D-2,-.655878071SIGM-012
     85202538D0,.5772156649015329D0,1.D0/                               SIGM-013
      IF (DABS(ETA).GT.1.D-16) GO TO 1                                  SIGM-014
      SIGM=-C(1,13)*ETA                                                 SIGM-015
      GO TO 5                                                           SIGM-016
    1 E=ETA*ETA                                                         SIGM-017
      IF (E.GT.1.D0) GO TO 3                                            SIGM-018
      X=C(1,1)                                                          SIGM-019
      Y=C(2,1)                                                          SIGM-020
      DO 2 I=2,13                                                       SIGM-021
      X=C(1,I)-E*X                                                      SIGM-022
    2 Y=C(2,I)-E*Y                                                      SIGM-023
      SIGM=-DATAN2(ETA*X,Y)                                             SIGM-024
      GO TO 5                                                           SIGM-025
    3 L=1                                                               SIGM-026
      IF (E.LT.64.D0) L=2.D0+DSQRT(64.D0-E)                             SIGM-027
      Z=L                                                               SIGM-028
      X=DSQRT(Z*Z+E)                                                    SIGM-029
      Y=DATAN2(ETA,Z)                                                   SIGM-030
      E=1.D0/(Z*Z+E)                                                    SIGM-031
      SIGM=ETA*(DLOG(X)-1.D0)+(Z-.5D0)*Y-(C1*DSIN(Y)+E*(C2*DSIN(3.D0*Y)+SIGM-032
     1E*(C3*DSIN(5.D0*Y)+E*(C4*DSIN(7.D0*Y)+E*(C5*DSIN(9.D0*Y)+E*(C6*DSISIGM-033
     2N(11.D0*Y)+E*C7*DSIN(13.D0*Y)))))))/X                             SIGM-034
      IF (L.EQ.1) GO TO 5                                               SIGM-035
      J=L-1                                                             SIGM-036
      DO 4 I=1,J                                                        SIGM-037
      Z=Z-1.D0                                                          SIGM-038
    4 SIGM=SIGM-DATAN2(ETA,Z)                                           SIGM-039
    5 RETURN                                                            SIGM-040
      END                                                               SIGM-041
C 01/01/04                                                      ECIS03  PSI_-000
      FUNCTION PSI(ETA)                                                 PSI_-001
C  REAL PART OF PSI(1-I*ETA)-PSI(1)-PSI(I)                              PSI_-002
C  WITH PSI(Z) = LOGARITHMIC DERIVATIVE OF THE GAMMA FUNCTION           PSI_-003
      IMPLICIT REAL*8 (A-H,O-Z)                                         PSI_-004
      DIMENSION B(13)                                                   PSI_-005
      DATA C/.5772156649015329D0/,C1/8.333333333333333D-2/,C2/-8.3333333PSI_-006
     133333333D-3/,C3/3.968253968253968D-3/,C4/-4.166666666666667D-3/,C5PSI_-007
     2/7.575757575757576D-3/,C6/-2.109279609279609D-2/,B/7.4507117898354PSI_-008
     328D-9,2.980350351465228D-8,1.192199259653110D-7,4.769329867878064DPSI_-009
     4-7,1.908212716553938D-6,7.637197637899762D-6,3.058823630702049D-5,PSI_-010
     51.227133475784893D-4,4.941886041194665D-4,2.008392826082234D-3,8.3PSI_-011
     649277381922945D-3,3.692775514337036D-2,2.020569031595948D-1/      PSI_-012
      IF (DABS(ETA).GT.1.D-8) GO TO 1                                   PSI_-013
      PSI=C-1.D0                                                        PSI_-014
      GO TO 5                                                           PSI_-015
    1 E=ETA*ETA                                                         PSI_-016
      IF (E.GT..25D0) GO TO 3                                           PSI_-017
      X=B(1)                                                            PSI_-018
      DO 2 I=2,13                                                       PSI_-019
    2 X=B(I)-E*X                                                        PSI_-020
      PSI=C-1.D0/(1.D0+E)+E*X                                           PSI_-021
      GO TO 5                                                           PSI_-022
    3 L=1                                                               PSI_-023
      IF (E.LT.64.D0) L=2+IDINT(DSQRT(64.D0-E))                         PSI_-024
      X=DSQRT(L*L+E)                                                    PSI_-025
      Y=DATAN(ETA/L)                                                    PSI_-026
      E=1.D0/(L*L+E)                                                    PSI_-027
      PSI=DLOG(X)-.5D0*L*E-E*(C1*DCOS(2.D0*Y)+E*(C2*DCOS(4.D0*Y)+E*(C3*DPSI_-028
     1COS(6.D0*Y)+E*(C4*DCOS(8.D0*Y)+E*(C5*DCOS(10.D0*Y)+E*(C6*DCOS(12.DPSI_-029
     20*Y)+E*C1*DCOS(14.D0*Y)))))))+C+C-1.D0                            PSI_-030
      IF (L.EQ.1) GO TO 5                                               PSI_-031
      J=L-1                                                             PSI_-032
      E=ETA*ETA                                                         PSI_-033
      DO 4 I=1,J                                                        PSI_-034
    4 PSI=PSI-1.D0/(DFLOAT(I)+E/DFLOAT(I))                              PSI_-035
    5 RETURN                                                            PSI_-036
      END                                                               PSI_-037
C 01/01/04                                                      ECIS03  CORI-000
      SUBROUTINE CORI(EI,EF,S1,S2,RR,T,SSI,SSF,FGI,FGF,Z,LM1,LM2,LM3,LM,CORI-001
     1W)                                                                CORI-002
C    COMPUTATION OF THE INTEGRALS FROM RS TO INFINITY OF PRODUCTS OF    CORI-003
C REGULAR OR IRREGULAR COULOMB FUNCTIONS OF SAME L-VALUE DIVIDED BY R**2CORI-004
C FOR L=0 TO L=LM-1 AND OF REGULAR FUNCTIONS OF SAME L DIVIDED BY R**2  CORI-005
C L=0 TO L=LM2-1.CALLS CORZ IF THERE IS NO CHARGE.                      CORI-006
C INPUT VARIABLES:  EI,EF:  COULOMB PARAMETERS.                         CORI-007
C                   S1,S2:  WAVE NUMBERS.                               CORI-008
C                   RR:     MATCHING RADIUS.                            CORI-009
C                   SSI,SSF:COULOMB PHASE-SHIFTS FOR L=0.               CORI-010
C                   FGI,FGF:REGULAR AND IRREGULAR COULOMB FUNCTIONS.    CORI-011
C                   LM1:    MAXIMUM NUMBER OF INTEGRALS FROM RS TO INF. CORI-012
C                   LM2:    NUMBER OF INTEGRALS FROM 0 TO INFINITY      CORI-013
C                   LM3:    DIMENSION OF WORKING SPACE(SINGLE PRECISION)CORI-014
C                   LM:     ACTUAL NUMBER OF INTEGRALS FROM RS TO INF.  CORI-015
C OUTPUT:VARIABLES: T:      INTEGRALS FROM 0 TO INFINITY FOR PRODUCTS OFCORI-016
C                           REGULAR FUNCTIONS.                          CORI-017
C                   W:      INTEGRALS FROM RS TO INFINITY.              CORI-018
C WORKING SPACE:    Z:      FOR THE COMPUTATION OF HYPERGEOMETRIC F3.   CORI-019
C***********************************************************************CORI-020
      IMPLICIT REAL*8 (A-H,O-Z)                                         CORI-021
      LOGICAL LL(4)                                                     CORI-022
      DIMENSION W(LM1,4),X1(4),X2(4),X3(4),X4(4),FGI(LM1,2),FGF(LM1,2),ZCORI-023
     1(4,2),T(4),Y(4,4),AZ(2),CC(4,4)                                   CORI-024
      COMMON /INOUT/ MR,MW,MS                                           CORI-025
      DATA PI /3.141592653589793D0/                                     CORI-026
      SI=S1*RR                                                          CORI-027
      SF=S2*RR                                                          CORI-028
      IF (EI.EQ.0.) GO TO 36                                            CORI-029
C COMPUTATION OF SOME CONSTANTS                                         CORI-030
      IF (SI.GT.2.2D0*SF) GO TO 38                                      CORI-031
      RS=DSQRT(SI*SF)                                                   CORI-032
      FS=DSQRT(SF/SI)                                                   CORI-033
      FI=EI**2                                                          CORI-034
      FF=EF**2                                                          CORI-035
      EIF=EI*EF                                                         CORI-036
      EX=EF-EI                                                          CORI-037
      SIF=SI/SF+SF/SI                                                   CORI-038
      CX=FI*SI**2+FF*SF**2                                              CORI-039
      DX=FI*SI**2-FF*SF**2                                              CORI-040
      IF (DABS(DX).GT.1.D-10) GO TO 1                                   CORI-041
      DT=1.D0                                                           CORI-042
      DX=0.D0                                                           CORI-043
      DY=EIF                                                            CORI-044
      GO TO 2                                                           CORI-045
    1 DT=SI**2-SF**2                                                    CORI-046
      DY=(FI*SI**4-FF*SF**4)/(SI*SF)                                    CORI-047
      IF (DABS(DT).LT.1.D-10) GO TO 2                                   CORI-048
      DX=DX/DT                                                          CORI-049
      DY=DY/DT                                                          CORI-050
      DT=1.D0                                                           CORI-051
    2 RM=DMAX1((5.D0*DABS(EI)+22.5D0)*FS,(5.D0*DABS(EF)+22.5D0)/FS,.18D0CORI-052
     1*EIF)/3.D0                                                        CORI-053
      IF (RM.LT.RS) RM=RS                                               CORI-054
C COMPUTATION OF INTEGRALS FROM RS TO INFINITY FOR L=0 AND L=1          CORI-055
      CALL COR0(EI,EF,SSI,SSF,ZR,ZI,Z,LM3,RM,RS,FS,FI,FF,EX,CC)         CORI-056
C COMPUTATION OF INTEGRALS FROM 0 TO INFINITY FOR L=0 AND L=1           CORI-057
      A1=DSQRT(1.D0+FI)                                                 CORI-058
      B1=DSQRT(1.D0+FF)                                                 CORI-059
      IF (EI.NE.EF.OR.SI.NE.SF) GO TO 4                                 CORI-060
C WHEN EI=EF=E   I(L,L,2)=(PI-PI*COTH(PI*E)-1/E+SUM ON N FROM 0 TO L OF CORI-061
C                2*E/(N**2+E**2))/2/(2*L+1)                             CORI-062
      A2=PI*.5D0                                                        CORI-063
      B2=DEXP(-2.D0*PI*EI)                                              CORI-064
      IF (EI.NE.0.D0) A2=A2-.5D0*PI*(B2+1.D0)/(1.D0-B2)+.5D0/EI         CORI-065
      B3=0.D0                                                           CORI-066
      DO 3 I=1,LM2                                                      CORI-067
      B2=B3                                                             CORI-068
      B3=B3+1.D0                                                        CORI-069
      T(I)=A2/(B2+B3)                                                   CORI-070
    3 A2=A2+EI/(B3**2+FI)                                               CORI-071
      LL(1)=.TRUE.                                                      CORI-072
      LL(2)=.TRUE.                                                      CORI-073
      GO TO 11                                                          CORI-074
C COMPUTATION OF I(0,0,1) AND I(1,1,1)                                  CORI-075
C  I(L,L,1) = 2*(SI*SF)**(1/2)/(SI+SF)**2 * EXP( PI*SIGN(SF-SI)*EX/2) * CORI-076
C REAL PART OF (|SF-SI|/(SF+SI))**(I*EX)*GAMMA(-I*EX)*EXP(I*(XEF-XEI))* CORI-077
C   2F1(L+1-I*EI,L+1+I*EF;1+I*EF-I*EI;((SF-SI)/(SF+SI))**2)             CORI-078
C  WHERE EX=EF-EI.                                                      CORI-079
    4 A2=EX**2                                                          CORI-080
      B2=((SI-SF)/(SI+SF))**2                                           CORI-081
      A3=2.D0*DEXP(ZR-PI*.5D0*EX)/(SI+SF)**2*RS                         CORI-082
      IF (SF.GT.SI) A3=A3*DEXP(PI*EX)                                   CORI-083
      A4=ZI+SSF-SSI+.5D0*DLOG(B2)*EX                                    CORI-084
      A5=A3*DCOS(A4)                                                    CORI-085
      A6=A3*DSIN(A4)                                                    CORI-086
      A3=A5                                                             CORI-087
      A4=A6                                                             CORI-088
      A7=0.D0                                                           CORI-089
      DO 7 L=1,2                                                        CORI-090
      AZ(L)=A3                                                          CORI-091
      A8=0.D0                                                           CORI-092
      DO 5 N=1,500                                                      CORI-093
      A8=A8+1.D0                                                        CORI-094
      B3=(A7+A8)**2+EIF                                                 CORI-095
      B4=(A7+A8)*EX                                                     CORI-096
      B7=B2/(A8*(A8**2+A2))                                             CORI-097
      B5=(B3*A8+B4*EX)*B7                                               CORI-098
      B6=(A8*B4-EX*B3)*B7                                               CORI-099
      A9=A3*B5-A4*B6                                                    CORI-100
      A4=A3*B6+A4*B5                                                    CORI-101
      A3=A9                                                             CORI-102
      AZ(L)=AZ(L)+A3                                                    CORI-103
      IF (DABS(A3)+DABS(A4).LT.DABS(AZ(L))*1.D-16) GO TO 6              CORI-104
    5 CONTINUE                                                          CORI-105
      LI=L-1                                                            CORI-106
      WRITE (MW,1000) LI,LI,EI,EF,AZ(L),A3,A4                           CORI-107
    6 B3=1.D0+EIF                                                       CORI-108
      B5=(1.D0-B2)/DSQRT(B3*B3+EX*EX)                                   CORI-109
      A7=1.D0                                                           CORI-110
      A3=B5*(A5*B3-A6*EX)                                               CORI-111
    7 A4=B5*(A6*B3+A5*EX)                                               CORI-112
C COMPUTATION OF I(0,0,2) AND I(1,1,2) . ONLY THE FIRST IS NEEDED       CORI-113
C   FOR BACKWARD RECURRENCE                                             CORI-114
C I(L,L,2) = PI/(2*SH(PI*EX)*( (Y/SI-1/(Y*SF))/(2*L+1)+((SI-SF)/(SF*SI))CORI-115
C  *EXP(-PI*EX/2) * REAL PART OF EXP(I*(XEI-XEF))*((SI-SF)/2)**(-I*EX)  CORI-116
C  *SF**(I*EF)*SI**(-I*EI)*F3(-L+I*EI,-L-I*EF,L+1+I*EI,L+1-I*EF,2-I*EX; CORI-117
C  (SI-SF)/(2*SI),(SF-SI)/(2*SF))                                       CORI-118
C    WHERE  Y=EXP(PI*EX/2)*(SI/SF)**L*|GAMMA(L+1+I*EF)/GAMMA(L+1+I*EI)| CORI-119
      A2=EX/(2.D0*EF)                                                   CORI-120
      A3=-A2*(SI-SF)/(2.D0*SF)                                          CORI-121
      A4=A2*(SI-SF)/(2.D0*SI)                                           CORI-122
      LL(1)=DFLOAT(LM2)*DABS(EX).GT.3.D0*DABS(EI+EF)                    CORI-123
      LL(2)=.NOT.LL(1)                                                  CORI-124
      B3=DEXP(-ZR)/EX/DSQRT(1.D0+EX**2)                                 CORI-125
      B4=SSI-SSF-ZI+DATAN(EX)-.5D0*PI+EF*DLOG(SF)-EI*DLOG(SI)-EX*DLOG(.5CORI-126
     1D0*DABS(SI-SF))                                                   CORI-127
      IF (SF.GT.SI) B3=B3*DEXP(EX*PI)                                   CORI-128
      A5=B3*DCOS(B4)                                                    CORI-129
      A6=B3*DSIN(B4)                                                    CORI-130
      B5=A5                                                             CORI-131
      B6=A6                                                             CORI-132
      B2=DSQRT(EF/EI*(DEXP(-2.D0*PI*EI)-1.D0)/(DEXP(-2.D0*PI*EF)-1.D0)) CORI-133
      A7=DEXP(-.5D0*PI*EX)                                              CORI-134
      A8=PI*A7**2/(1.D0-A7**4)*RS                                       CORI-135
      A7=A7*(SF-SI)/(SF*SI)                                             CORI-136
      A9=0.D0                                                           CORI-137
      Z(1,1)=1.D0                                                       CORI-138
      Z(2,1)=0.D0                                                       CORI-139
      Z(3,1)=1.D0                                                       CORI-140
      Z(4,1)=0.D0                                                       CORI-141
      DO 10 L=1,2                                                       CORI-142
      LI=L-1                                                            CORI-143
      T(L)=B5                                                           CORI-144
      C1=0.D0                                                           CORI-145
      N=0                                                               CORI-146
    8 N=N+1                                                             CORI-147
      IF (4*N.GT.LM3) CALL MEMO('CORI',LM3,4*N,2)                       CORI-148
      C1=C1+1.D0                                                        CORI-149
      B3=C1+1.D0                                                        CORI-150
      B4=B3**2+EX**2                                                    CORI-151
      B9=(B5*B3-EX*B6)/(B4*A2)                                          CORI-152
      B6=(B5*EX+B6*B3)/(B4*A2)                                          CORI-153
      B5=B9                                                             CORI-154
      B3=(A9+C1)*(C1-A9-1.D0)-FI                                        CORI-155
      B4=EI*(2.D0*C1-1.D0)                                              CORI-156
      Z(1,N+1)=(Z(1,N)*B3-Z(2,N)*B4)*A4/C1                              CORI-157
      Z(2,N+1)=(Z(1,N)*B4+Z(2,N)*B3)*A4/C1                              CORI-158
      B3=(A9+C1)*(C1-A9-1.D0)-FF                                        CORI-159
      B4=-EF*(2.D0*C1-1.D0)                                             CORI-160
      Z(3,N+1)=(Z(3,N)*B3-Z(4,N)*B4)*A3/C1                              CORI-161
      Z(4,N+1)=(Z(3,N)*B4+Z(4,N)*B3)*A3/C1                              CORI-162
      B7=Z(1,N+1)                                                       CORI-163
      B8=Z(2,N+1)                                                       CORI-164
      DO 9 J=1,N                                                        CORI-165
      M=N+2-J                                                           CORI-166
      B7=B7+Z(1,J)*Z(3,M)-Z(2,J)*Z(4,M)                                 CORI-167
    9 B8=B8+Z(2,J)*Z(3,M)+Z(1,J)*Z(4,M)                                 CORI-168
      IF (DABS(B7)+DABS(B8).GT.1.D30) GO TO 39                          CORI-169
      B7=B7*B5-B8*B6                                                    CORI-170
      T(L)=T(L)+B7                                                      CORI-171
      IF (DABS(B7).GT.DABS(T(L))*1.D-16) GO TO 8                        CORI-172
      T(L)=A8*(A7*T(L)+(B2/SI-1.D0/(B2*SF))/(2.D0*A9+1.D0))             CORI-173
      IF (LL(1)) GO TO 11                                               CORI-174
      A9=1.D0                                                           CORI-175
      B2=B2*SF/SI*B1/A1                                                 CORI-176
      B4=B1*A1                                                          CORI-177
      B3=(1.D0+EIF)/B4                                                  CORI-178
      B4=-EX/B4                                                         CORI-179
      B5=B3*A5-B4*A6                                                    CORI-180
   10 B6=B3*A6+B4*A5                                                    CORI-181
C COMP. OF THE INTEGRALS FROM 0 TO INFINITY                             CORI-182
C UPWARDS RECURRENCES FOR THE OTHER INTEGRALS:  STARTING VALUES         CORI-183
   11 DO 12 J=1,4                                                       CORI-184
      W(1,J)=CC(J,3)                                                    CORI-185
      W(2,J)=CC(J,4)                                                    CORI-186
      X2(J)=CC(J,1)/RS                                                  CORI-187
   12 X3(J)=CC(J,2)/RS                                                  CORI-188
      RM=RS**2                                                          CORI-189
      IN=1                                                              CORI-190
      LX=LM                                                             CORI-191
      IF (.NOT.LL(1)) LX=MAX0(LX,LM2)                                   CORI-192
      LL(3)=LL(1)                                                       CORI-193
      I=2                                                               CORI-194
      IF (LL(1)) GO TO 13                                               CORI-195
      C4=AZ(1)                                                          CORI-196
      C5=AZ(2)                                                          CORI-197
   13 I=I+1                                                             CORI-198
      A2=A1                                                             CORI-199
      B2=B1                                                             CORI-200
      A=DFLOAT(I-1)                                                     CORI-201
      A1=DSQRT(A**2+FI)                                                 CORI-202
      B1=DSQRT(A**2+FF)                                                 CORI-203
      LL(4)=I.GT.LM                                                     CORI-204
   14 A9=(A-1.D0)**2*DT+DX                                              CORI-205
      A3=(2.D0*A-3.D0)*(A**2*DT+DX)*A2*B2                               CORI-206
      A4=-(2.D0*A-1.D0)*(DX*CX/RM+DY*((A-1.D0)**2+A**2)+DT*(A*A-A)**2*SICORI-207
     1F)                                                                CORI-208
      A5=(2.D0*A+1.D0)*A9*A1*B1                                         CORI-209
      C1=DT*(2.D0*A-1.D0)*(EI*SI+EF*SF)*A2*B2/(A-1.D0)                  CORI-210
      C2=DT*(A-.5D0)*(B2**2*((A-1.D0)*EF*SF-(A+1.D0)*EI*SI)*SF/SI+A2**2*CORI-211
     1((A-1.D0)*EI*SI-(A+1.D0)*EF*SF)*SI/SF)/(A-1.D0)                   CORI-212
      A6=A*A2*B2                                                        CORI-213
      A7=-(2.D0*A-1.D0)*(EIF+(A-1.D0)*A*SIF*.5D0)                       CORI-214
      A8=(A-1.D0)*A1*B1                                                 CORI-215
      IF (LL(4)) GO TO 15                                               CORI-216
      B6=(A-.5D0)/(RM*RS*(A-1.D0)**2)                                   CORI-217
      B3=-2.D0*RM*DX*B6*A2*B2                                           CORI-218
      B4=B6*A9*SF*(2.D0*(A*A-A)*A+(A+1.D0)*EI*SI-(A-1.D0)*EF*SF)*B2     CORI-219
      B5=B6*A9*SI*(2.D0*(A*A-A)*A+(A+1.D0)*EF*SF-(A-1.D0)*EI*SI)*A2     CORI-220
      B6=-B6*(A9*(2.D0*(A*A-A)**2*(2.D0*A-1.D0)+(EI*SI+EF*SF)*(A-1.D0)*(CORI-221
     1A+1.D0)*(2.D0*A-1.D0)+2.D0*EIF*RM*A)-(A-1.D0)*(CX*DX+(A-1.D0)*((A+CORI-222
     21.D0)*CX*DT-2.D0*RM*DY)))                                         CORI-223
      B9=(A-.5D0)*A/RS                                                  CORI-224
      B7=B9*B2/SI                                                       CORI-225
      B8=B9*A2/SF                                                       CORI-226
      B9=B9*(-(2.D0*A-1.D0)*(A-1.D0)-(EI*SI+EF*SF))/RM                  CORI-227
   15 IF (IN.NE.1) GO TO 24                                             CORI-228
      IF (LL(3)) GO TO 16                                               CORI-229
      T(I)=-(A3*T(I-2)+A4*T(I-1)+C1*C4+C2*C5)/A5                        CORI-230
      C3=C4                                                             CORI-231
      C4=C5                                                             CORI-232
      C5=-(A6*C3+A7*C4)/A8                                              CORI-233
   16 IF (LL(4)) GO TO 21                                               CORI-234
      DO 18 J=1,4                                                       CORI-235
      J1=MOD(J+1,2)+I-2                                                 CORI-236
      J2=(J+1)/2+I-3                                                    CORI-237
      DO 17 K=1,4                                                       CORI-238
      K1=MOD(K+1,2)*2+1                                                 CORI-239
      K2=2*((K+1)/2)-1                                                  CORI-240
   17 Y(K,J)=FGI(J1,K1)*FGF(J2,K2)                                      CORI-241
   18 CONTINUE                                                          CORI-242
C RECURRENCE FOR (0,2;L)                                                CORI-243
      DO 19 J=1,4                                                       CORI-244
      X1(J)=X2(J)                                                       CORI-245
      X2(J)=X3(J)                                                       CORI-246
   19 W(I,J)=-(B3*Y(J,1)+B4*Y(J,2)+B5*Y(J,3)+B6*Y(J,4)+A3*W(I-2,J)+A4*W(CORI-247
     1I-1,J)+C1*X1(J)+C2*X2(J))/A5                                      CORI-248
      DO 20 J=1,4                                                       CORI-249
   20 X3(J)=-(B7*Y(J,2)+B8*Y(J,3)+B9*Y(J,4)+A6*X1(J)+A7*X2(J))/A8       CORI-250
   21 IF (I.LT.LX) GO TO 13                                             CORI-251
      LN=MAX0(LM,IDINT(RS))+50                                          CORI-252
      LX=LN                                                             CORI-253
      IF (.NOT.LL(2)) LX=MAX0(LX,LM2+6*MIN0(IDINT((SI+SF)/DABS(SI-SF)),5CORI-254
     100))                                                              CORI-255
      LL(3)=LL(2)                                                       CORI-256
      IN=2                                                              CORI-257
      X4(1)=1.D0                                                        CORI-258
      X4(2)=0.D0                                                        CORI-259
      X4(3)=0.D0                                                        CORI-260
      X4(4)=0.D0                                                        CORI-261
      A1=LX-1                                                           CORI-262
      A2=DSQRT(A1**2+FI)                                                CORI-263
      B2=DSQRT(A1**2+FF)                                                CORI-264
      DO 22 J=1,4                                                       CORI-265
      X2(J)=0.D0                                                        CORI-266
   22 X3(J)=0.D0                                                        CORI-267
      X3(1)=1.D-20                                                      CORI-268
      X3(2)=1.D-20                                                      CORI-269
   23 LX=LX-1                                                           CORI-270
      A=LX                                                              CORI-271
      A1=A2                                                             CORI-272
      B1=B2                                                             CORI-273
      A3=DFLOAT(LX-1)                                                   CORI-274
      LL(4)=LX.GT.LN                                                    CORI-275
      A2=DSQRT(A3**2+FI)                                                CORI-276
      B2=DSQRT(A3**2+FF)                                                CORI-277
      GO TO 14                                                          CORI-278
   24 IF (LL(3)) GO TO 25                                               CORI-279
      X4(1)=-A6/(A7+A8*X4(1))                                           CORI-280
      X4(3)=X4(1)*X4(2)                                                 CORI-281
      X4(2)=-(A4*X4(3)+A5*X4(4)*X4(1)+C1+C2*X4(1))/A3                   CORI-282
      X4(4)=X4(3)                                                       CORI-283
      IF (LX.LE.LM2) T(LX)=X4(3)/X4(2)                                  CORI-284
   25 IF (LL(4)) GO TO 31                                               CORI-285
C DOWNWARD RECURRENCE FOR F(EI) AND F(EF)                               CORI-286
      DO 26 J=1,4                                                       CORI-287
      X1(J)=X2(J)                                                       CORI-288
   26 X2(J)=X3(J)                                                       CORI-289
      X3(1)=((2.D0*A-1.D0)*(EI+(A-1.D0)*A/SI)*X2(1)-(A-1.D0)*A1*X1(1))/(CORI-290
     1A*A2)                                                             CORI-291
      X3(2)=((2.D0*A-1.D0)*(EF+(A-1.D0)*A/SF)*X2(2)-(A-1.D0)*B1*X1(2))/(CORI-292
     1A*B2)                                                             CORI-293
C DOWNWARDS RECURRENCE FOR (1,2;L)                                      CORI-294
      X3(4)=-(A7*X2(4)+A8*X1(4)+B7*X2(1)*X3(2)+B8*X3(1)*X2(2)+B9*X2(1)*XCORI-295
     12(2))/A6                                                          CORI-296
C DOWNWARD RECURRENCE FOR (0,2;L)                                       CORI-297
      X3(3)=-(A4*X2(3)+A5*X1(3)+C1*X3(4)+C2*X2(4)+B3*X3(1)*X3(2)+B4*X2(1CORI-298
     1)*X3(2)+B5*X3(1)*X2(2)+B6*X2(1)*X2(2))/A3                         CORI-299
      I=LX-1                                                            CORI-300
      IF (I.LE.LM) W(I,1)=X3(3)                                         CORI-301
      IF (DABS(X3(1)).LT.1.D10) GO TO 27                                CORI-302
      X3(1)=X3(1)*1.D-20                                                CORI-303
      X2(1)=X2(1)*1.D-20                                                CORI-304
      GO TO 28                                                          CORI-305
   27 IF (DABS(X3(2)).LT.1.D10) GO TO 31                                CORI-306
      X2(2)=X2(2)*1.D-20                                                CORI-307
      X3(2)=X3(2)*1.D-20                                                CORI-308
   28 DO 29 J=3,4                                                       CORI-309
      X3(J)=X3(J)*1.D-20                                                CORI-310
   29 X2(J)=X2(J)*1.D-20                                                CORI-311
      IF (I.GT.LM) GO TO 31                                             CORI-312
      DO 30 J=I,LM                                                      CORI-313
   30 W(J,1)=W(J,1)*1.D-20                                              CORI-314
   31 IF (LX.GT.2) GO TO 23                                             CORI-315
      IF (LL(2)) GO TO 34                                               CORI-316
C COMPUTATION OF THE MIXTURE OF THE DECREASING SOLUTION OF HOMOGENEOUS  CORI-317
C EQUATION  (S2/S1)**L * |GAMMA(L+1+I*E2)/GAMMA(L+1+I*E1)|/(2*L+1)      CORI-318
C WHERE S2 IS THE SMALLER OF THE TWO VALUES SI AND SF.                  CORI-319
      A1=X4(2)*AZ(1)                                                    CORI-320
      A2=T(1)-A1                                                        CORI-321
      A3=0.D0                                                           CORI-322
      DO 33 I=2,LM2                                                     CORI-323
      A3=A3+1.D0                                                        CORI-324
      A1=T(I)*A1                                                        CORI-325
      A4=SF*DSQRT((A3**2+FF)/(A3**2+FI))/SI                             CORI-326
      IF (SI.GT.SF) GO TO 32                                            CORI-327
      A2=A2/A4                                                          CORI-328
      GO TO 33                                                          CORI-329
   32 A2=A2*A4                                                          CORI-330
   33 T(I)=A1+A2/(2.D0*A3+1.D0)                                         CORI-331
C THE VALUES OBTAINED ARE UNNORMALISED INTEGRALS FROM RS TO 0.          CORI-332
C NORMALISATION AND TRANSFORMATION TO INTEGRAL FROM RS TO INFINITY      CORI-333
   34 A1=FGI(1,1)*FGF(1,1)/(X3(1)*X3(2))                                CORI-334
      DO 35 J=1,LM                                                      CORI-335
   35 W(J,1)=A1*W(J,1)+T(J)                                             CORI-336
      IF (S1.NE.S2) WRITE (MW,1001) CC(1,3),W(1,1),CC(1,4),W(2,1)       CORI-337
C UPWARDS RECURRENCES FOR THE OTHER INTEGRALS:  STARTING VALUES         CORI-338
      RETURN                                                            CORI-339
   36 CALL CORZ(SI,SF,T,FGI,FGF,LM1,LM2,LM,W)                           CORI-340
      RETURN                                                            CORI-341
   37 WRITE (MW,1002)                                                   CORI-342
      STOP                                                              CORI-343
   38 WRITE (MW,1003) EF,EI                                             CORI-344
      GO TO 37                                                          CORI-345
   39 WRITE (MW,1004) N,LI,LI,EI,EF,T(L),B5,B6                          CORI-346
      GO TO 37                                                          CORI-347
 1000 FORMAT (' NO CONVERGENCE WITH 500 TERMS FOR I(',I1,',',I1,') WITH CORI-348
     1EI =',F15.6,31X,'AND EF =',F15.6,5X,'IN CORH'/5X,'VALUE =',D15.8,5CORI-349
     2X,'LAST TERM =',2D16.8/' ... CONTINUE ...')                       CORI-350
 1001 FORMAT (' INTEGRALS WITH REGULAR FUNCTIONS: (L+1)       DIRECT    CORI-351
     1   BACKWARDS RECURRENCE'/37X,'1',2D20.10/37X,'2',2D20.10)         CORI-352
 1002 FORMAT (//' IN CORI  ... STOP ...')                               CORI-353
 1003 FORMAT (' TOO LARGE RATIO EF/EI =',F15.6,1H/,F15.6,5X,'IN CORI')  CORI-354
 1004 FORMAT (' THE',I4,' TERM IS TOO LARGE IN THE COMPUTATION OF I(',I1CORI-355
     1,',',I1,',2)    WITH EI =',F15.6,5X,'AND EF =',F15.6,5X,'IN CORH'/CORI-356
     25X,'VALUE =',D15.8,5X,'LAST TERM =',2D16.8)                       CORI-357
      END                                                               CORI-358
C 01/01/04                                                      ECIS03  COR0-000
      SUBROUTINE COR0(EI,EF,SSI,SSF,ZR,ZI,Z,LM3,RM,RS,FS,FI,FF,EX,CC)   COR0-001
C    COMPUTATION OF THE INTEGRALS FROM RS TO INFINITY OF PRODUCTS OF    COR0-002
C REGULAR OR IRREGULAR COULOMB FUNCTIONS OF L=0 AND L=1 DIVIDED BY R**2 COR0-003
C INPUT VARIABLES: EI,EF:  COULOMB PARAMETERS.                          COR0-004
C                  SSI,SSF:COULOMB PHASE-SHIFTS FOR L=0.                COR0-005
C                  LM3:    DIMENSION OF WORKING SPACE(SINGLE PRECISION) COR0-006
C                  LM:     ACTUAL NUMBER OF INTEGRALS FROM RS TO INF.   COR0-007
C                  RM:     ACTUAL MATCHING RADIUS FOR INTEGRALS.        COR0-008
C                  RS:     NEEDED MATCHING RADIUS FOR INTEGRALS.        COR0-009
C                  FS:     SQUARE ROOT OF RATIO OF WAVE NUMBERS.        COR0-010
C                  FI,FF:  SQUARES OF COULOMB PARAMETERS.               COR0-011
C                  EX:     DIFFERENCE OF COULOMB PARAMETERS.            COR0-012
C OUTPUT VARIABLES:CC:     INTEGRALS FROM RS TO INFINITY.               COR0-013
C                  ZR,ZI:  REAL, IMAGINARY PART OF LOG(GAMMA(0.,EI-EF)) COR0-014
C WORKING SPACE:   Z:      FOR THE COMPUTATION OF F AND G.              COR0-015
C***********************************************************************COR0-016
      IMPLICIT REAL*8 (A-H,O-Z)                                         COR0-017
      DIMENSION X1(4),X2(4),X3(4),X4(4),X5(4),Z(4,2),C(2,2,2),Y(4,4),IE(COR0-018
     12),ABSC(20),P(20),B(7),CC(4,4)                                    COR0-019
      DATA PI /3.141592653589793D0/                                     COR0-020
      DATA B /.8333333333333333D-01,-.2777777777777778D-2,.7936507936507COR0-021
     19365D-3,-.5952380952380952D-3,.84175084175D-3,-.19175269D-2,.641D-COR0-022
     202/                                                               COR0-023
      DATA ABSC( 1),P( 1) / 0.88114514472040D-03, 0.22606385492666D-02/ COR0-024
      DATA ABSC( 2),P( 2) / 0.46368806502715D-02, 0.52491422655764D-02/ COR0-025
      DATA ABSC( 3),P( 3) / 0.11370025008113D-01, 0.82105291909539D-02/ COR0-026
      DATA ABSC( 4),P( 4) / 0.21041590393104D-01, 0.11122924597084D-01/ COR0-027
      DATA ABSC( 5),P( 5) / 0.33593595860662D-01, 0.13968503490012D-01/ COR0-028
      DATA ABSC( 6),P( 6) / 0.48950596515563D-01, 0.16730097641274D-01/ COR0-029
      DATA ABSC( 7),P( 7) / 0.67020248393870D-01, 0.19391083987236D-01/ COR0-030
      DATA ABSC( 8),P( 8) / 0.87693884583344D-01, 0.21935454092836D-01/ COR0-031
      DATA ABSC( 9),P( 9) / 0.11084717428674D+00, 0.24347903817536D-01/ COR0-032
      DATA ABSC(10),P(10) / 0.13634087240504D+00, 0.26613923491968D-01/ COR0-033
      DATA ABSC(11),P(11) / 0.16402165769291D+00, 0.28719884549696D-01/ COR0-034
      DATA ABSC(12),P(12) / 0.19372305516601D+00, 0.30653121246465D-01/ COR0-035
      DATA ABSC(13),P(13) / 0.22526643745244D+00, 0.32402006728300D-01/ COR0-036
      DATA ABSC(14),P(14) / 0.25846209915691D+00, 0.33956022907617D-01/ COR0-037
      DATA ABSC(15),P(15) / 0.29311039781420D+00, 0.35305823695643D-01/ COR0-038
      DATA ABSC(16),P(16) / 0.32900295458712D+00, 0.36443291197902D-01/ COR0-039
      DATA ABSC(17),P(17) / 0.36592390749637D+00, 0.37361584528984D-01/ COR0-040
      DATA ABSC(18),P(18) / 0.40365120964931D+00, 0.38055180950313D-01/ COR0-041
      DATA ABSC(19),P(19) / 0.44195796466237D+00, 0.38519909082124D-01/ COR0-042
      DATA ABSC(20),P(20) / 0.48061379124697D+00, 0.38752973989212D-01/ COR0-043
C COMPUTATION OF THE INTEGRALS FROM RM TO INFINITY FOR L=0,1 BY         COR0-044
C RAWITSCHER'S METHOD. (COMP. PHYSICS COMM., VOL.11,183,1976)           COR0-045
C EXPANSIONS OF COULOMB WAVE FUNCTIONS ARE Z(N,2*M-1)+I*Z(N,2*M)=G+I*F  COR0-046
C   N=1: L=0,E=EI     N=2: L=0,E=EF     N=3: L=1,E=EI     N=4: L=1,E=EF COR0-047
      A1=RM/FS                                                          COR0-048
      B1=RM*FS                                                          COR0-049
      X1(1)=A1-EI*DLOG(2.D0*A1)+SSI                                     COR0-050
      X1(3)=B1-EF*DLOG(2.D0*B1)+SSF                                     COR0-051
      X1(2)=X1(1)+DATAN(EI)-.5D0*PI                                     COR0-052
      X1(4)=X1(3)+DATAN(EF)-.5D0*PI                                     COR0-053
C FIRST TERM OF ASYMPTOTIC EXPANSION OF H(+/-) FOR L=0,1                COR0-054
      DO 1 I=1,4                                                        COR0-055
      X5(I)=0.D0                                                        COR0-056
      Z(I,1)=DCOS(X1(I))                                                COR0-057
    1 Z(I,2)=DSIN(X1(I))                                                COR0-058
      X1(1)=-A1-B1                                                      COR0-059
      X2(1)=EI+EF                                                       COR0-060
      X1(2)=B1-A1                                                       COR0-061
      X2(2)=-EX                                                         COR0-062
      IF (DABS(X1(2)).LT.1.D-8) X1(2)=0.D0                              COR0-063
      IF (X1(2).EQ.0.D0) GO TO 4                                        COR0-064
C COMPUTATION OF LOG(GAMMA(0.,EI-EF))                                   COR0-065
      B2=-DATAN(EX/11.D0)                                               COR0-066
      B3=121.D0+EX**2                                                   COR0-067
      A2=.5D0*DLOG(B3)                                                  COR0-068
      ZR=.91893853320467274D0+10.5D0*A2+EX*B2-11.D0-DLOG(DABS(EX))      COR0-069
      ZI=10.5D0*B2+EX-EX*A2+0.5D0*PI                                    COR0-070
      IF (EX.LT.0.D0) ZI=ZI-PI                                          COR0-071
      A2=11.D0/B3                                                       COR0-072
      B2=EX/B3                                                          COR0-073
      A3=A2**2-B2**2                                                    COR0-074
      B3=2.D0*A2*B2                                                     COR0-075
      DO 2 I=1,7                                                        COR0-076
      ZR=ZR+B(I)*A2                                                     COR0-077
      ZI=ZI+B(I)*B2                                                     COR0-078
      C1=A2*A3-B2*B3                                                    COR0-079
      B2=A2*B3+B2*A3                                                    COR0-080
    2 A2=C1                                                             COR0-081
      DO 3 I=1,10                                                       COR0-082
      A2=DFLOAT(I)                                                      COR0-083
      ZR=ZR-.5D0*DLOG(A2**2+EX**2)                                      COR0-084
    3 ZI=ZI+DATAN(EX/A2)                                                COR0-085
    4 IF (DABS(X1(2)).GT.2.D0) GO TO 9                                  COR0-086
C COMPUTATION OF THE FIRST CONFLUENT HYPERGEOMETRIC FUNCTION            COR0-087
      IF (X1(2).EQ.0.D0) GO TO 8                                        COR0-088
      IF (DABS(X2(2)).LT.1.D-3) GO TO 5                                 COR0-089
      A2=DEXP(-DSIGN(0.5D0*PI,X1(2))*X2(2)+ZR)                          COR0-090
      B2=DSIGN(ZI,X2(2))+X2(2)*DLOG(DABS(X1(2)))                        COR0-091
      X5(2)=A2*DCOS(B2)                                                 COR0-092
      X5(4)=A2*DSIN(B2)-1.D0/X2(2)                                      COR0-093
      GO TO 6                                                           COR0-094
C EXPANSION FOR SMALL EX                                                COR0-095
    5 A2=DLOG(DABS(X1(2)))                                              COR0-096
      B2=PI*.5D0                                                        COR0-097
      IF (X1(2).LT.0.D0) B2=-B2                                         COR0-098
      A3=A2*(1.D0+EX*(B2-EX*((A2**2-3.D0*B2**2)/6.D0+EX*B2*(A2**2-B2**2)COR0-099
     1/6.D0)))                                                          COR0-100
      B3=B2-EX*((A2**2-B2**2)/2.D0+EX*(B2*(3.D0*A2**2-B2**2)/6.D0-EX*(A2COR0-101
     1**4-6.D0*A2**2*B2**2+B2**4)/24.D0))                               COR0-102
      A2=.5772156649015329D0-.400685634386331D0*EX**2                   COR0-103
      B2=-EX*(.822467033424113D0-0.270580808427784D0*EX**2)             COR0-104
      A4=A2*(1.D0+EX*(B2-EX*((A2**2-3.D0*B2**2)/6.D0+EX*B2*(A2**2-B2**2)COR0-105
     1/6.D0)))                                                          COR0-106
      B4=B2-EX*((A2**2-B2**2)/2.D0+EX*(B2*(3.D0*A2**2-B2**2)/6.D0-EX*(A2COR0-107
     1**4-6.D0*A2**2*B2**2+B2**4)/24.D0))                               COR0-108
      X5(2)=-A3-A4-EX*(A3*B4+B3*A4)                                     COR0-109
      X5(4)=-B3-B4+EX*(A3*A4-B3*B4)                                     COR0-110
    6 A2=X5(2)                                                          COR0-111
      B2=X5(4)                                                          COR0-112
      A3=1.D0                                                           COR0-113
      B3=0.D0                                                           COR0-114
      DO 7 J=1,1000                                                     COR0-115
      B4=J                                                              COR0-116
      C1=-X1(2)*(B4*B3-EX*A3)/(B4**2+EX**2)                             COR0-117
      B3=X1(2)*(B4*A3+EX*B3)/(B4**2+EX**2)                              COR0-118
      A3=C1                                                             COR0-119
      C2=(-X1(2)*B2+A3)/B4                                              COR0-120
      B2=(X1(2)*A2+B3)/B4                                               COR0-121
      A2=C2                                                             COR0-122
      X5(2)=X5(2)+A2                                                    COR0-123
      X5(4)=X5(4)+B2                                                    COR0-124
      IF (DABS(A2)+DABS(B2).LT.1.D-12*(DABS(X5(2))+DABS(X5(4)))) GO TO 9COR0-125
    7 CONTINUE                                                          COR0-126
      GO TO 9                                                           COR0-127
    8 X5(4)=-.5D0*PI                                                    COR0-128
      X5(2)=0.D0                                                        COR0-129
    9 DO 10 J=1,16                                                      COR0-130
   10 Y(J,1)=0.D0                                                       COR0-131
      N=IDINT(DMIN1(A1+DSQRT(A1**2-FI),B1+DSQRT(B1**2-FF))+2.D0)        COR0-132
      A3=0.D0                                                           COR0-133
      B3=0.D0                                                           COR0-134
C LOOP OF THE ASYMPTOTIC EXPANSION                                      COR0-135
      DO 24 I=1,N                                                       COR0-136
      IF (8*I.GT.LM3) CALL MEMO('COR0',LM3,8*I,2)                       COR0-137
      A4=DFLOAT(I)-2                                                    COR0-138
      IF (I.EQ.1) GO TO 16                                              COR0-139
      IF (I.EQ.2) GO TO 12                                              COR0-140
      B4=1.D0-.5D0/A4                                                   COR0-141
      X3(1)=EI*B4/A1                                                    COR0-142
      X3(2)=X3(1)                                                       COR0-143
      X3(3)=EF*B4/B1                                                    COR0-144
      X3(4)=X3(3)                                                       COR0-145
      X4(1)=(FI-A4*(A4-1.D0))/(2.D0*A4*A1)                              COR0-146
      X4(2)=(FI-(A4+1.D0)*(A4-2.D0))/(2.D0*A4*A1)                       COR0-147
      X4(3)=(FF-A4*(A4-1.D0))/(2.D0*A4*B1)                              COR0-148
      X4(4)=(FF-(A4+1.D0)*(A4-2.D0))/(2.D0*A4*B1)                       COR0-149
C NEW TERM OF ASYMPTOTIC EXPANSION                                      COR0-150
      DO 11 J=1,4                                                       COR0-151
      Z(J,2*I-3)=Z(J,2*I-5)*X3(J)-Z(J,2*I-4)*X4(J)                      COR0-152
   11 Z(J,2*I-2)=Z(J,2*I-5)*X4(J)+Z(J,2*I-4)*X3(J)                      COR0-153
   12 DO 13 J=1,8                                                       COR0-154
   13 C(J,1,1)=0.D0                                                     COR0-155
C PRODUCT OF THE ASYMPTOTIC EXPANSIONS IN C(1,N,M)+I*C(2,N,M)           COR0-156
C  N=1: H0(+)(EI)*H0(+)(EF)     N=2: H1(+)(EI)*H1(+)(EF)                COR0-157
C  M=1: HL(+)(EI)*HL(+)(EF)     M=2: HL(+)(EI)*HL(+)(EF)*               COR0-158
      I1=I-1                                                            COR0-159
      DO 15 J=1,I1                                                      COR0-160
      M=I-J                                                             COR0-161
      DO 14 L=1,2                                                       COR0-162
      C(1,L,1)=C(1,L,1)+Z(L,2*J-1)*Z(L+2,2*M-1)-Z(L,2*J)*Z(L+2,2*M)     COR0-163
      C(2,L,1)=C(2,L,1)+Z(L,2*J-1)*Z(L+2,2*M)+Z(L,2*J)*Z(L+2,2*M-1)     COR0-164
      C(1,L,2)=C(1,L,2)+Z(L,2*J-1)*Z(L+2,2*M-1)+Z(L,2*J)*Z(L+2,2*M)     COR0-165
   14 C(2,L,2)=C(2,L,2)-Z(L,2*J-1)*Z(L+2,2*M)+Z(L,2*J)*Z(L+2,2*M-1)     COR0-166
   15 CONTINUE                                                          COR0-167
   16 B4=A4+2.D0                                                        COR0-168
      A5=0.D0                                                           COR0-169
      B5=0.D0                                                           COR0-170
C INTEGRATION FROM RS TO INFINITY                                       COR0-171
      DO 23 M=1,2                                                       COR0-172
C TRANSFER OF PREVIOUS INTEGRALS                                        COR0-173
      X4(M)=X5(M)*RM                                                    COR0-174
      X4(M+2)=X5(M+2)*RM                                                COR0-175
      IF (DABS(X1(M)).LE.2.D0.AND.M.EQ.2) GO TO 20                      COR0-176
C PADE METHOD FOR OMEGA FUNCTION                                        COR0-177
C INSTEAD OF FORMULA (44), WE COMPUTE I*K*R*OMEGA IN TERMS OF I*K*R     COR0-178
      A9=B4**2+(X2(M)+X1(M))**2                                         COR0-179
      A6=B4/A9                                                          COR0-180
      B6=-(X2(M)+X1(M))/A9                                              COR0-181
      A7=-B6*X1(M)                                                      COR0-182
      B7=A6*X1(M)                                                       COR0-183
      A8=A6                                                             COR0-184
      B8=B6+1.D0/X1(M)                                                  COR0-185
      B9=1.D0                                                           COR0-186
C STEED'S ALGORITHM                                                     COR0-187
      DO 17 J=1,1000                                                    COR0-188
      C2=B7+X1(M)/B9                                                    COR0-189
      A9=(A7**2+C2**2)*B9                                               COR0-190
      C1=A7/A9                                                          COR0-191
      C2=-C2/A9                                                         COR0-192
      C3=-(C2*X1(M)+1.D0)*A8-C1*X1(M)*B8                                COR0-193
      C4=C1*X1(M)*A8-B8*(C2*X1(M)+1.D0)                                 COR0-194
      A7=1.D0+C1*(B4+B9)-C2*X2(M)                                       COR0-195
      B7=C1*X2(M)+(B4+B9)*C2                                            COR0-196
      A9=A7**2+B7**2                                                    COR0-197
      A7=A7/A9                                                          COR0-198
      B7=-B7/A9                                                         COR0-199
      A8=(A7-1.D0)*C3-B7*C4                                             COR0-200
      B8=(A7-1.D0)*C4+B7*C3                                             COR0-201
      B9=B9+1.D0                                                        COR0-202
      IF (DABS(C3)+DABS(C4)+DABS(A8)+DABS(B8).LT.1.D-12*(DABS(B6)+DABS(ACOR0-203
     16))) GO TO 18                                                     COR0-204
      A6=A6+A8+C3                                                       COR0-205
   17 B6=B6+B8+C4                                                       COR0-206
   18 X5(M)=0.D0                                                        COR0-207
      X5(M+2)=0.D0                                                      COR0-208
      J=J+1                                                             COR0-209
C DIRECT COMPUTATION OF PADE APPROXIMANT FOR MORE PRECISION             COR0-210
      DO 19 K=1,J                                                       COR0-211
      C1=1.D0+B9*X5(M)                                                  COR0-212
      C2=B9*X5(M+2)                                                     COR0-213
      A9=C1**2+C2**2                                                    COR0-214
      B9=B9-1.D0                                                        COR0-215
      A7=((B4+B9)*C1+X2(M)*C2)/A9                                       COR0-216
      B7=X1(M)+(C1*X2(M)-C2*(B4+B9))/A9                                 COR0-217
      A9=A7**2+B7**2                                                    COR0-218
      X5(M)=A7/A9                                                       COR0-219
   19 X5(M+2)=-B7/A9                                                    COR0-220
      GO TO 21                                                          COR0-221
C TAYLOR EXPANSION OF CONFLUENT HYPERGEOMETRIC FUNCTION                 COR0-222
   20 IF (I.EQ.1) GO TO 23                                              COR0-223
      A7=1.D0+X1(M)*X5(M+2)                                             COR0-224
      B7=-X1(M)*X5(M)                                                   COR0-225
      A9=((B4-1.D0)**2+X2(M)**2)                                        COR0-226
      X5(M)=(A7*(B4-1.D0)+X2(M)*B7)/A9                                  COR0-227
      X5(M+2)=(B7*(B4-1.D0)-X2(M)*A7)/A9                                COR0-228
   21 IF (I.EQ.1) GO TO 23                                              COR0-229
C STORAGE OF INTEGRALS TO A FACTOR R IN Y(J,M)                          COR0-230
C  J=1 AND J=2  REAL AND IMAGINARY PARTS OF INTEGRAL OF H0(EI)*H0(EF)   COR0-231
C  J=3 AND J=4  REAL AND IMAGINARY PARTS OF INTEGRAL OF H1(EI)*H1(EF)   COR0-232
C  M=1 AND M=2 FOR H*H   M=3 AND M=4 FOR H*H*                           COR0-233
C  M=1 AND M=3 FOR 1/R   M=2 AND M=4 FOR 1/R**2                         COR0-234
      DO 22 J=1,2                                                       COR0-235
      A6=C(1,J,M)*X4(M)-C(2,J,M)*X4(M+2)                                COR0-236
      B6=C(1,J,M)*X4(M+2)+C(2,J,M)*X4(M)                                COR0-237
      A5=DMAX1(A5,A6**2+B6**2)                                          COR0-238
      Y(2*J-1,2*M-1)=Y(2*J-1,2*M-1)+A6                                  COR0-239
      Y(2*J,2*M-1)=Y(2*J,2*M-1)+B6                                      COR0-240
      A3=DMAX1(A3,Y(2*J-1,2*M-1)**2+Y(2*J,2*M-1)**2)                    COR0-241
      A6=C(1,J,M)*X5(M)-C(2,J,M)*X5(M+2)                                COR0-242
      B6=C(1,J,M)*X5(M+2)+C(2,J,M)*X5(M)                                COR0-243
      B5=DMAX1(B5,A6**2+B6**2)                                          COR0-244
      Y(2*J-1,2*M)=Y(2*J-1,2*M)+A6                                      COR0-245
      Y(2*J,2*M)=Y(2*J,2*M)+B6                                          COR0-246
   22 B3=DMAX1(B3,Y(2*J-1,2*M)**2+Y(2*J,2*M)**2)                        COR0-247
   23 CONTINUE                                                          COR0-248
      IF (I.NE.1.AND.A5.LT.A3*1.D-30.AND.B5.LT.B3*1.D-30) GO TO 25      COR0-249
   24 CONTINUE                                                          COR0-250
   25 A1=2.D0*RM                                                        COR0-251
C TRANSFORMATION FROM H(+/-) TO F AND G                                 COR0-252
      DO 26 I=1,4                                                       COR0-253
      CC(1,I)=(Y(2*I-1,3)-Y(2*I-1,1))/A1                                COR0-254
      CC(4,I)=(Y(2*I-1,3)+Y(2*I-1,1))/A1                                COR0-255
      CC(3,I)=(Y(2*I,1)+Y(2*I,3))/A1                                    COR0-256
   26 CC(2,I)=(Y(2*I,1)-Y(2*I,3))/A1                                    COR0-257
      IF (RM.EQ.RS) GO TO 32                                            COR0-258
C IF RM IS NOT RS, 40 POINTS GAUSS INTEGRATION FROM RS TO RM            COR0-259
C EACH GAUSS INTEGRATION IS FOR VARIATION OF R LESS THAN 20.            COR0-260
      IL=1+IDINT(DABS(RM-RS)*.05D0)                                     COR0-261
      A1=DFLOAT(IL)                                                     COR0-262
      A1=(RM-RS)/A1                                                     COR0-263
      A2=RM                                                             COR0-264
      DO 31 IT=1,IL                                                     COR0-265
      A3=A2-A1                                                          COR0-266
      DO 30 II=1,40                                                     COR0-267
      I=MIN0(II,41-II)                                                  COR0-268
      A4=ABSC(I)                                                        COR0-269
      IF (I.NE.II) A4=1.D0-A4                                           COR0-270
      A5=A3+A1*A4                                                       COR0-271
      CALL FCOU(1,EI,A5/FS,Y,Y(1,3),Y(3,1),Y(3,3),IE,X1)                COR0-272
      CALL FCOU(1,EF,A5*FS,Y(1,2),Y(1,4),Y(3,2),Y(3,4),IE,X1)           COR0-273
      DO 29 M=1,2                                                       COR0-274
      DO 28 J=1,2                                                       COR0-275
      DO 27 L=1,2                                                       COR0-276
      A6=P(I)*Y(2*J+M-2,1)*Y(2*L+M-2,2)/A5*A1                           COR0-277
      CC(2*L+J-2,M)=CC(2*L+J-2,M)+A6                                    COR0-278
   27 CC(2*L+J-2,M+2)=CC(2*L+J-2,M+2)+A6/A5                             COR0-279
   28 CONTINUE                                                          COR0-280
   29 CONTINUE                                                          COR0-281
   30 CONTINUE                                                          COR0-282
   31 A2=A3                                                             COR0-283
   32 RETURN                                                            COR0-284
      END                                                               COR0-285
C 01/01/04                                                      ECIS03  CORZ-000
      SUBROUTINE CORZ(XI,XF,T,FGI,FGF,LM1,LM2,LM,W)                     CORZ-001
C    COMPUTATION OF THE INTEGRALS FROM 1 TO INFINITY OF PRODUCTS OF     CORZ-002
C REGULAR OR IRREGULAR BESSEL FUNCTIONS OF SAME L-VALUE AND ARGUMENT    CORZ-003
C XI*R AND XF*R RESPECTIVELY, DIVIDED BY R**3 FOR L=1 TO LM, AND OF     CORZ-004
C INTEGRALS FROM 0 TO INFINITY OF REGULAR FUNCTIONS OF THESE ARGUMENTS  CORZ-005
C DIVIDED BY R**3.                                                      CORZ-006
C    THE LIMIT OF STABILITY OF THE UPWARDS RECURRENCE HAS               CORZ-007
C     BEEN FOUND TO BE   LM2*(1-XI/XF) < 3 .                            CORZ-008
C INPUT VARIABLES:                                                      CORZ-009
C     XI,XF   WAVE NUMBERS MULTIPLIED BY THE MATCHING RADIUS            CORZ-010
C     FGI,FGF REGULAR AND IRREGULAR BESSEL FUNCTIONS.                   CORZ-011
C     LM1     MAXIMUM NUMBER OF INTEGRALS FROM 1 TO INFINITY.           CORZ-012
C     LM2     NUMBER OF INTEGRALS FROM 0 TO INFINITY.                   CORZ-013
C     LM      ACTUAL NUMBER OF INTEGRALS FROM 1 TO INFINITY.            CORZ-014
C OUTPUT VARIABLES:                                                     CORZ-015
C     W       INTEGRALS FROM 1 TO INFINITY.                             CORZ-016
C     T       INTEGRALS FROM 0 TO INFINITY.                             CORZ-017
C***********************************************************************CORZ-018
      IMPLICIT REAL*8 (A-H,O-Z)                                         CORZ-019
      DIMENSION W(LM1,4),FGI(LM1,3),FGF(LM1,3),T(3),B(4),C(2),D(2)      CORZ-020
C INTEGRALS FROM 0 TO INFINITY.                                         CORZ-021
C THE RECURRENCE RELATION STARTS FROM L=0 WITH L*(0,3;L)=1/3 FOR L=0    CORZ-022
      T(1)=1.D0/3.D0                                                    CORZ-023
      IF (XI.NE.XF) GO TO 2                                             CORZ-024
C WHEN KI=KF   (0,3;L)=1/(2*L*(L+1))                                    CORZ-025
      A1=0.D0                                                           CORZ-026
      DO 1 I=2,LM2                                                      CORZ-027
      A1=A1+1.D0                                                        CORZ-028
    1 T(I)=.5D0/(A1*(A1+1.D0))                                          CORZ-029
      GO TO 11                                                          CORZ-030
    2 X=XI/XF                                                           CORZ-031
      IF (X.GT.1.D0) X=1.D0/X                                           CORZ-032
C (0,3;L) = X**L GT(1/2) GT(L+1)/2/GT(L+3/2) 2F1(L,-1/2;L+3/2;X**2)     CORZ-033
      IF (X.GE..9D0) GO TO 4                                            CORZ-034
C DIRECT EXPANSION OF THE 2F1 FUNCTION                                  CORZ-035
      A1=X**2                                                           CORZ-036
      T(2)=X/3.D0                                                       CORZ-037
      A2=T(2)                                                           CORZ-038
      A3=0.D0                                                           CORZ-039
      DO 3 J=1,2000                                                     CORZ-040
      A3=A3+1.D0                                                        CORZ-041
      A2=A2*A1*(A3-1.5D0)/(A3+1.5D0)                                    CORZ-042
      T(2)=T(2)+A2                                                      CORZ-043
      IF (DABS(A2).LT.1.D-15*DABS(T(2))) GO TO 6                        CORZ-044
    3 CONTINUE                                                          CORZ-045
      GO TO 6                                                           CORZ-046
C ANALYTIC CONTINUATION OF THE 2F1 FUNCTION - ERDELYI,.... 15.3.11      CORZ-047
    4 A1=1.D0-X**2                                                      CORZ-048
      A2=X*A1**2/16.D0                                                  CORZ-049
      A3=DLOG(A1/4.D0)+2.D0                                             CORZ-050
      T(2)=X*(2.D0+A1)/8.D0+A2*A3                                       CORZ-051
      A4=0.D0                                                           CORZ-052
      DO 5 J=1,2000                                                     CORZ-053
      A4=A4+1.D0                                                        CORZ-054
      A3=A3-.5D0/((A4+.5D0)*A4)                                         CORZ-055
      A2=A2*A1*(A4+.5D0)/A4                                             CORZ-056
      A5=A2*A3                                                          CORZ-057
      T(2)=T(2)+A5                                                      CORZ-058
      IF (DABS(A5).LT.1.D-15*DABS(T(2))) GO TO 6                        CORZ-059
    5 CONTINUE                                                          CORZ-060
C RECURRENCE RELATION FOR  (0,3;L) :                                    CORZ-061
C  2*(L-1)*(0,3;L-1)-(2*L+1)*(X+1/X)*(0,3;L)+2*(L+2)*(0,3;L+1)=0        CORZ-062
C UPWARDS RECURRENCE                                                    CORZ-063
    6 A1=X+1.D0/X                                                       CORZ-064
      XX=LM2*(1-X)                                                      CORZ-065
      IF (XX.GT.3.D0) GO TO 8                                           CORZ-066
      T(3)=.5D0*(A1*T(2)-T(1))                                          CORZ-067
      A2=0.D0                                                           CORZ-068
      DO 7 I=4,LM2                                                      CORZ-069
      A2=A2+1.D0                                                        CORZ-070
    7 T(I)=((A2+1.5D0)*A1*T(I-1)-A2*T(I-2))/(A2+3.D0)                   CORZ-071
      GO TO 11                                                          CORZ-072
C DOWNWARDS RECURRENCE                                                  CORZ-073
    8 LK=4*LM2                                                          CORZ-074
      A2=DFLOAT(LK-1)                                                   CORZ-075
      A3=A2/(A2+2.D0)                                                   CORZ-076
      DO 9 I=3,LK                                                       CORZ-077
      J=LK-I+3                                                          CORZ-078
      A2=A2-1.D0                                                        CORZ-079
      A3=A2/((A2+1.5D0)*A1-(A2+3.D0)*A3)                                CORZ-080
      IF (J.LE.LM2) T(J)=A3                                             CORZ-081
    9 CONTINUE                                                          CORZ-082
      DO 10 I=3,LM2                                                     CORZ-083
   10 T(I)=T(I)*T(I-1)                                                  CORZ-084
   11 B(1)=XI+XF                                                        CORZ-085
      B(2)=XI-XF                                                        CORZ-086
C COMPUTATION OF THE INTEGRALS FROM 1 TO INFINITY OF EXP(I*B*R)/R**3 DR CORZ-087
      DO 17 I=1,2                                                       CORZ-088
      IF (B(I).LT.5.D0) GO TO 13                                        CORZ-089
C USE OF PADE APPROXIMANT                                               CORZ-090
      A1=0.D0                                                           CORZ-091
      A2=0.D0                                                           CORZ-092
      A3=21.D0                                                          CORZ-093
      DO 12 J=1,20                                                      CORZ-094
      A3=A3-1.D0                                                        CORZ-095
      A2=A2-B(I)                                                        CORZ-096
      B1=A1**2+A2**2                                                    CORZ-097
      B2=A1*A3/B1+1.D0                                                  CORZ-098
      B3=-A2*A3/B1                                                      CORZ-099
      B1=B2**2+B3**2                                                    CORZ-100
      A1=B2*(A3+2.D0)/B1                                                CORZ-101
   12 A2=-B3*(A3+2.D0)/B1                                               CORZ-102
      A2=A2-B(I)                                                        CORZ-103
      B1=A1**2+A2**2                                                    CORZ-104
      C(I)=(DCOS(B(I))*A1+DSIN(B(I))*A2)/B1                             CORZ-105
      D(I)=(DSIN(B(I))*A1-DCOS(B(I))*A2)/B1                             CORZ-106
      GO TO 17                                                          CORZ-107
   13 IF (B(I).EQ.0.D0) GO TO 16                                        CORZ-108
C USE OF THE TAYLOR EXPANSION                                           CORZ-109
      A1=DABS(B(I))                                                     CORZ-110
      C(I)=.5D0*(1.D0-A1**2*(.922784335098467D0-DLOG(A1)))              CORZ-111
      D(I)=A1*(1.D0-.78539816339744831D0*A1)                            CORZ-112
      A2=A1**2/2.D0                                                     CORZ-113
      A3=0.D0                                                           CORZ-114
      DO 14 J=2,20                                                      CORZ-115
      A3=A3+1.D0                                                        CORZ-116
      A2=A2*A1/(2.D0*A3+1.D0)                                           CORZ-117
      D(I)=D(I)+A2/(2.D0*A3-1.D0)                                       CORZ-118
      A2=-A2*A1/(2.D0*A3+2.D0)                                          CORZ-119
      C(I)=C(I)+A2/(2.D0*A3)                                            CORZ-120
      IF (DABS(A2).LT.1.D-16) GO TO 15                                  CORZ-121
   14 CONTINUE                                                          CORZ-122
   15 IF (A1.NE.B(I)) D(I)=-D(I)                                        CORZ-123
      GO TO 17                                                          CORZ-124
   16 C(I)=.5D0                                                         CORZ-125
      D(I)=0.D0                                                         CORZ-126
   17 CONTINUE                                                          CORZ-127
C STORAGE OF THE TWO FIRST INTEGRALS                                    CORZ-128
      A1=2.D0*XI*XF                                                     CORZ-129
      DO 18 I=1,2                                                       CORZ-130
      W(I,1)=(C(2)-C(1))/A1                                             CORZ-131
      W(I,2)=(D(1)-D(2))/A1                                             CORZ-132
      W(I,3)=(D(1)+D(2))/A1                                             CORZ-133
      W(I,4)=(C(2)+C(1))/A1                                             CORZ-134
      IF (I.EQ.2) GO TO 18                                              CORZ-135
      C(1)=C(1)*B(2)**2+DCOS(B(1))+B(1)*DSIN(B(1))                      CORZ-136
      D(1)=D(1)*B(2)**2+DSIN(B(1))-B(1)*DCOS(B(1))                      CORZ-137
      C(2)=C(2)*B(1)**2+DCOS(B(2))+B(2)*DSIN(B(2))                      CORZ-138
      D(2)=D(2)*B(1)**2+DSIN(B(2))-B(2)*DCOS(B(2))                      CORZ-139
      A1=2.D0*A1**2                                                     CORZ-140
   18 CONTINUE                                                          CORZ-141
C UPWARDS RECURRENCE                                                    CORZ-142
      A1=XI/XF+XF/XI                                                    CORZ-143
      A2=2.D0*XI*XF                                                     CORZ-144
      A3=2.D0                                                           CORZ-145
      DO 20 J=3,LM                                                      CORZ-146
      A3=A3+1.D0                                                        CORZ-147
      B(2)=(FGI(J-2,3)*FGF(J-2,1)-FGI(J,3)*FGF(J,1))/A2                 CORZ-148
      B(3)=(FGI(J-2,1)*FGF(J-2,3)-FGI(J,1)*FGF(J,3))/A2                 CORZ-149
      B(4)=(FGI(J-2,3)*FGF(J-2,3)-FGI(J,3)*FGF(J,3))/A2                 CORZ-150
      DO 19 I=2,4                                                       CORZ-151
   19 W(J,I)=((A3-1.5D0)*A1*W(J-1,I)-(A3-3.D0)*W(J-2,I)-B(I))/A3        CORZ-152
   20 CONTINUE                                                          CORZ-153
      LN=MAX0(LM,IDINT(DMAX1(XI,XF)))+50                                CORZ-154
      B2=0.D0                                                           CORZ-155
      B3=0.D0                                                           CORZ-156
      C2=0.D0                                                           CORZ-157
      C3=1.D-15                                                         CORZ-158
      D2=0.D0                                                           CORZ-159
      D3=1.D-15                                                         CORZ-160
      A3=LN                                                             CORZ-161
      DO 24 I=2,LN                                                      CORZ-162
      J=LN-I+2                                                          CORZ-163
      A3=A3-1.D0                                                        CORZ-164
      B1=B2                                                             CORZ-165
      B2=B3                                                             CORZ-166
      C1=C2                                                             CORZ-167
      C2=C3                                                             CORZ-168
      D1=D2                                                             CORZ-169
      D2=D3                                                             CORZ-170
      C3=(2.D0*A3+3.D0)*C2/XI-C1                                        CORZ-171
      D3=(2.D0*A3+3.D0)*D2/XF-D1                                        CORZ-172
      B3=((A3+1.5D0)*A1*B2-(A3+3.D0)*B1-(C3*D3-C1*D1)/A2)/A3            CORZ-173
      IF (J.LE.LM) W(J,1)=B3                                            CORZ-174
      IF (D3.LT.1.D15) GO TO 21                                         CORZ-175
      D2=D2*1.D-30                                                      CORZ-176
      D3=D3*1.D-30                                                      CORZ-177
      GO TO 22                                                          CORZ-178
   21 IF (C3.LT.1.D15) GO TO 24                                         CORZ-179
      C2=C2*1.D-30                                                      CORZ-180
      C3=C3*1.D-30                                                      CORZ-181
   22 B2=B2*1.D-30                                                      CORZ-182
      B3=B3*1.D-30                                                      CORZ-183
      IF (J.GT.LM) GO TO 24                                             CORZ-184
      DO 23 K=J,LM                                                      CORZ-185
   23 W(K,1)=W(K,1)*1.D-30                                              CORZ-186
   24 CONTINUE                                                          CORZ-187
      A1=FGI(2,1)*FGF(2,1)/(C3*D3)                                      CORZ-188
      DO 25 I=2,LM                                                      CORZ-189
   25 W(I,1)=W(I,1)*A1+T(I)                                             CORZ-190
      RETURN                                                            CORZ-191
      END                                                               CORZ-192
C 01/01/04                                                      ECIS03  REDM-000
      SUBROUTINE REDM(NIV,IQ,T,IPI,NCOLL,IT,NBETA,BETA,NBT1,IPH,NVAR,VARREDM-001
     1,NVA,IQMAX,NSPIN,FAC,NFA,NPP,IM,IDT,LO)                           REDM-002
C REDUCED NUCLEAR MATRIX ELEMENTS                                       REDM-003
C INPUT VARIABLES: IPI(I,J):PARITY OF NUCLEAR STATES FOR J=1            REDM-004
C                          MULTIPLICITY OF THE PART. AND TARGET FOR J=2,REDM-005
C                  NCOLL:  NUMBER OF COUPLED STATES                     REDM-006
C                  NBETA,BETA:  DEFORMATIONS, EQUIVALENT BY CALL        REDM-007
C                  NBT1:   NUMBER OF PHONONS                            REDM-008
C                  IPH:    USED FOR VIBRATIONAL MODEL    SEE VIBM       REDM-009
C                  NVAR,VAR:    PARAMETERS FOR SOME MODELS              REDM-010
C                  NVA:    NUMBER OF THESE PARAMETERS                   REDM-011
C                  IQMAX,NSPIN: SEE ROTM                                REDM-012
C                  FAC,NFA: TABLE OF LOG OF FACTORIALS AND THEIR NUMBER REDM-013
C                  NPP:    NUMBER OF OPTICAL POTENTIALS                 REDM-014
C                  IDT:    LENGTH AVAILABLE IN THIS SUBROUTINE          REDM-015
C                  LO:     LOGICAL CONTROLS                             REDM-016
C OUTPUT VARIABLES:IM:     NUMBER OF NUCLEAR MULTIPOLES                 REDM-017
C                  NIV(I1,I2,K): FIRST I OF T(3,I) FOR THE PAIR OF      REDM-018
C             NUCLEAR STATES I1,I2 FOR K=1 AND LAST ONE FOR K=2         REDM-019
C                  IQ(6,I),T(3,I) ARE EQUIVALENT BY CALL                REDM-020
C             - THE FIRST 6*"IT" DATA (FOR A GIVEN I) ARE               REDM-021
C               1) REFERENCE TO TABLE OF FORM FACTORS                   REDM-022
C               2) REFERENCE TO TABLE OF ANGULAR MOMENTA                REDM-023
C               3) ADDRESS OF THE ASSOCIATED SPIN-ORBIT FORM FACTOR OR 0REDM-024
C               4) UNUSED                                               REDM-025
C               5-6) THE REDUCED NUCLEAR MATRIX ELEMENT MULTIPLIED BY   REDM-026
C                (-)**(L/2) WHERE L IS THE TRANSFERRED ANGULAR MOMENTUM REDM-027
C             - THE NEXT 3*"IM" DATA ARE TABLE OF ANGULAR MOMENTA       REDM-028
C               1) L  TRANSFERRED ANGULAR MOMENTUM                      REDM-029
C               2) 2*S WHERE S IS THE TRANSFER OF SPIN                  REDM-030
C               3) 2*J WHERE J IS THE TRANSFER OF TOTAL SPIN OR 0 IF S=0REDM-031
C             - THE FOLLOWING 7*"INTC" ARE THE TABLE IVY OF FORM FACTOR REDM-032
C                     INDEPENDENT OF DISPERSION RELATIONS.              REDM-033
C               1) FORM FACTOR CONTROL NUMBER                           REDM-034
C               2) REFERENCE TO THE TABLE OF MULTIPOLES                 REDM-035
C               3) 0 OR ADDRESS OF THE FIRST SPIN-ORBIT FORM FACTOR     REDM-036
C               4) 0 OR ADDRESS OF TEMPORARY COULOMB FORM FACTOR        REDM-037
C               5) 0 OR ADDRESS OF TEMPORARY COULOMB SPIN-ORBIT         REDM-038
C               6) 0 OR ADDRESS OF CORRECTION TERM (POSITIVE FOR        REDM-039
C                       CORRECTED TERM, NEGATIVE FOR CORRECTION TERM)   REDM-040
C               7) ANGULAR MOMENTUM                                     REDM-041
C             - THE FOLLOWING 4*"INTV" ARE THE TABLE IVZ OF FORM FACTOR REDM-042
C                     DEPENDENT OF DISPERSION RELATIONS.                REDM-043
C               1) ADDRESS OF COMPUTATION (WITHOUT DISPERSION RELATIONS)REDM-044
C               2) FORM FACTOR CONTROL NUMBER WITH RESPECT TO DISPERSIONREDM-045
C               3) 0 OR ADDRESS OF THE FIRST SPIN-ORBIT FORM FACTOR     REDM-046
C               4) ANGULAR MOMENTUM                                     REDM-047
C IN COMMON /POTE1/ RELATED TO COMPUTATION OF POTENTIALS AND TABLE IVY  REDM-048
C                  ITX(16):STARTING ADDRESS OF DIFFERENT FORM FACTORS.  REDM-049
C                      FOR SCHROED. EQUATION, ITX(I)+1 IS THE STARTING  REDM-050
C                      ADDRESS OF THE POTENTIAL READ IN EXTP WITH ITYP=IREDM-051
C                      FOR DIRAC EQUATIONS, ITX(1)=0                    REDM-052
C                      ITX(2)+1=ADDRESS OFF FIRST TRANSITION FORM FACTORREDM-053
C                      ITX(7)=ADDRESS OF LAST TRANSITION FORM FACTOR    REDM-054
C                      ITX(3)=ADDRESS OF LAST TEMPORARY CENTRAL POTEN.  REDM-055
C                      ITX(4)=ITX(7)-24,ITX(5)=ITX(3)-11,ITX(6)=ITX(2)-4REDM-056
C       ALL ARE USED FOR SCHROEDINGER, THE FIRST 8 FOR DIRAC            REDM-057
C                  IMAX:   MAXIMUM ANGULAR MOMENTUM                     REDM-058
C                  INTC:   NUMBER OF FORM FACTORS WITHOUT DEFORMED      REDM-059
C                             SPIN-ORBIT INCLUDING CORRECTION TERMS     REDM-060
C                  INLS:   NUMBER OF SPIN-ORBIT FORM FACTORS NOT TAKING REDM-061
C                             INTO ACCOUNT MULTIPLICATION BY 2.         REDM-062
C                  INVC:   NUMBER OF COULOMB TRANSITION FORM FACTORS    REDM-063
C                  INVD:   IDEM FOR COULOMB SPIN-ORBIT                  REDM-064
C                  ITXM:   TOTAL NUMBER OF FORM FACTORS                 REDM-065
C IN COMMON /POTE2/ RELATED TO USE OF POTENTIALS AND TABLE IVZ          REDM-066
C                  ITY(8):STARTING ADDRESS OF REAL AND IMAGINARY,       REDM-067
C                      CENTRAL AND SPIN-ORBIT, POTENTIAL AND TRANSITION REDM-068
C                      FORM FACTORS FOR SCHROEDINGER EQUATIONS.         REDM-069
C       ALL ARE USED FOR SCHROEDINGER, ITY(2) AND ITY(5) ONLY FOR DIRAC REDM-070
C                  INVT:   NUMBER OF FORM FACTORS WITHOUT DEFORMED      REDM-071
C                             SPIN-ORBIT AND CORRECTION TERMS           REDM-072
C                  INTV:   SAME AS INVT, TAKING INTO ACCOUNT DISPERSION REDM-073
C                  INSL:   SAME AS INLS, WITHOUT CORRECTION TERMS       REDM-074
C                  NPX:    SAME AS NPP, TAKING INTO ACCOUNT DISPERSION  REDM-075
C IF LO(15)=.TRUE. THE REDUCED MATRIX ELEMENTS ARE READ AT THE FIRST    REDM-076
C CALL AND THE PARAMETERS "VAR" ARE NOT USED - IN ANY CASE WHERE "VAR"  REDM-077
C ARE NOT USED,THE SUBROUTINE IS SKIPPED.                               REDM-078
C IF LO(61)=.TRUE. THE MATRIX ELEMENTS ARE PUNCHED AT THE LAST CALL     REDM-079
C OF A SEARCH IN THIS SUBROUTINE.                                       REDM-080
C***********************************************************************REDM-081
      IMPLICIT REAL*8 (A-H,O-Z)                                         REDM-082
      LOGICAL LO(250),LT                                                REDM-083
      DIMENSION IPH(2,NCOLL),NIV(NCOLL,NCOLL,2),BETA(9,NBT1),NBETA(18,NBREDM-084
     1T1),FAC(NFA),VAR(NVA),NVAR(2,1),IPI(11,1),IQ(6,1),T(3,1)          REDM-085
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM              REDM-086
      COMMON /POTE2/ ITY(8),INVT,INTV,INSL,NPX                          REDM-087
      COMMON /INOUT/ MR,MW,MS                                           REDM-088
      IF (LO(220)) GO TO 42                                             REDM-089
      IF (LO(7).OR.LO(15)) GO TO 3                                      REDM-090
C STANDARD COMPUTATION OF THE REDUCED MATRIX ELEMENTS IN T(3,I)         REDM-091
C WITH FORM FACTOR IDENTIFICATION IN IQ(1,I), MULTIPOLE IN IQ(2,I)      REDM-092
C AND 0 OR 1 IN IQ(3,I) IF SPIN-ORBIT IS NOT OR IS DEFORMED.            REDM-093
C THEY ARE CALLED AT THE FIRST RUN OR IF "VAR" HAS BEEN CHANGED         REDM-094
      IF (LO(1)) GO TO 1                                                REDM-095
      CALL VIBM(NIV,IQ,T,IPI,NCOLL,IT,IPH,NVAR,VAR,NVA,NBETA,NBT1,FAC,NFREDM-096
     1A,IDT,LO)                                                         REDM-097
      GO TO 17                                                          REDM-098
    1 IF (LO(3)) GO TO 2                                                REDM-099
      CALL ROTM(NIV,IQ,T,IPI,NCOLL,IPH,NBETA,NVAR,VAR,NVA,IT,IQMAX,NSPINREDM-100
     1,FAC,NFA,IDT,LO)                                                  REDM-101
      GO TO 17                                                          REDM-102
    2 CALL ROAM(NIV,IQ,T,IPI,NCOLL,IT,BETA,IPH,VAR,VAR(NVA+1),IQMAX,FAC,REDM-103
     1NFA,IDT,LO)                                                       REDM-104
      GO TO 17                                                          REDM-105
C INPUT OF NUCLEAR MATRIX ELEMENTS FROM CARDS                           REDM-106
    3 IF (LO(217)) GO TO 42                                             REDM-107
      IT=0                                                              REDM-108
      I=0                                                               REDM-109
      NPS=1                                                             REDM-110
      IF ((LO(201).AND.LO(203)).OR.LO(113)) NPS=0                       REDM-111
      DO 16 I1=1,NCOLL                                                  REDM-112
      DO 15 I2=I1,NCOLL                                                 REDM-113
      NIV(I1,I2,1)=IT+1                                                 REDM-114
      READ (MR,1000) J1,J2,K                                            REDM-115
      WRITE (MW,1001) J1,J2,K                                           REDM-116
      IF ((J1.NE.I1).OR.(J2.NE.I2)) GO TO 46                            REDM-117
      IF (K.EQ.0) GO TO 15                                              REDM-118
      IJL=IABS(IPI(3,I1)-IPI(3,I2))                                     REDM-119
      JIL=(IPI(3,I1)+IPI(3,I2))                                         REDM-120
      IJS=IABS(IPI(2,I1)-IPI(2,I2))                                     REDM-121
      JIS=IPI(2,I1)+IPI(2,I2)                                           REDM-122
      IF (2*(IT+K).GT.IDT) CALL MEMO('REDM',IDT,2*(IT+K),2)             REDM-123
      DO 14 K1=1,K                                                      REDM-124
      IT=IT+1                                                           REDM-125
      READ (MR,1002) J,IQ(2,IT),NN,M,T(3,IT)                            REDM-126
      IF (NN.EQ.-1.AND.LO(111)) GO TO 47                                REDM-127
      N=NN                                                              REDM-128
      IF (NN.EQ.-1) N=0                                                 REDM-129
      IF (MOD(IQ(2,IT)+IPI(1,I1)+IPI(1,I2),2).NE.0) GO TO 48            REDM-130
      IF ((N.GT.JIS).OR.(N.LT.IJS).OR.(MOD(JIS+N,2).NE.0)) GO TO 49     REDM-131
      IF (LO(7)) GO TO 7                                                REDM-132
      IF (LO(1)) GO TO 5                                                REDM-133
      IF (LO(3)) GO TO 4                                                REDM-134
      IQP=J/(NBT1+1)                                                    REDM-135
      IPQ=MOD(J,NBT1+1)                                                 REDM-136
      IF ((IPQ.LE.0).OR.(MAX0(IPQ,IQP).GT.NBT1).OR.(IQP.LT.0)) GO TO 50 REDM-137
      GO TO 11                                                          REDM-138
    4 IF (J.LT.0.OR.J.GT.3) GO TO 51                                    REDM-139
      GO TO 11                                                          REDM-140
    5 IQP=J/1000                                                        REDM-141
      IF (LO(3)) GO TO 6                                                REDM-142
      IF (IQP.NE.1+IQ(2,IT)) GO TO 52                                   REDM-143
      GO TO 11                                                          REDM-144
    6 IQY=IQ(2,IT)/2+1                                                  REDM-145
      IQZ=(IQY*(IQY-1))/2                                               REDM-146
      IF (IQP.LE.IQZ.OR.IQP.GT.IQZ+IQY) GO TO 53                        REDM-147
      GO TO 11                                                          REDM-148
    7 IF (J.EQ.0) GO TO 10                                              REDM-149
      IF (IABS(J)-I-1) 8 , 10 , 54                                      REDM-150
    8 IF (IT.EQ.1) GO TO 11                                             REDM-151
      DO 9 II=2,IT                                                      REDM-152
      IF (J.EQ.IQ(1,II-1)) GO TO 11                                     REDM-153
    9 CONTINUE                                                          REDM-154
      GO TO 55                                                          REDM-155
   10 I=I+1                                                             REDM-156
      IF (J.EQ.0) J=I                                                   REDM-157
   11 IQ(1,IT)=J                                                        REDM-158
      IF (N.EQ.0) GO TO 12                                              REDM-159
      IF (2*IQ(2,IT).LT.IABS(N-M).OR.2*IQ(2,IT).GT.N+M.OR.MOD(N+M,2).NE.REDM-160
     10) GO TO 56                                                       REDM-161
      NM=M                                                              REDM-162
      IQ(3,IT)=10*M+10000*N                                             REDM-163
      GO TO 13                                                          REDM-164
   12 IF ((M.LT.0).OR.(M.GT.NPS)) GO TO 57                              REDM-165
      IQ(3,IT)=10*M                                                     REDM-166
      NM=2*IQ(2,IT)                                                     REDM-167
   13 IF (NM.LT.IJL.OR.NM.GT.JIL) GO TO 58                              REDM-168
      IF (NN.EQ.-1) IQ(3,IT)=IQ(3,IT)+1                                 REDM-169
   14 WRITE (MW,1003) IQ(1,IT),IQ(2,IT),NN,M,T(3,IT)                    REDM-170
   15 NIV(I1,I2,2)=IT                                                   REDM-171
   16 CONTINUE                                                          REDM-172
   17 K=NIV(NCOLL,NCOLL,2)                                              REDM-173
      DO 19 I1=1,NCOLL                                                  REDM-174
      DO 18 I2=I1,NCOLL                                                 REDM-175
      NIV(I2,I1,1)=NIV(I1,I2,1)                                         REDM-176
      NIV(I2,I1,2)=NIV(I1,I2,2)                                         REDM-177
   18 CONTINUE                                                          REDM-178
   19 CONTINUE                                                          REDM-179
C CHECK THAT THERE IS ENOUGH PLACE                                      REDM-180
      IF (7*IT.GT.IDT) CALL MEMO('REDM',IDT,7*IT,2)                     REDM-181
      IM=0                                                              REDM-182
      INVT=0                                                            REDM-183
      INTV=0                                                            REDM-184
      INLS=0                                                            REDM-185
      INSL=0                                                            REDM-186
      INVC=0                                                            REDM-187
      INVD=0                                                            REDM-188
      INTC=0                                                            REDM-189
      IMAX=0                                                            REDM-190
C TABLE OF MULTIPOLES                                                   REDM-191
      IF (IT.EQ.0) GO TO 40                                             REDM-192
      ITN=6*IT                                                          REDM-193
      DO 23 J=1,IT                                                      REDM-194
      IS=IQ(3,J)/10000                                                  REDM-195
      IJ=MOD(IQ(3,J),1000)/10                                           REDM-196
      IL=MOD(IQ(3,J),10)                                                REDM-197
      IF (IS.EQ.0) IJ=2*IQ(2,J)                                         REDM-198
      IF (IJ.EQ.0) IS=2*IQ(2,J)                                         REDM-199
      IF (IL.EQ.1) IS=-2                                                REDM-200
      IF (IS.NE.0) IQ(3,J)=0                                            REDM-201
      IF (IM.EQ.0) GO TO 21                                             REDM-202
      DO 20 K=1,IM,3                                                    REDM-203
      IF ((IQ(ITN+K,1).EQ.IQ(2,J)).AND.(IQ(ITN+K+1,1).EQ.IS).AND.(IQ(ITNREDM-204
     1+K+2,1).EQ.IJ)) GO TO 22                                          REDM-205
   20 CONTINUE                                                          REDM-206
   21 IQ(ITN+IM+1,1)=IQ(2,J)                                            REDM-207
      IQ(ITN+IM+2,1)=IS                                                 REDM-208
      IQ(ITN+IM+3,1)=IJ                                                 REDM-209
      IMAX=MAX0(IMAX,IQ(2,J))                                           REDM-210
      IM=IM+3                                                           REDM-211
      IQ(2,J)=IM/3                                                      REDM-212
      GO TO 23                                                          REDM-213
   22 IQ(2,J)=1+K/3                                                     REDM-214
   23 CONTINUE                                                          REDM-215
      ITM=ITN+IM+MOD(IM,2)                                              REDM-216
C TABLE OF FORM FACTORS                                                 REDM-217
C LT IS TRUE IF THE MULTIPOLE ORDER MATTERS FOR FORM FACTORS            REDM-218
      LT=(LO(1).OR.LO(11).OR.LO(17).OR.LO(19)).AND.LO(107)              REDM-219
      DO 26 J=1,IT                                                      REDM-220
      IF (INVT.EQ.0) GO TO 25                                           REDM-221
      DO 24 L=1,INVT,7                                                  REDM-222
      IF (IQ(ITM+L,1).NE.IQ(1,J)) GO TO 24                              REDM-223
      IF (LT.AND.(IQ(ITM+L+1,1).NE.IQ(2,J))) GO TO 24                   REDM-224
      IQ(1,J)=1+L/7                                                     REDM-225
      IQ(ITM+L+2,1)=MAX0(IQ(3,J),IQ(ITM+L+2,1))                         REDM-226
      GO TO 26                                                          REDM-227
   24 CONTINUE                                                          REDM-228
   25 K=IQ(2,J)                                                         REDM-229
      K1=IQ(ITN+3*K-2,1)                                                REDM-230
      IQ(ITM+INVT+1,1)=IQ(1,J)                                          REDM-231
      IQ(ITM+INVT+2,1)=K                                                REDM-232
      IQ(ITM+INVT+3,1)=IQ(3,J)                                          REDM-233
      IQ(ITM+INVT+4,1)=0                                                REDM-234
      IQ(ITM+INVT+5,1)=0                                                REDM-235
      IQ(ITM+INVT+6,1)=0                                                REDM-236
      IQ(ITM+INVT+7,1)=K1                                               REDM-237
      IF ((IQ(1,J).LT.0).OR.((IQ(1,J).GT.1000).AND.(K1.LE.1).AND.(MOD(IQREDM-238
     1(1,J),1000).NE.0))) IQ(ITM+INVT+6,1)=1                            REDM-239
      IF (LO(11).AND.(MOD(IQ(ITN+3*K-1,1),2).EQ.0)) IQ(ITM+INVT+4,1)=1  REDM-240
      IF (LO(19)) IQ(ITM+INVT+5,1)=IQ(ITM+INVT+3,1)                     REDM-241
      INVT=INVT+7                                                       REDM-242
      IQ(1,J)=INVT/7                                                    REDM-243
   26 CONTINUE                                                          REDM-244
C SEARCH ON CORRECTION TERMS                                            REDM-245
      INTC=INVT                                                         REDM-246
      DO 28 J=1,INVT,7                                                  REDM-247
      IF (IQ(ITM+J+5,1).EQ.0) GO TO 28                                  REDM-248
      K1=ITM+J-1                                                        REDM-249
      DO 27 L=1,7                                                       REDM-250
   27 IQ(ITM+INTC+L,1)=IQ(K1+L,1)                                       REDM-251
      IQ(ITM+INTC+6,1)=-(1+J/7)                                         REDM-252
      INTC=INTC+7                                                       REDM-253
      IQ(K1+6,1)=INTC/7                                                 REDM-254
   28 CONTINUE                                                          REDM-255
      DO 30 J=1,INTC,7                                                  REDM-256
      IF (IQ(ITM+J+3,1).EQ.0) GO TO 29                                  REDM-257
      INVC=INVC+1                                                       REDM-258
      IQ(ITM+J+3,1)=INVC                                                REDM-259
   29 IF ((IQ(ITM+J+2,1).EQ.0).AND.(IQ(ITM+J+4,1).EQ.0)) GO TO 30       REDM-260
      INLS=INLS+1                                                       REDM-261
      IQ(ITM+J+2,1)=INLS                                                REDM-262
      IF (IQ(ITM+J+4,1).EQ.0) GO TO 30                                  REDM-263
      INVD=INVD+1                                                       REDM-264
      IQ(ITM+J+4,1)=INVD                                                REDM-265
   30 CONTINUE                                                          REDM-266
      ITP=ITM+INTC+MOD(INTC,2)                                          REDM-267
      NTC=INVT/7                                                        REDM-268
      DO 31 J=1,NTC                                                     REDM-269
      IQ(ITP+4*J-3,1)=J                                                 REDM-270
      IQ(ITP+4*J-2,1)=0                                                 REDM-271
      IQ(ITP+4*J-1,1)=IQ(ITM+7*J-4,1)                                   REDM-272
      IQ(ITP+4*J,1)=IQ(ITM+7*J,1)                                       REDM-273
   31 CONTINUE                                                          REDM-274
      INTV=4*NTC                                                        REDM-275
      IF (LO(120)) GO TO 37                                             REDM-276
      DO 36 I1=1,NCOLL                                                  REDM-277
      DO 35 I2=I1,NCOLL                                                 REDM-278
      K1=NIV(I1,I2,1)                                                   REDM-279
      K2=NIV(I1,I2,2)                                                   REDM-280
      IF (K1.GT.K2) GO TO 35                                            REDM-281
      KK=I1*(NCOLL+1)+I2                                                REDM-282
      DO 34 K=K1,K2                                                     REDM-283
      J=IQ(1,K)                                                         REDM-284
      IF (IQ(ITP+4*J-2,1).NE.0) GO TO 32                                REDM-285
      IQ(ITP+4*J-2,1)=KK                                                REDM-286
      GO TO 34                                                          REDM-287
   32 DO 33 L=1,4                                                       REDM-288
   33 IQ(ITP+INTV+L,1)=IQ(ITP+4*J+L-4,1)                                REDM-289
      IQ(ITP+INTV+2,1)=KK                                               REDM-290
      INTV=INTV+4                                                       REDM-291
      IQ(1,K)=INTV/4                                                    REDM-292
   34 CONTINUE                                                          REDM-293
   35 CONTINUE                                                          REDM-294
   36 CONTINUE                                                          REDM-295
   37 IM=IM/3                                                           REDM-296
      INTV=INTV/4                                                       REDM-297
      INVT=INVT/7                                                       REDM-298
      INTC=INTC/7                                                       REDM-299
      INSL=0                                                            REDM-300
      DO 39 J=1,INTV                                                    REDM-301
      L=IQ(ITP+4*J-1,1)                                                 REDM-302
      INSL=MAX0(INSL,L)                                                 REDM-303
      DO 38 K=1,IT                                                      REDM-304
      IF (IQ(1,K).EQ.J) IQ(3,K)=L                                       REDM-305
   38 CONTINUE                                                          REDM-306
   39 CONTINUE                                                          REDM-307
C NUMBER OF REAL AND IMAGINARY FORM FACTORS                             REDM-308
   40 NV=INTC                                                           REDM-309
      IF (LO(13).OR.LO(19)) NV=NV+2*INLS                                REDM-310
      ITY(1)=0                                                          REDM-311
      LO(221)=IM.EQ.0                                                   REDM-312
      IF (LO(100)) GO TO 41                                             REDM-313
      ITY(3)=NPX                                                        REDM-314
      ITY(5)=ITY(3)+NPX                                                 REDM-315
      IF (LO(201).AND.LO(203)) ITY(5)=ITY(3)                            REDM-316
      ITY(7)=ITY(5)+INTV                                                REDM-317
      ITY(2)=ITY(7)+2*INSL                                              REDM-318
      ITY(4)=ITY(2)+NPX                                                 REDM-319
      ITY(6)=ITY(4)+NPX                                                 REDM-320
      IF (LO(201).AND.LO(203)) ITY(6)=ITY(4)                            REDM-321
      ITY(8)=ITY(6)+INTV                                                REDM-322
      IF (LO(112)) ITY(8)=ITY(6)                                        REDM-323
      ITX(1)=ITY(8)+2*INSL                                              REDM-324
      IF (LO(114)) ITX(1)=ITY(8)                                        REDM-325
      IF (LO(112)) ITX(1)=ITY(6)                                        REDM-326
      ITX(5)=ITX(1)+NPP                                                 REDM-327
      ITX(9)=ITX(5)+NPP                                                 REDM-328
      IF (LO(201).AND.LO(203)) ITX(9)=ITX(5)                            REDM-329
      ITX(13)=ITX(9)+INTC                                               REDM-330
      ITX(2)=ITX(13)+2*INLS                                             REDM-331
      ITX(6)=ITX(2)+NPP                                                 REDM-332
      ITX(10)=ITX(6)+NPP                                                REDM-333
      IF (LO(201).AND.LO(203)) ITX(10)=ITX(6)                           REDM-334
      ITX(14)=ITX(10)+INTC                                              REDM-335
      ITX(7)=ITX(14)+2*INLS                                             REDM-336
      IF (LO(114)) ITX(7)=ITX(14)                                       REDM-337
      IF (LO(112)) ITX(7)=ITX(10)                                       REDM-338
      ITX(8)=ITX(7)+NPP                                                 REDM-339
      ITX(3)=ITX(8)+NPP                                                 REDM-340
      ITX(4)=ITX(3)+NPP                                                 REDM-341
      ITX(11)=ITX(4)+NPP                                                REDM-342
      ITX(12)=ITX(11)+INTC                                              REDM-343
      ITX(15)=ITX(12)+INTC                                              REDM-344
      IF (LO(112)) ITX(15)=ITX(12)                                      REDM-345
      ITX(16)=ITX(15)+INVC                                              REDM-346
      ITXM=ITX(16)+2*INVD+INTC                                          REDM-347
      GO TO 42                                                          REDM-348
   41 ITY(5)=0                                                          REDM-349
      ITX(1)=0                                                          REDM-350
      ITX(2)=14*NCOLL                                                   REDM-351
      ITY(2)=ITX(2)                                                     REDM-352
      ITX(7)=ITX(2)+4*(INTV+INSL)                                       REDM-353
      ITX(3)=ITX(7)+24*NPP                                              REDM-354
      ITX(4)=ITX(7)-24                                                  REDM-355
      ITX(5)=ITX(3)-11                                                  REDM-356
      ITX(6)=ITX(2)-4                                                   REDM-357
      ITXM=ITX(3)+11*INTC                                               REDM-358
   42 IF (LO(152).AND.LO(161)) RETURN                                   REDM-359
C REDUCED MATRIX ELEMENTS PUNCHED ON CARDS ON REQUEST                   REDM-360
C OUTPUT OF REDUCED MATRIX ELEMENTS ON REQUEST                          REDM-361
      IT=NIV(NCOLL,NCOLL,2)                                             REDM-362
      ITM=6*IT-3                                                        REDM-363
      ITN=ITM+3*IM-4+MOD(IM,2)                                          REDM-364
      IF (LO(52)) WRITE (MW,1004)                                       REDM-365
      DO 45 I1=1,NCOLL                                                  REDM-366
      DO 44 I2=I1,NCOLL                                                 REDM-367
      K1=NIV(I1,I2,1)                                                   REDM-368
      K2=NIV(I1,I2,2)                                                   REDM-369
      IF (LO(52)) WRITE (MW,1005) I1,I2,K1,K2                           REDM-370
      K=K2-K1+1                                                         REDM-371
      IF (LO(61)) WRITE (61,1000) I1,I2,K                               REDM-372
      IF (K.EQ.0) GO TO 44                                              REDM-373
      DO 43 K=K1,K2                                                     REDM-374
      IF (LO(52)) WRITE (MW,1006) K,(IQ(J,K),J=1,3),T(3,K)              REDM-375
      IF (LO(161)) GO TO 43                                             REDM-376
      N=IQ(1,K)                                                         REDM-377
      M=IQ(2,K)                                                         REDM-378
      NM=IQ(ITN+7*N+1,1)                                                REDM-379
      NS=IQ(ITM+3*M+2,1)                                                REDM-380
      NJ=IQ(ITM+3*M+3,1)                                                REDM-381
      IF (NS.LE.0) NJ=0                                                 REDM-382
      IF (NS.EQ.-2) NS=-1                                               REDM-383
      IF (NJ.EQ.0.AND.IQ(3,K).NE.0) NJ=1                                REDM-384
      WRITE (61,1007) NM,IQ(ITM+3*M+1,1),NS,NJ,T(3,K)                   REDM-385
   43 CONTINUE                                                          REDM-386
   44 CONTINUE                                                          REDM-387
   45 CONTINUE                                                          REDM-388
      IF (IT.EQ.0.OR.LO(152)) RETURN                                    REDM-389
      WRITE (MW,1008) (I,(IQ(ITM+3*I+J,1),J=1,3),I=1,IM)                REDM-390
      WRITE (MW,1009) (I,(IQ(ITN+7*I+J,1),J=1,7),I=1,INTC)              REDM-391
      ITP=ITN+7*INTC+3+MOD(INTC,2)                                      REDM-392
      WRITE (MW,1010) (I,(IQ(ITP+4*I+J,1),J=1,4),I=1,INTV)              REDM-393
      RETURN                                                            REDM-394
   46 WRITE (MW,1011) J1,J2,I1,I2                                       REDM-395
      GO TO 59                                                          REDM-396
   47 WRITE (MW,1012) NN                                                REDM-397
      GO TO 59                                                          REDM-398
   48 WRITE (MW,1013) IQ(2,IT),IPI(1,I1),IPI(1,I2)                      REDM-399
      GO TO 59                                                          REDM-400
   49 WRITE (MW,1014)                                                   REDM-401
      GO TO 59                                                          REDM-402
   50 WRITE (MW,1015)                                                   REDM-403
      GO TO 59                                                          REDM-404
   51 WRITE (MW,1016)                                                   REDM-405
      GO TO 59                                                          REDM-406
   52 WRITE (MW,1017)                                                   REDM-407
      GO TO 59                                                          REDM-408
   53 WRITE (MW,1018) N,IJS,JIS                                         REDM-409
      GO TO 59                                                          REDM-410
   54 WRITE (MW,1019) I,J                                               REDM-411
      GO TO 59                                                          REDM-412
   55 WRITE (MW,1020) J                                                 REDM-413
      GO TO 59                                                          REDM-414
   56 WRITE (MW,1021) M,IQ(2,IT),N                                      REDM-415
      GO TO 59                                                          REDM-416
   57 WRITE (MW,1022) M,NPS                                             REDM-417
      GO TO 59                                                          REDM-418
   58 WRITE (MW,1023) NM,IJL,JIL                                        REDM-419
      GO TO 59                                                          REDM-420
   59 WRITE (MW,1024)                                                   REDM-421
      STOP                                                              REDM-422
 1000 FORMAT (3I5)                                                      REDM-423
 1001 FORMAT (' FOR I =',I4,'  AND IP =',I4,I8,' REDUCED MATRIX ELEMENTSREDM-424
     1')                                                                REDM-425
 1002 FORMAT (4I5,F20.12)                                               REDM-426
 1003 FORMAT (10X,'FORM FACTOR =',I4,' L =',I4,4X,'2*S =',I4,4X,'2*J =',REDM-427
     1I4,4X,' REDUCED MATRIX ELEMENT',D20.6)                            REDM-428
 1004 FORMAT (//' NUCLEAR REDUCED MATRIX ELEMENTS'/)                    REDM-429
 1005 FORMAT (/' STATE',I3,'  WITH STATE',I3,10X,' FROM',I4,' TO',I4/)  REDM-430
 1006 FORMAT (10X,'N =',I3,3X,'FORM FACTOR =',I3,3X,'MULT. =',I3,3X,'SP.REDM-431
     1-O. =',I3,6X,'MATRIX ELEMENT',D15.6)                              REDM-432
 1007 FORMAT (4I5,F20.12)                                               REDM-433
 1008 FORMAT (//5X,' CORRESPONDENCE TO MULTIPOLES'//(20X,'N =',I3,5X,'L REDM-434
     1=',I3,5X,'2*S =',I3,5X,'2*J =',I3))                               REDM-435
 1009 FORMAT (//4X,' CORRESPONDENCE TO FORM FACTORS IN THEIR COMPUTATIONREDM-436
     1'//(10X,'N =',I3,4X,'F.F. =',I6,4X,'MULT. =',I4,4X,'SP.-O. =',I4,4REDM-437
     2X,'COUL =',I4,4X,'SPDO =',I4,4X,'COR =',I4,4X,'L =',I4))          REDM-438
 1010 FORMAT (//4X,' CORRESPONDENCE TO FORM FACTORS IN THEIR USE'//(10X,REDM-439
     1'N =',I3,4X,'ABOVE =',I4,4X,'DISP. =',I4,4X,'SP.-O. =',I4,4X,'L ='REDM-440
     2,I4))                                                             REDM-441
 1011 FORMAT (//' INCORRECT ORDER OF INPUT FOR REDUCED MATRIX ELEMENTS :REDM-442
     1',2I6,' INSTEAD OF',2I6)                                          REDM-443
 1012 FORMAT (//' A MAGNETIC COULOMB INTERACTION CANNOT BE USED IF THE CREDM-444
     1OULOMB INTERACTION IS NOT DEFORMED:',I3)                          REDM-445
 1013 FORMAT (/' MULTIPOLE ORDER',I4,' NOT OF THE SAME PARITY AS',2I4)  REDM-446
 1014 FORMAT (' ERROR FOR HARMONIC VIBRATIONAL MODEL')                  REDM-447
 1015 FORMAT (' ERROR FOR ANHARMONIC VIBRATIONAL MODEL')                REDM-448
 1016 FORMAT (' ERROR FOR SYMMETRIC ROTATIONAL MODEL')                  REDM-449
 1017 FORMAT (' ERROR FOR ASYMMETRIC ROTATIONAL MODEL')                 REDM-450
 1018 FORMAT (/' 2*S =',I4,' INCORRECT BETWEEN CHANNELS WITH 2*S =',2I4)REDM-451
 1019 FORMAT (/' LAST FORM FACTOR IDENTIFICATION',I3,'  NEW FORM FACTOR REDM-452
     1IDENTIFICATION',I3,'  TOO LARGE')                                 REDM-453
 1020 FORMAT (/' LAST FORM FACTOR IDENTIFICATION',I3,'  WAS NOT ALREADY REDM-454
     1READ WITH THIS SIGN')                                             REDM-455
 1021 FORMAT (/' 2*J =',I4,' INCORRECT WITH L =',I4,' AND 2*S =',I4)    REDM-456
 1022 FORMAT (/' J-VALUE =',I4,'  USED AS DEFORMED SPIN-ORBIT CONTROL INREDM-457
     1CORRECT. LIMIT:',I2)                                              REDM-458
 1023 FORMAT (/' 2*TRANSFER OF ANG. MOMENTUM',I4,' NOT BETWEEN',I4,' ANDREDM-459
     1',I4)                                                             REDM-460
 1024 FORMAT (//' IN REDM  ... STOP ...')                               REDM-461
      END                                                               REDM-462
C 01/01/04                                                      ECIS03  VICM-000
      SUBROUTINE VIBM(NIV,IQ,T,IPI,NCOLL,IT,IPH,NVAR,VAR,NVA,NBTA,NBT1,FVICM-001
     1AC,NFA,IDT,LO)                                                    VICM-002
C NUCLEAR REDUCED MATRIX ELEMENTS FOR THE HARMONIC VIBRATIONAL MODEL    VICM-003
C THE CONTROL NUMBER FOR FORM FACTOR IS I FOR BETA(I) AND I+J*(NBT1+1)  VICM-004
C FOR BETA(I)*BETA(J) WITH J LARGER THAN I IN THE HARMONIC VIBRATIONAL  VICM-005
C MODEL (ORDER OF DERIVATIVE IN THE ANHARMONIC VIBRATIONAL MODEL)       VICM-006
C FOR ARGUMENTS NIV TO IT AND FAC TO LO    SEE REDM                     VICM-007
C INPUT VARIABLES: IPH(I): NUMBER OF PHONONS(0,1,2 PHONONS OR 3 FOR     VICM-008
C             MIXTURE OF 1 AND 2 PHONONS STATES)                        VICM-009
C                  IPH(NCOLL+I) FOR I=1,NCOLL: ADDRESS OF THE DESCRIP-  VICM-010
C             TION OF TWO PHONONS AND MIXED STATES WHICH ARE IN THE SAMEVICM-011
C             TABLE IPH FOR I LARGER THAN 2*NCOLL.                      VICM-012
C                  NVAR,VAR:  1 AND 2 PHONONS MIXING COEFFICIENTS       VICM-013
C                  NVA:  NUMBER OF 1 AND 2 PHONONS MIXING COEFFICIENTS  VICM-014
C                  RBTA(I,J)   ANGULAR MOMENTUM OF PHONONS FOR I=9      VICM-015
C                        0 FOR I=10 TO BE USED IN SECOND ORDER MONOPOLE VICM-016
C                        CORRECTION, ANYTHING NOT TO BE USED            VICM-017
C                  NBT1: NUMBER OF PHONONS                              VICM-018
C                                                                       VICM-019
C  THE DEFORMATIONS BETA AND FACTORS 1/SQRT(4*PI) ARE NOT INCLUDED IN   VICM-020
C THE MATRIX ELEMENTS WHICH ARE COMPUTED HERE. THE FULL EXPRESSIONS ARE:VICM-021
C (0||Q2||0) = SUM ON BETA**2/(4*PI) WITH IQ=0                          VICM-022
C (0||Q1||I) = (-)**I BETA(I)/SQRT(4*PI) WITH IQ=I                      VICM-023
C (I||Q1||0) SAME VALUE WITHOUT (-)**I                                  VICM-024
C (IP||Q2||I) = (-)**I BETA(I)*BETA(IP)*DJCG(I,IP,0,0|IQ,0)/(2*PI)      VICM-025
C    PLUS SUM ON BETA**2*SQRT(2*I+1)/(4*PI) WITH IQ=0 WHEN I=IP         VICM-026
C (0||Q2||L1,L2,I) = (-)**I BETA(L1)*BETA(L2) DJCG(L1,L2,0,0|I,0)/      VICM-027
C    (2*PI*SQRT(1+DELTA(L1,L2)))   WITH IQ=I                            VICM-028
C (L1,L2,I||Q2||0) SAME VALUE WITHOUT (-)**I                            VICM-029
C (IP||Q1||L1,L2,I) = (-)**IQ BETA(*)*(DELTA(IQ,L1)*DELTA(IP,L2)+(-)**  VICM-030
C    (IP+I+IQ)*DELTA(IQ,L2)*DELTA(IP,L1)) * SQRT((2*I+1)/((2*IQ+1)*     VICM-031
C    (1+DELTA(L1,L2))*SQRT(4*PI))                                       VICM-032
C (L1,L2,I||Q1||IP) SAME EXPRESSION BUT WITH (-)**IP+I+IQ  IN FRONT     VICM-033
C (L3,L4,IP||Q2||L1,L2,I)  SUM ON BETA**2*(DELTA(L1,L3)*DELTA(L2,L4)+   VICM-034
C    (-)**(L1+L2-I)*DELTA(L1,L4)*DELTA(L2,L3)) * SQRT(2*IP+1)/(4*PI*SQRTVICM-035
C    ((1+DELTA(L1,L2))*(1+DELTA(L3,L4))) WITH IQ=0,WHEN I=IP            VICM-036
C    PLUS,WHEN TWO PHONONS ARE IDENTICAL,SUM WITH ALL THE POSSIBLE VA-  VICM-037
C    LUES FOR IQ OF BETA(L5)*BETA(L6)*DJCG(L5,L6,0,0|IQ,0)*DJ6J(L6,IP,  VICM-038
C    L7,I,L5,IQ) * SQRT((2*I+1)*(2*IP+1))/(2*PI*SQRT((1+DELTA(L1,L2)*(1+VICM-039
C    DELTA(L3,L4))   WHERE  L7 IS THE COMMON PHONON ,L5 AND L6 THE OTHERVICM-040
C    PHONONS IN I AND IP, MULTIPLIED BY THE PHASE                       VICM-041
C      *(-)**(IP-L1) IF L1=L3,        *(-)**(L3) IF L1=L4,              VICM-042
C      *(-)**(IP+L1-I) IF L2=L3,      *(-)**(L1+L3+L4-I) IF L2=L4.      VICM-043
C (J||L=IQ||I) IS MULTIPLIED BY A PHASE (-)**((IQ+IPI(I)-IPI(J))/2)     VICM-044
C AND THE FACTORS BETA/SQRT(4*PI) ARE SHIFTED ON THE FORM FACTORS       VICM-045
C***********************************************************************VICM-046
      IMPLICIT REAL*8 (A-H,O-Z)                                         VICM-047
      LOGICAL LIB(4),LO(250)                                            VICM-048
      DIMENSION IPH(2,NCOLL),IQ(6,1),T(3,1),IPI(11,1),IA(6,4),B(4),AA(2,VICM-049
     12),VAR(NVA),NIV(NCOLL,NCOLL,2),FAC(1),NBTA(18,1),NVAR(2,7)        VICM-050
      COMMON /INOUT/ MR,MW,MS                                           VICM-051
      IT=1                                                              VICM-052
      NSP=0                                                             VICM-053
      IF (LO(13).OR.LO(19)) NSP=10                                      VICM-054
      DO 39 I1=1,NCOLL                                                  VICM-055
      AA(1,1)=1.D0                                                      VICM-056
      AA(1,2)=0.D0                                                      VICM-057
      IF (IPH(1,I1).LE.2) GO TO 1                                       VICM-058
      JVAR=IPH(2,I1)+1                                                  VICM-059
      IVAR=NVAR(2,JVAR)                                                 VICM-060
      AY=1.74532925D-02*VAR(IVAR)                                       VICM-061
      AA(1,1)=DCOS(AY)                                                  VICM-062
      AA(1,2)=DSIN(AY)                                                  VICM-063
      IF (.NOT.LO(217)) WRITE (MW,1000) I1,VAR(IVAR),AA(1,1),AA(1,2)    VICM-064
    1 AA(2,1)=AA(1,1)                                                   VICM-065
      AA(2,2)=AA(1,2)                                                   VICM-066
      DO 38 I2=I1,NCOLL                                                 VICM-067
      IF (I1.EQ.I2) GO TO 2                                             VICM-068
      AA(2,1)=1.D0                                                      VICM-069
      AA(2,2)=0.D0                                                      VICM-070
      IF (IPH(1,I2).LE.2) GO TO 2                                       VICM-071
      IVAR=IPH(2,I2)+1                                                  VICM-072
      JVAR=NVAR(2,IVAR)                                                 VICM-073
      IF (JVAR.GT.NVA) GO TO 40                                         VICM-074
      AY=1.74532925D-02*VAR(JVAR)                                       VICM-075
      AA(2,1)=DCOS(AY)                                                  VICM-076
      AA(2,2)=DSIN(AY)                                                  VICM-077
    2 NIV(I1,I2,1)=IT                                                   VICM-078
      L1=IPH(1,I1)                                                      VICM-079
      AX=AA(1,1)                                                        VICM-080
      IF (L1.GT.2) L1=1                                                 VICM-081
      IF (DABS(AX).LT.1.D-6) GO TO 27                                   VICM-082
    3 L2=IPH(1,I2)                                                      VICM-083
      IF (L2.GT.2) L2=1                                                 VICM-084
      AY=AX*AA(2,1)                                                     VICM-085
      IF (DABS(AY).LT.1.D-6) GO TO 26                                   VICM-086
    4 I=L1+L2+1                                                         VICM-087
      IF (I.EQ.3.AND.L1.NE.L2) I=6                                      VICM-088
      IF (L1.GT.L2) GO TO 5                                             VICM-089
      J1=I1                                                             VICM-090
      J2=I2                                                             VICM-091
      GO TO 6                                                           VICM-092
    5 J1=I2                                                             VICM-093
      J2=I1                                                             VICM-094
C  TRANSPOSITION                                                        VICM-095
      AY=AY*DFLOAT(1-MOD(IPI(3,I1)+IPI(3,I2)+2*(IPI(1,I1)+IPI(1,I2)+1),4VICM-096
     1))                                                                VICM-097
    6 GO TO ( 7 , 9 , 10 , 14 , 18 , 24 ) , I                           VICM-098
C  (0||Q||0)                                                            VICM-099
    7 IF ((IPI(3,J1).NE.1).OR.(IPI(3,J2).NE.1)) GO TO 41                VICM-100
      IF (LO(102)) GO TO 26                                             VICM-101
      DO 8 L=1,NBT1                                                     VICM-102
      IF (NBTA(18,L).NE.0) GO TO 8                                      VICM-103
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT,2)                     VICM-104
      IQ(1,IT)=L*(NBT1+2)                                               VICM-105
      IQ(2,IT)=0                                                        VICM-106
      IQ(3,IT)=NSP                                                      VICM-107
      T(3,IT)=AY                                                        VICM-108
      IT=IT+1                                                           VICM-109
    8 CONTINUE                                                          VICM-110
      GO TO 26                                                          VICM-111
C  (IP||Q||0)  WITH IP=J2                                               VICM-112
    9 IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT,2)                     VICM-113
      N2=IPH(2,J2)                                                      VICM-114
      IF (IPH(1,J2).GT.2) N2=NVAR(1,N2+1)                               VICM-115
      IF ((IPI(3,J2).NE.(2*NBTA(17,N2)+1)).OR.(IPI(3,J1).NE.1)) GOTO 41 VICM-116
      IQ(1,IT)=N2                                                       VICM-117
      IQ(2,IT)=NBTA(17,N2)                                              VICM-118
      IQ(3,IT)=NSP                                                      VICM-119
      T(3,IT)=AY                                                        VICM-120
      IF (MOD(IABS(IQ(2,IT)+IPI(1,J1)-IPI(1,J2)),4).NE.0) T(3,IT)=-T(3,IVICM-121
     1T)                                                                VICM-122
      GO TO 25                                                          VICM-123
C  (IP||Q||I)                                                           VICM-124
   10 IF (LO(102)) GO TO 26                                             VICM-125
      N1=IPH(2,J1)                                                      VICM-126
      IF (IPH(1,J1).GT.2) N1=NVAR(1,N1+1)                               VICM-127
      N2=IPH(2,J2)                                                      VICM-128
      IF (IPH(1,J2).GT.2) N2=NVAR(1,N2+1)                               VICM-129
      IF ((IPI(3,J2).NE.(2*NBTA(17,N2)+1)).OR.(IPI(3,J1).NE.(2*NBTA(17,NVICM-130
     11)+1))) GO TO 41                                                  VICM-131
      IF (N1.NE.N2) GO TO 12                                            VICM-132
      AQ=DSQRT(DFLOAT(2*NBTA(17,N1)+1))                                 VICM-133
      DO 11 L=1,NBT1                                                    VICM-134
      IF (NBTA(18,L).NE.0) GO TO 11                                     VICM-135
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT,2)                     VICM-136
      IQ(1,IT)=L*(NBT1+2)                                               VICM-137
      IQ(2,IT)=0                                                        VICM-138
      IQ(3,IT)=NSP                                                      VICM-139
      T(3,IT)=AQ*AY                                                     VICM-140
      IT=IT+1                                                           VICM-141
   11 CONTINUE                                                          VICM-142
C FACTOR 2 FOR NON IDENTICAL PHONONS ADDED ON THE 10/03/81              VICM-143
   12 K1=IABS(NBTA(17,N2)-NBTA(17,N1))+1                                VICM-144
      K2=NBTA(17,N2)+NBTA(17,N1)+1                                      VICM-145
      FS=DFLOAT(2*(1-2*MOD(NBTA(17,N1)+IABS(IPI(1,J1)-IPI(1,J2)+K1-1)/2,VICM-146
     12)))                                                              VICM-147
      DO 13 K=K1,K2,2                                                   VICM-148
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT,2)                     VICM-149
      J=K-1                                                             VICM-150
      AQ=FS*DJCG(IPI(3,J1)-1,IPI(3,J2)-1,2*J,0,0,FAC,NFA)               VICM-151
      IQ(1,IT)=MAX0(N1,N2)*(NBT1+1)+MIN0(N1,N2)                         VICM-152
      IQ(2,IT)=J                                                        VICM-153
      IQ(3,IT)=NSP                                                      VICM-154
      T(3,IT)=AQ*AY                                                     VICM-155
      FS=-FS                                                            VICM-156
   13 IT=IT+1                                                           VICM-157
      GO TO 26                                                          VICM-158
C  (L1,L2,IP||Q||I) WITH I=J1 AND IP=J2                                 VICM-159
   14 I=IPH(2,J2)                                                       VICM-160
      LB1=NVAR(1,I)                                                     VICM-161
      LB2=NVAR(2,I)                                                     VICM-162
      N1=IPH(2,J1)                                                      VICM-163
      IF (IPH(1,J1).GT.2) N1=NVAR(1,N1+1)                               VICM-164
      IF (IPI(3,J1).NE.(2*NBTA(17,N1)+1)) GO TO 41                      VICM-165
      LIB(1)=LB1.EQ.N1                                                  VICM-166
      LIB(2)=LB2.EQ.N1                                                  VICM-167
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT,2)                     VICM-168
      IF (LIB(1).AND.LIB(2)) GO TO 16                                   VICM-169
      IF (LIB(2)) GO TO 15                                              VICM-170
      IF (.NOT.LIB(1)) GO TO 26                                         VICM-171
      IQ(1,IT)=LB2                                                      VICM-172
      IQ(2,IT)=NBTA(17,LB2)                                             VICM-173
      IQ(3,IT)=NSP                                                      VICM-174
      T(3,IT)=AY*DFLOAT(1-2*MOD(IABS(IPI(1,J1)-IPI(1,J2)+IQ(2,IT))/2,2))VICM-175
      GO TO 17                                                          VICM-176
   15 IQ(1,IT)=LB1                                                      VICM-177
      IQ(2,IT)=NBTA(17,LB1)                                             VICM-178
      IQ(3,IT)=NSP                                                      VICM-179
      T(3,IT)=AY*DFLOAT(1-MOD(IABS(IPI(3,J1)+IPI(3,J2)-2+IPI(1,J1)-IPI(1VICM-180
     1,J2)-IQ(2,IT)),4))                                                VICM-181
      GO TO 17                                                          VICM-182
   16 IF (MOD(IPI(3,J2),4).NE.1) GO TO 26                               VICM-183
      IQ(1,IT)=N1                                                       VICM-184
      IQ(2,IT)=NBTA(17,N1)                                              VICM-185
      IQ(3,IT)=NSP                                                      VICM-186
      T(3,IT)=DSQRT(2.D0)*AY*DFLOAT(1-MOD(IABS(IPI(1,J1)-IPI(1,J2)+IQ(2,VICM-187
     1IT)),4))                                                          VICM-188
   17 T(3,IT)=T(3,IT)*DSQRT(DFLOAT(IPI(3,J2))/DFLOAT(2*IQ(2,IT)+1))     VICM-189
      GO TO 25                                                          VICM-190
C  (L3,L4,IP||Q||L1,L2,I)                                               VICM-191
   18 IF (LO(102)) GO TO 26                                             VICM-192
      I=IPH(2,I1)                                                       VICM-193
      LB1=NVAR(1,I)                                                     VICM-194
      LB2=NVAR(2,I)                                                     VICM-195
      I=IPH(2,I2)                                                       VICM-196
      LB3=NVAR(1,I)                                                     VICM-197
      LB4=NVAR(2,I)                                                     VICM-198
      LIB(1)=LB1.NE.LB3                                                 VICM-199
      LIB(2)=LB2.NE.LB4                                                 VICM-200
      LIB(3)=LB1.NE.LB4                                                 VICM-201
      LIB(4)=LB2.NE.LB3                                                 VICM-202
      IF (LIB(1).AND.LIB(2).AND.LIB(3).AND.LIB(4)) GO TO 26             VICM-203
      JA1=(IPI(3,J1)-1)/2                                               VICM-204
      JA2=(IPI(3,J2)-1)/2                                               VICM-205
      IA(1,1)=NBTA(17,LB2)                                              VICM-206
      IA(2,1)=NBTA(17,LB4)                                              VICM-207
      IA(1,2)=NBTA(17,LB1)                                              VICM-208
      IA(2,2)=NBTA(17,LB3)                                              VICM-209
      IA(1,3)=IA(1,1)                                                   VICM-210
      IA(2,3)=IA(2,2)                                                   VICM-211
      IA(1,4)=IA(1,2)                                                   VICM-212
      IA(2,4)=IA(2,1)                                                   VICM-213
      IA(3,1)=IA(1,2)                                                   VICM-214
      IA(3,2)=IA(1,1)                                                   VICM-215
      IA(3,3)=IA(1,2)                                                   VICM-216
      IA(3,4)=IA(1,1)                                                   VICM-217
      IA(6,1)=MAX0(LB2,LB4)*(NBT1+1)+MIN0(LB2,LB4)                      VICM-218
      IA(6,2)=MAX0(LB1,LB3)*(NBT1+1)+MIN0(LB1,LB3)                      VICM-219
      IA(6,3)=MAX0(LB2,LB3)*(NBT1+1)+MIN0(LB2,LB3)                      VICM-220
      IA(6,4)=MAX0(LB1,LB4)*(NBT1+1)+MIN0(LB1,LB4)                      VICM-221
      IMIN=1000                                                         VICM-222
      IMAX=0                                                            VICM-223
      DO 19 I=1,4                                                       VICM-224
      IF (LIB(I)) GO TO 19                                              VICM-225
      IA(4,I)=IABS(IA(1,I)-IA(2,I))                                     VICM-226
      IA(5,I)=IA(1,I)+IA(2,I)                                           VICM-227
      IF (IA(4,I).LT.IMIN) IMIN=IA(4,I)                                 VICM-228
      IF (IA(5,I).GT.IMAX) IMAX=IA(5,I)                                 VICM-229
   19 CONTINUE                                                          VICM-230
      B(1)=DFLOAT(1-2*MOD(JA2+IA(1,2),2))                               VICM-231
      B(2)=DFLOAT(1-2*MOD(IA(1,2)+IA(2,2)+IA(2,1)+JA1,2))               VICM-232
      B(3)=DFLOAT(1-2*MOD(IA(2,2),2))                                   VICM-233
      B(4)=DFLOAT(1-2*MOD(JA2+JA1+IA(1,2),2))                           VICM-234
      T0=DSQRT(DFLOAT((2*JA1+1)*(2*JA2+1)))*2.D0                        VICM-235
      IF (LB1.EQ.LB2) T0=DSQRT(0.5D0)*T0                                VICM-236
      IF (LB3.EQ.LB4) T0=DSQRT(0.5D0)*T0                                VICM-237
      IF (JA1.NE.JA2) GO TO 21                                          VICM-238
      TKQ=0.D0                                                          VICM-239
      IF ((LB1.EQ.LB3).AND.(LB2.EQ.LB4)) TKQ=1.D0                       VICM-240
      IF ((LB1.EQ.LB4).AND.(LB2.EQ.LB3)) TKQ=TKQ+DFLOAT(1-2*MOD(JA1+IA(1VICM-241
     1,1)+IA(1,2),2))                                                   VICM-242
      IF (TKQ.EQ.0.D0) GO TO 21                                         VICM-243
      IF (LB1.EQ.LB2) TKQ=0.5D0*TKQ                                     VICM-244
      DO 20 L=1,NBT1                                                    VICM-245
      IF (NBTA(18,L).NE.0) GO TO 20                                     VICM-246
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT,2)                     VICM-247
      IQ(1,IT)=L*(NBT1+2)                                               VICM-248
      IQ(2,IT)=0                                                        VICM-249
      IQ(3,IT)=NSP                                                      VICM-250
      T(3,IT)=TKQ*DSQRT(2.D0*JA1+1.D0)*AY                               VICM-251
      IT=IT+1                                                           VICM-252
   20 CONTINUE                                                          VICM-253
   21 IMIN=MAX0(IMIN,IABS(JA1-JA2))+1                                   VICM-254
      IMAX=MIN0(IMAX,JA1+JA2)+1                                         VICM-255
      DO 23 M=IMIN,IMAX                                                 VICM-256
      J=M-1                                                             VICM-257
      DO 22 K=1,4                                                       VICM-258
      IF (LIB(K).OR.(J.LT.IA(4,K)).OR.(J.GT.IA(5,K)).OR.(MOD(J+IA(5,K),2VICM-259
     1).NE.0)) GO TO 22                                                 VICM-260
      IF (2*IT.GT.IDT) CALL MEMO('VIBM',IDT,2*IT,2)                     VICM-261
      T3=B(K)*DJ6J(2*IA(1,K),2*IA(2,K),2*J,2*JA2,2*JA1,2*IA(3,K),FAC,NFAVICM-262
     1)*DJCG(2*IA(1,K),2*IA(2,K),2*J,0,0,FAC,NFA)*DFLOAT(1-MOD(IABS(IPI(VICM-263
     21,J1)-IPI(1,J2)+J),4))                                            VICM-264
      IF (DABS(T3).LT.1.D-6) GO TO 22                                   VICM-265
      IQ(1,IT)=IA(6,K)                                                  VICM-266
      IQ(2,IT)=J                                                        VICM-267
      IQ(3,IT)=NSP                                                      VICM-268
      T(3,IT)=T3*T0*AY                                                  VICM-269
      IT=IT+1                                                           VICM-270
   22 CONTINUE                                                          VICM-271
   23 CONTINUE                                                          VICM-272
      GO TO 26                                                          VICM-273
C  (L1,L2,IP||Q||0) WITH IP=J2                                          VICM-274
   24 IF (LO(102)) GO TO 26                                             VICM-275
      K3=(IPI(3,J2)-1)/2                                                VICM-276
      IQ(2,IT)=K3                                                       VICM-277
      I=IPH(2,J2)                                                       VICM-278
      K1=NVAR(1,I)                                                      VICM-279
      K2=NVAR(2,I)                                                      VICM-280
      IQ(1,IT)=MAX0(K1,K2)*(NBT1+1)+MIN0(K1,K2)                         VICM-281
      IQ(3,IT)=NSP                                                      VICM-282
      W1=2.D0                                                           VICM-283
      IF (K1.EQ.K2) W1=DSQRT(W1)                                        VICM-284
      T(3,IT)=AY*DJCG(2*NBTA(17,K1),2*NBTA(17,K2),IPI(3,J2)-1,0,0,FAC,NFVICM-285
     1A)*DFLOAT(1-MOD(IABS(IPI(1,J1)-IPI(1,J2)+K3),4))*W1               VICM-286
   25 IT=IT+1                                                           VICM-287
   26 IF ((AA(2,2).EQ.0.D0).OR.(L2.EQ.2)) GO TO 27                      VICM-288
      L2=2                                                              VICM-289
      AY=AX*AA(2,2)                                                     VICM-290
      GO TO 4                                                           VICM-291
   27 IF ((AA(1,2).EQ.0.).OR.(L1.EQ.2)) GO TO 28                        VICM-292
      L1=2                                                              VICM-293
      AX=AA(1,2)                                                        VICM-294
      GO TO 3                                                           VICM-295
   28 ITI=NIV(I1,I2,1)                                                  VICM-296
      IF (ITI.EQ.IT) GO TO 37                                           VICM-297
      ITF=IT-1                                                          VICM-298
      IF (ITF.EQ.ITI) GO TO 32                                          VICM-299
      IT1=ITI+1                                                         VICM-300
      IT=ITI                                                            VICM-301
      DO 31 I=IT1,ITF                                                   VICM-302
      DO 29 J=ITI,IT                                                    VICM-303
      IF ((IQ(1,I).NE.IQ(1,J)).OR.(IQ(2,I).NE.IQ(2,J)).OR.(IQ(3,I).NE.IQVICM-304
     1(3,J))) GO TO 29                                                  VICM-305
      T(3,J)=T(3,J)+T(3,I)                                              VICM-306
      GO TO 31                                                          VICM-307
   29 CONTINUE                                                          VICM-308
      IT=IT+1                                                           VICM-309
      DO 30 K=1,3                                                       VICM-310
   30 IQ(K,IT)=IQ(K,I)                                                  VICM-311
      T(3,IT)=T(3,I)                                                    VICM-312
   31 CONTINUE                                                          VICM-313
      IT=IT+1                                                           VICM-314
   32 ITF=IT-1                                                          VICM-315
      DO 36 I=ITI,ITF                                                   VICM-316
      IF (IT.LE.I) GO TO 37                                             VICM-317
   33 IF (DABS(T(3,I)).GT.1.D-12) GO TO 36                              VICM-318
      IT1=I+1                                                           VICM-319
      IT=IT-1                                                           VICM-320
      IF (IT1.GT.IT) GO TO 37                                           VICM-321
      DO 35 J=IT1,IT                                                    VICM-322
      DO 34 K=1,3                                                       VICM-323
   34 IQ(K,J-1)=IQ(K,J)                                                 VICM-324
   35 T(3,J-1)=T(3,J)                                                   VICM-325
      GO TO 33                                                          VICM-326
   36 CONTINUE                                                          VICM-327
   37 NIV(I1,I2,2)=IT-1                                                 VICM-328
   38 CONTINUE                                                          VICM-329
   39 CONTINUE                                                          VICM-330
      IT=IT-1                                                           VICM-331
      RETURN                                                            VICM-332
   40 WRITE (MW,1001) JVAR,NVA                                          VICM-333
      GO TO 42                                                          VICM-334
   41 WRITE (MW,1002) I1,I2                                             VICM-335
   42 WRITE (MW,1003)                                                   VICM-336
      STOP                                                              VICM-337
 1000 FORMAT (' STATE',I4,F15.5,' DEGREES      AMPLITUDES =',F15.7,'  1 VICM-338
     1PHONON AND',F15.7,'  2 PHONONS')                                  VICM-339
 1001 FORMAT (' NUMBER OF VARIABLES USED:',I5,5X,'EXCEEDS NUMBER OF VARIVICM-340
     1ABLES READ:',I6)                                                  VICM-341
 1002 FORMAT (' INCORRECT DESCRIPTION OF LEVEL',I3,'  OR',I3)           VICM-342
 1003 FORMAT (//' IN VIBM  ... STOP ...')                               VICM-343
      END                                                               VICM-344
C 01/01/04                                                      ECIS03  ROTM-000
      SUBROUTINE ROTM(NIV,IQ,T,IPI,NCOLL,IPH,NBTA,NVAR,VAR,NVA,IT,IQMAX,ROTM-001
     1NSPIN,FAC,NFA,IDT,LO)                                             ROTM-002
C NUCLEAR REDUCED MATRIX ELEMENTS FOR THE SYMMETRIC ROTATIONAL MODEL    ROTM-003
C THE CONTROL NUMBER FOR THE FORM FACTOR WITH THE VIBRATION N1 AND THE  ROTM-004
C MULTIPOLARITY L IS 1000*(L+1)+N1                                      ROTM-005
C FOR ARGUMENTS NIV TO IT AND FAC TO LO    SEE REDM                     ROTM-006
C SPECIAL INPUT: IQMAX: MAXIMUM MULTIPOLE EXPANSION                     ROTM-007
C                NSPIN: TWICE GROUND STATE BAND VALUE K                 ROTM-008
C                IPI:   DESCRIPTION OF LEVELS                           ROTM-009
C                NBTA:  DESCRIPTION OF VIBRATIONAL BANDS                ROTM-010
C                NVAR,VAR:   MIXTURE COEFFICIENTS OF BANDS              ROTM-011
C                NVA:   NUMBER OF VALUES OF VAR                         ROTM-012
C                                                                       ROTM-013
C    (IP||Q||I)   = SQRT(2*I+1) * CG(I,IQ,IP,K,0,K)                     ROTM-014
C   (IP+V||Q||I)  = SQRT(2*I+1) * CG(I,IQ,IP,K,V,K+V)                   ROTM-015
C  (IP+V||Q||I+V) = SQRT(2*I+1) * CG(I,IQ,IP,K+V,0,K+V)                 ROTM-016
C***********************************************************************ROTM-017
      IMPLICIT REAL*8 (A-H,O-Z)                                         ROTM-018
      LOGICAL LO(250)                                                   ROTM-019
      DIMENSION T(3,1),IPI(11,NCOLL),NIV(NCOLL,NCOLL,2),IQ(6,1),FAC(1),VROTM-020
     1AR(NVA),IPH(2,NCOLL),NBTA(18,1),AA(2,2),NVAR(2,1)                 ROTM-021
      COMMON /INOUT/ MR,MW,MS                                           ROTM-022
      IT=1                                                              ROTM-023
      NSP=0                                                             ROTM-024
      IF (LO(13).OR.LO(19)) NSP=10                                      ROTM-025
      DO 24 I1=1,NCOLL                                                  ROTM-026
      IA1=IPI(3,I1)-1                                                   ROTM-027
      AA(1,1)=1.D0                                                      ROTM-028
      AA(1,2)=0.D0                                                      ROTM-029
      IF (IPH(1,I1).LE.1) GO TO 1                                       ROTM-030
      JVAR=IPH(2,I1)                                                    ROTM-031
      IVAR=NVAR(2,JVAR)                                                 ROTM-032
      AY=1.74532925D-02*VAR(IVAR)                                       ROTM-033
      AA(1,1)=DCOS(AY)                                                  ROTM-034
      AA(1,2)=DSIN(AY)                                                  ROTM-035
      IF (.NOT.LO(217)) WRITE (MW,1000) I1,VAR(IVAR),AA(1,1),AA(1,2)    ROTM-036
    1 AA(2,1)=AA(1,1)                                                   ROTM-037
      AA(2,2)=AA(1,2)                                                   ROTM-038
      DO 23 I2=I1,NCOLL                                                 ROTM-039
      IA2=IPI(3,I2)-1                                                   ROTM-040
      IF (I1.EQ.I2) GO TO 2                                             ROTM-041
      AA(2,1)=1.D0                                                      ROTM-042
      AA(2,2)=0.D0                                                      ROTM-043
      IF (IPH(1,I2).LE.1) GO TO 2                                       ROTM-044
      IVAR=IPH(2,I2)                                                    ROTM-045
      JVAR=NVAR(2,IVAR)                                                 ROTM-046
      IF (JVAR.GT.NVA) GO TO 25                                         ROTM-047
      AY=1.74532925D-02*VAR(JVAR)                                       ROTM-048
      AA(2,1)=DCOS(AY)                                                  ROTM-049
      AA(2,2)=DSIN(AY)                                                  ROTM-050
    2 NIV(I1,I2,1)=IT                                                   ROTM-051
      L1=IPH(1,I1)                                                      ROTM-052
      AX=AA(1,1)                                                        ROTM-053
      IF (L1.GT.1) L1=0                                                 ROTM-054
      IF (DABS(AX).LT.1.D-6) GO TO 12                                   ROTM-055
    3 L2=IPH(1,I2)                                                      ROTM-056
      IF (L2.GT.1) L2=0                                                 ROTM-057
      AY=AX*AA(2,1)                                                     ROTM-058
      IF (DABS(AY).LT.1.D-6) GO TO 11                                   ROTM-059
    4 IF (L1.NE.L2) GO TO 7                                             ROTM-060
      NSJ=NSPIN                                                         ROTM-061
      IF (L1.EQ.0) GO TO 5                                              ROTM-062
      N3=IPH(2,I1)                                                      ROTM-063
      IF (N3.NE.IPH(2,I2)) GO TO 11                                     ROTM-064
      NSJ=2*NBTA(18,N3)+NSJ                                             ROTM-065
    5 IF (IPI(1,I1).NE.IPI(1,I2)) GO TO 26                              ROTM-066
      IF ((IABS(NSJ).GT.IA2).OR.(IABS(NSJ).GT.IA1)) GO TO 27            ROTM-067
      IQ1=MIN0(IQMAX,(IA1+IA2)/2)                                       ROTM-068
      IQ2=MAX0(2,IABS(IA1-IA2)/2)                                       ROTM-069
      IF (2*(IQ2/2).NE.IQ2) IQ2=IQ2+1                                   ROTM-070
      IF (IQ2.GT.IQ1) GO TO 11                                          ROTM-071
      DO 6 IQZ=IQ2,IQ1,2                                                ROTM-072
      IF (2*IT.GT.IDT) CALL MEMO('ROTM',IDT,2*IT,2)                     ROTM-073
      IQ(1,IT)=1000*(IQZ+1)                                             ROTM-074
      IQ(2,IT)=IQZ                                                      ROTM-075
      IQ(3,IT)=NSP                                                      ROTM-076
      T(3,IT)=DFLOAT(1-MOD(IQZ,4))*DSQRT(IA1+1.D0)*DJCG(IA1,2*IQZ,IA2,NSROTM-077
     1J,0,FAC,NFA)*AY                                                   ROTM-078
      IF (DABS(T(3,IT)).GT.1.D-6) IT=IT+1                               ROTM-079
    6 CONTINUE                                                          ROTM-080
      GO TO 11                                                          ROTM-081
    7 IF (L1.GT.L2) GO TO 8                                             ROTM-082
      N3=IPH(2,I2)                                                      ROTM-083
      GO TO 9                                                           ROTM-084
C  TRANSPOSITION                                                        ROTM-085
    8 AY=AY*DFLOAT(1-MOD(IPI(3,I1)+IPI(3,I2)+2*(IPI(1,I1)+IPI(1,I2)+1),4ROTM-086
     1))                                                                ROTM-087
      N3=IPH(2,I1)                                                      ROTM-088
C 0 PHONONS -1 PHONON                                                   ROTM-089
    9 NSJ=2*NBTA(18,N3)                                                 ROTM-090
      IF (MOD(IPI(1,I1)+IPI(1,I2)+NBTA(17,N3),2).NE.0) GO TO 28         ROTM-091
      IF (IABS(NSJ+NSPIN).GT.IA2) GO TO 27                              ROTM-092
      IQ1=(IA1+IA2)/2                                                   ROTM-093
      IQ2=MAX0(IABS(NSJ),IABS(IA1-IA2))/2                               ROTM-094
      IF (MOD(IQ2+NBTA(17,N3),2).NE.0) IQ2=IQ2+1                        ROTM-095
      IF (IQ2.GT.IQ1) GO TO 11                                          ROTM-096
      DO 10 IQZ=IQ2,IQ1,2                                               ROTM-097
      IF (3*IT.GT.IDT) CALL MEMO('ROTM',IDT,3*IT,2)                     ROTM-098
      IQ(1,IT)=1000*(IQZ+1)+N3                                          ROTM-099
      IQ(2,IT)=IQZ                                                      ROTM-100
      IQ(3,IT)=NSP                                                      ROTM-101
      T(3,IT)=DFLOAT(1-MOD(IQZ+IPI(1,I1)+IPI(1,I2),4))*DSQRT(IA1+1.D0)*DROTM-102
     1JCG(IA1,2*IQZ,IA2,NSPIN,NSJ,FAC,NFA)*AY                           ROTM-103
      IF (DABS(T(3,IT)).GT.1.D-6) IT=IT+1                               ROTM-104
   10 CONTINUE                                                          ROTM-105
   11 IF ((AA(2,2).EQ.0.D0).OR.(L2.EQ.1)) GO TO 12                      ROTM-106
      L2=1                                                              ROTM-107
      AY=AX*AA(2,2)                                                     ROTM-108
      GO TO 4                                                           ROTM-109
   12 IF ((AA(1,2).EQ.0.D0).OR.(L1.EQ.1)) GO TO 13                      ROTM-110
      L1=1                                                              ROTM-111
      AX=AA(1,2)                                                        ROTM-112
      GO TO 3                                                           ROTM-113
   13 ITI=NIV(I1,I2,1)                                                  ROTM-114
      IF (ITI.EQ.IT) GO TO 22                                           ROTM-115
      ITF=IT-1                                                          ROTM-116
      IF (ITF.EQ.ITI) GO TO 17                                          ROTM-117
      IT1=ITI+1                                                         ROTM-118
      IT=ITI                                                            ROTM-119
      DO 16 I=IT1,ITF                                                   ROTM-120
      DO 14 J=ITI,IT                                                    ROTM-121
      IF ((IQ(1,I).NE.IQ(1,J)).OR.(IQ(2,I).NE.IQ(2,J)).OR.(IQ(3,I).NE.IQROTM-122
     1(3,J))) GO TO 14                                                  ROTM-123
      T(3,J)=T(3,J)+T(3,I)                                              ROTM-124
      GO TO 16                                                          ROTM-125
   14 CONTINUE                                                          ROTM-126
      IT=IT+1                                                           ROTM-127
      DO 15 K=1,3                                                       ROTM-128
   15 IQ(K,IT)=IQ(K,I)                                                  ROTM-129
      T(3,IT)=T(3,I)                                                    ROTM-130
   16 CONTINUE                                                          ROTM-131
      IT=IT+1                                                           ROTM-132
   17 ITF=IT-1                                                          ROTM-133
      DO 21 I=ITI,ITF                                                   ROTM-134
      IF (IT.LE.I) GO TO 22                                             ROTM-135
   18 IF (DABS(T(3,I)).GT.1.D-12) GO TO 21                              ROTM-136
      IT1=I+1                                                           ROTM-137
      IT=IT-1                                                           ROTM-138
      IF (IT1.GT.IT) GO TO 22                                           ROTM-139
      DO 20 J=IT1,IT                                                    ROTM-140
      DO 19 K=1,3                                                       ROTM-141
   19 IQ(K,J-1)=IQ(K,J)                                                 ROTM-142
   20 T(3,J-1)=T(3,J)                                                   ROTM-143
      GO TO 18                                                          ROTM-144
   21 CONTINUE                                                          ROTM-145
   22 NIV(I1,I2,2)=IT-1                                                 ROTM-146
   23 CONTINUE                                                          ROTM-147
   24 CONTINUE                                                          ROTM-148
      IT=IT-1                                                           ROTM-149
      RETURN                                                            ROTM-150
   25 WRITE (MW,1001) JVAR,NVA                                          ROTM-151
      GO TO 29                                                          ROTM-152
   26 WRITE (MW,1002) I1,I2                                             ROTM-153
      GO TO 29                                                          ROTM-154
   27 WRITE (MW,1003) I1,I2                                             ROTM-155
      GO TO 29                                                          ROTM-156
   28 WRITE (MW,1004) I1,I2,N3                                          ROTM-157
      GO TO 29                                                          ROTM-158
   29 WRITE (MW,1005)                                                   ROTM-159
      STOP                                                              ROTM-160
 1000 FORMAT (' STATE',I4,F15.5,' DEGREES      AMPLITUDES =',F15.7,' GROROTM-161
     1UND STATE BAND AND',F15.5,' VIBRATIONAL BAND')                    ROTM-162
 1001 FORMAT (' NUMBER OF VARIABLES USED:',I5,5X,'EXCEEDS NUMBER OF VARIROTM-163
     2ABLES READ:',I6)                                                  ROTM-164
 1002 FORMAT (/' PARITIES OF STATES',I4,'  AND',I4,'  INCORRECT FOR THE ROTM-165
     1ROTATIONAL MODEL')                                                ROTM-166
 1003 FORMAT (' TOO LARGE MAGNETIC QUANTUM NUMBER BETWEEN LEVELS',I4,' AROTM-167
     1ND',I4)                                                           ROTM-168
 1004 FORMAT (/' PARITIES OF STATES',I4,'  AND',I4,'  INCORRECT FOR THE ROTM-169
     1ROTATIONAL MODEL WITH THE VIBRATION',I4)                          ROTM-170
 1005 FORMAT (//' IN ROTM  ... STOP ...')                               ROTM-171
      END                                                               ROTM-172
C 01/01/04                                                      ECIS03  ROAM-000
      SUBROUTINE ROAM(NIV,IQ,T,IPI,NCOLL,IT,BETA,IPH,VAR,VA,IQMAX,FAC,NFROAM-001
     1A,IDT,LO)                                                         ROAM-002
C NUCLEAR REDUCED MATRIX ELEMENTS FOR THE ASYMMETRIC ROTATIONAL MODEL   ROAM-003
C THE CONTROL NUMBER FOR FORM FACTOR (L=2,K=0) IS 2,FOR (L=2,K=2) IS 3, ROAM-004
C    FOR (L=4,K=0) IS 4,FOR (L=4,K=2) IS 2  ... AND SO ON...            ROAM-005
C FOR ARGUMENTS NIV TO IT AND FAC TO LO    SEE REDM                     ROAM-006
C SPECIAL INPUT: BETA:  DEFORMATIONS.THE GAMMA PARAMETER BETA(*,2) IS   ROAM-007
C                       RELATED TO THE BAND MIXING PARAM. IF LO(2)=.TRUEROAM-008
C                IPH(I,2):NUMBER OF NUCLEAR PARAMETERS IN IPH(I,1)      ROAM-009
C                       THEIR ADDRESS IN IPH(I,2)                       ROAM-010
C                VAR:   BAND MIXING COEFFICIENTS                        ROAM-011
C                VA:    WORKING SPACE FOR AMPLITUDES (PERMANENT)        ROAM-012
C                IQMAX: MAXIMUM ORDER OF MULTIPOLE EXPANSION            ROAM-013
C                                                                       ROAM-014
C  (IP||Q(IQ,KQ)||I) = SQRT(2*I+1) *CG(I,IQ,IP,K,KQ,KP)                 ROAM-015
C***********************************************************************ROAM-016
      IMPLICIT REAL*8 (A-H,O-Z)                                         ROAM-017
      LOGICAL LO(250)                                                   ROAM-018
      DIMENSION IQ(6,1),T(3,1),IPI(11,1),VAR(1),BETA(9,3),NIV(NCOLL,NCOLROAM-019
     1L,2),FAC(1),VA(5),IPH(2,NCOLL)                                    ROAM-020
      COMMON /INOUT/ MR,MW,MS                                           ROAM-021
      IVAR=0                                                            ROAM-022
      I2=1                                                              ROAM-023
      IF (LO(102)) GO TO 4                                              ROAM-024
C VAR(1) IS THE ANGLE GAMMA OF DAVYDOV AND FILIPPOV MODEL               ROAM-025
C THE SECOND LEVEL MUST BE A THE FIRST 2+ AND THE THIRD ONE,IF PRESENT, ROAM-026
C THE SECOND 2+ .THEIR MIXING COEFFICIENTS ARE COMPUTED FROM VAR(1).    ROAM-027
C THERE CAN BE ANY NUMBER OF LEVELS AFTER THE THIRD ONE.                ROAM-028
      G=VAR(1)-BETA(1,2)                                                ROAM-029
      IF (.NOT.LO(216)) WRITE (MW,1000) G,(BETA(I,2),I=1,8)             ROAM-030
      DO 1 I=1,8                                                        ROAM-031
    1 BETA(I,2)=BETA(I,2)+G                                             ROAM-032
      IF (.NOT.LO(216)) WRITE (MW,1001) (BETA(I,2),I=1,8)               ROAM-033
      G=0.0174532925199433D0*VAR(1)                                     ROAM-034
      G1=DSIN(G)                                                        ROAM-035
      G2=DCOS(G)                                                        ROAM-036
      G3=DSIN(3.D0*G)                                                   ROAM-037
      G4=DCOS(3.D0*G)                                                   ROAM-038
      G=DSQRT(9.D0-8.D0*G3*G3)                                          ROAM-039
      G5=-(G1*G3+3.D0*G2*G4+G)                                          ROAM-040
      G6=3.D0*G1*G4-G2*G3                                               ROAM-041
      VA(1)=1.D0                                                        ROAM-042
      IF (NCOLL.EQ.1) GO TO 2                                           ROAM-043
      G=DSQRT(G6*G6+G5*G5)                                              ROAM-044
      VA(2)=G5/G                                                        ROAM-045
      VA(3)=G6/G                                                        ROAM-046
      IF (NCOLL.EQ.2) GO TO 2                                           ROAM-047
      VA(4)=-VA(3)                                                      ROAM-048
      VA(5)=VA(2)                                                       ROAM-049
    2 I2=MIN0(NCOLL,3)                                                  ROAM-050
      DO 3 I1=1,I2                                                      ROAM-051
      IF (I1.EQ.1.AND.IPI(3,I1).NE.1) GO TO 14                          ROAM-052
      IF (I1.EQ.1) GO TO 3                                              ROAM-053
      IF (IPI(3,I1).NE.5) GO TO 14                                      ROAM-054
      IF (.NOT.LO(216)) WRITE (MW,1002) I1,VA(2*I1-2),VA(2*I1-1)        ROAM-055
    3 CONTINUE                                                          ROAM-056
      IVAR=I2-1                                                         ROAM-057
      I2=4                                                              ROAM-058
      IF (I2.GT.NCOLL) GO TO 7                                          ROAM-059
C LEVELS NOT RELATED TO THE GAMMA DEFORMATION                           ROAM-060
    4 DO 6 I1=I2,NCOLL                                                  ROAM-061
      IF (IPI(3,I1).EQ.3) GO TO 16                                      ROAM-062
      IVAR=IPH(2,I1)                                                    ROAM-063
      IF (MOD(IPI(3,I1),4).NE.1) VAR(IVAR+1)=90.D0                      ROAM-064
      K1=IVAR+I1                                                        ROAM-065
      VA(K1)=1.D0                                                       ROAM-066
      IF (IPH(1,I1).EQ.0) GO TO 6                                       ROAM-067
      K2=K1+IPH(1,I1)-1                                                 ROAM-068
      DO 5 K=K1,K2                                                      ROAM-069
      IVAR=IVAR+1                                                       ROAM-070
      G=0.0174532925199433D0*VAR(IVAR)                                  ROAM-071
      VA(K+1)=VA(K)*DSIN(G)                                             ROAM-072
    5 VA(K)=VA(K)*DCOS(G)                                               ROAM-073
      IF (.NOT.LO(216)) WRITE (MW,1002) I1,(VA(K),K=K1,K2),VA(K2+1)     ROAM-074
    6 CONTINUE                                                          ROAM-075
C COMPUTATION OF RED. MAT. ELE. FOR I=/<IP AT THE FIRST CALL            ROAM-076
    7 IT=1                                                              ROAM-077
      NSP=0                                                             ROAM-078
      IF (LO(13).OR.LO(19)) NSP=10                                      ROAM-079
      DO 13 I1=1,NCOLL                                                  ROAM-080
      NT=IPH(1,I1)+1                                                    ROAM-081
      NV=IPH(2,I1)+I1-1                                                 ROAM-082
      IA1=IPI(3,I1)-1                                                   ROAM-083
      NX=IA1/2-2*(IA1/4)                                                ROAM-084
      DO 12 I2=I1,NCOLL                                                 ROAM-085
      IF (IPI(1,I1).NE.IPI(1,I2)) GO TO 15                              ROAM-086
      NIV(I1,I2,1)=IT                                                   ROAM-087
      MT=IPH(1,I2)+1                                                    ROAM-088
      MV=IPH(2,I2)+I2-1                                                 ROAM-089
      IA2=IPI(3,I2)-1                                                   ROAM-090
      MX=IA2/2-2*(IA2/4)                                                ROAM-091
      IQ1=MIN0(IQMAX,(IA1+IA2)/2,8)                                     ROAM-092
      IQ2=MAX0(2,2*((IABS(IA1-IA2)/2+1)/2))                             ROAM-093
      IF (IQ2.GT.IQ1) GO TO 11                                          ROAM-094
C COMPUTATION OF REDUCED MATRIX ELEMENTS                                ROAM-095
      DO 10 IQZ=IQ2,IQ1,2                                               ROAM-096
      FS=DFLOAT(IQZ-4*((IQZ+2)/4)+1)                                    ROAM-097
      IQY=IQZ/2+1                                                       ROAM-098
      DO 9 MQZ=1,IQY                                                    ROAM-099
      IF (2*IT.GT.IDT) CALL MEMO('ROAM',IDT,2*IT,2)                     ROAM-100
      IQ(1,IT)=1000*((IQY*(IQY-1))/2+MQZ)                               ROAM-101
      B=0.D0                                                            ROAM-102
      IQ(2,IT)=IQZ                                                      ROAM-103
      IQ(3,IT)=NSP                                                      ROAM-104
      MQ=2*MQZ-2                                                        ROAM-105
      DO 8 N1=1,NT                                                      ROAM-106
      IF (N1-NX.EQ.0) GO TO 8                                           ROAM-107
      N=2*N1-2                                                          ROAM-108
      LM=N-MQ                                                           ROAM-109
      IF (IABS(LM).GE.2*MT) GO TO 8                                     ROAM-110
      L1=1+IABS(LM)/2                                                   ROAM-111
      FQ=DJCG(IA1,2*IQZ,IA2,2*N,-2*MQ,FAC,NFA)*VA(NV+N1)*VA(MV+L1)      ROAM-112
      IF (LM.LT.0.AND.MX.EQ.1) FQ=-FQ                                   ROAM-113
      IF (MQ*N*LM.NE.0) FQ=.7071068D0*FQ                                ROAM-114
      B=B+FQ                                                            ROAM-115
      IF (N*MQ.EQ.0) GO TO 8                                            ROAM-116
      LM=MQ+N                                                           ROAM-117
      IF (LM.GE.2*MT) GO TO 8                                           ROAM-118
      L1=1+LM/2                                                         ROAM-119
      FQ=DJCG(IA1,2*IQZ,IA2,2*N,2*MQ,FAC,NFA)*VA(NV+N1)*VA(MV+L1)       ROAM-120
      IF (MQ*N*LM.NE.0) FQ=.7071068D0*FQ                                ROAM-121
      B=B+FQ                                                            ROAM-122
    8 CONTINUE                                                          ROAM-123
      IF (MQ.NE.0) B=.7071068D0*B                                       ROAM-124
      T(3,IT)=DSQRT(DFLOAT(IA1+1))*B*FS                                 ROAM-125
      IF (DABS(T(3,IT)).GT.1.D-6) IT=IT+1                               ROAM-126
    9 CONTINUE                                                          ROAM-127
   10 CONTINUE                                                          ROAM-128
   11 NIV(I1,I2,2)=IT-1                                                 ROAM-129
   12 CONTINUE                                                          ROAM-130
   13 CONTINUE                                                          ROAM-131
      IT=IT-1                                                           ROAM-132
      RETURN                                                            ROAM-133
   14 WRITE (MW,1003)                                                   ROAM-134
      GO TO 17                                                          ROAM-135
   15 WRITE (MW,1004) I1,I2                                             ROAM-136
      GO TO 17                                                          ROAM-137
   16 WRITE (MW,1005)                                                   ROAM-138
   17 WRITE (MW,1006)                                                   ROAM-139
      STOP                                                              ROAM-140
 1000 FORMAT (/' FOR CONSTRAINED ASYMMETRIC ROTATIONAL MODEL THE BETA(I,ROAM-141
     12) ARE INCREASED BY',F10.5//23X,'V',9X,'W',8X,'VS',8X,'WS',7X,'VSOROAM-142
     2',7X,'WSO',6X,'COUL S.O. COUL'/' INITIAL VALUES ',8F10.5)         ROAM-143
 1001 FORMAT (' MODIFIED VALUES',8F10.5)                                ROAM-144
 1002 FORMAT (/' BAND MIXING COEFFICIENTS FOR THE LEVEL',I4/(6D20.7))   ROAM-145
 1003 FORMAT (/' LEVEL ORDER INCORRECT FOR LINK BETWEEN DEFORMATION AND ROAM-146
     1BAND MIXING'/' USE 0+-2+-2+ AND THEN THE OTHER LEVELS')           ROAM-147
 1004 FORMAT (/' PARITIES OF STATES',I4,'  AND',I4,'  INCORRECT FOR THE ROAM-148
     1ROTATIONAL MODEL')                                                ROAM-149
 1005 FORMAT (/' NO SPIN-1 STATE IN THIS MODEL')                        ROAM-150
 1006 FORMAT (//' IN ROAM  ... STOP ...')                               ROAM-151
      END                                                               ROAM-152
C 01/01/04                                                      ECIS03  DJCG-000
      FUNCTION DJCG(J1,J2,J3,M1,M2,FAC,NFA)                             DJCG-001
C CLEBSCH-GORDAN COEFFICIENTS ( J1  J2  M1  M2 | J3  M1+M2 )            DJCG-002
C THE ARGUMENTS J1,J2,J3,M1 AND M2 ARE INTEGER DOUBLED VALUES           DJCG-003
C FAC IS A TABLE OF LOGARITHM OF FACTORIALS AND NFA ITS LENGTH.         DJCG-004
C***********************************************************************DJCG-005
      IMPLICIT REAL*8(A-F)                                              DJCG-006
      DIMENSION FAC(1)                                                  DJCG-007
      COMMON /INOUT/ MR,MW,MS                                           DJCG-008
      DJCG=0.D0                                                         DJCG-009
      M3=M1+M2                                                          DJCG-010
      IF (J1+J2+J3.GT.2*NFA) GO TO 18                                   DJCG-011
      IF ((J1.LT.0).OR.(J2.LT.0).OR.(J3.LT.0)) GO TO 16                 DJCG-012
      IY1=J1+M1+2                                                       DJCG-013
      IX1=IY1/2                                                         DJCG-014
      IY2=J2+M2+2                                                       DJCG-015
      IX2=IY2/2                                                         DJCG-016
      IY3=J3-M3+2                                                       DJCG-017
      IX3=IY3/2                                                         DJCG-018
      IF ((IX1.LE.0).OR.(IX2.LE.0).OR.(IX3.LE.0)) RETURN                DJCG-019
      IF ((2*IX1.NE.IY1).OR.(2*IX2.NE.IY2).OR.(2*IX3.NE.IY3)) GO TO 17  DJCG-020
      IY1=IX1-M1                                                        DJCG-021
      IY2=IX2-M2                                                        DJCG-022
      IY3=IX3+M3                                                        DJCG-023
      IF ((IY1.LE.0).OR.(IY2.LE.0).OR.(IY3.LE.0)) RETURN                DJCG-024
C AT THIS POINT IX1,IX2,IX3 ARE TWICE J+M AND IY1,IY2,IY3 TWICE J-M     DJCG-025
C SEARCH FOR A ZERO ARGUMENT                                            DJCG-026
      IF (J3.EQ.0) GO TO 4                                              DJCG-027
      IF ((J1.EQ.0).OR.(J2.EQ.0)) GO TO 5                               DJCG-028
      IF (M3.EQ.0) GO TO 6                                              DJCG-029
      IF (M2.EQ.0) GO TO 7                                              DJCG-030
      IF (M1.EQ.0) GO TO 8                                              DJCG-031
C GENERAL CASE                                                          DJCG-032
    1 NX=IX1+IX2+IX3                                                    DJCG-033
      IZ1=NX-IX1-IY1                                                    DJCG-034
      IZ2=NX-IX2-IY2                                                    DJCG-035
      IZ3=NX-IX3-IY3                                                    DJCG-036
      IF ((IZ1.LE.0).OR.(IZ2.LE.0).OR.(IZ3.LE.0)) RETURN                DJCG-037
      NXY=NX-1                                                          DJCG-038
      I1=IX2-IY3                                                        DJCG-039
      I2=IY1-IX3                                                        DJCG-040
C K1 AND K2 ARE THE LIMITS OF THE SUM                                   DJCG-041
C M1,M2,M3,K1,K3,K4 HAVE THEIR FACTORIALS IN THE DENOMINATOR            DJCG-042
C NXY=J1+J2+J3+1      IZ1,IZ2,IZ3  ARE J1+J2-J3                         DJCG-043
      K1=MAX0(I1,I2,0)+1                                                DJCG-044
      K2=MIN0(IY1,IX2,IZ3)                                              DJCG-045
      K3=K1-I1                                                          DJCG-046
      K4=K1-I2                                                          DJCG-047
      N1=IY1-K1+1                                                       DJCG-048
      N2=IX2-K1+1                                                       DJCG-049
      N3=IZ3-K1+1                                                       DJCG-050
      DJCG=DEXP(0.5D0*(FAC(IX3+IY3)-FAC(IX3+IY3-1)-FAC(NXY)+FAC(IZ1)+FACDJCG-051
     1(IZ2)+FAC(IZ3)+FAC(IX1)+FAC(IX2)+FAC(IX3)+FAC(IY1)+FAC(IY2)+FAC(IYDJCG-052
     23))-FAC(N1)-FAC(N2)-FAC(N3)-FAC(K1)-FAC(K3)-FAC(K4))              DJCG-053
      IF (2*(K1/2).EQ.K1) DJCG=-DJCG                                    DJCG-054
      IF (K1.EQ.K2) GO TO 3                                             DJCG-055
      A4=DJCG                                                           DJCG-056
      K=K2-K1                                                           DJCG-057
      K3=K2-I1                                                          DJCG-058
      K4=K2-I2                                                          DJCG-059
      N1=IY1-K2                                                         DJCG-060
      N2=IX2-K2                                                         DJCG-061
      N3=IZ3-K2                                                         DJCG-062
C K2,K3,K4,N1,N2,N3 ARE THE ARGUMENTS OF THE FACTORIALS IN THE LAST TERMDJCG-063
      DO 2 I=1,K                                                        DJCG-064
      A1=DFLOAT((K2-I)*(K3-I)*(K4-I))                                   DJCG-065
      A2=DFLOAT((N1+I)*(N2+I)*(N3+I))                                   DJCG-066
    2 DJCG=A4-DJCG*A2/A1                                                DJCG-067
    3 RETURN                                                            DJCG-068
C J1,J2 OR J3  IS ZERO                                                  DJCG-069
    4 IF (J1.NE.J2) RETURN                                              DJCG-070
      A1=DFLOAT(J1+1)                                                   DJCG-071
      DJCG=1.D0/DSQRT(A1)                                               DJCG-072
      IF (MOD(IY1,2).EQ.0) DJCG=-DJCG                                   DJCG-073
      RETURN                                                            DJCG-074
    5 IF (J1+J2.NE.J3) RETURN                                           DJCG-075
      DJCG=1.D0                                                         DJCG-076
      RETURN                                                            DJCG-077
C M1,M2 OR M3 IS ZERO; IF THE OTHERS M ARE LARGER THAN 1/2,GENERAL CASE DJCG-078
    6 IF (IABS(M1)-1) 9 , 10 , 1                                        DJCG-079
    7 IF (IABS(M1).GT.1) GO TO 1                                        DJCG-080
      GO TO 11                                                          DJCG-081
    8 IF (IABS(M3).GT.1) GO TO 1                                        DJCG-082
      GO TO 12                                                          DJCG-083
C ALL THE M ARE ZEROS                                                   DJCG-084
    9 N5=IX1+IX2+IX3-1                                                  DJCG-085
      IF (2*(N5/2).NE.N5) RETURN                                        DJCG-086
      N2=IX1+IX2-IX3                                                    DJCG-087
      N3=IX2+IX3-IX1                                                    DJCG-088
      N4=IX3+IX1-IX2                                                    DJCG-089
      A1=FAC(2*IX3)-FAC(2*IX3-1)                                        DJCG-090
      KC=1                                                              DJCG-091
      GO TO 14                                                          DJCG-092
C ONE M IS ZERO AND THE OTHERS +-1/2  FORMULA OF DCGS                   DJCG-093
   10 IQ=IX3-1                                                          DJCG-094
      IZ1=IX1+IX2-2                                                     DJCG-095
      IZ2=IX1-IY2                                                       DJCG-096
      LZ1=J1                                                            DJCG-097
      LZ2=J2                                                            DJCG-098
      LW2=M2                                                            DJCG-099
      LW1=IY1                                                           DJCG-100
      GO TO 13                                                          DJCG-101
   11 IQ=IX2-1                                                          DJCG-102
      IZ1=IX1+IX3-2                                                     DJCG-103
      IZ2=IX3-IY1                                                       DJCG-104
      LZ1=J1                                                            DJCG-105
      LZ2=J3                                                            DJCG-106
      LW2=M1                                                            DJCG-107
      LW1=IY3                                                           DJCG-108
      GO TO 13                                                          DJCG-109
   12 IQ=IX1-1                                                          DJCG-110
      IZ1=IX2+IX3-2                                                     DJCG-111
      IZ2=IX2-IY3                                                       DJCG-112
      LZ1=J2                                                            DJCG-113
      LZ2=J3                                                            DJCG-114
      LW2=-M3                                                           DJCG-115
      LW1=IY2                                                           DJCG-116
   13 N2=IZ1-IQ+1                                                       DJCG-117
      N3=IQ+IZ2+1                                                       DJCG-118
      N4=IQ-IZ2+1                                                       DJCG-119
      IF (N2.LT.1.OR.N3.LT.1.OR.N4.LT.1) RETURN                         DJCG-120
      N5=IZ1+IQ+2                                                       DJCG-121
      A1=FAC(J3+2)-FAC(J3+1)-FAC(LZ1+2)+FAC(LZ1+1)-FAC(LZ2+2)+FAC(LZ2+1)DJCG-122
      KC=2                                                              DJCG-123
C SIMPLE FORMULA                                                        DJCG-124
   14 IF (N5-1.GT.NFA) GO TO 18                                         DJCG-125
      L1=(N5+1)/2                                                       DJCG-126
      L2=(N2+1)/2                                                       DJCG-127
      L3=(N3+1)/2                                                       DJCG-128
      L4=(N4+1)/2                                                       DJCG-129
      DJCG=DEXP(0.5D0*(A1+FAC(N2)+FAC(N3)+FAC(N4)-FAC(N5))+FAC(L1)-FAC(LDJCG-130
     12)-FAC(L3)-FAC(L4))                                               DJCG-131
      IF (KC.EQ.2) GO TO 15                                             DJCG-132
      IF (MOD(L1+IX1-IX2,2).EQ.0) DJCG=-DJCG                            DJCG-133
      RETURN                                                            DJCG-134
   15 IF (LW2.GT.0) L4=L4+N5+1                                          DJCG-135
      DJCG=2.D0*DJCG                                                    DJCG-136
      IF (MOD(L4+LW1+IX1-IY2,2).NE.0) DJCG=-DJCG                        DJCG-137
      RETURN                                                            DJCG-138
   16 WRITE (MW,1000)                                                   DJCG-139
      RETURN                                                            DJCG-140
   17 WRITE (MW,1001)                                                   DJCG-141
      RETURN                                                            DJCG-142
   18 WRITE (MW,1002)                                                   DJCG-143
      RETURN                                                            DJCG-144
 1000 FORMAT (' NEGATIVE ANGULAR MOMENTUM IN DJCG')                     DJCG-145
 1001 FORMAT (' INTEGER/HALF-INTEGER RULE BETWEEN QUANTUM NUMBERS TRANSGDJCG-146
     1RESSED IN DJCG')                                                  DJCG-147
 1002 FORMAT (' FACTORIAL TOO LARGE IN DJCG')                           DJCG-148
      END                                                               DJCG-149
C 01/01/04                                                      ECIS03  DJ6J-000
      FUNCTION DJ6J(J1,J2,J3,J4,J5,J6,FAC,NFA)                          DJ6J-001
C                       ( J1  J2  J3 )                                  DJ6J-002
C 6-J COEFFICIENTS      )            (                                  DJ6J-003
C                       ( J4  J5  J6 )                                  DJ6J-004
C THE ARGUMENTS J1,J2,J3,J4,J5 AND J6 ARE INTEGER DOUBLED VALUES        DJ6J-005
C FAC IS A TABLE OF LOGARITHM OF FACTORIALS AND NFA ITS LENGTH.         DJ6J-006
C***********************************************************************DJ6J-007
      IMPLICIT REAL*8(A-F)                                              DJ6J-008
      DIMENSION IX(6),IA(3,4),IY(4),FAC(1)                              DJ6J-009
      COMMON /INOUT/ MR,MW,MS                                           DJ6J-010
      DATA IA /1,2,3,1,5,6,4,2,6,4,5,3/                                 DJ6J-011
      DJ6J=0.D0                                                         DJ6J-012
      IX(1)=J1                                                          DJ6J-013
      IX(2)=J2                                                          DJ6J-014
      IX(3)=J3                                                          DJ6J-015
      IX(4)=J4                                                          DJ6J-016
      IX(5)=J5                                                          DJ6J-017
      IX(6)=J6                                                          DJ6J-018
C  THE ARGUMENTS MULTIPLIED BY 2 ARE IN THE TABLE IX                    DJ6J-019
C SEARCH FOR A ZERO ARGUMENT                                            DJ6J-020
      DO 1 I=1,6                                                        DJ6J-021
      IF (IX(I).LT.0) GO TO 14                                          DJ6J-022
      IF (IX(I).EQ.0) GO TO ( 5 , 6 , 7 , 8 , 9, 10 ),I                 DJ6J-023
    1 CONTINUE                                                          DJ6J-024
C GENERAL CASE                                                          DJ6J-025
C CHECK OF THE TRIANGULAR RELATIONS AND COMPUTATION OF DELTA            DJ6J-026
      DO 2 K=1,4                                                        DJ6J-027
      IZ1=IA(1,K)                                                       DJ6J-028
      IZ2=IA(2,K)                                                       DJ6J-029
      IZ3=IA(3,K)                                                       DJ6J-030
      IX1=IX(IZ1)                                                       DJ6J-031
      IX2=IX(IZ2)                                                       DJ6J-032
      IX3=IX(IZ3)                                                       DJ6J-033
      N=IX1+IX2+IX3+2                                                   DJ6J-034
      I1=N/2                                                            DJ6J-035
      IF (2*I1.NE.N) GO TO 12                                           DJ6J-036
      IF (I1.GT.NFA) GO TO 13                                           DJ6J-037
      N1=I1-IX3                                                         DJ6J-038
      N2=I1-IX2                                                         DJ6J-039
      N3=I1-IX1                                                         DJ6J-040
      IF ((I1.LE.0).OR.(N1.LE.0).OR.(N2.LE.0).OR.(N3.LE.0)) GO TO 15    DJ6J-041
      IY(K)=I1+1                                                        DJ6J-042
    2 DJ6J=DJ6J+FAC(N1)-FAC(I1+1)+FAC(N2)+FAC(N3)                       DJ6J-043
      N1=(IX(1)+IX(2)+IX(4)+IX(5))/2                                    DJ6J-044
      N2=(IX(1)+IX(3)+IX(4)+IX(6))/2                                    DJ6J-045
      N3=(IX(2)+IX(3)+IX(5)+IX(6))/2                                    DJ6J-046
C K1 AND K2 ARE THE LIMITS OF THE SUM                                   DJ6J-047
C K1,L1,L2,L3,L4,M1,M2,M3 ARE FOR THE FACTORIALS OF THE FIRST TERM      DJ6J-048
      K1=MAX0(IY(1),IY(2),IY(3),IY(4))                                  DJ6J-049
      K2=MIN0(N1,N2,N3)+2                                               DJ6J-050
      L1=K1-IY(1)+1                                                     DJ6J-051
      L2=K1-IY(2)+1                                                     DJ6J-052
      L3=K1-IY(3)+1                                                     DJ6J-053
      L4=K1-IY(4)+1                                                     DJ6J-054
      M1=N1-K1+3                                                        DJ6J-055
      M2=N2-K1+3                                                        DJ6J-056
      M3=N3-K1+3                                                        DJ6J-057
      DJ6J=DEXP(.5D0*DJ6J+FAC(K1)-FAC(L1)-FAC(L2)-FAC(L3)-FAC(L4)-FAC(M1DJ6J-058
     1)-FAC(M2)-FAC(M3))                                                DJ6J-059
      IF (2*(K1/2).NE.K1) DJ6J=-DJ6J                                    DJ6J-060
      IF (K2.EQ.K1) GO TO 4                                             DJ6J-061
      A2=DJ6J                                                           DJ6J-062
      K=K2-K1                                                           DJ6J-063
    3 A1=DFLOAT((M1-K)*(M2-K)*(M3-K))                                   DJ6J-064
      K=K-1                                                             DJ6J-065
      A3=DFLOAT((L1+K)*(L2+K)*(L3+K)*(L4+K))                            DJ6J-066
      DJ6J=A2-DFLOAT(K1+K)*A1*DJ6J/A3                                   DJ6J-067
      IF (K.GT.0) GO TO 3                                               DJ6J-068
    4 RETURN                                                            DJ6J-069
C ONE QUANTUM NUMBER IS ZERO;CHECK OF TRIANGULAR RELATIONS              DJ6J-070
    5 IF (IX(2).NE.IX(3).OR.IX(5).NE.IX(6)) GO TO 15                    DJ6J-071
      IX(6)=IX(4)                                                       DJ6J-072
      IX(1)=IX(2)                                                       DJ6J-073
      IX(4)=IX(5)                                                       DJ6J-074
      GO TO 11                                                          DJ6J-075
    6 IF (IX(1).NE.IX(3).OR.IX(4).NE.IX(6)) GO TO 15                    DJ6J-076
      IX(6)=IX(5)                                                       DJ6J-077
      GO TO 11                                                          DJ6J-078
    7 IF (IX(1).NE.IX(2).OR.IX(4).NE.IX(5)) GO TO 15                    DJ6J-079
      IF (IX(4).NE.IX(5)) GO TO 15                                      DJ6J-080
      GO TO 11                                                          DJ6J-081
    8 IF (IX(2).NE.IX(6).OR.IX(3).NE.IX(5)) GO TO 15                    DJ6J-082
      IX(6)=IX(1)                                                       DJ6J-083
      IX(1)=IX(5)                                                       DJ6J-084
      IX(4)=IX(2)                                                       DJ6J-085
      GO TO 11                                                          DJ6J-086
    9 IF (IX(1).NE.IX(6).OR.IX(3).NE.IX(4)) GO TO 15                    DJ6J-087
      IX(6)=IX(2)                                                       DJ6J-088
      GO TO 11                                                          DJ6J-089
   10 IF (IX(1).NE.IX(5).OR.IX(2).NE.IX(4)) GO TO 15                    DJ6J-090
      IX(6)=IX(3)                                                       DJ6J-091
C VALUE OF THE 6-J COEFFICIENT WITH AN ARGUMENT ZERO                    DJ6J-092
   11 IF (MIN0(IX(1),IX(4),IX(6)).LT.0) GO TO 14                        DJ6J-093
      IF (IX(6).GT.IX(1)+IX(4).OR.IX(6).LT.IABS(IX(1)-IX(4))) GO TO 15  DJ6J-094
      IF (MAX0(IX(1),IX(4)).GT.NFA) GO TO 13                            DJ6J-095
      K=IX(1)+IX(4)+IX(6)                                               DJ6J-096
      N=K/2                                                             DJ6J-097
      IF (2*N.NE.K) GO TO 12                                            DJ6J-098
      DJ6J=DFLOAT(1-2*MOD(N,2))/DSQRT(DFLOAT((IX(1)+1)*(IX(4)+1)))      DJ6J-099
      RETURN                                                            DJ6J-100
   12 WRITE (MW,1000)                                                   DJ6J-101
      GO TO 15                                                          DJ6J-102
   13 WRITE (MW,1001)                                                   DJ6J-103
      GO TO 15                                                          DJ6J-104
   14 WRITE (MW,1002)                                                   DJ6J-105
   15 DJ6J=0.D0                                                         DJ6J-106
      RETURN                                                            DJ6J-107
 1000 FORMAT (' INTEGER/HALF-INTEGER RULE BETWEEN QUANTUM NUMBERS TRANSGDJ6J-108
     1RESSED IN DJ6J')                                                  DJ6J-109
 1001 FORMAT (' FACTORIAL TOO LARGE IN DJ6J')                           DJ6J-110
 1002 FORMAT (' NEGATIVE ANGULAR MOMENTUM IN DJ6J')                     DJ6J-111
      END                                                               DJ6J-112
C 01/01/04                                                      ECIS03  DJ9J-000
      FUNCTION DJ9J(J1,J2,J3,J4,J5,J6,J7,J8,J9,AA,ITO)                  DJ9J-001
C COMPUTATION OF                                                        DJ9J-002
C                                     | J1  J2  J3 |                    DJ9J-003
C                                     |            |                    DJ9J-004
C   9J(J1,J2,J3,J4,J5,J6,J7,J8,J9) =  | J4  J5  J6 |                    DJ9J-005
C                                     |            |                    DJ9J-006
C                                     | J7  J8  J9 |                    DJ9J-007
C                                                                       DJ9J-008
C THE ARGUMENTS ARE INTEGER DOUBLE VALUES                               DJ9J-009
C AA IS A WORKING SPACE AND ITO ITS LENGTH                              DJ9J-010
C***********************************************************************DJ9J-011
      IMPLICIT REAL*8 (A-F)                                             DJ9J-012
      DIMENSION AA(1),J(5),IX(9),JX(3,3),JS(3),JF(3),IA(5,3),IB(3)      DJ9J-013
      EQUIVALENCE (IX(1),JX(1,1)),(IB(1),IB1),(IB(2),IB2),(IB(3),IB3)   DJ9J-014
      COMMON /INOUT/ MR,MW,MS                                           DJ9J-015
      DATA IA /1,2,3,6,9,6,4,5,8,2,8,9,7,1,4/                           DJ9J-016
      DJ9J=0.D0                                                         DJ9J-017
      IX(1)=J1                                                          DJ9J-018
      IX(2)=J2                                                          DJ9J-019
      IX(3)=J3                                                          DJ9J-020
      IX(4)=J4                                                          DJ9J-021
      IX(5)=J5                                                          DJ9J-022
      IX(6)=J6                                                          DJ9J-023
      IX(7)=J7                                                          DJ9J-024
      IX(8)=J8                                                          DJ9J-025
      IX(9)=J9                                                          DJ9J-026
      DO 2 I=1,3                                                        DJ9J-027
      DO 1 K=1,3                                                        DJ9J-028
      IF (JX(K,I).LT.0) GO TO 13                                        DJ9J-029
    1 CONTINUE                                                          DJ9J-030
C CHECK OF TRIANGULAR RELATIONS                                         DJ9J-031
      IF (MOD(JX(1,I)+JX(2,I)+JX(3,I),2).NE.0.OR.MOD(JX(I,1)+JX(I,2)+JX(DJ9J-032
     1I,3),2).NE.0) GO TO 11                                            DJ9J-033
      IF (IABS(JX(1,I)-JX(2,I)).GT.JX(3,I).OR.JX(1,I)+JX(2,I).LT.JX(3,I)DJ9J-034
     1) RETURN                                                          DJ9J-035
      IF (IABS(JX(I,1)-JX(I,2)).GT.JX(I,3).OR.JX(I,1)+JX(I,2).LT.JX(I,3)DJ9J-036
     1) RETURN                                                          DJ9J-037
    2 CONTINUE                                                          DJ9J-038
C SEARCH OF THE CONFIGURATION FOR WHICH THE SUM ON PRODUCTS OF 6-J      DJ9J-039
C COEFFICIENTS IS THE SMALLEST ONE                                      DJ9J-040
      K1=MIN0(IX(3),IX(5),IX(7))                                        DJ9J-041
      K2=MIN0(IX(2),IX(4),IX(9))                                        DJ9J-042
      K3=MIN0(IX(1),IX(6),IX(8))                                        DJ9J-043
      KT=MAX0(K1,K2,K3)                                                 DJ9J-044
      IF (KT.EQ.K1) GO TO 6                                             DJ9J-045
      IF (K2.GT.K3) GO TO 4                                             DJ9J-046
      DO 3 I=1,3                                                        DJ9J-047
      II=IX(I)                                                          DJ9J-048
      IX(I)=IX(I+3)                                                     DJ9J-049
      IX(I+3)=IX(I+6)                                                   DJ9J-050
    3 IX(I+6)=II                                                        DJ9J-051
      GO TO 6                                                           DJ9J-052
    4 DO 5 I=1,3                                                        DJ9J-053
      II=IX(I+6)                                                        DJ9J-054
      IX(I+6)=IX(I+3)                                                   DJ9J-055
      IX(I+3)=IX(I)                                                     DJ9J-056
    5 IX(I)=II                                                          DJ9J-057
    6 DO 7 K=1,3                                                        DJ9J-058
      IA1=IA(1,K)                                                       DJ9J-059
      IA2=IA(2,K)                                                       DJ9J-060
      IA4=IA(4,K)                                                       DJ9J-061
      IA5=IA(5,K)                                                       DJ9J-062
      JS(K)=MAX0(IABS(IX(IA1)-IX(IA5)),IABS(IX(IA4)-IX(IA2)))+1         DJ9J-063
    7 JF(K)=MIN0(IX(IA1)+IX(IA5),IX(IA2)+IX(IA4))+1                     DJ9J-064
      KF=MIN0(JF(1),JF(2),JF(3))                                        DJ9J-065
      KT=2+(KF-MAX0(JS(1),JS(2),JS(3)))/2                               DJ9J-066
C LOOP ON THE THREE 6-J COEFFICIENTS                                    DJ9J-067
      ITX=0                                                             DJ9J-068
      AZ=1.D0                                                           DJ9J-069
      DO 9 K=1,3                                                        DJ9J-070
      IJ=ITX                                                            DJ9J-071
      IB(K)=ITX+(JF(K)-KF)/2                                            DJ9J-072
      DO 8 I=1,5                                                        DJ9J-073
      IA1=IA(I,K)                                                       DJ9J-074
    8 J(I)=IX(IA1)                                                      DJ9J-075
      JT=2+(JF(K)-JS(K))/2                                              DJ9J-076
      ITX=ITX+JT                                                        DJ9J-077
      IF (ITX.GT.ITO) GO TO 12                                          DJ9J-078
      AT=DFLOAT(JF(K))                                                  DJ9J-079
      CALL DX6J(AA(1+IJ),AT,J,JT)                                       DJ9J-080
    9 AZ=AZ*AT*DFLOAT(J(3)+1)                                           DJ9J-081
C SUMMATION ON PRODUCTS OF 6-J                                          DJ9J-082
      AF=DFLOAT(KF)                                                     DJ9J-083
      DO 10 I=2,KT                                                      DJ9J-084
      DJ9J=DJ9J+AF*AA(I+IB1)*AA(I+IB2)*AA(I+IB3)                        DJ9J-085
   10 AF=AF-2.D0                                                        DJ9J-086
C NORMALISATION                                                         DJ9J-087
      DJ9J=DJ9J/DSQRT(AZ)                                               DJ9J-088
      RETURN                                                            DJ9J-089
   11 WRITE (MW,1000)                                                   DJ9J-090
      RETURN                                                            DJ9J-091
   12 WRITE (MW,1001)                                                   DJ9J-092
      RETURN                                                            DJ9J-093
   13 WRITE (MW,1002)                                                   DJ9J-094
      RETURN                                                            DJ9J-095
 1000 FORMAT (' INTEGER/HALF-INTEGER RULE BETWEEN QUANTUM NUMBERS TRANSGDJ9J-096
     1RESSED IN DJ9J')                                                  DJ9J-097
 1001 FORMAT (' TOO MANY 6-J NEEDED IN DJ9J')                           DJ9J-098
 1002 FORMAT (' NEGATIVE ANGULAR MOMENTUM IN DJ9J')                     DJ9J-099
      END                                                               DJ9J-100
C 01/01/04                                                      ECIS03  DX6J-000
      SUBROUTINE DX6J(AA,AT,J,JT)                                       DX6J-001
C  RECURRENCE COMPUTATION OF UNNORMALISED                               DX6J-002
C                       ( J(1)  J(2)  J(3) )                            DX6J-003
C 6-J COEFFICIENTS      )                  (                            DX6J-004
C                       ( J(4)  J(5)   JJ  )                            DX6J-005
C FOR ALL VALUES OF JJ.  THE ARGUMENTS J ARE INTEGER DOUBLED VALUES.    DX6J-006
C INPUT DATA:  JT:   NUMBER OF 6J COEFFICIENTS PLUS ONE                 DX6J-007
C              AT:   JJ+1 FOR MAXIMUM VALUE OF JJ (USUAL 2J+1)          DX6J-008
C OUTPUT DATA: AA:   UNNORMALISED 6J COEFFICIENTS IN AA(2) TO AA(JT)    DX6J-009
C                    STARTING FROM THE LARGEST VALUE OF JJ; AA(1)=0     DX6J-010
C              AT:   NORMALISATION: THE VALUES AA MUST BE DIVIDED BY    DX6J-011
C                      (-)**(J(1)+J(2)+J(4)+J(5))*SQRT((J(3)+1)*AT)     DX6J-012
C***********************************************************************DX6J-013
      IMPLICIT REAL*8 (A-F)                                             DX6J-014
      DIMENSION AA(2),J(5)                                              DX6J-015
      AA(1)=0.D0                                                        DX6J-016
      AA(2)=1.D0                                                        DX6J-017
      IF (JT.LE.2) RETURN                                               DX6J-018
      AL=AT                                                             DX6J-019
      C2=0.D0                                                           DX6J-020
      BK1=DFLOAT(J(1)-J(5))**2                                          DX6J-021
      BK3=DFLOAT(J(2)-J(4))**2                                          DX6J-022
      BK2=DFLOAT(J(1)+J(5)+2)**2                                        DX6J-023
      BK4=DFLOAT(J(2)+J(4)+2)**2                                        DX6J-024
      D1=DFLOAT(J(1)-J(5))*DFLOAT(J(1)+J(5)+2)*DFLOAT(J(4)-J(2))*DFLOAT(DX6J-025
     1J(2)+J(4)+2)/16.D0                                                DX6J-026
      D2=(BK1+BK2+BK3+BK4-DFLOAT(4*J(3)*(J(3)+2)))/8.D0-1.D0            DX6J-027
      BK=(AL+1.D0)**2                                                   DX6J-028
      DO 2 I=3,JT                                                       DX6J-029
      C1=C2                                                             DX6J-030
      BK=BK-AL*4.D0                                                     DX6J-031
      C2=.03125D0*DSQRT((BK3-BK)*(BK1-BK)*(BK2-BK)*(BK4-BK))            DX6J-032
      D4=.5D0*(AL+.5D0*BK-1.D0)                                         DX6J-033
      AA(I)=-(AL*(D1+(D2-D4)*D4)*AA(I-1)+(AL-1.D0)*C1*AA(I-2))/(C2*(AL+1DX6J-034
     1.D0))                                                             DX6J-035
      AL=AL-2.D0                                                        DX6J-036
      AT=AT+AL*AA(I)*AA(I)                                              DX6J-037
      IF (AT.LT.1.D12) GO TO 2                                          DX6J-038
      AT=AT*1.D-24                                                      DX6J-039
      DO 1 II=2,I                                                       DX6J-040
    1 AA(II)=AA(II)*1.D-12                                              DX6J-041
    2 CONTINUE                                                          DX6J-042
      RETURN                                                            DX6J-043
      END                                                               DX6J-044
C 01/01/04                                                      ECIS03  EXTP-000
      SUBROUTINE EXTP(NPP,NCOLL,NCOLT,WV,NIV,IQ,IVY,IVQ,IPI,FAC,NFA,VA,NEXTP-001
     1VA,LL,IPP,PIP,IDT,LO)                                             EXTP-002
C INPUT AND SETUP OF EXTERNAL FORM FACTORS, ELASTIC AND TRANSITIONS     EXTP-003
C INPUT : NPP:  NUMBER OF DIFFERENT ELASTIC CHANNEL POTENTIALS          EXTP-004
C         NCOLL:NUMBER OF COUPLED NUCLEAR STATES                        EXTP-005
C         NCOLT:NUMBER OF NUCLEAR STATES INCLUDING UNCOUPLED ONES       EXTP-006
C         WV:   MASSES OF PARTICLE AND TARGET IN WV(1,*) AND WV(2,*)    EXTP-007
C         NIV:  ADDRESSES IN TABLE OF NUCLEAR MATRIX ELEMENTS (SEE REDM)EXTP-008
C         IQ:   TABLE OF REDUCED NUCLEAR MATRIX ELEMENTS (SEE REDM)     EXTP-009
C         IVY:  TABLE OF FORM FACTORS  (SEE REDM)                       EXTP-010
C         IVQ:  TABLE OF ANGULAR MOMENTA (SEE REDM)                     EXTP-011
C         IPI(5,*): REFERENCE TO POTENTIALS                             EXTP-012
C         FAC:  TABLE OF LOGARITHM OF FACTORIALS                        EXTP-013
C         NFA:  LENGTH OF FAC                                           EXTP-014
C         IPP,PIP: DISPERSION RELATIONS, EQUIVALENT BY CALL             EXTP-015
C         IDT:  SIZE OF AVAILABLE WORKING SPACE                         EXTP-016
C         LO:   LOGICAL CONTROLS                                        EXTP-017
C IN COMMON /POTE1/   SEE REDM                                          EXTP-018
C OUTPUT: VA:   FOR OPTICAL MODEL PARAMETERS READ HERE                  EXTP-019
C         NVA:  IN EQUIVALENCE BY CALL WITH VA                          EXTP-020
C         LL:   ADDRESSES IN VA IN EQUIVALENCE WITH NVA(1,3)            EXTP-021
C           NVA(1) FIRST ADDRESS AFTER LL                               EXTP-022
C           NVA(2) NUMBER OF SETS OF FOLDING PARAMETERS                 EXTP-023
C           NVA(3) FIRST ADDRESS OF FOLDING PARAMETERS                  EXTP-024
C           NVA(4) LAST ADDRESS OF FOLDING PARAMETERS                   EXTP-025
C           LL(1,ITYP,K) FIRST ADDRESS OF PARAMETERS WHICH CAN BE VARIEDEXTP-026
C             FOR ITYP AND FORM FACTOR K, 1 FOR FORM FACTORS NOT USED   EXTP-027
C           LL(2,ITYP,K) LAST ADDRESS FOR ITYP AND FORM FACTOR K, -1 FOREXTP-028
C             FORM FACTORS NOT USED                                     EXTP-029
C                                                                       EXTP-030
C ITYP 1 REAL VOLUME OR DIRAC SCALAR POTENTIAL                          EXTP-031
C      2 IMAGINARY VOLUME OR DIRAC SCALAR POTENTIAL                     EXTP-032
C      3 REAL SURFACE OR DIRAC VECTOR POTENTIAL                         EXTP-033
C      4 IMAGINARY SURFACE OR DIRAC VECTOR POTENTIAL                    EXTP-034
C      5 REAL SPIN-ORBIT OR DIRAC TENSOR POTENTIAL                      EXTP-035
C      6 IMAGINARY SPIN-ORBIT OR DIRAC TENSOR POTENTIAL                 EXTP-036
C      7 COULOMB POTENTIAL                                              EXTP-037
C      8 COULOMB SPIN-ORBIT POTENTIAL                                   EXTP-038
C                                                                       EXTP-039
C L1,L2 CONTROLS THE LEVEL TO POTENTIAL ASSIGNMENT                      EXTP-040
C ML    IS 0 FOR THE POTENTIAL OR THE PLACE OF THE TRANSITION FORM      EXTP-041
C       FACTOR IN THE SEQUENCE OF REDUCED MATRIX ELEMENTS.              EXTP-042
C       THE FORM FACTORS CONTAIN THE DEFORMATION.                       EXTP-043
C L1X,L2X,MLX  FORM FACTOR COPIED TO L1,L2,ML                           EXTP-044
C                                                                       EXTP-045
C THE SPIN-ORBIT TRANSITION FORM FACTOR TO BE READ IS THE SECOND ONE    EXTP-046
C MULTIPLIED BY R**2. (MULTIPOLE OF AN ORDINARY WOODS-SAXON POTENTIAL)  EXTP-047
C                                                                       EXTP-048
C ITYPX  -1  WOODS-SAXON POTENTIAL                                      EXTP-049
C        -2  FIRST DERIVATIVE   MULTIPLIED BY R/SQRT(4*PI)              EXTP-050
C        -3  SECOND DERIVATIVE  MULTIPLIED BY R**2/(8*PI)               EXTP-051
C        -4  THIRD DERIVATIVE   MULTIPLIED BY R**3/(48*PI**(3/2))       EXTP-052
C        -5  DEFORMED WOODS-SAXON POTENTIAL                             EXTP-053
C        -6  DERIVATIVE OF DEFORMED WOODS-SAXON POTENTIAL               EXTP-054
C        -7  LAGUERRE POLYNOMIAL                                        EXTP-055
C        -8  SOLUTION IN REAL WOODS-SAXON POTENTIAL                     EXTP-056
C        -9  BESSEL EXPANSION                                           EXTP-057
C       -10  LAGUERRE EXPANSION                                         EXTP-058
C L2X GIVES THE NUMBER OF DEFORMATIONS, OF NODES, OF BESSEL FUNCTIONS,  EXTP-059
C                      OF LAGUERRE POLYNOMIALS                          EXTP-060
C MLX IS THE L-VALUE OF BESSEL OR LAGUERRE EXPANSION, OR NUMBER OF BOUNDEXTP-061
C FUNCTIONS: =0 OR 1 FOR ONE WITH THE QUANTUM NUMBERS OF THE TRANSITION,EXTP-062
C            =2 FOR TWO FUNCTIONS WITH THE SAME ITYPX,                  EXTP-063
C            =3 WHEN ITYPX=-8 FOR LAGUERRE POLYNOMIAL AS THE SECOND ONE.EXTP-064
C MLX AND -L1X ARE QUANTUM NUMBERS OF VIBRATIONAL BAND                  EXTP-065
C -L1X GIVES THE MULTIPLICATION OF STEP IN COMPUTING BOUND FUNCTION     EXTP-066
C -L1X IS THE ORDER OF DERIVATION OF BESSEL OR LAGUERRE EXPANSION.      EXTP-067
C                                                                       EXTP-068
C ALLOWED VALUES OF ITYPX FOR STANDARD POTENTIALS                       EXTP-069
C ***********************************************                       EXTP-070
C **** ML IS 0 ****                                                     EXTP-071
C ITYPX =    -1       -2,-4    -5       -6       -7,-8    -9,-10        EXTP-072
C ITYP = 1   YES      NO       YES      NO       NO       YES           EXTP-073
C ITYP = 2   YES      NO       YES      NO       NO       YES           EXTP-074
C ITYP = 3   YES      NO       YES      NO       NO       YES           EXTP-075
C ITYP = 4   YES      NO       YES      NO       NO       YES           EXTP-076
C ITYP = 5   YES      NO       YES      NO       NO       YES           EXTP-077
C ITYP = 6   YES      NO       YES      NO       NO       YES           EXTP-078
C ITYP = 7   YES      NO       YES      NO       NO       YES           EXTP-079
C ITYP = 8   YES      NO       YES      NO       NO       YES           EXTP-080
C **** ML IS NOT 0 ****                                                 EXTP-081
C ITYP = 1   YES      YES      YES      YES      YES      YES           EXTP-082
C ITYP = 2   YES      YES      YES      YES      YES      YES           EXTP-083
C ITYP = 3   YES      YES      YES      YES      NO       YES           EXTP-084
C ITYP = 4   YES      YES      YES      YES      NO       YES           EXTP-085
C ITYP = 5   YES      YES      YES      YES      NO       YES           EXTP-086
C ITYP = 6   YES      YES      YES      YES      NO       YES           EXTP-087
C ITYP = 7   NO       YES      YES      YES      NO       YES           EXTP-088
C ITYP = 8   NO       YES      YES      YES      NO       YES           EXTP-089
C NUMBER OF PARAMETERS TO STORE                                         EXTP-090
C ITYPX = -1,-4       -5        -6        -7        -8        -9,-10    EXTP-091
C INTEGER 6           7         8         15        15        9         EXTP-092
C REAL*8  4           4+L2X     4+L2X     1         23        2+L2X     EXTP-093
C THE ODD NUMBER OF INTEGER NEEDED IS ROUNDED TO NEXT EVEN VALUE        EXTP-094
C THERE IS ONE MORE FOR COULOMB POTENTIALS AND ITYPX=-1 TO -6.          EXTP-095
C THERE ARE 5 MORE PARAMETERS FOR ITYPX=-7 AND MLX=2.                   EXTP-096
C THERE ARE 16 OR 6 MORE PARAMETERS FOR ITYPX=-8 AND MLX=2 OR MLX=3.    EXTP-097
C***********************************************************************EXTP-098
      IMPLICIT REAL*8 (A-H,O-Z)                                         EXTP-099
      LOGICAL LO(250)                                                   EXTP-100
      DIMENSION IVY(7,1),IVQ(3,1),NIV(NCOLL,NCOLL,2),IQ(6,1),IPI(11,1),FEXTP-101
     1AC(1),VA(150),NVA(300),LL(2,8,1),ITZ(10),WV(18,1),IPP(2,15,1),PIP(EXTP-102
     215,1)                                                             EXTP-103
      CHARACTER*8 AA(3,8)                                               EXTP-104
      CHARACTER*4 IERM,LAST                                             EXTP-105
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM              EXTP-106
      COMMON /INOUT/ MR,MW,MS                                           EXTP-107
      DATA AA /8H      RE,8HAL VOLUM,8HE/SCALAR,8H IMAGINA,8HRY VOLUM,8HEXTP-108
     1E/SCALAR,8H     REA,8HL SURFAC,8HE/VECTOR,8H  IMAGIN,8H. SURFAC,8HEXTP-109
     2E/VECTOR,8H  REAL S,8HPIN-ORBI,8HT/TENSOR,8H IMAG. S,8HPIN-ORBI,8HEXTP-110
     3T/TENSOR,8H        ,8H        ,8H COULOMB,8H      SP,8HIN-ORBIT,8HEXTP-111
     4 COULOMB/                                                         EXTP-112
      DATA ITZ /2,2,2,2,3,4,7,7,4,4/                                    EXTP-113
      DATA IERM /4HLAST/                                                EXTP-114
      IF (LO(99)) GO TO 43                                              EXTP-115
      NPX=NPP+INTC                                                      EXTP-116
      NMA=3+8*NPX                                                       EXTP-117
      NVA(1)=NMA                                                        EXTP-118
      IF (NMA.GT.IDT) CALL MEMO('EXTP',IDT,NMA,2)                       EXTP-119
C SETTING THE CONTROLS OF INPUT                                         EXTP-120
      NTOT=0                                                            EXTP-121
      DO 9 I=1,NPX                                                      EXTP-122
      DO 1 J=1,16                                                       EXTP-123
      LL(1,J,I)=-1                                                      EXTP-124
    1 LL(2,J,I)=-1                                                      EXTP-125
      IF (I.GT.NPP) GO TO 2                                             EXTP-126
      IF (LO(201)) LL(1,5,I)=1                                          EXTP-127
      IF (LO(202)) LL(1,6,I)=1                                          EXTP-128
      IF (LO(201)) LL(1,8,I)=1                                          EXTP-129
      GO TO 7                                                           EXTP-130
    2 K=I-NPP                                                           EXTP-131
      L=IVY(2,K)                                                        EXTP-132
      IF (IVQ(2,L).GE.0) GO TO 4                                        EXTP-133
      DO 3 L=1,6                                                        EXTP-134
    3 LL(1,L,I)=1                                                       EXTP-135
      LL(1,8,I)=1                                                       EXTP-136
      GO TO 7                                                           EXTP-137
    4 IF (LO(12)) GO TO 5                                               EXTP-138
      LL(1,2,I)=1                                                       EXTP-139
      LL(1,4,I)=1                                                       EXTP-140
    5 IF (LO(100)) GO TO 6                                              EXTP-141
      IF (K.GT.INLS) LL(1,5,I)=1                                        EXTP-142
      IF (LO(114).OR.K.GT.INLS) LL(1,6,I)=1                             EXTP-143
      IF (K.GT.INVC) LL(1,7,I)=1                                        EXTP-144
      IF (K.GT.INVD) LL(1,8,I)=1                                        EXTP-145
      GO TO 7                                                           EXTP-146
    6 IF (IVY(3,K).EQ.0) LL(1,5,I)=1                                    EXTP-147
      IF (LO(114).OR.IVY(3,K).EQ.0) LL(1,6,I)=1                         EXTP-148
      IF (IVY(4,K).EQ.0) LL(1,7,I)=1                                    EXTP-149
      IF (IVY(5,K).EQ.0) LL(1,8,I)=1                                    EXTP-150
C COUNT OF FORM FACTORS TO BE READ                                      EXTP-151
    7 DO 8 J=1,8                                                        EXTP-152
      IF (LL(1,J,I).EQ.-1) NTOT=NTOT+1                                  EXTP-153
    8 CONTINUE                                                          EXTP-154
    9 CONTINUE                                                          EXTP-155
      NFOLD=0                                                           EXTP-156
   10 IF (NTOT.LE.0) GO TO 41                                           EXTP-157
C INPUT OF A FORM FACTOR                                                EXTP-158
      READ (MR,1000,ERR= 44 ) L1,L2,ML,ITYP,L1X,L2X,MLX,ITYPX,NST,NFOLD,EXTP-159
     1MINT                                                              EXTP-160
      IF (ITYP.GT.8.OR.IABS(NST).GT.NCOLT.OR.ITYP.LE.0) GO TO 45        EXTP-161
      NFOLD=MAX0(NFOLD,NFOLD)                                           EXTP-162
      IF (IABS(ML).NE.0) GO TO 11                                       EXTP-163
C TEST FOR A POTENTIAL                                                  EXTP-164
      IF (L1.NE.L2.OR.L1.GT.NCOLT) GO TO 46                             EXTP-165
      LZ=IPI(5,L1)                                                      EXTP-166
      IF (NST.EQ.0) NST=L1                                              EXTP-167
      IF (LO(173)) WRITE (MW,1001) (AA(K,ITYP),K=1,3),LZ                EXTP-168
      GO TO 14                                                          EXTP-169
C TEST FOR A TRANSITION                                                 EXTP-170
   11 IF (L1.GT.NCOLL.OR.L2.GT.NCOLL) GO TO 47                          EXTP-171
      LY=NIV(L1,L2,1)+IABS(ML)-1                                        EXTP-172
      IF (LY.GT.NIV(L1,L2,2)) GO TO 48                                  EXTP-173
      LX=IQ(1,LY)                                                       EXTP-174
      IF (ML.GT.0) GO TO 12                                             EXTP-175
      LX=IVY(6,LX)                                                      EXTP-176
      IF (LX.LE.0) GO TO 49                                             EXTP-177
   12 IF (LO(100)) GO TO 13                                             EXTP-178
      IF ((ITYP.EQ.5).OR.(ITYP.EQ.6)) LX=IVY(3,LX)                      EXTP-179
      IF (ITYP.GE.7) LX=IVY(ITYP-3,LX)                                  EXTP-180
   13 LZ=LX+NPP                                                         EXTP-181
      IF (NST.EQ.0) NST=1                                               EXTP-182
      IF (LO(173)) WRITE (MW,1002) (AA(K,ITYP),K=1,3),L1,L2,ML          EXTP-183
C TEST IT IS NOT ALREADY READ AND THAT THERE IS PLACE                   EXTP-184
   14 IF (LL(1,ITYP,LZ).NE.-1) GO TO 50                                 EXTP-185
      IF (NMA+31.GT.IDT) CALL MEMO('EXTP',IDT,NMA+32,2)                 EXTP-186
      NTOT=NTOT-1                                                       EXTP-187
      NNA=2*NMA-1                                                       EXTP-188
      NVA(NNA)=8*LZ+ITYP                                                EXTP-189
      NVA(NNA+2)=NFOLD                                                  EXTP-190
      IF (ITYPX.LT.0.OR.L1X.LE.0) GO TO 21                              EXTP-191
      NVA(NNA+5)=NMA                                                    EXTP-192
      NMD=NMA+3                                                         EXTP-193
      LL(1,ITYP,LZ)=NMD                                                 EXTP-194
      VA(NMD)=1.D0                                                      EXTP-195
      IF (MINT.LT.0) READ (MR,1003,ERR= 58 ) VA(NMD)                    EXTP-196
C USE OF ALREADY STORED FORM FACTOR/TEST EXISTENCE OF COPIED FORM FACTOREXTP-197
      IF (ITYP.NE.ITYPX) GO TO 51                                       EXTP-198
      IF (ML.NE.0) GO TO 15                                             EXTP-199
      IF (L1X.NE.L2X.OR.L1X.GT.NCOLT) GO TO 52                          EXTP-200
      LZX=IPI(5,L1X)                                                    EXTP-201
      IF (LO(173)) WRITE (MW,1004) L1X,ITYPX,L1                         EXTP-202
      GO TO 17                                                          EXTP-203
   15 IF (L1X.GT.NCOLL.OR.L2X.GT.NCOLL) GO TO 53                        EXTP-204
      LYY=NIV(L1X,L2X,1)+MLX-1                                          EXTP-205
      IF (LYY.GT.NIV(L1X,L2X,2)) GO TO 54                               EXTP-206
      LXX=IQ(1,LYY)                                                     EXTP-207
      IF (LO(100)) GO TO 16                                             EXTP-208
      IF ((ITYP.EQ.5).OR.(ITYP.EQ.6)) LXX=IVY(3,LXX)                    EXTP-209
      IF (ITYP.GE.7) LXX=IVY(ITYP-3,LXX)                                EXTP-210
   16 LZX=LXX+NPP                                                       EXTP-211
      IF (LO(173)) WRITE (MW,1005) L1X,L2X,MLX,ITYPX,L1,L2,ML           EXTP-212
   17 NMC=LL(1,ITYP,LZX)                                                EXTP-213
      IF (NMC.EQ.-1) GO TO 55                                           EXTP-214
C USE OF ALREADY STORED FORM FACTOR/TEST POSSIBILITY TO COPY            EXTP-215
      NMB=NVA(2*NMC-2)                                                  EXTP-216
      ITYPX=-NVA(2*NMB)                                                 EXTP-217
      IF (NVA(2*NMB+1).EQ.0.AND.NFOLD.NE.0) NVA(2*NMB+1)=-1             EXTP-218
      IF (NVA(2*NMB+1).NE.0.AND.NFOLD.EQ.0) NVA(2*NMA+1)=-1             EXTP-219
      IF (ITYPX.NE.-16) GO TO 18                                        EXTP-220
      LZX=(NVA(2*NMB+2)-1)/8                                            EXTP-221
      GO TO 17                                                          EXTP-222
   18 IF (ITYPX.GT.-5.OR.ML.EQ.0) GO TO 20                              EXTP-223
      IF (ITYPX.NE.-7.AND.ITYPX.NE.-8) GO TO 19                         EXTP-224
      LL(1,ITYP+2,LZ)=1                                                 EXTP-225
      NTOT=NTOT-1                                                       EXTP-226
      NMB=NMB+ITZ(-ITYPX)                                               EXTP-227
      IF (NVA(2*NMB-1).EQ.1) GO TO 19                                   EXTP-228
      IF (NVA(2*NMB+2).NE.1.OR.NVA(2*NMB+6).NE.1) GO TO 20              EXTP-229
      K=IQ(2,LY)                                                        EXTP-230
      VA(NMD)=DCGS(2*IVQ(1,K),NVA(2*NMB+3),NVA(2*NMB+7),FAC,NFA)*DSQRT(2EXTP-231
     1.D0*IVQ(1,K)+1.D0)/VA(NMC)                                        EXTP-232
      IF (VA(NMD).EQ.0.D0) GO TO 56                                     EXTP-233
      GO TO 20                                                          EXTP-234
   19 IF (IQ(2,LY).NE.IQ(2,LYY)) GO TO 57                               EXTP-235
   20 NVA(NNA+1)=16                                                     EXTP-236
      NVA(NNA+3)=8*LZX+ITYP                                             EXTP-237
      NVA(NNA+4)=NMA                                                    EXTP-238
      NMB=NMA+2                                                         EXTP-239
      IF (LO(173)) WRITE (MW,1006) NMA,NMB,(NVA(NNA+I),I=0,4),NMD,VA(NMDEXTP-240
     1)                                                                 EXTP-241
      LL(2,ITYP,LZ)=NMD                                                 EXTP-242
      NMA=NMD+1                                                         EXTP-243
      GO TO 40                                                          EXTP-244
   21 NVA(NNA+3)=MINT                                                   EXTP-245
      NVA(NNA+4)=NST                                                    EXTP-246
      IF (ITYPX.LT.0) GO TO 23                                          EXTP-247
      NVA(NNA+5)=NMA                                                    EXTP-248
      LL(1,ITYP,LZ)=NMA+3                                               EXTP-249
C FORM FACTOR READ FROM CARDS                                           EXTP-250
      READ (MR,1003,ERR= 58 ) VA(NMA+3),VA(NMA+4)                       EXTP-251
      IF (VA(NMA+3).EQ.0.D0) VA(NMA+3)=1.D0                             EXTP-252
      IF (VA(NMA+4).EQ.0.D0) VA(NMA+4)=1.D0                             EXTP-253
      NM=NMA+5                                                          EXTP-254
   22 NMB=NM+3                                                          EXTP-255
      IF (NMB.GT.IDT) CALL MEMO('EXTP',IDT,NMB,2)                       EXTP-256
      READ (MR,1007,ERR= 58 ) (VA(I),I=NM,NMB),LAST                     EXTP-257
      NM=NMB+1                                                          EXTP-258
      IF (LAST.NE.IERM) GO TO 22                                        EXTP-259
      NVN=NMA+2                                                         EXTP-260
      NM1=NVN+1                                                         EXTP-261
      NM2=NVN+2                                                         EXTP-262
      NM3=NVN+3                                                         EXTP-263
      NVA(2*NMA)=1-(NMB-NVN)/2                                          EXTP-264
      IF (LO(173)) WRITE (MW,1008) NMA,NVN,(NVA(NNA+I-1),I=1,6),NM1,NM2,EXTP-265
     1VA(NM1),VA(NM2),NM3,NMB,(VA(I),I=NM3,NMB)                         EXTP-266
      LL(2,ITYP,LZ)=NMB                                                 EXTP-267
      NMA=NMB+1                                                         EXTP-268
      GO TO 40                                                          EXTP-269
C STANDARD FORM FACTORS                                                 EXTP-270
   23 IF (ITYPX.LT.-10) GO TO 59                                        EXTP-271
      ITYPY=-ITYPX                                                      EXTP-272
      IF (ITYPY.LT.9) GO TO 24                                          EXTP-273
      IF ((ML.NE.0).AND.(MLX.EQ.0)) MLX=IVY(7,LX)                       EXTP-274
      IF (MLX.LT.0) MLX=0                                               EXTP-275
      GO TO 25                                                          EXTP-276
   24 IF (((ITYPY-1)*(ITYPY-5).NE.0).AND.ML.EQ.0) GO TO 60              EXTP-277
      IF ((ITYPY.EQ.1).AND.(ML.NE.0).AND.(ITYP.GE.7)) GO TO 61          EXTP-278
      IF ((ITYPY.GE.7).AND.(ITYP.GT.2)) GO TO 62                        EXTP-279
   25 NVA(NNA+1)=ITYPY                                                  EXTP-280
      NMB=NMA+ITZ(ITYPY)                                                EXTP-281
      IF (ITYPY.LT.5) GO TO 26                                          EXTP-282
      NVA(NNA+5)=L2X                                                    EXTP-283
      NVA(NNA+6)=MLX                                                    EXTP-284
      NVA(NNA+7)=-L1X                                                   EXTP-285
      IF (ITYPY.EQ.7.OR.ITYPY.EQ.8) GO TO 32                            EXTP-286
      NVA(2*NMB-1)=NMA                                                  EXTP-287
   26 NVA(2*NMB)=NMA                                                    EXTP-288
      LL(1,ITYP,LZ)=NMB+1                                               EXTP-289
      IF (LO(73)) GO TO 27                                              EXTP-290
      IF (ITYPY.GE.9) WRITE (MW,1009) NMA,NMB,(NVA(NNA+I-1),I=1,9)      EXTP-291
      IF (ITYPY.EQ.6) WRITE (MW,1010) NMA,NMB,(NVA(NNA+I-1),I=1,9)      EXTP-292
      IF (ITYPY.EQ.5) WRITE (MW,1011) NMA,NMB,(NVA(NNA+I-1),I=1,7)      EXTP-293
      IF (ITYPY.LT.5) WRITE (MW,1012) NMA,NMB,(NVA(NNA+I-1),I=1,6)      EXTP-294
   27 IF (ITYPY.GE.9) GO TO 29                                          EXTP-295
      NMA=NMB+1                                                         EXTP-296
      NMB=NMB+4                                                         EXTP-297
      IF (ITYP.GT.6) NMB=NMB+1                                          EXTP-298
      READ (MR,1003,ERR= 58 ) (VA(I),I=NMA,NMB)                         EXTP-299
      IF (ITYPY.GT.6) GO TO 28                                          EXTP-300
      K=IABS(NST)                                                       EXTP-301
      IF (K.EQ.NST) GO TO 28                                            EXTP-302
      IF (LO(173)) WRITE (MW,1013) VA(NMA),VA(NMA+1)                    EXTP-303
      EX=WV(2,K)**.33333333333333D0                                     EXTP-304
      EY=EX                                                             EXTP-305
      IF (LO(16)) EX=EX+WV(1,K)**.33333333333333D0                      EXTP-306
      EY=EY/EX                                                          EXTP-307
      VA(NMA+1)=VA(NMA+1)*EX                                            EXTP-308
      IF (LO(116).OR.ML.EQ.0) GO TO 28                                  EXTP-309
      ITYZ=ITYPY                                                        EXTP-310
      IF (ITYZ.GE.5) ITYZ=ITYZ-4                                        EXTP-311
      ITYW=1                                                            EXTP-312
      K=IQ(2,LY)                                                        EXTP-313
      IF (ITYP.GT.6) ITYW=ITYW*IVQ(1,K)                                 EXTP-314
      IF (LO(6)) ITYW=ITYW-1                                            EXTP-315
      IF (ITYZ.GT.1) VA(NMA)=VA(NMA)*EY**((ITYZ-1)*ITYW)                EXTP-316
   28 IF (LO(173)) WRITE (MW,1014) NMA,NMB,(VA(I),I=NMA,NMB)            EXTP-317
      IF (ITYPY.LT.5) GO TO 39                                          EXTP-318
   29 NMA=NMB+1                                                         EXTP-319
      NMC=NMA                                                           EXTP-320
      IF (ITYPY.GE.9) NMC=NMC+2                                         EXTP-321
      NMB=NMC+L2X-1                                                     EXTP-322
      IF (NMB.GT.IDT) CALL MEMO('EXTP',IDT,NMB,2)                       EXTP-323
      READ (MR,1003,ERR= 58 ) (VA(I),I=NMA,NMB)                         EXTP-324
      IF ((ITYPY.GE.9).AND.(VA(NMA).EQ.0.D0)) VA(NMA)=1.D0              EXTP-325
      IF (NST.GT.0.OR.ITYPY.GE.9) GO TO 31                              EXTP-326
      IF (LO(173)) WRITE (MW,1015) (VA(I),I=NMA,NMB)                    EXTP-327
      DO 30 I=NMA,NMB                                                   EXTP-328
      J=I-NMA                                                           EXTP-329
      IF (ITYP.LT.7) J=0                                                EXTP-330
      IF (LO(106)) J=J+1                                                EXTP-331
   30 VA(I)=VA(I)*EY**J                                                 EXTP-332
   31 IF (LO(73)) GO TO 39                                              EXTP-333
      IF (ITYPY.GE.9) WRITE (MW,1016) NMA,NMB,VA(NMA),VA(NMA+1),L2X,(I,VEXTP-334
     1A(I),I=NMC,NMB)                                                   EXTP-335
      IF (ITYPY.LT.9) WRITE (MW,1017) NMA,NMB,L2X,(I,VA(I),I=NMA,NMB)   EXTP-336
      GO TO 39                                                          EXTP-337
   32 LL(1,ITYP+2,LZ)=1                                                 EXTP-338
      NTOT=NTOT-1                                                       EXTP-339
      IF (LO(100)) GO TO 63                                             EXTP-340
      NVA(NNA+7)=-L1X                                                   EXTP-341
      IF (MLX.EQ.0) MLX=1                                               EXTP-342
      IF ((MLX.LT.0.OR.MLX.GT.3).OR.(MLX.EQ.3.AND.ITYPY.EQ.7)) GO TO 64 EXTP-343
      NVA(NNA+6)=MLX                                                    EXTP-344
      MLY=MLX                                                           EXTP-345
      NMD=NMA+2                                                         EXTP-346
      IF (LO(173)) WRITE (MW,1018) NMA,NMD,(NVA(NNA+I-1),I=1,6)         EXTP-347
      NMD=NMD+1                                                         EXTP-348
      K=IQ(2,LY)                                                        EXTP-349
      IF (MLX.GT.1) GO TO 34                                            EXTP-350
      DO 33 I=1,3                                                       EXTP-351
   33 NVA(NNA+7+I)=IVQ(I,K)                                             EXTP-352
      NVA(NNA+11)=NMA                                                   EXTP-353
      NMB=NMD+2                                                         EXTP-354
      IF (LO(173)) WRITE (MW,1019) NMD,NMB,(NVA(NNA+I),I=6,11)          EXTP-355
      NMC=NMB                                                           EXTP-356
      GO TO 36                                                          EXTP-357
   34 READ (MR,1000) (NVA(NNA+I),I=7,14),NVC                            EXTP-358
      IF (NVA(NNA+9).EQ.1.AND.NVC.EQ.0) NVA(NNA+9)=-3                   EXTP-359
      NMB=NMA+7                                                         EXTP-360
      NVA(NNA+15)=NMA                                                   EXTP-361
      NMC=NMB+1                                                         EXTP-362
      VA(NMC)=1.D0                                                      EXTP-363
      IF (NVA(NNA+9).NE.1.OR.NVA(NNA+13).NE.1.OR.NVC.EQ.0) GO TO 35     EXTP-364
      VA(NMC)=DCGS(2*IVQ(1,K),NVA(NNA+10),NVA(NNA+14),FAC,NFA)*DSQRT(DFLEXTP-365
     1OAT(2*IVQ(1,K)+1))                                                EXTP-366
      IF (VA(NMC).EQ.0.D0) GO TO 56                                     EXTP-367
   35 IF (LO(173)) WRITE (MW,1020) NMD,NMB,(NVA(NNA+I),I=6,15),NMC,VA(NMEXTP-368
     1C)                                                                EXTP-369
   36 NMC=NMC+1                                                         EXTP-370
      LL(1,ITYP,LZ)=NMB+1                                               EXTP-371
      IF (ITYPY.EQ.8) GO TO 38                                          EXTP-372
   37 READ (MR,1003,ERR= 58 ) (VA(NMC+I-1),I=1,MLX)                     EXTP-373
      IF (MLX.EQ.2.AND.VA(NMC+1).EQ.0.) VA(NMC+1)=VA(NMC)               EXTP-374
      NMB=NMC+MLX-1                                                     EXTP-375
      IF (LO(173)) WRITE (MW,1021) NMC,NMB,(VA(I),I=NMC,NMB)            EXTP-376
      GO TO 39                                                          EXTP-377
   38 NMB=NMC+10                                                        EXTP-378
      READ (MR,1003,ERR= 58 ) (VA(I),I=NMC,NMB)                         EXTP-379
      IF (VA(NMC+4).EQ.0.D0) VA(NMC+4)=35.D0                            EXTP-380
      IF (LO(173)) WRITE (MW,1022) NMC,NMB,(VA(I),I=NMC,NMB)            EXTP-381
      IF (MLX.EQ.1.AND.MLY.EQ.2.AND.VA(NMC-10).LT.0.D0.AND.VA(NMC).LT.0.EXTP-382
     1D0) GO TO 65                                                      EXTP-383
      NMC=NMB+1                                                         EXTP-384
      MLX=MLX-2                                                         EXTP-385
      IF (MLX.EQ.1) GO TO 37                                            EXTP-386
      IF (MLX.EQ.0) GO TO 38                                            EXTP-387
   39 LL(2,ITYP,LZ)=NMB                                                 EXTP-388
      NMA=NMB+1                                                         EXTP-389
   40 IF (LO(110).OR.LZ.GT.NPP) GO TO 10                                EXTP-390
      NMC=LL(1,ITYP,LZ)                                                 EXTP-391
      EX=VA(NMC)                                                        EXTP-392
      IF (IPP(1,2,LZ).NE.0.AND.EX.EQ.0.D0.AND.ITYP.EQ.2) GO TO 66       EXTP-393
      IF (IPP(2,2,LZ).NE.0.AND.EX.EQ.0.D0.AND.ITYP.EQ.4) GO TO 67       EXTP-394
      IF (PIP(15,LZ).NE.0.D0.AND.EX.EQ.0.D0.AND.ITYP.EQ.1) GO TO 68     EXTP-395
      IF (PIP(7,LZ).NE.0.D0.AND.EX.EQ.0.D0.AND.ITYP.EQ.5) GO TO 69      EXTP-396
      IF (PIP(8,LZ).NE.0.D0.AND.EX.EQ.0.D0.AND.ITYP.EQ.6) GO TO 70      EXTP-397
      GO TO 10                                                          EXTP-398
   41 NVA(2)=NFOLD                                                      EXTP-399
      NVA(3)=NMA                                                        EXTP-400
      NVA(4)=NMA                                                        EXTP-401
      IF (NFOLD.EQ.0) RETURN                                            EXTP-402
      IF (LO(173)) WRITE (MW,1023) NFOLD                                EXTP-403
      DO 42 I=1,NFOLD                                                   EXTP-404
      READ (MR,1003,ERR= 75 ) VA(NMA),VA(NMA+1),VA(NMA+2)               EXTP-405
      IF (LO(173)) WRITE (MW,1024) I,VA(NMA),VA(NMA+1),VA(NMA+2)        EXTP-406
   42 NVA(4)=NVA(4)+3                                                   EXTP-407
      RETURN                                                            EXTP-408
   43 WRITE (MW,1025)                                                   EXTP-409
      GO TO 71                                                          EXTP-410
   44 WRITE (MW,1026)                                                   EXTP-411
      GO TO 71                                                          EXTP-412
   45 WRITE (MW,1027) ITYP,NST,NCOLT                                    EXTP-413
      GO TO 71                                                          EXTP-414
   46 WRITE (MW,1028) ML,L1,L2,NCOLT                                    EXTP-415
      GO TO 71                                                          EXTP-416
   47 WRITE (MW,1029) ML,L1,L2,NCOLL                                    EXTP-417
      GO TO 71                                                          EXTP-418
   48 WRITE (MW,1030) ML,L1,L2                                          EXTP-419
      GO TO 71                                                          EXTP-420
   49 WRITE (MW,1031) L1,L2,ML                                          EXTP-421
      GO TO 71                                                          EXTP-422
   50 WRITE (MW,1032) L1,L2,ML,ITYP                                     EXTP-423
      GO TO 71                                                          EXTP-424
   51 WRITE (MW,1033) L1,L2,ML,ITYP,L1X,L2X,MLX,ITYPX                   EXTP-425
      GO TO 71                                                          EXTP-426
   52 WRITE (MW,1034) MLX,L1X,L2X,NCOLT                                 EXTP-427
      GO TO 71                                                          EXTP-428
   53 WRITE (MW,1035) MLX,L1X,L2X,NCOLL                                 EXTP-429
      GO TO 71                                                          EXTP-430
   54 WRITE (MW,1036) MLX,L1X,L2X,NCOLL                                 EXTP-431
      GO TO 71                                                          EXTP-432
   55 WRITE (MW,1037) MLX,L1X,L2X,ITYPX                                 EXTP-433
      GO TO 71                                                          EXTP-434
   56 WRITE (MW,1038) NVA(NNA+8),NVA(NNA+12),K                          EXTP-435
      GO TO 71                                                          EXTP-436
   57 WRITE (MW,1039) ITYPX,IQ(2,LYY),IQ(2,LY)                          EXTP-437
      GO TO 71                                                          EXTP-438
   58 WRITE (MW,1040) ITYP,LZ                                           EXTP-439
      GO TO 71                                                          EXTP-440
   59 WRITE (MW,1041) ITYPX                                             EXTP-441
      GO TO 71                                                          EXTP-442
   60 WRITE (MW,1042) ITYPX,ITYP                                        EXTP-443
      GO TO 71                                                          EXTP-444
   61 WRITE (MW,1043) ITYPX,ITYP                                        EXTP-445
      GO TO 71                                                          EXTP-446
   62 WRITE (MW,1044) ITYPX,ITYP                                        EXTP-447
      GO TO 71                                                          EXTP-448
   63 WRITE (MW,1045) ITYPX                                             EXTP-449
      GO TO 71                                                          EXTP-450
   64 WRITE (MW,1046) MLX,ITYPX                                         EXTP-451
      GO TO 71                                                          EXTP-452
   65 WRITE (MW,1047) VA(NMC-10),VA(NMC)                                EXTP-453
      GO TO 71                                                          EXTP-454
   66 WRITE (MW,1048) LZ,IPP(1,2,LZ),EX                                 EXTP-455
      GO TO 71                                                          EXTP-456
   67 WRITE (MW,1049) LZ,IPP(2,2,LZ),EX                                 EXTP-457
      GO TO 71                                                          EXTP-458
   68 WRITE (MW,1050) LZ,LZ,PIP(15,LZ),EX                               EXTP-459
      GO TO 71                                                          EXTP-460
   69 WRITE (MW,1051) LZ,LZ,PIP(7,LZ),EX                                EXTP-461
      GO TO 71                                                          EXTP-462
   70 WRITE (MW,1052) LZ,LZ,PIP(8,LZ),EX                                EXTP-463
   71 IF (NTOT.EQ.0) GO TO 76                                           EXTP-464
      WRITE (MW,1053) NTOT,NPP                                          EXTP-465
      DO 74 J=1,NPX                                                     EXTP-466
      DO 73 I=1,8                                                       EXTP-467
      IF (LL(1,I,J).NE.-1) GO TO 73                                     EXTP-468
      IF (J.GT.NPP) GO TO 72                                            EXTP-469
      WRITE (MW,1054) (AA(K,I),K=1,3),J                                 EXTP-470
      GO TO 73                                                          EXTP-471
   72 WRITE (MW,1055) (AA(K,I),K=1,3),J-NPP                             EXTP-472
   73 CONTINUE                                                          EXTP-473
   74 CONTINUE                                                          EXTP-474
      GO TO 76                                                          EXTP-475
   75 WRITE (MW,1056) I,NFOLD                                           EXTP-476
   76 WRITE (MW,1057)                                                   EXTP-477
      STOP                                                              EXTP-478
 1000 FORMAT (12I5)                                                     EXTP-479
 1001 FORMAT (/3A8,' POTENTIAL NR(',I2,')')                             EXTP-480
 1002 FORMAT (/3A8,' TRANSITION POTENTIAL FROM LEVEL(',I2,') TO LEVEL(',EXTP-481
     1I2,') AND THE ORDER ML =',I2)                                     EXTP-482
 1003 FORMAT (7F10.5)                                                   EXTP-483
 1004 FORMAT (' THE ELASTIC POTENTIAL NR(',I2,') TYP(',I1,') IS COPIED TEXTP-484
     1O NR(',I2,')')                                                    EXTP-485
 1005 FORMAT (' TRANSITION POTENTIAL L1(',I2,') L2(',I2,') ML(',I2,') TYEXTP-486
     1P(',I2,') IS COPIED TO L1(',I2,') L2(',I2,') ML(',I2,')')         EXTP-487
 1006 FORMAT (' USING PARAMETERS',I6,' TO',I6,' FOR COPY TO:',I5,5X,'(COEXTP-488
     1PY):',I3,5X,'FOLD =',I3,5X,'FROM:',I5,5X,'START:',I5/' USING PARAMEXTP-489
     2ETER',I6,' FOR MULTIPLICATIVE FACTOR',D15.8)                      EXTP-490
 1007 FORMAT (F10.5,F20.10,F10.5,F20.10,A4)                             EXTP-491
 1008 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/I5,5X,'NB POIEXTP-492
     1NTS:',I5,5X,'FOLD:',I2,5X,'INTG:',I2,5X,'STEP:',I2,5X,'START:',I5/EXTP-493
     25X,'PARAMETERS',I6,' TO',I6,' TO STORE:'/20X,'STRENGTH:',F15.6,10XEXTP-494
     3,'SCALE:',F15.6/' AND PARAMETERS',I6,' TO',I6,' TO STORE:'/4(6X,'REXTP-495
     4ADIUS',7X,'POTENTIAL',2X)/(4(2X,0P,F10.5,3X,1P,D15.7)))           EXTP-496
 1009 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/I5,3X,'TYPE:'EXTP-497
     1,I2,3X,'FOLD:',I2,3X,'INTG:',I2,3X,'STEP:',I2,I6,' FUNCTIONS  L:',EXTP-498
     2I3,I4,' DERIVATIONS  START:',I5)                                  EXTP-499
 1010 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/I5,3X,'TYPE:'EXTP-500
     1,I2,3X,'FOLD:',I2,3X,'INTG:',I2,3X,'STEP:',I2,I6,' DEFORMATIONS   EXTP-501
     2LBET:',I5,5X,'KBET:',I5,5X,'START:',I5)                           EXTP-502
 1011 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/I5,3X,'TYPE:'EXTP-503
     1,I2,3X,'FOLD:',I2,3X,'INTG:',I2,3X,'STEP:',I2,I6,' DEFORMATIONS',5EXTP-504
     2X,'START:',I5)                                                    EXTP-505
 1012 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:',I4,3X,'TYPE:'EXTP-506
     1,I2,3X,'FOLD:',I2,3X,'INTG:',I2,3X,'STEP:',I2,5X,'START:',I5)     EXTP-507
 1013 FORMAT (' VALUES READ:',F12.6,3X,F9.6)                            EXTP-508
 1014 FORMAT (' USING PARAMETERS',I6,' TO',I6,' FOR'/' DEPTH',F12.6,' MEEXTP-509
     1V  RADIUS',F10.6,' F  DIFFUSENESS',F9.6,' F AT THE POWER (1.+',F9.EXTP-510
     26,')',2X,F9.6,' (3RD COUL. PARM.)'/)                              EXTP-511
 1015 FORMAT (' DEFORMATIONS READ:',8F10.5/(19X,8F10.5))                EXTP-512
 1016 FORMAT (' USING PARAMETERS',I6,' TO',I6,' FOR STRENGTH:',F12.6,10XEXTP-513
     1,'SCALE:',F12.6/' AND TO STORE',I5,' BESSEL FUNCTION OR LEGENDRE PEXTP-514
     2OLYNOMIALS COEFFICIENTS:'/(6(3X,I5,F10.5)))                       EXTP-515
 1017 FORMAT (' USING PARAMETERS',I6,' TO',I6,' FOR',I5,' DEFORMATIONS:'EXTP-516
     1/(6(3X,I5,F10.5)))                                                EXTP-517
 1018 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:',I4,3X,'TYPE:'EXTP-518
     1,I2,3X,'FOLD:',I2,3X,'INTG:',I2,3X,'STEP:',I2,5X,'MULT:',I3)      EXTP-519
 1019 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:',I2,' FUNCTIONEXTP-520
     1S   N =',I2,3X,'L =',I3,3X,'2*S =',I2,3X,'2*J =',I3,5X,'START:',I5EXTP-521
     2)                                                                 EXTP-522
 1020 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/I5,' FUNCTIONEXTP-523
     1S',2(2X,'N =',I2,3X,'L =',I3,3X,'2*S =',I2,3X,'2*J =',I3),5X,'STAREXTP-524
     2T:',I5/' USING PARAMETER',I6,' FOR MULTIPLICATIVE FACTOR',D18.8)  EXTP-525
 1021 FORMAT (' USING PARAMETERS',I6,' TO',I6,' FOR THE OSCILLATOR PARAMEXTP-526
     1ETER',2F10.5)                                                     EXTP-527
 1022 FORMAT (' USING PARAMETERS',I6,' TO',I6,' TO STORE:'/' **** BINDINEXTP-528
     1G ENERGY',F12.6,' MEV ****',2X,'TOTAL MASS',F12.6,2X,'PARTICLE MASEXTP-529
     2S',F12.6,2X,'PRODUCT OF CHARGES',F8.2/' SEARCH ON DEPTH OF REAL POEXTP-530
     3TENTIAL FROM',F12.6,' WITH REDUCED RADIUS',F10.6,' FERMI AND DIFFUEXTP-531
     4SENESS',F10.6,' FERMI'/' SPIN-ORBIT POTENTIAL  DEPTH:',F12.6,' MEVEXTP-532
     5  RADIUS:',F10.6,' F  DIFFUSENESS:',F9.6,' F  COULOMB RADIUS:',F10EXTP-533
     6.6,' F'/)                                                         EXTP-534
 1023 FORMAT (/2X,I3,' SETS OF FOLDING PARAMETERS')                     EXTP-535
 1024 FORMAT (2X,I2,5X,' V =',F12.6,5X,' R =',F9.6,5X,' A =',F9.6)      EXTP-536
 1025 FORMAT (' EXTERNAL FORM FACTORS NOT ALLOWED WITH SCHROEDINDER EQUIEXTP-537
     1VALENT OF DIRAC EQUATION')                                        EXTP-538
 1026 FORMAT (' INPUT ERROR IN THE FIRST CARD DEFINING THE POTENTIAL')  EXTP-539
 1027 FORMAT (/' ITYP =',I5,' NOT ALLOWED OR NST =',I5,' LARGER THAN NCOEXTP-540
     1LT =',I3)                                                         EXTP-541
 1028 FORMAT (' WITH ML =',I2,' L1 =',I3,' IS NOT EQUAL TO L2 =',I3,' OREXTP-542
     1 IS LARGER THAN NCOLT =',I3)                                      EXTP-543
 1029 FORMAT (' WITH ML =',I3,' L1 =',I3,' OR L2 =',I3,' IS LARGER THAN EXTP-544
     1NCOLL =',I3)                                                      EXTP-545
 1030 FORMAT (' ML =',I3,' TOO LARGE BETWEEN LEVELS L1 =',I3,' AND L2 ='EXTP-546
     1,I3)                                                              EXTP-547
 1031 FORMAT (' THERE IS NO CORRECTION TERM OF THE FORM FACTOR FOR L1 ='EXTP-548
     1,I3,'  L2 =',I3,'  ML =',I3)                                      EXTP-549
 1032 FORMAT (' THE FORM FACTOR FOR L1 =',I3,'  L2 =',I3,'  ML =',I3,'  EXTP-550
     1AND ITYP =',I2,' IS ALREADY READ OR DOES NOT HAVE TO BE READ')    EXTP-551
 1033 FORMAT (/' DIFFERENT TYPES NOT ALLOWED TO COPY FOR FORM FACTORS L1EXTP-552
     1/L2/ML/ITYP/L1X/L2X/MLX/ITYPX :'/30X,8I5)                         EXTP-553
 1034 FORMAT (' WITH MLX =',I2,' L1X =',I3,' IS NOT EQUAL TO L2X =',I3,'EXTP-554
     1 OR IS LARGER THAN NCOLT =',I3)                                   EXTP-555
 1035 FORMAT (' WITH MLX =',I3,' L1X =',I3,' OR L2X =',I3,' IS LARGER THEXTP-556
     1AN NCOLL =',I3)                                                   EXTP-557
 1036 FORMAT (' MLX =',I3,' TOO LARGE BETWEEN LEVELS L1X =',I3,' AND L2XEXTP-558
     1 =',I5)                                                           EXTP-559
 1037 FORMAT (' FORM FACTOR DEFINED BY L1X =',I3,'  L2X =',I3,'  MLX =',EXTP-560
     1I3,'  ITYPX =',I3,' NOT YET DEFINED')                             EXTP-561
 1038 FORMAT (' NO PARTICLE-HOLE COUPLING WITH 2*JP =',I3,' AND 2*JH =',EXTP-562
     1I3,' TO L =',I3)                                                  EXTP-563
 1039 FORMAT (' COPY WITH ITYPX =',I3,' NOT ALLOWED BETWEEN TRANSITIONS EXTP-564
     1WITH QUANTUM NUMBERS',I2,' AND',I2)                               EXTP-565
 1040 FORMAT (' INPUT ERROR FOR THE POTENTIAL (',I2,',',I2,')')         EXTP-566
 1041 FORMAT (/' ITYPX =',I5,' NOT ALLOWED FOR STANDARD FORM FACTORS')  EXTP-567
 1042 FORMAT (' ITYPX,ITYP =',2I5,'  NOT ALLOWED: CENTRAL POTENTIAL CANNEXTP-568
     1OT BE DERIVATIVE OR BOUND FUNCTION')                              EXTP-569
 1043 FORMAT (' ITYPX,ITYP =',2I5,'  NOT ALLOWED: COULOMB TRANSITION FOREXTP-570
     1M FACTOR MUST BE DERIVATIVE')                                     EXTP-571
 1044 FORMAT (' ITYPX,ITYP =',2I5,'  NOT ALLOWED: BOUND STATE FUNCTION CEXTP-572
     1AN BE ONLY REAL OR IMAGINARY TRANSITION POTENTIAL')               EXTP-573
 1045 FORMAT (' ITYPX =',I3,'  NOT ALLOWED IN DIRAC FORMALISM')         EXTP-574
 1046 FORMAT (' L2X =',I3,'  NOT ALLOWED WITH ITYPX =',I4)              EXTP-575
 1047 FORMAT (' FOR ITYP=-8 AND TWO FUNCTIONS, BOTH ARE UNBOUNDED',2F12.EXTP-576
     16)                                                                EXTP-577
 1048 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED FOR DISPERSION RELATIEXTP-578
     1ONS BECAUSE THE VOLUME IMAGINARY STRENGTH IS 0:'/10X,'NV =',I3,'  EXTP-579
     1WV =',D13.6)                                                      EXTP-580
 1049 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED FOR DISPERSION RELATIEXTP-581
     1ONS BECAUSE THE SURFACE IMAGINARY STRENGTH IS 0:'/10X,'NS =',I3,' EXTP-582
     2 WS =',D13.6)                                                     EXTP-583
 1050 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THEEXTP-584
     1 HARTREE-FOCK POTENTIAL OF WHICH THE STRENGTH IS 0':/10X,'PIP(15,'EXTP-585
     2,I2,') =',D13.6,'  V =',D13.6)                                    EXTP-586
 1051 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THEEXTP-587
     1 REAL SPIN-ORBIT OF WHICH THE STRENGTH IS 0':/10X,'PIP(7,',I2,') =EXTP-588
     2',D13.6,'  VLS =',D13.6)                                          EXTP-589
 1052 FORMAT (' THE POTENTIAL',I4,' CANNOT BE USED WITH VARIATION OF THEEXTP-590
     1 IMAGINARY SPIN-ORBIT OF WHICH THE STRENGTH IS 0':/10X,'PIP(8,',I2EXTP-591
     2,') =',D13.6,'  WLS =',D13.6)                                     EXTP-592
 1053 FORMAT (I6,' FORM FACTORS TO READ, FOR (ITYP, N  )  ( POTENTIALS FEXTP-593
     1OR N SMALLER THAN',I2,' TRANSITIONS AFTER)')                      EXTP-594
 1054 FORMAT (10X,3A8,' MISSING FOR POTENTIAL',I4)                      EXTP-595
 1055 FORMAT (10X,3A8,' MISSING FOR TRANSITION',I4)                     EXTP-596
 1056 FORMAT (' INPUT ERROR FOR THE',I4,'TH SET OF THE',I4,' SETS OF FOLEXTP-597
     1DING PARAMETERS TO BE READ')                                      EXTP-598
 1057 FORMAT (' IN EXTP  .... STOP ....')                               EXTP-599
      END                                                               EXTP-600
C 01/01/04                                                      ECIS03  DCGS-000
      FUNCTION DCGS(L,J1,J2,FAC,NFA)                                    DCGS-001
C   CGS(L,J1,J2) =                                                      DCGS-002
C                                 /~~~~~~~~~~~~~~~~   ( J2   L   J1  )  DCGS-003
C  CGS(L,J1,J2) = (-)**(J1+1/2)  / (2*J1+1)*(2*J2+1)  (              )  DCGS-004
C                               V                     (-1/2  0   1/2 )  DCGS-005
C  WHEN J1 AND J2 ARE HALF-INTEGERS                                     DCGS-006
C                              ( J2  L  J1 )                            DCGS-007
C  CGS(L,J1,J2) = (-)**(J1-1)  (           )                            DCGS-008
C                              (  0  0  0  )                            DCGS-009
C  WHEN J1 AND J2  ARE INTEGERS                                         DCGS-010
C L,J1,J2 ARE INTEGER DOUBLE VALUES.                                    DCGS-011
C FAC IS A TABLE OF LOGARITHM OF FACTORIALS AND NFA ITS LENGTH.         DCGS-012
C***********************************************************************DCGS-013
      IMPLICIT REAL*8 (A-H,O-Z)                                         DCGS-014
      DIMENSION FAC(1)                                                  DCGS-015
      IF (L.LT.0.OR.J1.LT.0.OR.J2.LT.0) GO TO 1                         DCGS-016
      LL=L+J1+J2+2                                                      DCGS-017
      LT=LL/2                                                           DCGS-018
      IF (2*LT.NE.LL) GO TO 1                                           DCGS-019
      IF (LT.GE.NFA) GO TO 1                                            DCGS-020
      L1=LT-J1                                                          DCGS-021
      L2=LT-J2                                                          DCGS-022
      L3=LT-L                                                           DCGS-023
      IF (L1.LE.0.OR.L2.LE.0.OR.L3.LE.0) GO TO 1                        DCGS-024
      L4=LT+1                                                           DCGS-025
      N1=(L1+1)/2                                                       DCGS-026
      N2=(L2+1)/2                                                       DCGS-027
      N3=(L3+1)/2                                                       DCGS-028
      N4=(L4+1)/2                                                       DCGS-029
      DCGS=DEXP(FAC(N4)-FAC(N1)-FAC(N2)-FAC(N3)-.5D0*(FAC(L4)-FAC(L1)-FADCGS-030
     1C(L2)-FAC(L3)))                                                   DCGS-031
      IF (2*(N1/2).NE.N1) DCGS=-DCGS                                    DCGS-032
      IF (N4-N1-N2-N3+1) 3 , 2 , 1                                      DCGS-033
    1 DCGS=0.D0                                                         DCGS-034
    2 DCGS=2.D0*DCGS                                                    DCGS-035
    3 RETURN                                                            DCGS-036
      END                                                               DCGS-037
C 01/01/04                                                      ECIS03  CONU-000
      SUBROUTINE CONU(IX,IPI,WV,IPIM,WVM,NCI,XD,SCN,KXT,LO)             CONU-001
C DISCRETISATION OF CONTINUA FOR COMPOUND NUCLEUS                       CONU-002
C INPUT VARIABLES:   IX:  0 FOR COUNT OF POINTS                         CONU-003
C               ANY OTHER VALUE FOR COMPUTATION OF POINTS, WEIGHTS, ... CONU-004
C                    WV:        SEE CALX                                CONU-005
C                    SCN:       DESCRIPTIONS OF LEVEL DENSITIES         CONU-006
C                    LO:        LOGICAL CONTROLS                        CONU-007
C OUTPUT VARIABLES:  IPIM,WVM:  IPI,WV FOR CONTINUA OF COMP. NUCLEUS    CONU-008
C                    NCI: STARTING AND FINAL ADDRESSES FOR CONTINUA     CONU-009
C                    XD:  STEPS OF DISCRETISATION OF CONTINUA           CONU-010
C                          ENERGY AND SPIN DEPENDENCE OF LEVEL DENSITIESCONU-011
C                    KXT: NUMBER OF TRANSMISSION COEFFICIENTS           CONU-012
C IN SCN:  1-SA  2-UX   3-TAU  4-SG   5-E0   6-EX   7-NZ  B IS SCNB     CONU-013
C FOR COMMON /NCOMP/  SEE CALX, LECT AND COLF                           CONU-014
C***********************************************************************CONU-015
      IMPLICIT REAL*8 (A-H,O-Z)                                         CONU-016
      LOGICAL LO(250)                                                   CONU-017
      DIMENSION IPI(11,1),WV(18,1),IPIM(11,1),WVM(18,1),NCI(2,1),XD(3,1)CONU-018
     1,SCN(7,1)                                                         CONU-019
      COMMON /DCONS/ CM,CK,CHB,CMB,CCZ                                  CONU-020
      COMMON /DCONT/ XE,XM,XN,XZ                                        CONU-021
      COMMON /NCOMP/ NSP(5),NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQ,ACN1,ACN2CONU-022
     1,AZ(18)                                                           CONU-023
      COMMON /INOUT/ MR,MW,MS                                           CONU-024
C DISCRETISATION OF CONTINUUM FOR COMPOUND NUCLEUS                      CONU-025
      NIE=0                                                             CONU-026
      IF (IX.EQ.0) GO TO 1                                              CONU-027
      AMRD=XM/CM                                                        CONU-028
      AMR=WV(3,1)/CM+WV(1,1)+WV(2,1)                                    CONU-029
      KXT=IPI(8,NCOLX+1-NCONT)                                          CONU-030
    1 DO 14 I=1,NCONT                                                   CONU-031
      J=I+NCONS-NCONT                                                   CONU-032
      SCNB=DEXP(2.D0*DSQRT(SCN(1,J)*SCN(2,J))-(SCN(6,J)-SCN(5,J))/SCN(3,CONU-033
     1J))*SCN(3,J)/(SCN(1,J)**.5D0*SCN(2,J)**1.5D0)                     CONU-034
      IV=I-NCONT+NCOLX                                                  CONU-035
      NCI(1,I)=NIE+1                                                    CONU-036
      IF (WV(3,IV).LE.0.D0) GO TO 13                                    CONU-037
      NE=0                                                              CONU-038
      E=WV(3,IV)                                                        CONU-039
      ACN3=1.D0/ACN2                                                    CONU-040
      IF (E*ACN2.LT.1.D0) ACN3=E/1.9D0                                  CONU-041
      IF (IX.EQ.0) GO TO 2                                              CONU-042
      HREC=WV(11,IV)                                                    CONU-043
      REC=1.D0                                                          CONU-044
      IF (LO(193).AND.WV(1,1).NE.WV(1,IV)) REC=WV(2,1)/WV(2,IV)         CONU-045
      IF (LO(108)) GO TO 2                                              CONU-046
      AMT=WV(2,IV)                                                      CONU-047
      IF (LO(209)) GO TO 2                                              CONU-048
      IF (LO(44)) AMT=WV(2,1)                                           CONU-049
      AMRD=(AMR**4-(WV(1,IV)**2-AMT**2)**2)/(4.D0*AMR**3)               CONU-050
    2 IF (E.LE.0.D0) GO TO 13                                           CONU-051
      NIE=NIE+1                                                         CONU-052
      IF (NE.NE.0) GO TO 4                                              CONU-053
      IF (E.LT.ACN1*ACN3) GO TO 3                                       CONU-054
      ESTP=E/ACN1                                                       CONU-055
      GO TO 5                                                           CONU-056
    3 NE=IDINT(E/ACN3+1.D0)                                             CONU-057
      IF (NE.EQ.1) NE=2                                                 CONU-058
      ACN3=E/DFLOAT(NE)*1.000001D0                                      CONU-059
    4 ESTP=ACN3                                                         CONU-060
    5 IF (E.LT.ESTP) ESTP=E                                             CONU-061
      ECN=E-.5D0*ESTP                                                   CONU-062
      E=E-ESTP                                                          CONU-063
      IF (IX.EQ.0) GO TO 2                                              CONU-064
      DO 6 K=1,16                                                       CONU-065
    6 WVM(K,NIE)=WV(K,IV)                                               CONU-066
      DO 7 K=1,11                                                       CONU-067
    7 IPIM(K,NIE)=IPI(K,IV)                                             CONU-068
      WVM(3,NIE)=ECN                                                    CONU-069
      XD(2,NIE)=ESTP                                                    CONU-070
      IF (LO(8)) GO TO 8                                                CONU-071
      WSK2=CK*WVM(3,NIE)*AMRD                                           CONU-072
      WVM(12,NIE)=WVM(3,NIE)*(WVM(1,NIE)+WVM(2,NIE))/WVM(2,NIE)         CONU-073
      GO TO 9                                                           CONU-074
    8 WVM(2,NIE)=WV(1,1)+WV(2,1)-WVM(1,NIE)+ECN/CM                      CONU-075
      WSK2=0.125D0*CK*WVM(3,NIE)*(WVM(3,NIE)/CM+2.D0*WVM(1,NIE)+2.D0*AMTCONU-076
     1)*(WVM(3,NIE)/CM+2.D0*WVM(1,NIE))*(WVM(3,NIE)/CM+2.D0*AMT)/AMR**2 CONU-077
      WVM(12,NIE)=WVM(3,NIE)*(WVM(3,NIE)/(2.D0*CM)+WVM(1,NIE)+WVM(2,NIE)CONU-078
     1)/WVM(2,NIE)                                                      CONU-079
    9 WVM(4,NIE)=DSQRT(DABS(WSK2))                                      CONU-080
      WVM(9,NIE)=WVM(4,NIE)*REC                                         CONU-081
      WVM(8,NIE)=HREC*DSQRT(CK*AMRD)                                    CONU-082
      WVM(10,NIE)=HREC*HREC*WSK2                                        CONU-083
      IF (LO(209)) GO TO 10                                             CONU-084
      WVM(5,NIE)=0.5D0*CK*CCZ*AMRD*IPI(4,IV)/WVM(4,NIE)                 CONU-085
      GO TO 11                                                          CONU-086
   10 HPC=CHB*WVM(4,NIE)                                                CONU-087
      WVM(7,NIE)=DSQRT(HPC**2+XM**2)                                    CONU-088
      WVM(5,NIE)=CCZ*IPI(4,IV)/WVM(4,NIE)*WVM(7,NIE)/CHB**2             CONU-089
   11 LY=4+IDINT(3.3D0*DSQRT(WVM(3,NIE)))                               CONU-090
      IF (DABS(WVM(5,NIE)).GT.400.D0) GO TO 13                          CONU-091
      IPIM(10,NIE)=LY-1                                                 CONU-092
      IPIM(8,NIE)=KXT                                                   CONU-093
      KXT=KXT+LY*IPIM(2,NIE)                                            CONU-094
      IF (WV(3,1)-WVM(3,NIE).GT.SCN(6,J)) GO TO 12                      CONU-095
      XD(1,NIE)=XD(2,NIE)*DEXP((WV(3,1)-WVM(3,NIE)-SCN(5,J))/SCN(3,J))/SCONU-096
     1CN(3,J)                                                           CONU-097
      XD(3,NIE)=2.D0*SCN(4,J)**2                                        CONU-098
      GO TO 2                                                           CONU-099
   12 EXD=WV(3,1)-WVM(3,NIE)+SCN(2,J)-SCN(6,J)                          CONU-100
      EBYT=DSQRT(SCN(1,J)*EXD)                                          CONU-101
      XD(1,NIE)=XD(2,NIE)*DEXP(2.D0*EBYT)/(EBYT*EXD*SCNB)               CONU-102
      XD(3,NIE)=2.D0*SCN(4,J)**2*DSQRT(EXD/SCN(2,J))                    CONU-103
      GO TO 2                                                           CONU-104
   13 IF (IX.EQ.0) GO TO 14                                             CONU-105
      JY=NIE-NCI(1,I)+1                                                 CONU-106
      WRITE (MW,1000) I,JY                                              CONU-107
      NCI(2,I)=NIE                                                      CONU-108
   14 CONTINUE                                                          CONU-109
      RETURN                                                            CONU-110
 1000 FORMAT (' ***** START OF',I4,'TH CONTINUUM *****',5X,I5,' DISCRETICONU-111
     1SATION POINTS')                                                   CONU-112
      END                                                               CONU-113
C 01/01/04                                                      ECIS03  DISP-000
      SUBROUTINE DISP(IPI,WV,IPP,PIP,NVAL,VAL,NCOLT,LO)                 DISP-001
C COMPUTATION OF THE DEPTHS OF REAL SURFACE AND VOLUME CONTRIBUTIONS    DISP-002
C OBTAINED BY DISPERSION RELATIONS FROM THE IMAGINARY VOLUME AND        DISP-003
C SURFACE POTENTIALS. COMPUTATION OF THE CORRECTIONS TO THE IMAGINARY   DISP-004
C POTENTIALS DUE TO DIFFERENCES OF ENERGY. VARIATION OF HARTREE-FOCK ANDDISP-005
C SPIN-ORBIT POTENTIALS.                                                DISP-006
C INPUT VARIABLES: IPI(5,IV): POTENTIAL FOR THE LEVEL IV                DISP-007
C                  WV(3,IV):  CENTER OF MASS ENERGY OF THE LEVEL IV     DISP-008
C                  IPP,PIP:   EQUIVALENT BY CALL  (SEE CALX)            DISP-009
C                  NVAL,VAL:  OPTICAL POTENTIALS                        DISP-010
C                  NCOLT:     TOTAL NUMBER OF LEVELS                    DISP-011
C                  LO:        LOGICAL CONTROLS                          DISP-012
C                             LO(10) =.TRUE. USE OF DISPERSION RELATIONSDISP-013
C                             LO(209)=.TRUE. USE OF DIRAC POTENTIALS    DISP-014
C OUTPUT VARIABLES:WV(13,IV): CORR. TO VOLUME/SCALAR IMAGINARY POTENTIALDISP-015
C                  WV(14,IV): CORR. TO VOLUME/SCALAR REAL POTENTIAL     DISP-016
C                  WV(15,IV): CORR. TO SURFACE/VECTOR IMAGINARY POT.    DISP-017
C                  WV(16,IV): CORR. TO SURFACE/VECTOR REAL POTENTIAL    DISP-018
C                  WV(17,IV): CORR. TO SP-O/TENSOR IMAGINARY POTENTIAL  DISP-019
C                  WV(18,IV): CORR. TO SP-O/TENSOR REAL POTENTIAL       DISP-020
C SURFACE, J=1 FOR FIRST AND 2 FOR SECOND TERM, K=1 IMAGINARY VALUE FOR DISP-021
C REFERENCE ENERGY, 2 IMAGINARY AND 3 REAL VALUES FOR ACTUAL ENERGY     DISP-022
C***********************************************************************DISP-023
      IMPLICIT REAL*8 (A-H,O-Z)                                         DISP-024
      LOGICAL LO(250)                                                   DISP-025
      DIMENSION IPI(11,NCOLT),IPP(2,15,1),WV(18,1),WW(6),PIP(15,1),AV(2,DISP-026
     12,3),NVAL(2,34),VAL(34,1),H(2),NN(2),MM(2),BB(2),VV(3)            DISP-027
      COMMON /INOUT/ MR,MW,MS                                           DISP-028
      DATA PI /3.141592653589793D0/                                     DISP-029
      IF (.NOT.LO(216).AND.LO(10)) WRITE (MW,1000)                      DISP-030
C LOOP ON LEVELS                                                        DISP-031
      DO 34 IV=1,NCOLT                                                  DISP-032
      DO 1 I=1,6                                                        DISP-033
    1 WW(I)=0.D0                                                        DISP-034
      IPI(11,IV)=MAX0(1,IPI(11,IV))                                     DISP-035
      IF (LO(110)) GO TO 32                                             DISP-036
      IP=IPI(5,IV)                                                      DISP-037
      IF (LO(7)) GO TO 2                                                DISP-038
      VV(1)=VAL(1,IP)                                                   DISP-039
      VV(2)=VAL(4,IP)                                                   DISP-040
      VV(3)=VAL(16,IP)                                                  DISP-041
      GO TO 3                                                           DISP-042
    2 VV(1)=VAL(NVAL(1,8*IP-5),1)                                       DISP-043
      VV(2)=VAL(NVAL(1,8*IP-4),1)                                       DISP-044
      VV(3)=VAL(NVAL(1,8*IP),1)                                         DISP-045
    3 IZ=3                                                              DISP-046
      IF (IPP(1,1,IP).LT.0) IZ=12                                       DISP-047
      EF=PIP(4,IP)                                                      DISP-048
      EP=PIP(5,IP)                                                      DISP-049
      EO=EP-EF                                                          DISP-050
      YY=PIP(3,IP)-EF                                                   DISP-051
      Y=WV(IZ,IV)-EF                                                    DISP-052
C SPIN-ORBIT OR TENSOR POTENTIAL                                        DISP-053
      IF (PIP(8,IP).NE.0.D0) WW(5)=-PIP(8,IP)*(Y-YY)/VV(3)              DISP-054
      IF (PIP(7,IP).NE.0.D0) WW(6)=DEXP(-PIP(7,IP)*(Y-YY))-1.D0         DISP-055
C VOLUME/SCALAR/VECTOR FORM-FACTOR                                      DISP-056
      DO 29 I=1,2                                                       DISP-057
      N=IABS(IPP(I,2,IP))                                               DISP-058
      IF (N.EQ.0) GO TO 28                                              DISP-059
      M=N/2                                                             DISP-060
      DO 7 K=1,2                                                        DISP-061
      B=PIP(3*I+K+5,IP)                                                 DISP-062
      DO 4 L=1,3                                                        DISP-063
    4 AV(I,K,L)=0.D0                                                    DISP-064
      IF (DABS(YY).GT.EO) AV(I,K,1)=(DABS(YY)-EO)**N/((DABS(YY)-EO)**N+BDISP-065
     1**N)                                                              DISP-066
      IF (DABS(Y).GT.EO) AV(I,K,2)=(DABS(Y)-EO)**N/((DABS(Y)-EO)**N+B**NDISP-067
     1)                                                                 DISP-068
      IF (.NOT.LO(209).AND.((I.EQ.2).AND.(N.GT.0))) GO TO 30            DISP-069
      AV(I,K,3)=DLOG(DABS((Y+EO)/(Y-EO)))/PI                            DISP-070
C LOOP ON POLES IN THE UPPER PLANE                                      DISP-071
      DO 5 J=1,M                                                        DISP-072
      BT=PI*DFLOAT(2*J-1)/DFLOAT(N)                                     DISP-073
      H(1)=((Y-EO)**2+2.D0*B*(Y-EO)*DCOS(BT)+B**2)*M/B                  DISP-074
      H(2)=((Y+EO)**2-2.D0*B*(Y+EO)*DCOS(BT)+B**2)*M/B                  DISP-075
    5 AV(I,K,3)=AV(I,K,3)+DSIN(BT)*((Y+EO)/H(2)+(Y-EO)/H(1))*DFLOAT(2*J-DISP-076
     11)/DFLOAT(N)+((DCOS(BT)*(Y-EO)+B)*DLOG(DABS(Y-EO)/B)/H(1)+(DCOS(BTDISP-077
     2)*(Y+EO)-B)*DLOG(DABS(Y+EO)/B)/H(2))/PI                           DISP-078
      IF (N.EQ.IPP(I,2,IP)) GO TO 8                                     DISP-079
      IF (K.EQ.1) GO TO 7                                               DISP-080
C SUM OR DIFFERENCE OF TWO VOLUME TERMS                                 DISP-081
      DO 6 J=1,3                                                        DISP-082
    6 AV(I,1,J)=PIP(3*I+8,IP)*AV(I,1,J)+(1.D0-PIP(3*I+8,IP))*AV(I,2,J)  DISP-083
    7 CONTINUE                                                          DISP-084
    8 IF ((N.LT.0).OR.(I.EQ.2)) GO TO 27                                DISP-085
C VOLUME CORRECTION FOR LARGE ENERGY CONTRIBUTIONS                      DISP-086
      EA=PIP(6,IP)                                                      DISP-087
      IF (EA.EQ.0.D0) GO TO 27                                          DISP-088
      CN=PIP(11,IP)                                                     DISP-089
      N2=IPP(2,1,IP)                                                    DISP-090
      IF (N2.EQ.0) GO TO 17                                             DISP-091
C LARGE NEGATIVE ENERGIES                                               DISP-092
      AV(1,2,1)=0.D0                                                    DISP-093
      AV(1,2,2)=0.D0                                                    DISP-094
      IF (YY.LT.-EA) AV(1,2,1)=-AV(1,1,1)*(YY+EA)**N2/((YY+EA)**N2+EA**NDISP-095
     12)*DEXP(CN*(DSQRT(EA+EF)-DSQRT(-YY+EF)))                          DISP-096
      IF (Y.LT.-EA) AV(1,2,2)=-AV(1,1,2)*(Y+EA)**N2/((Y+EA)**N2+EA**N2)*DISP-097
     1DEXP(CN*(DSQRT(EA+EF)-DSQRT(-Y+EF)))                              DISP-098
      M2=N2/2                                                           DISP-099
      NN(1)=N                                                           DISP-100
      MM(1)=M                                                           DISP-101
      BB(1)=B                                                           DISP-102
      NN(2)=N2                                                          DISP-103
      MM(2)=M2                                                          DISP-104
      BB(2)=EA                                                          DISP-105
      IF (CN.NE.0.D0) GO TO 9                                           DISP-106
C NO DAMPING FACTOR                                                     DISP-107
      H(1)=DLOG(DMAX1(DABS(Y+EA),1.D-4))                                DISP-108
      H(2)=DLOG(EA)                                                     DISP-109
      GO TO 11                                                          DISP-110
    9 YE=CN*DSQRT(EA+EF)                                                DISP-111
C DAMPING FACTOR                                                        DISP-112
      YD=EF-Y                                                           DISP-113
      DO 10 L=1,2                                                       DISP-114
      YC=CN*DSQRT(DABS(YD))                                             DISP-115
      YR=0.D0                                                           DISP-116
      YI=0.D0                                                           DISP-117
      IF (YD.GE.0.D0) YR=YC                                             DISP-118
      IF (YD.LT.0.D0) YI=YC                                             DISP-119
      CALL DCEI(YE+YR,YI,CR,CI)                                         DISP-120
      CALL DCEI(YE-YR,-YI,BR,BI)                                        DISP-121
      H(L)=-CR-BR                                                       DISP-122
   10 YD=YD+Y                                                           DISP-123
   11 AV(1,2,3)=H(2)-H(1)                                               DISP-124
      DO 16 L=1,2                                                       DISP-125
      DO 15 J=1,MM(L)                                                   DISP-126
      BT=PI*DFLOAT(2*J-1)/DFLOAT(NN(L))                                 DISP-127
      ZZ=DATAN2(-BB(L)*DSIN(BT),EA-EO-BB(L)*DCOS(BT))                   DISP-128
      ZR=(EA-EO)**2-2.D0*(EA-EO)*DCOS(BT)*BB(L)+BB(L)**2                DISP-129
      DR=ZR**MM(3-L)*DCOS(NN(3-L)*ZZ)+BB(3-L)**NN(3-L)                  DISP-130
      DI=ZR**MM(3-L)*DSIN(NN(3-L)*ZZ)                                   DISP-131
      DD=DR**2+DI**2                                                    DISP-132
      CR=1.D0-BB(3-L)**NN(3-L)*DR/DD                                    DISP-133
      CI=BB(3-L)**NN(3-L)*DI/DD                                         DISP-134
      BR=BB(L)*(CR*DCOS(BT)-CI*DSIN(BT))                                DISP-135
      BI=BB(L)*(CR*DSIN(BT)+CI*DCOS(BT))                                DISP-136
      DE=-BB(L)*DSIN(BT)                                                DISP-137
      IF (CN.NE.0.D0) GO TO 12                                          DISP-138
C NO DAMPING FACTOR                                                     DISP-139
      IF (L.EQ.1) ZT=ZZ                                                 DISP-140
      IF (L.EQ.2) ZT=BT                                                 DISP-141
      IF (L.EQ.1) DF=DLOG(ZR)/2.D0                                      DISP-142
      IF (L.EQ.2) DF=DLOG(EA)                                           DISP-143
      GO TO 13                                                          DISP-144
   12 IF (L.EQ.1) XR=EP+BB(1)*DCOS(BT)                                  DISP-145
C DAMPING FACTOR                                                        DISP-146
      IF (L.EQ.2) XR=EA+EF-BB(2)*DCOS(BT)                               DISP-147
      XI=BB(L)*DSIN(BT)                                                 DISP-148
      IF (L.EQ.2) XI=-XI                                                DISP-149
      YC=CN*(XR**2+XI**2)**.25D0                                        DISP-150
      YD=DATAN2(XI,XR)/2.D0                                             DISP-151
      YR=YC*DCOS(YD)                                                    DISP-152
      YI=YC*DSIN(YD)                                                    DISP-153
      CALL DCEI(YE+YR,YI,CR,CI)                                         DISP-154
      CALL DCEI(YE-YR,-YI,DR,DI)                                        DISP-155
      DF=-CR-DR                                                         DISP-156
      ZT=-CI-DI                                                         DISP-157
   13 IF (L.EQ.1) DC=-Y-EO-BB(L)*DCOS(BT)                               DISP-158
      IF (L.EQ.2) DC=Y+EA-BB(L)*DCOS(BT)                                DISP-159
      DO 14 K=1,2                                                       DISP-160
      DD=-(DC**2+DE**2)*DFLOAT(MM(L))                                   DISP-161
      AV(1,2,3)=-AV(1,2,3)+(BR*((DF-H(K))*DC+ZT*DE)-BI*(ZT*DC-(DF-H(K))*DISP-162
     1DE))/DD                                                           DISP-163
   14 DC=DC-Y*DFLOAT(2*L-3)                                             DISP-164
   15 CONTINUE                                                          DISP-165
   16 CONTINUE                                                          DISP-166
      AV(1,2,3)=AV(1,2,3)/PI                                            DISP-167
      AV(1,1,1)=AV(1,1,1)+AV(1,2,1)                                     DISP-168
      AV(1,1,2)=AV(1,1,2)+AV(1,2,2)                                     DISP-169
      AV(1,1,3)=AV(1,1,3)+AV(1,2,3)                                     DISP-170
   17 IF (PIP(10,IP).EQ.0.D0) GO TO 27                                  DISP-171
C LARGE POSITIVE ENERGY TERM                                            DISP-172
      EL=EF+EA                                                          DISP-173
      ELL=DSQRT(EL)                                                     DISP-174
      AV(1,2,1)=0.D0                                                    DISP-175
      AV(1,2,2)=0.D0                                                    DISP-176
      IF (YY.GT.EA) AV(1,2,1)=(DSQRT(YY+EF)+ELL*(EL/(YY+EF)-3.D0)/2.D0)*DISP-177
     1DEXP(-CN*(DSQRT(YY+EF)-ELL))                                      DISP-178
      IF (Y.GT.EA) AV(1,2,2)=(DSQRT(Y+EF)+ELL*(EL/(Y+EF)-3.D0)/2.D0)*DEXDISP-179
     1P(-CN*(DSQRT(Y+EF)-ELL))                                          DISP-180
      IF (CN.NE.0.D0) GO TO 21                                          DISP-181
C NO DAMPING FACTOR                                                     DISP-182
      F=Y+EF                                                            DISP-183
      IF (F.EQ.EL) F=EL+.000001D0                                       DISP-184
      FE=DSQRT(-EF)                                                     DISP-185
      AX=F/EL                                                           DISP-186
      IF (DABS(AX).GT.1.D-4) GO TO 18                                   DISP-187
      G2=.5D0*(1.D0+1.5D0*AX*(1.D0+AX/9.D0*(1.D0+.3D0*AX)))             DISP-188
      GO TO 20                                                          DISP-189
   18 G2=-(1.D0/AX-3.D0)*DLOG(DABS(1.D0-AX))/2.D0                       DISP-190
      BX=DSQRT(DABS(AX))                                                DISP-191
      IF (F.LT.0.D0) GO TO 19                                           DISP-192
      G2=G2-DLOG(DABS(1.D0-BX)/(1.D0+BX))*BX                            DISP-193
      GO TO 20                                                          DISP-194
   19 G2=G2-2.D0*BX*DATAN2(BX,1.D0)                                     DISP-195
   20 G2=G2+1.5D0*DLOG(EL)                                              DISP-196
      G1=DATAN2(FE,ELL)*FE/ELL*2.D0+(EL/EF*DLOG(EA/EL)-3.D0*DLOG(EA))/2.DISP-197
     1D0                                                                DISP-198
      AV(1,2,3)=(G1+G2)*ELL/PI                                          DISP-199
      GO TO 25                                                          DISP-200
C DAMPING FACTOR                                                        DISP-201
   21 AX=CN*ELL                                                         DISP-202
      F=Y+EF                                                            DISP-203
      AV(1,2,3)=0.D0                                                    DISP-204
      CALL DCEI(AX,0.D0,B0,B1)                                          DISP-205
      DO 24 K=1,2                                                       DISP-206
      FF=CN**2*F                                                        DISP-207
      ZF=DSQRT(DABS(FF))                                                DISP-208
      ZR=0.D0                                                           DISP-209
      ZI=0.D0                                                           DISP-210
      IF (FF.GE.0.D0) ZR=ZF                                             DISP-211
      IF (FF.LT.0.D0) ZI=ZF                                             DISP-212
      CALL DCEI(AX-ZR,-ZI,E1,B1)                                        DISP-213
      CALL DCEI(AX+ZR,ZI,E2,B2)                                         DISP-214
      IF (DABS(ZF).GT.DMIN1(AX,512.D0)/4096.D0) GO TO 22                DISP-215
      E0=(B0-1.D0/AX+1.D0/AX**2)*(1.D0+FF/6.D0*(1.D0+FF/60.D0))-FF/(3.D0DISP-216
     1*AX**3)*((1.D0-3.D0/AX)*(1.D0+FF/30.D0)+FF*(1.D0-10.D0/AX)/(10.D0*DISP-217
     2AX**2))                                                           DISP-218
      GO TO 23                                                          DISP-219
   22 E0=(E1+E2-2*B0)/FF                                                DISP-220
   23 AV(1,2,3)=-AV(1,2,3)-(AX*(AX**2*E0-3.D0*(E1+E2))/2.D0+2.D0+ZR*(E1-DISP-221
     1E2)-ZI*(B1-B2))/CN/PI                                             DISP-222
      H(K)=(AX*(AX**2*E0-3.D0*(E1+E2))/2.D0+2.D0+ZR*(E1-E2)-ZI*(B1-B2))/DISP-223
     1CN/PI                                                             DISP-224
   24 F=EF                                                              DISP-225
C THE LAST COMPUTED TERM BEING FIXED, IT MUST BE SUBTRACTED TO THE      DISP-226
C STRENGTH OF VOLUME IMAGINARY POTENTIAL TO OBTAIN THE COEFFICIENT X    DISP-227
C OF THE OTHER TERM:  X * AV(1,1,K) + AV(1,2,K) = Y WHERE Y IS THE GIVENDISP-228
C STRENGTH OF IMAGINARY VOLUME POTENTIAL FOR K=1, THE COMPUTED STRENGTHSDISP-229
C OF THE IMAGINARY AND REAL VOLUME POTENTIAL FOR K=2 AND 3 RESPECTIVELY DISP-230
   25 XX=(VV(2)-AV(1,2,1)*PIP(10,IP))/AV(1,1,1)                         DISP-231
      DO 26 K=1,3                                                       DISP-232
   26 AV(1,1,K)=XX*AV(1,1,K)+PIP(10,IP)*AV(1,2,K)                       DISP-233
   27 WW(2*I-1)=AV(I,1,2)/AV(I,1,1)-1.D0                                DISP-234
      WW(2*I)=AV(I,1,3)/AV(I,1,1)                                       DISP-235
   28 IF ((I.EQ.1).AND.(PIP(15,IP).NE.0.D0)) WW(2)=WW(2)+VV(1)*(DEXP(-PIDISP-236
     1P(15,IP)*(Y-YY))-1.D0)/VV(2)                                      DISP-237
   29 CONTINUE                                                          DISP-238
      GO TO 32                                                          DISP-239
C SURFACE FORM-FACTOR                                                   DISP-240
   30 CS=PIP(13,IP)                                                     DISP-241
      CN=PIP(14,IP)                                                     DISP-242
      AV(2,1,1)=AV(2,1,1)*DEXP(-CN*YY-CS*DABS(YY))                      DISP-243
      AV(2,1,2)=AV(2,1,2)*DEXP(-CN*Y-CS*DABS(Y))                        DISP-244
      WW(3)=AV(2,1,2)/AV(2,1,1)-1.D0                                    DISP-245
      H(1)=0.D0                                                         DISP-246
      H(2)=0.D0                                                         DISP-247
      CALL DCEI((CS+CN)*(EO-Y),0.D0,P2,P)                               DISP-248
      CALL DCEI((CS-CN)*(EO+Y),0.D0,P4,P)                               DISP-249
      M=N/2                                                             DISP-250
C LOOP ON POLES IN THE COMPLEX UPPER PLANE                              DISP-251
      DO 31 I=1,M                                                       DISP-252
      A3=PI*DFLOAT(2*I-1)/DFLOAT(N)                                     DISP-253
      AY=B*DCOS(A3)                                                     DISP-254
      AZ=B*DSIN(A3)                                                     DISP-255
      CALL DCEI((CS+CN)*AY,(CS+CN)*AZ,BR,BI)                            DISP-256
      CR=P2*(Y-EO)+BR*AY-BI*AZ                                          DISP-257
      CI=BR*AZ+BI*AY                                                    DISP-258
      H(1)=H(1)+(CR*(Y-EO+AY)+CI*AZ)/((Y-EO+AY)**2+AZ**2)               DISP-259
      CALL DCEI((CS-CN)*AY,(CS-CN)*AZ,BR,BI)                            DISP-260
      CR=-P4*(Y+EO)+BR*AY-BI*AZ                                         DISP-261
      CI=BR*AZ+BI*AY                                                    DISP-262
   31 H(2)=H(2)+(CR*(Y+EO-AY)-CI*AZ)/((Y+EO-AY)**2+AZ**2)               DISP-263
      AV(2,1,3)=(DEXP(-(CS+CN)*EO)*H(1)+DEXP(-(CS-CN)*EO)*H(2))/(PI*DFLODISP-264
     1AT(M))                                                            DISP-265
      WW(4)=AV(2,1,3)/AV(2,1,1)                                         DISP-266
   32 DO 33 I=1,6                                                       DISP-267
   33 WV(I+12,IV)=WW(I)                                                 DISP-268
      IF (.NOT.LO(216).AND.LO(10)) WRITE (MW,1001) IV,IP,PIP(3,IP),WV(IZDISP-269
     1,IV),WW                                                           DISP-270
   34 CONTINUE                                                          DISP-271
      RETURN                                                            DISP-272
 1000 FORMAT (' LEVEL  POT. REF. ENER.     ENERGY  VOLUME/SCALAR CORRECTDISP-273
     1ION SURFACE/VECTOR CORRECTION   SP.-O/TENSOR CORRECTION'/34X,3(4X,DISP-274
     2'IMAGINARY',9X,'REAL'))                                           DISP-275
 1001 FORMAT (2I6,2F11.4,6F13.6)                                        DISP-276
      END                                                               DISP-277
C 01/01/04                                                      ECIS03  DCEI-000
      SUBROUTINE DCEI(AR,AI,ZR,ZI)                                      DCEI-001
C COMPLEX EXPONENTIAL INTEGRAL FUNCTION MULTIPLIED BY EXPONENTIAL FOR   DCEI-002
C COMPLEX ARGUMENT: EXP(Z)*EI(Z)                                        DCEI-003
C***********************************************************************DCEI-004
      IMPLICIT REAL*8 (A-H,O-Z)                                         DCEI-005
      ZR=0.D0                                                           DCEI-006
      ZI=0.D0                                                           DCEI-007
      IF ((AR.EQ.0.D0).AND.(AI.EQ.0.D0)) RETURN                         DCEI-008
      IF (DABS(AR)+18.5D0.GE.32.D0) GO TO 3                             DCEI-009
      IF (DSQRT(1024.D0-(AR+18.5D0)**2)/1.665D0.LT.DABS(AI)) GO TO 3    DCEI-010
C SERIES EXPANSION                                                      DCEI-011
      ZR=-.57721566490153D0-DLOG(AR**2+AI**2)*0.5D0                     DCEI-012
      ZI=-DATAN2(AI,AR)                                                 DCEI-013
      YR=1.D0                                                           DCEI-014
      YI=0.D0                                                           DCEI-015
      DO 1 M=1,2000                                                     DCEI-016
      AJ=DFLOAT(M)                                                      DCEI-017
      YZ=YR                                                             DCEI-018
      YR=-(YZ*AR-YI*AI)/AJ                                              DCEI-019
      YI=-(YZ*AI+YI*AR)/AJ                                              DCEI-020
      IF (YR**2+YI**2.LT.1.D-30*(AR**2+AI**2)) GO TO 2                  DCEI-021
      ZR=ZR-YR/AJ                                                       DCEI-022
    1 ZI=ZI-YI/AJ                                                       DCEI-023
    2 YR=DEXP(AR)                                                       DCEI-024
      YI=YR*ZI                                                          DCEI-025
      YR=YR*ZR                                                          DCEI-026
      ZR=YR*DCOS(AI)-YI*DSIN(AI)                                        DCEI-027
      ZI=YI*DCOS(AI)+YR*DSIN(AI)                                        DCEI-028
      RETURN                                                            DCEI-029
C CONTINUED FRACTION                                                    DCEI-030
    3 DO 4 I=1,20                                                       DCEI-031
      AJ=DFLOAT(21-I)                                                   DCEI-032
      ZR=ZR+AR                                                          DCEI-033
      ZI=ZI+AI                                                          DCEI-034
      Z=ZR**2+ZI**2                                                     DCEI-035
      ZR=AJ*ZR/Z                                                        DCEI-036
      ZI=-AJ*ZI/Z                                                       DCEI-037
      ZR=ZR+1.D0                                                        DCEI-038
      Z=ZR**2+ZI**2                                                     DCEI-039
      ZR=AJ*ZR/Z                                                        DCEI-040
    4 ZI=-AJ*ZI/Z                                                       DCEI-041
      ZR=ZR+AR                                                          DCEI-042
      ZI=ZI+AI                                                          DCEI-043
      Z=ZR**2+ZI**2                                                     DCEI-044
      ZR=ZR/Z                                                           DCEI-045
      ZI=-ZI/Z                                                          DCEI-046
      RETURN                                                            DCEI-047
      END                                                               DCEI-048
C 01/01/04                                                      ECIS03  GGDR-000
      SUBROUTINE GGDR(IPI,WV,SCN,LO)                                    GGDR-001
C GIANT DIPOLE RESONANCE RELATED CALCULATIONS                           GGDR-002
C INPUT VARIABLES: IPI(J,*):PRODUCT OF CHARGES FOR J=4                  GGDR-003
C                  WV(J,*): MASS OF PARTICLE AND TARGET FOR J=1,2       GGDR-004
C                           CENTER OF MASS ENERGY IN MEV FOR J=3        GGDR-005
C                  SCN:     DESCRIPTIONS OF LEVEL DENSITIES             GGDR-006
C                  LO:      LOGICAL CONTROLS                            GGDR-007
C FOR COMMON /NCOMP/ SEE CALX, LECT AND COLF                            GGDR-008
C IN COMMON /NCOMP/NRD,NFISS: NUMBER OF GAMMA AND FISSION TRANSMISSION  GGDR-009
C                             COEFFICIENTS READ IN LECT                 GGDR-010
C                  TG0,BN,FNUG,EGD,GGD:  NEUTRON BINDING ENERGY         GGDR-011
C                           GIANT DIPOLE RESONANCE ENERGY AND WIDTH ....GGDR-012
C                  IPI(J,I): FOR I=NCOLL+1 TO NCOLT, MAXIMUM L+1 AND    GGDR-013
C IN COMMON /NCOMP/EGD,GGD: ENERGY AND WIDTH OF GIANT DIPOLE RESONANCE  GGDR-014
C                  TG1,SGSQ  .........                                  GGDR-015
C IN SCN:  1-SA  2-UX   3-TAU  4-SG   5-E0   6-EX   7-NZ  8-B           GGDR-016
C***********************************************************************GGDR-017
      IMPLICIT REAL*8 (A-H,O-Z)                                         GGDR-018
      LOGICAL LO(250)                                                   GGDR-019
      DIMENSION WV(18,1),IPI(11,3),SCN(7)                               GGDR-020
      COMMON /NCOMP/ NSP(4),NRD,NCOJ(7),ACN(8),BZ(5),TG0,BN,FNUG,EGD,GGDGGDR-021
     1,TG1,SGSQ                                                         GGDR-022
      COMMON /INOUT/ MR,MW,MS                                           GGDR-023
      IF (LO(181)) RETURN                                               GGDR-024
      BZ(2)=DABS(BZ(2))                                                 GGDR-025
      IF (LO(82)) BZ(3)=BZ(1)*BZ(1)-1.D0                                GGDR-026
      IF (.NOT.(LO(212).OR.LO(215))) RETURN                             GGDR-027
C  GAMMA RAY INPUT                                                      GGDR-028
      IF (LO(186).OR.(NRD.NE.0)) RETURN                                 GGDR-029
      XFR=0.5D0                                                         GGDR-030
      NA=IDINT(WV(2,1)+WV(1,1)+.5D0)                                    GGDR-031
      AA=DFLOAT(NA)                                                     GGDR-032
      NZ=IDINT(SCN(7)+.1D0)                                             GGDR-033
      NN=NA-NZ                                                          GGDR-034
      ZZ=DFLOAT(NZ*NN)                                                  GGDR-035
      KGD=0                                                             GGDR-036
      IF (EGD.EQ.0.D0) EGD=163.D0*DSQRT(ZZ)/(AA**1.3333333D0)           GGDR-037
      IF (EGD.LT.0.D0) GO TO 1                                          GGDR-038
      KGD=1                                                             GGDR-039
      IF (GGD.LE.0.D0) GGD=5.D0                                         GGDR-040
    1 IF (.NOT.LO(216)) WRITE (MW,1000) NA,NZ,NN,BN,FNUG,SCN(4)         GGDR-041
      ATG0=DABS(TG0)                                                    GGDR-042
      IF (.NOT.LO(216)) WRITE (MW,1001) ATG0                            GGDR-043
      IF (KGD.EQ.0.AND..NOT.LO(216)) WRITE (MW,1002)                    GGDR-044
      IF (KGD.EQ.1.AND..NOT.LO(216)) WRITE (MW,1003) EGD,GGD,XFR        GGDR-045
      SGSQ=2.D0*SCN(4)**2                                               GGDR-046
      ROJ=0.D0                                                          GGDR-047
      ECM=0.D0                                                          GGDR-048
    2 TG=0.D0                                                           GGDR-049
      ELIM=BN+ECM                                                       GGDR-050
      ELO=0.D0                                                          GGDR-051
    3 EHI=ELO+0.05D0                                                    GGDR-052
      IF (EHI.GE.ELIM) EHI=ELIM                                         GGDR-053
      EPS=(EHI+ELO)/2.D0                                                GGDR-054
      ESQ=EPS*EPS                                                       GGDR-055
      TINT=(EHI-ELO)*EPS*ESQ                                            GGDR-056
      EEE=-EGD*EGD+ESQ                                                  GGDR-057
      IF (KGD.EQ.1) TINT=TINT*EPS/(ESQ*GGD*GGD+EEE*EEE)                 GGDR-058
      EXC=BN+ECM-EPS                                                    GGDR-059
      IF (EXC.GT.SCN(6)) GO TO 4                                        GGDR-060
      EBYT=(EXC-SCN(5))/SCN(3)                                          GGDR-061
      TINT=TINT*DEXP(EBYT)/SCN(3)                                       GGDR-062
      GO TO 5                                                           GGDR-063
    4 EXD=EXC+SCN(2)-SCN(6)                                             GGDR-064
      EBYT=DSQRT(SCN(1)*EXD)                                            GGDR-065
      SCNB=DEXP(2.D0*DSQRT(SCN(1)*SCN(2))-(SCN(6)-SCN(5))/SCN(3))*SCN(3)GGDR-066
     1/(SCN(1)**.5D0*SCN(2)**1.5D0)                                     GGDR-067
      TINT=TINT*DEXP(2.D0*EBYT)/(EBYT*EXD*SCNB)                         GGDR-068
    5 TG=TG+TINT                                                        GGDR-069
      IF (EHI.EQ.ELIM) GO TO 6                                          GGDR-070
      ELO=EHI                                                           GGDR-071
      GO TO 3                                                           GGDR-072
    6 IF (ECM.NE.0.D0) GO TO 9                                          GGDR-073
      TEMP=TG                                                           GGDR-074
      ID=IPI(3,1)-1                                                     GGDR-075
      N1=IABS(ID-1)                                                     GGDR-076
      N2=ID+1                                                           GGDR-077
      DO 8 I=N1,N2,2                                                    GGDR-078
      N3=IABS(I-2)                                                      GGDR-079
      N4=I+2                                                            GGDR-080
      DO 7 J=N3,N4,2                                                    GGDR-081
      DEX=-DFLOAT(J+1)**2/(SGSQ*4.D0)                                   GGDR-082
    7 ROJ=ROJ+DEXP(DEX)*DFLOAT(J+1)/SGSQ                                GGDR-083
    8 CONTINUE                                                          GGDR-084
      CTG=ATG0/(TEMP*ROJ)                                               GGDR-085
      ECM=WV(3,1)                                                       GGDR-086
      GO TO 2                                                           GGDR-087
    9 TG1=TG*CTG                                                        GGDR-088
      RETURN                                                            GGDR-089
 1000 FORMAT (/'    GAMMA RAY CHANNEL PARAMETERS :'//'   A=',I3,'  Z=',IGGDR-090
     13,'  N=',I3,5X,F9.3,' MEV  NEUTRON BINDING',5X,F6.2,' RADIATIVE D.GGDR-091
     2 OF F.',5X,'SIGMA=',F6.3)                                         GGDR-092
 1001 FORMAT ('   NORMALISED TO SLOW S-WAVE NEUTRON GAMMA WIDTHS/SPACINGGGDR-093
     1S =',D12.4)                                                       GGDR-094
 1002 FORMAT ('   E1 STRONG COUPLING MODEL')                            GGDR-095
 1003 FORMAT ('   E1 GIANT RESONANCE AT ',F7.2,' MEV   WIDTH=',F7.2,' MEGGDR-096
     1V',5X,'EXCHANGE FRACTION=',F5.2)                                  GGDR-097
      END                                                               GGDR-098
C 01/01/04                                                      ECIS03  CAL1-000
      SUBROUTINE CAL1(NW,CW,DW,LO)                                      CAL1-001
C THIS SUBROUTINE COMPUTES FORM FACTORS (POTE), LOOKS FOR QUANTUM       CAL1-002
C NUMBERS (QUAN), CHECKS FOR CONVERGENCE WITH RESPECT TO TOTAL SPIN,    CAL1-003
C COMPUTES HELICITY AMPLITUDES (SCHE) AND COMPUTES CHI2 (RESU)          CAL1-004
C THE ARGUMENTS ARE THE WORKING SPACE W, IN EQUIVALENCE BY CALL WITH NW CAL1-005
C AND DW AND THE ARRAY OF LOGICAL CONTROLS LO. THE COMMON /NOEQ/ IS NOT CAL1-006
C USED OUTSIDE THIS SUBROUTINE AND THE SUBROUTINES CALLED BY IT.        CAL1-007
C NPLACE IS THE MAXIMUM WORKING SPACE USED                              CAL1-008
C***********************************************************************CAL1-009
      IMPLICIT REAL*8 (A-H,O-Z)                                         CAL1-010
      LOGICAL LO(250)                                                   CAL1-011
      CHARACTER*4 CW(2,1)                                               CAL1-012
      CHARACTER*1 JP                                                    CAL1-013
      DIMENSION NW(2,2),DW(1)                                           CAL1-014
      COMMON /DECOU/ NJIT,NIPP,NPAA,NWV,NIPH,NSCN,NPAR,NNIV,NFIS,NGAM,NPCAL1-015
     1OT,NBETA,NFM,NTGX,NDONN,NRC,NIW,NDE,NISE,NNVI,NNWI,NCC,MCC,NXA,NAMCAL1-016
     21,NFAC,NFAM,NPAD,NFG,NXG,NSM,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,CAL1-017
     3NXD,MWV,NIXT,NTY,NTX,NRY,NRCO,NRDO,NVC1,NVC2,NNC,NCX,IDMT,NCOLL,NJCAL1-018
     4MAX,ITERM,NPP,JDM,JIT,NSEC,LMD,MCM(2),NCOLS,NCOLT,KMAX,KMIN,NVA,NBCAL1-019
     5ET,NBT1,LMX,LMAX1,NLT,ISM,IQM,IQMAX,MS1,MS2,NCT(6),KBA,KAB,KBC,KCCCAL1-020
     6,NJC,JTX,JTH,NCOLR,NREC,NTOT,NFA,LMAX2,KE,ITEMM,NPLACE,KXT,NRZ,NTZCAL1-021
     7,LMAX3,IPM,IPK,BJM,EITER,ACONV,CONJ,H,NSPIN                       CAL1-022
      COMMON /POTE2/ ITY(8),INVT,INTV,INSL,NPX                          CAL1-023
      COMMON /NCOMP/ NSP(5),NCONT,NCOJ(3),NCOLX,NDP,NDQ,ACN(20)         CAL1-024
      COMMON /NOEQU/ NCXN,NIC,NCI,NC,NCIN,NIN,JPI,IPJ,R1(2),NAJ         CAL1-025
      COMMON /DCONS/ CM,CK,CHB,CMB,CCZ                                  CAL1-026
      COMMON /DCONT/ XE,XM,XN,XZ                                        CAL1-027
      COMMON /INOUT/ MR,MW,MS                                           CAL1-028
      JMIN=MOD(NW(2,1)+NW(1,2),2)                                       CAL1-029
      NR5=NNC                                                           CAL1-030
      NWW=NR5+2*KAB                                                     CAL1-031
      NXC=NWW+4*ISM*KAB                                                 CAL1-032
      IF (LO(220).AND.LO(151)) GO TO 2                                  CAL1-033
      IF (LO(219)) GO TO 22                                             CAL1-034
      IF (LO(100)) NXC=NXC+4*ISM*KAB                                    CAL1-035
      IF (LO(21)) NXC=NNC                                               CAL1-036
      ID1=IDMT-NCX                                                      CAL1-037
C COMPUTATION OF POTENTIALS AND FORM FACTORS                            CAL1-038
      N=NCX-1                                                           CAL1-039
      DO 1 I=NRCO,N                                                     CAL1-040
    1 DW(I)=0.D0                                                        CAL1-041
      CALL POTE(DW(NBETA),NW(1,NBETA),DW(NVC1),NW(1,NIVQ),NW(1,NIVY),NW(CAL1-042
     11,NIVZ),DW(NCX),NW(1,NCX),DW(NPOT),NW(1,NPOT),DW(NRCO),DW(NRDO),DWCAL1-043
     2(NWV),DW(MWV),ACONV,ISM,NCOLL,NCOLX-NCONT,NCOLT,ID1,NW,NW(1,MIPI),CAL1-044
     3NW(1,NIPP),DW(NIXT),IQM,NPP,NBT1,MCM,CHB,CCZ,LO)                  CAL1-045
    2 IF (LO(220)) GO TO 22                                             CAL1-046
      NPLACE=MAX0(NPLACE,NXC+ID1)                                       CAL1-047
      JPI=0                                                             CAL1-048
      IP1=1                                                             CAL1-049
      IF (LO(223)) IP1=2                                                CAL1-050
      NPT=0                                                             CAL1-051
      N=NTY+NTZ-1                                                       CAL1-052
      DO 3 I=NTY,N                                                      CAL1-053
    3 DW(I)=0.D0                                                        CAL1-054
      IF (LO(181).OR.LO(82)) GO TO 4                                    CAL1-055
      NX=NNC+2*ISM                                                      CAL1-056
      N=NX+2*(ISM+2)                                                    CAL1-057
      IF (N.GT.IDMT) CALL MEMO('CAL1',IDMT,N,1)                         CAL1-058
      NPLACE=MAX0(NPLACE,N)                                             CAL1-059
C LOOP ON THE PARITIES  JPI IS THE PARITY (0 OR 1)                      CAL1-060
    4 IPJ=1                                                             CAL1-061
      LO(227)=.FALSE.                                                   CAL1-062
      LO(232)=LO(181)                                                   CAL1-063
      ITERM=ITEMM                                                       CAL1-064
      DO 5 K=1,KAB                                                      CAL1-065
    5 NW(K,NCC)=0                                                       CAL1-066
C LOOP ON THE VALUES OF J                                               CAL1-067
C SEARCH FOR QUANTUM NUMBERS AND COUPLING COEFFICIENTS                  CAL1-068
    6 LO(225)=LO(21)                                                    CAL1-069
      NAJ=JMIN+2*IPJ-2                                                  CAL1-070
      AJ=0.5D0*DFLOAT(NAJ)                                              CAL1-071
      ITERR=0                                                           CAL1-072
    7 CALL QUAN(NCOLL,DW(NWV),NW,NW(1,NNIV),NW(1,NT),DW(NT),NW(1,NIVQ),NCAL1-073
     1W(1,NIVZ),NW(1,NCC),NW(1,NXC),DW(NXC),IU,NW(1,NNVI),KAB,KBC,DW(NXACAL1-074
     2),DW(NFAC),NFA,IDMT-NXC-200,LMD,LO)                               CAL1-075
      IF (NCIN.EQ.0) GO TO 15                                           CAL1-076
      NX=NXC+IU*LMD                                                     CAL1-077
      IPX=IPJ                                                           CAL1-078
      LO(232)=LO(232).OR.IPJ.GT.KMAX                                    CAL1-079
      NX1=NX                                                            CAL1-080
      NCXN=NCIN                                                         CAL1-081
      IF (LO(224)) NCXN=NC                                              CAL1-082
      NWR=2*NX1+20*KAB*KAB-1                                            CAL1-083
      IF (NWR+10*KAB**2.GT.IDMT) CALL MEMO('CAL1',IDMT,NWR+10*KAB**2,1) CAL1-084
      CALL MTCH(NW(1,NNWI),NCOLL,KAB,DW(NWV),NW(1,MCC),DW(NXG),NW(1,NXC)CAL1-085
     1,DW(NXC),DW(NX1),ISM,LMAX2,NW(1,NNIV),NW(1,NIVZ),DW(NFG),LMAX1,LMACAL1-086
     2X3,NW(1,NWR),DW(NRCO),DW(NRDO),DW(NFAM),LMD,BJM,CHB,XM,LO)        CAL1-087
      IF (LO(227)) GO TO 12                                             CAL1-088
      IF (LO(44)) NX=NX+4*KAB*KAB                                       CAL1-089
      IF (LO(74)) CALL HORA                                             CAL1-090
C  NX  FIRST ADDRESS WHICH CAN BE USED                                  CAL1-091
      IF (LO(225)) GO TO 12                                             CAL1-092
C ITERATIONS                                                            CAL1-093
      NFAR=NFAM+8*KAB                                                   CAL1-094
      NFAI=NFAR+NCXN*KAB                                                CAL1-095
      IF (LO(100)) GO TO 8                                              CAL1-096
      NWR=2*NX+4*(ISM+2)-1                                              CAL1-097
      NR4=NWR+2*NC*ISM                                                  CAL1-098
      IF (LO(210)) NR4=NWR+4*NC*ISM                                     CAL1-099
      N=NR4+2*ISM                                                       CAL1-100
      GO TO 9                                                           CAL1-101
    8 NWR=NX+2*(ISM+2)                                                  CAL1-102
      NR4=NWR+4*NC*ISM                                                  CAL1-103
      NIN=4*NIN                                                         CAL1-104
C  N IS THE FIRST FREE ADDRESS AND NIN THE NUMBER OF COUPLING POTENTIALSCAL1-105
C WHICH CAN BE STORED                                                   CAL1-106
      N=NR4+4*ISM                                                       CAL1-107
    9 N3=N                                                              CAL1-108
      IF (N.GT.IDMT) CALL MEMO('CAL1',IDMT,(N+1)/2,1)                   CAL1-109
      LO(207)=LO(124).AND.ITERM.GT.1                                    CAL1-110
      IF (BJM.NE.0.D0) NIN=NIN+NC                                       CAL1-111
      IF (LO(207)) N3=N3+NIN*ISM                                        CAL1-112
      IF (LO(54)) WRITE (MW,1000) N3,AJ                                 CAL1-113
      IF (N3.LE.IDMT) GO TO 10                                          CAL1-114
      LO(207)=.FALSE.                                                   CAL1-115
      LO(124)=.FALSE.                                                   CAL1-116
      LO(24)=.TRUE.                                                     CAL1-117
      N3=N                                                              CAL1-118
      WRITE (MW,1001)                                                   CAL1-119
   10 NPLACE=MAX0(NPLACE,N3)                                            CAL1-120
      IF (LO(100)) GO TO 11                                             CAL1-121
      CALL INTI(DW(NFAM),DW(NX),DW(NWW),DW(NWR),DW(NR4),DW(NPAD),NW(1,NRCAL1-122
     15),ISM,KAB,DW(N),ITERM,NC,DW(NVC1),DW(NVC2),NW(1,NNWI),NW(1,MCC),NCAL1-123
     2W(1,NXC),DW(NXC),DW(NX1),NPX,H,ACONV,EITER,NCXN,NNI,ITERR,LO)     CAL1-124
      IF (LO(204).OR.ITERM.EQ.1) GO TO 13                               CAL1-125
      IF (LO(123)) GO TO 13                                             CAL1-126
      IF (LO(210)) WRITE (MW,1002) AJ,JPI                               CAL1-127
      LO(225)=.TRUE.                                                    CAL1-128
      LO(228)=.TRUE.                                                    CAL1-129
      GO TO 7                                                           CAL1-130
   11 CALL INTR(DW(NFAM),DW(NX),DW(NWW),DW(NWR),DW(NR4),DW(NPAD),NW(1,NRCAL1-131
     15),ISM,KAB,DW(N),ITERM,NC,DW(NVC1),DW(NVC2),NW(1,NNWI),NW(1,MCC),NCAL1-132
     2W(1,NXC),DW(NXC),DW(NX1),H,ACONV,EITER,NCXN,NNI,ITERR,LO)         CAL1-133
      GO TO 13                                                          CAL1-134
C USUAL COUPLED CHANNELS CALCULATION                                    CAL1-135
C NWR IS THE FIRST ADDRESS TO STORE POTENTIALS AND NM THE MAXIMUM       CAL1-136
C NUMBER OF POINTS   FOR ARGUMENTS  SEE INCH                            CAL1-137
   12 NWR=NX+6*KAB*KAB                                                  CAL1-138
      IF (LO(54)) WRITE (MW,1000) NWR,AJ                                CAL1-139
      NFAI=NX+NC*KAB                                                    CAL1-140
      NFAR=NFAI+3*KAB*KAB                                               CAL1-141
      IF (LO(227)) GO TO 13                                             CAL1-142
      N=NWR+2*NC*NC*(ISM+1)                                             CAL1-143
      IF (N.GT.2*IDMT) CALL MEMO('CAL1',IDMT,(N+1)/2,1)                 CAL1-144
      NM=(IDMT-NWR)/(2*NC*NC)-1                                         CAL1-145
      NM=MIN0(NM,ISM)                                                   CAL1-146
      IF (LO(54).AND.NM.NE.ISM) WRITE (MW,1003) NM                      CAL1-147
      N3=NWR+(NM+1)*NC*NC                                               CAL1-148
      NPLACE=MAX0(NPLACE,2*N3-NWR,NFAR+3*KAB*KAB)                       CAL1-149
      CALL INCH(DW(NVC1),DW(NVC2),NW(1,MCC),NW(1,NXC),DW(NXC),NW(1,NNWI)CAL1-150
     1,DW(NFAM),DW(NX1),DW(NX),DW(NWR),DW(N3),ISM,KAB,NC,NCXN,NM,ITERM,NCAL1-151
     2PX,NW(1,NWR),LO)                                                  CAL1-152
   13 IF (LO(74)) CALL HORA                                             CAL1-153
C NFAR AND NFAI  ADDRESSES OF REAL AND IMAGINARY PARTS OF S-MATRIX      CAL1-154
      NMX=NWR+(4+NCIN)*(NC+KXT)                                         CAL1-155
      N=NMX+MAX0(4*NC*NC,LMAX2+4*IPJ)                                   CAL1-156
      IF (N.GT.IDMT) CALL MEMO('CAL1',IDMT,N,1)                         CAL1-157
      NPT=NPT+1                                                         CAL1-158
      CALL SCAM(DW(NSM),DW(NTY),DW(NTX),DW(NRY),NJMAX,KMAX,NW(1,MCC),NW(CAL1-159
     11,NCC),DW(NFAR),DW(NFAI),DW(NWV),NCOLL,NCOLS,KAB,KCC,NW,NW(1,MIPI)CAL1-160
     2,DW(NGAM),DW(NFIS),DW(NIXT),NW(1,NCOI),DW(NXD),DW(NMX),DW(NMX),DW(CAL1-161
     3NWR),NCT,NCIN+4,DW(NXA),KBC,IDMT-NMX,XZ,LO)                       CAL1-162
      IF (LO(232)) GO TO 14                                             CAL1-163
      LO(232)=R1(2).LT.CONJ.AND.IPJ.GT.KMIN                             CAL1-164
      IF (.NOT.LO(232)) IPK=IPJ                                         CAL1-165
      IF (LO(232).AND.(LO(218).OR.LO(215))) WRITE (MW,1004) AJ,R1(2)    CAL1-166
   14 IF (LO(74)) CALL HORA                                             CAL1-167
      IF (LO(21)) GO TO 15                                              CAL1-168
C REDUCTION OF MAXIMUM NUMBER OF ITERATIONS IF 2 WHERE SUFFICIENT(ITERR)CAL1-169
      IF (LO(125).AND.(ITERR.LE.2).AND.(IPJ.GT.JDM)) ITERM=1            CAL1-170
C CHECKS OF CONVERGENCE                                                 CAL1-171
      IF ((NNI.EQ.NC).AND.(IPJ.GT.JDM)) LO(227)=.TRUE.                  CAL1-172
      IF (LO(128).AND.NNI.EQ.NC.AND.IPJ.GT.JDM+1) GO TO 18              CAL1-173
C INCREASE OF THE TOTAL ANGULAR MOMENTUM                                CAL1-174
   15 IF (LO(143)) GO TO 17                                             CAL1-175
      DO 16 I=1,JIT                                                     CAL1-176
      IF (IPJ.LE.NW(1,NJIT+I-1)) GO TO 17                               CAL1-177
   16 IPJ=IPJ+NW(2,NJIT+I-1)*IP1                                        CAL1-178
   17 IPJ=IPJ+IP1                                                       CAL1-179
      IF (IPJ.GT.LMAX3-LMX) LO(227)=.TRUE.                              CAL1-180
      IF (.NOT.LO(208)) LO(227)=.FALSE.                                 CAL1-181
      IF ((IPJ.LE.NJMAX).AND.((R1(1).GE.CONJ).OR.(IPJ.LE.JDM).OR.(NCIN.ECAL1-182
     1Q.0))) GO TO 6                                                    CAL1-183
C CHANGE OF PARITY                                                      CAL1-184
   18 NAJ=JMIN+2*IPX-2                                                  CAL1-185
      IF (LO(218).OR.LO(215)) WRITE (MW,1005) AJ,R1(1)                  CAL1-186
      IF (JPI.EQ.1) GO TO 19                                            CAL1-187
      JPI=JPI+1                                                         CAL1-188
      IPY=IPX                                                           CAL1-189
      IPZ=IPK                                                           CAL1-190
      GO TO 4                                                           CAL1-191
   19 IPM=MAX0(IPX,IPY)                                                 CAL1-192
      IPK=MAX0(IPK,IPZ)                                                 CAL1-193
      IF (LO(163)) GO TO 22                                             CAL1-194
      WRITE (63,1006) DW(NWV),DW(NWV+11),DW(NWV+1),NW(2,2),NPT          CAL1-195
      REWIND 99                                                         CAL1-196
      DO 21 I=1,NPT                                                     CAL1-197
      READ (99,1007) U1,JP,K3                                           CAL1-198
      WRITE (63,1007) U1,JP,K3                                          CAL1-199
      DO 20 K=1,K3                                                      CAL1-200
      READ (99,1008) K1,K2,U1,U2                                        CAL1-201
   20 WRITE (63,1008) K1,K2,U1,U2                                       CAL1-202
   21 CONTINUE                                                          CAL1-203
C     CLOSE (99,STATUS='DELETE')                                        CAL1-204
      CLOSE (99)                                                        CAL1-204
   22 KCB=MAX0(NCT(5),NCT(6))                                           CAL1-205
      NDX=NXC+8*KCB                                                     CAL1-206
      NDY=NDX+JTH                                                       CAL1-207
      NDZ=NDY+JTH                                                       CAL1-208
      NMY=NDZ+JTX                                                       CAL1-209
      NGA=NMY+3*NJC                                                     CAL1-210
      NMA=NGA+4*KBC*KAB                                                 CAL1-211
      NMC=NMA+MS1*MS2*KCB                                               CAL1-212
      N=NMC+2*IPM                                                       CAL1-213
      IF (N.GT.IDMT) CALL MEMO('CAL1',IDMT,N,1)                         CAL1-214
      CALL SCHE(DW(NSM),NJMAX,KMAX,NW,MS1,MS2,NW(1,NFM),DW(NTX),DW(NMC),CAL1-215
     1NW(1,NXC),DW(NGA),DW(NXG),LMAX2,DW(NWV),KAB,KBA,KCB,JMIN,IPM,IPK,DCAL1-216
     2W(NTY),NCOLL,NCOLS,NCT,DW(NRY),DW(NMA),JIT,NW(1,NJIT),NLT,IDMT-NMCCAL1-217
     3,XZ,LO)                                                           CAL1-218
      ID1=IDMT-NGA                                                      CAL1-219
C FOR ARGUMENTS    SEE CALX AND RESU                                    CAL1-220
      CALL RESU(NW,DW(NSM),DW(NTX),NJMAX,KMAX,NCOLL,NCOLS,NW(1,NFM),CW(1CAL1-221
     1,NFM),NW(1,NTGX),DW(NTGX),IPM,IPK,DW(NDONN),NCOLR,NW(1,NAM1),DW(NACAL1-222
     2M1),DW(NWV),DW(MWV),DW(NRY),NW(1,NCOI),DW(NXD),JMIN,NRZ,NJC,DW(NRECAL1-223
     3S),DW(NGA),DW(NMY),DW(NDX),DW(NDY),DW(NDZ),CMB,XZ,ID1,LO)         CAL1-224
      NPLACE=MAX0(NPLACE,NGA+ID1)                                       CAL1-225
      IF (LO(74)) CALL HORA                                             CAL1-226
      LO(217)=.TRUE.                                                    CAL1-227
      LO(215)=.FALSE.                                                   CAL1-228
      RETURN                                                            CAL1-229
 1000 FORMAT (10X,'REQUIRED WORKING FIELD',I10,'  FOR J =',F7.1)        CAL1-230
 1001 FORMAT (/' WORKING FIELD TOO SMALL TO STORE ALL THE POTENTIALS'/1XCAL1-231
     1,52('*')//' THE 24TH CONTROL IS SET .TRUE.'//)                    CAL1-232
 1002 FORMAT (' WARNING: FOR J =',F6.1,' PARITY (-1)**',I1,' THE DERIVATCAL1-233
     1IVE TERMS ARE NEGLECTED')                                         CAL1-234
 1003 FORMAT ('+',60X,'COMPUTATION OF POTENTIALS BY',I5,'  AT A TIME')  CAL1-235
 1004 FORMAT (' MAXIMUM J-VALUE =',F6.1,' FOR COMPOUND NUCLEUS',6X,'MAXICAL1-236
     1MUM COEFFICIENT AT THE END',D12.3)                                CAL1-237
 1005 FORMAT (' MAXIMUM J-VALUE =',F6.1,16X,'MAXIMUM SCATTERING COEFFICICAL1-238
     1ENT AT THE END',D12.3)                                            CAL1-239
 1006 FORMAT ('<TLJ     >',F10.2,F10.5,F10.2,2I5)                       CAL1-240
 1007 FORMAT (1X,F4.1,1X,A1,1X,I4)                                      CAL1-241
 1008 FORMAT (1X,I2,I4,F6.1,2X,1P,D14.7,0P,3X)                          CAL1-242
      END                                                               CAL1-243
C 01/01/04                                                      ECIS03  POTE-000
      SUBROUTINE POTE(BETA,NBTA,V,IVQ,IVY,IVZ,NP,Q,VAL,NVAL,VCO,VDO,WV,WPOTE-001
     1VM,ACONV,ISM,NCOLL,NCOLD,NCOLT,IDT,IPI,IPIM,IPP,TL,IQM,NPP,NBT1,MCPOTE-002
     2M,CHB,CCZ,LO)                                                     POTE-003
C COMPUTATION AND OUTPUT OF FORM FACTORS                                POTE-004
C INPUT VARIABLES: BETA,NBTA: DEFORMATIONS OF THE TARGET                POTE-005
C                  IVQ:       TABLE OF ANGULAR MOMENTA OF FORM FACTORS  POTE-006
C                  IVY:       TABLE FOR COMPUTATION OF FORM FACTORS     POTE-007
C                  IVZ:       TABLE FOR USE OF FORM FACTORS             POTE-008
C                  VAL,NVAL:  OPTICAL MODEL AND FOLDING PARAMETERS      POTE-009
C                  WV,WVM:      ( SEE CALX )                            POTE-010
C                  ACONV:     VALUE BELOW WHICH THE POT. CAN BE NEGL.   POTE-011
C                  ISM:       NUMBER OF POINTS                          POTE-012
C                  NCOLL:     NUMBER OF COUPLED NUCLEAR STATES          POTE-013
C                  NCOLD:     TOTAL NUMBER OF STATES WITHOUT CONTINUUM  POTE-014
C                  NCOLT:     TOTAL NUMBER OF STATES WITH CONTINUUM     POTE-015
C                  IDT: MAXIMUM WORKING FIELD P  RETURNS THE PLACE USED POTE-016
C                  IPI,IPIM:    ( SEE CALX )                            POTE-017
C                  IPP:       CROSS-REFERENCE TO POTENTIALS IN IPI(1,*) POTE-018
C                  IQM:       MAXIMUM ORDER OF DEFORMATION IN ROT. MODELPOTE-019
C                  NPP:       NUMBER OF OPTICAL POTENTIALS              POTE-020
C                  NBT1:      NUMBER OF VIBRATIONS                      POTE-021
C                  MCM:       ANGULAR MOMENTUM LIMITATION ON COUL. CORR.POTE-022
C                  LO:        LOGICAL CONTROLS                          POTE-023
C COMMONS /POTE1/ AND /POTE2/   SEE REDM                                POTE-024
C COMMON /DCONS/   SEE CALC AND COLF                                    POTE-025
C OUTPUT VARIABLES:V(I,J): POTENTIAL AND TRANSITION FORM FACTORS        POTE-026
C             FOR SCHROEDINGER EQUATIONS:                               POTE-027
C     AFTER ITY(1) (=0) REAL CENTRAL POTENTIALS IN ORDER IPI(11,*)      POTE-028
C     AFTER ITY(3) REAL SPIN-ORBIT FORM FACTORS IN THE SAME ORDER       POTE-029
C     AFTER ITY(5) REAL TRANSITION FORM FACTORS IN ORDER IVZ(1,*)       POTE-030
C     AFTER ITY(7) REAL DERIVED SPIN-ORBIT FORM FACTORS IN ORDER        POTE-031
C           IVZ(1,*) WITH THE R**-2 FORM FACTOR AT THE SAME ADDRESS+INLSPOTE-032
C     IMAGINARY POTENTIALS AND FORM FACTOR FOLLOW WITH THE SAME ORDER   POTE-033
C           FROM ITY(2), ITY(4), ITY(6) AND ITY(8)                      POTE-034
C                                                                       POTE-035
C             FOR DIRAC EQUATIONS:                                      POTE-036
C     AFTER ITY(1) (=0) FOR EACH LEVEL, 14 FORM FACTORS V(*,I,*) WHICH  POTE-037
C           ARE CENTRAL POTENTIAL FOR I=1,2   SPIN-ORBIT POTENTIAL FOR  POTE-038
C           I=3,4  D=E+M+V-W FOR I=5,6   E-M-V-W FOR I=7,8  D**(1/2) FORPOTE-039
C           I=9,10 D**(-1) FOR I=11,12  AND  - D( TENSOR ) FOR I=13,14  POTE-040
C     AFTER ITX(6) THE INVT SETS OF COMPLEX SCALAR + VECTOR FORM FACTORSPOTE-041
C           FOLLOWED BY THE INSL SETS OF TENSOR FORM FACTORS            POTE-042
C                                                                       POTE-043
C                  VCO(2,I): STRENGTH OF COULOMB POTENTIAL TAILS        POTE-044
C                            SCALAR IN VCO(1,I), SPIN-ORBIT IN VCO(2,I) POTE-045
C                  VDO(2,I): STRENGTH OF COULOMB TRANSITION TAILS       POTE-046
C                            SCALAR IN VDO(1,I), SPIN-ORBIT IN VDO(2,I) POTE-047
C                  TL:   TRANSMISSION COEFFICIENTS FOR UNCOUPLED STATES POTE-048
C WORKING FIELD: NP  IN EQUIVALENCE WITH Q, DOUBLE PRECISION.           POTE-049
C***********************************************************************POTE-050
      IMPLICIT REAL*8 (A-H,O-Z)                                         POTE-051
      LOGICAL LO(250)                                                   POTE-052
      DIMENSION V(ISM,1),IVQ(3,1),BETA(9,1),VAL(34,1),IVZ(4,1),VCO(2,1),POTE-053
     1VDO(2,1),NVAL(1),IPI(11,1),IPP(30,1),NBTA(18,1),NP(1),ILO(16),MCM(POTE-054
     22),IPIM(11,1),IPIX(11),IVY(7,1),Q(1),WV(18,1),PGN(10),XGN(10),W(24POTE-055
     3),WVM(18,1),WVX(18),TL(1)                                         POTE-056
      CHARACTER*4 BB(2)                                                 POTE-057
      CHARACTER*8 AA(3,8)                                               POTE-058
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM              POTE-059
      COMMON /POTE2/ ITY(8),INVT,INTV,INSL,NPX                          POTE-060
      COMMON /DCONT/ XE,XM,XN,XZ                                        POTE-061
      COMMON /INOUT/ MR,MW,MS                                           POTE-062
      EQUIVALENCE (ITX(1),IT1),(ITX(2),IT2),(ITX(3),IT3),(ITX(4),IT4),(IPOTE-063
     1TX(5),IT5),(ITX(6),IT6),(ITX(7),IT7),(ITX(8),IT8),(ITX(9),IT9),(ITPOTE-064
     2X(10),IT0),(ITX(11),ITA),(ITX(12),ITB),(ITX(13),ITC),(ITX(14),ITD)POTE-065
     3,(ITX(15),ITE),(ITX(16),ITF)                                      POTE-066
      EQUIVALENCE (ITY(1),IV1),(ITY(2),IV2),(ITY(3),IV3),(ITY(4),IV4),(IPOTE-067
     1TY(5),IV5),(ITY(6),IV6),(ITY(7),IV7),(ITY(8),IV8)                 POTE-068
      DATA PGN( 1),PGN( 2) / 1.52753387130726D-01, 1.49172986472604D-01/POTE-069
      DATA PGN( 3),PGN( 4) / 1.42096109318382D-01, 1.31688638449177D-01/POTE-070
      DATA PGN( 5),PGN( 6) / 1.18194531961518D-01, 1.01930119817240D-01/POTE-071
      DATA PGN( 7),PGN( 8) / 8.32767415767047D-02, 6.26720483341091D-02/POTE-072
      DATA PGN( 9),PGN(10) / 4.06014298003869D-02, 1.76140071391521D-02/POTE-073
      DATA XGN( 1),XGN( 2) / 7.65265211334973D-02, 2.27785851141645D-01/POTE-074
      DATA XGN( 3),XGN( 4) / 3.73706088715420D-01, 5.10867001950827D-01/POTE-075
      DATA XGN( 5),XGN( 6) / 6.36053680726515D-01, 7.46331906460151D-01/POTE-076
      DATA XGN( 7),XGN( 8) / 8.39116971822219D-01, 9.12234428251326D-01/POTE-077
      DATA XGN( 9),XGN(10) / 9.63971927277914D-01, 9.93128599185095D-01/POTE-078
      DATA BB /'    ','LAST'/                                           POTE-079
      DATA AA/'      RE','AL VOLUM','E/SCALAR',' IMAGINA','RY VOLUM','E/POTE-080
     1SCALAR','     REA','L SURFAC','E/VECTOR','  IMAGIN','. SURFAC','E/POTE-081
     2VECTOR','  REAL S','PIN-ORBI','T/TENSOR',' IMAG. S','PIN-ORBI','T/POTE-082
     3TENSOR','        ','        ',' COULOMB','      SP','IN-ORBIT',' CPOTE-083
     4OULOMB'/                                                          POTE-084
      DATA ILO /162,162,162,162,201,202,162,203,162,112,162,112,113,114,POTE-085
     1111,119/                                                          POTE-086
      IDY=0                                                             POTE-087
      IF (LO(220)) GO TO 4                                              POTE-088
      ITM=ITXM                                                          POTE-089
      IF (LO(100)) ITM=ITM-IT7                                          POTE-090
      IF (LO(7)) GO TO 3                                                POTE-091
      INVZ=INTC                                                         POTE-092
      INY=1                                                             POTE-093
      IF (LO(209)) INY=3                                                POTE-094
      DO 2 IP=1,NPP                                                     POTE-095
      K=IABS(IPP(1,IP))                                                 POTE-096
      INVY=INVZ+INY                                                     POTE-097
      N1=(INVY+1)/2+1                                                   POTE-098
      N2=N1+MAX0(IMAX,IQM)+1                                            POTE-099
      ID1=INVY+27                                                       POTE-100
      IDX=10                                                            POTE-101
      IF (LO(3)) IDX=36                                                 POTE-102
      IF (LO(101)) IDX=1                                                POTE-103
      IDX=MAX0(IDX*ID1+10*INVY,6*ISM)+N2                                POTE-104
      IF (IDX.GT.IDT) CALL MEMO('POTE',IDT,IDX,2)                       POTE-105
      IK=IP                                                             POTE-106
      IF (LO(100)) IK=IT4+24*IP+1                                       POTE-107
      CALL ROTP(BETA,NBTA,BETA(1,NBT1+1),IK,V,V(1,IT3+1),IVY,NP,Q(N1),Q(POTE-108
     1N2),Q(10*INVY+N2),VAL(1,IP),ID1,ISM,WV(11,K),INVZ,INVY,IQM,INY,NBTPOTE-109
     21,PGN,XGN,CCZ,LO)                                                 POTE-110
C  TO USE THE FOLDING MODEL, THE SPIN-ORBIT POTENTIALS AND THE FIRST    POTE-111
C SPIN-ORBIT NON DIAGONAL FORM FACTORS ARE NOT DERIVED ( V(R) INSTEAD OFPOTE-112
C (1/R)*(D/DR)(V(R)) )  FOR SCHROEDINGER EQUATIONS. FOR DIRAC EQUATIONS POTE-113
C THE DERIVATIVES ARE COMPUTED BUT NOT USED.                            POTE-114
      IDY=MAX0(IDX,IDY)                                                 POTE-115
      IF (LO(74)) CALL HORA                                             POTE-116
      IF (LO(117)) GO TO 2                                              POTE-117
C  *******  FOLDING MODEL  **********                                   POTE-118
      IST=5+ISM+IDINT(2.D0*(DABS(VAL(33,IP))+2.D0*DABS(VAL(34,IP)))/WV(1POTE-119
     11,K))                                                             POTE-120
      IF (VAL(32,IP)*VAL(33,IP).EQ.0.D0) IST=ISM+5                      POTE-121
C THE WORKING SPACE IN P IS SHIFTED FROM V WITH THE ORIGINS IN TABLE IT POTE-122
      NNF=1+ISM*ITM                                                     POTE-123
      IDZ=NNF+4*ITM                                                     POTE-124
      IDX=IDZ+4*IST                                                     POTE-125
      IF (INVZ.NE.0) IDX=IDX+2*IST*IMAX                                 POTE-126
      IDY=MAX0(IDY,IDX)                                                 POTE-127
      IF (IDX.GT.2*IDT) CALL MEMO('POTE',IDT,(IDX+1)/2,2)               POTE-128
      DO 1 J=1,NNF                                                      POTE-129
    1 Q(J)=0.D0                                                         POTE-130
      CALL FOLD(V(1,IK),P,VAL(26,IP),3,IP,ISM,IST,ACONV,IVY,INVZ,Q(IDZ),POTE-131
     1PGN,XGN,WV,NP(NNF),LO)                                            POTE-132
      IF (LO(74)) CALL HORA                                             POTE-133
    2 INVZ=0                                                            POTE-134
      GO TO 4                                                           POTE-135
    3 NNF=2*ITM                                                         POTE-136
      IF (NNF.GT.IDT) CALL MEMO('POTE',IDT,NNF,2)                       POTE-137
      IDZ=IDT-NNF                                                       POTE-138
      IK=1                                                              POTE-139
      IF (LO(100)) IK=IT7+1                                             POTE-140
      CALL STDP(V(1,IK),IVY,ISM,VAL,NVAL,IDZ,IDX,Q(NNF+1),WV,PGN,XGN,NPPPOTE-141
     1,NP,Q(NNF+1),ACONV,CCZ,LO)                                        POTE-142
      IDY=MAX0(IDY,IDX+2*NNF)                                           POTE-143
    4 IF (LO(162)) GO TO 14                                             POTE-144
      NPT=8*(NPP+INTC)                                                  POTE-145
      IF (LO(201)) NPT=NPT-NPP                                          POTE-146
      IF (LO(202)) NPT=NPT-NPP                                          POTE-147
      IF (LO(203)) NPT=NPT-NPP                                          POTE-148
      IF (LO(111)) NPT=NPT-INTC                                         POTE-149
      IF (LO(112)) NPT=NPT-2*INTC                                       POTE-150
      IF (LO(113)) NPT=NPT-INTC                                         POTE-151
      IF (LO(114)) NPT=NPT-INTC                                         POTE-152
      IF (LO(119)) NPT=NPT-INTC                                         POTE-153
      WRITE (62,1000) WV(1,1),WV(12,1),WV(2,1),IPI(4,1),NPT             POTE-154
      IST=2*(ISM/2)                                                     POTE-155
      IDX=IST                                                           POTE-156
      IDY=MAX0(IDY,IDX)                                                 POTE-157
      IF (IDX.GT.2*IDT) CALL MEMO('POTE',IDT,(IDX+1)/2,2)               POTE-158
C PUNCH THE FORM FACTORS                                                POTE-159
      DO 5 I=1,IST                                                      POTE-160
    5 Q(I)=I*WV(11,1)                                                   POTE-161
      IR=0                                                              POTE-162
      DO 8 IP=1,NPP                                                     POTE-163
      DO 7 IJ=1,8                                                       POTE-164
      IS=1                                                              POTE-165
      IL=ILO(IJ)                                                        POTE-166
      IF (LO(IL)) GO TO 7                                               POTE-167
      JI=IP+ITX(IJ)                                                     POTE-168
      IF (LO(100)) JI=IT7+IJ+24*(IP-1)                                  POTE-169
      IR=IR+1                                                           POTE-170
      WRITE (MW,1001) (AA(J,IJ),J=1,3),IP,IR                            POTE-171
      WRITE (62,1001) (AA(J,IJ),J=1,3),IP,IR                            POTE-172
      DO 6 I=1,IST,2                                                    POTE-173
      IF (I.EQ.IST-1) IS=2                                              POTE-174
      WRITE (MW,1002) Q(I),V(I,JI),Q(I+1),V(I+1,JI),BB(IS),IR           POTE-175
    6 WRITE (62,1003) Q(I),V(I,JI),Q(I+1),V(I+1,JI),BB(IS),IR           POTE-176
    7 CONTINUE                                                          POTE-177
    8 CONTINUE                                                          POTE-178
      IF (INTC.EQ.0) GO TO 14                                           POTE-179
      DO 13 IQ=1,INTC                                                   POTE-180
      DO 12 IJ=9,16                                                     POTE-181
      IS=1                                                              POTE-182
      IL=ILO(IJ)                                                        POTE-183
      IF (LO(IL)) GO TO 12                                              POTE-184
      IP=IQ                                                             POTE-185
      IF (IJ.EQ.13.OR.IJ.EQ.14) IP=IVY(3,IQ)+INLS                       POTE-186
      IF (IJ.GE.15) IP=IVY(IJ-11,IQ)                                    POTE-187
      IF (IP.LE.0) GO TO 12                                             POTE-188
      JI=IP+ITX(IJ)                                                     POTE-189
      IF (LO(100)) JI=IT7+24*NPP+11*IQ+IJ-19                            POTE-190
      IR=IR+1                                                           POTE-191
      WRITE (MW,1004) (AA(J,IJ-8),J=1,3),IQ,IR                          POTE-192
      WRITE (62,1004) (AA(J,IJ-8),J=1,3),IQ,IR                          POTE-193
      IF (LO(200).AND.(IJ.GE.13).AND.(IJ.NE.15)) GO TO 10               POTE-194
      DO 9 I=1,IST,2                                                    POTE-195
      IF (I.EQ.IST-1) IS=2                                              POTE-196
      WRITE (MW,1002) Q(I),V(I,JI),Q(I+1),V(I+1,JI),BB(IS),IR           POTE-197
    9 WRITE (62,1003) Q(I),V(I,JI),Q(I+1),V(I+1,JI),BB(IS),IR           POTE-198
      GO TO 12                                                          POTE-199
   10 IF (IJ.EQ.16) JI=JI+INVD                                          POTE-200
      DO 11 I=1,IST,2                                                   POTE-201
      A1=-V(I,JI)*Q(I)**2                                               POTE-202
      A2=-V(I+1,JI)*Q(I+1)**2                                           POTE-203
      IF (I.EQ.IST-1) IS=2                                              POTE-204
      WRITE (MW,1002) Q(I),A1,Q(I+1),A2,BB(IS),IR                       POTE-205
   11 WRITE (62,1003) Q(I),A1,Q(I+1),A2,BB(IS),IR                       POTE-206
   12 CONTINUE                                                          POTE-207
   13 CONTINUE                                                          POTE-208
   14 IF (LO(220)) GO TO 66                                             POTE-209
      IF (INTC.EQ.INVT) GO TO 26                                        POTE-210
C ADDITION OF CORRECTION TERMS OF FORM FACTORS                          POTE-211
      DO 25 K=1,INVT                                                    POTE-212
      IF (IVY(6,K).LE.0) GO TO 25                                       POTE-213
      K1=IVY(6,K)                                                       POTE-214
      L=IVY(7,K)+2                                                      POTE-215
      DO 24 N=1,8                                                       POTE-216
      IL=ILO(N+8)                                                       POTE-217
      IF ((IL.NE.162).AND.LO(IL)) GO TO 24                              POTE-218
      L1=L                                                              POTE-219
      M=0                                                               POTE-220
      IF (LO(100)) GO TO 17                                             POTE-221
      IF (N.GT.6) GO TO 16                                              POTE-222
      IF (N.GT.4) GO TO 15                                              POTE-223
      K2=ITX(N+8)+K                                                     POTE-224
      K3=ITX(N+8)+K1                                                    POTE-225
      GO TO 19                                                          POTE-226
   15 IF (IVY(3,K).EQ.0) GO TO 24                                       POTE-227
      K2=ITX(N+8)+IVY(3,K)+INLS                                         POTE-228
      K3=ITX(N+8)+IVY(3,K1)+INLS                                        POTE-229
      L1=L1+2                                                           POTE-230
      M=-INLS                                                           POTE-231
      GO TO 19                                                          POTE-232
   16 IF (IVY(N-3,K).EQ.0) GO TO 24                                     POTE-233
      K2=ITX(N+8)+IVY(N-3,K)                                            POTE-234
      K3=ITX(N+8)+IVY(N-3,K1)                                           POTE-235
      IF (N.EQ.8) M=INVD                                                POTE-236
      GO TO 18                                                          POTE-237
   17 IF ((N.GT.4).AND.(N.NE.7)) M=MIN0(11-N,4)                         POTE-238
      K2=IT5+11*K+N                                                     POTE-239
      K3=K2+11*(K1-K)                                                   POTE-240
      IF (N.LE.6) GO TO 19                                              POTE-241
   18 CI=V(ISM,K3)                                                      POTE-242
      CR=V(ISM,K2)                                                      POTE-243
      GO TO 21                                                          POTE-244
   19 DD=0.D0                                                           POTE-245
      CI=0.D0                                                           POTE-246
      CR=0.D0                                                           POTE-247
      DO 20 IS=1,ISM                                                    POTE-248
      DD=DD+WV(11,1)                                                    POTE-249
      CI=CI+V(IS,K3)*DD**L1                                             POTE-250
   20 CR=CR+V(IS,K2)*DD**L1                                             POTE-251
   21 IF ((CI.EQ.0.D0).OR.(CR.EQ.0.D0)) GO TO 24                        POTE-252
      CR=CR/CI                                                          POTE-253
      IF (.NOT.LO(217)) WRITE (MW,1005) K,N,CR                          POTE-254
   22 DO 23 IS=1,ISM                                                    POTE-255
   23 V(IS,K2)=V(IS,K2)-CR*V(IS,K3)                                     POTE-256
      IF (M.EQ.0) GO TO 24                                              POTE-257
      K2=K2+M                                                           POTE-258
      K3=K3+M                                                           POTE-259
      M=0                                                               POTE-260
      GO TO 22                                                          POTE-261
   24 CONTINUE                                                          POTE-262
   25 CONTINUE                                                          POTE-263
   26 RM=ISM*WV(11,1)                                                   POTE-264
      IF (LO(74)) CALL HORA                                             POTE-265
C STORAGE OF OPTICAL POTENTIALS                                         POTE-266
      XP=XN/CHB                                                         POTE-267
      XQ=XP**2                                                          POTE-268
      DO 42 KJ=1,NCOLT                                                  POTE-269
      JJ=MOD(KJ+NCOLL-1,NCOLT)+1                                        POTE-270
      IF (JJ.GT.NCOLD) GO TO 29                                         POTE-271
      DO 27 I=1,11                                                      POTE-272
   27 IPIX(I)=IPI(I,JJ)                                                 POTE-273
      DO 28 I=1,18                                                      POTE-274
   28 WVX(I)=WV(I,JJ)                                                   POTE-275
      GO TO 32                                                          POTE-276
   29 DO 30 I=1,11                                                      POTE-277
   30 IPIX(I)=IPIM(I,JJ-NCOLD)                                          POTE-278
      DO 31 I=1,18                                                      POTE-279
   31 WVX(I)=WVM(I,JJ-NCOLD)                                            POTE-280
   32 IF (LO(100)) GO TO 36                                             POTE-281
C POTENTIALS FOR SCHROEDINGER EQUATION                                  POTE-282
      IF (JJ.GT.NCOLL) GO TO 33                                         POTE-283
      I1=IPIX(11)                                                       POTE-284
      I2=I1+IV2                                                         POTE-285
      I3=I1+IV3                                                         POTE-286
      I4=I1+IV4                                                         POTE-287
      GO TO 34                                                          POTE-288
   33 I1=1                                                              POTE-289
      I2=2                                                              POTE-290
      I3=3                                                              POTE-291
      I4=4                                                              POTE-292
   34 J=IPIX(5)                                                         POTE-293
      DO 35 IS=1,ISM                                                    POTE-294
      V(IS,I1)=V(IS,J+IT1)+V(IS,J+IT3)+WVX(14)*V(IS,J+IT2)+WVX(16)*V(IS POTE-295
     1,J+IT4)                                                           POTE-296
      V(IS,I2)=V(IS,J+IT2)+V(IS,J+IT4)+WVX(13)*V(IS,J+IT2)+WVX(15)*V(IS POTE-297
     1,J+IT4)                                                           POTE-298
      IF (LO(229)) V(IS,I3)=V(IS,J+IT5)*(1.D0+WVX(18))                  POTE-299
      IF (LO(230)) V(IS,I4)=V(IS,J+IT6)*(1.D0+WVX(17))                  POTE-300
      IF (.NOT.LO(203)) V(IS,I3)=V(IS,I3)+V(IS,J+IT8)*XQ                POTE-301
   35 V(IS,I1)=V(IS,I1)-V(IS,J+IT7)                                     POTE-302
      IF (.NOT.LO(203)) VCO(2,I1)=V(ISM,J+IT8)*RM**3/XM                 POTE-303
      IF (LO(199)) GO TO 41                                             POTE-304
      VCO(1,I1)=RM*V(ISM,J+IT7)*XM/(XE*CHB)                             POTE-305
      VCO(2,I1)=VCO(2,I1)+VCO(1,I1)*CHB/(XM+WV(7,1))                    POTE-306
      GO TO 41                                                          POTE-307
C POTENTIALS FOR DIRAC EQUATION                                         POTE-308
C AT THIS POINT:   AFTER V(1,IT7),                                      POTE-309
C V(*,N,1) SCALAR POTENTIAL V FOR N=1,2 VECTOR POTENTIAL W FOR N=3,4    POTE-310
C          TENSOR POTENTIAL T FOR N=5,6 COULOMB POTENTIALS FOR N=7,8    POTE-311
C          THEIR FIRST DERIVATIVES FOR N=9,16                           POTE-312
C          THEIR SECOND DERIVATIVES FOR N=17,24                         POTE-313
C   THE FIRST DERIVATIVES OF NON-COULOMB POTENTIALS HAVE A REVERSED SIGNPOTE-314
   36 M=IT4+24*IPIX(5)                                                  POTE-315
      J=JJ                                                              POTE-316
      IF (J.GT.NCOLL) J=1                                               POTE-317
      N=14*J-14                                                         POTE-318
      RR=0.D0                                                           POTE-319
      DO 40 IS=1,ISM                                                    POTE-320
      RR=RR+WVX(11)                                                     POTE-321
      DO 37 K=1,24                                                      POTE-322
   37 W(K)=V(IS,K+M)                                                    POTE-323
      IF (LO(110)) GO TO 39                                             POTE-324
      DO 38 K=1,24,8                                                    POTE-325
      W(K)=W(K)+WVX(14)*W(K+1)                                          POTE-326
      W(K+1)=W(K+1)+WVX(13)*W(K+1)                                      POTE-327
      W(K+2)=W(K+2)+WVX(16)*W(K+3)                                      POTE-328
      W(K+3)=W(K+3)+WVX(15)*W(K+3)                                      POTE-329
      W(K+4)=(1.D0+WVX(18))*W(K+4)                                      POTE-330
   38 W(K+5)=(1.D0+WVX(17))*W(K+5)                                      POTE-331
   39 W(3)=W(3)+W(7)                                                    POTE-332
      W(11)=W(11)+W(15)                                                 POTE-333
      W(19)=W(19)+W(23)                                                 POTE-334
      W(13)=(W(13)+W(16))/XM                                            POTE-335
      W(21)=(W(21)+W(24))/XM                                            POTE-336
      W(14)=W(14)/XM                                                    POTE-337
      W(22)=W(22)/XM                                                    POTE-338
      W(15)=XM+WVX(7)+W(1)-W(3)                                         POTE-339
      W(16)=W(2)-W(4)                                                   POTE-340
      V(IS,N+7)=(WVX(7)-XM-W(1)-W(3))/CHB                               POTE-341
      V(IS,N+8)=-(W(2)+W(4))/CHB                                        POTE-342
      DD=W(15)**2+W(16)**2                                              POTE-343
      W(5)=W(15)/DD                                                     POTE-344
      W(6)=-W(16)/DD                                                    POTE-345
      DD=DSQRT(DSQRT(DD)/(XM+WVX(7)))                                   POTE-346
      AR=.5D0*DATAN2(W(16),W(15))                                       POTE-347
      V(IS,N+9)=DD*DCOS(AR)                                             POTE-348
      V(IS,N+10)=DD*DSIN(AR)                                            POTE-349
      AR=W(11)-W(9)                                                     POTE-350
      AI=W(12)-W(10)                                                    POTE-351
      BR=W(17)-W(19)                                                    POTE-352
      BI=W(18)-W(20)                                                    POTE-353
      CR=AR*W(5)-AI*W(6)+W(13)                                          POTE-354
      CI=AR*W(6)+AI*W(5)+W(14)                                          POTE-355
      ER=BR*W(5)-BI*W(6)+W(13)*(CR+CR-W(13))-W(14)*(CI+CI-W(14))-W(21)+2POTE-356
     1.D0*CR/RR                                                         POTE-357
      EI=BR*W(6)+BI*W(5)+W(13)*(CI+CI-W(14))+W(14)*(CR+CR-W(13))-W(22)+2POTE-358
     1.D0*CI/RR                                                         POTE-359
      V(IS,N+1)=-W(1)-W(3)*WVX(7)/XM-(W(1)*W(1)-W(2)*W(2)-W(3)*W(3)+W(4)POTE-360
     1*W(4))/(2.D0*XM)-(.75D0*(CR**2-CI**2)-.5D0*ER)*XN                 POTE-361
      V(IS,N+2)=-W(2)-W(4)*WVX(7)/XM-(W(1)*W(2)-W(3)*W(4))/XM-(1.5D0*CR*POTE-362
     1CI-.5D0*EI)*XN                                                    POTE-363
      V(IS,N+3)=.5D0*CR*XN/RR                                           POTE-364
      V(IS,N+4)=.5D0*CI*XN/RR                                           POTE-365
      V(IS,N+5)=W(15)/CHB                                               POTE-366
      V(IS,N+6)=W(16)/CHB                                               POTE-367
      V(IS,N+11)=W(5)*CHB                                               POTE-368
      V(IS,N+12)=W(6)*CHB                                               POTE-369
      V(IS,N+13)=W(13)/CHB                                              POTE-370
   40 V(IS,N+14)=W(14)/CHB                                              POTE-371
      VCO(1,J)=W(7)*RR/CHB                                              POTE-372
      VCO(2,J)=RR*(W(7)/(XM+WVX(7))+W(8)/XM)                            POTE-373
   41 IF (JJ.LE.NCOLL) GO TO 42                                         POTE-374
      NX1=2*ISM+5                                                       POTE-375
      NX2=NX1+10*(IPIX(10)+1)                                           POTE-376
      NX3=2*NX2-1                                                       POTE-377
      CALL TLNC(WV(11,1),IPIX,WVX,TL(IPIX(8)),ISM,Q,Q(NX1),IPIX(10)+1,NPPOTE-378
     1(NX3),Q(NX2),IDT-NX3,V,VCO,LO)                                    POTE-379
   42 CONTINUE                                                          POTE-380
      IF (INTV.EQ.0) GO TO 66                                           POTE-381
C STORAGE OF TRANSITION FORM FACTORS                                    POTE-382
      DO 65 J=1,INTV                                                    POTE-383
      IJ=IVZ(1,J)                                                       POTE-384
      IF (LO(200)) GO TO 43                                             POTE-385
      IK=IT6+4*J                                                        POTE-386
      KI=IT5+11*IJ                                                      POTE-387
   43 L=IVY(4,IJ)                                                       POTE-388
      IF (L.EQ.0) GO TO 48                                              POTE-389
      K=IVY(2,IJ)                                                       POTE-390
      IF (IVQ(2,K).GE.0) GO TO 48                                       POTE-391
C MAGNETIC COULOMB TRANSITION                                           POTE-392
      DD=2.D0*(WV(11,1)/WV(8,1))**2/CHB                                 POTE-393
      IF (LO(100)) GO TO 45                                             POTE-394
      DO 44 IS=1,ISM                                                    POTE-395
      IF (LO(12)) V(IS,J+IV6)=0.D0                                      POTE-396
   44 V(IS,J+IV5)=-V(IS,L+ITE)*DD                                       POTE-397
      IF (IVY(7,IJ).LE.MCM(1)) VDO(1,J)=V(ISM,L+ITE)*DD*RM**(IVY(7,IJ)+1POTE-398
     1)                                                                 POTE-399
      GO TO 65                                                          POTE-400
   45 DO 47 IS=1,ISM                                                    POTE-401
      DO 46 M=1,4                                                       POTE-402
   46 V(IS,IK+M)=0.D0                                                   POTE-403
   47 V(IS,IK+3)=V(IS,KI+7)*DD                                          POTE-404
      IF (IVY(7,IJ).LE.MCM(1)) VDO(1,J)=V(ISM,KI+7)*DD*RM**(IVY(7,IJ)+1)POTE-405
      GO TO 65                                                          POTE-406
C CENTRAL TRANSITION FORM-FACTOR                                        POTE-407
   48 I1=IVZ(2,J)/(NCOLL+1)                                             POTE-408
      I2=MOD(IVZ(2,J),NCOLL+1)                                          POTE-409
      DO 49 K=1,6                                                       POTE-410
      WVX(K)=0.D0                                                       POTE-411
      IF (I2.NE.0) WVX(K)=.5D0*(WV(K+12,I1)+WV(K+12,I2))                POTE-412
   49 CONTINUE                                                          POTE-413
      IF (LO(100)) GO TO 52                                             POTE-414
      DO 50 IS=1,ISM                                                    POTE-415
      IF (LO(12)) V(IS,J+IV6)=V(IS,IJ+IT0)+V(IS,IJ+ITB)+WVX(1)*V(IS,IJ+IPOTE-416
     1T0)+WVX(3)*V(IS,IJ+ITB)                                           POTE-417
   50 V(IS,J+IV5)=V(IS,IJ+IT9)+V(IS,IJ+ITA)+WVX(2)*V(IS,IJ+IT0)+WVX(4)*VPOTE-418
     1(IS,IJ+ITB)                                                       POTE-419
      IF (L.EQ.0) GO TO 57                                              POTE-420
C COULOMB TRANSITION FORM FACTOR FOR SCHROEDINGER EQUATION              POTE-421
      DO 51 IS=1,ISM                                                    POTE-422
   51 V(IS,J+IV5)=V(IS,J+IV5)-V(IS,L+ITE)                               POTE-423
      IF (IVY(7,IJ).LE.MCM(1)) VDO(1,J)=V(ISM,L+ITE)*RM**(IVY(7,IJ)+1)  POTE-424
      GO TO 57                                                          POTE-425
   52 DO 53 IS=1,ISM                                                    POTE-426
      V(IS,IK+1)=V(IS,KI+1)+WVX(2)*V(IS,KI+2)                           POTE-427
      V(IS,IK+2)=V(IS,KI+2)+WVX(1)*V(IS,KI+2)                           POTE-428
      V(IS,IK+3)=V(IS,KI+3)+WVX(4)*V(IS,KI+4)                           POTE-429
   53 V(IS,IK+4)=V(IS,KI+4)+WVX(3)*V(IS,KI+4)                           POTE-430
      IF (L.EQ.0) GO TO 55                                              POTE-431
C COULOMB TRANSITION FORM FACTOR FOR DIRAC EQUATION                     POTE-432
      DO 54 IS=1,ISM                                                    POTE-433
   54 V(IS,IK+3)=V(IS,IK+3)+V(IS,KI+7)                                  POTE-434
      IF (IVY(7,IJ).LE.MCM(1)) VDO(1,J)=V(ISM,KI+7)*RR**(IVY(7,IJ)+1)   POTE-435
   55 DO 56 IS=1,ISM                                                    POTE-436
      CR=V(IS,IK+1)                                                     POTE-437
      CI=V(IS,IK+2)                                                     POTE-438
      V(IS,IK+1)=XP*(V(IS,IK+3)+CR)                                     POTE-439
      V(IS,IK+2)=XP*(V(IS,IK+4)+CI)                                     POTE-440
      V(IS,IK+3)=XP*(V(IS,IK+3)-CR)                                     POTE-441
   56 V(IS,IK+4)=XP*(V(IS,IK+4)-CI)                                     POTE-442
   57 IF (J.GT.INVT) GO TO 65                                           POTE-443
C SPIN-ORBIT TRANSITION FORM FACTOR FOR SCHROEDINGER EQUATION           POTE-444
      L=IVY(3,IJ)                                                       POTE-445
      IF (L.EQ.0) GO TO 65                                              POTE-446
      IF (LO(100)) GO TO 62                                             POTE-447
      DO 58 IS=1,ISM                                                    POTE-448
      V(IS,L+IV7)=V(IS,L+ITC)*(1.D0+WVX(6))                             POTE-449
   58 V(IS,L+IV7+INSL)=V(IS,L+INLS+ITC)*(1.D0+WVX(6))                   POTE-450
      IF (LO(114)) GO TO 60                                             POTE-451
      DO 59 IS=1,ISM                                                    POTE-452
      V(IS,L+IV8)=V(IS,L+ITD)*(1.D0+WVX(5))                             POTE-453
   59 V(IS,L+IV8+INSL)=V(IS,L+INLS+ITD)*(1.D0+WVX(5))                   POTE-454
   60 K=IVY(5,IJ)                                                       POTE-455
      IF (K.EQ.0) GO TO 65                                              POTE-456
      DO 61 IS=1,ISM                                                    POTE-457
      V(IS,L+IV7)=V(IS,L+IV7)+V(IS,K+ITF)*XQ                            POTE-458
   61 V(IS,L+IV7+INSL)=V(IS,L+IV7+INSL)+V(IS,K+INVD+ITF)*XQ             POTE-459
      IF (IVY(7,IJ).LE.MCM(2)) VDO(2,L)=-V(ISM,K+INVD+ITF)*RM**(IVY(7,I POTE-460
     1J)+3)*XQ                                                          POTE-461
      GO TO 65                                                          POTE-462
C SPIN-ORBIT TRANSITION FORM FACTOR FOR DIRAC EQUATION                  POTE-463
   62 IL=IT6+4*(L+INTV)                                                 POTE-464
      RR=0.D0                                                           POTE-465
      DO 63 IS=1,ISM                                                    POTE-466
      RR=RR+WV(11,1)                                                    POTE-467
      V(IS,IL+1)=-XQ*V(IS,KI+9)*(1.D0+WVX(6))                           POTE-468
      V(IS,IL+2)=-XQ*V(IS,KI+10)*(1.D0+WVX(5))                          POTE-469
      V(IS,IL+3)=XQ*V(IS,KI+5)/RR*(1.D0+WVX(6))                         POTE-470
   63 V(IS,IL+4)=XQ*V(IS,KI+6)/RR*(1.D0+WVX(5))                         POTE-471
      IF (IVY(5,IJ).EQ.0) GO TO 65                                      POTE-472
      RR=0.D0                                                           POTE-473
      DO 64 IS=1,ISM                                                    POTE-474
      RR=RR+WV(11,1)                                                    POTE-475
      V(IS,IL+1)=V(IS,IL+1)-XQ*V(IS,KI+11)                              POTE-476
   64 V(IS,IL+3)=V(IS,IL+3)+XQ*V(IS,KI+8)/RR                            POTE-477
      IF (IVY(7,IJ).LE.MCM(2)) VDO(2,L)=XP*V(ISM,KI+8)*RR**(IVY(7,IJ)+1 POTE-478
     1)                                                                 POTE-479
   65 CONTINUE                                                          POTE-480
C OUTPUT OF POTENTIALS                                                  POTE-481
   66 IF (LO(151)) GO TO 73                                             POTE-482
      IF (LO(100)) GO TO 70                                             POTE-483
      DO 67 J=1,NPX                                                     POTE-484
      WRITE (MW,1006) J                                                 POTE-485
      WRITE (MW,1007) (I,V(I,J+IV1),V(I,J+IV2),I=1,ISM)                 POTE-486
      IF (LO(229)) WRITE (MW,1008) (I,V(I,J+IV3),I=1,ISM)               POTE-487
      IF (LO(230)) WRITE (MW,1009) (I,V(I,J+IV4),I=1,ISM)               POTE-488
   67 CONTINUE                                                          POTE-489
      IF (IV2.EQ.IV5) GO TO 73                                          POTE-490
      NVX=IV2-IV5                                                       POTE-491
      WRITE (MW,1010)                                                   POTE-492
      NVA=MIN0(NVX,6)                                                   POTE-493
      DO 68 I=1,ISM                                                     POTE-494
      WRITE (MW,1011) I,(J,V(I,J+IV5),J=1,NVA)                          POTE-495
      IF (NVA.NE.NVX) WRITE (MW,1012) (J,V(I,J+IV5),J=7,NVX)            POTE-496
   68 CONTINUE                                                          POTE-497
      IF (IT1.EQ.IV6) GO TO 73                                          POTE-498
      MVX=IT1-IV6                                                       POTE-499
      WRITE (MW,1013)                                                   POTE-500
      NVA=MIN0(MVX,6)                                                   POTE-501
      DO 69 I=1,ISM                                                     POTE-502
      WRITE (MW,1011) I,(J,V(I,J+IV6),J=1,NVA)                          POTE-503
      IF (NVA.NE.MVX) WRITE (MW,1012) (J,V(I,J+IV6),J=7,MVX)            POTE-504
   69 CONTINUE                                                          POTE-505
      GO TO 73                                                          POTE-506
   70 N=0                                                               POTE-507
      DO 71 L=1,NCOLL                                                   POTE-508
      WRITE (MW,1014) L                                                 POTE-509
      WRITE (MW,1015) (I,(V(I,N+J),J=1,6),I=1,ISM)                      POTE-510
      WRITE (MW,1016) L                                                 POTE-511
      WRITE (MW,1015) (I,(V(I,N+J),J=7,12),I=1,ISM)                     POTE-512
      IF (.NOT.(LO(201).AND.LO(203))) WRITE (MW,1017) L,(I,(V(I,N+J),J=1POTE-513
     13,14),I=1,ISM)                                                    POTE-514
   71 N=N+14                                                            POTE-515
      L=INTV+INSL                                                       POTE-516
      IF (L.EQ.0) GO TO 73                                              POTE-517
      N=IT2                                                             POTE-518
      DO 72 K=1,L                                                       POTE-519
      IF (K.LE.INTV) WRITE (MW,1018) K                                  POTE-520
      IF (K.GT.INTV) WRITE (MW,1019) K                                  POTE-521
      WRITE (MW,1020) (I,(V(I,N+J),J=1,4),I=1,ISM)                      POTE-522
   72 N=N+4                                                             POTE-523
   73 IDT=IDY                                                           POTE-524
      RETURN                                                            POTE-525
 1000 FORMAT ('<POTENTI.>',F10.2,F10.5,F10.2,2I5)                       POTE-526
 1001 FORMAT (2X,3A8,' POTENTIAL ***',I2,' ***',5X,I5)                  POTE-527
 1002 FORMAT (2X,0P,F10.5,1P,D20.6,0P,F10.5,1P,D20.6,A4,I6)             POTE-528
 1003 FORMAT (0P,F10.5,1P,D20.6,0P,F10.5,1P,D20.6,A4,I6)                POTE-529
 1004 FORMAT (2X,3A8,' TRANSITION POTENTIAL ***',I2,' ***',5X,I5)       POTE-530
 1005 FORMAT (' FORM FACTOR',I4,'  POTENTIAL',I3,'  RATIO OF CORRECTING POTE-531
     1DEFORMATION',D15.6)                                               POTE-532
 1006 FORMAT (//' POTENTIAL ****',I2,' ****')                           POTE-533
 1007 FORMAT (//' CENTRAL POTENTIAL'//(3(5X,I5,1P,2D14.5,' I')))        POTE-534
 1008 FORMAT (//' REAL SPIN-ORBIT POTENTIAL'//(6(2X,I4,1P,D14.5)))      POTE-535
 1009 FORMAT (//' IMAGINARY SPIN-ORBIT POTENTIAL'//(6(2X,I4,1P,D14.5))) POTE-536
 1010 FORMAT (//' REAL MULTIPOLES'/)                                    POTE-537
 1011 FORMAT (4X,I4,6(I4,1P,D14.5))                                     POTE-538
 1012 FORMAT ((8X,6(I4,1P,D14.5)))                                      POTE-539
 1013 FORMAT (//' IMAGINARY MULTIPOLES'/)                               POTE-540
 1014 FORMAT (//' POTENTIALS OF SCHROEDINGER''S EQUATION FOR CHANNEL',I3POTE-541
     1/15X,'CENTRAL',27X,'SPIN-ORBIT',28X,'D(R)')                       POTE-542
 1015 FORMAT (2X,I3,1P,2D14.7,' I',5X,2D14.7,' I',5X,2D14.7,' I')       POTE-543
 1016 FORMAT (/17X,'E(R)',28X,'SQRT(D(R))',25X,'D(R)**(-1)',3X,'FOR CHANPOTE-544
     1NEL',I3)                                                          POTE-545
 1017 FORMAT (/45X,'TENSOR POTENTIAL',36X,'FOR CHANNEL',I3/(3(2X,I3,1P,2POTE-546
     1D14.7,' I')))                                                     POTE-547
 1018 FORMAT (//' SCALAR AND VECTOR MULTIPOLES',I6/)                    POTE-548
 1019 FORMAT (//' TENSOR MULTIPOLES',I6/)                               POTE-549
 1020 FORMAT (5X,I5,1P,2D26.7,' I',10X,2D16.7,' I')                     POTE-550
      END                                                               POTE-551
C 25/07/04                                                      ECIS03  ROTP-000
      SUBROUTINE ROTP(BETA,NBTA,BTA,IP,V,VA,IVY,IV,PP,B,P,VAL,ID1,ISM,H,ROTP-001
     1INVZ,IQ1,IQM,INY,NBT1,PGN,XGN,CCZ,LO)                             ROTP-002
C INPUT VARIABLES:  BETA,NBTA: DEFORMATIONS, EQUIVALENT BY CALL         ROTP-003
C                   BTA:       STATIC DEFORMATIONS (ROTATIONAL MODEL)   ROTP-004
C                   IP:        POTENTIAL NUMBER (SCHROEDINGER EQUATION) ROTP-005
C                              ADDRESS TO TEMPORARILY STORAGE OF DIRAC  ROTP-006
C                              POTENTIALS IN V                          ROTP-007
C                   IVY:       DESCRIPTION OF FORM FACTORS              ROTP-008
C                              (SEE THIRD PART OF IQ IN REDM)           ROTP-009
C                   VAL:       OPTICAL PARAMETERS                       ROTP-010
C                   ID1:       FIRST DIMENSION OF THE WORKING SPACE P   ROTP-011
C                   ISM,H:     NUMBER AND SIZE OF STEPS                 ROTP-012
C                   INVZ:      NUMBER OF TRANSITION FORM FACTORS        ROTP-013
C                   IQ1:       INY + NUMBER OF TRANSITION FORM FACTORS  ROTP-014
C                   IQM:       MAXIMUM MULTIPOLARITY OF STATIC DEFORM.  ROTP-015
C                   INY:       1 + NUMBER OF DERIVATIVES OF CENTRAL     ROTP-016
C                              POTENTIALS ( SCHROEDINGER: 1, DIRAC: 2)  ROTP-017
C                   NBT1:      NUMBER OF VIBRATIONS                     ROTP-018
C                   PGN,XGN:   WEIGHTS, ABSCISSAE OF LEGENDRE INTEGRAL  ROTP-019
C                   LO:        LOGICAL CONTROLS                         ROTP-020
C IN COMMON /POTE1/ (SEE REDM) NUMBER AND STARTING ADDRESS OF DIFFERENT ROTP-021
C            POTENTIALS AND FORM  FACTOR IN V FOR SCHROEDINGER EQUATION ROTP-022
C IN COMMON /DCONS/ (SEE CALC) HBAR, COULOMB PARAMETER                  ROTP-023
C OUTPUT VARIABLES: V:         POTENTIALS AND TRANSITION FORM FACTORS   ROTP-024
C                              ONLY POTENTIALS AND DERIVATIVES FOR DIRACROTP-025
C                   VA:        TRANSITION FORM FACTORS FOR DIRAC EQU.   ROTP-026
C WORKING SPACE:    IV:        ORDER OF DERIVATIVE OF THE IQ1 FORM FAC. ROTP-027
C                   PP:        INTERMEDIATE RESULTS, WEIGHTS, ....      ROTP-028
C                   B:         FOR DEFORMATIONS                         ROTP-029
C                   P:         DOUBLE AND SINGLE PREC. IN EQUIVALENCE   ROTP-030
C***********************************************************************ROTP-031
      IMPLICIT REAL*8 (A-H,O-Z)                                         ROTP-032
      LOGICAL LO(250),LQ(8,5)                                           ROTP-033
      DIMENSION IVY(7,2),IV(1),IZ(8,2),P(ID1,3),EP(8),PP(2),ZZ(2),DD(2),ROTP-034
     1Q(8,12,3),VR(6,10),B(10,1),NBTA(18,1),PGN(10),XGN(10),LDL(8),SRD(4ROTP-035
     2),VS(14),BETA(9,1),BTA(9,1),VAL(25),V(ISM,1),VA(ISM,11,1)         ROTP-036
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM              ROTP-037
      COMMON /INOUT/ MR,MW,MS                                           ROTP-038
      EQUIVALENCE (ITX(1),IT1),(ITX(2),IT2),(ITX(3),IT3),(ITX(4),IT4),(IROTP-039
     1TX(5),IT5),(ITX(6),IT6),(ITX(7),IT7),(ITX(8),IT8),(ITX(9),IT9),(ITROTP-040
     2X(10),IT0),(ITX(11),ITA),(ITX(12),ITB),(ITX(13),ITC),(ITX(14),ITD)ROTP-041
     3,(ITX(15),ITE),(ITX(16),ITF)                                      ROTP-042
      DATA LDL /7,112,7,112,113,114,111,119/                            ROTP-043
      DATA SRD /1.D0,1.D0,2.D0,6.D0/                                    ROTP-044
C CHECKS OF DIFFUSENESSES                                               ROTP-045
      DO 2 I=1,8                                                        ROTP-046
      J=LDL(I)                                                          ROTP-047
      LQ(I,5)=LO(J)                                                     ROTP-048
      LQ(I,1)=VAL(3*I-2).EQ.0.D0                                        ROTP-049
      LQ(I,2)=(I.LE.6).OR.(VAL(3*I-2)*VAL(3*I).NE.0.D0)                 ROTP-050
      LQ(I,3)=LQ(I,1).OR.(.NOT.LQ(I,2))                                 ROTP-051
      LQ(I,2)=LQ(I,2).OR.LQ(I,1)                                        ROTP-052
      IF (LQ(I,1)) GO TO 2                                              ROTP-053
      LQ(I,4)=LO(109).OR.(VAL(3*I-1).GE.0.D0)                           ROTP-054
      IF (.NOT.LQ(I,2)) GO TO 1                                         ROTP-055
      IF (VAL(3*I).GE.0.02D0*H) GO TO 1                                 ROTP-056
      WRITE (MW,1000) VAL(3*I),I,IP                                     ROTP-057
      VAL(3*I)=DMAX1(-VAL(3*I),0.02D0*H)                                ROTP-058
    1 IF (VAL(3*I-1).GE.H.OR.LO(9)) GO TO 2                             ROTP-059
      WRITE (MW,1001) VAL(3*I-1),I,IP                                   ROTP-060
      VAL(3*I-1)=DMAX1(-VAL(3*I-1),H)                                   ROTP-061
    2 CONTINUE                                                          ROTP-062
      LQ(1,2)=LQ(7,2).AND.LQ(8,2)                                       ROTP-063
      IDG=0                                                             ROTP-064
      INX=INY+1                                                         ROTP-065
      SR=1.D0                                                           ROTP-066
      DO 11 I=1,IQ1                                                     ROTP-067
      IV(I)=I+3                                                         ROTP-068
      IF (I.LE.INY) GO TO 8                                             ROTP-069
      K=MOD(IVY(1,I-INY),1000)                                          ROTP-070
      IF (K.EQ.0.OR.LO(3)) GO TO 6                                      ROTP-071
      IF (K.GT.NBT1) GO TO 4                                            ROTP-072
      IV(I)=2                                                           ROTP-073
      IDG=MAX0(IDG,1)                                                   ROTP-074
      DO 3 J=1,8                                                        ROTP-075
      IF (LO(106)) SR=DABS(VAL(3*J-1))                                  ROTP-076
    3 B(J,I)=0.282095D0*BETA(J,K)*SR                                    ROTP-077
      GO TO 10                                                          ROTP-078
    4 K1=MOD(K,NBT1+1)                                                  ROTP-079
      K2=K/(NBT1+1)                                                     ROTP-080
      IDG=MAX0(IDG,2)                                                   ROTP-081
      IV(I)=3                                                           ROTP-082
      DO 5 J=1,8                                                        ROTP-083
      IF (LO(106)) SR=DABS(VAL(3*J-1))                                  ROTP-084
    5 B(J,I)=0.0397887D0*BETA(J,K1)*BETA(J,K2)*SR*SR                    ROTP-085
      GO TO 10                                                          ROTP-086
    6 IV(I)=K+1                                                         ROTP-087
      IDG=MAX0(IDG,K)                                                   ROTP-088
      IF (LO(1)) GO TO 8                                                ROTP-089
      DO 7 J=1,8                                                        ROTP-090
      IF (LO(106)) SR=DABS(VAL(3*J-1))                                  ROTP-091
    7 B(J,I)=SR**K*0.282095D0*BETA(J,K+1)/SRD(K+1)                      ROTP-092
      GO TO 10                                                          ROTP-093
    8 DO 9 J=1,8                                                        ROTP-094
    9 B(J,I)=1.D0                                                       ROTP-095
   10 B(9,I)=B(5,I)                                                     ROTP-096
   11 B(10,I)=B(6,I)                                                    ROTP-097
      IV(1)=1                                                           ROTP-098
C SET UP OF FORM FACTOR COMPUTATION                                     ROTP-099
      IDS=1                                                             ROTP-100
      IDR=1                                                             ROTP-101
      IF (LO(17).OR.LO(99)) IDS=0                                       ROTP-102
      IF (LO(209)) IDR=0                                                ROTP-103
      IDT=IDR+IDS                                                       ROTP-104
      DO 12 I=1,8                                                       ROTP-105
      IDZ=IDG                                                           ROTP-106
      IF (LQ(I,5)) IDZ=0                                                ROTP-107
      IZ(I,2)=IDZ+1                                                     ROTP-108
      IF (LQ(I,3)) GO TO 12                                             ROTP-109
      EP(I)=DEXP(H/VAL(3*I))                                            ROTP-110
      IF ((I.EQ.3).OR.(I.EQ.4)) IDZ=IDZ+IDR                             ROTP-111
      IF ((I.EQ.5).OR.(I.EQ.6).OR.(I.EQ.8)) IDZ=IDZ+IDS                 ROTP-112
      IF (LO(209)) IDZ=MAX0(IDZ,2)                                      ROTP-113
   12 IZ(I,1)=IDZ                                                       ROTP-114
C LQ(I,1) IS .TRUE. IF THE FORM FACTOR IS NOT USED                      ROTP-115
C LQ(I,2) IS .TRUE. FOR COULOMB FORM FACTOR WITH DIFFUSENESS            ROTP-116
C LQ(I,3) IS .FALSE. FOR ANY WOODS-SAXON FORM FACTORS                   ROTP-117
C LQ(I,4) IS .FALSE. FOR SYMMETRISED WOODS-SAXON FORM FACTORS           ROTP-118
C LQ(I,5) IS .FALSE. FOR DEFORMED FORM FACTORS                          ROTP-119
      CALL ROTD(NBTA,BTA,IVY,IV,PP,P,Q,VAL,ID1,INVZ,IMAX,IQ1,IQM,INY,IDTROTP-120
     1,LQ,DD,PGN,XGN,LO)                                                ROTP-121
      ZZ(1)=CCZ*VAL(19)                                                 ROTP-122
      ZZ(2)=CCZ*VAL(22)                                                 ROTP-123
      IF (DD(1).NE.0.D0) ZZ(1)=ZZ(1)/DD(1)                              ROTP-124
      IF (DD(2).NE.0.D0) ZZ(2)=ZZ(2)/DD(2)                              ROTP-125
      DO 13 I=1,60                                                      ROTP-126
   13 VR(I,1)=0.D0                                                      ROTP-127
      R=0.D0                                                            ROTP-128
      DO 61 IS=1,ISM                                                    ROTP-129
      R=R+H                                                             ROTP-130
      DO 15 I=1,IQ1                                                     ROTP-131
      DO 14 J=17,27                                                     ROTP-132
   14 P(J,I)=0.D0                                                       ROTP-133
   15 CONTINUE                                                          ROTP-134
C INTEGRATION LOOP                                                      ROTP-135
      DO 52 J=1,IDT                                                     ROTP-136
      DO 35 I=1,8                                                       ROTP-137
      IF (LQ(I,3)) GO TO 35                                             ROTP-138
      IF (P(I,J).NE.0.D0) GO TO 16                                      ROTP-139
      Q(I,J,1)=Q(I,J,1)+H                                               ROTP-140
      IF (Q(I,J,1)+50.D0*VAL(3*I).GT.0.D0) P(I,J)=DEXP(Q(I,J,1)/VAL(3*I)ROTP-141
     1)                                                                 ROTP-142
      GO TO 17                                                          ROTP-143
   16 IF (P(I,J).LT.1.D15) P(I,J)=P(I,J)*EP(I)                          ROTP-144
   17 IF ((.NOT.LQ(I,4)).AND.P(I+8,J).GT.1.D-15) P(I+8,J)=P(I+8,J)/EP(I)ROTP-145
      IDV=IZ(I,1)                                                       ROTP-146
      VR(1,I)=VAL(3*I-2)/(1.D0+P(I,J))                                  ROTP-147
      IF (IDV.LE.0) GO TO 18                                            ROTP-148
      AR=1.D0/(VAL(3*I)*(1.D0+P(I,J)))                                  ROTP-149
      VR(2,I)=VR(1,I)*AR*P(I,J)                                         ROTP-150
      IF (IDV.GT.1) VR(3,I)=VR(2,I)*AR*(P(I,J)-1.D0)                    ROTP-151
      IF (IDV.GT.2) VR(4,I)=VR(2,I)*(P(I,J)**2-4.D0*P(I,J)+1.D0)*AR*AR  ROTP-152
      IF (IDV.GT.3) VR(5,I)=VR(3,I)*(P(I,J)**2-10.D0*P(I,J)+1.D0)*AR*AR ROTP-153
   18 IF (LQ(I,4)) GO TO 28                                             ROTP-154
      VS(10)=1.D0/(1.D0+P(I+8,J))                                       ROTP-155
      IF (IDV.LE.0) GO TO 19                                            ROTP-156
      AR=VS(10)/VAL(3*I)                                                ROTP-157
      VS(11)=VS(10)*AR*P(I+8,J)                                         ROTP-158
      IF (IDV.GT.1) VS(12)=VS(11)*AR*(P(I+8,J)-1.D0)                    ROTP-159
      IF (IDV.GT.2) VS(13)=VS(11)*(P(I+8,J)**2-4.D0*P(I+8,J)+1.D0)*AR*ARROTP-160
      IF (IDV.GT.3) VS(14)=VS(12)*(P(I+8,J)**2-10.D0*P(I+8,J)+1.D0)*AR*AROTP-161
     1R                                                                 ROTP-162
      IF (IDV.GT.3) VS(5)=VR(1,I)*VS(14)+4.D0*VR(2,I)*VS(13)+6.D0*VR(3,IROTP-163
     1)*VS(12)+4.D0*VR(4,I)*VS(11)+VR(5,I)*VS(10)                       ROTP-164
      IF (IDV.GT.2) VS(4)=VR(1,I)*VS(13)+3.D0*VR(2,I)*VS(12)+3.D0*VR(3,IROTP-165
     1)*VS(11)+VR(4,I)*VS(10)                                           ROTP-166
      IF (IDV.GT.1) VS(3)=VR(1,I)*VS(12)+2.D0*VR(2,I)*VS(11)+VR(3,I)*VS(ROTP-167
     110)                                                               ROTP-168
      IF (IDV.GT.0) VS(2)=VR(1,I)*VS(11)+VR(2,I)*VS(10)                 ROTP-169
   19 VS(1)=VR(1,I)*VS(10)                                              ROTP-170
      IF ((I.LT.3).OR.(I.GE.7).OR.(IDT.EQ.0)) GO TO 25                  ROTP-171
      IF (IDV.GT.3) VS(9)=VR(1,I)*VS(14)+2.D0*VR(2,I)*VS(13)-2.D0*VR(4,IROTP-172
     1)*VS(11)-VR(5,I)*VS(10)                                           ROTP-173
      IF (IDV.GT.2) VS(8)=VR(1,I)*VS(13)+VR(2,I)*VS(12)-VR(3,I)*VS(11)-VROTP-174
     1R(4,I)*VS(10)                                                     ROTP-175
      IF (IDV.GT.1) VS(7)=VR(1,I)*VS(12)-VR(3,I)*VS(10)                 ROTP-176
      VS(6)=VR(1,I)*VS(11)-VR(2,I)*VS(10)                               ROTP-177
      IF (I.GT.4) GO TO 21                                              ROTP-178
      IF (IDR.EQ.0) GO TO 25                                            ROTP-179
      AR=4.D0*R*VAL(3*I)/VAL(3*I-1)                                     ROTP-180
      DO 20 K=1,IDV                                                     ROTP-181
   20 VR(K,I)=AR*VS(K+5)                                                ROTP-182
      GO TO 35                                                          ROTP-183
   21 IF (IDS.EQ.0) GO TO 25                                            ROTP-184
      IF (LO(100)) GO TO 23                                             ROTP-185
      DO 22 K=1,IDV                                                     ROTP-186
      VR(K,I+4)=VS(K)/R**2                                              ROTP-187
   22 VR(K,I)=-VS(K+5)/R                                                ROTP-188
      GO TO 35                                                          ROTP-189
   23 DO 24 K=1,IDV                                                     ROTP-190
   24 VR(K,I+4)=-VS(K+5)                                                ROTP-191
   25 IF (.NOT.LO(209)) GO TO 26                                        ROTP-192
      VR(6,I)=VR(3,I)*VS(10)-2.D0*VR(2,I)*VS(11)+VR(1,I)*VS(12)         ROTP-193
      VR(5,I)=VR(2,I)*VS(10)-VR(1,I)*VS(11)                             ROTP-194
   26 IDZ=IZ(I,2)                                                       ROTP-195
      DO 27 K=1,IDZ                                                     ROTP-196
   27 VR(K,I)=VS(K)                                                     ROTP-197
      GO TO 35                                                          ROTP-198
   28 IF ((I.LT.3).OR.(I.GE.7).OR.(IDT.EQ.0)) GO TO 34                  ROTP-199
      IF (I.GT.4) GO TO 30                                              ROTP-200
      IF (IDR.EQ.0) GO TO 34                                            ROTP-201
      DO 29 K=1,IDV                                                     ROTP-202
   29 VR(K,I)=4.D0*VR(K+1,I)*VAL(3*I)                                   ROTP-203
      GO TO 34                                                          ROTP-204
   30 IF (IDS.EQ.0) GO TO 34                                            ROTP-205
      IF (LO(100)) GO TO 32                                             ROTP-206
      DO 31 K=1,IDV                                                     ROTP-207
      VR(K,I+4)=VR(K,I)/R**2                                            ROTP-208
   31 VR(K,I)=VR(K+1,I)/R                                               ROTP-209
      GO TO 34                                                          ROTP-210
   32 DO 33 K=1,IDV                                                     ROTP-211
   33 VR(K,I+4)=VR(K+1,I)                                               ROTP-212
   34 IF (.NOT.LO(209)) GO TO 35                                        ROTP-213
      VR(5,I)=VR(2,I)                                                   ROTP-214
      VR(6,I)=VR(3,I)                                                   ROTP-215
   35 CONTINUE                                                          ROTP-216
      IF (LO(199)) GO TO 36                                             ROTP-217
      CALL ROTZ(VR,XGN,R,Q,VAL,J,IV,B,P,ID1,IQ1,CCZ,LO)                 ROTP-218
      GO TO 52                                                          ROTP-219
   36 DO 38 L=1,IQ1                                                     ROTP-220
      K=IV(L)                                                           ROTP-221
      DO 37 M=1,10                                                      ROTP-222
   37 P(M+16,L)=P(M+16,L)+VR(K,M)*P(L+27,J)*B(M,L)                      ROTP-223
   38 CONTINUE                                                          ROTP-224
      IF (LQ(1,2)) GO TO 52                                             ROTP-225
C DEFORMED COULOMB POTENTIAL                                            ROTP-226
      DO 51 I=7,8                                                       ROTP-227
      IF (LQ(I,2)) GO TO 51                                             ROTP-228
      C=P(I,J)/R                                                        ROTP-229
      IF (I.EQ.8.AND.LO(117).AND.LO(200)) GO TO 40                      ROTP-230
      IF (R.LT.P(I,J)) GO TO 39                                         ROTP-231
      P(I+16,1)=P(I+16,1)+ZZ(I-6)*(P(I,J)**2)*C*P(28,J)                 ROTP-232
      IF (LO(200)) GO TO 41                                             ROTP-233
      P(I+16,2)=P(I+16,2)+ZZ(I-6)*P(I,J)*C**2*P(28,J)                   ROTP-234
      P(I+16,3)=P(I+16,3)+ZZ(I-6)*2.D0*C**3*P(28,J)                     ROTP-235
      GO TO 41                                                          ROTP-236
   39 P(I+16,1)=P(I+16,1)+(0.5D0*P(I,J)*P(I,J)-R*R/6.D0)*ZZ(I-6)*P(28,J)ROTP-237
     1*3.D0                                                             ROTP-238
      IF (LO(200)) GO TO 41                                             ROTP-239
      P(I+16,2)=P(I+16,2)+R*ZZ(I-6)*P(28,J)                             ROTP-240
      P(I+16,3)=P(I+16,3)-ZZ(I-6)*P(28,J)                               ROTP-241
      GO TO 41                                                          ROTP-242
   40 C1=ZZ(I-6)*P(28,J)                                                ROTP-243
      IF (R.GT.P(I,J)) C1=C1*C**3                                       ROTP-244
      P(24,1)=P(24,1)+C1                                                ROTP-245
   41 IF (INVZ.EQ.0) GO TO 51                                           ROTP-246
      IF (LO(8*I+55)) GO TO 51                                          ROTP-247
      DO 50 K=INX,IQ1                                                   ROTP-248
      L=IVY(7,K-INY)+1                                                  ROTP-249
      IF ((IVY(I-3,K-INY).EQ.0).OR.(L.EQ.1)) GO TO 50                   ROTP-250
      D=L                                                               ROTP-251
      N=IV(K)                                                           ROTP-252
      IF (R.LT.P(I,J)) GO TO 42                                         ROTP-253
      C1=(P(I,J)**2)*(C**L)*3.D0/((D+2.D0)*(2.D0*D-1.D0))               ROTP-254
      IF (N.GT.1) C1=C1*(D+2.D0)/P(I,J)                                 ROTP-255
      IF (N.GT.2) C1=C1*(D+1.D0)/P(I,J)                                 ROTP-256
      IF (N.GT.3) C1=C1*D/P(I,J)                                        ROTP-257
      GO TO 44                                                          ROTP-258
   42 IF (L.NE.3) GO TO 43                                              ROTP-259
      IF (N.EQ.1) C1=R*R*(0.2D0+DLOG(C))*0.6D0                          ROTP-260
      IF (N.GE.2) C1=0.6D0*R/C                                          ROTP-261
      IF (N.GE.3) C1=-C1/P(I,J)                                         ROTP-262
      IF (N.GE.4) C1=-2.D0*C1/P(I,J)                                    ROTP-263
      GO TO 44                                                          ROTP-264
   43 IF (N.EQ.1) C1=R*R*(1.D0/(D+2.D0)-1.D0/(C**(L-3)*(2.D0*D-1.D0)))*3ROTP-265
     1.D0/(D-3.D0)                                                      ROTP-266
      IF (N.GE.2) C1=R/C**(L-2)*3.D0/(2.D0*D-1.D0)                      ROTP-267
      IF (N.GE.3) C1=-C1*(D-2.D0)/P(I,J)                                ROTP-268
      IF (N.EQ.4) C1=-C1*(D-1.D0)/P(I,J)                                ROTP-269
   44 IF (I.EQ.7.OR.LO(17)) GO TO 49                                    ROTP-270
      IF (R.LT.P(I,J)) GO TO 45                                         ROTP-271
      C2=-D*C1/R                                                        ROTP-272
      GO TO 47                                                          ROTP-273
   45 IF (L.NE.3) GO TO 46                                              ROTP-274
      IF (N.EQ.1) C2=-1.2D0*(0.3D0*R-DLOG(C))*R                         ROTP-275
      IF (N.GE.2) C2=2.D0*C1/R                                          ROTP-276
      GO TO 47                                                          ROTP-277
   46 IF (N.EQ.1) C2=(2.D0/(D+2.D0)-(D-1.D0)/(C**(L-3)*(2.D0*D-1.D0)))*3ROTP-278
     1.D0/(D-3.D0)*R                                                    ROTP-279
      IF (N.NE.1)  C2=(D-1.D0)*C1/R                                     ROTP-280
   47 IF (LO(100)) GO TO 48                                             ROTP-281
      P(27,K)=P(27,K)-ZZ(2)*C1*P(K+27,J)*B(I,K)/R**2                    ROTP-282
      P(24,K)=P(24,K)-ZZ(2)*C2*P(K+27,J)*B(I,K)/R                       ROTP-283
      GO TO 50                                                          ROTP-284
   48 P(27,K)=P(27,K)-ZZ(2)*C2*P(K+27,J)*B(I,K)                         ROTP-285
      P(24,K)=P(24,K)+ZZ(2)*C1*P(K+27,J)*B(I,K)                         ROTP-286
      GO TO 50                                                          ROTP-287
   49 P(I+16,K)=P(I+16,K)+ZZ(I-6)*C1*P(K+27,J)*B(I,K)                   ROTP-288
   50 CONTINUE                                                          ROTP-289
   51 CONTINUE                                                          ROTP-290
   52 CONTINUE                                                          ROTP-291
C STORAGE OF FORM FACTORS                                               ROTP-292
      IF (LO(100)) GO TO 56                                             ROTP-293
      V(IS,IP+IT1)=P(17,1)                                              ROTP-294
      V(IS,IP+IT2)=P(18,1)                                              ROTP-295
      V(IS,IP+IT3)=P(19,1)                                              ROTP-296
      V(IS,IP+IT4)=P(20,1)                                              ROTP-297
      IF (.NOT.LO(201)) V(IS,IP+IT5)=P(21,1)                            ROTP-298
      IF (.NOT.LO(202)) V(IS,IP+IT6)=P(22,1)                            ROTP-299
      V(IS,IP+IT7)=P(23,1)                                              ROTP-300
      IF (.NOT.LO(203)) V(IS,IP+IT8)=P(24,1)                            ROTP-301
      IF (INVZ.LE.0) GO TO 61                                           ROTP-302
      DO 55 J=1,INVZ                                                    ROTP-303
      K=J+INY                                                           ROTP-304
      V(IS,J+IT9)=P(17,K)                                               ROTP-305
      V(IS,J+ITA)=P(19,K)                                               ROTP-306
      IF (LO(112)) GO TO 53                                             ROTP-307
      V(IS,J+IT0)=P(18,K)                                               ROTP-308
      V(IS,J+ITB)=P(20,K)                                               ROTP-309
   53 IJ=IVY(4,J)                                                       ROTP-310
      IF (IJ.NE.0) V(IS,IJ+ITE)=P(23,K)                                 ROTP-311
      IJ=IVY(3,J)                                                       ROTP-312
      IF (IJ.EQ.0) GO TO 54                                             ROTP-313
      V(IS,IJ+ITC)=P(21,K)                                              ROTP-314
      V(IS,IJ+ITC+INLS)=-P(25,K)                                        ROTP-315
      IF (LO(114)) GO TO 54                                             ROTP-316
      V(IS,IJ+ITD)=P(22,K)                                              ROTP-317
      V(IS,IJ+ITD+INLS)=-P(26,K)                                        ROTP-318
   54 IJ=IVY(5,J)                                                       ROTP-319
      IF (IJ.EQ.0) GO TO 55                                             ROTP-320
      V(IS,IJ+ITF)=P(24,K)                                              ROTP-321
      V(IS,IJ+ITF+INVD)=P(27,K)                                         ROTP-322
   55 CONTINUE                                                          ROTP-323
      GO TO 61                                                          ROTP-324
   56 K=IP                                                              ROTP-325
      DO 58 I=1,3                                                       ROTP-326
      DO 57 J=17,24                                                     ROTP-327
      V(IS,K)=P(J,I)                                                    ROTP-328
   57 K=K+1                                                             ROTP-329
   58 CONTINUE                                                          ROTP-330
      IF (INVZ.EQ.0) GO TO 61                                           ROTP-331
      DO 60 K=1,INVZ                                                    ROTP-332
      DO 59 J=1,11                                                      ROTP-333
   59 VA(IS,J,K)=P(J+16,K+3)                                            ROTP-334
   60 CONTINUE                                                          ROTP-335
   61 CONTINUE                                                          ROTP-336
C COULOMB POTENTIALS WITH DIFFUSE CHARGE DISTRIBUTION                   ROTP-337
      IF (LQ(7,3).AND.LQ(8,3)) RETURN                                   ROTP-338
      DO 67 I=7,8                                                       ROTP-339
      IF (LQ(I,3)) GO TO 67                                             ROTP-340
      I1=IP+ITX(I)                                                      ROTP-341
      IF (I.EQ.8.AND.LO(117).AND.LO(200)) GO TO 62                      ROTP-342
      IF (LO(100)) I1=IP+I-1                                            ROTP-343
      CALL COPO(V(1,I1),V(1,I1),P,ISM,H,0,VAL(3*I-2),VAL(25),CCZ,ZT,.FALROTP-344
     1SE.,.FALSE.)                                                      ROTP-345
      IF (LO(200)) GO TO 63                                             ROTP-346
      CALL DERI(V(1,I1+8),V(1,I1),H,ISM,.TRUE.)                         ROTP-347
      CALL DERI(V(1,I1+16),V(1,I1+8),H,ISM,.TRUE.)                      ROTP-348
      GO TO 63                                                          ROTP-349
   62 CALL COPO(P,V(1,I1),P,ISM,H,0,VAL(3*I-2),VAL(25),CCZ,ZT,.FALSE.,.FROTP-350
     1ALSE.)                                                            ROTP-351
      CALL DERI(V(1,I1),P,H,ISM,.FALSE.)                                ROTP-352
   63 IF (INVZ.EQ.0.OR.LO(8*I+55)) GO TO 67                             ROTP-353
      DO 66 J=1,INVZ                                                    ROTP-354
      N=IVY(I-3,J)                                                      ROTP-355
      L=IVY(7,J)                                                        ROTP-356
      IF ((N.EQ.0).OR.(L.EQ.0)) GO TO 66                                ROTP-357
      I1=N+ITX(I+8)                                                     ROTP-358
      IF (LO(100)) I1=IT5+11*J+I                                        ROTP-359
      I2=I1                                                             ROTP-360
      IF (LO(200).AND.(I.EQ.8).AND.LO(117)) I2=I2+INVD                  ROTP-361
      CALL COPO(V(1,I2),V(1,I1),P,ISM,H,L,VAL(3*I-2),VAL(25),CCZ,ZT,.FALROTP-362
     1SE.,.TRUE.)                                                       ROTP-363
      IF ((I.EQ.7).OR.LO(17)) GO TO 66                                  ROTP-364
      IF (LO(200)) GO TO 64                                             ROTP-365
      CALL DERI(V(1,I1+3),V(1,I1),H,ISM,.TRUE.)                         ROTP-366
      GO TO 66                                                          ROTP-367
   64 CALL DERI(V(1,I1),V(1,I2),H,ISM,.FALSE.)                          ROTP-368
      RR=0.D0                                                           ROTP-369
      DO 65 IS=1,ISM                                                    ROTP-370
      RR=RR+H                                                           ROTP-371
   65 V(IS,I2)=-V(IS,I2)/RR**2                                          ROTP-372
   66 CONTINUE                                                          ROTP-373
   67 CONTINUE                                                          ROTP-374
      RETURN                                                            ROTP-375
 1000 FORMAT (' TOO SMALL DIFFUSENESS =',D15.6,' FOR THE POTENTIAL',2I4,ROTP-376
     1'   CHANGED INTO ITS MINIMUM VALUE')                              ROTP-377
 1001 FORMAT (' TOO SMALL COULOMB RADIUS =',D15.6,' FOR THE POTENTIAL',2ROTP-378
     1I4,'   CHANGED INTO ITS MINIMUM VALUE')                           ROTP-379
      END                                                               ROTP-380
C 01/01/04                                                      ECIS03  ROTD-000
      SUBROUTINE ROTD(NBTA,BTA,IVY,IV,PP,P,Q,VAL,ID1,INVZ,IMAX,IQ1,IQM,IROTD-001
     1NY,IDT,LQ,DD,PGN,XGN,LO)                                          ROTD-002
C       SYMMETRIC ROTATIONAL MODEL                                      ROTD-003
C A 20-POINTS GAUSS-LEGENDRE INTEGRATION METHOD IS USED, REDUCED TO 10  ROTD-004
C VALUES BY SYMMETRY                                                    ROTD-005
C                                                                       ROTD-006
C       ASYMMETRIC ROTATIONAL MODEL                                     ROTD-007
C 36 VALUES OF (THETA,PHI) HAVE BEEN CHOSEN. THE VALUES OF THETA ARE    ROTD-008
C N*PI/14. AND FOR EACH VALUE OF "N" THERE ARE N+1 VALUES OF PHI EQUI-  ROTD-009
C DISTANT BETWEEN 0. AND PI/2.   THE MATRIX,THE ELEMENTS OF WHICH ARE   ROTD-010
C THE ROTATION MATRIX ELEMENTS FOR THESE ANGLES AND L GIVEN IN NL,K IN  ROTD-011
C NK HAS BEEN INVERTED . THE COEFFICIENTS OF THE 15 LOWEST (L,K) ARE    ROTD-012
C STORED IN POIDS . THE 15 REDUCED ROTATION MATRIX ELEMENTS FOR THE 8   ROTD-013
C VALUES OF THETA ARE IN RB .                                           ROTD-014
C                                                                       ROTD-015
C       VIBRATIONAL MODEL                                               ROTD-016
C THE ANGULAR INTEGRATION IS REDUCED TO ONE POINT.                      ROTD-017
C INPUT VARIABLES:  NBTA:   INFORMATIONS ON VIBRATIONS                  ROTD-018
C                   BTA:    STATIC DEFORMATIONS                         ROTD-019
C                   IVY:    INFORMATIONS ON FORM FACTORS                ROTD-020
C                   IV:     ORDER OF DERIVATIVE OF EACH FORM FACTOR     ROTD-021
C                   VAL:    OPTICAL PARAMETERS                          ROTD-022
C                   ID1,INVZ,IQ1,IQM,INY,LQ:   SEE ROTP                 ROTD-023
C                   IMAX:   MAXIMUM ANGULAR MOMENTUM                    ROTD-024
C                   PGN,XGN: WEIGHT AND ABSCISSAE OF LEGENDRE INTEGRAL  ROTD-025
C                   LO:     LOGICAL CONTROLS                            ROTD-026
C OUTPUT VARIABLES: P(I+27,J):  WEIGHT AT POINT J OF FORM FACTOR I      ROTD-027
C                   Q:      RADII IN FERMIS. IN ROTATIONAL MODEL, Q(,,2)ROTD-028
C                           IS FIRST DERIVATIVE/SIN(THETA) AND Q(,,3)   ROTD-029
C                           2ND DERIVATIVE + 1ST DERIVATIVE/TG(THETA),  ROTD-030
C                           USED FOR SCHROE. EQUIV. OF DIRAC EQUATION.  ROTD-031
C                   IDT:    NUMBER OF INTEGRATION POINTS                ROTD-032
C                   DD:     CHARGE INTEGRALS                            ROTD-033
C WORKING SPACE:    PP:     FOR LEGENDRE POLYNOMIALS                    ROTD-034
C***********************************************************************ROTD-035
      IMPLICIT REAL*8 (A-H,O-Z)                                         ROTD-036
      LOGICAL LO(250),LQ(8,5)                                           ROTD-037
      DIMENSION NL(36),NK(36),IVY(7,1),IV(1),P(ID1,1),PP(2),PGN(10),XGN(ROTD-038
     110),DD(2),Q(8,12,3),NBTA(18,1),FF(660),POIDS(36,15),RB(15,8),BTA(9ROTD-039
     2,1),VAL(24)                                                       ROTD-040
      EQUIVALENCE (POIDS(1,1),FF(1)),(RB(1,1),FF(541))                  ROTD-041
      DATA FF(  1),FF(  2) / 5.12820512820513D-03, 2.43496936475441D-02/ROTD-042
      DATA FF(  3),FF(  4) / 2.43496936475441D-02, 2.12528237972895D-02/ROTD-043
      DATA FF(  5),FF(  6) / 5.53147440814732D-02, 2.12528237972895D-02/ROTD-044
      DATA FF(  7),FF(  8) / 2.53452023906582D-02, 4.44873368571440D-02/ROTD-045
      DATA FF(  9),FF( 10) / 4.44873368571440D-02, 2.53452023906582D-02/ROTD-046
      DATA FF( 11),FF( 12) / 1.86559801758989D-02, 4.85184708058446D-02/ROTD-047
      DATA FF( 13),FF( 14) / 4.12568870375796D-02, 4.85184708058446D-02/ROTD-048
      DATA FF( 15),FF( 16) / 1.86559801758989D-02, 2.45925296747690D-02/ROTD-049
      DATA FF( 17),FF( 18) / 3.46398560932081D-02, 4.17933479732147D-02/ROTD-050
      DATA FF( 19),FF( 20) / 4.17933479732147D-02, 3.46398560932081D-02/ROTD-051
      DATA FF( 21),FF( 22) / 2.45925296747690D-02, 1.19673178236678D-02/ROTD-052
      DATA FF( 23),FF( 24) / 4.47278246564596D-02, 3.42917677140348D-02/ROTD-053
      DATA FF( 25),FF( 26) / 3.69076912422490D-02, 3.42917677140348D-02/ROTD-054
      DATA FF( 27),FF( 28) / 4.47278246564596D-02, 1.19673178236678D-02/ROTD-055
      DATA FF( 29),FF( 30) / 1.22068028124735D-02, 1.07129429826274D-02/ROTD-056
      DATA FF( 31),FF( 32) / 1.70796570854178D-02, 1.60746817649944D-02/ROTD-057
      DATA FF( 33),FF( 34) / 1.60746817649944D-02, 1.70796570854178D-02/ROTD-058
      DATA FF( 35),FF( 36) / 1.07129429826274D-02, 1.22068028124735D-02/ROTD-059
      DATA FF( 37),FF( 38) / 1.16509780810355D-02, 5.02196040257258D-02/ROTD-060
      DATA FF( 39),FF( 40) / 5.02196040257258D-02, 3.27291637647035D-02/ROTD-061
      DATA FF( 41),FF( 42) / 9.18762267773519D-02, 3.27291637647035D-02/ROTD-062
      DATA FF( 43),FF( 44) / 2.59023523875124D-02, 3.90112947467209D-02/ROTD-063
      DATA FF( 45),FF( 46) / 3.90112947467209D-02, 2.59023523875124D-02/ROTD-064
      DATA FF( 47),FF( 48) /-1.94110577743667D-03, 1.63152196117813D-02/ROTD-065
      DATA FF( 49),FF( 50) / 4.25393417813309D-03, 1.63152196117813D-02/ROTD-066
      DATA FF( 51),FF( 52) /-1.94110577743667D-03,-2.10440960549142D-03/ROTD-067
      DATA FF( 53),FF( 54) /-2.95605747812527D-02,-1.76788269194279D-02/ROTD-068
      DATA FF( 55),FF( 56) /-1.76788269194279D-02,-2.95605747812527D-02/ROTD-069
      DATA FF( 57),FF( 58) /-2.10440960549142D-03,-2.76725877126884D-02/ROTD-070
      DATA FF( 59),FF( 60) /-2.18051394343160D-02,-3.71237658735663D-02/ROTD-071
      DATA FF( 61),FF( 62) /-3.47941600457989D-02,-3.71237658735663D-02/ROTD-072
      DATA FF( 63),FF( 64) /-2.18051394343160D-02,-2.76725877126884D-02/ROTD-073
      DATA FF( 65),FF( 66) /-2.37727476826438D-03,-2.57698170677382D-02/ROTD-074
      DATA FF( 67),FF( 68) /-1.69793430277171D-02,-1.76582790639056D-02/ROTD-075
      DATA FF( 69),FF( 70) /-1.76582790639056D-02,-1.69793430277171D-02/ROTD-076
      DATA FF( 71),FF( 72) /-2.57698170677382D-02,-2.37727476826438D-03/ROTD-077
      DATA FF( 73),FF( 74) /               0.D+00, 1.72605997389226D-03/ROTD-078
      DATA FF( 75),FF( 76) /-1.72605997389226D-03, 1.25329145074895D-02/ROTD-079
      DATA FF( 77),FF( 78) /               0.D+00,-1.25329145074895D-02/ROTD-080
      DATA FF( 79),FF( 80) / 2.24225003695212D-02, 2.96494182999275D-02/ROTD-081
      DATA FF( 81),FF( 82) /-2.96494182999275D-02,-2.24225003695212D-02/ROTD-082
      DATA FF( 83),FF( 84) / 3.91319410166702D-02, 4.84852241623139D-02/ROTD-083
      DATA FF( 85),FF( 86) /               0.D+00,-4.84852241623139D-02/ROTD-084
      DATA FF( 87),FF( 88) /-3.91319410166702D-02, 3.97624306723559D-02/ROTD-085
      DATA FF( 89),FF( 90) / 8.10325074410309D-02, 2.28106411006477D-02/ROTD-086
      DATA FF( 91),FF( 92) /-2.28106411006477D-02,-8.10325074410309D-02/ROTD-087
      DATA FF( 93),FF( 94) /-3.97624306723559D-02, 5.59851854712431D-02/ROTD-088
      DATA FF( 95),FF( 96) / 6.92750919115029D-02, 5.27666983806334D-02/ROTD-089
      DATA FF( 97),FF( 98) /               0.D+00,-5.27666983806334D-02/ROTD-090
      DATA FF( 99),FF(100) /-6.92750919115029D-02,-5.59851854712431D-02/ROTD-091
      DATA FF(101),FF(102) / 1.57386702462217D-02, 4.84030198418523D-02/ROTD-092
      DATA FF(103),FF(104) / 2.47182393346187D-02, 9.25890190803834D-03/ROTD-093
      DATA FF(105),FF(106) /-9.25890190803834D-03,-2.47182393346187D-02/ROTD-094
      DATA FF(107),FF(108) /-4.84030198418523D-02,-1.57386702462217D-02/ROTD-095
      DATA FF(109),FF(110) / 1.62578391680559D-02, 5.49097361991748D-02/ROTD-096
      DATA FF(111),FF(112) / 5.49097361991748D-02, 8.83119316755724D-03/ROTD-097
      DATA FF(113),FF(114) / 4.65475180836232D-02, 8.83119316755724D-03/ROTD-098
      DATA FF(115),FF(116) /-1.52665570705068D-02,-4.45213321560779D-02/ROTD-099
      DATA FF(117),FF(118) /-4.45213321560779D-02,-1.52665570705068D-02/ROTD-100
      DATA FF(119),FF(120) /-3.25206220517009D-02,-5.00345998670453D-02/ROTD-101
      DATA FF(121),FF(122) /-5.61452437357254D-02,-5.00345998670453D-02/ROTD-102
      DATA FF(123),FF(124) /-3.25206220517009D-02,-5.34880433627418D-03/ROTD-103
      DATA FF(125),FF(126) /-2.71365320807763D-02,-2.11168478505607D-02/ROTD-104
      DATA FF(127),FF(128) /-2.11168478505607D-02,-2.71365320807763D-02/ROTD-105
      DATA FF(129),FF(130) /-5.34880433627418D-03, 5.38896697941338D-03/ROTD-106
      DATA FF(131),FF(132) / 2.71262358172909D-02, 2.30796535753636D-02/ROTD-107
      DATA FF(133),FF(134) / 2.05455707964392D-02, 2.30796535753636D-02/ROTD-108
      DATA FF(135),FF(136) / 2.71262358172909D-02, 5.38896697941338D-03/ROTD-109
      DATA FF(137),FF(138) / 1.18873085059175D-02, 1.57695500564231D-02/ROTD-110
      DATA FF(139),FF(140) / 1.69343260833909D-02, 1.84154828722142D-02/ROTD-111
      DATA FF(141),FF(142) / 1.84154828722142D-02, 1.69343260833909D-02/ROTD-112
      DATA FF(143),FF(144) / 1.57695500564231D-02, 1.18873085059175D-02/ROTD-113
      DATA FF(145),FF(146) /               0.D+00, 8.48270535877333D-03/ROTD-114
      DATA FF(147),FF(148) /-8.48270535877333D-03, 5.07879724674491D-02/ROTD-115
      DATA FF(149),FF(150) /               0.D+00,-5.07879724674491D-02/ROTD-116
      DATA FF(151),FF(152) / 6.07576950711252D-02, 9.00787083612551D-02/ROTD-117
      DATA FF(153),FF(154) /-9.00787083612551D-02,-6.07576950711252D-02/ROTD-118
      DATA FF(155),FF(156) / 6.45377024914683D-02, 6.34461864848980D-02/ROTD-119
      DATA FF(157),FF(158) /               0.D+00,-6.34461864848980D-02/ROTD-120
      DATA FF(159),FF(160) /-6.45377024914683D-02,-5.65537884945032D-03/ROTD-121
      DATA FF(161),FF(162) / 4.77376504465041D-02,-6.49930325424402D-03/ROTD-122
      DATA FF(163),FF(164) / 6.49930325424402D-03,-4.77376504465041D-02/ROTD-123
      DATA FF(165),FF(166) / 5.65537884945032D-03, 1.24655233750459D-03/ROTD-124
      DATA FF(167),FF(168) /-8.76714858478633D-02,-1.18181266709155D-02/ROTD-125
      DATA FF(169),FF(170) /               0.D+00, 1.18181266709155D-02/ROTD-126
      DATA FF(171),FF(172) / 8.76714858478633D-02,-1.24655233750459D-03/ROTD-127
      DATA FF(173),FF(174) /-3.84487336410874D-02,-7.62058619698479D-03/ROTD-128
      DATA FF(175),FF(176) /-3.01133238640137D-02,-1.08854252444356D-02/ROTD-129
      DATA FF(177),FF(178) / 1.08854252444356D-02, 3.01133238640137D-02/ROTD-130
      DATA FF(179),FF(180) / 7.62058619698479D-03, 3.84487336410874D-02/ROTD-131
      DATA FF(181),FF(182),FF(183),FF(184)/3*0.D0, 1.36660942007569D-03/ROTD-132
      DATA FF(185),FF(186) /-2.73321884015139D-03, 1.36660942007569D-03/ROTD-133
      DATA FF(187),FF(188) / 1.10470452782256D-02,-1.10470452782256D-02/ROTD-134
      DATA FF(189),FF(190) /-1.10470452782256D-02, 1.10470452782256D-02/ROTD-135
      DATA FF(191),FF(192) / 2.19899348965421D-02, 7.44598962747265D-03/ROTD-136
      DATA FF(193),FF(194) /-5.88718490480295D-02, 7.44598962747265D-03/ROTD-137
      DATA FF(195),FF(196) / 2.19899348965421D-02, 4.68819219798074D-02/ROTD-138
      DATA FF(197),FF(198) / 1.75997201070024D-02,-6.44816420868098D-02/ROTD-139
      DATA FF(199),FF(200) /-6.44816420868098D-02, 1.75997201070024D-02/ROTD-140
      DATA FF(201),FF(202) / 4.68819219798074D-02, 3.99738678988680D-02/ROTD-141
      DATA FF(203),FF(204) / 7.12682217154704D-02,-6.36366236436914D-02/ROTD-142
      DATA FF(205),FF(206) /-9.52109319412941D-02,-6.36366236436914D-02/ROTD-143
      DATA FF(207),FF(208) / 7.12682217154704D-02, 3.99738678988680D-02/ROTD-144
      DATA FF(209),FF(210) / 3.48854645305456D-02, 1.59406059510446D-02/ROTD-145
      DATA FF(211),FF(212) /-3.85251092517111D-03,-4.69735595564191D-02/ROTD-146
      DATA FF(213),FF(214) /-4.69735595564191D-02,-3.85251092517111D-03/ROTD-147
      DATA FF(215),FF(216) / 1.59406059510446D-02, 3.48854645305456D-02/ROTD-148
      DATA FF(217),FF(218) / 2.09351688388115D-02, 4.48693101517502D-02/ROTD-149
      DATA FF(219),FF(220) / 4.48693101517502D-02,-2.58717911400513D-02/ROTD-150
      DATA FF(221),FF(222) /-2.81401919724747D-02,-2.58717911400513D-02/ROTD-151
      DATA FF(223),FF(224) /-2.67091832939234D-02,-6.48487928844068D-02/ROTD-152
      DATA FF(225),FF(226) /-6.48487928844068D-02,-2.67091832939234D-02/ROTD-153
      DATA FF(227),FF(228) / 7.16351218404911D-03, 1.79021864804572D-02/ROTD-154
      DATA FF(229),FF(230) / 2.15963617795819D-02, 1.79021864804572D-02/ROTD-155
      DATA FF(231),FF(232) / 7.16351218404911D-03, 2.39109798331374D-02/ROTD-156
      DATA FF(233),FF(234) / 4.82363267486100D-02, 4.45971408837992D-02/ROTD-157
      DATA FF(235),FF(236) / 4.45971408837992D-02, 4.82363267486100D-02/ROTD-158
      DATA FF(237),FF(238) / 2.39109798331374D-02,-8.59824516528979D-04/ROTD-159
      DATA FF(239),FF(240) /-8.77138104825350D-03,-1.02303358111611D-03/ROTD-160
      DATA FF(241),FF(242) /-4.79305557318445D-03,-1.02303358111611D-03/ROTD-161
      DATA FF(243),FF(244) /-8.77138104825350D-03,-8.59824516528979D-04/ROTD-162
      DATA FF(245),FF(246) /-1.06844320272751D-02,-1.45408758222938D-02/ROTD-163
      DATA FF(247),FF(248) /-1.99395576475419D-02,-1.82297258567795D-02/ROTD-164
      DATA FF(249),FF(250) /-1.82297258567795D-02,-1.99395576475419D-02/ROTD-165
      DATA FF(251),FF(252) /-1.45408758222938D-02,-1.06844320272751D-02/ROTD-166
      DATA FF(253),FF(254) /               0.D+00, 2.01805115490348D-02/ROTD-167
      DATA FF(255),FF(256) /-2.01805115490348D-02, 8.57318720924763D-02/ROTD-168
      DATA FF(257),FF(258) /               0.D+00,-8.57318720924763D-02/ROTD-169
      DATA FF(259),FF(260) / 3.23094559967599D-02, 8.19417704703203D-02/ROTD-170
      DATA FF(261),FF(262) /-8.19417704703203D-02,-3.23094559967599D-02/ROTD-171
      DATA FF(263),FF(264) /-1.46857629097277D-02,-6.79023750172081D-02/ROTD-172
      DATA FF(265),FF(266) /               0.D+00, 6.79023750172081D-02/ROTD-173
      DATA FF(267),FF(268) / 1.46857629097277D-02,-6.96933563711756D-02/ROTD-174
      DATA FF(269),FF(270) /-4.17790846324735D-02,-3.84574445723291D-02/ROTD-175
      DATA FF(271),FF(272) / 3.84574445723291D-02, 4.17790846324735D-02/ROTD-176
      DATA FF(273),FF(274) / 6.96933563711756D-02, 3.99606295249026D-02/ROTD-177
      DATA FF(275),FF(276) /-3.02669933372692D-02, 1.78196010140318D-02/ROTD-178
      DATA FF(277),FF(278) /               0.D+00,-1.78196010140318D-02/ROTD-179
      DATA FF(279),FF(280) / 3.02669933372692D-02,-3.99606295249026D-02/ROTD-180
      DATA FF(281),FF(282) /-1.85102966735610D-03, 5.84883614463197D-02/ROTD-181
      DATA FF(283),FF(284) / 2.06176299500674D-02, 5.03674288697549D-03/ROTD-182
      DATA FF(285),FF(286) /-5.03674288697549D-03,-2.06176299500674D-02/ROTD-183
      DATA FF(287),FF(288) /-5.84883614463197D-02, 1.85102966735610D-03/ROTD-184
      DATA FF(289),FF(290),FF(291),FF(292)/3*0.D0, 8.75524578710006D-03/ROTD-185
      DATA FF(293),FF(294) /-1.75104915742001D-02, 8.75524578710006D-03/ROTD-186
      DATA FF(295),FF(296) / 5.09492763472956D-02,-5.09492763472956D-02/ROTD-187
      DATA FF(297),FF(298) /-5.09492763472956D-02, 5.09492763472956D-02/ROTD-188
      DATA FF(299),FF(300) / 5.07686792912787D-02, 3.43411087448840D-02/ROTD-189
      DATA FF(301),FF(302) /-1.70219576072325D-01, 3.43411087448840D-02/ROTD-190
      DATA FF(303),FF(304) / 5.07686792912787D-02, 5.95241999935498D-02/ROTD-191
      DATA FF(305),FF(306) /-1.56733778150275D-02,-4.38508221785223D-02/ROTD-192
      DATA FF(307),FF(308) /-4.38508221785223D-02,-1.56733778150275D-02/ROTD-193
      DATA FF(309),FF(310) / 5.95241999935498D-02,-6.35546557275261D-02/ROTD-194
      DATA FF(311),FF(312) / 5.26475282909628D-02,-1.74503883012358D-02/ROTD-195
      DATA FF(313),FF(314) / 5.67150314755984D-02,-1.74503883012358D-02/ROTD-196
      DATA FF(315),FF(316) / 5.26475282909628D-02,-6.35546557275261D-02/ROTD-197
      DATA FF(317),FF(318) / 1.43084825509049D-02,-7.77375076960055D-02/ROTD-198
      DATA FF(319),FF(320) / 2.99695551646778D-02, 3.34594699804229D-02/ROTD-199
      DATA FF(321),FF(322) / 3.34594699804229D-02, 2.99695551646778D-02/ROTD-200
      DATA FF(323),FF(324) /-7.77375076960055D-02, 1.43084825509049D-02/ROTD-201
      DATA FF(325),FF(326),FF(327),FF(328),FF(329),FF(330) / 6*0.D+00 / ROTD-202
      DATA FF(331),FF(332) / 2.45227713022227D-03,-4.90455426044453D-03/ROTD-203
      DATA FF(333),FF(334) / 4.90455426044453D-03,-2.45227713022227D-03/ROTD-204
      DATA FF(335),FF(336) / 1.70476858680581D-02,-2.41090685616840D-02/ROTD-205
      DATA FF(337),FF(338) /               0.D+00, 2.41090685616840D-02/ROTD-206
      DATA FF(339),FF(340) /-1.70476858680581D-02, 2.87679007598782D-02/ROTD-207
      DATA FF(341),FF(342) /-6.25948031834043D-03,-7.67073502036074D-02/ROTD-208
      DATA FF(343),FF(344) / 7.67073502036074D-02, 6.25948031834043D-03/ROTD-209
      DATA FF(345),FF(346) /-2.87679007598782D-02, 6.77534129025308D-02/ROTD-210
      DATA FF(347),FF(348) /-2.45662401760060D-02,-9.29568496692793D-02/ROTD-211
      DATA FF(349),FF(350) /               0.D+00, 9.29568496692793D-02/ROTD-212
      DATA FF(351),FF(352) / 2.45662401760060D-02,-6.77534129025308D-02/ROTD-213
      DATA FF(353),FF(354) / 1.40653464342708D-02, 3.44626025062703D-02/ROTD-214
      DATA FF(355),FF(356) /-6.14715612078917D-02,-3.05058349395271D-02/ROTD-215
      DATA FF(357),FF(358) / 3.05058349395271D-02, 6.14715612078917D-02/ROTD-216
      DATA FF(359),FF(360) /-3.44626025062703D-02,-1.40653464342708D-02/ROTD-217
      DATA FF(361),FF(362) / 2.68196038675183D-02, 2.31031610463596D-02/ROTD-218
      DATA FF(363),FF(364) / 2.31031610463596D-02,-4.28485793267828D-02/ROTD-219
      DATA FF(365),FF(366) /-7.35437975772992D-02,-4.28485793267828D-02/ROTD-220
      DATA FF(367),FF(368) / 8.24684503593131D-03, 1.06081754814925D-02/ROTD-221
      DATA FF(369),FF(370) / 1.06081754814925D-02, 8.24684503593131D-03/ROTD-222
      DATA FF(371),FF(372) / 2.51256208268608D-02, 4.43395667660788D-02/ROTD-223
      DATA FF(373),FF(374) / 5.39942159127383D-02, 4.43395667660788D-02/ROTD-224
      DATA FF(375),FF(376) / 2.51256208268608D-02,-2.19715194066651D-02/ROTD-225
      DATA FF(377),FF(378) /-3.13725579969708D-02,-4.08834934180796D-02/ROTD-226
      DATA FF(379),FF(380) /-4.08834934180796D-02,-3.13725579969708D-02/ROTD-227
      DATA FF(381),FF(382) /-2.19715194066651D-02,-1.88427973024923D-03/ROTD-228
      DATA FF(383),FF(384) /-2.16035578956301D-02,-1.17587068801884D-02/ROTD-229
      DATA FF(385),FF(386) /-1.12062882635935D-02,-1.17587068801884D-02/ROTD-230
      DATA FF(387),FF(388) /-2.16035578956301D-02,-1.88427973024923D-03/ROTD-231
      DATA FF(389),FF(390) / 5.74971871310925D-03, 2.25181635560216D-02/ROTD-232
      DATA FF(391),FF(392) / 1.76219271299887D-02, 1.69776491290416D-02/ROTD-233
      DATA FF(393),FF(394) / 1.69776491290416D-02, 1.76219271299887D-02/ROTD-234
      DATA FF(395),FF(396) / 2.25181635560216D-02, 5.74971871310925D-03/ROTD-235
      DATA FF(397),FF(398) /               0.D+00, 3.55735538800802D-02/ROTD-236
      DATA FF(399),FF(400) /-3.55735538800802D-02, 8.33786715099005D-02/ROTD-237
      DATA FF(401),FF(402) /               0.D+00,-8.33786715099005D-02/ROTD-238
      DATA FF(403),FF(404) /-4.89348970296868D-02,-2.91035565005004D-04/ROTD-239
      DATA FF(405),FF(406) / 2.91035565005004D-04, 4.89348970296868D-02/ROTD-240
      DATA FF(407),FF(408) /-2.62016346104983D-02,-8.33457375352782D-02/ROTD-241
      DATA FF(409),FF(410) /               0.D+00, 8.33457375352782D-02/ROTD-242
      DATA FF(411),FF(412) / 2.62016346104983D-02, 2.62738780028789D-02/ROTD-243
      DATA FF(413),FF(414) / 8.32340348860637D-02, 3.18724837249571D-02/ROTD-244
      DATA FF(415),FF(416) /-3.18724837249571D-02,-8.32340348860637D-02/ROTD-245
      DATA FF(417),FF(418) /-2.62738780028789D-02, 2.62547109771934D-02/ROTD-246
      DATA FF(419),FF(420) / 7.98302855528211D-03, 4.48364778698653D-03/ROTD-247
      DATA FF(421),FF(422) /               0.D+00,-4.48364778698653D-03/ROTD-248
      DATA FF(423),FF(424) /-7.98302855528211D-03,-2.62547109771934D-02/ROTD-249
      DATA FF(425),FF(426) /-2.51077741509568D-02,-2.87429639697600D-02/ROTD-250
      DATA FF(427),FF(428) /-1.79981066009081D-02,-7.87642513464656D-03/ROTD-251
      DATA FF(429),FF(430) / 7.87642513464656D-03, 1.79981066009081D-02/ROTD-252
      DATA FF(431),FF(432) / 2.87429639697600D-02, 2.51077741509568D-02/ROTD-253
      DATA FF(433),FF(434),FF(435),FF(436)/3*0.D0, 2.38959949710526D-02/ROTD-254
      DATA FF(437),FF(438) /-4.77919899421051D-02, 2.38959949710526D-02/ROTD-255
      DATA FF(439),FF(440) / 7.91176151667601D-02,-7.91176151667601D-02/ROTD-256
      DATA FF(441),FF(442) /-7.91176151667601D-02, 7.91176151667601D-02/ROTD-257
      DATA FF(443),FF(444) /-1.24626161171327D-02, 5.33272858981795D-02/ROTD-258
      DATA FF(445),FF(446) /-8.17293395620937D-02, 5.33272858981795D-02/ROTD-259
      DATA FF(447),FF(448) /-1.24626161171327D-02,-1.44916866191644D-02/ROTD-260
      DATA FF(449),FF(450) /-9.04220344262881D-02, 1.04913721045452D-01/ROTD-261
      DATA FF(451),FF(452) / 1.04913721045452D-01,-9.04220344262881D-02/ROTD-262
      DATA FF(453),FF(454) /-1.44916866191644D-02,-5.73533998264151D-02/ROTD-263
      DATA FF(455),FF(456) / 7.23959359228724D-02,-1.77393445770836D-02/ROTD-264
      DATA FF(457),FF(458) / 5.39361696125263D-03,-1.77393445770836D-02/ROTD-265
      DATA FF(459),FF(460) / 7.23959359228724D-02,-5.73533998264151D-02/ROTD-266
      DATA FF(461),FF(462) / 5.42648795710159D-02,-2.39248769146420D-02/ROTD-267
      DATA FF(463),FF(464) / 7.38288973327365D-04,-3.10782916297012D-02/ROTD-268
      DATA FF(465),FF(466) /-3.10782916297012D-02, 7.38288973327365D-04/ROTD-269
      DATA FF(467),FF(468) /-2.39248769146420D-02, 5.42648795710159D-02/ROTD-270
      DATA FF(469),FF(470),FF(471),FF(472),FF(473),FF(474) / 6*0.D+00 / ROTD-271
      DATA FF(475),FF(476) / 1.58592251779111D-02,-3.17184503558222D-02/ROTD-272
      DATA FF(477),FF(478) / 3.17184503558222D-02,-1.58592251779111D-02/ROTD-273
      DATA FF(479),FF(480) / 6.36434740587254D-02,-9.00054641703897D-02/ROTD-274
      DATA FF(481),FF(482) /               0.D+00, 9.00054641703897D-02/ROTD-275
      DATA FF(483),FF(484) /-6.36434740587254D-02, 2.20893694492763D-02/ROTD-276
      DATA FF(485),FF(486) / 2.93554190800171D-02,-1.48336186023447D-01/ROTD-277
      DATA FF(487),FF(488) / 1.48336186023447D-01,-2.93554190800171D-02/ROTD-278
      DATA FF(489),FF(490) /-2.20893694492763D-02, 4.17889616928183D-02/ROTD-279
      DATA FF(491),FF(492) /-9.17122054842361D-02, 7.52722761872573D-02/ROTD-280
      DATA FF(493),FF(494) /               0.D+00,-7.52722761872573D-02/ROTD-281
      DATA FF(495),FF(496) / 9.17122054842361D-02,-4.17889616928183D-02/ROTD-282
      DATA FF(497),FF(498) /-6.41790551032870D-02, 5.94260666825252D-02/ROTD-283
      DATA FF(499),FF(500) / 7.67785691121092D-03, 2.62939467857734D-02/ROTD-284
      DATA FF(501),FF(502) /-2.62939467857734D-02,-7.67785691121092D-03/ROTD-285
      DATA FF(503),FF(504) /-5.94260666825252D-02, 6.41790551032870D-02/ROTD-286
      DATA FF(505),FF(506),FF(507),FF(508),FF(509),FF(510) / 6*0.D+00 / ROTD-287
      DATA FF(511),FF(512),FF(513),FF(514)                 / 4*0.D+00 / ROTD-288
      DATA FF(515),FF(516) / 6.25351913613187D-03,-1.25070382722637D-02/ROTD-289
      DATA FF(517),FF(518) / 1.25070382722637D-02,-1.25070382722637D-02/ROTD-290
      DATA FF(519),FF(520) / 6.25351913613187D-03, 3.11758837931106D-02/ROTD-291
      DATA FF(521),FF(522) /-5.04436396065700D-02, 1.92677558134594D-02/ROTD-292
      DATA FF(523),FF(524) / 1.92677558134594D-02,-5.04436396065700D-02/ROTD-293
      DATA FF(525),FF(526) / 3.11758837931106D-02, 3.58893219026970D-02/ROTD-294
      DATA FF(527),FF(528) /-1.67264809607312D-02,-9.33778447285944D-02/ROTD-295
      DATA FF(529),FF(530) / 1.48430007573257D-01,-9.33778447285944D-02/ROTD-296
      DATA FF(531),FF(532) /-1.67264809607312D-02, 3.58893219026970D-02/ROTD-297
      DATA FF(533),FF(534) / 4.68575275756458D-02,-4.50757375114331D-02/ROTD-298
      DATA FF(535),FF(536) /-3.00076119100051D-02, 2.82258218457924D-02/ROTD-299
      DATA FF(537),FF(538) / 2.82258218457924D-02,-3.00076119100051D-02/ROTD-300
      DATA FF(539),FF(540) /-4.50757375114331D-02, 4.68575275756458D-02/ROTD-301
      DATA FF(541),FF(542),FF(543),FF(544) / 2*1.D+00, 0.D+00, 1.D+00 / ROTD-302
      DATA FF(545),FF(546),FF(547),FF(548) / 2*0.D+00, 1.D+00, 0.D+00 / ROTD-303
      DATA FF(549),FF(550),FF(551),FF(552) / 2*0.D+00, 1.D+00, 0.D+00 / ROTD-304
      DATA FF(553),FF(554),FF(555),FF(556) / 3*0.D+00, 1.D+00         / ROTD-305
      DATA FF(557),FF(558) / 9.25726650926814D-01, 3.03219677861538D-02/ROTD-306
      DATA FF(559),FF(560) / 7.63148756611001D-01, 1.10652387063757D-01/ROTD-307
      DATA FF(561),FF(562) / 1.28207234895501D-03, 5.36257386538795D-01/ROTD-308
      DATA FF(563),FF(564) / 2.17289580469363D-01, 8.13196358030030D-03/ROTD-309
      DATA FF(565),FF(566) / 5.76608786636350D-05, 2.78047174877667D-01/ROTD-310
      DATA FF(567),FF(568) / 3.29131159509191D-01, 2.49657214768430D-02/ROTD-311
      DATA FF(569),FF(570) / 5.20868271692270D-04, 2.66389008100408D-06/ROTD-312
      DATA FF(571),FF(572) /               1.D+00, 7.17617351394050D-01/ROTD-313
      DATA FF(573),FF(574) / 1.15282233550037D-01, 2.13774427323495D-01/ROTD-314
      DATA FF(575),FF(576) / 3.48423989314638D-01, 1.85320103458231D-02/ROTD-315
      DATA FF(577),FF(578) /-2.35732455017163D-01, 4.90294315725551D-01/ROTD-316
      DATA FF(579),FF(580) / 9.85729671840697D-02, 3.16881041332955D-03/ROTD-317
      DATA FF(581),FF(582) /-4.09576022206791D-01, 4.20201210269288D-01/ROTD-318
      DATA FF(583),FF(584) / 2.34245007796887D-01, 2.41313741208102D-02/ROTD-319
      DATA FF(585),FF(586) / 5.56591156140697D-04,               1.D+00/ROTD-320
      DATA FF(587),FF(588) / 4.16890700467236D-01, 2.38053374687832D-01/ROTD-321
      DATA FF(589),FF(590) /-2.82554557772787D-01, 5.03833139973589D-01/ROTD-322
      DATA FF(591),FF(592) / 7.90217156752737D-02,-3.59733444374334D-01/ROTD-323
      DATA FF(593),FF(594) / 2.89718584757935D-01, 3.03418532856755D-01/ROTD-324
      DATA FF(595),FF(596) / 2.79017946123459D-02, 7.08378251175649D-02/ROTD-325
      DATA FF(597),FF(598) /-1.72370094784044D-01, 4.12885596178737D-01/ROTD-326
      DATA FF(599),FF(600) / 1.55306184423031D-01, 1.01200845906307D-02/ROTD-327
      DATA FF(601),FF(602) /               1.D+00, 8.31092995327642D-02/ROTD-328
      DATA FF(603),FF(604) / 3.74319061007963D-01,-4.21630141495484D-01/ROTD-329
      DATA FF(605),FF(606) / 4.15874017677357D-01, 1.95380697242947D-01/ROTD-330
      DATA FF(607),FF(608) / 1.11600329703613D-01,-1.97772479536753D-01/ROTD-331
      DATA FF(609),FF(610) / 4.29387782672098D-01, 1.08476318674788D-01/ROTD-332
      DATA FF(611),FF(612) / 2.63594691134320D-01,-2.34078763472890D-01/ROTD-333
      DATA FF(613),FF(614) / 7.77527093709932D-02, 3.57086142014797D-01/ROTD-334
      DATA FF(615),FF(616) / 6.18663570444226D-02,               1.D+00/ROTD-335
      DATA FF(617),FF(618) /-2.17617351394050D-01, 4.97090202145758D-01/ROTD-336
      DATA FF(619),FF(620) /-1.75906698838214D-01, 1.01968005344553D-01/ROTD-337
      DATA FF(621),FF(622) / 3.44562631700107D-01, 3.21522932835539D-01/ROTD-338
      DATA FF(623),FF(624) /-3.16879195937032D-01, 2.47505734203973D-01/ROTD-339
      DATA FF(625),FF(626) / 2.54047379389696D-01,-2.23915517573357D-01/ROTD-340
      DATA FF(627),FF(628) / 2.47297362843729D-01,-3.04922989721535D-01/ROTD-341
      DATA FF(629),FF(630) / 3.15711860946547D-01, 1.92409975848431D-01/ROTD-342
      DATA FF(631),FF(632) /               1.D+00,-4.25726650926814D-01/ROTD-343
      DATA FF(633),FF(634) / 5.82050467909641D-01, 2.00043214171989D-01/ROTD-344
      DATA FF(635),FF(636) /-2.45486828370620D-01, 4.72409970427464D-01/ROTD-345
      DATA FF(637),FF(638) /-3.40709996864496D-02, 5.77157388195865D-02/ROTD-346
      DATA FF(639),FF(640) /-1.44294709220167D-01, 4.07841145692130D-01/ROTD-347
      DATA FF(641),FF(642) /-9.23304365056544D-02, 7.92778608560820D-02/ROTD-348
      DATA FF(643),FF(644) /-3.36435261948797D-02,-7.14935648162744D-02/ROTD-349
      DATA FF(645),FF(646) / 3.61684038642514D-01,               1.D+00/ROTD-350
      DATA FF(647),FF(648) /              -5.D-01, 6.12372435695795D-01/ROTD-351
      DATA FF(649),FF(650) /             3.75D-01,-3.95284707521047D-01/ROTD-352
      DATA FF(651),FF(652) / 5.22912516583797D-01,           -3.125D-01/ROTD-353
      DATA FF(653),FF(654) / 3.20217211436237D-01,-3.50780380010057D-01/ROTD-354
      DATA FF(655),FF(656) / 4.74958879799083D-01,         2.734375D-01/ROTD-355
      DATA FF(657),FF(658) /-2.77316239832795D-01, 2.90851726077911D-01/ROTD-356
      DATA FF(659),FF(660) /-3.23629924643875D-01, 4.43148525027868D-01/ROTD-357
      DATA NL/0,2,2,4,4,4,6,6,6,6,8,8,8,8,8,10,10,10,10,10,10,12,12,12,1ROTD-358
     12,12,12,12,14,14,14,14,14,14,14,14/                               ROTD-359
      DATA NK/0,0,2,0,2,4,0,2,4,6,0,2,4,6,8,0,2,4,6,8,10,0,2,4,6,8,10,12ROTD-360
     1,0,2,4,6,8,10,12,14/                                              ROTD-361
      DATA PI/3.1415926535D0/                                           ROTD-362
      DD(1)=0.D0                                                        ROTD-363
      DD(2)=0.D0                                                        ROTD-364
      IF (LO(1)) GO TO 4                                                ROTD-365
      IDT=1                                                             ROTD-366
      DO 2 J=1,8                                                        ROTD-367
      IF (LQ(J,1)) GO TO 2                                              ROTD-368
      IF (LQ(J,3)) GO TO 1                                              ROTD-369
      P(J,1)=0.D0                                                       ROTD-370
      Q(J,1,1)=-VAL(3*J-1)                                              ROTD-371
      P(J+8,1)=1.D-16                                                   ROTD-372
      IF (LQ(J,4)) GO TO 2                                              ROTD-373
      Q(J,1,1)=VAL(3*J-1)                                               ROTD-374
      IF (Q(J,1,1).GT.-36.D0*VAL(3*J)) P(J+8,1)=DEXP(Q(J,1,1)/VAL(3*J)) ROTD-375
      GO TO 2                                                           ROTD-376
    1 P(J,1)=VAL(3*J-1)                                                 ROTD-377
      DD(J-6)=P(J,1)**3                                                 ROTD-378
    2 CONTINUE                                                          ROTD-379
      DO 3 I=1,IQ1                                                      ROTD-380
    3 P(I+27,1)=1.D0                                                    ROTD-381
      RETURN                                                            ROTD-382
    4 IF (LO(3)) GO TO 18                                               ROTD-383
C *** SYMMETRIC ROTATIONAL MODEL ***************                        ROTD-384
      IDT=10                                                            ROTD-385
      IQ=IQM                                                            ROTD-386
      IF (INVZ.NE.0) IQ=MAX0(IQ,IMAX)                                   ROTD-387
      IQ2=IQM/2                                                         ROTD-388
      SR=1.D0                                                           ROTD-389
      DO 6 J=1,8                                                        ROTD-390
      IF (LQ(J,1)) GO TO 6                                              ROTD-391
      IF (LO(6)) SR=1.D0/VAL(3*J-1)                                     ROTD-392
      IF (.NOT.LQ(J,4)) SR=DABS(SR)                                     ROTD-393
      DO 5 I=1,IQ2                                                      ROTD-394
    5 P(16+J,2*I)=SR*BTA(J,I)*DSQRT(DFLOAT(4*I+1)/(4.D0*PI))            ROTD-395
    6 CONTINUE                                                          ROTD-396
      DO 17 I=1,10                                                      ROTD-397
      PP(2)=XGN(I)                                                      ROTD-398
      PP(1)=1.D0                                                        ROTD-399
      DO 7 J=2,IQ                                                       ROTD-400
      C=1.D0/DFLOAT(J)                                                  ROTD-401
    7 PP(J+1)=(2.D0-C)*PP(2)*PP(J)+(C-1.D0)*PP(J-1)                     ROTD-402
      C1=1.D0-PP(2)**2                                                  ROTD-403
      DO 11 J=1,8                                                       ROTD-404
      IF (LQ(J,1)) GO TO 11                                             ROTD-405
      P(J,I)=0.D0                                                       ROTD-406
      Q(J,I,2)=0.D0                                                     ROTD-407
      Q(J,I,3)=0.D0                                                     ROTD-408
      Q(J,I,1)=1.D0                                                     ROTD-409
      DO 8 K=2,IQM,2                                                    ROTD-410
      C=K                                                               ROTD-411
      Q(J,I,1)=Q(J,I,1)+P(16+J,K)*PP(K+1)                               ROTD-412
      Q(J,I,2)=Q(J,I,2)-C*P(16+J,K)*(PP(2)*PP(K+1)-PP(K))/C1            ROTD-413
    8 Q(J,I,3)=Q(J,I,3)-P(16+J,K)*PP(K+1)*C*(C+1.D0)                    ROTD-414
      C2=VAL(3*J-1)                                                     ROTD-415
      IF (.NOT.LQ(J,4)) C2=-C2                                          ROTD-416
      DO 9 K=1,3                                                        ROTD-417
    9 Q(J,I,K)=-Q(J,I,K)*C2                                             ROTD-418
      IF (LQ(J,3)) GO TO 10                                             ROTD-419
      P(J+8,I)=1.D-16                                                   ROTD-420
      IF (LQ(J,4)) GO TO 11                                             ROTD-421
      IF (Q(J,I,1).GT.-36.D0*VAL(3*J)) P(J+8,I)=DEXP(Q(J,I,1)/VAL(3*J)) ROTD-422
      GO TO 11                                                          ROTD-423
   10 P(J,I)=-Q(J,I,1)                                                  ROTD-424
      DD(J-6)=DD(J-6)+PGN(I)*(P(J,I)**3)                                ROTD-425
   11 CONTINUE                                                          ROTD-426
      DO 16 IJ=1,IQ1                                                    ROTD-427
      K=1                                                               ROTD-428
      IF (IJ.GT.INY) K=IVY(1,IJ-INY)/1000                               ROTD-429
      C=PP(K)                                                           ROTD-430
      IF ((IV(IJ).EQ.1).OR.(IJ.LE.INY)) GO TO 16                        ROTD-431
      KB=MOD(IVY(1,IJ-INY),1000)                                        ROTD-432
      KL=NBTA(17,KB)                                                    ROTD-433
      KK=NBTA(18,KB)                                                    ROTD-434
      IF (IVY(6,IJ-INY).LT.0) KL=MOD(KL,2)                              ROTD-435
      IF (KK.NE.0) GO TO 12                                             ROTD-436
      C=C*PP(KL+1)*DSQRT(DFLOAT(2*KL+1))                                ROTD-437
      GO TO 16                                                          ROTD-438
C COMPUTATION OF Y(K-1,KK) * Y(KL,KK)                                   ROTD-439
   12 C=DSQRT(2.D0*KL+1.D0)                                             ROTD-440
      DO 13 KB=1,KK                                                     ROTD-441
   13 C=C*C1*DFLOAT(2*KB-1)**2/DSQRT(DFLOAT((KL+KB)*(K-KB)*(KL-KB+1)*(K+ROTD-442
     1KB-1)))                                                           ROTD-443
      KZ=K-1-KK                                                         ROTD-444
      DO 15 J=1,2                                                       ROTD-445
      IF (KZ.LE.0) GO TO 15                                             ROTD-446
      D=0.D0                                                            ROTD-447
      DO 14 KB=1,KZ                                                     ROTD-448
      C2=D                                                              ROTD-449
      D=C                                                               ROTD-450
   14 C=C2+(D*PP(2)-C2)*DFLOAT(2*(KK+KB)-1)/DFLOAT(KB)                  ROTD-451
   15 KZ=KL-KK                                                          ROTD-452
   16 P(IJ+27,I)=PGN(I)*C*DSQRT(DFLOAT(2*K-1))                          ROTD-453
   17 CONTINUE                                                          ROTD-454
      RETURN                                                            ROTD-455
C *** ASYMMETRIC ROTATIONAL MODEL ***************                       ROTD-456
   18 IDT=36                                                            ROTD-457
      DO 21 J=1,8                                                       ROTD-458
      DO 20 I=1,IQM                                                     ROTD-459
      IF (NK(I+1).EQ.0) GO TO 19                                        ROTD-460
      P(16+J,I+1)=P(16+J,I)*DSIN(PI*BTA(J,I)/180.D0)                    ROTD-461
      P(16+J,I)=P(16+J,I)*DCOS(PI*BTA(J,I)/180.D0)                      ROTD-462
      GO TO 20                                                          ROTD-463
   19 P(16+J,I+1)=BTA(J,I)*DSQRT(DFLOAT(2*NL(I+1)+1)/(4.D0*PI))         ROTD-464
   20 CONTINUE                                                          ROTD-465
   21 CONTINUE                                                          ROTD-466
      SR=1.D0                                                           ROTD-467
      DO 23 J=1,8                                                       ROTD-468
      IF (LQ(J,1)) GO TO 23                                             ROTD-469
      IF (LO(6)) SR=1.D0/VAL(3*J-1)                                     ROTD-470
      IF (.NOT.LQ(J,4)) SR=DABS(SR)                                     ROTD-471
      DO 22 I=1,IQM                                                     ROTD-472
      IF (NK(I+1).NE.0) P(16+J,I+1)=P(16+J,I+1)*1.414213562D0           ROTD-473
   22 P(16+J,I+1)=SR*P(16+J,I+1)                                        ROTD-474
   23 CONTINUE                                                          ROTD-475
      I=0                                                               ROTD-476
      DO 29 L=1,8                                                       ROTD-477
      PHI=PI/DFLOAT(4*MAX0(1,L-1))                                      ROTD-478
      DO 28 M=1,L                                                       ROTD-479
      I=I+1                                                             ROTD-480
      DO 24 J=1,IQ1                                                     ROTD-481
      K=1                                                               ROTD-482
      IF (J.GT.INY) K=IVY(1,J-INY)/1000                                 ROTD-483
   24 P(J+27,I)=POIDS(I,K)                                              ROTD-484
      DO 27 J=1,8                                                       ROTD-485
      IF (LQ(J,1)) GO TO 27                                             ROTD-486
      P(J,I)=0.D0                                                       ROTD-487
      R=1.D0                                                            ROTD-488
      DO 25 K=1,IQM                                                     ROTD-489
   25 R=R+P(16+J,K+1)*RB(K+1,L)*DCOS(DFLOAT(NK(K+1)*NK(I)) *PHI)        ROTD-490
      Q(J,I,1)=-R*VAL(3*J-1)                                            ROTD-491
      IF (LQ(J,3)) GO TO 26                                             ROTD-492
      P(J+8,I)=1.D-16                                                   ROTD-493
      IF (LQ(J,4)) GO TO 27                                             ROTD-494
      Q(J,I,1)=-Q(J,I,1)                                                ROTD-495
      IF (Q(J,I,1).GT.-36.D0*VAL(3*J)) P(J+8,I)=DEXP(Q(J,I,1)/VAL(3*J)) ROTD-496
      GO TO 27                                                          ROTD-497
   26 P(J,I)=R*DABS(VAL(3*J-1))                                         ROTD-498
      DD(J-6)=DD(J-6)+POIDS(I,1)*(P(J,I)**3)                            ROTD-499
   27 CONTINUE                                                          ROTD-500
   28 CONTINUE                                                          ROTD-501
   29 CONTINUE                                                          ROTD-502
      RETURN                                                            ROTD-503
      END                                                               ROTD-504
C 01/01/04                                                      ECIS03  ROTZ-000
      SUBROUTINE ROTZ(VR,XGN,R,Q,VAL,J,IV,B,P,ID1,IQ1,CCZ,LO)           ROTZ-001
C DEFORMATION OF THE SCHROEDINGER EQUATION WHICH IS EQUIVALENT TO THE   ROTZ-002
C DIRAC EQUATION ONLY FOR ELASTIC SCATTERING.                           ROTZ-003
C     NO ASYMMETRIC ROTATIONAL MODEL                                    ROTZ-004
C     NO DIFFUSENESS OF COULOMB CHARGE AND NO COULOMB DEFORMATION       ROTZ-005
C     NO VIBRATIONAL BAND IN ROTATIONAL MODEL                           ROTZ-006
C     ONLY FIRST ORDER VIBRATIONAL MODEL                                ROTZ-007
C INPUT VARIABLES: VR(I,J): POTENTIAL FOR I=1, -1RST DERIVATIVE FOR I=5 ROTZ-008
C                           AND SECOND DERIVATIVE FOR I=6               ROTZ-009
C                  XGN:     ABSCISSAE FOR LEGENDRE INTEGRATION          ROTZ-010
C                  R:       RADIUS                                      ROTZ-011
C                  Q(I,J,K):DERIVATIVES DR/DTHETA FOR K=2 AND 3         ROTZ-012
C                  VAL:     OPTICAL MODEL                               ROTZ-013
C                  J:       POINT OF LEGENDRE ANGULAR INTEGRAL          ROTZ-014
C                  IV:      NUMBER OF PHONONS PLUS ONE                  ROTZ-015
C                  B:       DEFORMATIONS                                ROTZ-016
C                  P(I,J):  PREVIOUS RESULTS FOR I=17 TO 26 AND WEIGHTS ROTZ-017
C                           FOR I=28 AND UP IN THE ROTATIONAL MODEL     ROTZ-018
C                  ID1:     FIRST DIMENSION OF P                        ROTZ-019
C                  IQ1:     NUMBER OF TRANSITION FORM FACTORS PLUS 3    ROTZ-020
C                  LO:      LOGICAL CONTROLS                            ROTZ-021
C OUTPUT VARIABLES:P(I,J)   FOR I=17 TO 26, POTENTIAL FOR J=1 AND       ROTZ-022
C                           TRANSITION FORM FACTORS FOR J=4 TO IQ1.     ROTZ-023
C***********************************************************************ROTZ-024
      IMPLICIT REAL*8 (A-H,O-Z)                                         ROTZ-025
      LOGICAL LO(250)                                                   ROTZ-026
      DIMENSION VR(6,10),Q(8,12,3),XGN(10),B(10,1),P(ID1,1),IV(1),VAL(1)ROTZ-027
      COMMON /DCONT/ XE,XM,XN,XZ                                        ROTZ-028
      COMMON /INOUT/ MR,MW,MS                                           ROTZ-029
      DO 2 I=7,8                                                        ROTZ-030
      IF (R.GT.VAL(3*I-1)) GO TO 1                                      ROTZ-031
      VR(1,I)=CCZ*VAL(3*I-2)*(1.5D0-.5D0*(R*R)/VAL(3*I-1)**2)/VAL(3*I-1)ROTZ-032
      VR(6,I)=-CCZ*VAL(3*I-2)/VAL(3*I-1)**3                             ROTZ-033
      VR(5,I)=-VR(6,I)*R                                                ROTZ-034
      GO TO 2                                                           ROTZ-035
    1 VR(1,I)=CCZ*VAL(3*I-2)/R                                          ROTZ-036
      VR(5,I)=VR(1,I)/R                                                 ROTZ-037
      VR(6,I)=2.D0*VR(5,I)/R                                            ROTZ-038
    2 CONTINUE                                                          ROTZ-039
C COMPUTATION OF D(R) AND INVERSE                                       ROTZ-040
      C1=XE+XM+VR(1,1)-VR(1,3)-VR(1,7)                                  ROTZ-041
      C2=VR(1,2)-VR(1,4)                                                ROTZ-042
      DD=C1**2+C2**2                                                    ROTZ-043
      DR=C1/DD                                                          ROTZ-044
      DI=-C2/DD                                                         ROTZ-045
      C3=XE-XM-VR(1,1)-VR(1,3)-VR(1,7)                                  ROTZ-046
      C4=-VR(1,2)-VR(1,4)                                               ROTZ-047
      C5=(C1*C3-C2*C4-XE**2+XM**2)/(2.D0*XM)                            ROTZ-048
      C6=(C1*C4+C2*C3)/(2.D0*XM)                                        ROTZ-049
      D1=VR(5,3)-VR(5,1)+VR(5,7)                                        ROTZ-050
      D2=VR(5,4)-VR(5,2)                                                ROTZ-051
      CR=D1*DR-D2*DI+(VR(5,5)+VR(5,8))/XM                               ROTZ-052
      CI=D2*DR+D1*DI+VR(5,6)/XM                                         ROTZ-053
      CC=VR(1,7)*XE/XM                                                  ROTZ-054
      BR=VR(6,1)-VR(6,7)-VR(6,3)                                        ROTZ-055
      BI=VR(6,2)-VR(6,4)                                                ROTZ-056
C SQUARE OF GRADIENT  AND LAPLACIAN     RADIAL TERM                     ROTZ-057
      ER=BR*DR-BI*DI+(VR(5,5)+VR(5,8))/XM*(CR+CR-(VR(5,5)+VR(5,8))/XM)-VROTZ-058
     1R(5,6)/XM*(CI+CI-VR(5,6)/XM)-(VR(6,5)+VR(6,8))/XM+2.D0*CR/R       ROTZ-059
      EI=BR*DI+BI*DR+(VR(5,5)+VR(5,8))/XM*(CI+CI-VR(5,6)/XM)+VR(5,6)/XM*ROTZ-060
     1(CR+CR-(VR(5,5)+VR(5,8))/XM)-VR(6,6)/XM+2.D0*CI/R                 ROTZ-061
      C5=C5-(.75D0*(CR**2-CI**2)-.5D0*ER)*XN                            ROTZ-062
      C6=C6-(1.5D0*CR*CI-.5D0*EI)*XN                                    ROTZ-063
      IF (LO(101)) GO TO 5                                              ROTZ-064
C ROTATIONAL MODEL                                                      ROTZ-065
      C=1.D0-XGN(J)**2                                                  ROTZ-066
      DO 3 I=1,8                                                        ROTZ-067
      VR(4,I)=(VR(6,I)*Q(I,J,2)**2*C+VR(5,I)*Q(I,J,3))/R**2             ROTZ-068
    3 VR(3,I)=VR(5,I)*Q(I,J,2)/R                                        ROTZ-069
C SQUARE OF GRADIENT IS D/DR.D/DR + 1/R**2 D/DTH.D/DTH                  ROTZ-070
      C3=VR(3,1)-VR(3,3)-VR(3,7)                                        ROTZ-071
      C4=VR(3,2)-VR(3,4)                                                ROTZ-072
      C7=C3*DR-C4*DI                                                    ROTZ-073
      C8=C3*DI+C4*DR                                                    ROTZ-074
      C3=(VR(3,5)+VR(3,8))/XM                                           ROTZ-075
      C4=VR(3,6)/XM                                                     ROTZ-076
      C5=C5-(.75D0*(C7**2-C8**2)+.5D0*(C7*C3-C8*C4)+.75D0*(C3**2-C4**2))ROTZ-077
     1*C*XN                                                             ROTZ-078
      C6=C6-(1.5D0*C7*C8+.5D0*(C7*C4+C8*C3)+1.5D0*C3*C4)*C*XN           ROTZ-079
C LAPLACIAN IS D**2/DR**2 + 2/R D/DR + 1/R**2 (D**2/DTH**2+D/DTH/TG )   ROTZ-080
      C3=VR(4,1)-VR(4,3)-VR(4,7)                                        ROTZ-081
      C4=VR(4,2)-VR(4,4)                                                ROTZ-082
      C5=C5+.5D0*(C3*DR-C4*DI+(VR(4,5)+VR(4,8))/XM)*XN                  ROTZ-083
      C6=C6+.5D0*(C4*DR+C3*DI+VR(4,6)/XM)*XN                            ROTZ-084
C C5 + I C6   CENTRAL TERM                                              ROTZ-085
C CR + I CI   SPIN-ORBIT TERM                                           ROTZ-086
C DR + I DI   1/DENOMINATOR                                             ROTZ-087
      P(17,1)=P(17,1)+(C5+CC)*P(28,J)                                   ROTZ-088
      P(18,1)=P(18,1)+C6*P(28,J)                                        ROTZ-089
      P(21,1)=P(21,1)+.5D0*XN*(CR-VR(5,8)/XM)*P(28,J)/R                 ROTZ-090
      P(22,1)=P(22,1)+.5D0*XN*CI*P(28,J)/R                              ROTZ-091
      P(23,1)=P(23,1)+CC*P(28,J)                                        ROTZ-092
      P(24,1)=P(24,1)+VR(5,8)/R*P(28,J)                                 ROTZ-093
      IF (IQ1.LT.4) RETURN                                              ROTZ-094
C LOGARITHM OF D(R) C9 + I C0                                           ROTZ-095
      C9=.5D0*DLOG(C1**2+C2**2)-(VR(1,5)+VR(1,8))/XM                    ROTZ-096
      C0=DATAN2(C2,C1)-VR(1,6)/XM                                       ROTZ-097
      DO 4 I=4,IQ1                                                      ROTZ-098
      IF (IV(I).GT.1) GO TO 7                                           ROTZ-099
      P(17,I)=P(17,I)+(C5+CC)*P(I+27,J)                                 ROTZ-100
      P(18,I)=P(18,I)+C6*P(I+27,J)                                      ROTZ-101
      P(21,I)=P(21,I)+.5D0*XN*(CR-VR(5,8)/XM)*P(I+27,J)/R               ROTZ-102
      P(22,I)=P(22,I)+.5D0*XN*CI*P(I+27,J)/R                            ROTZ-103
      P(23,I)=P(23,1)+CC*P(I+27,J)                                      ROTZ-104
      P(24,I)=P(24,1)+VR(5,8)/R*P(I+27,J)                               ROTZ-105
      P(25,I)=P(25,I)-.5D0*XN*C9*P(I+27,J)/R**2                         ROTZ-106
    4 P(26,I)=P(26,I)-.5D0*XN*C0*P(I+27,J)/R**2                         ROTZ-107
      RETURN                                                            ROTZ-108
C COMPUTATION OF ZEROTH ORDER                                           ROTZ-109
    5 P(17,1)=C5+CC                                                     ROTZ-110
      P(18,1)=C6                                                        ROTZ-111
      P(21,1)=.5D0*(CR-VR(5,8)/XM)*XN/R                                 ROTZ-112
      P(22,1)=.5D0*CI*XN/R                                              ROTZ-113
      P(23,1)=CC                                                        ROTZ-114
      P(24,1)=VR(5,8)/R                                                 ROTZ-115
      IF (IQ1.LT.4) RETURN                                              ROTZ-116
      DO 6 I=4,IQ1                                                      ROTZ-117
C COMPUTATION OF FIRST ORDER                                            ROTZ-118
      IF (IV(I).NE.2) GO TO 8                                           ROTZ-119
      C1R=VR(5,1)*B(1,I)-VR(5,3)*B(3,I)                                 ROTZ-120
      C2R=VR(5,2)*B(2,I)-VR(5,4)*B(4,I)                                 ROTZ-121
      DRR=-(DR*DR-DI*DI)*C1R+2.D0*DR*DI*C2R                             ROTZ-122
      DIR=-(DR*DR-DI*DI)*C2R-2.D0*DR*DI*C1R                             ROTZ-123
      C3R=-VR(5,1)*B(1,I)-VR(5,3)*B(3,I)                                ROTZ-124
      C4R=-VR(5,2)*B(2,I)-VR(5,4)*B(4,I)                                ROTZ-125
      C5R=(C1R*C3-C2R*C4+C1*C3R-C2*C4R)/(2.D0*XM)                       ROTZ-126
      C6R=(C1R*C4+C2R*C3+C1*C4R+C2*C3R)/(2.D0*XM)                       ROTZ-127
      D1R=VR(6,3)*B(3,I)-VR(6,1)*B(1,I)                                 ROTZ-128
      D2R=VR(6,4)*B(4,I)-VR(6,2)*B(2,I)                                 ROTZ-129
      CRR=D1R*DR-D2R*DI+D1*DRR-D2*DIR+VR(6,5)*B(5,I)/XM                 ROTZ-130
      CIR=D2R*DR+D1R*DI+D2*DRR+D1*DIR+VR(6,6)*B(6,I)/XM                 ROTZ-131
      ERR=BR*DRR-BI*DIR+(VR(5,5)+VR(5,8))/XM*(CRR+CRR-VR(6,5)*B(5,I)/XM)ROTZ-132
     1-VR(5,6)/XM*(CIR+CIR-VR(6,6)*B(6,I)/XM)+VR(6,5)*B(5,I)/XM*(CR+CR-(ROTZ-133
     2VR(5,5)+VR(5,8))/XM)-VR(6,6)*B(6,I)/XM*(CI+CI-VR(5,6)/XM)+2.D0*CRRROTZ-134
     3/R                                                                ROTZ-135
      EIR=BR*DIR+BI*DRR+(VR(5,5)+VR(5,8))/XM*(CIR+CIR-VR(6,6)*B(6,I)/XM)ROTZ-136
     1+VR(5,6)/XM*(CRR+CRR-VR(6,5)*B(5,I)/XM)+VR(6,5)*B(5,I)/XM*(CI+CI-VROTZ-137
     2R(5,6)/XM)+VR(6,6)*B(6,I)/XM*(CR+CR-VR(6,5)/XM)+2.D0*CIR/R        ROTZ-138
      P(17,I)=C5R-(1.5D0*(CR*CRR-CI*CIR)-.5D0*ERR)*XN                   ROTZ-139
      P(18,I)=C6R-(1.5D0*(CRR*CI+CR*CIR)-.5D0*EIR)*XN                   ROTZ-140
      P(21,I)=.5D0*CRR*XN/R                                             ROTZ-141
      P(22,I)=.5D0*CIR*XN/R                                             ROTZ-142
      P(23,I)=0.D0                                                      ROTZ-143
      P(24,I)=0.D0                                                      ROTZ-144
      P(25,I)=-.5D0*XN*(C1R*DR-C2R*DI-VR(5,5)*B(5,I)/XM)/R**2           ROTZ-145
    6 P(26,I)=-.5D0*XN*(C1R*DI+C2R*DR-VR(5,6)*B(6,I)/XM)/R**2           ROTZ-146
      RETURN                                                            ROTZ-147
    7 WRITE (MW,1000)                                                   ROTZ-148
      GO TO 9                                                           ROTZ-149
    8 WRITE (MW,1001)                                                   ROTZ-150
    9 WRITE (MW,1002)                                                   ROTZ-151
      STOP                                                              ROTZ-152
 1000 FORMAT (' NO VIBRATIONAL BAND IN ROTATIONAL MODEL')               ROTZ-153
 1001 FORMAT (' ONLY FIRST ORDER VIBRATIONAL MODEL')                    ROTZ-154
 1002 FORMAT (' IN ROTZ   ... STOP')                                    ROTZ-155
      END                                                               ROTZ-156
C 01/01/04                                                      ECIS03  COPO-000
      SUBROUTINE COPO(W,V,Q,ISM,H,L,VAL,VAC,CCZ,ZT,LT,LZ)               COPO-001
C COMPUTES THE COULOMB POTENTIAL OF THE CHARGE DISTRIBUTION STORED IN V.COPO-002
C INPUT VARIABLES: V:   CHARGE DISTRIBUTION UNNORMALISED                COPO-003
C                  H:   STEP SIZE                                       COPO-004
C                  ISM: NUMBER OF POINTS                                COPO-005
C                  L:   ANGULAR MOMENTUM, RETURN 0 IF L IS NEGATIVE     COPO-006
C                  VAL: PRODUCT OF CHARGES IS IN VAL(1)                 COPO-007
C                  VAC: PARAMETER OF CHARGE DISTRIBUTION                COPO-008
C                  LT:  LOGICAL  .TRUE.  FORM FACTOR ALREADY NORMALISED COPO-009
C                         .FALSE.  NORMALISATION STORED FROM THE CENTRALCOPO-010
C                  LZ:  LOGICAL  .TRUE. TO USE THE NORMALISATION STORED COPO-011
C                          EVEN IF L=0                                  COPO-012
C OUTPUT VARIABLES:W:   FORM FACTOR WHICH CAN BE AT THE SAME PLACE AS V COPO-013
C                  ZT:  NORMALISATION FACTOR                            COPO-014
C WORKSPACE:       Q    WHICH CAN BE AT THE SAME PLACE AS W             COPO-015
C***********************************************************************COPO-016
      IMPLICIT REAL*8 (A-H,O-Z)                                         COPO-017
      DIMENSION V(ISM),VAL(1),W(ISM),Q(ISM,5)                           COPO-018
      LOGICAL LT,LZ                                                     COPO-019
      IF (L.GE.0) GO TO 2                                               COPO-020
      DO 1 IS=1,ISM                                                     COPO-021
    1 V(IS)=0.D0                                                        COPO-022
      RETURN                                                            COPO-023
    2 RR=0.D0                                                           COPO-024
      DO 3 IS=1,ISM                                                     COPO-025
      RR=RR+H                                                           COPO-026
      V(IS)=V(IS)*(1.D0+VAC*RR*RR)                                      COPO-027
      Q(IS,4)=RR**L                                                     COPO-028
      Q(IS,3)=Q(IS,4)/RR                                                COPO-029
      Q(IS,5)=Q(IS,4)*RR                                                COPO-030
    3 Q(IS,1)=Q(IS,5)*RR                                                COPO-031
      V(ISM)=0.D0                                                       COPO-032
      V(ISM-1)=0.D0                                                     COPO-033
      Q(1,1)=Q(1,1)*V(1)                                                COPO-034
      Q(ISM,2)=0.D0                                                     COPO-035
      DO 4 IS=2,ISM                                                     COPO-036
      JS=ISM+1-IS                                                       COPO-037
      Q(IS,1)=Q(IS-1,1)+Q(IS,1)*V(IS)                                   COPO-038
    4 Q(JS,2)=Q(JS+1,2)+V(JS+1)/Q(JS+1,3)                               COPO-039
      C=DFLOAT(2*L+1)                                                   COPO-040
      ZZ=1.D0/C                                                         COPO-041
      IF (LT) GO TO 6                                                   COPO-042
      IF (L.NE.0.OR.LZ) GO TO 5                                         COPO-043
      ZT=CCZ*VAL(1)/Q(ISM,1)                                            COPO-044
    5 ZZ=ZT*ZZ                                                          COPO-045
    6 C=C*H/12.D0                                                       COPO-046
      DO 7 IS=1,ISM                                                     COPO-047
    7 W(IS)=(Q(IS,1)/Q(IS,5)+Q(IS,2)*Q(IS,4)+C*V(IS))*ZZ                COPO-048
      RETURN                                                            COPO-049
      END                                                               COPO-050
C 01/01/04                                                      ECIS03  STDP-000
      SUBROUTINE STDP(V,IVY,ISM,VA,NVA,NX,IDX,X,WV,PGN,XGN,NPP,IZZ,P,ACOSTDP-001
     1NV,CCZ,LO)                                                        STDP-002
C COMPUTES FORM FACTORS INDEPENDENTLY OF MODELS                         STDP-003
C INPUT : IVY:     TABLE OF FORM FACTORS  (SEE REDM)                    STDP-004
C         ISM:     NUMBER OF INTEGRATION STEPS                          STDP-005
C         VA,NVA:  FOR OPTICAL MODEL PARAMETERS TO USE HERE             STDP-006
C         NX:      LENGTH OF WORKING SPACE                              STDP-007
C         WV:      STEP SIZE IN WV(11,*)                                STDP-008
C         NPP:     NUMBER OF OPTICAL POTENTIALS                         STDP-009
C         PGN,XGN: WEIGHTS AND ABSCISSAE OF GAUSS-LEGENDRE INTEGRATION  STDP-010
C         ACONV:   VALUE BELOW WHICH THE FOLDING IS NEGLECTED           STDP-011
C         LO:      LOGICAL CONTROLS                                     STDP-012
C IN COMMON /POTE1/ SEE REDM                                            STDP-013
C IN COMMON /DCONS/ SEE CALC AND COLF                                   STDP-014
C OUTPUT: V(ISM,1) ELASTIC AND INELASTIC FORM FACTORS IN THE SEQUENCE   STDP-015
C                  CENTRAL-REAL, SPIN-ORBIT-REAL, TRANSITION REAL,      STDP-016
C                  TRANSITION SPIN-ORBIT-REAL, IMAGINARY POTENTIALS     STDP-017
C                  FOLLOWED BY COULOMB, COULOMB TRANSITION POTENTIALS.  STDP-018
C         IDX:     LENGTH OF WORKING FIELD USED                         STDP-019
C WORKING SPACE: X(3,I) TO COMPUTE BOUND FUNCTIONS, FOLD COULOMB POTEN- STDP-020
C                  TIAL AND COMPUTE ROTATIONAL FORM FACTORS AND BESSEL  STDP-021
C                  FUNCTIONS.                                           STDP-022
C         IZZ,P    FOR FOLDING                                          STDP-023
C***********************************************************************STDP-024
      IMPLICIT REAL*8 (A-H,O-Z)                                         STDP-025
      LOGICAL LO(250),LT(9)                                             STDP-026
      DIMENSION VA(3),NVA(2,2),V(ISM,1),IVY(7,1),P(1),IZZ(4,1),NIJ(3),ITSTDP-027
     1Z(10),VR(5,2),VS(4),XGN(10),PGN(10),WV(18,1),X(3,22),ZB(77),CL(8),STDP-028
     2Y(3),ZB1(40),ZB2(37)                                              STDP-029
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM              STDP-030
      COMMON /INOUT/ MR,MW,MS                                           STDP-031
      EQUIVALENCE (ITX(10),IT0),(ITX(13),ITC),(ITX(15),ITE),(ITX(16),ITFSTDP-032
     1),(ZB1,ZB),(ZB2,ZB(41))                                           STDP-033
      DATA NIJ /1,24,11/                                                STDP-034
      DATA PIS2 /1.5707963267949D0/                                     STDP-035
      DATA ITZ /3,3,3,3,4,5,3,3,5,5/                                    STDP-036
      DATA ZB1 /4.49340945790906D0,7.72525183693771D0,5.76345919689455D0STDP-037
     1,9.09501133047635D0,12.3229409705666D0,6.98793200050052D0,10.41711STDP-038
     285473794D0,13.6980231532492D0,16.9236212852138D0,8.18256145257124DSTDP-039
     30,11.7049071545704D0,15.0396647076165D0,18.3012559595420D0,21.5254STDP-040
     4177333999D0,9.35581211104275D0,12.9665301727743D0,16.3547096393505STDP-041
     5D0,19.6531521018212D0,22.9045506479037D0,26.1277501372255D0,10.512STDP-042
     68354080940D0,14.2073924588425D0,17.6479748701659D0,20.983463068944STDP-043
     78D0,24.2627680423970D0,27.5078683649043D0,30.7303807316466D0,11.65STDP-044
     870321925164D0,15.4312892102684D0,18.9229991985461D0,22.29534801913STDP-045
     908D0,25.6028559538106D0,28.8703733470427D0,32.1111962396826D0,35.3STDP-046
     A331941827165D0,12.7907817119721D0,16.6410028815122D0,20.1824707649STDP-047
     B492D0,23.5912748179830D0,26.9270407788180D0/                      STDP-048
      DATA ZB2 /30.2172627093614D0,33.4768008195015D0,36.7145291272447D0STDP-049
     1,39.9361278108677D0,13.9158226105049D0,17.8386431992053D0,21.42848STDP-050
     269721154D0,24.8732139238751D0,28.2371343599681D0,31.5501883818318DSTDP-051
     30,34.8286965376857D0,38.0824790873276D0,41.3178646902445D0,44.5391STDP-052
     4446334095D0,15.0334693037434D0,19.0258535361278D0,22.6627206581361STDP-053
     5D0,26.1427676433791D0,29.5346341078439D0,32.8705345976875D0,36.168STDP-054
     61571359112D0,39.4382144800081D0,42.6876512846611D0,45.921201763835STDP-055
     76D0,49.1422214247461D0,16.1447429423013D0,20.2039426328117D0,23.88STDP-056
     865307559684D0,27.4012592588663D0,30.8207940864510D0,34.17947466648STDP-057
     932D0,37.4962736357858D0,40.7827470981251D0,44.0464252109438D0,47.2STDP-058
     A924656052694D0,50.5245397255712D0,53.7453428657930D0/             STDP-059
C MEANING OF INTERNAL LOGICAL LT:   LT(1) SPIN-ORBIT TRANSITION (SCHROE)STDP-060
C LT(2) SPIN-ORBIT POTENTIAL DERIVATIVE                                 STDP-061
C LT(3) FORM FACTOR GIVEN BY POINTS OR BOUND STATE                      STDP-062
C LT(4) COMPUTATION OF A COULOMB POTENTIAL FROM THE CHARGE DENSITY      STDP-063
C LT(5) ZERO DIFFUSENESS COULOMB    LT(6) SURFACE POTENTIAL             STDP-064
C LT(7) FIRST OR SECOND PASSAGE IN WOODS-SAXON/BESSEL LOOP              STDP-065
C LT(8) WOODS-SAXON FORM FACTOR     LT(9) NOT SYMMETRIC                 STDP-066
      IDX=0                                                             STDP-067
      HM=1000.D0                                                        STDP-068
      NFO=0                                                             STDP-069
      N=4*ITXM                                                          STDP-070
      IF (LO(100)) N=N-4*ITX(7)                                         STDP-071
      DO 1 I=1,N                                                        STDP-072
    1 IZZ(I,1)=0                                                        STDP-073
      IF (INTC.EQ.0) GO TO 7                                            STDP-074
      NTT=24*NPP                                                        STDP-075
      DO 6 I=1,INTC                                                     STDP-076
      IF (LO(100)) GO TO 4                                              STDP-077
      DO 2 J=9,12                                                       STDP-078
      IF (LO(112).AND.(MOD(J,2).EQ.0)) GO TO 2                          STDP-079
      K=ITX(J)+I                                                        STDP-080
      IZZ(3,K)=IVY(7,I)                                                 STDP-081
    2 CONTINUE                                                          STDP-082
      K=IVY(3,I)                                                        STDP-083
      IF (K.EQ.0) GO TO 3                                               STDP-084
      IZZ(3,K+ITC)=IVY(7,I)                                             STDP-085
      IF (LO(14)) IZZ(3,K+IT0)=IVY(7,I)                                 STDP-086
    3 K=IVY(4,I)                                                        STDP-087
      IF (K.NE.0) IZZ(3,K+ITE)=IVY(7,I)                                 STDP-088
      K=IVY(5,I)                                                        STDP-089
      IF (K.NE.0) IZZ(3,K+ITF)=IVY(7,I)                                 STDP-090
      GO TO 6                                                           STDP-091
    4 DO 5 J=1,11                                                       STDP-092
    5 IZZ(3,NTT+J)=IVY(7,I)                                             STDP-093
    6 NTT=NTT+11                                                        STDP-094
    7 NMA=NVA(1,1)                                                      STDP-095
    8 IF (NMA.GE.NVA(1,2)) GO TO 100                                    STDP-096
      I1=NVA(1,NMA)                                                     STDP-097
      IV=NVA(2,NMA)                                                     STDP-098
      ITV=MOD(I1-1,8)+1                                                 STDP-099
      J1=(I1-1)/8                                                       STDP-100
      ITT=ITV                                                           STDP-101
      LT(1)=(ITV-5)*(ITV-6)*(ITV-8).EQ.0                                STDP-102
      INL=0                                                             STDP-103
      IF (J1.GT.NPP) ITT=ITV+8                                          STDP-104
      IF (LO(100)) GO TO 9                                              STDP-105
      JI=1                                                              STDP-106
      IJ=1                                                              STDP-107
      IF (J1.GT.NPP) J1=J1-NPP                                          STDP-108
      L1=J1+ITX(ITT)                                                    STDP-109
      IF ((ITT.EQ.13).OR.(ITT.EQ.14)) INL=INLS                          STDP-110
      IF (ITT.EQ.16) INL=INVD                                           STDP-111
      IF (INL.NE.0) IJ=2                                                STDP-112
      GO TO 12                                                          STDP-113
    9 IF (J1.LE.NPP) GO TO 10                                           STDP-114
      JI=3                                                              STDP-115
      IF (LT(1)) INL=4                                                  STDP-116
      IF (ITT.EQ.16) INL=3                                              STDP-117
      L1=24*NPP+11*(J1-NPP-1)+ITV                                       STDP-118
      GO TO 11                                                          STDP-119
   10 INL=8                                                             STDP-120
      JI=2                                                              STDP-121
      L1=ITV+24*(J1-1)                                                  STDP-122
   11 IJ=1+INL/3                                                        STDP-123
   12 IF (IV.NE.16) GO TO 15                                            STDP-124
C FORM FACTOR COPIED                                                    STDP-125
      L3=0                                                              STDP-126
      L2=L1+NIJ(JI)*(NVA(2,NMA+1)-I1)/8                                 STDP-127
      DO 14 J=1,IJ                                                      STDP-128
      DO 13 IS=1,ISM                                                    STDP-129
   13 V(IS,L1+L3)=V(IS,L2+L3)*VA(NMA+3)                                 STDP-130
   14 L3=L3+INL                                                         STDP-131
      IZZ(1,L1)=-NVA(1,NMA+1)                                           STDP-132
      IZZ(2,L1)=IZZ(2,L2)                                               STDP-133
      IZZ(4,L1)=IZZ(4,L2)                                               STDP-134
      GO TO 99                                                          STDP-135
   15 J=MAX0(IV,1)                                                      STDP-136
      NMB=NMA+ITZ(J)                                                    STDP-137
      LT(7)=.FALSE.                                                     STDP-138
      IF ((IV.GE.7).OR.(VA(NMB).NE.0.)) GO TO 18                        STDP-139
C ZERO FORM FACTORS AND GO TO NEXT                                      STDP-140
      L2=L1                                                             STDP-141
      DO 17 J=1,IJ                                                      STDP-142
      DO 16 IS=1,ISM                                                    STDP-143
   16 V(IS,L2)=0.D0                                                     STDP-144
   17 L2=L2+INL                                                         STDP-145
      GO TO 99                                                          STDP-146
   18 LT(1)=LT(1).AND.LO(200)                                           STDP-147
      LT(2)=LT(1).AND.(ITV.EQ.ITT).AND.(NVA(1,NMA+1).EQ.0)              STDP-148
      LT(3)=.FALSE.                                                     STDP-149
      LT(4)=ITV.GT.6                                                    STDP-150
      LT(8)=(IV.GT.0).AND.(IV.LT.7)                                     STDP-151
      K=IABS(NVA(1,NMA+2))                                              STDP-152
      HH=WV(11,K)                                                       STDP-153
      H=HH                                                              STDP-154
      HM=DMIN1(H,HM)                                                    STDP-155
      IZZ(1,L1)=-NVA(1,NMA+1)                                           STDP-156
      IZZ(2,L1)=ITT                                                     STDP-157
      IZZ(4,L1)=K                                                       STDP-158
      IF (NVA(1,NMA+1).EQ.0) GO TO 19                                   STDP-159
      IJ=1                                                              STDP-160
      NFO=MAX0(NFO,NVA(1,NMA+1))                                        STDP-161
   19 L=IZZ(3,L1)                                                       STDP-162
      JI=IJ                                                             STDP-163
      IF (LT(2)) JI=JI+1                                                STDP-164
      IF ((IV.GT.0).AND.(IV.LT.9)) GO TO 22                             STDP-165
      AP=VA(NMB)                                                        STDP-166
      IF (IV.GE.9) GO TO 27                                             STDP-167
      LT(2)=LT(2).AND.(NVA(2,NMA+1).NE.0)                               STDP-168
      LT(4)=LT(4).AND.((NVA(2,NMA+1).NE.0))                             STDP-169
C FORM FACTOR INTERPOLATED                                              STDP-170
      CALL INTP(-IV,ISM,H*VA(NMB+1),VA(NMB),VA(NMB+2),V,L1)             STDP-171
      IF (IJ.EQ.1) GO TO 25                                             STDP-172
   20 L2=L1                                                             STDP-173
      DO 21 J=2,IJ                                                      STDP-174
      CALL DERI(V(1,L2+INL),V(1,L2),H,ISM,.TRUE.)                       STDP-175
   21 L2=L2+INL                                                         STDP-176
      IF (IV.GT.0) GO TO 97                                             STDP-177
      GO TO 25                                                          STDP-178
   22 IF (LT(8)) GO TO 31                                               STDP-179
C BOUND STATE FORM FACTOR                                               STDP-180
      K=NVA(1,NMB)                                                      STDP-181
      IVM=NVA(2,NMB-1)                                                  STDP-182
      IVX=IV                                                            STDP-183
      JV=0                                                              STDP-184
      NMC=NMB+3                                                         STDP-185
      IF (K.EQ.1) GO TO 23                                              STDP-186
      JV=ISM                                                            STDP-187
      IF (2*JV.GT.NX) CALL MEMO('STDF',NX,2*JV,2)                       STDP-188
      IDX=IDX-2*JV                                                      STDP-189
      CALL STBF(P,NVA(2,NMB),ISM,VA(NMC+11-IV),IVM,NX-JV,IDX,X(JV+1,1),ISTDP-190
     1VX,HH,IZZ(4*ITXM+JV+1,1),LO)                                      STDP-191
      NMC=NMC+10*IVX-66                                                 STDP-192
      IF (K.EQ.3) IVX=IVX-1                                             STDP-193
      NMB=NMB+2                                                         STDP-194
   23 CALL STBF(V(1,L1),NVA(2,NMB),ISM,VA(NMC),IVM,NX-JV,IDX,X(JV+1,1),ISTDP-195
     1VX,HH,IZZ(4*ITXM+JV+1,1),LO)                                      STDP-196
      IF (K.EQ.1) GO TO 99                                              STDP-197
      IDX=IDX+JV                                                        STDP-198
      DO 24 IS=1,ISM                                                    STDP-199
   24 V(IS,L1)=V(IS,L1)*P(IS)*VA(NMB+3)                                 STDP-200
      GO TO 99                                                          STDP-201
   25 LT(3)=.TRUE.                                                      STDP-202
      IF (.NOT.LT(2).OR.LT(4)) GO TO 26                                 STDP-203
      IDX=MAX0(IDX,ISM)                                                 STDP-204
      IF (IDX.GT.2*NX) CALL MEMO('STDF',NX,(IDX+1)/2,2)                 STDP-205
      CALL DERI(P,V(1,L1),H,ISM,.TRUE.)                                 STDP-206
   26 IF (LT(2).OR.(NVA(2,NMA+1).NE.0)) GO TO 48                        STDP-207
      IF (IJ.EQ.1) GO TO 99                                             STDP-208
      GO TO 97                                                          STDP-209
C BESSEL EXPANSION                                                      STDP-210
   27 NMC=NMB+1                                                         STDP-211
      L2X=NVA(2,NMA+2)                                                  STDP-212
      LL=NVA(1,NMA+3)                                                   STDP-213
      IF (IV.EQ.9) GO TO 28                                             STDP-214
      JL=NVA(2,NMA+3)                                                   STDP-215
      LJ=JI+JL-1                                                        STDP-216
      IF (VA(NMC).EQ.0.D0) VA(NMC)=1.D0                                 STDP-217
      GO TO 48                                                          STDP-218
   28 LJ=LL+JI+NVA(2,NMA+3)                                             STDP-219
      IDX=MAX0(IDX,3*MAX0(L2X,LJ))                                      STDP-220
      IF (IDX.GT.2*NX) CALL MEMO('STDF',NX,(IDX+1)/2,2)                 STDP-221
C COMPUTATION OF ZEROS OF BESSEL FUNCTIONS - THE L+1 ZEROS FOR L=1 TO   STDP-222
C L=11 ARE IN DATA ZB. THE OTHERS ARE COMPUTED WITH MC MAHON'S FORMULA  STDP-223
C PAGE 371, HANDBOOK OF MATH. FUNCTIONS, ABRAMOVITZ AND STEGUN          STDP-224
      IF (VA(NMC).EQ.0.) VA(NMC)=ISM*H                                  STDP-225
      DO 30 II=1,L2X                                                    STDP-226
      IF ((LL.NE.0).AND.((LL.LT.12).AND.(II.LE.LL+1))) GO TO 29         STDP-227
      X(1,II)=(2*II+LL)*PIS2                                            STDP-228
      IF (LL.EQ.0) GO TO 30                                             STDP-229
      A1=2.D0*X(1,II)                                                   STDP-230
      A2=DFLOAT(LL*(LL+1))                                              STDP-231
      X(1,II)=X(1,II)-A2*(1.D0+(7.D0*A2-6.D0+((166.D0*A2-408.D0)*A2+360.STDP-232
     1D0+(((6949.D0*A2-33252.D0)*A2+81180.D0)*A2-75600.D0)/(7.D0*A1**2))STDP-233
     2/(5.D0*A1**2))/(3.D0*A1**2))/A1                                   STDP-234
      GO TO 30                                                          STDP-235
   29 K=(LL*(LL+1))/2+II-1                                              STDP-236
      X(1,II)=ZB(K)                                                     STDP-237
   30 X(1,II)=X(1,II)/VA(NMC)                                           STDP-238
      LM=LL+1                                                           STDP-239
      LT(6)=LT(2).AND.(NVA(2,NMA+1).EQ.0)                               STDP-240
      GO TO 48                                                          STDP-241
C WOODS-SAXON AND ITS DERIVATIVES TO SOME POWER                         STDP-242
   31 NMC=NMB+4                                                         STDP-243
      LT(5)=((VA(NMB+2).EQ.0.D0).AND.LT(4))                             STDP-244
      LT(4)=((VA(NMB+2).NE.0.D0).AND.LT(4))                             STDP-245
      LT(6)=(((ITV.EQ.3).OR.(ITV.EQ.4)).AND.LO(200))                    STDP-246
      LT(9)=LO(109).OR.(VA(NMB+1).GE.0.D0).OR.LT(5)                     STDP-247
      IF (ITV.GT.6) NMC=NMC+1                                           STDP-248
      IF (LT(5)) GO TO 32                                               STDP-249
      SEP=DEXP(HH/VA(NMB+2))                                            STDP-250
      IF (VA(NMB+2).GT.0.02D0*H)  GO TO 33                              STDP-251
      WRITE (MW,1000) VA(NMB+2),NMA,I                                   STDP-252
      VA(NMB+2)=DMAX1(-VA(NMB+2),0.02D0*H)                              STDP-253
      GO TO 33                                                          STDP-254
   32 IF (VA(NMB+1).GE.H) GO TO 33                                      STDP-255
      WRITE (MW,1001) VA(NMB+1),NMA,I                                   STDP-256
      VA(NMB+1)=DMAX1(-VA(NMB+1),H)                                     STDP-257
   33 IF (IV.LE.4) GO TO 44                                             STDP-258
C INITIALISATION OF DO LOOPS FOR DEFORMED POTENTIALS                    STDP-259
      IQM=NVA(2,NMA+2)                                                  STDP-260
      IX=20                                                             STDP-261
      IQ=MAX0(L,IQM)                                                    STDP-262
      IF (IV.EQ.6) IQ=MAX0(IQ,NVA(2,NMA+2))                             STDP-263
      IDX=MAX0(IDX,3*IQ+120)                                            STDP-264
      IF (IDX.GT.2*NX) CALL MEMO('STDF',NX,(IDX+1)/2,2)                 STDP-265
      A2=0.D0                                                           STDP-266
      A1=1.D0                                                           STDP-267
      IF (LO(6)) A1=DABS(VA(NMB+1))                                     STDP-268
      DO 34 I=1,IQM                                                     STDP-269
   34 X(1,40+I)=VA(NMC+I-1)*DSQRT(DFLOAT(2*I+1)/(8.D0*PIS2))/A1         STDP-270
      DO 43 II=1,20                                                     STDP-271
      I=1+MOD(II-1,10)                                                  STDP-272
      X(2,22)=XGN(I)                                                    STDP-273
      IF (I.NE.II) X(2,22)=-X(2,22)                                     STDP-274
      X(2,21)=1.D0                                                      STDP-275
      DO 35 J=2,IQ                                                      STDP-276
   35 X(2,J+21)=(DFLOAT(2*J-1)*X(2,22)*X(2,J+20)+DFLOAT(1-J)*X(2,J+19))/STDP-277
     1DFLOAT(J)                                                         STDP-278
      X(3,II+20)=0.5D0*PGN(I)                                           STDP-279
      X(2,II)=0.D0                                                      STDP-280
      A5=X(2,L+21)                                                      STDP-281
      IF (IV.EQ.5) GO TO 40                                             STDP-282
      KL=NVA(2,NMA+2)                                                   STDP-283
      IF (NVA(1,NMA+3).NE.0) GO TO 36                                   STDP-284
      A5=A5*X(2,KL+21)*DSQRT(DFLOAT(2*KL+1))                            STDP-285
      GO TO 40                                                          STDP-286
C COMPUTATION OF Y(L,KK) * Y(KL,KK)                                     STDP-287
   36 A5=DSQRT(DFLOAT(2*KL+1))                                          STDP-288
      KK=NVA(1,NMA+3)                                                   STDP-289
      DO 37 N=1,KK                                                      STDP-290
   37 A5=A5*(1.D0-XGN(I)**2)*DFLOAT(2*N-1)**2/DSQRT(DFLOAT((KL+N)*(L+N)*STDP-291
     1(KL-N+1)*(L-N+1)))                                                STDP-292
      KZ=L-KK                                                           STDP-293
      DO 39 J=1,2                                                       STDP-294
      IF (KZ.LE.0) GO TO 39                                             STDP-295
      A4=0.D0                                                           STDP-296
      DO 38 K=1,KZ                                                      STDP-297
      A3=A4                                                             STDP-298
      A4=A5                                                             STDP-299
   38 A5=A3+(A4*X(2,22)-A3)*(2.D0*(KK+K)-1.D0)/K                        STDP-300
   39 KZ=KL-KK                                                          STDP-301
   40 X(3,II)=X(3,II+20)*A5*DSQRT(2.D0*L+1.D0)                          STDP-302
      RR=1.D0                                                           STDP-303
      DO 41 K=1,IQM                                                     STDP-304
   41 RR=RR+X(1,40+K)*X(2,K+21)                                         STDP-305
      X(2,II)=-RR*VA(NMB+1)                                             STDP-306
      X(1,II)=0.D0                                                      STDP-307
      X(1,20+II)=1.D-16                                                 STDP-308
      IF (LT(9)) GO TO 42                                               STDP-309
      X(2,II)=-X(2,II)                                                  STDP-310
      IF (X(2,II).GT.-36.D0*VA(NMB+2)) X(1,20+II)=DEXP(X(2,II)/VA(NMB+2)STDP-311
     1)                                                                 STDP-312
   42 IF (.NOT.LT(5)) GO TO 43                                          STDP-313
      X(2,II)=DABS(X(2,II))                                             STDP-314
      A2=A2+X(2,II)**3*X(3,20+II)                                       STDP-315
   43 CONTINUE                                                          STDP-316
      GO TO 46                                                          STDP-317
C INITIALISATION OF DO LOOPS FOR NOT DEFORMED POTENTIALS                STDP-318
   44 IQM=0                                                             STDP-319
      IX=1                                                              STDP-320
      IDX=MAX0(IDX,63)                                                  STDP-321
      IF (IDX.GT.2*NX) CALL MEMO('STDF',NX,(IDX+1)/2,2)                 STDP-322
      X(1,1)=0.D0                                                       STDP-323
      X(2,1)=-VA(NMB+1)                                                 STDP-324
      X(3,1)=1.D0                                                       STDP-325
      X(3,21)=1.D0                                                      STDP-326
      X(1,21)=1.D-16                                                    STDP-327
      IF (LT(9)) GO TO 45                                               STDP-328
      X(2,1)=-X(2,1)                                                    STDP-329
      IF (X(2,1).GT.-36.D0*VA(NMB+2)) X(1,21)=DEXP(X(2,1)/VA(NMB+2))    STDP-330
   45 IF (.NOT.LT(5)) GO TO 46                                          STDP-331
      X(2,1)=-X(2,1)                                                    STDP-332
      A2=X(2,1)**3                                                      STDP-333
   46 IV1=1+MOD(IV-1,4)                                                 STDP-334
      AP=VA(NMB)                                                        STDP-335
      AN=VA(NMB+1)                                                      STDP-336
      IF (LO(6)) AN=AN/DABS(VA(NMB+1))                                  STDP-337
      IF (.NOT.LT(9)) AN=-AN                                            STDP-338
      IF (IV1.GT.1) AP=AP*AN/DSQRT(8.D0*PIS2)                           STDP-339
      IF (IV1.GT.2) AP=AP*AN*0.5D0                                      STDP-340
      IF (IV1.GT.3) AP=AP*AN/3.D0                                       STDP-341
      IF (VA(NMB+3).GT.-1.D0) GO TO 47                                  STDP-342
      WRITE (MW,1002) VA(NMB+3),NMA                                     STDP-343
      VA(NMB+3)=-.8D0                                                   STDP-344
   47 A1=VA(NMB+3)                                                      STDP-345
      A5=DFLOAT(L+1)                                                    STDP-346
      IV2=IV1                                                           STDP-347
      IV3=IV2-1                                                         STDP-348
      IV2=IV3+JI                                                        STDP-349
      IF (LT(6)) IV2=IV2+1                                              STDP-350
      IF (ITV.GT.6) AP=AP*CCZ                                           STDP-351
      IF (LT(5)) AP=AP/A2                                               STDP-352
   48 IF (LT(4)) JI=1                                                   STDP-353
      RR=0.D0                                                           STDP-354
      AN=0.D0                                                           STDP-355
      A6=0.D0                                                           STDP-356
      DO 90 IS=1,ISM                                                    STDP-357
      RR=RR+HH                                                          STDP-358
      IF (LT(3)) GO TO 89                                               STDP-359
      DO 49 I=1,3                                                       STDP-360
   49 Y(I)=0.D0                                                         STDP-361
      IF (IV.GE.9) GO TO 70                                             STDP-362
C INTEGRATION LOOP                                                      STDP-363
      DO 69 I=1,IX                                                      STDP-364
      IF (LT(5)) GO TO 60                                               STDP-365
      IF (X(1,I).NE.0.D0) GO TO 50                                      STDP-366
      X(2,I)=X(2,I)+HH                                                  STDP-367
      IF (X(2,I)+50.D0*VA(NMB+2).GT.0.D0) X(1,I)=DEXP(X(2,I)/VA(NMB+2)) STDP-368
      GO TO 51                                                          STDP-369
   50 IF (X(1,I).LT.1.D15) X(1,I)=X(1,I)*SEP                            STDP-370
   51 IF ((.NOT.LT(9)).AND.X(1,I+20).GT.1.D-15) X(1,I+20)=X(1,I+20)/SEP STDP-371
      J=I                                                               STDP-372
      K=1                                                               STDP-373
   52 VR(1,K)=1.D0/(1.D0+X(1,J))                                        STDP-374
      IF (IV2.EQ.1) GO TO 53                                            STDP-375
      A2=VR(1,K)/VA(NMB+2)                                              STDP-376
      VR(2,K)=VR(1,K)*A2*X(1,J)                                         STDP-377
      IF (IV2.GT.2) VR(3,K)=VR(2,K)*A2*(X(1,J)-1.D0)                    STDP-378
      IF (IV2.GT.3) VR(4,K)=VR(2,K)*(X(1,J)**2-4.D0*X(1,J)+1.D0)*A2*A2  STDP-379
      IF (IV2.GT.4) VR(5,K)=VR(3,K)*(X(1,J)**2-10.D0*X(1,J)+1.D0)*A2*A2 STDP-380
   53 IF (A1.EQ.0.D0) GO TO 54                                          STDP-381
      IF (IV2.GT.4) VR(5,K)=(A1+1.D0)*(A1*(A1-1.D0)*((A1-2.D0)*VR(2,K)**STDP-382
     12+6.D0*VR(1,K)*VR(3,K))*VR(2,K)**2+A1*VR(1,K)**2*(3.D0*VR(3,K)**2+STDP-383
     24.D0*VR(2,K)*VR(4,K))+VR(1,K)**3*VR(5,K))*VR(1,K)**(A1-3.D0)      STDP-384
      IF (IV2.GT.3) VR(4,K)=(A1+1.D0)*(A1*((A1-1.D0)*VR(2,K)**2+3.D0*VR(STDP-385
     11,K)*VR(3,K))*VR(2,K)+VR(1,K)**2*VR(4,K))*VR(1,K)**(A1-2.D0)      STDP-386
      IF (IV2.GT.2) VR(3,K)=(A1+1.D0)*(A1*VR(2,K)**2+VR(3,K)*VR(1,K))*VRSTDP-387
     1(1,K)**(A1-1.D0)                                                  STDP-388
      IF (IV2.GT.1) VR(2,K)=(A1+1.D0)*VR(1,K)**A1*VR(2,K)               STDP-389
      VR(1,K)=VR(1,K)**(A1+1.D0)                                        STDP-390
   54 IF (.NOT.LT(9)) GO TO 55                                          STDP-391
      IF (LT(6)) VR(IV1,1)=VR(IV2,1)*4.D0*VA(NMB+2)                     STDP-392
      GO TO 58                                                          STDP-393
   55 J=J+20                                                            STDP-394
      K=K+1                                                             STDP-395
      IF (K.EQ.2) GO TO 52                                              STDP-396
      IF (LO(200).OR.(IJ.NE.3)) GO TO 56                                STDP-397
      VR(3,1)=VR(1,1)*VR(3,2)-2.D0*VR(2,1)*VR(2,2)+VR(3,1)*VR(1,2)      STDP-398
      VR(2,1)=VR(2,1)*VR(1,2)-VR(1,1)*VR(2,2)                           STDP-399
      GO TO 57                                                          STDP-400
   56 IF (IV2.GT.4) VS(4)=VR(1,1)*VR(5,2)+2.D0*VR(2,1)*VR(4,2)-2.D0*VR(4STDP-401
     1,1)*VR(2,2)-VR(5,1)*VR(1,2)                                       STDP-402
      IF (IV2.GT.3) VS(3)=VR(1,1)*VR(4,2)+VR(2,1)*VR(3,2)-VR(3,1)*VR(2,2STDP-403
     1)-VR(4,I)*VR(1,2)                                                 STDP-404
      IF (IV2.GT.2) VS(2)=VR(1,1)*VR(3,2)-VR(3,1)*VR(1,2)               STDP-405
      VS(1)=VR(1,1)*VR(2,2)-VR(2,1)*VR(1,2)                             STDP-406
      IF (IV2.GT.4) VR(5,1)=VR(1,1)*VR(5,2)+4.D0*VR(2,1)*VR(4,2)+6.D0*VRSTDP-407
     1(3,1)*VR(3,2)+4.D0*VR(4,1)*VR(2,2)+VR(5,1)*VR(1,2)                STDP-408
      IF (IV2.GT.3) VR(4,1)=VR(1,1)*VR(4,2)+3.D0*VR(2,1)*VR(3,2)+3.D0*VRSTDP-409
     1(3,1)*VR(2,2)+VR(4,1)*VR(1,2)                                     STDP-410
      IF (IV2.GT.2) VR(3,1)=VR(1,1)*VR(3,2)+2.D0*VR(2,1)*VR(2,2)+VR(3,1)STDP-411
     1*VR(1,2)                                                          STDP-412
      IF (IV2.GT.1) VR(2,1)=VR(1,1)*VR(2,2)+VR(2,1)*VR(1,2)             STDP-413
   57 VR(1,1)=VR(1,1)*VR(1,2)                                           STDP-414
      IF (LT(6)) VR(IV1,1)=RR*(4.D0*VA(NMB+2)**(A1+1.D0))/VA(NMB+1)*VS(ISTDP-415
     1V1)                                                               STDP-416
      IF (LT(1)) VR(IV3+2,1)=-VS(IV3+1)                                 STDP-417
   58 IF (LT(4)) A6=A6+VR(1,1)*RR**2*X(3,I+20)*(1.D0+VA(NMB+4)*RR**2)   STDP-418
      DO 59 J=1,JI                                                      STDP-419
   59 Y(J)=Y(J)+VR(IV3+J,1)*X(3,I)                                      STDP-420
      GO TO 69                                                          STDP-421
C DEFORMED COULOMB POTENTIAL                                            STDP-422
   60 A4=X(2,I)/RR                                                      STDP-423
      IF (ITV.NE.ITT) GO TO 62                                          STDP-424
      IF (A4.GT.1.D0) GO TO 61                                          STDP-425
      Y(1)=Y(1)+(X(2,I)**2)*A4*X(3,I)                                   STDP-426
      Y(2)=Y(2)+X(2,I)*A4**2*X(3,I)                                     STDP-427
      Y(3)=Y(3)+2.D0*A4**3*X(3,I)                                       STDP-428
      GO TO 69                                                          STDP-429
   61 Y(1)=Y(1)+(0.5D0*X(2,I)*X(2,I)-RR*RR/6.D0)*X(3,I)*3.D0            STDP-430
      Y(2)=Y(2)+RR*X(3,I)                                               STDP-431
      Y(3)=Y(3)-X(3,I)                                                  STDP-432
      GO TO 69                                                          STDP-433
   62 IF (A4.GT.1.D0) GO TO 63                                          STDP-434
      A3=(X(2,I)**2)*(A4**(L+1))*3.D0/((A5+2.D0)*(2.D0*A5-1.D0))        STDP-435
      IF (IV1.GT.1) A3=A3*(A5+2.D0)/X(2,I)                              STDP-436
      IF (IV1.GT.2) A3=A3*(A5+1.D0)/X(2,I)                              STDP-437
      IF (IV1.GT.3) A3=A3*A5/X(2,I)                                     STDP-438
      GO TO 65                                                          STDP-439
   63 IF (L.NE.2) GO TO 64                                              STDP-440
      IF (IV1.EQ.1) A3=RR*RR*(0.2D0+DLOG(A4))*0.6D0                     STDP-441
      IF (IV1.GE.2) A3=0.6D0*RR/A4                                      STDP-442
      IF (IV1.GE.3) A3=-A3/X(2,I)                                       STDP-443
      IF (IV1.GE.4) A3=-2.D0*A3/X(2,I)                                  STDP-444
      GO TO 65                                                          STDP-445
   64 IF (IV1.EQ.1) A3=RR*RR*(1.D0/(A5+2.D0)-1.D0/(A4**(L-2)*(2.D0*A5-1.STDP-446
     1D0)))*3.D0/(A5-3.D0)                                              STDP-447
      IF (IV1.GE.2) A3=RR/A4**(L-1)*3.D0/(2.D0*A5-1.D0)                 STDP-448
      IF (IV1.GE.3) A3=-A3*(A5-2.D0)/X(2,I)                             STDP-449
      IF (IV1.EQ.4) A3=-A3*(A5-1.D0)/X(2,I)                             STDP-450
   65 Y(1)=Y(1)+A3*X(3,I)                                               STDP-451
      IF (JI.EQ.1) GO TO 69                                             STDP-452
      IF (A4.GT.1.D0) GO TO 66                                          STDP-453
      A3=-A5*A3/RR                                                      STDP-454
      GO TO 68                                                          STDP-455
   66 IF (L.NE.2) GO TO 67                                              STDP-456
      IF (IV2.EQ.1) A3=-1.2D0*(0.3D0*RR-DLOG(A4))*RR                    STDP-457
      IF (IV2.GE.2) A3=2.D0*A3/RR                                       STDP-458
      GO TO 68                                                          STDP-459
   67 IF (IV2.EQ.1) A3=(2.D0/(A5+2.D0)-(A5-1.D0)/(A4**(L-2)*(2.D0*A5-1.DSTDP-460
     10)))*3.D0/(A5-3.D0)*RR                                            STDP-461
      IF (IV2.NE.1) A3=(A5-1.D0)*A3/RR                                  STDP-462
   68 Y(2)=Y(2)-A3*X(3,I)                                               STDP-463
   69 CONTINUE                                                          STDP-464
      GO TO 87                                                          STDP-465
C COMPUTATION OF BESSEL FUNCTIONS                                       STDP-466
   70 IF (IV.GT.9) GO TO 79                                             STDP-467
      IF (RR.GT.VA(NMC)) GO TO 90                                       STDP-468
      DO 78 II=1,L2X                                                    STDP-469
      A1=RR*X(1,II)                                                     STDP-470
      X(2,1)=DSIN(A1)/A1                                                STDP-471
      IF (LJ.EQ.1) GO TO 75                                             STDP-472
      K=IDINT(1.D0+A1)                                                  STDP-473
      IF (K.LT.LJ) GO TO 72                                             STDP-474
      X(2,2)=(X(2,1)-DCOS(A1))/A1                                       STDP-475
      IF (LJ.EQ.2) GO TO 75                                             STDP-476
      DO 71 J=3,LJ                                                      STDP-477
   71 X(2,J)=(2*J-3)*X(2,J-1)/A1-X(2,J-2)                               STDP-478
      GO TO 75                                                          STDP-479
   72 A3=LJ                                                             STDP-480
      A4=DMAX1(DSQRT(10.5D0*A1)-0.5D0,A3)                               STDP-481
      K=IDINT(A4+3.D0+21.D0*A1/(A4+A4+1.D0))                            STDP-482
      A2=0.D0                                                           STDP-483
   73 A2=A1/(2.D0*K+1.D0-A2*A1)                                         STDP-484
      IF (K.LE.LJ) X(2,K+1)=A2                                          STDP-485
      K=K-1                                                             STDP-486
      IF (K.GE.1) GO TO 73                                              STDP-487
      DO 74 K=2,LJ                                                      STDP-488
   74 X(2,K)=X(2,K)*X(2,K-1)                                            STDP-489
C COMPUTATION OF DERIVATIVES OF BESSEL FUNCTIONS (- DERIVATIVE)         STDP-490
   75 JL=LJ-1                                                           STDP-491
      DO 77 J=LM,LJ                                                     STDP-492
      KK=JI+J-LJ                                                        STDP-493
      IF (KK.GE.1) Y(KK)=Y(KK)+VA(NMC+II)*X(2,LM)                       STDP-494
      IF (KK.EQ.JI) GO TO 78                                            STDP-495
      A3=0.D0                                                           STDP-496
      A5=0.D0                                                           STDP-497
      DO 76 K=1,JL                                                      STDP-498
      A2=(A5+1.D0)*X(2,K+1)-A5*A3                                       STDP-499
      A3=X(2,K)                                                         STDP-500
      X(2,K)=X(1,II)*A2/(2.D0*A5+1.D0)                                  STDP-501
   76 A5=A5+1.D0                                                        STDP-502
   77 JL=JL-1                                                           STDP-503
   78 CONTINUE                                                          STDP-504
      GO TO 87                                                          STDP-505
C COMPUTATION OF LAGUERRE POLYNOMIALS X**LL L(2X**2) DEXP(-X**2)        STDP-506
   79 DO 86 J=1,L2X,2                                                   STDP-507
      IF (J.NE.1) GO TO 80                                              STDP-508
      A1=RR/VA(NMC)                                                     STDP-509
      A2=A1*A1                                                          STDP-510
      CL(1)=A1**LL*DEXP(-0.5D0*A2)                                      STDP-511
      CL(2)=(LL+1.5D0-A2)*CL(1)                                         STDP-512
      GO TO 81                                                          STDP-513
   80 CL(1)=(CL(2)*(DFLOAT(LL+2*J)-2.5D0-A2)-CL(1)*(DFLOAT(LL+J)-1.5D0))STDP-514
     1/DFLOAT(J-1)                                                      STDP-515
      CL(2)=(CL(1)*(DFLOAT(LL+2*J)-0.5D0-A2)-CL(2)*(DFLOAT(LL+J)-0.5D0))STDP-516
     1/DFLOAT(J)                                                        STDP-517
   81 IF (JL.NE.0) GO TO 82                                             STDP-518
      Y(1)=Y(1)+CL(1)*VA(NMC+J)                                         STDP-519
      IF (J.LT.L2X) Y(1)=Y(1)+CL(2)*VA(NMC+J+1)                         STDP-520
   82 IF (LJ.EQ.0) GO TO 86                                             STDP-521
      DO 83 L=3,6                                                       STDP-522
   83 CL(L)=0.D0                                                        STDP-523
C -DERIVATIVE OF LAGUERRE POLYNOMIALS X**LL L(2X**2) DEXP(-X**2)        STDP-524
      DO 85 K=1,LJ                                                      STDP-525
      DO 84 L=1,6                                                       STDP-526
   84 CL(L+2)=CL(L)                                                     STDP-527
      CL(1)=((DFLOAT(LL+2*J+K)-A2)*CL(3)-DFLOAT(2*J)*CL(4)-DFLOAT(2*(K-1STDP-528
     1)*(K-2))*CL(7))/A1+DFLOAT(4*(K-1))*CL(5)                          STDP-529
      CL(2)=-((DFLOAT(LL+2*J+1-K)-A2)*CL(4)-DFLOAT(2*J+1+2*LL)*CL(3)-DFLSTDP-530
     1OAT(2*(K-1)*(K-2))*CL(8))/A1-DFLOAT(4*(K-1))*CL(6)                STDP-531
      IF (K.LT.JL) GO TO 86                                             STDP-532
      Y(K+1-JL)=Y(K+1-JL)+CL(1)*VA(NMC+J)                               STDP-533
      IF (J.LT.L2X) Y(K+1-JL)=Y(K+1-JL)+CL(2)*VA(NMC+J+1)               STDP-534
   85 CONTINUE                                                          STDP-535
   86 CONTINUE                                                          STDP-536
   87 L2=L1                                                             STDP-537
      DO 88 J=1,JI                                                      STDP-538
      V(IS,L2)=AP*Y(J)                                                  STDP-539
   88 L2=L2+INL                                                         STDP-540
      GO TO 90                                                          STDP-541
   89 Y(1)=V(IS,L1)/AP                                                  STDP-542
      IF (LT(2).AND.(.NOT.LT(4))) V(IS,L1)=P(IS)                        STDP-543
   90 AN=AN+AP*Y(1)*RR**(L+2)                                           STDP-544
      IF (LT(7)) GO TO 97                                               STDP-545
      IF (.NOT.LT(4)) GO TO 92                                          STDP-546
C FOLDING OF CHARGE DISTRIBUTION WITH COULOMB POTENTIAL                 STDP-547
      IDX=MAX0(IDX,5*ISM)                                               STDP-548
      IF (IDX.GT.2*NX) CALL MEMO('STDF',NX,(IDX+1)/2,2)                 STDP-549
      A7=0.D0                                                           STDP-550
      IF (LT(8)) A7=VA(NMB+4)                                           STDP-551
      CALL COPO(V(1,L1),V(1,L1),X,ISM,HH,L,AP,A7,CCZ,A6,.TRUE.,.FALSE.) STDP-552
      IF (A6.EQ.0.D0) A6=DABS(V(ISM,L1)*DFLOAT(2*L+1)*(ISM*HH)**(L+1)/(CSTDP-553
     1CZ*VA(NMB)))                                                      STDP-554
      DO 91 IS=1,ISM                                                    STDP-555
   91 V(IS,L1)=V(IS,L1)/A6                                              STDP-556
   92 IF (NVA(2,NMA+1).EQ.0) GO TO 96                                   STDP-557
      AN=DABS(AN*HH/AP)                                                 STDP-558
      IF (ITV.GT.6) AN=DABS(V(ISM,L1)*DFLOAT(2*L+1)*(ISM*HH)**(L+1)/(CCZSTDP-559
     1*VA(NMB)))                                                        STDP-560
      IF (LT(2).AND.(ITT.EQ.8).AND.(NVA(1,NMA+1).EQ.0).AND.(VA(NMB+2).EQSTDP-561
     1.0.D0).AND.LT(8)) AN=AN*HH*ISM                                    STDP-562
      IF (NVA(2,NMA+1).GT.0) GO TO 93                                   STDP-563
      NVA(2,NMA+1)=-NVA(2,NMA+1)                                        STDP-564
      AP=VA(NMB)                                                        STDP-565
      VA(NMB)=AP*AN                                                     STDP-566
      WRITE (MW,1003) AP,VA(NMB),ITT,J1                                 STDP-567
      GO TO 96                                                          STDP-568
   93 L2=L1                                                             STDP-569
      DO 95 J=1,IJ                                                      STDP-570
      DO 94 IS=1,ISM                                                    STDP-571
   94 V(IS,L2)=V(IS,L2)/AN                                              STDP-572
   95 L2=L2+INL                                                         STDP-573
   96 IF (.NOT.LT(4)) GO TO 97                                          STDP-574
      LT(4)=.FALSE.                                                     STDP-575
      LT(7)=.TRUE.                                                      STDP-576
      IF (LT(2)) GO TO 25                                               STDP-577
      IF (IJ.NE.1) GO TO 20                                             STDP-578
   97 IF (.NOT.LT(1).OR.(NVA(1,NMA+1).NE.0)) GO TO 99                   STDP-579
      RR=0.D0                                                           STDP-580
      DO 98 IS=1,ISM                                                    STDP-581
      RR=RR+H                                                           STDP-582
      A1=V(IS,L1+INL)                                                   STDP-583
      V(IS,L1+INL)=-V(IS,L1)/RR**2                                      STDP-584
   98 V(IS,L1)=A1/RR                                                    STDP-585
   99 NMA=NVA(2,I1-6)+1                                                 STDP-586
      GO TO 8                                                           STDP-587
  100 IF (NFO.EQ.0) RETURN                                              STDP-588
C FOLDING                                                               STDP-589
      NNF=ISM*ITXM+1                                                    STDP-590
      IF (LO(100)) NNF=NNF-ISM*ITX(7)                                   STDP-591
      DO 101 I=1,NNF                                                    STDP-592
  101 P(I)=0.D0                                                         STDP-593
      N1=NVA(2,1)                                                       STDP-594
      IST=0                                                             STDP-595
      DO 102 N=1,NFO                                                    STDP-596
      IS=5+ISM+IDINT(2.D0*(DABS(VA(N1+3*N-2))+2.D0*DABS(VA(N1+3*N-1)))/HSTDP-597
     1M)                                                                STDP-598
      IF (VA(N1+3*N-3)*VA(N1+3*N-2).EQ.0.D0) IS=ISM+5                   STDP-599
  102 IST=MAX0(IS,IST)                                                  STDP-600
      IDY=NNF+2*IST*(IMAX+1)                                            STDP-601
      IDX=MAX0(IDY,IDX)                                                 STDP-602
      IF (IDX.GT.2*NX) CALL MEMO('STDF',NX,(IDX+1)/2,2)                 STDP-603
      CALL FOLD(V,P,VA(N1),NFO,1,ISM,IST,ACONV,IVY,INTC,P(NNF),PGN,XGN,WSTDP-604
     1V,IZZ,LO)                                                         STDP-605
      RETURN                                                            STDP-606
 1000 FORMAT (' TOO SMALL DIFFUSENESS =',D15.8,'   CHANGED INTO MINIMUM STDP-607
     1VALUE IN STDP FOR NMA =',I5,' AND I =',I2)                        STDP-608
 1001 FORMAT (' TOO SMALL COULOMB RADIUS =',D15.8,'   CHANGED INTO MINIMSTDP-609
     1UM VALUE IN STDP FOR NMA =',I5,' AND I =',I2)                     STDP-610
 1002 FORMAT (' POWER 1+',D15.6,'  CHANGED TO .2 FOR NMA =',I4)         STDP-611
 1003 FORMAT (' STRENGTH',D15.6,' REPLACED BY THE INTEGRAL',D15.6,' FOR STDP-612
     1THE FORM FACTOR',I4,' OF THE POTENTIAL',I4)                       STDP-613
      END                                                               STDP-614
C 01/01/04                                                      ECIS03  STBF-000
      SUBROUTINE STBF(V,IVX,ISM,VA,IVM,NX,IDX,XX,IV,H,IEX,LO)           STBF-001
C COMPUTES BOUND STATE FORM FACTORS                                     STBF-002
C INPUT : IVX:  TABLE OF QUANTUM NUMBERS                                STBF-003
C         ISM:  NUMBER OF INTEGRATION STEPS                             STBF-004
C         VA:   FOR OPTICAL MODEL PARAMETERS TO USE HERE                STBF-005
C         IVM:  STEP FACTOR FOR WOODS-SAXON WAVE FUNCTIONS              STBF-006
C         NX:   LENGTH OF WORKING SPACE                                 STBF-007
C         LO:   LOGICAL CONTROLS                                        STBF-008
C OUTPUT: V(ISM):  BOUND STATE WAVE FUNCTION                            STBF-009
C         IDX:  LENGTH OF WORKING FIELD USED                            STBF-010
C WORKING SPACE: XX(3,I): TO COMPUTE BOUND FUNCTIONS                    STBF-011
C                IEX: FOR COULOMB FUNCTION, IN EQUIVALENCE WITH XX      STBF-012
C***********************************************************************STBF-013
      IMPLICIT REAL*8 (A-H,O-Z)                                         STBF-014
      LOGICAL LO(250)                                                   STBF-015
      DIMENSION VA(11),V(1),IVX(4),XX(3,1),IEX(1)                       STBF-016
      COMMON /DCONS/ CM,CK,CHB,CMB,CCZ                                  STBF-017
      COMMON /INOUT/ MR,MW,MS                                           STBF-018
      L=IVX(2)                                                          STBF-019
      IF (IV.EQ.8) GO TO 7                                              STBF-020
      N=IVX(1)                                                          STBF-021
C COMPUTATION OF THE NORMALISATION OF LAGUERRE POLYNOMIALS              STBF-022
      A1=2.256758334191D0                                               STBF-023
      A3=L                                                              STBF-024
      IF (L.EQ.0) GO TO 2                                               STBF-025
      DO 1 I=1,L                                                        STBF-026
    1 A1=A1/(DFLOAT(I)+.5D0)                                            STBF-027
    2 IF (N.EQ.0) GO TO 4                                               STBF-028
      DO 3 I=1,N                                                        STBF-029
      A2=DFLOAT(I)                                                      STBF-030
    3 A1=A1*(A2+A3+.5D0)/A2                                             STBF-031
    4 A1=DSQRT(A1)                                                      STBF-032
C COMPUTATION OF LAGUERRE POLYNOMIALS                                   STBF-033
      RR=0.D0                                                           STBF-034
      DO 6 IS=1,ISM                                                     STBF-035
      RR=RR+H                                                           STBF-036
      X1=(VA(1)*RR)**2                                                  STBF-037
      X3=A1*DEXP(.5D0*(A3*DLOG(X1)-X1))                                 STBF-038
      IF (N.EQ.0) GO TO 6                                               STBF-039
      X2=X3                                                             STBF-040
      DO  5 I=1,N                                                       STBF-041
      A2=DFLOAT(I)                                                      STBF-042
      X2=2.D0*X2*DFLOAT(I-N-1)*X1/(A2*(2.D0*(A3+A2)+1.D0))              STBF-043
    5 X3=X3+X2                                                          STBF-044
    6 V(IS)=X3                                                          STBF-045
      RETURN                                                            STBF-046
C BOUND STATE IN WOODS-SAXON POTENTIAL                                  STBF-047
C CONTROL OF STORAGE AND STEP SIZE                                      STBF-048
    7 IREB=IVM                                                          STBF-049
      IF (IREB.EQ.0) IREB=4                                             STBF-050
      KN=IREB*ISM                                                       STBF-051
      IDX=MAX0(IDX,6*KN+6)                                              STBF-052
      IF (IDX.GT.2*NX) CALL MEMO('STBF',NX,(IDX+1)/2,2)                 STBF-053
      A4=IREB                                                           STBF-054
      A4=H/A4                                                           STBF-055
      IF (VA(3).EQ.0.D0) VA(3)=1.D0                                     STBF-056
      Y3=(VA(2)-VA(3))**0.33333333333333D0                              STBF-057
      A2=Y3*VA(6)                                                       STBF-058
      KR=IDINT(A2/A4)                                                   STBF-059
      Y2=VA(1)                                                          STBF-060
      IF (Y2.EQ.0.D0) Y2=0.01D0                                         STBF-061
      JL=IVX(4)                                                         STBF-062
      IF (IVX(3).EQ.0) JL=2*L                                           STBF-063
      IF (LO(51)) WRITE (MW,1000) IVX,KN,IREB,KR,Y2,(VA(I),I=2,11)      STBF-064
      A1=A4*A4                                                          STBF-065
      Y1=VA(3)*(VA(2)-VA(3))/VA(2)                                      STBF-066
      Y5=CK*Y1*A1                                                       STBF-067
      A5=Y2*Y5                                                          STBF-068
      RR=DSQRT(DABS(A5))/A4                                             STBF-069
      X5=0.5D0*CK*CCZ*Y1*VA(4)/RR                                       STBF-070
      IF (VA(1).GT.0.) GO TO 8                                          STBF-071
C MATCHING OF UNBOUND FUNCTIONS                                         STBF-072
      IDX=MAX0(IDX,10*L+10)                                             STBF-073
      IF (IDX.GT.2*NX) CALL MEMO('STBF',NX,(IDX+1)/2,2)                 STBF-074
      CALL FCOU(L,X5,RR*A4*KN,XX(L+2,1),XX(2*L+3,1),XX(3*L+4,1),XX(4*L+5STBF-075
     1,1),IEX,XX(5*L+6,1))                                              STBF-076
      Z1=XX(2*L+2,1)                                                    STBF-077
      Z2=XX(4*L+4,1)                                                    STBF-078
      CALL FCOU(L,X5,RR*A4*(KN-2),XX(L+2,1),XX(2*L+3,1),XX(3*L+4,1),XX(4STBF-079
     1*L+5,1),IEX,XX(5*L+6,1))                                          STBF-080
      Z3=XX(2*L+2,1)                                                    STBF-081
      Z4=XX(4*L+4,1)                                                    STBF-082
    8 X1=Y3*VA(11)                                                      STBF-083
      A3=Y3*VA(9)                                                       STBF-084
      Y3=2.D0*VA(8)*Y5                                                  STBF-085
      Y4=IVX(3)*(IVX(3)+2)-JL*(JL+2)+4*L*(L+1)                          STBF-086
      Y4=.25D0*Y4                                                       STBF-087
      A6=DFLOAT(L*(L+1))                                                STBF-088
      A6=A6*A1                                                          STBF-089
      X4=X5*2.D0*A1*RR                                                  STBF-090
      X3=0.D0                                                           STBF-091
      K=KN+1                                                            STBF-092
C COMPUTATION OF OPTICAL POTENTIALS                                     STBF-093
      DO 10 I=1,K                                                       STBF-094
      X3=X3+A4                                                          STBF-095
      X2=DEXP((X3-A3)/VA(10))                                           STBF-096
      XX(2,I)=A6/(X3*X3)+Y4*Y3*X2/((1.D0+X2)**2*X3*VA(10))+A5           STBF-097
      XX(3,I)=-1.D0/(1.D0+DEXP((X3-A2)/VA(7)))                          STBF-098
      IF (X3.GT.X1) GO TO 9                                             STBF-099
      XX(2,I)=XX(2,I)+X4*(1.5D0-0.5D0*X3*X3/(X1*X1))/X1                 STBF-100
      GO TO 10                                                          STBF-101
    9 XX(2,I)=XX(2,I)+X4/X3                                             STBF-102
   10 CONTINUE                                                          STBF-103
      IF (VA(1).LT.0.) GO TO 15                                         STBF-104
C MATCHING CONDITIONS                                                   STBF-105
      X1=(X3-A4)*RR                                                     STBF-106
      X3=X3*RR                                                          STBF-107
      A6=A6/A1                                                          STBF-108
      N=IDINT(5.D0*(X3-X1)+1.D0)                                        STBF-109
      Y3=N                                                              STBF-110
      Y3=(X3-X1)/Y3                                                     STBF-111
      IG=IDINT(1.D0/Y3)                                                 STBF-112
      JG=MIN0(100,IG)                                                   STBF-113
      A5=Y3*Y3                                                          STBF-114
      A3=1.D0                                                           STBF-115
      DO 12 I=1,20                                                      STBF-116
      M=2*I*JG                                                          STBF-117
      A4=X3+Y3*DFLOAT(M)                                                STBF-118
      Y1=DEXP(Y3)                                                       STBF-119
      Y4=0.5D0/Y3+0.5D0                                                 STBF-120
      Y2=(A6/(A4*A4)+2.D0*X5/A4+1.D0)*A5                                STBF-121
      DO 11 J=1,M                                                       STBF-122
      Y1=(2.D0+Y2/(1.D0-Y2/12.D0))-1.D0/Y1                              STBF-123
      A2=Y2                                                             STBF-124
      A4=A4-Y3                                                          STBF-125
      Y2=(A6/(A4*A4)+2.D0*X5/A4+1.D0)*A5                                STBF-126
      A1=Y1*(1.D0-A2/12.D0)/(1.D0-Y2/12.D0)                             STBF-127
   11 Y4=Y4/(A1*A1)+1.D0                                                STBF-128
      IF (DABS(Y1-A3).LT.0.1D-4*DABS(Y1-1.D0)) GO TO 13                 STBF-129
   12 A3=Y1                                                             STBF-130
      IF (LO(51)) WRITE (MW,1001)                                       STBF-131
   13 Y4=(Y4-0.5D0)*Y3                                                  STBF-132
      IF (LO(51)) WRITE (MW,1002) I,M                                   STBF-133
      X2=1.D0/Y1                                                        STBF-134
      X3=1.D0                                                           STBF-135
      X4=Y2                                                             STBF-136
      DO 14 I=1,N                                                       STBF-137
      X1=X2                                                             STBF-138
      X2=X3                                                             STBF-139
      X3=(2.D0+X4/(1.D0-X4/12.D0))*X2-X1                                STBF-140
      A4=A4-Y3                                                          STBF-141
   14 X4=(A6/(A4*A4)+2.D0*X5/A4+1.D0)*A5                                STBF-142
      A3=X3*(1.D0-Y2/12.D0)/(1.D0-X4/12.D0)                             STBF-143
      GO TO 16                                                          STBF-144
   15 KR=K                                                              STBF-145
   16 KS=IDINT(2.D0+DSQRT(A6/12.D0))                                    STBF-146
C STARTING VALUES                                                       STBF-147
      DO 17 I=1,KS                                                      STBF-148
   17 XX(1,I)=0.D0                                                      STBF-149
      XX(1,KS)=1.D0                                                     STBF-150
      IF (L.EQ.1) XX(1,KS-1)=-.2D0                                      STBF-151
      A4=VA(5)                                                          STBF-152
      IK=2*IVX(1)                                                       STBF-153
      IST=0                                                             STBF-154
      X1=0.D0                                                           STBF-155
      Y1=-1.D0                                                          STBF-156
      IN1=0                                                             STBF-157
      IN2=0                                                             STBF-158
C SEARCH FOR THE EIGENVALUE                                             STBF-159
   18 X3=X1+A4                                                          STBF-160
   19 IST=IST+1                                                         STBF-161
      IN3=0                                                             STBF-162
      X4=X3*Y5                                                          STBF-163
C UPWARDS INTEGRATION                                                   STBF-164
      DO 20 I=KS,KR                                                     STBF-165
      X5=X4*XX(3,I-1)+XX(2,I-1)                                         STBF-166
      XX(1,I+1)=(2.D0+X5/(1.D0-X5/12.D0))*XX(1,I)-XX(1,I-1)             STBF-167
      IF (XX(1,I+1)*XX(1,I).LT.0.D0) IN3=IN3+2                          STBF-168
   20 CONTINUE                                                          STBF-169
      IF (VA(1).LT.0.) GO TO 29                                         STBF-170
      A1=XX(1,KR)                                                       STBF-171
      A2=XX(1,KR+1)                                                     STBF-172
      XX(1,KN+2)=1.D0                                                   STBF-173
      XX(1,KN+1)=A3*(1.D0-(X4*XX(3,KN)+XX(2,KN))/12.D0)/(1.D0-(X4*XX(3,KSTBF-174
     1N+1)+XX(2,KN+1))/12.D0)                                           STBF-175
C BACKWARDS INTEGRATION                                                 STBF-176
      DO 21 I=KR,KN                                                     STBF-177
      J=KN+KR-I                                                         STBF-178
      X5=X4*XX(3,J)+XX(2,J)                                             STBF-179
      IF (XX(1,J+1)*XX(1,J+2).LT.0.D0) IN3=IN3+2                        STBF-180
   21 XX(1,J)=(2.D0+X5/(1.D0-X5/12.D0))*XX(1,J+1)-XX(1,J+2)             STBF-181
      Y3=A1/A2-XX(1,KR)/XX(1,KR+1)                                      STBF-182
      IF (Y3.GT.0.D0) IN3=IN3+1                                         STBF-183
      IF (LO(51)) WRITE (MW,1003) IST,IN3,X3,Y3                         STBF-184
      IF (DABS(Y3).LE.1.D-10.OR.X2.EQ.X3.OR.X1.EQ.X3) GO TO 27          STBF-185
      IF (IN2.NE.0) GO TO 24                                            STBF-186
      IF (IN3.GT.IK) GO TO 22                                           STBF-187
      Y1=Y3                                                             STBF-188
      X1=X3                                                             STBF-189
      IN1=IN3                                                           STBF-190
      A4=X1                                                             STBF-191
      GO TO 18                                                          STBF-192
   22 IF (LO(51)) WRITE (MW,1004) IK,IN1,IN3                            STBF-193
      X2=X3                                                             STBF-194
      IN2=IN3                                                           STBF-195
      Y2=Y3                                                             STBF-196
C INTERPOLATION OF SOLUTION                                             STBF-197
   23 X3=X1+0.5D0*(X2-X1)                                               STBF-198
      IF (IN2.EQ.IN1+1) X3=(Y1*X2-Y2*X1)/(Y1-Y2)                        STBF-199
      GO TO 19                                                          STBF-200
   24 X4=(Y1*Y2*X3*(X2-X1)+Y1*Y3*X2*(X1-X3)+Y2*Y3*X1*(X3-X2))/(Y1*Y2*(X2STBF-201
     1-X1)+Y1*Y3*(X1-X3)+Y2*Y3*(X3-X2))                                 STBF-202
      IF (IN2.GT.IN1+2) X4=1.D20                                        STBF-203
      IF (IN3.GT.IK) GO TO 25                                           STBF-204
      X1=X3                                                             STBF-205
      Y1=Y3                                                             STBF-206
      IN1=IN3                                                           STBF-207
      GO TO 26                                                          STBF-208
   25 X2=X3                                                             STBF-209
      Y2=Y3                                                             STBF-210
      IN2=IN3                                                           STBF-211
   26 IF ((X1-X4)*(X4-X2).LT.0.D0) GO TO 23                             STBF-212
      X3=X4                                                             STBF-213
      GO TO 19                                                          STBF-214
   27 Y3=A1/XX(1,KR)                                                    STBF-215
      K=KN+2                                                            STBF-216
      DO 28 I=KR,K                                                      STBF-217
   28 XX(1,I)=Y3*XX(1,I)                                                STBF-218
   29 DO 30 I=1,KN                                                      STBF-219
   30 XX(1,I)=(XX(1,I)+10.D0*XX(1,I+1)+XX(1,I+2))/12.D0                 STBF-220
      IF (VA(1).GT.0.D0) GO TO 31                                       STBF-221
      X1=XX(1,KN)*Z4-XX(1,KN-2)*Z2                                      STBF-222
      X2=XX(1,KN-2)*Z1-XX(1,KN)*Z3                                      STBF-223
      X3=Z1*Z4-Z2*Z3                                                    STBF-224
      Y2=DATAN2(X2,X1)                                                  STBF-225
      Y1=(X1**2+X2**2)/X3**2                                            STBF-226
      X3=VA(5)                                                          STBF-227
      GO TO 33                                                          STBF-228
   31 Y1=0.D0                                                           STBF-229
      DO 32 I=1,KN                                                      STBF-230
   32 Y1=Y1+XX(1,I)**2                                                  STBF-231
      Y1=Y1-0.5D0*XX(1,KN)**2                                           STBF-232
      Y2=Y4*XX(1,KN)**2/RR                                              STBF-233
      Y3=IREB                                                           STBF-234
      Y1=Y1*H/Y3+Y2                                                     STBF-235
      Y2=100.D0*Y2/Y1                                                   STBF-236
   33 Y1=1.D0/DSQRT(Y1)                                                 STBF-237
      IS=0                                                              STBF-238
      RR=0.D0                                                           STBF-239
      DO 34 I=IREB,KN,IREB                                              STBF-240
      IS=IS+1                                                           STBF-241
      RR=RR+H                                                           STBF-242
   34 V(IS)=Y1*XX(1,I)/RR                                               STBF-243
      IF (LO(51)) WRITE (MW,1005) X3,Y2,(IS,V(IS),IS=1,ISM)             STBF-244
      RETURN                                                            STBF-245
 1000 FORMAT (//' WOODS-SAXON POTENTIAL EIGENFUNCTION WITH N =',I2,3X,'LSTBF-246
     1 =',I3,3X,'2*S =',I2,3X,'2*J =',I3,3X,I4,' STEPS (DIVIDED BY',I3,'STBF-247
     2) MATCHING AT THE',I4,'TH'/' **** BINDING ENERGY',F12.6,' MEV ****STBF-248
     3',4X,'TOTAL MASS',F12.6,4X,'PARTICLE MASS',F12.6,4X,'PRODUCT OF CHSTBF-249
     4ARGES',F8.2/' SEARCH ON DEPTH OF REAL POTENTIAL FROM',F12.6,' WITHSTBF-250
     5 REDUCED RADIUS',F10.6,' FERMI AND DIFFUSENESS',F10.6,' FERMI'/' SSTBF-251
     6PIN-ORBIT POTENTIAL DEPTH:',F12.6,' MEV RADIUS:',F10.6,' FERMI DIFSTBF-252
     7FUSENESS:',F9.6,' FERMI COULOMB RADIUS:',F10.6,' FERMI')          STBF-253
 1001 FORMAT (10X,'NO CONVERGENCE ON MATCHING VALUES')                  STBF-254
 1002 FORMAT (10X,'MATCHING VALUE OBTAINED FOR I=',I3,' WITH',I6,' POINTSTBF-255
     1S')                                                               STBF-256
 1003 FORMAT (2X,I3,5X,'2*N (+0/1) =',I3,5X,'V =',D20.10,5X,'D =',D20.10STBF-257
     1)                                                                 STBF-258
 1004 FORMAT (' INTERPOLATION FOR 2*N =',I4,5X,'BETWEEN',I4,' AND',I4)  STBF-259
 1005 FORMAT (//' DEPTH USED',D20.10,' MEV',15X,'TAIL PERCENTAGE OR PHASSTBF-260
     1E-SHIFT',F10.5//(6(I6,D15.6)))                                    STBF-261
      END                                                               STBF-262
C 01/01/04                                                      ECIS03  DERI-000
      SUBROUTINE DERI(X,Y,H,N,LT)                                       DERI-001
C NUMERICAL DERIVATION OF THE FUNCTION Y KNOWN IN N POINTS WITH STEP H  DERI-002
C IT NEEDS AT LEAST 7 POINTS AND RETURNS IN X THE VALUE OF -D(Y)/DR     DERI-003
C IF LT IS FALSE, THE RESULT IS DIVIDED BY R.                           DERI-004
C***********************************************************************DERI-005
      IMPLICIT REAL*8 (A-H,O-Z)                                         DERI-006
      LOGICAL LT                                                        DERI-007
      COMMON /INOUT/ MR,MW,MS                                           DERI-008
      DIMENSION X(7),Y(7)                                               DERI-009
      N3=N-3                                                            DERI-010
      IF (N3.GE.4) GO TO 1                                              DERI-011
      WRITE (MW,1000) N                                                 DERI-012
      STOP                                                              DERI-013
    1 HH=-H*60.D0                                                       DERI-014
      X(1)=(-147.D0*Y(1)+360.D0*Y(2)-450.D0*Y(3)+400.D0*Y(4)-225.D0*Y(5)DERI-015
     1+72.D0*Y(6)-10.D0*Y(7))/HH                                        DERI-016
      X(2)=(-10.D0*Y(1)-77.D0*Y(2)+150.D0*Y(3)-100.D0*Y(4)+50.D0*Y(5)-15DERI-017
     1.D0*Y(6)+2.D0*Y(7))/HH                                            DERI-018
      X(3)=(2.D0*Y(1)-24.D0*Y(2)-35.D0*Y(3)+80.D0*Y(4)-30.D0*Y(5)+8.D0*YDERI-019
     1(6)-Y(7))/HH                                                      DERI-020
      DO 2 I=4,N3                                                       DERI-021
    2 X(I)=(45.D0*(Y(I+1)-Y(I-1))-9.D0*(Y(I+2)-Y(I-2))+Y(I+3)-Y(I-3))/HHDERI-022
      X(N-2)=(Y(N-6)-8.D0*Y(N-5)+30.D0*Y(N-4)-80.D0*Y(N3)+35.D0*Y(N-2)+2DERI-023
     14.D0*Y(N-1)-2.D0*Y(N))/HH                                         DERI-024
      X(N-1)=(-2.D0*Y(N-6)+15.D0*Y(N-5)-50.D0*Y(N-4)+100.D0*Y(N3)-150.D0DERI-025
     1*Y(N-2)+77.D0*Y(N-1)+10.D0*Y(N))/HH                               DERI-026
      X(N)=(10.D0*Y(N-6)-72.D0*Y(N-5)+225.D0*Y(N-4)-400.D0*Y(N3)+450.D0*DERI-027
     1Y(N-2)-360.D0*Y(N-1)+147.D0*Y(N))/HH                              DERI-028
      IF (LT) RETURN                                                    DERI-029
      R=0.D0                                                            DERI-030
      DO 3 I=1,N                                                        DERI-031
      R=R+H                                                             DERI-032
    3 X(I)=X(I)/R                                                       DERI-033
      RETURN                                                            DERI-034
 1000 FORMAT (5X,I5,' POINTS INSUFFICIENT FOR DERIVATION IN DERI'//10X,'DERI-035
     1 ...  STOP  ...')                                                 DERI-036
      END                                                               DERI-037
C 01/01/04                                                      ECIS03  INTP-000
      SUBROUTINE INTP(I,ISM,H,G,RR,V,LX)                                INTP-001
C INTERPOLATION ROUTINE FOR RADIAL FORM FACTORS                         INTP-002
C INPUT VARIABLES: I:   NUMBER OF POINTS WHERE THE FUNCTION IS GIVEN    INTP-003
C                  ISM: NUMBER OF POINTS WHERE THE FUNCTION IS NEEDED   INTP-004
C                  H:   STEP SIZE                                       INTP-005
C                  G:   NORMALISATION FACTOR                            INTP-006
C                  RR(2,1): RADII (J=1) AND VALUES (J=2) TO INTERPOLATE INTP-007
C                  LX:  ADDRESS OF RESULT IN V                          INTP-008
C OUTPUT VARIABLE: V(I,LX) FOR I=1 TO ISM                               INTP-009
C***********************************************************************INTP-010
      IMPLICIT REAL*8 (A-H,O-Z)                                         INTP-011
      DIMENSION RR(2,1),V(ISM,1)                                        INTP-012
      IF (I.LT.4) GO TO 4                                               INTP-013
      IR=1                                                              INTP-014
      DO 3 IS=1,ISM                                                     INTP-015
      X0=IS*H                                                           INTP-016
    1 IF (X0.LT.RR(1,IR+2)) GO TO 2                                     INTP-017
      IF (IR.GE.I-3) GO TO 2                                            INTP-018
      IR=IR+1                                                           INTP-019
      GO TO 1                                                           INTP-020
    2 X1=(X0-RR(1,IR+1))*(X0-RR(1,IR+2))*(X0-RR(1,IR+3))/((RR(1,IR)-RR(1INTP-021
     1,IR+1))*(RR(1,IR)-RR(1,IR+2))*(RR(1,IR)-RR(1,IR+3)))              INTP-022
      X2=(X0-RR(1,IR))*(X0-RR(1,IR+2))*(X0-RR(1,IR+3))/((RR(1,IR+1)-RR(1INTP-023
     1,IR))*(RR(1,IR+1)-RR(1,IR+2))*(RR(1,IR+1)-RR(1,IR+3)))            INTP-024
      X3=(X0-RR(1,IR))*(X0-RR(1,IR+1))*(X0-RR(1,IR+3))/((RR(1,IR+2)-RR(1INTP-025
     1,IR))*(RR(1,IR+2)-RR(1,IR+1))*(RR(1,IR+2)-RR(1,IR+3)))            INTP-026
      X4=(X0-RR(1,IR))*(X0-RR(1,IR+1))*(X0-RR(1,IR+2))/((RR(1,IR+3)-RR(1INTP-027
     1,IR))*(RR(1,IR+3)-RR(1,IR+1))*(RR(1,IR+3)-RR(1,IR+2)))            INTP-028
    3 V(IS,LX)=G*(X1*RR(2,IR)+X2*RR(2,IR+1)+X3*RR(2,IR+2)+X4*RR(2,IR+3))INTP-029
      RETURN                                                            INTP-030
    4 DO 5 IS=1,ISM                                                     INTP-031
    5 V(IS,LX)=0.D0                                                     INTP-032
      RETURN                                                            INTP-033
      END                                                               INTP-034
C 01/01/04                                                      ECIS03  FOLD-000
      SUBROUTINE FOLD(V1,V2,VAL,NFO,IP,ISM,IST,ACONV,IVY,INVZ,FR,PGN,XGNFOLD-001
     1,WV,IZZ,LO)                                                       FOLD-002
C V1 ARE THE POTENTIALS AND FORM FACTORS, UNFOLDED AS INPUT, FOLDED AS  FOLD-003
C OUTPUT. V2 ARE WORKING FIELDS IN WHICH 0. ARE STORED BEFORE THE CALL. FOLD-004
C INPUT VARIABLES: VAL(I,J),I=1,3,J=1,NFO  FOLDING PARAMETERS           FOLD-005
C                  NFO:    NUMBER OF SETS OF FOLDING PARAMETERS         FOLD-006
C                  IP:     POTENTIAL TO BE FOLDED IF LO(7)=.FALSE.      FOLD-007
C                  ISM:    NUMBER OF POINTS                             FOLD-008
C                  IST:    MAXIMUM NUMBER OF STEPS FOR FOLDING FUNCTIONSFOLD-009
C                  ACONV:  VALUE BELOW WHICH THE FOLDING IS NEGLECTED   FOLD-010
C                  IVY:    TABLE OF FORM FACTORS (SEE REDM)             FOLD-011
C                  INVZ:   NUMBER OF TRANSITION FORM FACTORS TO FOLD    FOLD-012
C                  PGN,XGN: 20-POINT GAUSS LEGENDRE INTEGRATION         FOLD-013
C                  WV:     MASSES, WAVE NUMBERS, STEP SIZE (SEE CALX)   FOLD-014
C                  LO(I):  LOGICAL CONTROLS (SEE CALC)                  FOLD-015
C IN COMMON /POTE1/  SEE REDM                                           FOLD-016
C WORKING FIELDS:  FR(I,J),I=1,IST: GAUSSIAN OR SAXON FOLDING FUNCTIONS FOLD-017
C          FOR J=1,IMT.  FOR YUKAWA OR HULTHEN FOLDING: H-FUNCTIONS FOR FOLD-018
C          J=1,IMT, J-FUNCTIONS FOR J=IMT+1,2*IMT; THESE FUNCTIONS ARE  FOLD-019
C          MULTIPLIED BY R*R*EXP(+\-R/VA)                               FOLD-020
C          INTEGRALS WITH H AND J-FUNCTIONS FOR J=2*IMT+1,2*IMT+2       FOLD-021
C                  IZZ(I,*) ADDRESS OF FOLDING PARAMETERS BELOW FOR I=1 FOLD-022
C                           TYPE OF FORM FACTOR FROM 1 TO 16 FOR I=2    FOLD-023
C                           ANGULAR MOMENTUM FOR I=3                    FOLD-024
C                           ADDRESS OF STEP SIZE FOR I=4                FOLD-025
C                    (THIS PART IS AN INPUT WITH EXTERNAL FORM FACTORS) FOLD-026
C FOLDING CONVENTIONS : VAL(*,1) REAL POTENTIAL, VAL(*,2) IMAGINARY ONE FOLD-027
C IF VAL(1,*)=0  NO FOLDING                      VAL(*,3) COULOMB       FOLD-028
C IF VAL(3,*)=0 GAUSSIAN FORM FACTOR WITH RANGE VAL(2,*)                FOLD-029
C IF VAL(2,*)=0 HULTHEN FORM FACTOR WITH RANGES VAL(1,*) AND VAL(3,*)   FOLD-030
C IF VAL(2,*)=VAL(3,*)=0 YUKAWA FORM FACTOR WITH RANGE VAL(1,*)         FOLD-031
C ALL OTHER CASES  SAXON FORM FACTOR WITH RADIUS VAL(2,*) AND DIFFUSE-  FOLD-032
C NESS VAL(3,*) - ALL FORM FACTORS ARE NORMALISED - VAL(1,*) IS USED    FOLD-033
C ONLY FOR HULTHEN FORM FACTOR                                          FOLD-034
C THE DIFFUSENESS OF A SAXON FORM FACTOR AND THE RANGES OF A HULTHEN OR FOLD-035
C YUKAWA FORM FACTOR ARE POSITIVE BY TAKING THE ABSOLUTE VALUE          FOLD-036
C***********************************************************************FOLD-037
      IMPLICIT REAL*8 (A-H,O-Z)                                         FOLD-038
      DIMENSION V1(ISM,1),V2(ISM,1),FR(IST,2),VAL(3,3),IVY(7,1),IZZ(4,1)FOLD-039
     1,MM(3),XGN(10),PGN(10),WV(18,1)                                   FOLD-040
      LOGICAL LO(250)                                                   FOLD-041
      COMMON /POTE1/ ITX(16),IMAX,INTC,INLS,INVC,INVD,ITXM              FOLD-042
      COMMON /INOUT/ MR,MW,MS                                           FOLD-043
      DATA PIM2 /6.2831853070D0/                                        FOLD-044
      AC=-DLOG(ACONV)                                                   FOLD-045
      JSL=ISM+1                                                         FOLD-046
      ITXN=ITXM                                                         FOLD-047
      IF (LO(100)) ITXN=ITXN-ITX(2)                                     FOLD-048
      IF (LO(7)) GO TO 9                                                FOLD-049
C INITIALISATION OF THE TABLE IZZ WHEN POTENTIALS ARE NOT EXTERNAL      FOLD-050
      MM(1)=1                                                           FOLD-051
      MM(2)=2                                                           FOLD-052
      MM(3)=3                                                           FOLD-053
      IF ((VAL(1,2).EQ.VAL(1,1)).AND.(VAL(2,2).EQ.VAL(2,1)).AND.(VAL(3,2FOLD-054
     1).EQ.VAL(3,1))) MM(2)=1                                           FOLD-055
      IF ((VAL(1,3).EQ.VAL(1,2)).AND.(VAL(2,3).EQ.VAL(2,2)).AND.(VAL(3,3FOLD-056
     1).EQ.VAL(3,2))) MM(3)=2                                           FOLD-057
      IF ((VAL(1,3).EQ.VAL(1,1)).AND.(VAL(2,3).EQ.VAL(2,1)).AND.(VAL(3,3FOLD-058
     1).EQ.VAL(3,1))) MM(3)=1                                           FOLD-059
      NFOX=MAX0(MM(1),MM(2),MM(3))                                      FOLD-060
      DO 2 J=1,ITXN                                                     FOLD-061
      DO 1 I=1,3                                                        FOLD-062
    1 IZZ(I,J)=0                                                        FOLD-063
    2 IZZ(4,J)=IP                                                       FOLD-064
      DO 3 I=1,8                                                        FOLD-065
      IF ((I.EQ.5).AND.LO(201)) GO TO 3                                 FOLD-066
      IF ((I.EQ.6).AND.LO(202)) GO TO 3                                 FOLD-067
      IF ((I.EQ.8).AND.LO(203)) GO TO 3                                 FOLD-068
      M=MOD(I+1,2)+1                                                    FOLD-069
      IF (I.GT.6) M=3                                                   FOLD-070
      N=I                                                               FOLD-071
      IF (LO(200)) N=1+ITX(I)                                           FOLD-072
      IZZ(1,N)=-MM(M)                                                   FOLD-073
      IZZ(2,N)=I                                                        FOLD-074
    3 CONTINUE                                                          FOLD-075
      IF (INVZ.EQ.0) GO TO 9                                            FOLD-076
      IJ=ITX(3)-ITX(7)                                                  FOLD-077
      DO 8 J=1,INTC                                                     FOLD-078
      DO 7 I=1,8                                                        FOLD-079
      M=MOD(I+1,2)+1                                                    FOLD-080
      N=I+IJ                                                            FOLD-081
      IF (I.GT.6) GO TO 5                                               FOLD-082
      IF (I.GT.4) GO TO 4                                               FOLD-083
      IF ((M.EQ.2).AND.LO(112)) GO TO 7                                 FOLD-084
      IF (LO(200)) N=J+ITX(I+8)                                         FOLD-085
      GO TO 6                                                           FOLD-086
    4 IF (LO(108+I)) GO TO 7                                            FOLD-087
      IF (LO(200)) N=IVY(3,J)+ITX(I+8)                                  FOLD-088
      GO TO 6                                                           FOLD-089
    5 IF (LO(55+8*I)) GO TO 7                                           FOLD-090
      IF (LO(200)) N=ITX(I+8)+IVY(I-3,J)                                FOLD-091
      M=3                                                               FOLD-092
    6 IZZ(1,N)=-MM(M)                                                   FOLD-093
      IZZ(2,N)=I+8                                                      FOLD-094
      IZZ(3,N)=IVY(7,J)                                                 FOLD-095
    7 CONTINUE                                                          FOLD-096
    8 IJ=IJ+11                                                          FOLD-097
C CLASSIFICATION OF STEP SIZES                                          FOLD-098
    9 DO 11 I=2,ITXN                                                    FOLD-099
      IF (IZZ(1,I).EQ.0) GO TO 11                                       FOLD-100
      DO 10 J=2,I                                                       FOLD-101
      IF (IZZ(1,J-1).NE.IZZ(1,I)) GO TO 10                              FOLD-102
      IF (IZZ(4,J-1).EQ.IZZ(4,I)) GO TO 10                              FOLD-103
      I1=IZZ(4,I)                                                       FOLD-104
      J1=IZZ(4,J-1)                                                     FOLD-105
      IF (WV(11,I1).NE.WV(11,J1)) GO TO 10                              FOLD-106
      IZZ(4,I)=J1                                                       FOLD-107
      GO TO 11                                                          FOLD-108
   10 CONTINUE                                                          FOLD-109
   11 CONTINUE                                                          FOLD-110
      NFOT=-NFO                                                         FOLD-111
C FOR EXTERNAL POTENTIALS, ADD 1 FOR DUMMY FOLDING                      FOLD-112
      IF (LO(7)) NFOX=NFO+1                                             FOLD-113
C LOOP ON FOLDINGS                                                      FOLD-114
      DO 64 II=1,NFOX                                                   FOLD-115
      IF (II.GT.NFO) GO TO 54                                           FOLD-116
      IC=0                                                              FOLD-117
      DO 12 J=1,3                                                       FOLD-118
      IF (VAL(J,II).NE.0.D0) IC=IC+2**(3-J)                             FOLD-119
      IF (VAL(J,II).GE.0.D0) GO TO 12                                   FOLD-120
      WRITE (MW,1000) VAL(J,II),J,II                                    FOLD-121
      VAL(J,II)=-VAL(J,II)                                              FOLD-122
   12 CONTINUE                                                          FOLD-123
      IF (IC.LT.4) GO TO 64                                             FOLD-124
      IH=0                                                              FOLD-125
   13 IMT=1                                                             FOLD-126
      JH=0                                                              FOLD-127
      KH=0                                                              FOLD-128
C SEPARATION OF FOLDINGS WITH RESPECT TO THE STEP SIZE                  FOLD-129
      DO 14 J=1,ITXN                                                    FOLD-130
      IF (IZZ(1,J)+II.NE.0) GO TO 14                                    FOLD-131
      IF (IZZ(4,J).LT.IH) GO TO 14                                      FOLD-132
      KH=KH+1                                                           FOLD-133
      IF ((JH.NE.0).AND.(IZZ(4,J).GT.IH)) GO TO 14                      FOLD-134
      JH=JH+1                                                           FOLD-135
      IH=IZZ(4,J)                                                       FOLD-136
      IZZ(1,J)=NFOT-1                                                   FOLD-137
      IMT=MAX0(IMT,IZZ(3,J)+1)                                          FOLD-138
   14 CONTINUE                                                          FOLD-139
      IF (JH.EQ.0) GO TO 64                                             FOLD-140
      NFOT=NFOT-1                                                       FOLD-141
      H=WV(11,IH)                                                       FOLD-142
C COMPUTATION OF THE STRENGTH OF THE FOLDING FUNCTIONS                  FOLD-143
      CN=1.D0                                                           FOLD-144
      IF (IC.GT.5) GO TO 15                                             FOLD-145
C YUKAWA FOLDING                                                        FOLD-146
      IF (VAL(3,II).EQ.VAL(1,II)) VAL(3,II)=.99D0*VAL(1,II)             FOLD-147
      CN=H/(2.D0*PIM2*(VAL(1,II)**2-VAL(3,II)**2))                      FOLD-148
      JST=ISM+5                                                         FOLD-149
      GO TO 18                                                          FOLD-150
   15 IF (IC.EQ.7) GO TO 16                                             FOLD-151
C GAUSSIAN FOLDING                                                      FOLD-152
      ISY=1+IDINT(VAL(2,II)*DSQRT(AC)/H)                                FOLD-153
      CN=H/(0.5D0*PIM2*DSQRT(0.5D0*PIM2)*VAL(2,II)**3)                  FOLD-154
      GO TO 18                                                          FOLD-155
C SAXON FOLDING                                                         FOLD-156
   16 IS=1+IDINT((VAL(2,II)+10.D0*VAL(3,II))/H)                         FOLD-157
      ISY=1+IDINT((VAL(2,II)+2.D0*VAL(3,II)*AC)/H)                      FOLD-158
      CN=0.D0                                                           FOLD-159
      DO 17 K=1,IS                                                      FOLD-160
      RR=H*K                                                            FOLD-161
   17 CN=CN+RR*RR/(1.D0+DEXP((RR-VAL(2,II))/VAL(3,II)))                 FOLD-162
      CN=.5D0/(PIM2*CN)                                                 FOLD-163
C GAUSSIAN OR SAXON FOLDING                                             FOLD-164
   18 AN=DFLOAT(IMT-1)                                                  FOLD-165
      IF (IC.LT.6) GO TO 36                                             FOLD-166
C DO LOOP ON THE POINTS OF POTENTIALS                                   FOLD-167
      FS=0.D0                                                           FOLD-168
      IS=0                                                              FOLD-169
   19 IS=IS+1                                                           FOLD-170
      JST=IS+ISY                                                        FOLD-171
      JSM=MIN0(ISM,JST)                                                 FOLD-172
      R=VAL(2,II)                                                       FOLD-173
      A=VAL(3,II)                                                       FOLD-174
      X1=H*DFLOAT(IS)                                                   FOLD-175
      IF (JST.LE.ISM) GO TO 20                                          FOLD-176
      JSZ=MAX0(ISM,1+IS+2*IDINT((R+2.D0*A)/H))                          FOLD-177
      JST=MIN0(JST,JSZ+4)                                               FOLD-178
      ISZ=JSZ-1                                                         FOLD-179
      ISX=JST-JSZ                                                       FOLD-180
C LOOP ON THE POINTS OF THE FOLDING FUNCTION FOR WHICH THE SYMMETRY     FOLD-181
C BETWEEN THE TWO ARGUMENTS IS USED                                     FOLD-182
   20 JI=IS-1                                                           FOLD-183
   21 JI=JI+1                                                           FOLD-184
      A3=H*JI                                                           FOLD-185
      A4=2.D0*X1*A3                                                     FOLD-186
      Y=X1*X1+A3*A3                                                     FOLD-187
      IF (A.EQ.0.D0) GO TO 25                                           FOLD-188
C SAXON FOLDING FUNCTION  BY A 20-POINTS GAUSSIAN INTEGRATION           FOLD-189
C THE SAXON FORM FACTOR ITSELF IS THE VARIABLE                          FOLD-190
      DO 22 K=1,IMT                                                     FOLD-191
   22 FR(JI,K)=0.D0                                                     FOLD-192
      R1=DMIN1(70.D0,(DABS(X1-A3)-R)/A)                                 FOLD-193
      R2=DMIN1(70.D0,(X1+A3-R)/A)                                       FOLD-194
      E1=1.D0/(1.D0+DEXP(R1))                                           FOLD-195
      E2=1.D0/(1.D0+DEXP(R2))                                           FOLD-196
      EM=0.5D0*(E1+E2)                                                  FOLD-197
      ES=0.5D0*(E1-E2)                                                  FOLD-198
      P1=ES*2.D0*A*PIM2/A4                                              FOLD-199
      DO 24 IJ=1,10                                                     FOLD-200
      PP=P1*PGN(IJ)                                                     FOLD-201
      E1=1.D0/(EM+ES*XGN(IJ))-1.D0                                      FOLD-202
      E2=1.D0/(EM-ES*XGN(IJ))-1.D0                                      FOLD-203
      U1=R+A*DLOG(E1)                                                   FOLD-204
      U2=R+A*DLOG(E2)                                                   FOLD-205
      R1=PP*U1*(1.D0+E1)/E1                                             FOLD-206
      R2=PP*U2*(1.D0+E2)/E2                                             FOLD-207
      FR(JI,1)=FR(JI,1)+R1+R2                                           FOLD-208
      IF (IMT.EQ.1) GO TO 24                                            FOLD-209
      E1=(Y-U1*U1)/A4                                                   FOLD-210
      E2=(Y-U2*U2)/A4                                                   FOLD-211
      R3=R1*E1                                                          FOLD-212
      R4=R2*E2                                                          FOLD-213
      FR(JI,2)=FR(JI,2)+R3+R4                                           FOLD-214
      IF (IMT.EQ.2) GO TO 24                                            FOLD-215
C RECURRENCE FOR LEGENDRE POLYNOMIALS                                   FOLD-216
      DO 23 K=3,IMT                                                     FOLD-217
      R5=R1                                                             FOLD-218
      R6=R2                                                             FOLD-219
      R1=R3                                                             FOLD-220
      R2=R4                                                             FOLD-221
      R3=(DFLOAT(2*K-3)*R1*E1-R5*DFLOAT(K-2))/DFLOAT(K-1)               FOLD-222
      R4=(DFLOAT(2*K-3)*R2*E2-R6*DFLOAT(K-2))/DFLOAT(K-1)               FOLD-223
   23 FR(JI,K)=FR(JI,K)+R3+R4                                           FOLD-224
   24 CONTINUE                                                          FOLD-225
      GO TO 29                                                          FOLD-226
C GAUSSIAN FOLDING FUNCTION                                             FOLD-227
   25 A4=A4/(R*R)                                                       FOLD-228
      Y=Y/(R*R)                                                         FOLD-229
      B1=DEXP(A4-Y)                                                     FOLD-230
      B2=0.D0                                                           FOLD-231
      IF (A4+Y.LT.50.) B2=DEXP(-A4-Y)                                   FOLD-232
      DN=1.D0/A4                                                        FOLD-233
   26 FR(JI,1)=PIM2*(B1-B2)*DN                                          FOLD-234
      IF (IMT.EQ.1) GO TO 29                                            FOLD-235
C DOWNWARDS RECURRENCE FOR SMALL ARGUMENTS                              FOLD-236
      Q=DMAX1(DSQRT(10.5D0*A4)-0.5D0,AN)                                FOLD-237
      K=IDINT(Q+3.D0+21.D0*A4/(Q+Q+1.D0))                               FOLD-238
      A1=0.D0                                                           FOLD-239
   27 A1=A4/(2.D0*K+1.D0+A4*A1)                                         FOLD-240
      IF (K.LT.IMT) FR(JI,K+1)=A1                                       FOLD-241
      K=K-1                                                             FOLD-242
      IF (K.GT.0) GO TO 27                                              FOLD-243
      DO 28 K=2,IMT                                                     FOLD-244
   28 FR(JI,K)=FR(JI,K)*FR(JI,K-1)                                      FOLD-245
   29 IF (IC.LT.6) GO TO 39                                             FOLD-246
      IF (JI.LT.JST) GO TO 21                                           FOLD-247
      IK=1                                                              FOLD-248
      GO TO 46                                                          FOLD-249
   30 IK=2                                                              FOLD-250
      IF (JST.LE.ISM) GO TO 46                                          FOLD-251
C FORM THE COULOMB POTENTIALS,ASYMPTOTIC CORRECTION                     FOLD-252
C THE FORM FACTORS ARE ASSUMED TO DECREASE AS (R)**(-L-1)               FOLD-253
      A1=DFLOAT(ISM)                                                    FOLD-254
      DO 32 I=JSL,JST                                                   FOLD-255
      Y=A1/DFLOAT(I)                                                    FOLD-256
      A4=DFLOAT(ISM*I)*H**2                                             FOLD-257
      DO 31 J=1,IMT                                                     FOLD-258
      FR(I,J)=FR(I,J)*A4                                                FOLD-259
   31 A4=A4*Y                                                           FOLD-260
   32 CONTINUE                                                          FOLD-261
C CORRECTION OF THE LAST VALUE BY SUM BETWEEN ISM AND JSZ AND A PADE    FOLD-262
C APPROXIMATION LIMITED TO FOUR TERMS (BETWEEN JSZ+1 AND JST)           FOLD-263
      DO 35 I=1,IMT                                                     FOLD-264
      A1=0.D0                                                           FOLD-265
      A2=0.D0                                                           FOLD-266
      A3=0.D0                                                           FOLD-267
      A4=0.D0                                                           FOLD-268
      Y=0.D0                                                            FOLD-269
      IF (JSL.GT.ISZ) GO TO 34                                          FOLD-270
      DO 33 J=JSL,ISZ                                                   FOLD-271
   33 Y=Y+FR(J,I)                                                       FOLD-272
   34 IF (ISX.EQ.0.OR.FR(JSZ,I).EQ.0.D0) GO TO 35                       FOLD-273
      A1=-FR(JSZ+1,I)/FR(JSZ,I)                                         FOLD-274
      IF (ISX.EQ.1.OR.FR(JSZ+1,I).EQ.0.D0) GO TO 35                     FOLD-275
      B1=FR(JSZ+2,I)/FR(JSZ+1,I)                                        FOLD-276
      A2=-A1-B1                                                         FOLD-277
      IF (ISX.EQ.2.OR.A2.EQ.0.D0) GO TO 35                              FOLD-278
      B2=FR(JSZ+3,I)/FR(JSZ+1,I)                                        FOLD-279
      C1=-(B1*A1+B2)/A2                                                 FOLD-280
      A3=B1-C1                                                          FOLD-281
      IF (ISX.EQ.3.OR.A3.EQ.0.) GO TO 35                                FOLD-282
      A4=C1-(B2+(B2*A1+FR(JSZ+4,I)/FR(JSZ+1,I))/A2)/A3                  FOLD-283
   35 FR(JSL,I)=Y+FR(JSZ,I)/(1.D0+A1/(1.D0+A2/(1.D0+A3/(1.D0+A4))))     FOLD-284
      GO TO 46                                                          FOLD-285
C LOOP ON THE TWO YUKAWA FORM FACTORS                                   FOLD-286
   36 FS=1.D0                                                           FOLD-287
      VA=VAL(1,II)                                                      FOLD-288
   37 IF (VA.EQ.0.D0) GO TO 53                                          FOLD-289
C COMPUTATION OF BESSEL FUNCTIONS MULTIPLIED BY R*R AND EXP(R/VA)       FOLD-290
      JI=0                                                              FOLD-291
      B1=1.D0                                                           FOLD-292
      B2=1.D0                                                           FOLD-293
      B4=DEXP(-H/VA)                                                    FOLD-294
   38 JI=JI+1                                                           FOLD-295
      A2=H*DFLOAT(JI)                                                   FOLD-296
      A4=A2/VA                                                          FOLD-297
      B2=B2*B4**2                                                       FOLD-298
      FR(JI,IMT+1)=FS*A2                                                FOLD-299
      DN=A2*VA                                                          FOLD-300
      GO TO 26                                                          FOLD-301
C UPWARDS RECURRENCE FOR THE IRREGULAR FUNCTION                         FOLD-302
   39 FR(JI,IMT+2)=FR(JI,IMT+1)*(1.D0+1.D0/A4)                          FOLD-303
      IF (IMT.EQ.2) GO TO 41                                            FOLD-304
      DO 40 K=3,IMT                                                     FOLD-305
   40 FR(JI,K+IMT)=FR(JI,K-2+IMT)+FR(JI,K-1+IMT)*(2*K-3)/A4             FOLD-306
   41 IF (JI.LT.JST) GO TO 38                                           FOLD-307
C CORRECTIONS FOR SINGULAR FIRST DERIVATIVE (YUKAWA FORM FACTOR)        FOLD-308
      VR=-FS*H*PIM2/6.D0                                                FOLD-309
      IK=1                                                              FOLD-310
      GO TO 46                                                          FOLD-311
C CORRECTION FOR COULOMB POTENTIALS                                     FOLD-312
   42 A6=DFLOAT(ISM)                                                    FOLD-313
      DO 44 I=JSL,JST                                                   FOLD-314
      Y=A6/DFLOAT(I)                                                    FOLD-315
      A1=Y                                                              FOLD-316
      DO 43 J=1,IMT                                                     FOLD-317
      FR(I,J+IMT)=FR(I,J+IMT)*A1                                        FOLD-318
   43 A1=A1*Y                                                           FOLD-319
   44 CONTINUE                                                          FOLD-320
C ESTIMATION OF THE LAST VALUE BY A PADE OF FOUR TERMS                  FOLD-321
      DO 45 I=1,IMT                                                     FOLD-322
      A6=-FR(JSL+1,I+IMT)/FR(JSL,I+IMT)                                 FOLD-323
      IF (I.EQ.1) GO TO 45                                              FOLD-324
      B2=FR(JSL+2,I+IMT)/FR(JSL+1,I+IMT)                                FOLD-325
      A2=-A6-B2                                                         FOLD-326
      B3=FR(JSL+3,I+IMT)/FR(JSL+1,I+IMT)                                FOLD-327
      C1=-(B2*A6+B3)/A2                                                 FOLD-328
      A4=B2-C1                                                          FOLD-329
      A1=C1-(B3+(B3*A6+FR(JSL+4,I+IMT)/FR(JSL+1,I+IMT))/A2)/A4          FOLD-330
      A6=A6/(1.D0+B4*A2/(1.D0+B4*A4/(1.D0+B4*A1)))                      FOLD-331
   45 FR(JSL,I+IMT)=FR(JSL,I+IMT)/(1.D0+B4*A6)                          FOLD-332
      IK=2                                                              FOLD-333
C FOLDING OF THE POTENTIALS                                             FOLD-334
   46 DO 51 K=1,ITXN                                                    FOLD-335
      IF (IZZ(1,K).NE.NFOT) GO TO 51                                    FOLD-336
      IF ((IK.EQ.1).AND.MOD(IZZ(2,K),8).GT.6) GO TO 51                  FOLD-337
      IF ((IK.EQ.2).AND.MOD(IZZ(2,K),8).LE.6) GO TO 51                  FOLD-338
      N=IZZ(3,K)+1                                                      FOLD-339
      IF (IC.LT.6) GO TO 48                                             FOLD-340
      DO 47 JS=IS,JSM                                                   FOLD-341
      B1=(H*DFLOAT(JS))**2                                              FOLD-342
      IF (JS.EQ.IS) GO TO 47                                            FOLD-343
      V2(JS,K)=V2(JS,K)+V1(IS,K)*FR(JS,N)*X1**2                         FOLD-344
   47 V2(IS,K)=V2(IS,K)+V1(JS,K)*FR(JS,N)*B1                            FOLD-345
      IF ((IK.EQ.2).AND.(JST.GT.ISM)) V2(IS,K)=V2(IS,K)+V1(ISM,K)*FR(JSLFOLD-346
     1,N)                                                               FOLD-347
      GO TO 51                                                          FOLD-348
   48 B2=0.D0                                                           FOLD-349
      B3=FR(JSL,N+IMT)*V1(ISM,K)                                        FOLD-350
      DO 49 IS=1,ISM                                                    FOLD-351
      JS=JSL-IS                                                         FOLD-352
      FR(JS,2*IMT+1)=B3*B4                                              FOLD-353
      B2=B2*B4+FR(IS,N)*V1(IS,K)                                        FOLD-354
      B3=B3*B4+FR(JS,N+IMT)*V1(JS,K)                                    FOLD-355
   49 FR(IS,2*IMT+2)=B2                                                 FOLD-356
      DO 50 IS=1,ISM                                                    FOLD-357
      RR=(IS*H)**2                                                      FOLD-358
   50 V2(IS,K)=V2(IS,K)+(FR(IS,N)*FR(IS,2*IMT+1)+FR(IS,N+IMT)*FR(IS,2*IMFOLD-359
     1T+2))/RR+V1(IS,K)*VR                                              FOLD-360
   51 CONTINUE                                                          FOLD-361
      IF (IC.LT.6) GO TO 52                                             FOLD-362
      IF (IK.EQ.1) GO TO 30                                             FOLD-363
      IF (IS.LT.ISM) GO TO 19                                           FOLD-364
   52 IF (IK.EQ.1) GO TO 42                                             FOLD-365
   53 FS=-FS                                                            FOLD-366
      IF (FS.GE.0.D0) GO TO 55                                          FOLD-367
      VA=VAL(3,II)                                                      FOLD-368
      GO TO 37                                                          FOLD-369
C TRANSFER OF POTENTIALS FROM WORKING SPACE                             FOLD-370
   54 NFOT=1                                                            FOLD-371
   55 DO 63 J=1,ITXN                                                    FOLD-372
      IF (IZZ(1,J).NE.NFOT) GO TO 63                                    FOLD-373
      IF (NFOT.EQ.1) GO TO 57                                           FOLD-374
      DO 56 IS=1,ISM                                                    FOLD-375
   56 V1(IS,J)=CN*V2(IS,J)                                              FOLD-376
      GO TO 58                                                          FOLD-377
C STEP SIZE FOR DUMMY FOLDING                                           FOLD-378
   57 IH=IZZ(4,J)                                                       FOLD-379
      H=WV(11,IH)                                                       FOLD-380
   58 IF (LO(200).OR.(IZZ(2,J).GT.8)) GO TO 59                          FOLD-381
      CALL DERI(V1(1,J+8),V1(1,J),H,ISM,.TRUE.)                         FOLD-382
      CALL DERI(V1(1,J+16),V1(1,J+8),H,ISM,.TRUE.)                      FOLD-383
      GO TO 63                                                          FOLD-384
   59 IX=MOD(IZZ(2,J)-1,8)+1                                            FOLD-385
      IF ((IX.LT.5).OR.(IX.EQ.7)) GO TO 63                              FOLD-386
      IML=0                                                             FOLD-387
      INL=0                                                             FOLD-388
      IF (LO(100)) GO TO 60                                             FOLD-389
      IF (IZZ(2,J).LE.8) GO TO 61                                       FOLD-390
      INL=INLS                                                          FOLD-391
      IF (IX.EQ.8) INL=INVD                                             FOLD-392
      GO TO 61                                                          FOLD-393
   60 IF (IZZ(2,J).LE.8) GO TO 63                                       FOLD-394
      IML=4                                                             FOLD-395
      IF (IX.EQ.8) IML=3                                                FOLD-396
   61 CALL DERI(V2(1,J),V1(1,J),H,ISM,LO(100))                          FOLD-397
      DO 62 IS=1,ISM                                                    FOLD-398
      IF (INL.EQ.0) GO TO 62                                            FOLD-399
      AY=DFLOAT(IS)*H                                                   FOLD-400
      V1(IS,J+INL)=-V1(IS,J)/AY**2                                      FOLD-401
   62 V1(IS,J+IML)=V2(IS,J)                                             FOLD-402
   63 CONTINUE                                                          FOLD-403
      IF (KH.NE.JH.AND.NFOT.NE.1) GO TO 13                              FOLD-404
   64 CONTINUE                                                          FOLD-405
      RETURN                                                            FOLD-406
 1000 FORMAT (' NEGATIVE VALUE',D15.5,4X,'OF FOLDING PARAMETER VAL(',I3,FOLD-407
     1',',I3,')')                                                       FOLD-408
      END                                                               FOLD-409
C 01/01/04                                                      ECIS03  TLNC-000
      SUBROUTINE TLNC(HH,IPIX,WVX,TL,ISM,X,FF,LM,NN,DD,IL,V,VCO,LO)     TLNC-001
C TRANSMISSION COEFFICIENTS OF UNCOUPLED STATES FOR COMPOUND NUCLEUS    TLNC-002
C INPUT VARIABLES: HH:        STEP SIZE FOR THE GROUND STATE            TLNC-003
C                  IPIX,WVX:  IPI AND WV FOR THIS STATE (SEE CALX)      TLNC-004
C                  ISM:       NUMBER OF STEPS                           TLNC-005
C                  LM:        NUMBER OF COULOMB FUNCTIONS NEEDED        TLNC-006
C                  IL:        LENGTH OF WORKING SPACE                   TLNC-007
C                  V:         POTENTIALS REAL AND IMAGINARY             TLNC-008
C                  VCO:       STRENGTH OF LONG RANGE COULOMB CORRECTION TLNC-009
C                  LO:        LOGICAL CONTROLS                          TLNC-010
C OUTPUT VARIABLES:TL:     TRANSMISSION COEFFICIENTS OF UNCOUPLED LEVELSTLNC-011
C WORKING SPACE:   X:      FOR THE INTEGRATION                          TLNC-012
C                  FF:     FOR COULOMB FUNCTIONS AND CORRECTIONS        TLNC-013
C                  NN:     NEEDED BY SUBROUTINE FCOU                    TLNC-014
C                  DD:     NEEDED BY SUBROUTINE CORI                    TLNC-015
C***********************************************************************TLNC-016
      IMPLICIT REAL*8 (A-H,O-Z)                                         TLNC-017
      LOGICAL LO(250)                                                   TLNC-018
      DIMENSION IPIX(10),V(ISM,4),NN(1),VCO(2),WVX(18),X(2,2),FF(LM,6),DTLNC-019
     1D(200),FAM(7),B(4),G(4),AV(5),TL(1)                               TLNC-020
      IF (WVX(3).LE.0.D0) RETURN                                        TLNC-021
      J=1                                                               TLNC-022
      CALL FCOU(IPIX(10),WVX(5),ISM*WVX(11)*WVX(9),FF,FF(1,2),FF(1,3),FFTLNC-023
     1(1,4),NN,FF(1,5))                                                 TLNC-024
      JC=0                                                              TLNC-025
      IF (LO(203).AND.LO(144)) GO TO 1                                  TLNC-026
      JC=5                                                              TLNC-027
      CALL CORI(WVX(5),WVX(5),WVX(9),WVX(9),ISM*WVX(11),DD,FF(1,5),FF(1,TLNC-028
     15),FF,FF,DD(200),LM,LM,IL,LM,FF(1,6))                             TLNC-029
    1 L=IPIX(10)+1                                                      TLNC-030
      IF (L.LE.0) RETURN                                                TLNC-031
      IJ=IPIX(2)                                                        TLNC-032
      DO 17 LJ=1,L                                                      TLNC-033
      DO 16 JL=1,IJ                                                     TLNC-034
      JJ=2*(LJ+JL)-IJ-3                                                 TLNC-035
      J=J+1                                                             TLNC-036
      TL(J)=0.D0                                                        TLNC-037
      IF (JJ.LT.IJ+1-2*LJ) GO TO 16                                     TLNC-038
      L1=LJ-1                                                           TLNC-039
      FAM(5)=DFLOAT(LJ*(LJ-1))                                          TLNC-040
      FAM(6)=.25D0*DFLOAT(JJ*(JJ+2)-IJ*IJ+1)-FAM(5)                     TLNC-041
C VALUES OF LONG RANGE TAILS OF CENTRAL POTENTIALS                      TLNC-042
      F2=VCO(1)**2                                                      TLNC-043
      F3=VCO(2)*FAM(6)                                                  TLNC-044
      IF (WVX(3).GT.0.D0.AND.JC.GT.0) GO TO 2                           TLNC-045
      F2=0.D0                                                           TLNC-046
      F3=0.D0                                                           TLNC-047
C INTEGRATION REGION - SET UP OF POTENTIAL IN FIVE POINTS FOR           TLNC-048
C TRANSFORMATION OF MATCHING VALUES                                     TLNC-049
    2 B1=HH*HH/48.D0                                                    TLNC-050
      C1=DFLOAT(ISM-1)*HH                                               TLNC-051
      A1=WVX(9)**2                                                      TLNC-052
      IF (WVX(3).LT.0.D0) A1=-A1                                        TLNC-053
      DO 3 K=1,5                                                        TLNC-054
      AV(K)=B1*(2.D0*WVX(9)*WVX(5)/C1-A1+(FAM(5)-F2-F3/C1)/C1**2)       TLNC-055
    3 C1=C1+0.5D0*HH                                                    TLNC-056
C COMPUTATION OF COULOMB CORRECTIONS                                    TLNC-057
      DO 4 K=1,4                                                        TLNC-058
    4 B(K)=FF(L1+1,K)                                                   TLNC-059
      IF (JC.LE.0) GO TO 8                                              TLNC-060
      IF (WVX(5).NE.0.D0) GO TO 5                                       TLNC-061
      F2=F3*WVX(9)                                                      TLNC-062
      F3=0.D0                                                           TLNC-063
    5 DO 6 K=1,4                                                        TLNC-064
    6 G(K)=-FF(L1+1,K+JC)*F2                                            TLNC-065
      IF (F3.EQ.0.D0) GO TO 7                                           TLNC-066
      B1=2.D0*WVX(5)*DFLOAT(L1*(L1+1))                                  TLNC-067
      B2=DFLOAT(L1+1)**2+WVX(5)**2                                      TLNC-068
      C1=-(DFLOAT(2*L1+1)*B2+2*WVX(5)**2)/B1                            TLNC-069
      C2=DFLOAT(2*L1+3)*B2/B1                                           TLNC-070
      A1=DFLOAT(ISM)*WVX(11)*WVX(9)                                     TLNC-071
      D1=(B2+DFLOAT(L1+1)*WVX(5)/A1)/A1/B1                              TLNC-072
      D2=-WVX(5)*DSQRT(B2)/B1/A1                                        TLNC-073
      A1=B2/B1/A1                                                       TLNC-074
      A3=F3*WVX(9)                                                      TLNC-075
      G(1)=G(1)-A3*(C1*FF(L1+1,1+JC)+C2*FF(L1+2,1+JC)-D1*FF(L1+1,1)**   TLNC-076
     12-D2*2.D0*FF(L1+1,1)*FF(L1+2,1)-A1*FF(L1+2,1)**2)                 TLNC-077
      G(2)=G(2)-A3*(C1*FF(L1+1,2+JC)+C2*FF(L1+2,2+JC)-D1*FF(L1+1,1)*F   TLNC-078
     1F(L1+1,3)-D2*(FF(L1+1,1)*FF(L1+2,3)+FF(L1+2,1)*FF(L1+1            TLNC-079
     2,3))-A1*FF(L1+2,1)*FF(L1+2,3))                                    TLNC-080
      G(4)=G(4)-A3*(C1*FF(L1+1,4+JC)+C2*FF(L1+2,4+JC)-D1*FF(L1+1,3)**   TLNC-081
     12-D2*2.D0*FF(L1+1,3)*FF(L1+2,3)-A1*FF(L1+2,3)**2)                 TLNC-082
    7 A4=1.D0+(G(1)*G(4)-G(2)**2)                                       TLNC-083
      G(3)=B(1)                                                         TLNC-084
      B(1)=(B(1)*(1.D0-G(2))+G(1)*B(3))/A4                              TLNC-085
      B(3)=(-G(3)*G(4)+(1.D0+G(2))*B(3))/A4                             TLNC-086
      G(3)=B(2)                                                         TLNC-087
      B(2)=(B(2)*(1.D0-G(2))+G(1)*B(4))/A4                              TLNC-088
      B(4)=(-G(3)*G(4)+(1.D0+G(2))*B(4))/A4                             TLNC-089
    8 A1=(1.D0-AV(2))/(2.D0+10.D0*AV(2))                                TLNC-090
      B1=(1.D0-AV(4))/(2.D0+10.D0*AV(4))                                TLNC-091
      A2=A1*(1.D0-AV(1))/(1.D0-4.D0*AV(1))                              TLNC-092
      B2=B1*(1.D0-AV(5))/(1.D0-4.D0*AV(5))                              TLNC-093
      C1=(2.D0+10.D0*AV(3))-(1.D0-AV(3))*(A1+B1)                        TLNC-094
      A1=(16.D0-144.D0*AV(2))/(2.D0+10.D0*AV(2))                        TLNC-095
      B1=(16.D0-144.D0*AV(4))/(2.D0+10.D0*AV(4))                        TLNC-096
      C2=(7.D0+A1*(1.D0-AV(1)))/(1.D0-4.D0*AV(1))                       TLNC-097
      D2=(7.D0+B1*(1.D0-AV(5)))/(1.D0-4.D0*AV(5))                       TLNC-098
      D1=(B1-A1)*(1.D0-AV(3))                                           TLNC-099
      A1=A2*D2+B2*C2                                                    TLNC-100
      B1=(C1*D2+D1*B2)/A1                                               TLNC-101
      B2=30.D0*HH*B2*WVX(9)/A1                                          TLNC-102
      FAM(1)=B1*B(1)-B2*B(2)                                            TLNC-103
      FAM(3)=B1*B(3)-B2*B(4)                                            TLNC-104
      B1=(C2*C1-A2*D1)/A1                                               TLNC-105
      A2=-30.D0*HH*A2*WVX(9)/A1                                         TLNC-106
      FAM(2)=B1*B(1)-A2*B(2)                                            TLNC-107
      FAM(4)=B1*B(3)-A2*B(4)                                            TLNC-108
      FAM(7)=WVX(8)**2                                                  TLNC-109
      FAM(6)=2.D0*FAM(7)*FAM(6)                                         TLNC-110
C COMPUTATION OF THE REGULAR SOLUTION                                   TLNC-111
      DO 9 IS=1,ISM                                                     TLNC-112
      A1=IS*IS                                                          TLNC-113
      X(1,IS+2)=WVX(10)-FAM(5)/A1+FAM(7)*V(IS,1)                        TLNC-114
      X(2,IS+2)=FAM(7)*V(IS,2)                                          TLNC-115
      IF (LO(229)) X(1,IS+2)=X(1,IS+2)+FAM(6)*V(IS,3)                   TLNC-116
      IF (LO(230)) X(2,IS+2)=X(2,IS+2)+FAM(6)*V(IS,4)                   TLNC-117
    9 CONTINUE                                                          TLNC-118
      IF (LO(27)) GO TO 11                                              TLNC-119
C MODIFIED NUMEROV METHOD                                               TLNC-120
      DO 10 IS=1,ISM                                                    TLNC-121
      A1=X(1,IS+2)**2-X(2,IS+2)**2                                      TLNC-122
      IF (LO(26)) A1=A1*(1.D0-X(1,IS+2)*.033333333333333D0)             TLNC-123
      X(2,IS+2)=X(2,IS+2)*(1.D0-X(1,IS+2)*.166666666666667D0)           TLNC-124
   10 X(1,IS+2)=X(1,IS+2)-A1*.083333333333333D0                         TLNC-125
      GO TO 13                                                          TLNC-126
C NUMEROV METHOD                                                        TLNC-127
   11 DO 12 IS=1,ISM                                                    TLNC-128
      A2=(12.D0+X(1,IS+2))**2+X(2,IS+2)**2                              TLNC-129
      A1=12.D0*(X(1,IS+2)*(12.D0+X(1,IS+2))+X(2,IS+2)**2)/A2            TLNC-130
      IF (LO(26)) A1=A1*(1.D0+X(1,IS+2)**2*.416666666666667D-2)         TLNC-131
      X(1,IS+2)=A1                                                      TLNC-132
   12 X(2,IS+2)=144.D0*X(2,IS+2)/A2                                     TLNC-133
   13 X(1,1)=0.D0                                                       TLNC-134
      X(2,1)=0.D0                                                       TLNC-135
      X(1,2)=1.D-15                                                     TLNC-136
      X(2,2)=0.D0                                                       TLNC-137
      DO 15 IS=1,ISM                                                    TLNC-138
      B1=X(1,IS+1)*X(1,IS+2)-X(2,IS+1)*X(2,IS+2)                        TLNC-139
      B2=X(2,IS+1)*X(1,IS+2)+X(1,IS+1)*X(2,IS+2)                        TLNC-140
      X(1,IS+2)=X(1,IS+1)+X(1,IS+1)-X(1,IS)-B1                          TLNC-141
      X(2,IS+2)=X(2,IS+1)+X(2,IS+1)-X(2,IS)-B2                          TLNC-142
      IF (DABS(X(1,IS+2)).LT.1.D15) GO TO 15                            TLNC-143
C RENORMALISATION OF LARGE FUNCTION VALUES                              TLNC-144
      JS=2*IS+4                                                         TLNC-145
      DO 14 I=3,JS                                                      TLNC-146
   14 X(I,1)=X(I,1)*1.D-30                                              TLNC-147
   15 CONTINUE                                                          TLNC-148
C END OF INTEGRATION                                                    TLNC-149
C MATCHING                                                              TLNC-150
      A1=X(1,ISM)*FAM(4)-FAM(3)*X(1,ISM+2)                              TLNC-151
      A2=X(2,ISM)*FAM(4)-FAM(3)*X(2,ISM+2)                              TLNC-152
      B1=X(1,ISM)*FAM(2)-FAM(1)*X(1,ISM+2)                              TLNC-153
      B2=X(2,ISM)*FAM(2)-FAM(1)*X(2,ISM+2)                              TLNC-154
      A2=A2+B1                                                          TLNC-155
      A1=A1-B2                                                          TLNC-156
      A3=A1*A1+A2*A2                                                    TLNC-157
      A1=-A1/A3                                                         TLNC-158
      A2=A2/A3                                                          TLNC-159
      FAM(7)=A1*B1-A2*B2                                                TLNC-160
      FAM(6)=B1*A2+B2*A1                                                TLNC-161
      TL(J)=DMAX1(0.D0,4.D0*(FAM(6)-FAM(7)**2-FAM(6)**2))               TLNC-162
   16 CONTINUE                                                          TLNC-163
   17 CONTINUE                                                          TLNC-164
      RETURN                                                            TLNC-165
      END                                                               TLNC-166
C 01/01/04                                                      ECIS03  QUAN-000
      SUBROUTINE QUAN(NCOLL,WV,IPI,NIV,IQ,TQ,IVQ,IVZ,MC,NAT,AT,IT,NVI,KAQUAN-001
     1B,KBC,AA,FAC,NFA,NMAX,ID,LO)                                      QUAN-002
C INPUT VARIABLES: NCOLL:   NUMBER OF COUPLED NUCLEAR STATES            QUAN-003
C                  WV:      SEE CALX                                    QUAN-004
C                  IPI:     PROJECTILE AND TARGET MULTIPLICITY, PARITY  QUAN-005
C                           AND MAXIMUM ANGULAR MOMENTUM.  SEE CALX     QUAN-006
C                  NIV(I1,I2,1/2): FIRST/LAST ADDRESS IN THE TABLE OF   QUAN-007
C                           REDUCED NUCLEAR MATRIX ELEMENTS. SEE REDM   QUAN-008
C                  IQ,TQ:   TABLE OF REDUCED NUCLEAR MATRIX ELEMENTS    QUAN-009
C                  IVQ(I):  TABLE OF MULTIPOLES.   SEE REDM             QUAN-010
C                  IVZ(I):  TABLE OF FORM FACTORS.   SEE REDM           QUAN-011
C                  KAB:     MAXIMUM NUMBER OF COUPLED CHANNELS          QUAN-012
C                  KBC:     MAXIMUM NUMBER OF SOLUTIONS                 QUAN-013
C                  FAC:     TABLE OF LOGARITHMS OF FACTORIALS           QUAN-014
C                  NFA:     LENGTH OF FAC                               QUAN-015
C                  NMAX:  AVAILABLE LENGTH OF AT/NAT(LESS 100 FOR 9J)   QUAN-016
C                  ID:      FIRST DIMENSION OF TABLES NAT AND AT        QUAN-017
C                  LO(I):   LOGICAL CONTROLS. SEE COMMENTS IN CALC      QUAN-018
C IN COMMON /NCOMP/  PARAMETRISATION OF THE DEFORMED SPIN-ORBIT         QUAN-019
C IN COMMON /POTE2/ITY(5):  NUMBER OF DIAGONAL POTENTIALS               QUAN-020
C                  INTV:    NUMBER OF NON SPIN-ORBIT FORM FACTORS       QUAN-021
C                  INSL:    NUMBER OF SPIN-ORBIT FORM FACTORS           QUAN-022
C IN COMMON /NOEQU/JPI:     CHANNEL PARITY (0/1)                        QUAN-023
C                  NAJ:     TWICE CHANNEL SPIN                          QUAN-024
C OUTPUT VARIABLES:MC(IC,1): NUCLEAR STATE NUMBERS, IC = 1,NC           QUAN-025
C                  MC(IC,2): ORBITAL MOMENTUM                           QUAN-026
C                  MC(IC,3): TWICE ORBITAL SPIN                         QUAN-027
C                  MC(IC,4): REFERENCE TO POTENTIAL OR COPY             QUAN-028
C                  MC(IC,5): LC*(LC+1)                                  QUAN-029
C                  MC(IC,6): EIGENVALUE OF L.S                          QUAN-030
C                  AT(ID,I),NAT(ID,I) IN EQUIVALENCE BY CALL            QUAN-031
C                       TABLE OF COUPLING COEFFICIENTS FOR I=1,IT       QUAN-032
C                    NAT(1,I)  ADDRESS OF THE FORM FACTOR, NEGATIVE FOR QUAN-033
C                        A COMPLEX TERM                                 QUAN-034
C                    AT(2,I)  GEOMETRICAL COEFFICIENT                   QUAN-035
C                    AT(3,I)  IDEM FOR SMALL COMPONENTS (DIRAC EQUATION)QUAN-036
C                  IT: NUMBER OF NON ZERO COUPLING COEFFICIENTS         QUAN-037
C                  NVI(I1,I2,1-3): ADDRESS IN THE TABLE AT(I), ANALOGOUSQUAN-038
C                    TO THE NIV ADDRESSES: NVI(I1,I2,1) TO NVI(I1,I2,2) QUAN-039
C                    FOR THE NON DERIVATIVES COUPLINGS, NVI(I1,I2,2)+1  QUAN-040
C                    TO NVI(I1,I2,3)  FOR THE DERIVATIVE COUPLINGS      QUAN-041
C FOR IDENTICAL PARTICLE AND TARGET, MC RESULTS ARE IN MC(*,*+7)        QUAN-042
C    NAT AND AT RESULTS ARE AFTER THE USUAL ONES, NVI RESULTS ARE IN    QUAN-043
C    NVI(*,*,*+3), NC AND NCIN ARE DIFFERENT FROM NIC AND NCI.          QUAN-044
C    THE COEFFICIENTS OF THE SYMMETRISATION ARE IN AA.                  QUAN-045
C IN COMMON /NOEQU/NIC:  NUMBER OF EQUATIONS AT THE CHANNEL SPIN        QUAN-046
C                  NCI:  NUMBER OF SOLUTIONS                            QUAN-047
C                  NC:   NUMBER OF EQUATIONS FOR IDENTICAL PARTICLES    QUAN-048
C                  NCIN: NUMBER OF SOLUTIONS FOR IDENTICAL PARTICLES    QUAN-049
C                  NIN:  NUMBER OF COUPLING POTENTIALS                  QUAN-050
C WORKING SPACE:   AT(I,J):  FOR J>IT, WORKING SPACE FOR DJ9J           QUAN-051
C***********************************************************************QUAN-052
      IMPLICIT REAL*8 (A-H,O-Z)                                         QUAN-053
      LOGICAL LO(250),LLO                                               QUAN-054
      DIMENSION NIV(NCOLL,NCOLL,3),NVI(KAB,KAB,6),NAT(2*ID,4),AT(ID,4),MQUAN-055
     1C(KAB,12),IVZ(4,1),IPI(11,1),IVQ(3,1),IQ(6,1),TQ(3,1),FAC(1),WV(18QUAN-056
     2,1),AA(KBC,1)                                                     QUAN-057
      CHARACTER*1 IP(2)                                                 QUAN-058
      COMMON /NCOMP/ NSP(12),ACN(2),AZ1,AZ2,AZ3,AZ4,AZ5,AZ6,BZ(12)      QUAN-059
      COMMON /POTE2/ ITY(8),INVT,INTV,INSL,NPX                          QUAN-060
      COMMON /NOEQU/ NCXN,NIC,NCI,NC,NCIN,NIN,JPI,IPJ,R1(2),NAJ         QUAN-061
      COMMON /INOUT/ MR,MW,MS                                           QUAN-062
      DATA IP /1H+,1H-/                                                 QUAN-063
C FIND QUANTUM NUMBER OF COUPLED CHANNELS                               QUAN-064
      NC=0                                                              QUAN-065
      AJ=.5D0*DFLOAT(NAJ)                                               QUAN-066
      DO 6 I=1,NCOLL                                                    QUAN-067
      NJ1=NAJ-IPI(3,I)+1                                                QUAN-068
      NJ2=IABS(NJ1)                                                     QUAN-069
      NJ=IPI(3,I)                                                       QUAN-070
      NL=IPI(2,I)                                                       QUAN-071
      DO 5 J=1,NJ                                                       QUAN-072
      L1=(NAJ-NJ-NL)/2+J                                                QUAN-073
      L2=IABS(L1)                                                       QUAN-074
      DO 4 K=1,NL                                                       QUAN-075
      IF (MOD(L1+IPI(1,I)+JPI,2).NE.0) GO TO 3                          QUAN-076
      IF ((L1.LT.L2).OR.(NJ1.LT.NJ2).OR.(L1.GT.IPI(10,I))) GO TO 3      QUAN-077
      NC=NC+1                                                           QUAN-078
      MC(NC,4)=IPI(11,I)                                                QUAN-079
      IF (LO(228)) GO TO 2                                              QUAN-080
      IF (LO(100)) MC(NC,4)=I                                           QUAN-081
      DO 1 M=NC,KAB                                                     QUAN-082
      IF (MC(M,1).NE.I) GO TO 1                                         QUAN-083
      IF (MC(M,2).NE.L1) GO TO 1                                        QUAN-084
      IF (MC(M,3).NE.NJ1) GO TO 1                                       QUAN-085
      MC(NC,4)=-M                                                       QUAN-086
      GO TO 2                                                           QUAN-087
    1 CONTINUE                                                          QUAN-088
    2 MC(NC,1)=I                                                        QUAN-089
      MC(NC,2)=L1                                                       QUAN-090
      MC(NC,3)=NJ1                                                      QUAN-091
      MC(NC,5)=MC(NC,2)*(MC(NC,2)+1)                                    QUAN-092
      MC(NC,6)=((NJ1-IPI(2,I)+1)*(NJ1+IPI(2,I)+1))/4-MC(NC,5)           QUAN-093
    3 L1=L1+1                                                           QUAN-094
    4 CONTINUE                                                          QUAN-095
    5 NJ1=NJ1+2                                                         QUAN-096
      IF (I.NE.1) GO TO 6                                               QUAN-097
      NCIN=NC                                                           QUAN-098
      IF (NCIN.EQ.0) RETURN                                             QUAN-099
    6 CONTINUE                                                          QUAN-100
      IF (LO(158)) GO TO 8                                              QUAN-101
      WRITE (MW,1000) AJ,IP(JPI+1),NC,NCIN                              QUAN-102
      DO 7 J=1,NC                                                       QUAN-103
      SJ=0.5D0*DFLOAT(MC(J,3))                                          QUAN-104
    7 WRITE (MW,1001) J,MC(J,1),MC(J,2),SJ,MC(J,4),MC(J,5),MC(J,6)      QUAN-105
C COMPUTATION OF COUPLING COEFFICIENTS FOR THE FORM FACTORS             QUAN-106
C WHEN THE SPIN-ORBIT IS DEFORMED,THERE IS NO SYMMETRY, THE TOTAL       QUAN-107
C TABLE IS CALCULATED. WITH NO SPIN-ORBIT DEFORMATION,ONLY ONE HALF IS  QUAN-108
C CALCULATED. LO(210) RETURNS .TRUE. IF THEY ARE DERIVATIVE COUPLINGS   QUAN-109
    8 LO(210)=.FALSE.                                                   QUAN-110
      IT=0                                                              QUAN-111
      NIN=0                                                             QUAN-112
      INVZ=INTV+ITY(5)                                                  QUAN-113
      DO 41 I1=1,NC                                                     QUAN-114
      J1=MC(I1,1)                                                       QUAN-115
      K1=IPI(11,J1)                                                     QUAN-116
      IF (LO(100)) K1=J1                                                QUAN-117
      IF (LO(227)) MC(I1,4)=K1                                          QUAN-118
      DO 40 I2=1,I1                                                     QUAN-119
      J2=MC(I2,1)                                                       QUAN-120
      A2=WV(8,J1)*WV(8,J2)                                              QUAN-121
      IT1=IT+1                                                          QUAN-122
      NVI(I2,I1,1)=IT1                                                  QUAN-123
      K1=NIV(J2,J1,1)                                                   QUAN-124
      K2=NIV(J2,J1,2)                                                   QUAN-125
      IF (K1.GT.K2) GO TO 32                                            QUAN-126
      IF (2*(K2-K1+3+IT).GT.NMAX) CALL MEMO('QUAN',NMAX,2*(K2-K1+3+IT),2QUAN-127
     1)                                                                 QUAN-128
      IL=2*MC(I2,2)                                                     QUAN-129
      ILP=2*MC(I1,2)                                                    QUAN-130
      ISJ=MC(I2,3)                                                      QUAN-131
      ISJP=MC(I1,3)                                                     QUAN-132
      IAI=IPI(3,J2)-1                                                   QUAN-133
      IAIP=IPI(3,J1)-1                                                  QUAN-134
      IS=IPI(2,J2)-1                                                    QUAN-135
      ISP=IPI(2,J1)-1                                                   QUAN-136
      DO 22 K=K1,K2                                                     QUAN-137
      NI=IQ(2,K)                                                        QUAN-138
C COEFFICIENT OF A CENTRAL MULTIPOLE WITH ANGULAR MOMENTUM IQ=IVQ(1,NI) QUAN-139
C TRANSFER OF SPIN IS=IVQ(2,NI)/2 AND OF TOTAL MOMENTUM IJ=IVQ(3,NI)/2  QUAN-140
C NOTING THE SPIN S,THE ORBITAL ANGULAR MOMENTUM L,THE TOTAL SPIN OF THEQUAN-141
C PARTICLE J,THE SPIN OF THE TARGET AI,THE EIGENVALUE OF L.S G......    QUAN-142
C AND "K"=SQRT(2*K+1)   THE MOST GENERAL EXPRESSION OF (I2||IQ||I1) IS  QUAN-143
C  (-)**(AJ+AI2+1+J1+(L2+IQ-L1)/2)*"L1"*"L2"*"J1"*"J2"*"IQ"*"IJ"*       QUAN-144
C CGS(IQ,L2,L1)*C6J(J1,IJ,J2,AI2,AJ,AI1)*C9J(L2,L1,IQ,S2,S1,IS,J2,J1,IJ)QUAN-145
C IN A MACROSCOPIC MODEL, IS=0 AND IJ=IQ, THE EXPRESSIONS USED ARE      QUAN-146
C  (-)**(AJ+AI2+1-S+(L1+L2+IQ)/2)*"L1"*"L2"*"J1"*"J2"*"IQ"*CGS(IQ,L2,L1)QUAN-147
C    *C6J(J1,IQ,J2,AI2,AJ,AI1)*C6J(L1,IQ,L2,J2,S,J1)                    QUAN-148
C FOR S=1/2 (-)**(AJ+AI2-J2+(L1-L2+IQ)/2)*"IQ"*CGS(IQ,J2,J1)            QUAN-149
C FOR S=0   (-)**(AJ+AI2+1+(L1+L2+IQ)/2)*"L1"*"L2"*"IQ"*CGS(IQ,L2,L1)*  QUAN-150
C           C6J(L1,IQ,L2,AI2,AJ,AI1)                                    QUAN-151
      IIQ=2*IVQ(1,NI)                                                   QUAN-152
      DO 16 IX=2,ID                                                     QUAN-153
      CX=0.D0                                                           QUAN-154
      CMATEL=0.D0                                                       QUAN-155
      IF ((IIQ.GT.IL+ILP).OR.(IIQ.LT.IABS(IL-ILP))) GO TO 13            QUAN-156
      FX=1.D0                                                           QUAN-157
      KK=MC(I1,2)+MC(I2,2)+IVQ(1,NI)                                    QUAN-158
      IIS=IVQ(2,NI)                                                     QUAN-159
      IF (IIS.LT.0) GO TO 11                                            QUAN-160
      IIJ=IVQ(3,NI)                                                     QUAN-161
      CMATEL=DJ6J(ISJ,IIJ,ISJP,IAIP,NAJ,IAI,FAC,NFA)                    QUAN-162
      A1=DFLOAT(IIJ+1)                                                  QUAN-163
      IF (IS.GT.1.OR.IIS.NE.0) GO TO 9                                  QUAN-164
      CMATEL=CMATEL*DCGS(IIJ,ISJP,ISJ,FAC,NFA)                          QUAN-165
      KK=KK+NAJ+IAIP                                                    QUAN-166
      IF (IS.EQ.1) KK=KK+2+IL-ISJP                                      QUAN-167
      IF (IS.NE.1) A1=A1*DfLOAT((ISJ+1)*(ISJP+1))                       QUAN-168
      GO TO 12                                                          QUAN-169
    9 A1=A1*DFLOAT((IL+1)*(ILP+1))                                      QUAN-170
      A1=A1*DFLOAT((ISJ+1)*(ISJP+1))                                    QUAN-171
      KK=(NAJ+IAIP-IS)+KK                                               QUAN-172
      CMATEL=CMATEL*DCGS(IIQ,ILP,IL,FAC,NFA)                            QUAN-173
      IF (IIS.NE.0) GO TO 10                                            QUAN-174
      FX=DJ6J(IL,ISJ,IS,ISJP,ILP,IIJ,FAC,NFA)                           QUAN-175
      GO TO 12                                                          QUAN-176
   10 CMATEL=CMATEL*DJ9J(IL,ILP,IIQ,IS,ISP,IIS,ISJ,ISJP,IIJ,AT(1,IT+1),1QUAN-177
     100)                                                               QUAN-178
      A1=A1*DFLOAT((IIQ+1)*(IIS+1))                                     QUAN-179
      KK=KK+ISJP+ILP+IS                                                 QUAN-180
      GO TO 12                                                          QUAN-181
C MAGNETIC COULOMB EXCITATION OF THE PARTICLE:                          QUAN-182
   11 IIJ=IIQ-2                                                         QUAN-183
      IF (IIQ.GT.IL+ILP+2.OR.IIQ.LT.IABS(IL-ILP)+2) GO TO 13            QUAN-184
      CMATEL=DJ6J(ISJ,ISJP,IIJ,ILP,IL,IS,FAC,NFA)*DJ6J(ISJ,ISJP,IIQ-2,IAQUAN-185
     1IP,IAI,NAJ,FAC,NFA)*DCGS(IIQ,ILP,IL,FAC,NFA)                      QUAN-186
      KK=KK+NAJ+IAIP-IS-2                                               QUAN-187
      A1=DFLOAT((IIQ+1)**3)*DFLOAT((ISJ+1)*(ISJP+1))*DFLOAT((IL+1)*(ILP+QUAN-188
     11))*DFLOAT((IL+ILP+IIQ+2)*(IL+ILP-IIJ))*(IL-ILP+IIQ)*(ILP-IL+IIQ)/QUAN-189
     2DFLOAT((IIQ-1)*IIJ)**2/16.D0                                      QUAN-190
   12 IF (MOD(KK,4).EQ.0) CMATEL=-CMATEL                                QUAN-191
      CMATEL=TQ(3,K)*CMATEL*DSQRT(A1)                                   QUAN-192
      CX=CMATEL*FX                                                      QUAN-193
   13 IF (IX.EQ.3) GO TO 14                                             QUAN-194
      IT=IT+1                                                           QUAN-195
      NAT(1,IT)=IQ(1,K)                                                 QUAN-196
   14 AT(IX,IT)=CX*A2                                                   QUAN-197
      IF (LO(200)) GO TO 17                                             QUAN-198
      IF (IX.EQ.3) GO TO 22                                             QUAN-199
      IF (IIQ.NE.IIJ) GO TO 15                                          QUAN-200
      AT(3,IT)=AT(2,IT)                                                 QUAN-201
      IF (IIS.NE.0) AT(3,IT)=-AT(3,IT)                                  QUAN-202
      GO TO 22                                                          QUAN-203
   15 IL=2*ISJ-IL                                                       QUAN-204
   16 ILP=2*ISJP-ILP                                                    QUAN-205
   17 NAT(1,IT)=NAT(1,IT)+ITY(5)                                        QUAN-206
      IF (LO(12)) NAT(1,IT)=-NAT(1,IT)                                  QUAN-207
      IF (IQ(3,K).EQ.0) GO TO 22                                        QUAN-208
C DEFORMED SPIN-ORBIT                                                   QUAN-209
C FORM FACTOR (1/R)(D/DR)V(R)         COEFFICIENT:  (I2||IQ||I1)*G1     QUAN-210
C PARAMETRISATION:  (I2||IQ||I1)*(AZ3*G1+AZ4*G2+AZ1)                    QUAN-211
      A=CX*(MC(I2,6)*AZ3+MC(I1,6)*AZ4+AZ1)                              QUAN-212
      IF (DABS(A).LT.1.D-10) GO TO 18                                   QUAN-213
      IT=IT+1                                                           QUAN-214
      NAT(1,IT)=IQ(3,K)+INVZ                                            QUAN-215
      IF (LO(14)) NAT(1,IT)=-NAT(1,IT)                                  QUAN-216
      AT(2,IT)=2.D0*A*A2                                                QUAN-217
C FORM FACTOR V(R)/R**2   COEFFICIENT: (I2||IQ||I1)*(S*(IQ*(IQ+1)-L1*(L1QUAN-218
C   +1)-L2*(L2+1)+G2*(1+G1)/(2*S))+XXX)                                 QUAN-219
C PARAMETRISATION:   (I2||IQ||I1)*AZ5*(S*(IQ*(IQ+1)*AZ2........         QUAN-220
C XXX IS -SQRT(F1*F2)*C6J(L1,J1,S-1,J2,L2,IQ)/(2*S*C6J(L1,J1,S,J2,L2,IQ)QUAN-221
C  WITH F=(L*L+L-(J-S)*(J-S+1))*((J+S)*(J+S+1)-L*L-L)                   QUAN-222
C  FOR S=1/2  XXX=0                                                     QUAN-223
C  FOR S=1  XXX=-4*L1*L2*(L1+1)*(L2+1)/IQ*IQ+IQ-L1*L1-L1-L2*L2-L2)      QUAN-224
C WHEN J1=L1 AND J2=L2 , ELSE  XXX=0                                    QUAN-225
   18 AZI=DFLOAT(IVQ(1,NI)*(IVQ(1,NI)+1))                               QUAN-226
      ASPI=DFLOAT(IS)                                                   QUAN-227
      SMATEL=(0.5D0*DFLOAT(IPI(2,J1)-1)*(AZ2*AZI-DFLOAT(MC(I1,5)+MC(I2,5QUAN-228
     1)))+DFLOAT(MC(I1,6))*(1.D0+DFLOAT(MC(I2,6))/ASPI))*FX             QUAN-229
      IF (IS-2) 21 , 19 , 20                                            QUAN-230
   19 IF (IL.NE.ISJ.OR.ILP.NE.ISJP) GO TO 21                            QUAN-231
      A1=AZI-MC(I1,5)-MC(I2,5)                                          QUAN-232
      IF (A1.EQ.0.) GO TO 20                                            QUAN-233
      SMATEL=SMATEL-4.D0*DFLOAT(MC(I1,5)*MC(I2,5))*FX/A1                QUAN-234
      GO TO 21                                                          QUAN-235
   20 G1=DFLOAT((MC(I1,3)-IPI(2,J1))/2)                                 QUAN-236
      G2=DFLOAT((MC(I1,3)+IPI(2,J1))/2)                                 QUAN-237
      F1=(DFLOAT(MC(I1,5))-G1*(G1+1.D0))*(G2*(G2+1.D0)-DFLOAT(MC(I1,5)))QUAN-238
      G1=DFLOAT((MC(I2,3)-IPI(2,J1))/2)                                 QUAN-239
      G2=DFLOAT((MC(I2,3)+IPI(2,J1))/2)                                 QUAN-240
      F2=(DFLOAT(MC(I2,5))-G1*(G1+1.D0))*(G2*(G2+1.D0)-DFLOAT(MC(I2,5)))QUAN-241
      F3=F1*F2                                                          QUAN-242
      IF (F3.GT.0.D0) SMATEL=SMATEL-DSQRT(F3)*DJ6J(IL,ISJ,IS-2,ISJP,ILP,QUAN-243
     1IIQ,FAC,NFA)/ASPI                                                 QUAN-244
   21 A=CMATEL*AZ5*SMATEL                                               QUAN-245
      IF (DABS(A).LT.1.D-10) GO TO 22                                   QUAN-246
      IT=IT+1                                                           QUAN-247
      NAT(1,IT)=IQ(3,K)+INVZ+INSL                                       QUAN-248
      IF (LO(14)) NAT(1,IT)=-NAT(1,IT)                                  QUAN-249
      AT(2,IT)=2.D0*A*A2                                                QUAN-250
   22 CONTINUE                                                          QUAN-251
      LLO=.FALSE.                                                       QUAN-252
   23 IF (IT-IT1) 32 , 27 , 24                                          QUAN-253
C  SUMMATION OF COEFFICIENTS RELATED TO THE SAME FORM FACTOR            QUAN-254
   24 IT2=IT-1                                                          QUAN-255
      DO 26 I=IT1,IT2                                                   QUAN-256
      DO 25 J=I,IT2                                                     QUAN-257
      IF (NAT(1,I).NE.NAT(1,J+1)) GO TO 25                              QUAN-258
      AT(2,I)=AT(2,I)+AT(2,J+1)                                         QUAN-259
      AT(2,J+1)=0.D0                                                    QUAN-260
      IF (LO(200)) GO TO 25                                             QUAN-261
      AT(3,I)=AT(3,I)+AT(3,J+1)                                         QUAN-262
      AT(3,J+1)=0.D0                                                    QUAN-263
   25 CONTINUE                                                          QUAN-264
   26 CONTINUE                                                          QUAN-265
C ELIMINATION OF TOO SMALL COEFFICIENTS                                 QUAN-266
   27 IT2=IT                                                            QUAN-267
      IT=IT1-1                                                          QUAN-268
      NMR=0                                                             QUAN-269
      NMI=0                                                             QUAN-270
      DO 28 I=IT1,IT2                                                   QUAN-271
      CX=DABS(AT(2,I))                                                  QUAN-272
      IF (LO(100)) CX=CX+DABS(AT(3,I))                                  QUAN-273
      IF (CX.LT.1.D-10) GO TO 28                                        QUAN-274
      IT=IT+1                                                           QUAN-275
      NAT(1,IT)=NAT(1,I)                                                QUAN-276
      AT(2,IT)=AT(2,I)                                                  QUAN-277
      IF (LO(100)) AT(3,IT)=AT(3,I)                                     QUAN-278
      NMR=NMR+1                                                         QUAN-279
      IF (NAT(1,IT).LT.0) NMI=NMI+1                                     QUAN-280
   28 CONTINUE                                                          QUAN-281
      IF (NMR.NE.0) NIN=NIN+1                                           QUAN-282
      IF (NMI.NE.0) NIN=NIN+1                                           QUAN-283
      IF (LLO) GO TO 36                                                 QUAN-284
      IF (LO(113).AND.LO(119)) GO TO 32                                 QUAN-285
      NVI(I2,I1,2)=IT                                                   QUAN-286
C COEFFICIENTS OF THE DERIVATIVE COUPLING                               QUAN-287
C FORM FACTOR  V(R)/R**2  COEFFICIENT: (I2||IQ||I1)*(G1-G2)             QUAN-288
C PARAMETRISATION: (I2||IQ||I1)*(G1-G2)*AZ6                             QUAN-289
      IT2=IT                                                            QUAN-290
      IF (LO(100)) GO TO 30                                             QUAN-291
      DO 29 I=IT1,IT2                                                   QUAN-292
      IF (IABS(NAT(1,I)).GT.INVZ) GO TO 29                              QUAN-293
      IJ=IABS(NAT(1,I))-ITY(5)                                          QUAN-294
      IF (IVZ(3,IJ).EQ.0) GO TO 29                                      QUAN-295
      A=AT(2,I)*DFLOAT(MC(I2,6)-MC(I1,6))*AZ6*2.D0                      QUAN-296
      IF (DABS(A).LT.1.D-10) GO TO 29                                   QUAN-297
      LO(210)=.TRUE.                                                    QUAN-298
      IT=IT+1                                                           QUAN-299
      NAT(1,IT)=IVZ(3,IJ)+INVZ+INSL                                     QUAN-300
      IF (LO(14)) NAT(1,IT)=-NAT(1,IT)                                  QUAN-301
      AT(2,IT)=A                                                        QUAN-302
   29 CONTINUE                                                          QUAN-303
      GO TO 33                                                          QUAN-304
   30 DO 31 I=IT1,IT2                                                   QUAN-305
      IJ=NAT(1,I)                                                       QUAN-306
      IF (IVZ(3,IJ).EQ.0) GO TO 31                                      QUAN-307
      LO(210)=.TRUE.                                                    QUAN-308
      IT=IT+1                                                           QUAN-309
      NAT(1,IT)=IVZ(3,IJ)+INTV                                          QUAN-310
      AT(2,IT)=AT(2,I)                                                  QUAN-311
      AT(3,IT)=AT(2,IT)*DFLOAT(MC(I2,6)-MC(I1,6))                       QUAN-312
   31 CONTINUE                                                          QUAN-313
      IF (IT.GT.IT2) NIN=NIN+1                                          QUAN-314
      GO TO 33                                                          QUAN-315
   32 NVI(I2,I1,2)=IT                                                   QUAN-316
   33 NVI(I2,I1,3)=IT                                                   QUAN-317
      IF (LO(100).OR.(NVI(I2,I1,3).EQ.NVI(I2,I1,2))) GO TO 38           QUAN-318
C COPY OF THE COEFFICIENTS AND CORRECTIONS IN ORDER TO OBTAIN           QUAN-319
C AN HERMITIAN INTERACTION                                              QUAN-320
      K1=NVI(I2,I1,1)                                                   QUAN-321
      K2=NVI(I2,I1,2)                                                   QUAN-322
      IT1=IT+1                                                          QUAN-323
      NVI(I1,I2,1)=IT1                                                  QUAN-324
      DO 34 K=K1,K2                                                     QUAN-325
      IT=IT+1                                                           QUAN-326
      NAT(1,IT)=NAT(1,K)                                                QUAN-327
   34 AT(2,IT)=AT(2,K)                                                  QUAN-328
      K1=K2+1                                                           QUAN-329
      K2=NVI(I2,I1,3)                                                   QUAN-330
      DO 35 K=K1,K2                                                     QUAN-331
      IT=IT+1                                                           QUAN-332
      NAT(1,IT)=NAT(1,K)-INSL                                           QUAN-333
      IF (NAT(1,K).LT.0) NAT(1,IT)=NAT(1,IT)+2*INSL                     QUAN-334
      AT(2,IT)=-AT(2,K)                                                 QUAN-335
      IT=IT+1                                                           QUAN-336
      NAT(1,IT)=NAT(1,K)                                                QUAN-337
   35 AT(2,IT)=AT(2,K)                                                  QUAN-338
      LLO=.TRUE.                                                        QUAN-339
      GO TO 23                                                          QUAN-340
   36 NVI(I1,I2,2)=IT                                                   QUAN-341
      DO 37 K=K1,K2                                                     QUAN-342
      IT=IT+1                                                           QUAN-343
      NAT(1,IT)=NAT(1,K)                                                QUAN-344
   37 AT(2,IT)=-AT(2,K)                                                 QUAN-345
      NVI(I1,I2,3)=IT                                                   QUAN-346
      NIN=NIN+2                                                         QUAN-347
      IF (LO(14)) NIN=NIN+2                                             QUAN-348
      GO TO 40                                                          QUAN-349
C SYMMETRISATION OF THE TABLE WHEN THERE IS NO DEFORMED SPIN-ORBIT      QUAN-350
   38 DO 39 K=1,3                                                       QUAN-351
   39 NVI(I1,I2,K)=NVI(I2,I1,K)                                         QUAN-352
   40 CONTINUE                                                          QUAN-353
   41 CONTINUE                                                          QUAN-354
      IF (LO(158)) GO TO 42                                             QUAN-355
C OUTPUT OF COUPLING COEFFICIENTS                                       QUAN-356
      WRITE (MW,1002) ((J,I,(NVI(J,I,K),K=1,3),I=1,NC),J=1,NC)          QUAN-357
      IF (IT.EQ.0) GO TO 42                                             QUAN-358
      IF (LO(200)) WRITE (MW,1003) (I,NAT(1,I),AT(2,I),I=1,IT)          QUAN-359
      IF (LO(100)) WRITE (MW,1004) (I,NAT(1,I),AT(2,I),AT(3,I),I=1,IT)  QUAN-360
   42 NCI=NCIN                                                          QUAN-361
      NIC=NC                                                            QUAN-362
      IF (.NOT.LO(231)) RETURN                                          QUAN-363
C FIND QUANTUM NUMBER OF COUPLED CHANNELS FOR IDENTICAL PARTICLES. NOT  QUAN-364
C USED FOR DIRAC FORMALISM (INCORRECT MEANING OF MC(*,10[3]) IN MTCH)   QUAN-365
      NCIN=0                                                            QUAN-366
      JA=NAJ/2                                                          QUAN-367
      ISI=IPI(2,1)-1                                                    QUAN-368
      NSM=ISI+1                                                         QUAN-369
      NSB=JPI+1                                                         QUAN-370
      DO 44 IS=NSB,NSM,2                                                QUAN-371
      LP=JA+IS                                                          QUAN-372
      LM=IABS(JA-IS+1)+1                                                QUAN-373
      DO 43 L=LM,LP                                                     QUAN-374
      IF (MOD(L+JPI,2).NE.1) GO TO 43                                   QUAN-375
      NCIN=NCIN+1                                                       QUAN-376
      MC(NCIN,10)=IPI(11,1)                                             QUAN-377
      MC(NCIN,7)=1                                                      QUAN-378
      MC(NCIN,8)=L-1                                                    QUAN-379
      MC(NCIN,9)=2*IS-2                                                 QUAN-380
      MC(NCIN,11)=MC(NCIN,8)*(MC(NCIN,8)+1)                             QUAN-381
      MC(NCIN,12)=(JA*(JA+1)-L*(L-1)-IS*(IS-1))/2                       QUAN-382
   43 CONTINUE                                                          QUAN-383
   44 CONTINUE                                                          QUAN-384
      NC=NCIN                                                           QUAN-385
      IF (LO(58)) WRITE (MW,1005) NCI,NCIN                              QUAN-386
      IF (NCIN.EQ.0) RETURN                                             QUAN-387
      IF (NIC.EQ.NCI) GO TO 46                                          QUAN-388
      N=NCI+1                                                           QUAN-389
      DO 45 I=N,NIC                                                     QUAN-390
      NC=NC+1                                                           QUAN-391
      MC(NC,7)=MC(I,1)                                                  QUAN-392
      MC(NC,8)=MC(I,2)                                                  QUAN-393
      MC(NC,9)=MC(I,3)                                                  QUAN-394
      MC(NC,10)=MC(I,4)                                                 QUAN-395
      MC(NC,11)=MC(I,5)                                                 QUAN-396
   45 MC(NC,12)=MC(I,6)                                                 QUAN-397
   46 IF (LO(158)) GO TO 48                                             QUAN-398
      WRITE (MW,1000) AJ,IP(JPI+1),NC,NCIN                              QUAN-399
      DO 47 J=1,NC                                                      QUAN-400
      SJ=0.5D0*DFLOAT(MC(J,9))                                          QUAN-401
   47 WRITE (MW,1001) J,MC(J,7),MC(J,8),SJ,MC(J,10),MC(J,11),MC(J,12)   QUAN-402
C COMPUTATION OF TRANSFORMATION COEFFICIENTS                            QUAN-403
   48 ITI=IT+1                                                          QUAN-404
      DO 50 J=1,NCIN                                                    QUAN-405
      DO 49 I=1,NCI                                                     QUAN-406
      AA(I,J)=0.D0                                                      QUAN-407
      IF (MC(J,8).NE.MC(I,2)) GO TO 49                                  QUAN-408
      IJ=MC(I,3)                                                        QUAN-409
      IS=MC(J,9)                                                        QUAN-410
      AA(I,J)=DFLOAT(1-MOD(2*MC(I,2)+NAJ+2*ISI,4))*DSQRT((IJ+1.D0)*(IS+1QUAN-411
     1.D0))*DJ6J(2*MC(I,2),ISI,IJ,ISI,NAJ,IS,FAC,NFA)                   QUAN-412
   49 CONTINUE                                                          QUAN-413
   50 CONTINUE                                                          QUAN-414
      LO(210)=.FALSE.                                                   QUAN-415
      NIN=0                                                             QUAN-416
      NI=NCI-NCIN                                                       QUAN-417
      IBB=2                                                             QUAN-418
      IF ((LO(201).AND.LO(203)).OR.LO(200)) IBB=1                       QUAN-419
      DO 70 I1=1,NC                                                     QUAN-420
      IF (I1.GT.NCIN) GO TO 51                                          QUAN-421
      J1=1                                                              QUAN-422
      K1=NCI                                                            QUAN-423
      GO TO 52                                                          QUAN-424
   51 J1=I1+NI                                                          QUAN-425
      K1=J1                                                             QUAN-426
   52 DO 69 I2=1,NC                                                     QUAN-427
      IF ((I2.GT.I1).AND.(IBB.EQ.1)) GO TO 70                           QUAN-428
      DO 67 IB=1,IBB                                                    QUAN-429
      IF (I2.GT.NCIN) GO TO 53                                          QUAN-430
      J2=1                                                              QUAN-431
      K2=NCI                                                            QUAN-432
      GO TO 54                                                          QUAN-433
   53 J2=I2+NI                                                          QUAN-434
      K2=J2                                                             QUAN-435
   54 IT1=IT+1                                                          QUAN-436
      IF (IB.EQ.1) NVI(I2,I1,4)=IT1                                     QUAN-437
      DO 58 L1=J1,K1                                                    QUAN-438
      A1=1.D0                                                           QUAN-439
      IF (L1.LE.NCI) A1=AA(L1,I1)                                       QUAN-440
      IF (A1.EQ.0.D0) GO TO 58                                          QUAN-441
      DO 57 L2=J2,K2                                                    QUAN-442
      A2=1.D0                                                           QUAN-443
      IF (L2.LE.NCI) A2=AA(L2,I2)                                       QUAN-444
      IF (A2.EQ.0.D0) GO TO 57                                          QUAN-445
      M1=NVI(L2,L1,IB)                                                  QUAN-446
      M2=NVI(L2,L1,IB+1)                                                QUAN-447
      IF (IB.EQ.2) M1=M1+1                                              QUAN-448
      IF (M1.GT.M2) GO TO 57                                            QUAN-449
      IF (2*(M2-M1+3+IT).GT.NMAX) CALL MEMO('QUAN',NMAX,2*(M2-M1+3+IT),2QUAN-450
     1)                                                                 QUAN-451
      DO 56 M=M1,M2                                                     QUAN-452
      IT=IT+1                                                           QUAN-453
      NAT(1,IT)=NAT(1,M)                                                QUAN-454
      DO 55 IX=2,ID                                                     QUAN-455
   55 AT(IX,IT)=AT(IX,M)*A1*A2                                          QUAN-456
   56 CONTINUE                                                          QUAN-457
   57 CONTINUE                                                          QUAN-458
   58 CONTINUE                                                          QUAN-459
      IF (IT-IT1) 66 , 63 , 59                                          QUAN-460
C  SUMMATION OF COEFFICIENTS RELATED TO THE SAME FORM FACTOR            QUAN-461
   59 IT2=IT-1                                                          QUAN-462
      DO 62 I=IT1,IT2                                                   QUAN-463
      DO 61 J=I,IT2                                                     QUAN-464
      IF (NAT(1,I).NE.NAT(1,J+1)) GO TO 61                              QUAN-465
      DO 60 IX=2,ID                                                     QUAN-466
      AT(IX,I)=AT(IX,I)+AT(IX,J+1)                                      QUAN-467
   60 AT(IX,J+1)=0.D0                                                   QUAN-468
   61 CONTINUE                                                          QUAN-469
   62 CONTINUE                                                          QUAN-470
C ELIMINATION OF TOO SMALL COEFFICIENTS                                 QUAN-471
   63 IT2=IT                                                            QUAN-472
      IT=IT1-1                                                          QUAN-473
      NMR=0                                                             QUAN-474
      NMI=0                                                             QUAN-475
      DO 65 I=IT1,IT2                                                   QUAN-476
      CX=DABS(AT(2,I))                                                  QUAN-477
      IF (LO(100)) CX=CX+DABS(AT(3,I))                                  QUAN-478
      IF (CX.LT.1.D-10) GO TO 65                                        QUAN-479
      IT=IT+1                                                           QUAN-480
      NAT(1,IT)=NAT(1,I)                                                QUAN-481
      DO 64 IX=2,ID                                                     QUAN-482
   64 AT(IX,IT)=AT(IX,I)                                                QUAN-483
      IF (LO(100)) AT(3,IT)=AT(3,I)                                     QUAN-484
      NMR=NMR+1                                                         QUAN-485
      IF (NAT(1,IT).LT.0) NMI=NMI+1                                     QUAN-486
   65 CONTINUE                                                          QUAN-487
      IF (NMR.NE.0) NIN=NIN+1                                           QUAN-488
      IF (NMI.NE.0) NIN=NIN+1                                           QUAN-489
      IF ((IB.EQ.2).AND.(NMR.NE.0)) LO(210)=.TRUE.                      QUAN-490
   66 NVI(I2,I1,IB+4)=IT                                                QUAN-491
   67 CONTINUE                                                          QUAN-492
      IF (IBB.EQ.2) GO TO 70                                            QUAN-493
      NVI(I2,I1,6)=IT                                                   QUAN-494
C SYMMETRISATION OF THE TABLE WHEN THERE IS NO DEFORMED SPIN-ORBIT      QUAN-495
      DO 68 K=4,6                                                       QUAN-496
   68 NVI(I1,I2,K)=NVI(I2,I1,K)                                         QUAN-497
   69 CONTINUE                                                          QUAN-498
   70 CONTINUE                                                          QUAN-499
      IF (LO(158)) RETURN                                               QUAN-500
C OUTPUT OF COUPLING COEFFICIENTS                                       QUAN-501
      WRITE (MW,1002) ((I,J,(NVI(I,J,K),K=4,6),I=1,NC),J=1,NC)          QUAN-502
      IF (IT.LT.ITI) RETURN                                             QUAN-503
      IF (LO(200)) WRITE (MW,1003) (I,NAT(1,I),AT(2,I),I=ITI,IT)        QUAN-504
      IF (LO(100)) WRITE (MW,1004) (I,NAT(1,I),AT(2,I),AT(3,I),I=ITI,IT)QUAN-505
      RETURN                                                            QUAN-506
 1000 FORMAT (/' CHANNEL SPIN AND PARITY',F6.1,A1,I11,' COUPLED CHANNELSQUAN-507
     1 AND',I3,' SOLUTIONS'//8X,' I',3X,' V',3X,' L',3X,' J',9X,' POT',5QUAN-508
     2X,' CL',6X,' CJ'/)                                                QUAN-509
 1001 FORMAT (5X,3I5,F6.1,I11,2I9)                                      QUAN-510
 1002 FORMAT (/' PAIRS OF CHANNELS N1 N2, AND COUPLING COEFFICIENT NUMBEQUAN-511
     1RS NVI(N1,N2,K),K=1,3'/(1X,6(I3,I3,',',3I4,';')))                 QUAN-512
 1003 FORMAT (//5X,'COEFFICIENTS'/(4(2X,2I4,1P,D15.6)))                 QUAN-513
 1004 FORMAT (//5X,'COEFFICIENTS'/(3(2X,2I4,1P,2D15.6)))                QUAN-514
 1005 FORMAT (/' NUMBER OF SOLUTIONS REDUCED FROM',I3,' TO',I3)         QUAN-515
      END                                                               QUAN-516
C 01/01/04                                                      ECIS03  MTCH-000
      SUBROUTINE MTCH(NVI,NCOLL,KAB,WV,MC,BG,NAT,ST,AA,ISM,LMAX2,NIV,IVZMTCH-001
     1,FG,LMAX1,LMAX3,KR,VCO,VDO,FAM,ID,BJM,CHB,XM,LO)                  MTCH-002
C COMPUTATION OF COULOMB CORRECTIONS AS INTEGRALS FROM THE MATCHING     MTCH-003
C POINT IF LO(227)=.FALSE. OR FROM THE ORIGIN IF LO(227)=.TRUE.         MTCH-004
C INPUT VARIABLES: NVI:   ADDRESSES OF COUPLINGS IN TABLE AT            MTCH-005
C                  NC:    NUMBER OF EQUATIONS                           MTCH-006
C                  NCOLL: NUMBER OF NUCLEAR STATES                      MTCH-007
C                  KAB:   MAXIMUM NUMBER OF COUPLED CHANNELS            MTCH-008
C                  WV:    WAVE NUMBERS AND COULOMB PARAMETERS           MTCH-009
C                  MC:    NUCLEAR STATE NUMBER AND ANGULAR MOMENTUM     MTCH-010
C                  BG:    TABLE OF COULOMB INTEGRALS FROM 0 TO INFINITY MTCH-011
C                           FOR COUPLED EQUATIONS OR WHEN LO(227)=.TRUE.MTCH-012
C                  NAT,ST:TABLE OF COUPLING COEFFICIENTS                MTCH-013
C                  ISM:   NUMBER OF INTEGRATION POINTS                  MTCH-014
C                  LMAX2: FIRST DIMENSION OF TABLE BG                   MTCH-015
C                  NIV:   ADDRESS IN THE TABLE OF REDUCED MATRIX ELEMENTMTCH-016
C                  IVZ:   TABLE OF FORM FACTORS (SEE REDM 3RD PART)     MTCH-017
C                  FG:    COULOMB FUNCTIONS                             MTCH-018
C                  LMAX1: FIRST DIMENSION OF TABLE FG                   MTCH-019
C                  LMAX3: MAXIMUM NUMBER OF COULOMB INTEGRALS FROM THE  MTCH-020
C                           MATCHING POINT TO INFINITY                  MTCH-021
C                  VCO:   STRENGTH OF TAILS OF COULOMB POTENTIALS       MTCH-022
C                  VDO:   STRENGTH OF TAILS OF COULOMB TRANSITIONS      MTCH-023
C                  ID:    FIRST DIMENSION OF NAT,ST                     MTCH-024
C                  BJM:   COEFFICIENT OF INCREASE OF IMAGINARY POTENTIALMTCH-025
C                  CHB:                                                 MTCH-026
C                  XM:                                                  MTCH-027
C                  LO:    LOGICAL CONTROLS                              MTCH-028
C IN COMMON /POTE2/ITY(5):NUMBER OF DIAGONAL POTENTIALS                 MTCH-029
C                  INTV:  NUMBER OF FORM FACTORS                        MTCH-030
C                  INSL:  NUMBER OF SPIN-ORBIT FORM FACTORS             MTCH-031
C IN COMMON /NOEQU/NCXN:  NUMBER OF SOLUTIONS NEEDED                    MTCH-032
C                  NC:    NUMBER OF EQUATIONS                           MTCH-033
C OUTPUT VARIABLES:AA:    COULOMB INTEGRALS FROM THE MATCHING POINT TO  MTCH-034
C                           INFINITY FOR ITERATIONS LO(225)=.FALSE.     MTCH-035
C                  FAM(I,J): MATCHING VALUES AND WAVE NUMBER FOR J=1 TO MTCH-036
C                         6, COEFFICIENT OF CENTRAL POTENTIAL FOR J=7,  MTCH-037
C                         COEFFICIENT OF SPIN-ORBIT POTENTIAL FOR J=8,  MTCH-038
C                         ENERGY FOR J=9, CENTRIFUGAL POTENTIAL FOR J=10MTCH-039
C WORKING SPACE:   AA(1,1,I) FOR I=7,10 IF LO(227) OR LO(225)=.TRUE.    MTCH-040
C                  KR:    FOR LINS                                      MTCH-041
C LOCAL TABLES LA(3,11) AND BA(2,11) ARE SET MCM(1)=5 AND MCM(2)=4      MTCH-042
C***********************************************************************MTCH-043
      IMPLICIT REAL*8 (A-H,O-Z)                                         MTCH-044
      LOGICAL LO(250),LV                                                MTCH-045
      DIMENSION AA(KAB,KAB,4),WV(18,1),NAT(2*ID,1),ST(ID,1),B(4),C(2,2),MTCH-046
     1MC(KAB,6),NVI(KAB,KAB,3),NIV(NCOLL,NCOLL,3),IVZ(4,1),FG(LMAX1,4,1)MTCH-047
     2,G(4),AB(4,2),KR(1),VCO(2,1),VDO(2,1),BG(LMAX2,1),FAM(KAB,10),AV(5MTCH-048
     3),LA(3,11),BA(2,11)                                               MTCH-049
      COMMON /POTE2/ ITY(8),INVT,INTV,INSL,NPX                          MTCH-050
      COMMON /NOEQU/ NCXN,NIC,NCI,NC,NCIN,NIN,JPI,IPJ,R1(2),NAJ         MTCH-051
      COMMON /INOUT/ MR,MW,MS                                           MTCH-052
      LV=LO(44).AND.(LO(57).OR.LO(58))                                  MTCH-053
      LL4=4                                                             MTCH-054
      IF (LO(227)) LL4=1                                                MTCH-055
      IF (LV) WRITE (MW,1000)                                           MTCH-056
C LOOPS ON EQUATIONS                                                    MTCH-057
      DO 56 IC=1,NC                                                     MTCH-058
      I1=MC(IC,1)                                                       MTCH-059
      K1=MC(IC,4)                                                       MTCH-060
      L1=MC(IC,2)                                                       MTCH-061
      IF (K1.GE.0.OR.LO(227)) GO TO 2                                   MTCH-062
C TRANSFER OF INFORMATIONS WHEN UNCOUPLED FUNCTIONS ARE NOT RECOMPUTED  MTCH-063
      K1=-K1                                                            MTCH-064
      IF (LO(200)) MC(IC,6)=0                                           MTCH-065
      IF (K1.EQ.IC) GO TO 5                                             MTCH-066
      DO 1 I=1,8                                                        MTCH-067
    1 FAM(IC,I)=FAM(K1,I)                                               MTCH-068
      GO TO 5                                                           MTCH-069
C VALUES OF LONG RANGE TAILS OF CENTRAL POTENTIALS                      MTCH-070
    2 F2=VCO(1,K1)**2                                                   MTCH-071
      F3=VCO(2,K1)*MC(IC,6)                                             MTCH-072
      JC=0                                                              MTCH-073
      IF (I1.LE.NCOLL) JC=NIV(I1,I1,3)                                  MTCH-074
      IF (WV(3,I1).GT.0.D0.AND.JC.GT.0) GO TO 3                         MTCH-075
      F2=0.D0                                                           MTCH-076
      F3=0.D0                                                           MTCH-077
    3 IF (LO(227)) GO TO 5                                              MTCH-078
C INTEGRATION REGION - SET UP OF POTENTIAL IN FIVE POINTS FOR           MTCH-079
C TRANSFORMATION OF MATCHING VALUES                                     MTCH-080
      B1=WV(11,1)*WV(11,1)/48.D0                                        MTCH-081
      C1=(ISM-1)*WV(11,1)                                               MTCH-082
      A1=WV(9,I1)**2                                                    MTCH-083
      IF (WV(3,I1).LT.0.D0) A1=-A1                                      MTCH-084
      DO 4 K=1,5                                                        MTCH-085
      AV(K)=B1*(2.D0*WV(9,I1)*WV(5,I1)/C1-A1+(MC(IC,5)-F2-F3/C1)/C1**2) MTCH-086
    4 C1=C1+0.5D0*WV(11,1)                                              MTCH-087
C COMPUTATION OF COULOMB CORRECTIONS                                    MTCH-088
    5 AZ=ISM*WV(11,I1)                                                  MTCH-089
      DO 48 IP=1,IC                                                     MTCH-090
      DO 6 L=1,8                                                        MTCH-091
    6 AB(L,1)=0.D0                                                      MTCH-092
      I2=MC(IP,1)                                                       MTCH-093
      ILM=1                                                             MTCH-094
      IF (LO(144)) GO TO 45                                             MTCH-095
      L2=MC(IP,2)                                                       MTCH-096
      I3=NIV(I2,I1,3)                                                   MTCH-097
      IF (I3.EQ.0) GO TO 45                                             MTCH-098
      AY=DSQRT(WV(9,I1)*WV(9,I2))                                       MTCH-099
      AW=AY*AZ                                                          MTCH-100
C SCAN THE COUPLINGS BETWEEN EQUATIONS                                  MTCH-101
      IS=0                                                              MTCH-102
      IF (LO(200).AND.LO(19).AND.(IC.NE.IP)) ILM=2                      MTCH-103
      K1=NVI(IP,IC,1)                                                   MTCH-104
      K2=NVI(IP,IC,2)                                                   MTCH-105
      IF (LO(111).OR.(K1.GT.K2)) GO TO 15                               MTCH-106
      IML=1                                                             MTCH-107
C CENTRAL CONTRIBUTION                                                  MTCH-108
      I=1                                                               MTCH-109
    7 IF (VDO(1,I).EQ.0.D0) GO TO 29                                    MTCH-110
      II=I+ITY(5)                                                       MTCH-111
      DO 8 K=K1,K2                                                      MTCH-112
      IF (IABS(NAT(1,K)).EQ.II) GO TO 9                                 MTCH-113
    8 CONTINUE                                                          MTCH-114
      GO TO 29                                                          MTCH-115
    9 IF (ST(2,K).EQ.0.AND.LO(200)) GO TO 29                            MTCH-116
      LA1=MC(IC,2)                                                      MTCH-117
      LA2=MC(IP,2)                                                      MTCH-118
      LA3=IVZ(4,I)                                                      MTCH-119
      ZT=ST(2,K)*AY**LA3*VDO(1,I)/WV(11,I1)**2                          MTCH-120
      IF (LO(100)) ZT=ZT*.5D0*DSQRT((XM+WV(7,I1))*(XM+WV(7,I2)))/XM     MTCH-121
      IM=1                                                              MTCH-122
   10 IF (IM.LT.5) YT=ZT                                                MTCH-123
      IF ((YT.EQ.0.D0).AND.(ZT.EQ.0.D0)) GO TO 13                       MTCH-124
      IF (IS.EQ.0) GO TO 12                                             MTCH-125
      DO 11 J=1,IS                                                      MTCH-126
      IF ((LA(1,J).NE.LA1).OR.(LA(2,J).NE.LA2).OR.(LA(3,J).NE.LA3)) GO TMTCH-127
     1O 11                                                              MTCH-128
      BA(1,J)=BA(1,J)+ZT                                                MTCH-129
      BA(2,J)=BA(2,J)+YT                                                MTCH-130
      GO TO 13                                                          MTCH-131
   11 CONTINUE                                                          MTCH-132
   12 IS=IS+1                                                           MTCH-133
      LA(1,IS)=LA1                                                      MTCH-134
      LA(2,IS)=LA2                                                      MTCH-135
      LA(3,IS)=LA3                                                      MTCH-136
      BA(1,IS)=ZT                                                       MTCH-137
      BA(2,IS)=YT                                                       MTCH-138
   13 GO TO ( 14 , 29 , 19 , 29 , 26 , 27 , 28 , 29 ),IM                MTCH-139
   14 IF (LO(200)) GO TO 29                                             MTCH-140
C VECTOR CONTRIBUTION IN DIRAC EQUATION                                 MTCH-141
      IM=2                                                              MTCH-142
      LA1=MC(IC,3)-MC(IC,2)                                             MTCH-143
      LA2=MC(IP,3)-MC(IP,2)                                             MTCH-144
      LA3=IVZ(4,I)                                                      MTCH-145
      ZT=ST(3,K)*AY**LA3*VDO(1,I)*CHB**2*WV(9,I1)*WV(9,I2)/(2.D0*XM*(WV(MTCH-146
     17,I2)+XM)*WV(11,I1)**2)                                           MTCH-147
      IF ((LA1-MC(IC,2))*(LA2-MC(IP,2)).LT.0) ZT=-ZT                    MTCH-148
      GO TO 10                                                          MTCH-149
   15 IF (LO(119)) GO TO 30                                             MTCH-150
      K3=NVI(IP,IC,3)                                                   MTCH-151
C TENSOR CONTRIBUTION IN DIRAC EQUATION                                 MTCH-152
      IF (LO(200)) GO TO 20                                             MTCH-153
      IML=2                                                             MTCH-154
      K4=K2+1                                                           MTCH-155
      IF (K4.GT.K3) GO TO 30                                            MTCH-156
      I=1                                                               MTCH-157
   16 IF (VDO(2,I).EQ.0.) GO TO 29                                      MTCH-158
      DO 17 K=K4,K3                                                     MTCH-159
      IF (IABS(NAT(1,K)).EQ.IVZ(3,I)+INTV) GO TO 18                     MTCH-160
   17 CONTINUE                                                          MTCH-161
      GO TO 29                                                          MTCH-162
   18 IM=3                                                              MTCH-163
      LA1=MC(IC,3)-MC(IC,2)                                             MTCH-164
      LA2=MC(IP,2)                                                      MTCH-165
      LA3=IVZ(4,I)+1                                                    MTCH-166
      ZT=.5D0*(ST(3,K)+DFLOAT(LA3)*ST(2,K))*AY**LA3*VDO(2,I)*CHB*WV(9,I1MTCH-167
     1)/(WV(11,I1)**2*XM)                                               MTCH-168
      IF ((LA1-MC(IC,2)).GT.0) ZT=-ZT                                   MTCH-169
      GO TO 10                                                          MTCH-170
   19 IM=4                                                              MTCH-171
      LA1=MC(IC,2)                                                      MTCH-172
      LA2=MC(IP,3)-LA2                                                  MTCH-173
      ZT=-.5D0*(ST(3,K)-DFLOAT(LA3)*ST(2,K))*AY**LA3*VDO(2,I)*CHB*WV(9,IMTCH-174
     12)/(WV(11,I2)**2*XM)                                              MTCH-175
      IF ((LA2-MC(IP,2)).GT.0) ZT=-ZT                                   MTCH-176
      GO TO 10                                                          MTCH-177
   20 I=1                                                               MTCH-178
      IML=3                                                             MTCH-179
C SPIN-ORBIT CONTRIBUTION IN SCHROEDINGER EQUATION                      MTCH-180
      KP1=NVI(IC,IP,1)                                                  MTCH-181
      KP2=NVI(IC,IP,2)                                                  MTCH-182
      KP3=NVI(IC,IP,3)                                                  MTCH-183
   21 IF (VDO(2,I).EQ.0.D0) GO TO 29                                    MTCH-184
      II=IVZ(3,I)+ITY(5)+INSL+INTV                                      MTCH-185
      AX1=0.D0                                                          MTCH-186
      AX2=0.D0                                                          MTCH-187
      AX3=0.D0                                                          MTCH-188
      IF (K1.GT.K3) GO TO 23                                            MTCH-189
      DO 22 K=K1,K3                                                     MTCH-190
      IF (IABS(NAT(1,K))+INSL.EQ.II) AX1=ST(2,K)                        MTCH-191
      IF ((K.LE.K2).AND.(IABS(NAT(1,K)).EQ.II)) AX2=ST(2,K)             MTCH-192
      IF ((K.GT.K2).AND.(IABS(NAT(1,K)).EQ.II)) AX3=ST(2,K)             MTCH-193
   22 CONTINUE                                                          MTCH-194
   23 AY1=0.D0                                                          MTCH-195
      AY2=0.D0                                                          MTCH-196
      AY3=0.D0                                                          MTCH-197
      IF (KP1.GT.KP3) GO TO 25                                          MTCH-198
      DO 24 K=KP1,KP3                                                   MTCH-199
      IF (IABS(NAT(1,K))+INSL.EQ.II) AY1=ST(2,K)                        MTCH-200
      IF ((K.LE.KP2).AND.(IABS(NAT(1,K)).EQ.II)) AY2=ST(2,K)            MTCH-201
      IF ((K.GT.KP2).AND.(IABS(NAT(1,K)).EQ.II)) AY3=ST(2,K)            MTCH-202
   24 CONTINUE                                                          MTCH-203
   25 IF ((K1.GT.K3).AND.(KP1.GT.KP3)) GO TO 29                         MTCH-204
      LA1=MC(IC,2)                                                      MTCH-205
      LA2=MC(IP,2)                                                      MTCH-206
      LA3=IVZ(4,I)+2                                                    MTCH-207
      IF (LA3.GT.LA1+LA2) GO TO 29                                      MTCH-208
      XT=AY**LA3*VDO(2,I)/WV(11,I1)**2                                  MTCH-209
      ZT=(AX2-DFLOAT(LA3-1)*AX1+DFLOAT(LA1+1)*AX3)*XT                   MTCH-210
      YT=(AY2-DFLOAT(LA3-1)*AY1+DFLOAT(LA2+1)*AY3)*XT                   MTCH-211
      IM=5                                                              MTCH-212
      GO TO 10                                                          MTCH-213
   26 LA3=LA3-1                                                         MTCH-214
      XT=XT/AY                                                          MTCH-215
      ZT=AX3*WV(9,I1)*WV(5,I1)/DFLOAT(LA1+1)*XT                         MTCH-216
      YT=AY3*WV(9,I2)*WV(5,I2)/DFLOAT(LA2+1)*XT                         MTCH-217
      IM=6                                                              MTCH-218
      GO TO 10                                                          MTCH-219
   27 LA2=LA2+1                                                         MTCH-220
      YT=-AY3*DSQRT(1.D0+(WV(5,I2)/DFLOAT(LA2))**2)*WV(9,I2)*XT         MTCH-221
      ZT=0.D0                                                           MTCH-222
      IM=7                                                              MTCH-223
      GO TO 10                                                          MTCH-224
   28 LA1=LA1+1                                                         MTCH-225
      LA2=LA2-1                                                         MTCH-226
      ZT=-AX3*DSQRT(1.D0+(WV(5,I1)/DFLOAT(LA1))**2)*WV(9,I1)*XT         MTCH-227
      YT=0.D0                                                           MTCH-228
      IM=8                                                              MTCH-229
      GO TO 10                                                          MTCH-230
   29 I=I+1                                                             MTCH-231
      IF (I.LE.INTV) GO TO ( 7 , 16 , 21 ),IML                          MTCH-232
      IF (IML.EQ.1) GO TO 15                                            MTCH-233
   30 IF (IS.EQ.0) GO TO 45                                             MTCH-234
      DO 44 IK=1,IS                                                     MTCH-235
      IF (DABS(BA(1,IK))+DABS(BA(2,IK)).LT.1.D-8) GO TO 44              MTCH-236
      L4=LA(1,IK)                                                       MTCH-237
      L5=LA(2,IK)                                                       MTCH-238
      LI=MIN0(L4,L5)                                                    MTCH-239
      LF=MAX0(L4,L5)                                                    MTCH-240
      LL=LA(3,IK)                                                       MTCH-241
      I4=I1                                                             MTCH-242
      IF (LI.NE.LA(2,IK)) I4=I2                                         MTCH-243
      I5=I1+I2-I4                                                       MTCH-244
      EI=WV(5,I5)                                                       MTCH-245
      EF=WV(5,I4)                                                       MTCH-246
      XI=WV(9,I5)*AZ                                                    MTCH-247
      XF=WV(9,I4)*AZ                                                    MTCH-248
      L3=(LI+LF-LL+3)/2                                                 MTCH-249
      IF (L3.LE.0) GO TO 44                                             MTCH-250
      CALL CORA(L3,LL,LF-LI+1,EI,EF,XI,XF,B,C,LO(227))                  MTCH-251
C ORDER IN C   (LI,LF),(LI,LF+1),(LI+1,LF),(LI+1,LF+1)                  MTCH-252
C ORDER IN FG   F(EI)*F(EF),G(EI)*F(EF),F(EI)*G(EF),G(EI)*G(EF)         MTCH-253
      IF (LO(227)) GO TO 41                                             MTCH-254
C INTEGRATION REGION - INTEGRALS FROM MATCHING POINT TO INFINITY        MTCH-255
      IF (MAX0(L3+3,LF+2).GT.LMAX3) GO TO 65                            MTCH-256
      IF (LI.NE.L5) GO TO 31                                            MTCH-257
      A1=C(1,2)                                                         MTCH-258
      C(1,2)=C(2,1)                                                     MTCH-259
      C(2,1)=A1                                                         MTCH-260
C COMPUTATION OF THE INTEGRALS FROM THE MATCHING POINT USING B AND C    MTCH-261
   31 DO 35 N1=1,4                                                      MTCH-262
      G(N1)=0.D0                                                        MTCH-263
      DO 32 N3=1,4                                                      MTCH-264
   32 G(N1)=G(N1)+B(N3)*FG(L3+N3-1,N1,I3)                               MTCH-265
      NN2=2*((N1-1)/2)+1                                                MTCH-266
      NN1=2*(N1-NN2)+1                                                  MTCH-267
      DO 34 N3=1,2                                                      MTCH-268
      DO 33 N4=1,2                                                      MTCH-269
   33 G(N1)=G(N1)-C(N4,N3)*FG(L3+N3,NN1,I1)*FG(L3+N4,NN2,I2)            MTCH-270
   34 CONTINUE                                                          MTCH-271
   35 CONTINUE                                                          MTCH-272
      DO 37 IL=1,ILM                                                    MTCH-273
      DO 36 L=1,4                                                       MTCH-274
   36 AB(L,IL)=AB(L,IL)+BA(IL,IK)*G(L)                                  MTCH-275
   37 CONTINUE                                                          MTCH-276
      IF (LO(225).OR.(LO(29).AND.(IP.EQ.IC))) GO TO 39                  MTCH-277
      DO 38 IL=1,ILM                                                    MTCH-278
      YT=BA(IL,IK)*WV(11,I1)**2*AY/(12.D0*AW**(LL+1))                   MTCH-279
C WITH THE GREEN'S FUNCTIONS METHOD,WE MUST ADD H**2*FP(R)/12           MTCH-280
C WHICH IS VRE(ISM-1)*(KI*FP(I)*G(F)+KF*F(I)*GP(F)-(LL+1)/R)/12.        MTCH-281
      C0=-DFLOAT(LL+1)/AZ+6.D0/WV(11,I1)                                MTCH-282
      AB(1,IL)=AB(1,IL)-YT*(WV(9,I1)*FG(L4+1,2,I1)*FG(L5+1,1,I2)+WV(9,I2MTCH-283
     1)*FG(L4+1,1,I1)*FG(L5+1,2,I2)+C0*FG(L4+1,1,I1)*FG(L5+1,1,I2))     MTCH-284
      AB(2,IL)=AB(2,IL)-YT*(WV(9,I1)*FG(L4+1,4,I1)*FG(L5+1,1,I2)+WV(9,I2MTCH-285
     1)*FG(L4+1,3,I1)*FG(L5+1,2,I2)+C0*FG(L4+1,3,I1)*FG(L5+1,1,I2))     MTCH-286
      AB(3,IL)=AB(3,IL)-YT*(WV(9,I1)*FG(L4+1,2,I1)*FG(L5+1,3,I2)+WV(9,I2MTCH-287
     1)*FG(L4+1,1,I1)*FG(L5+1,4,I2)+C0*FG(L4+1,1,I1)*FG(L5+1,3,I2))     MTCH-288
      AB(4,IL)=AB(4,IL)-YT*(WV(9,I1)*FG(L4+1,4,I1)*FG(L5+1,3,I2)+WV(9,I2MTCH-289
     1)*FG(L4+1,3,I1)*FG(L5+1,4,I2)+C0*FG(L4+1,3,I1)*FG(L5+1,3,I2))     MTCH-290
   38 CONTINUE                                                          MTCH-291
      GO TO 44                                                          MTCH-292
C CORRECTION OF THE POTENTIAL IN FIVE POINTS FOR MATCHING VALUES        MTCH-293
   39 C1=DFLOAT(ISM-1)*WV(11,I1)*AY                                     MTCH-294
      DO 40 I=1,5                                                       MTCH-295
      AV(I)=AV(I)+BA(1,IK)*AY*WV(11,I1)**2/C1**(LL+1)/48.D0             MTCH-296
   40 C1=C1+0.5D0*WV(11,I1)*AY                                          MTCH-297
      GO TO 44                                                          MTCH-298
C COMPUTATION OF INTEGRALS FROM 0 TO INFINITY USING B                   MTCH-299
   41 AX=0.D0                                                           MTCH-300
      IF (L3+3.GT.LMAX2) GO TO 66                                       MTCH-301
      DO 42 N1=1,4                                                      MTCH-302
   42 AX=AX+B(N1)*BG(L3+N1-1,I3)                                        MTCH-303
      DO 43 IL=1,ILM                                                    MTCH-304
   43 AB(1,IL)=AB(1,IL)+BA(IL,IK)*AX                                    MTCH-305
   44 CONTINUE                                                          MTCH-306
C LIMITATION FOR TOO LARGE INTEGRAL OF IRREGULAR FUNCTIONS              MTCH-307
   45 IF (DABS(AB(4,1)).GT.WV(9,I1)) AB(4,1)=AB(1,1)                    MTCH-308
      IF ((ILM.EQ.2).AND.(DABS(AB(4,2)).GT.WV(9,I2))) AB(4,2)=AB(1,2)   MTCH-309
      IF (.NOT.LV) GO TO 46                                             MTCH-310
      WRITE (MW,1001) IC,IP,L1,L2,(AB(I,1),I=1,LL4)                     MTCH-311
      IF (ILM.EQ.2) WRITE (MW,1001) IP,IC,L2,L1,(AB(I,2),I=1,LL4)       MTCH-312
C BUILD UP OF MATRIX OF CORRECTIONS                                     MTCH-313
   46 DO 47 L=1,LL4                                                     MTCH-314
      IF (IC.NE.IP) AA(IP,IC,L)=AB(L,ILM)                               MTCH-315
   47 AA(IC,IP,L)=AB(L,1)                                               MTCH-316
      IF (LO(227).OR.(IC.EQ.IP)) GO TO 48                               MTCH-317
      AA(IP,IC,2)=AB(3,ILM)                                             MTCH-318
      AA(IP,IC,3)=AB(2,ILM)                                             MTCH-319
   48 CONTINUE                                                          MTCH-320
      IF (.NOT.LO(227)) GO TO 49                                        MTCH-321
      IF (JC.LE.0) GO TO 56                                             MTCH-322
      IF (WV(5,I1).EQ.0.D0) F2=F3*WV(9,I1)                              MTCH-323
      AA(IC,IC,1)=AA(IC,IC,1)-F2*BG(L1+1,JC)*WV(9,I1)                   MTCH-324
      IF ((WV(5,I1).EQ.0.D0).OR.(F3.EQ.0.D0)) GO TO 56                  MTCH-325
      B1=2.D0*WV(5,I1)*DFLOAT(L1*(L1+1))                                MTCH-326
      B2=DFLOAT(L1+1)**2+WV(5,I1)**2                                    MTCH-327
      C1=-(DFLOAT(2*L1+1)*B2+2*WV(5,I1)**2)/B1                          MTCH-328
      C2=DFLOAT(2*L1+3)*B2/B1                                           MTCH-329
      AA(IC,IC,1)=AA(IC,IC,1)-F3*(C1*BG(L1+1,JC)+C2*BG(L1+2,JC))*WV(9,I1MTCH-330
     1)**2                                                              MTCH-331
      GO TO 56                                                          MTCH-332
   49 IF (MC(IC,4).LT.0) GO TO 56                                       MTCH-333
C MATCHING VALUES                                                       MTCH-334
      DO 50 K=1,4                                                       MTCH-335
   50 B(K)=FG(L1+1,K,I1)                                                MTCH-336
      IF (JC.LE.0) GO TO 54                                             MTCH-337
      IF (LO(129).AND.(F2.EQ.0.D0.AND.F3.EQ.0.D0)) GO TO 54             MTCH-338
      IF (WV(5,I1).NE.0.D0) GO TO 51                                    MTCH-339
      F2=F3*WV(9,I1)                                                    MTCH-340
      F3=0.D0                                                           MTCH-341
   51 DO 52 K=1,4                                                       MTCH-342
   52 G(K)=-FG(L1+1,K,JC)*F2+AB(K,1)/WV(9,I1)                           MTCH-343
      IF (F3.EQ.0.D0) GO TO 53                                          MTCH-344
      B1=2.D0*WV(5,I1)*DFLOAT(L1*(L1+1))                                MTCH-345
      B2=DFLOAT(L1+1)**2+WV(5,I1)**2                                    MTCH-346
      C1=-(DFLOAT(2*L1+1)*B2+2*WV(5,I1)**2)/B1                          MTCH-347
      C2=DFLOAT(2*L1+3)*B2/B1                                           MTCH-348
      A1=DFLOAT(ISM)*WV(11,I1)*WV(9,I1)                                 MTCH-349
      D1=(B2+DFLOAT(L1+1)*WV(5,I1)/A1)/A1/B1                            MTCH-350
      D2=-WV(5,I1)*DSQRT(B2)/B1/A1                                      MTCH-351
      A1=B2/B1/A1                                                       MTCH-352
      A3=F3*WV(9,I1)                                                    MTCH-353
      G(1)=G(1)-A3*(C1*FG(L1+1,1,JC)+C2*FG(L1+2,1,JC)-D1*FG(L1+1,1,I1)**MTCH-354
     12-D2*2.D0*FG(L1+1,1,I1)*FG(L1+2,1,I1)-A1*FG(L1+2,1,I1)**2)        MTCH-355
      G(2)=G(2)-A3*(C1*FG(L1+1,2,JC)+C2*FG(L1+2,2,JC)-D1*FG(L1+1,1,I1)*FMTCH-356
     1G(L1+1,3,I1)-D2*(FG(L1+1,1,I1)*FG(L1+2,3,I1)+FG(L1+2,1,I1)*FG(L1+1MTCH-357
     2,3,I1))-A1*FG(L1+2,1,I1)*FG(L1+2,3,I1))                           MTCH-358
      G(4)=G(4)-A3*(C1*FG(L1+1,4,JC)+C2*FG(L1+2,4,JC)-D1*FG(L1+1,3,I1)**MTCH-359
     12-D2*2.D0*FG(L1+1,3,I1)*FG(L1+2,3,I1)-A1*FG(L1+2,3,I1)**2)        MTCH-360
   53 A4=1.D0+(G(1)*G(4)-G(2)**2)                                       MTCH-361
      G(3)=B(1)                                                         MTCH-362
      B(1)=(B(1)*(1.D0-G(2))+G(1)*B(3))/A4                              MTCH-363
      B(3)=(-G(3)*G(4)+(1.D0+G(2))*B(3))/A4                             MTCH-364
      G(3)=B(2)                                                         MTCH-365
      B(2)=(B(2)*(1.D0-G(2))+G(1)*B(4))/A4                              MTCH-366
      B(4)=(-G(3)*G(4)+(1.D0+G(2))*B(4))/A4                             MTCH-367
   54 A1=(1.D0-AV(2))/(2.D0+10.D0*AV(2))                                MTCH-368
      B1=(1.D0-AV(4))/(2.D0+10.D0*AV(4))                                MTCH-369
      A2=A1*(1.D0-AV(1))/(1.D0-4.D0*AV(1))                              MTCH-370
      B2=B1*(1.D0-AV(5))/(1.D0-4.D0*AV(5))                              MTCH-371
      C1=(2.D0+10.D0*AV(3))-(1.D0-AV(3))*(A1+B1)                        MTCH-372
      A1=(16.D0-144.D0*AV(2))/(2.D0+10.D0*AV(2))                        MTCH-373
      B1=(16.D0-144.D0*AV(4))/(2.D0+10.D0*AV(4))                        MTCH-374
      C2=(7.D0+A1*(1.D0-AV(1)))/(1.D0-4.D0*AV(1))                       MTCH-375
      D2=(7.D0+B1*(1.D0-AV(5)))/(1.D0-4.D0*AV(5))                       MTCH-376
      D1=(B1-A1)*(1.D0-AV(3))                                           MTCH-377
      A1=A2*D2+B2*C2                                                    MTCH-378
      B1=(C1*D2+D1*B2)/A1                                               MTCH-379
      B2=30.D0*WV(11,1)*B2*WV(9,I1)/A1                                  MTCH-380
      FAM(IC,1)=B1*B(1)-B2*B(2)                                         MTCH-381
      FAM(IC,3)=B1*B(3)-B2*B(4)                                         MTCH-382
      B1=(C2*C1-A2*D1)/A1                                               MTCH-383
      A2=-30.D0*WV(11,1)*A2*WV(9,I1)/A1                                 MTCH-384
      FAM(IC,2)=B1*B(1)-A2*B(2)                                         MTCH-385
      FAM(IC,4)=B1*B(3)-A2*B(4)                                         MTCH-386
      FAM(IC,5)=WV(9,I1)                                                MTCH-387
      IF (LO(100)) FAM(IC,5)=FAM(IC,5)*CHB/(XM+WV(7,I1))                MTCH-388
      BT=FAM(IC,2)*FAM(IC,3)-FAM(IC,1)*FAM(IC,4)                        MTCH-389
      IF (BT.EQ.0.D0) BT=1.D0                                           MTCH-390
      DO 55 I=1,4                                                       MTCH-391
   55 FAM(IC,I)=FAM(IC,I)/BT                                            MTCH-392
      FAM(IC,6)=FAM(IC,5)/BT                                            MTCH-393
      IF (LO(100)) FAM(IC,5)=FAM(IC,5)*WV(11,I1)                        MTCH-394
      FAM(IC,7)=WV(8,I1)**2                                             MTCH-395
      FAM(IC,8)=2.D0*FAM(IC,7)*MC(IC,6)                                 MTCH-396
      FAM(IC,9)=WV(10,I1)                                               MTCH-397
      FAM(IC,10)=MC(IC,5)                                               MTCH-398
      IF (LO(200)) MC(IC,6)=IDINT(BJM*FAM(IC,7))                        MTCH-399
   56 CONTINUE                                                          MTCH-400
      DO 59 IC=1,NC                                                     MTCH-401
      I1=MC(IC,1)                                                       MTCH-402
      DO 58 L=1,LL4                                                     MTCH-403
      DO 57 IP=1,NC                                                     MTCH-404
   57 AA(IC,IP,L)=AA(IC,IP,L)/WV(9,I1)                                  MTCH-405
   58 CONTINUE                                                          MTCH-406
   59 CONTINUE                                                          MTCH-407
      IF (.NOT.LO(227)) RETURN                                          MTCH-408
      IF (.NOT.LO(225)) GO TO 62                                        MTCH-409
C TRANSPOSITION IF COUPLED EQUATIONS ARE USED                           MTCH-410
      DO 61 IC=1,NC                                                     MTCH-411
      DO 60 IP=1,IC                                                     MTCH-412
      AX=AA(IP,IC,1)                                                    MTCH-413
      AA(IP,IC,1)=AA(IC,IP,1)                                           MTCH-414
   60 AA(IC,IP,1)=AX                                                    MTCH-415
   61 CONTINUE                                                          MTCH-416
C LINEAR SYSTEM FOR COMPUTATION OF THE S-MATRIX FROM THE K-MATRIX       MTCH-417
   62 DO 64 IC=1,NC                                                     MTCH-418
      DO 63 IP=1,NC                                                     MTCH-419
      AA(IC,NC+IP,1)=0.D0                                               MTCH-420
      AA(IC,IP,4)=0.D0                                                  MTCH-421
   63 AA(IC,NC+IP,4)=-AA(IC,IP,1)                                       MTCH-422
   64 AA(IC,IC,4)=1.D0                                                  MTCH-423
      CALL LINS(AA(1,1,4),KAB,AA,KAB,NC,NCXN,KR,IER)                    MTCH-424
      RETURN                                                            MTCH-425
   65 WRITE (MW,1002) L3,LF,LMAX3                                       MTCH-426
      RETURN                                                            MTCH-427
   66 WRITE (MW,1003) L3,LMAX2                                          MTCH-428
      RETURN                                                            MTCH-429
 1000 FORMAT (/' CHANNELS  L-VALUES     COULOMB INTEGRALS: F*F,G*F,F*G AMTCH-430
     1ND G*G')                                                          MTCH-431
 1001 FORMAT (2X,2I3,2X,2I4,3X,4D18.10)                                 MTCH-432
 1002 FORMAT (' STARTING VALUES',I3,' FOR INTEGRALS AND',I3,' FOR COULOMMTCH-433
     1B FUNCTIONS TOO LARGE . LIMITATION AT',I4)                        MTCH-434
 1003 FORMAT (' STARTING VALUE',I4,' TOO LARGE FOR COULOMB INTEGRALS WHIMTCH-435
     1CH ARE COMPUTED UP TO',I5)                                        MTCH-436
      END                                                               MTCH-437
C 01/01/04                                                      ECIS03  LINS-000
      SUBROUTINE LINS(A,IA,B,IB,NA,M,K,IER)                             LINS-001
C LINS: JLSB2 VERSION 01 18/12/68 MATH L003 OF SACLAY                   LINS-002
C SOLUTION OF DOUBLE PRECISION COMPLEX LINEAR SYSTEMS WITH REAL AND     LINS-003
C IMAGINARY PARTS IN DIFFERENT ARRAYS                                   LINS-004
C     A REAL COMPONENT OF MATRIX AND SECOND MEMBERS                     LINS-005
C     B IMAGINARY COMPONENT OF MATRIX AND SECOND MEMBERS                LINS-006
C SECOND MEMBERS ARE REPLACED BY SOLUTIONS                              LINS-007
C     IA FIRST DIMENSION OF ARRAY A                                     LINS-008
C     IB FIRST DIMENSION OF ARRAY B                                     LINS-009
C     NA ORDER OF THE SYSTEM                                            LINS-010
C     M  NUMBER OF SECOND MEMBERS                                       LINS-011
C     K  WORKING FIELD OF DIMENSION >/= NA                              LINS-012
C     IER RETURNS DIAGNOSTIC 0 NON SINGULAR MATRIX                      LINS-013
C                            1 SINGULAR MATRIX                          LINS-014
C                            2 QUASI SINGULAR MATRIX                    LINS-015
C***********************************************************************LINS-016
      IMPLICIT REAL*8 (A-H,O-Z)                                         LINS-017
      DIMENSION A(IA,1),K(1),B(IB,1)                                    LINS-018
      COMMON /INOUT/ MR,MW,MS                                           LINS-019
      IER=0                                                             LINS-020
      N=NA                                                              LINS-021
      NDEB=N+1                                                          LINS-022
      NM=N+M                                                            LINS-023
      DO 1 I=1,N                                                        LINS-024
    1 K(I)=I                                                            LINS-025
      DO 11 I=1,N                                                       LINS-026
      AMAX=DABS(A(I,I))+DABS(B(I,I))                                    LINS-027
      JMAX=I                                                            LINS-028
      I1=I+1                                                            LINS-029
      IF (I.EQ.N) GO TO 3                                               LINS-030
      DO 2 J=I1,N                                                       LINS-031
      AMAY=DABS(A(I,J))+DABS(B(I,J))                                    LINS-032
      IF (AMAX.GE.AMAY) GO TO 2                                         LINS-033
      AMAX=AMAY                                                         LINS-034
      JMAX=J                                                            LINS-035
    2 CONTINUE                                                          LINS-036
    3 IF (AMAX.EQ.0.D0) GO TO 18                                        LINS-037
      IF (JMAX.EQ.I) GO TO 5                                            LINS-038
      DO 4 I2=1,N                                                       LINS-039
      AUX=B(I2,I)                                                       LINS-040
      B(I2,I)=B(I2,JMAX)                                                LINS-041
      B(I2,JMAX)=AUX                                                    LINS-042
      AUX=A(I2,I)                                                       LINS-043
      A(I2,I)=A(I2,JMAX)                                                LINS-044
    4 A(I2,JMAX)=AUX                                                    LINS-045
      NAB=K(JMAX)                                                       LINS-046
      K(JMAX)=K(I)                                                      LINS-047
      K(I)=NAB                                                          LINS-048
    5 IF (I.EQ.1) GO TO 7                                               LINS-049
      SR=0.D0                                                           LINS-050
      SI=0.D0                                                           LINS-051
      T=0.D0                                                            LINS-052
      IN=I-1                                                            LINS-053
      DO 6 IT=1,IN                                                      LINS-054
      PR=A(IT,I)*A(I,IT)-B(IT,I)*B(I,IT)                                LINS-055
      PI=A(IT,I)*B(I,IT)+A(I,IT)*B(IT,I)                                LINS-056
      SR=SR+PR                                                          LINS-057
      SI=SI+PI                                                          LINS-058
    6 T=T+DABS(PR)+DABS(PI)                                             LINS-059
      ERA=1.D-16*(T+DABS(A(I,I)-SR)+DABS(B(I,I)-SI))                    LINS-060
      IF (AMAX.GT.ERA) GO TO 7                                          LINS-061
      IER=2                                                             LINS-062
      WRITE (MW,1000)                                                   LINS-063
      GO TO 19                                                          LINS-064
    7 DO 8 J=I1,NM                                                      LINS-065
      AA=A(I,J)                                                         LINS-066
      BB=B(I,J)                                                         LINS-067
      AI=A(I,I)                                                         LINS-068
      BI=B(I,I)                                                         LINS-069
      D=AI*AI+BI*BI                                                     LINS-070
      A(I,J)=(AA*AI+BB*BI)/D                                            LINS-071
    8 B(I,J)=(BB*AI-AA*BI)/D                                            LINS-072
      IF (I.EQ.N) GO TO 11                                              LINS-073
      DO 10 I3 =I1,N                                                    LINS-074
      DO 9 J3 =I1,NM                                                    LINS-075
      B(I3,J3)=B(I3,J3)-A(I3,I)*B(I,J3)-B(I3,I)*A(I,J3)                 LINS-076
    9 A(I3,J3)=A(I3,J3)-A(I3,I)*A(I,J3)+B(I3,I)*B(I,J3)                 LINS-077
   10 CONTINUE                                                          LINS-078
   11 CONTINUE                                                          LINS-079
      IF (N.EQ.1) GO TO 19                                              LINS-080
      DO 14 KC=NDEB,NM                                                  LINS-081
      J=N                                                               LINS-082
   12 I=J-1                                                             LINS-083
   13 A(I,KC)=A(I,KC)-A(J,KC)*A(I,J)+B(J,KC)*B(I,J)                     LINS-084
      B(I,KC)=B(I,KC)-A(J,KC)*B(I,J)-B(J,KC)*A(I,J)                     LINS-085
      I=I-1                                                             LINS-086
      IF (I.NE.0) GO TO 13                                              LINS-087
      J=J-1                                                             LINS-088
      IF (J.NE.1) GO TO 12                                              LINS-089
   14 CONTINUE                                                          LINS-090
      DO 17 I=1,N                                                       LINS-091
   15 J=K(I)                                                            LINS-092
      IF (J.LE.I) GO TO 17                                              LINS-093
      K(I)=K(J)                                                         LINS-094
      K(J)=J                                                            LINS-095
      DO 16 MP=NDEB,NM                                                  LINS-096
      AUX=B(J,MP)                                                       LINS-097
      B(J,MP)=B(I,MP)                                                   LINS-098
      B(I,MP)=AUX                                                       LINS-099
      AUX=A(J,MP)                                                       LINS-100
      A(J,MP)=A(I,MP)                                                   LINS-101
   16 A(I,MP)=AUX                                                       LINS-102
      GO TO 15                                                          LINS-103
   17 CONTINUE                                                          LINS-104
      GO TO 19                                                          LINS-105
   18 IER=1                                                             LINS-106
      WRITE (MW,1001)                                                   LINS-107
   19 RETURN                                                            LINS-108
 1000 FORMAT (' *****  LINS  ***** QUASI SINGULAR MATRIX')              LINS-109
 1001 FORMAT (' *****  LINS  *****       SINGULAR MATRIX')              LINS-110
      END                                                               LINS-111
C 01/01/04                                                      ECIS03  CORA-000
      SUBROUTINE CORA(L,LQ,LL,E,F,V,W,B,C,LT)                           CORA-001
C COEFFICIENTS FOR COULOMB INTEGRALS                                    CORA-002
C M(L1,L2,LQ,R)=SUM FROM R TO INFINITY OF H(L1)*K(L2)/R**(LQ+1)         CORA-003
C EXPRESSED AS SUM ON I OF B(I)*M(L+I-2,L+I-2,1) + C1(R)*H(L)*K(L)      CORA-004
C + C2(R)*H(L)*K(L+1) + C3(R)*H(L+1)*K(L) + C4(R)*H(L+1)*K(L+1)         CORA-005
C WHERE H AND K ARE REGULAR OR IRREGULAR COULOMB FUNCTIONS              CORA-006
C L=INTEGER PART OF (L1+L2-LQ+3)/2 AND I RANGES FROM 1 TO 4.            CORA-007
C INPUT VARIABLES: L,LQ:   L,LQ IN THE EXPRESSIONS ABOVE                CORA-008
C                  LL:     VALUE OF L2-L1+1 WHICH MUST BE >1.           CORA-009
C                  E,F:    COULOMB PARAMETERS                           CORA-010
C                  V,W:    PRODUCT OF R WITH THE WAVE NUMBERS           CORA-011
C                  LT:     .TRUE. FOR ONLY INTEGRALS FROM 0 TO INFINITY CORA-012
C OUTPUT VARIABLES:B(4):   COEFFICIENTS B IN THE EXPRESSIONS ABOVE      CORA-013
C                  C(4):   COEFFICIENTS C                               CORA-014
C                                                                       CORA-015
C THESE RESULTS ARE OBTAINED BY EXPRESSING                              CORA-016
C H(L1)*K(L2)/R**(LQ+1)- SUM ON I OF B(I)*H(L+I-2)*K(L+I-2)/R**2        CORA-017
C AS P1*H(L)*K(L) + P2*H(L)*K(L+1) + P3*H(L+1)*K(L) + P4*H(L+1)*Q(L+1)  CORA-018
C WHERE P1,P2,P3,P4 ARE POLYNOMIAL IN 1/R AND IDENTIFICATION TERM BY    CORA-019
C TERM STARTING FROM THE HIGHEST DEGREE IN 1/R WITH THE DERIVATIVE OF   CORA-020
C  Q1*H(L)*K(L) + Q2*H(L)*K(L+1) + Q3*H(L+1)*K(L) + Q4*H(L+1)*Q(L+1)    CORA-021
C THIS AS BEEN DONE USING AMP ( J.-M. DROUFFE, AMP LANGUAGE REFERENCE   CORA-022
C MANUAL - VERSION 6 - NOTE CEA-N-2297 1982).                           CORA-023
C                                                                       CORA-024
C THE NON RELATIVISTIC RESULTS FOR LQ=6 L2-L1=0,2,4 AND ALL THE         CORA-025
C COEFFICIENTS UP TO LQ=5 HAVE BEEN OBTAINED. THIS ALLOW TRANSFER OF    CORA-026
C ANGULAR MOMENTUM UP TO 5 FOR CENTRAL TERM AND 4 FOR SPIN-ORBIT.       CORA-027
C                                                                       CORA-028
C***********************************************************************CORA-029
      IMPLICIT REAL*8 (A-H,O-Z)                                         CORA-030
      DIMENSION B(4),C(4)                                               CORA-031
      LOGICAL LT                                                        CORA-032
      COMMON /INOUT/ MR,MW,MS                                           CORA-033
      DO 1 I=1,4                                                        CORA-034
      B(I)=0.D0                                                         CORA-035
    1 C(I)=0.D0                                                         CORA-036
      IF ((LQ.GT.6).OR.(LL*(LQ-LL+2).LE.0)) GO TO 68                    CORA-037
      A=DFLOAT(L+1)                                                     CORA-038
      S=V/W                                                             CORA-039
      X=E*S-F                                                           CORA-040
      IF (DABS(X).LT.1.D-10) X=0.D0                                     CORA-041
      U=S**2-1.D0                                                       CORA-042
      IF (DABS(U).LT.1.D-10) U=0.D0                                     CORA-043
      IF ((X.EQ.0.D0).AND.(E.EQ.0.D0)) GO TO 47                         CORA-044
      P=S**2*(A**2+E**2)                                                CORA-045
      Q=A**2+F**2                                                       CORA-046
      Y=E*S+F                                                           CORA-047
      Z=E**2-F**2                                                       CORA-048
      IF (DABS(Z).LT.1.D-10) Z=0.D0                                     CORA-049
      IF (X.EQ.0.D0.AND.Z.EQ.0.D0) Z=1.D0                               CORA-050
      DEN=2.D0*X**2*(P-Q)+8.D0*Z*S**2                                   CORA-051
      Z=U                                                               CORA-052
      IF (X.EQ.0.D0.AND.Z.EQ.0.D0) Z=-1.D0/(E*F)                        CORA-053
      GO TO ( 2 , 7 , 11 , 18 , 26 , 39 ) , LQ                          CORA-054
    2 GO TO ( 3 , 4 ) , LL                                              CORA-055
C MULTIPOLE LQ=1 L1=L2                                                  CORA-056
    3 B(1)=1.D0                                                         CORA-057
      RETURN                                                            CORA-058
    4 IF ((E.NE.F).OR.(V.NE.W)) GO TO 5                                 CORA-059
C MULTIPOLE LQ=1 L1=L2-1 WITH E=F AND V=W                               CORA-060
      B1=DSQRT((A-1.D0)**2+E**2)                                        CORA-061
      B(2)=-(A-.5D0)*Q/(E*B1)                                           CORA-062
      B(3)=(A+.5D0)*Q/(E*B1)                                            CORA-063
      IF (LT) RETURN                                                    CORA-064
      C(1)=(Q+(2.D0*A-1.D0)*E/V)/(2.D0*E*V*B1)                          CORA-065
      C(3)=-DSQRT(Q)/(2.D0*V*A*B1)                                      CORA-066
      C(2)=C(3)*(2.D0*A-1.D0)                                           CORA-067
      C(4)=Q/(2.D0*E*V*B1)                                              CORA-068
      RETURN                                                            CORA-069
C MULTIPOLE LQ=1 L1=L2-1                                                CORA-070
    5 A1=-2.D0*F*(2.D0*(A-1.D0)*Q-A**2*U)                               CORA-071
      A2=F*(4.D0*Q*(A-1.D0)*((6.D0*A+1.D0)*Q-4.D0*A**2+1.D0)+U*((((16.D0CORA-072
     1*A-24.D0)*A+4.D0)*A**2-2.D0)*Q+A**2*(2.D0*A-1.D0-U*(A-1.D0)**2)*(4CORA-073
     2.D0*A+2.D0)))                                                     CORA-074
      A3=-F*(A-1.D0)*((24.D0*A-4.D0)*Q+16.D0*A**2-4.D0+U*(((8.D0*A+8.D0)CORA-075
     1*A+2.D0)*A-2.D0))                                                 CORA-076
      A4=4.D0*(A-1.D0)*F                                                CORA-077
      IF (X.EQ.0.D0) GO TO 6                                            CORA-078
      A1=A1-X*(Q*(A-1.D0)*(2.D0*A+6.D0)+A**2*(4.D0+A*U)+X*((2.D0*A-2.D0)CORA-079
     1*F+A*X))                                                          CORA-080
      A2=A2+X*(Q*((A-1.D0)*(A+5.D0)*(12.D0*A+2.D0)*Q-(((40.D0*A-16.D0)*ACORA-081
     1-34.D0)*A-8.D0)*A-6.D0+(((((8.D0*A+12.D0)*A-38.D0)*A+8.D0)*A+5.D0)CORA-082
     2*A-4.D0)*U+(((16.D0*A+40.D0)*A-44.D0)*A-12.D0)*F*X+(((4.D0*A+20.D0CORA-083
     3)*A-13.D0)*A-8.D0)*X**2)+(2.D0*A+1.D0)*(A**2*(4.D0-8.D0*A+((6.D0*ACORA-084
     4-7.D0)*A+4.D0)*U+A*(A-1.D0)**2*U**2)+X*(((4.D0*A+6.D0)*A-2.D0+(A-1CORA-085
     5.D0)*((4.D0*A-4.D0)*A+2.D0)*U)*F+X*(A*(((2.D0*A-2.D0)*A+1.D0)*U-(4CORA-086
     6.D0*A-6.D0)*A+1.D0)+(4.D0*A-2.D0)*F*X+A*X**2))))                  CORA-087
      A3=A3+X*(A-1.D0)*(((8.D0*A-8.D0)*A+6.D0)*A+2.D0-(2.D0*A+6.D0)*(6.DCORA-088
     10*A-1.D0)*Q-((((4.D0*A+12.D0)*A+5.D0)*A-3.D0)*A-2.D0)*U-2.D0*X*(((CORA-089
     24.D0*A+8.D0)*A-3.D0)*F-X))                                        CORA-090
      A4=A4+X*2.D0*(A**2-1.D0)                                          CORA-091
    6 BD=.5D0*DEN*DSQRT((A-1.D0)**2+E**2)                               CORA-092
      IF (.NOT.LT) C(1)=.5D0-A                                          CORA-093
      GO TO 46                                                          CORA-094
    7 GO TO ( 8 , 9 , 10 ) , LL                                         CORA-095
C MULTIPOLE LQ=2 L1=L2                                                  CORA-096
    8 A1=2.D0*Z*A**2*Y                                                  CORA-097
      A2=-Z*Y*(2.D0*A+1.D0)*(((A-1.D0)*A-.5D0)*Y**2+2.D0*A**2*(A-1.D0)**CORA-098
     12*(S**2+1.D0))                                                    CORA-099
      A3=2.D0*Z*(2.D0*A+1.D0)*(A-1.D0)**2*Y                             CORA-100
      A4=0.D0                                                           CORA-101
      BD=DEN*(A-1.D0)/DSQRT(S)                                          CORA-102
      IF (.NOT.LT) C(1)=-1.D0                                           CORA-103
      IF (X.EQ.0) GO TO 46                                              CORA-104
      A1=A1+X*(4.D0*F*E*S-2.D0*A*(A+Q+A*S**2+P))                        CORA-105
      A2=A2+X*((A+.5D0)*((((4.D0*A-6.D0)*A+2.D0)*A-1.D0)*(Q+P*S**2)+4.D0CORA-106
     1*(2.D0*A-3.D0)*F*E*S*(Q+P+S**2+1.D0)+(((4.D0*A+2.D0)*A-14.D0)*A+1.CORA-107
     2D0)*(Q*S**2+P)+A**2*((S**4+1.D0)*((2.D0*A-6.D0)*A+5.D0)-S**2*(4.D0CORA-108
     3*(A+1.D0)*A-14.D0)))+P*Q*((8.D0*A-4.D0)*A+8.D0))                  CORA-109
      A3=A3-2.D0*X*(A-1.D0)*((2.D0*A-3.D0)*(F**2+E**2*S**2)+4.D0*(2.D0*ACORA-110
     1+1.D0)*F*E*S+(S**2+1.D0)*(A+1.D0)*((6.D0*A+1.D0)*A-3.D0))         CORA-111
      A4=4.D0*(A-1.D0)*X                                                CORA-112
      GO TO 46                                                          CORA-113
C MULTIPOLE LQ=2 L1=L2-1                                                CORA-114
    9 B1=X*(A-1.D0)-E*S                                                 CORA-115
      B3=-(A-1.D0)**2                                                   CORA-116
      B2=B3/(A-.5D0)                                                    CORA-117
      BD=-DEN*A*(A-1.D0)*(2.D0*A-3.D0)*DSQRT(S*((A-1.D0)**2+E**2))/(2.D0CORA-118
     1*A-1.D0)                                                          CORA-119
      IF (LT) GO TO 13                                                  CORA-120
      C(1)=B1+2.D0*A*(A-1.D0)**2/W                                      CORA-121
      C(2)=B3                                                           CORA-122
      C(3)=B2                                                           CORA-123
      GO TO 13                                                          CORA-124
C MULTIPOLE LQ=2 L1=L2-2                                                CORA-125
   10 B1=Q                                                              CORA-126
      B3=-3.D0*E*S-X*(A-1.D0)                                           CORA-127
      B4=(A-1.D0)/(A-.5D0)                                              CORA-128
      BD=-3.D0*DEN*A*DSQRT(S*Q*((A-1.D0)**2+E**2))/(2.D0*A-1.D0)        CORA-129
      IF (LT) GO TO 15                                                  CORA-130
      C(1)=B1                                                           CORA-131
      C(2)=B3-2.D0*A*(A-1.D0)/W                                         CORA-132
      C(4)=B4                                                           CORA-133
      GO TO 15                                                          CORA-134
   11 GO TO ( 12 , 14 , 16 , 17 ) , LL                                  CORA-135
C MULTIPOLE LQ=3 L1=L2                                                  CORA-136
   12 B1=Y/(A-1.D0)                                                     CORA-137
      B2=1.D0                                                           CORA-138
      B3=1.D0                                                           CORA-139
      BD=DEN*A*(2.D0*A-3.D0)                                            CORA-140
      IF (LT) GO TO 13                                                  CORA-141
      C(1)=B1-2.D0*A/W                                                  CORA-142
      C(2)=B3                                                           CORA-143
      C(3)=B2                                                           CORA-144
   13 A1=-2.D0*A**2*Y*B1*Z                                              CORA-145
      A2=Y*((2.D0*A+1.D0)*((2.D0*(A**2-A)**2*(1.D0+S**2)+Y**2*(A**2-A-.5CORA-146
     1D0))*B1-Y*(P*B2+Q*B3)))*Z                                         CORA-147
      A3=-Y*((2.D0*A-1.D0)*(-Y*(B2+B3))+(4.D0*A+2.D0)*(A-1.D0)**2*B1)*Z CORA-148
      A4=0.D0                                                           CORA-149
      IF (X.EQ.0.D0) GO TO 46                                           CORA-150
      A1=A1+X*2.D0*P*(A*X-2.D0*F)*B2                                    CORA-151
      A2=A2+X*P*(2.D0*Q*((2.D0*A+3.D0)*(A+1.D0)*F+((2.D0*A+3.D0)*A-4.D0)CORA-152
     1*E*S)-2.D0*P*(2.D0*A-3.D0)*(2.D0*A+1.D0)*F+(2.D0*A+1.D0)*((((2.D0*CORA-153
     2A-1.D0)*A-8.D0)*A+5.D0)*F-S*((A+1.D0)*((6.D0*A-9.D0)*A+1.D0)*E-S*(CORA-154
     3(6.D0*A-7.D0)*(A**2-1.D0)*F-S*((((2.D0*A-5.D0)*A+2.D0)*A-1.D0)*E))CORA-155
     4)))*B2                                                            CORA-156
      A3=A3+X*(2.D0*P*((2.D0*A-3.D0)*(A-1.D0)*E*S+F*((2.D0*A-3.D0)*A-4.DCORA-157
     10))-2.D0*Q*E*S*(2.D0*A+3.D0)*(2.D0*A-1.D0)-(2.D0*A-1.D0)*((((2.D0*CORA-158
     2A+5.D0)*A+2.D0)*A+1.D0)*F-S*((6.D0*A+7.D0)*(A**2-1.D0)*E-S*((A-1.DCORA-159
     30)*((6.D0*A+9.D0)*A+1.D0)*F-S*((((2.D0*A+1.D0)*A-8.D0)*A-5.D0)*E))CORA-160
     4)))*B2                                                            CORA-161
      IF (LQ.EQ.3) GO TO 45                                             CORA-162
      A4=A4+X*2.D0*(2.D0*E*S-A*X)*B2                                    CORA-163
      GO TO 44                                                          CORA-164
C MULTIPOLE LQ=3 L1=L2-1                                                CORA-165
   14 B1=Q/(A-1.D0)                                                     CORA-166
      B3=-X                                                             CORA-167
      B4=1.D0/(A+1.D0)                                                  CORA-168
      BD=-3.D0*DEN*A*DSQRT(Q)                                           CORA-169
      IF (LT) GO TO 15                                                  CORA-170
      C(1)=B1                                                           CORA-171
      C(2)=B3-2.D0*A/W                                                  CORA-172
      C(4)=B4                                                           CORA-173
   15 A1=-2.D0*A**2*Y*B1*Z                                              CORA-174
      A2=Y*((2.D0*A+1.D0)*((2.D0*(A**2-A)**2*(1.D0+S**2)+Y**2*(A**2-A-.5CORA-175
     1D0))*B1-Y*Q*B3)+(4.D0*A-2.D0)*(A+1.D0)**2*P*Q*B4)*Z               CORA-176
      A3=-Y*((2.D0*A-1.D0)*((2.D0*(A**2+A)**2*(1.D0+S**2)+Y**2*(A**2+A-.CORA-177
     15D0))*B4-Y*B3)+(4.D0*A+2.D0)*(A-1.D0)**2*B1)*Z                    CORA-178
      A4=2.D0*A**2*Y*B4*Z                                               CORA-179
      IF (X.EQ.0.D0) GO TO 46                                           CORA-180
      A1=A1-X*4.D0*P*Q*(A+1.D0)*B4                                      CORA-181
      A2=A2+X*2.D0*P*Q*(A+1.D0)*((2.D0*A+3.D0)*(Q+P)+(2.D0*A-1.D0)*(4.D0CORA-182
     1*E*F*S+(1.D0+S**2)*((2.D0*A-4.D0)*A-3.D0)))*B4                    CORA-183
      A3=A3+X*(-4.D0*P*Q*((2.D0*A+1.D0)*A+2.D0)-(2.D0*A-1.D0)*(2.D0*S*E*CORA-184
     1F*(2.D0*A+3.D0)*(Q+P+S**2+1.D0)-A**2*(((A+3.D0)*A+2.5D0)*(1.D0+S**CORA-185
     24)-S**2*((2.D0*A-2.D0)*A-7.D0))+A*(A-1.D0)*(2.D0*A+3.D0)*(1.D0+S**CORA-186
     32)*(P+Q)-(S**2-1.D0)*((2.D0*A+4.D0)*A+.5D0)*(Q-P)))*B4            CORA-187
      A4=A4+X*2.D0*((A-1.D0)*(P+Q)+Y**2)*B4                             CORA-188
      GO TO 44                                                          CORA-189
C MULTIPOLE LQ=3 L1=L2-2                                                CORA-190
   16 B1=-Q*(2.D0*A-1.D0)*((2.D0*A-3.D0)*(A+1.D0)*X+(A-3.D0)*Y)/(A-1.D0)CORA-191
      B2=6.D0*Q*(A-1.D0)                                                CORA-192
      B3=((A-1.D0)*(6.D0*A-3.D0)*Q+(2.D0*A-1.D0)*((A+1.D0)*X+2.D0*Y)*(2.CORA-193
     1D0*A-3.D0)*X-(A-1.D0)*(6.D0*A-9.D0)*P)                            CORA-194
      B4=-((2.D0*A-1.D0)*X+Y)*(2.D0*A-3.D0)                             CORA-195
      BD=12.D0*A**2*(2.D0*A-3.D0)*DEN*S*DSQRT(Q*((A-1.D0)**2+E**2))     CORA-196
      IF (LT) GO TO 43                                                  CORA-197
      C(1)=B1-6.D0*Q*A*(A-1.D0)*(2.D0*A-1.D0)/W                         CORA-198
      C(2)=B3+A*(4.D0*A-6.D0)*(2.D0*A-1.D0)*((A+1.D0)*X+2.D0*Y+3.D0*A*(ACORA-199
     1-1.D0)/W)/W                                                       CORA-200
      C(3)=B2                                                           CORA-201
      C(4)=B4-6.D0*A*(A-1.D0)*(2.D0*A-3.D0)/W                           CORA-202
      GO TO 43                                                          CORA-203
C MULTIPOLE LQ=3 L1=L2-3                                                CORA-204
   17 B1=-Q*(3.D0*E*S*Y+A*(3.D0*X*Y+2.D0*(A+1.D0)*(X**2+2.D0*A-1.D0-2.D0CORA-205
     1*(A-1.D0)*S**2)))                                                 CORA-206
      B2=3.D0*Q*(A*X+Y)                                                 CORA-207
      B4=-(3.D0*F*Y+A*(3.D0*X*Y+2.D0*(A-1.D0)*(X**2+2.D0*A+2.D0-(2.D0*A+CORA-208
     11.D0)*S**2)))                                                     CORA-209
      B3=-X*B4*(A+1.D0)+3.D0*Q*(Y+A*X)+A*(3.D0*A+1.5D0)*(1.D0-S**2)*((3.CORA-210
     1D0*A-2.D0)*Y+((A-2.D0)*A+2.D0)*X)                                 CORA-211
      BD=30.D0*A**2*DEN*S*DSQRT(Q*((A-1.D0)**2+E**2)*((A+1.D0)**2+F**2))CORA-212
      IF (LT) GO TO 43                                                  CORA-213
      C(1)=B1-3.D0*Q*(2.D0*A-1.D0)*((6.D0*A+4.D0)*F+(A+1.D0)*(A+4.D0)*X+CORA-214
     14.D0*A*(A**2-1.D0)/W)/W                                           CORA-215
      C(2)=B3+((4.D0*A**2*(A**2-1.D0)*(2.D0*A-1.D0-S**2*(2.D0*A+1.D0))+(CORA-216
     118.D0*A**2-3.D0)*Y**2+A*(12.D0*A**2+3.D0)*X*Y+(A**2-1.D0)*(4.D0*A*CORA-217
     2*2-3.D0)*X**2)+3.D0*A*(4.D0*A**2-1.D0)*(5.D0*A*Y+(A**2+4.D0)*X+4.DCORA-218
     30*A*(A**2-1.D0)/W)/W)/W                                           CORA-219
      C(3)=B2+12.D0*Q*(A**2-1.D0)/W                                     CORA-220
      C(4)=B4-3.D0*(2.D0*A+1.D0)*((6.D0*A-4.D0)*F+A*(A+1.D0)*X+4.D0*A*(ACORA-221
     1**2-1.D0)/W)/W                                                    CORA-222
      GO TO 43                                                          CORA-223
   18 GO TO ( 19 , 20 , 21 , 22 , 24 ) , LL                             CORA-224
C MULTIPOLE LQ=4 L1=L2                                                  CORA-225
   19 B1=-P*Q*(2.D0*A+3.D0)/(A-1.D0)                                    CORA-226
      B2=-Q*(3.D0*E*S+A*X)                                              CORA-227
      B3=-P*(3.D0*F-A*X)                                                CORA-228
      B4=-((P+Q)*(A+1.5D0)-1.5D0*Y**2)/(A+1.D0)                         CORA-229
      BD=3.D0*DEN*A**2*(2.D0*A+3.D0)*(A+2.D0)*DSQRT(S*P*Q)              CORA-230
      IF (LT) GO TO 43                                                  CORA-231
      C(1)=B1                                                           CORA-232
      C(2)=(B3+P*A*(2.D0*A+3.D0)/W)                                     CORA-233
      C(3)=(B2+Q*A*(2.D0*A+3.D0)/W)                                     CORA-234
      C(4)=(B4-3.D0*A*(Y-A*(2.D0*A+3.D0)/W)/W)                          CORA-235
      GO TO 43                                                          CORA-236
C MULTIPOLE LQ=4 L1=L2-1                                                CORA-237
   20 B1=Q*(3.D0*E*S-A*X)*(4.D0*A+6.D0)/(A-1.D0)                        CORA-238
      B2=18.D0*Q                                                        CORA-239
      B3=((2.D0*A+3.D0)*(3.D0*Q+(2.D0*A-3.D0)*X**2)-(6.D0*A-9.D0)*P)    CORA-240
      B4=(3.D0*F-A*X)*(4.D0*A-6.D0)/(A+1.D0)                            CORA-241
      BD=12.D0*DEN*A**2*DSQRT(S*Q)*(4.D0*A**2-9.D0)                     CORA-242
      IF (LT) GO TO 43                                                  CORA-243
      C(1)=B1-6.D0*Q*A*(2.D0*A+3.D0)/W                                  CORA-244
      C(2)=B3+2.D0*A*(4.D0*A**2-9.D0)*(X+3.D0*A/W)/W                    CORA-245
      C(3)=B2                                                           CORA-246
      C(4)=B4-6.D0*A*(2.D0*A-3.D0)/W                                    CORA-247
      GO TO 43                                                          CORA-248
C MULTIPOLE LQ=4 L1=L2-2                                                CORA-249
   21 B1=((2.D0*A-E**2)*S**2+(A+2.D0)*(2.D0*E*F*S-A*(2.D0*A+2.D0+F**2)/(CORA-250
     1A-1.D0))/(A+1.D0))                                                CORA-251
      B2=6.D0*Q*((A+1.D0)*X-3.D0*F)                                     CORA-252
      B3=(-X*(4.D0*A+6.D0)*B1*(A**2-1.D0)+3.D0*(P*((2.D0*A+5.D0)*X-3.D0*CORA-253
     1Y)+(1.D0-S**2)*A*(A+2.D0)*(2.D0*A+3.D0)*(A*X+E*S)))               CORA-254
      B4=((4.D0*A+6.D0)*(B1*(A-1.D0)+3.D0*A*(S**2-1.D0))+3.D0*Y*(3.D0*Y-CORA-255
     1(2.D0*A+5.D0)*X)/(A+1.D0))                                        CORA-256
      B1=Q*(A+1.D0)*(4.D0*A+6.D0)*B1                                    CORA-257
      BD=60.D0*DEN*A**2*(A+2.D0)*(2.D0*A+3.D0)*DSQRT(S*Q*((A+1.D0)**2+F*CORA-258
     1*2))                                                              CORA-259
      IF (LT) GO TO 43                                                  CORA-260
      C(1)=B1-6.D0*Q*(A+2.D0)*(2.D0*A+3.D0)*(E*S+A*(X+4.D0*(A+1.D0)/W))/CORA-261
     1W                                                                 CORA-262
      C(2)=B3+2.D0*(2.D0*A+3.D0)*(6.D0*E*F*S+A*(F*((2.D0*A+13.D0)*X+6.D0CORA-263
     1*F)+(A+1.D0)*(2.D0*A*(2.D0*A+4.D0-(2.D0*A+1.D0)*S**2)+(2.D0*A+1.D0CORA-264
     2)*X**2))+3.D0*A*(A+2.D0)*(2.D0*A+1.D0)*((A+1.D0)*X+5.D0*F+A*(4.D0*CORA-265
     2A+4.D0)/W)/W)/W                                                   CORA-266
      C(3)=B2+12.D0*Q*(A+1.D0)*(2.D0*A+3.D0)/W                          CORA-267
      C(4)=B4-(12.D0*A+6.D0)*((A+6.D0)*F+A*(A+1.D0)*(X+(4.D0*A+6.D0)/W))CORA-268
     1/W                                                                CORA-269
      GO TO 43                                                          CORA-270
C MULTIPOLE LQ=4 L1=L2-3                                                CORA-271
   22 B1=F*Q*(12.D0*(Q-(2.D0*A-1.D0)*(2.D0*A-5.D0))/((2.D0*A-3.D0)*(A-1.CORA-272
     1D0))+(26.D0*A-10.D0)*U)                                           CORA-273
      B2=Q*(36.D0*(Q+4.D0*A**2-5.D0)/(2.D0*A-3.D0)-30.D0*(A**2-1.D0)*U)/CORA-274
     1(2.D0*A+3.D0)                                                     CORA-275
      B3=B2+U*(A**2*(6.D0*A+3.D0)*((4.D0*A+10.D0)+5.D0*(A**2-1.D0)*U)-18CORA-276
     1.D0*Q*A*(3.D0*A+4.D0))/(2.D0*A+3.D0)                              CORA-277
      B4=F*(12.D0*(Q-(2.D0*A+5.D0)*(2.D0*A+1.D0))+U*(4.D0*A+2.D0)*((13.DCORA-278
     10*A+22.D0)*A-15.D0))/((A+1.D0)*(2.D0*A+3.D0))                     CORA-279
      IF (X.EQ.0.D0) GO TO 23                                           CORA-280
      B1=B1-2.D0*Q*X*((6.D0*Q*(A-2.D0)+(((28.D0*A-30.D0)*A-46.D0)*A+30.DCORA-281
     10))/((2.D0*A-3.D0)*(A-1.D0))-(A+1.D0)*((9.D0*A-5.D0)*U-2.D0*X**2))CORA-282
      B2=B2-12.D0*Q*X*(F-X*(A+1.D0))/(2.D0*A+3.D0)                      CORA-283
      B3=B3+X*(24.D0*Q*(A*X-F)+(2.D0*A+1.D0)*(12.D0*(2.D0*A+5.D0)*F-((44CORA-284
     1.D0*A+80.D0)*A-30.D0)*F*U+X*A*(28.D0*A+52.D0-U*(24.D0*A+2.D0)*(A+1CORA-285
     2.D0))+12.D0*F*X**2+4.D0*A*X**3*(A+1.D0)))/(2.D0*A+3.D0)           CORA-286
      B4=B4-X*(12.D0*(A-1.D0)*Q+(4.D0*A+2.D0)*(6.D0*F*X+A*(14.D0*A+26.D0CORA-287
     1-(A+1.D0)*((9.D0*A+1.D0)*U-2.D0*X**2))))/((2.D0*A+3.D0)*(A+1.D0)) CORA-288
   23 BD=360.D0*DEN*A**2*S*DSQRT(S*Q*((A+1.D0)**2+F**2)*((A-1.D0)**2+E**CORA-289
     12))                                                               CORA-290
      IF (LT) GO TO 43                                                  CORA-291
      C(1)=B1+Q*(12.D0*(A*(2.D0*A-1.D0)*(2.D0*A-5.D0)-Q*(9.D0*A-12.D0))/CORA-292
     1(2.D0*A-3.D0)+30.D0*A*U*(A**2-1.D0)-24.D0*(2.D0*A-1.D0)*(F*(7.D0*ACORA-293
     2+5.D0)+5.D0*A*(A**2-1.D0)/W)/W)/W                                 CORA-294
      C(2)=B3+(F*(48.D0*Q-8.D0*A*U*(2.D0*A+1.D0)*(7.D0*A-5.D0))+6.D0*(10CORA-295
     1.D0*Q*(11.D0*A**2-2.D0)-A**2*(2.D0*A+1.D0)*(30.D0*(2.D0*A-1.D0)+5.CORA-296
     2D0*U*(A**2-1.D0)-(8.D0*A-4.D0)*(12.D0*F+5.D0*(A**2-1.D0)/W)/W))/W)CORA-297
     3/W                                                                CORA-298
      C(3)=B2+24.D0*Q*(2.D0*F+5.D0*(A**2-1.D0)/W)/W                     CORA-299
      C(4)=B4+((12.D0*A*(2.D0*A+1.D0)*(2.D0*A+5.D0)-36.D0*Q*(3.D0*A+4.D0CORA-300
     1)+30.D0*A*U*(2.D0*A+1.D0)*(A**2-1.D0))/(2.D0*A+3.D0)-24.D0*(2.D0*ACORA-301
     2+1.D0)*(F*(7.D0*A-5.D0)+5.D0*A*(A**2-1.D0)/W)/W)/W                CORA-302
      IF (X.EQ.0.D0) GO TO 43                                           CORA-303
      C(1)=C(1)-12.D0*X*Q*((A+2.D0)*(3.D0*F+(A+1.D0)*X)+(4.D0*A-2.D0)*(ACORA-304
     1+1.D0)*(A+5.D0)/W)/W                                              CORA-305
      C(2)=C(2)+X*((12.D0*Q*(5.D0*A+6.D0)+(2.D0*A+1.D0)*(12.D0*F*X*(A+2.CORA-306
     1D0)-2.D0*A*(4.D0*A+10.D0+(A+1.D0)*(U*(9.D0*A-5.D0)-2.D0*X**2))))+1CORA-307
     22.D0*(2.D0*A+1.D0)*(F*((7.D0*A+24.D0)*A-10.D0)+A*(A+1.D0)*((A+2.D0CORA-308
     3)*X+(4.D0*A-2.D0)*(A+5.D0)/W))/W)/W                               CORA-309
      C(3)=C(3)+24.D0*X*Q*(A+1.D0)/W                                    CORA-310
      C(4)=C(4)-12.D0*X*(2.D0*A+1.D0)*((3.D0*F*(A+2.D0)+A*X*(A+1.D0))/(2CORA-311
     1.D0*A+3.D0)+2.D0*A*(A+1.D0)/W)/W                                  CORA-312
      GO TO 43                                                          CORA-313
C MULTIPOLE LQ=4 L1=L2-4                                                CORA-314
   24 B1=6.D0*Q*(Q*((42.D0*A+3.D0)*U-36.D0)+A*(24.D0*A-12.D0-U*((34.D0*ACORA-315
     1+3.D0)*A+8.D0)-(8.D0*A+12.D0)*(A**2-1.D0)*U**2))                  CORA-316
      B2=18.D0*Q*(12.D0-U*(9.D0*A+1.D0))*F                              CORA-317
      B3=9.D0*F*(Q*(24.D0-U*(38.D0*A+2.D0))+U*A*(2.D0*A+1.D0)*(A+1.D0)*(CORA-318
     14.D0+(17.D0*A-12.D0)*U))                                          CORA-319
      B4=6.D0*(Q*((42.D0*A+3.D0)*U-36.D0)+A*(2.D0*A+1.D0)*(12.D0-(17.D0*CORA-320
     1A-2.D0)*U-U**2*(4.D0*A+6.D0)*(A-1.D0)))                           CORA-321
      IF (X.EQ.0.D0) GO TO 25                                           CORA-322
      B1=B1-Q*X*(X*(24.D0*Q+(56.D0*A+188.D0)*A+108.D0)+108.D0*(2.D0*A+3.CORA-323
     1D0)*F-2.D0*(2.D0*A+3.D0)*(58.D0*A+7.D0)*F*U-2.D0*(A+1.D0)*(2.D0*A+CORA-324
     23.D0)*(15.D0*A+4.D0)*U*X+12.D0*(2.D0*A+3.D0)*F*X**2+4.D0*(A+1.D0)*CORA-325
     3(2.D0*A+3.D0)*X**3)                                               CORA-326
      B2=B2+Q*X*(24.D0*F*X+(A+1.D0)*(108.D0-(66.D0*A+24.D0)*U+12.D0*X**2CORA-327
     1))                                                                CORA-328
      B3=B3+X*(24.D0*F*Q*X+(A+1.D0)*(Q*(324.D0+36.D0*X**2-(498.D0*A+42.DCORA-329
     10)*U)+(2.D0*A+1.D0)*(F*X*(108.D0-(152.D0*A+24.D0)*U+12.D0*X**2)-A*CORA-330
     2(72.D0-(168.D0*A-12.D0)*U-((57.D0*A+24.D0)*A-36.D0)*U**2-X**2*(28.CORA-331
     3D0-(36.D0*A+20.D0)*U+4.D0*X**2)))))                               CORA-332
      B4=B4+X*(X*(A*(2.D0*A+1.D0)*(30.D0*A+20.D0)*U-24.D0*Q)-(8.D0*A+4.DCORA-333
     10)*(F*(27.D0-(29.D0*A+6.D0)*U)+X*(7.D0*A+3.D0*F*X+A*X**2)))       CORA-334
   25 BD=2520.D0*DEN*A**2*S*DSQRT(S*Q*((A+1.D0)**2+F**2)*((A-1.D0)**2+E*CORA-335
     1*2)*((A+2.D0)**2+F**2))                                           CORA-336
      IF (LT) GO TO 43                                                  CORA-337
      C(1)=B1+18.D0*Q*(F*((A-1.D0)*(8.D0*A-4.D0)-20.D0*Q+(2.D0*A+3.D0)*(CORA-338
     1(17.D0*A-3.D0)*A-4.D0)*U)-4.D0*(15.D0*Q*((4.D0*A+4.D0)*A-1.D0)-A*(CORA-339
     22.D0*A-1.D0)*((34.D0*A+55.D0)*A+16.D0)-(2.D0*A+3.D0)*(2.D0*A*U*(A+CORA-340
     31.D0)*(A-1.D0)*(A+2.D0)-5.D0*(2.D0*A-1.D0)*(F*((5.D0*A+5.D0)*A+4.DCORA-341
     40)+2.D0*A*(A**2-1.D0)*(A+2.D0)/W)/W))/W)/W                        CORA-342
      C(2)=B3+(360.D0*Q**2-72.D0*Q*(4.D0*A**2+1.D0)-24.D0*(A+1.D0)*U*(Q*CORA-343
     1((66.D0*A-12.D0)*A-9.D0)-A**2*(2.D0*A+1.D0)*(34.D0*A-19.D0+U*(A-1.CORA-344
     2D0)*(2.D0*A+3.D0)))+18.D0*(20.D0*Q*F*((20.D0*A+14.D0)*A-3.D0)-(A+1CORA-345
     3.D0)*(A*F*((4.D0*A**2-1.D0)*140.D0+U*(10.D0*A+15.D0)*(2.D0*A+1.D0)CORA-346
     4*(5.D0*A-4.D0))-4.D0*(10.D0*Q*(((30.D0*A+19.D0)*A-1.D0)*A-6.D0)-A*CORA-347
     5*2*(2.D0*A+1.D0)*((2.D0*A-1.D0)*(84.D0*A+56.D0)+(2.D0*A+3.D0)*((2.CORA-348
     6D0*A-2.D0)*(A+2.D0)*U-(10.D0*A-5.D0)*(7.D0*F+2.D0*(A-1.D0)*(A+2.D0CORA-349
     7)/W)/W)))/W))/W)/W                                                CORA-350
      C(3)=B2+72.D0*Q*(5.D0*Q-4.D0*A**2-1.D0-(2.D0*A+3.D0)*((A**2-1.D0)*CORA-351
     1U-5.D0*(F*(3.D0*A-1.D0)+2.D0*(A**2-1.D0)*(A+2.D0)/W)/W))/W        CORA-352
      C(4)=B4-18.D0*(20.D0*Q*F-(A+1.D0)*((2.D0*A+1.D0)*F*(4.D0+U*(17.D0*CORA-353
     1A-12.D0))-4.D0*(15.D0*Q*(4.D0*A-1.D0)-(2.D0*A+1.D0)*(A*(34.D0*A-19CORA-354
     2.D0)+(2.D0*A+3.D0)*(A*(A-1.D0)*U-5.D0*(F*(5.D0*A-4.D0)+2.D0*A*(A-1CORA-355
     3.D0)*(A+2.D0)/W)/W)))/W))/W                                       CORA-356
      IF (X.EQ.0.D0) GO TO 43                                           CORA-357
      C(1)=C(1)-6.D0*Q*X*((A+2.D0)*(60.D0*Q-(44.D0*A-10.D0)*A-6.D0-(2.D0CORA-358
     1*A+3.D0)*((A+1.D0)*((11.D0*A-6.D0)*U-2.D0*X**2)-12.D0*F*X))+(8.D0*CORA-359
     2A+12.D0)*(((20.D0*A+90.D0)*A-5.D0)*F+(A+1.D0)*(A+2.D0)*((2.D0*A+5.CORA-360
     3D0)*X+(10.D0*A-5.D0)*(A+6.D0)/W))/W)/W                            CORA-361
      C(2)=C(2)+X*((2.D0*A+3.D0)*(240.D0*F*Q+(A+1.D0)*(144.D0*Q*X-(2.D0*CORA-362
     1A+1.D0)*((24.D0-24.D0*X**2+(182.D0*A-72.D0)*U)*F+A*X*(44.D0+(30.D0CORA-363
     2*A+8.D0)*U-4.D0*X**2))))+(A+1.D0)*(Q*((2400.D0*A+8400.D0)*A-360.D0CORA-364
     3)-(24.D0*A+12.D0)*(A*((102.D0*A+357.D0)*A-114.D0)-(2.D0*A+3.D0)*((CORA-365
     4A+2.D0)*(10.D0*F*X+A*(X**2-(5.5D0*A-3.D0)*U))+(F*((60.D0*A+270.D0)CORA-366
     5*A-120.D0)+A*(A+2.D0)*(X*(4.D0*A+10.D0)+(20.D0*A-10.D0)*(A+6.D0)/WCORA-367
     6))/W)))/W)/W                                                      CORA-368
      C(3)=C(3)+24.D0*X*Q*(2.D0*A+3.D0)*(5.D0*F+(A+1.D0)*(X+5.D0*(A+2.D0CORA-369
     1)/W))/W                                                           CORA-370
      C(4)=C(4)-6.D0*X*(A+1.D0)*(60.D0*Q-(2.D0*A+1.D0)*(22.D0*A+(11.D0*ACORA-371
     1+4.D0)*A*U-12.D0*F*X-2.D0*A*X**2-(8.D0*A+12.D0)*(10.D0*F+A*(X+5.D0CORA-372
     2*(A+2.D0)/W))/W))/W                                               CORA-373
      GO TO 43                                                          CORA-374
   26 GO TO ( 27 , 29 , 31 , 33 , 35 , 37 ) , LL                        CORA-375
C MULTIPOLE LQ=5 L1=L2                                                  CORA-376
   27 BD=12.D0*DEN*A**2*(A+2.D0)*(2.D0*A+5.D0)*(4.D0*A**2-9.D0)*S*DSQRT(CORA-377
     1P*Q)                                                              CORA-378
      B1=28.D0*P*Q*F*(2.D0*A+3.D0)/(A-1.D0)                             CORA-379
      B2=Q*(84.D0*Q-A*(48.D0*A-72.D0-U*(A+2.D0)*(6.D0*A+27.D0)))        CORA-380
      B3=P*(84.D0*Q-A*(6.D0*A-9.D0)*(8.D0+(A+2.D0)*U))                  CORA-381
      B4=(4.D0*A-6.D0)*(14.D0*Q+A*(24.D0+(7.D0*A+12.D0)*U))*F/(A+1.D0)  CORA-382
      IF (X.EQ.0.D0) GO TO 28                                           CORA-383
      B1=B1+(28.D0*A+42.D0)*X*P*Q/(A-1.D0)                              CORA-384
      B2=B2+Q*X*((28.D0*A+126.D0)*F+((4.D0*A+22.D0)*A+42.D0)*X)         CORA-385
      B3=B3-P*X*(2.D0*A-3.D0)*(14.D0*F-2.D0*A*X)                        CORA-386
      B4=B4+X*(4.D0*A-6.D0)*(21.D0*Q-A*(14.D0*A-12.D0+(A**2-3.D0)*U)-X*(CORA-387
     1(2.D0*A-7.D0)*F+A*X))/(A+1.D0)                                    CORA-388
   28 IF (LT) GO TO 43                                                  CORA-389
      C(1)=B1-P*Q*(A+2.D0)*(24.D0*A+36.D0)/W                            CORA-390
      C(2)=B3-P*(4.D0*A**2-9.D0)*(8.D0*F-A*(6.D0*A+12.D0)/W)/W          CORA-391
      C(3)=B2-Q*(4.D0*A**2-9.D0)*(8.D0*F-A*(6.D0*A+12.D0)/W)/W          CORA-392
      C(4)=B4-(12.D0*A-18.D0)*((2.D0*A-4.D0)*Q+A*(A*(8.D0+(A+2.D0)*U)+(8CORA-393
     1.D0*A+12.D0)*(F-(A+2.D0)*A/W)/W))/W                               CORA-394
      IF (X.EQ.0.D0) GO TO 43                                           CORA-395
      C(3)=C(3)-X*Q*(8.D0*A**2-18.D0)*(A+4.D0)/W                        CORA-396
      C(2)=C(2)+X*P*A*(8.D0*A**2-18.D0)/W                               CORA-397
      C(4)=C(4)-X*(12.D0*A-18.D0)*((2.D0*A-4.D0)*F+A*(X+(4.D0*A+6.D0)/W)CORA-398
     1)/W                                                               CORA-399
      GO TO 43                                                          CORA-400
C MULTIPOLE LQ=5 L1=L2-1                                                CORA-401
   29 BD=-60.D0*A**2*(2.D0*A+5.D0)*(2.D0*A+3.D0)*(A+3.D0)*(A+2.D0)*DEN*SCORA-402
     1*DSQRT(P*Q*((A+1.D0)**2+F**2))                                    CORA-403
      B1=P*Q*(4.D0*A+6.D0)*((28.D0*Q-(12.D0*A-56.D0)*A+40.D0)/(A-1.D0)-(CORA-404
     12.D0*A+5.D0)*(A+1.D0)*U)                                          CORA-405
      B2=Q*F*(168.D0*Q+480.D0*A+240.D0+((48.D0*A+120.D0)*A+30.D0)*U)    CORA-406
      B3=P*F*(168.D0*Q+480.D0*A+240.D0-(12.D0*A+6.D0)*((2.D0*A+2.D0)*A-5CORA-407
     1.D0)*U)                                                           CORA-408
      B4=((2.D0*A-3.D0)*(56.D0*Q-(24.D0*A-208.D0)*A+80.D0-(((4.D0*A-18.DCORA-409
     10)*A-52.D0)*A-10.D0)*U)*Q+A**2*(2.D0*A+1.D0)*(480.D0-((24.D0*A-56.CORA-410
     2D0)*A-180.D0)*U-(2.D0*A+5.D0)*(2.D0*A+3.D0)*(A+1.D0)*U**2))/(A+1.DCORA-411
     30)                                                                CORA-412
      IF (X.EQ.0.D0) GO TO 30                                           CORA-413
      B1=B1-X*P*Q*(4.D0*A+6.D0)*(7.D0*F-X*(A+1.D0))                     CORA-414
      B2=B2+X*Q*((14.D0*A+210.D0)*Q-(56.D0*A-380.D0)*A+240.D0-(6.D0*A+6.CORA-415
     1D0)*(A**2-5.D0)*U-(12.D0*A-36.D0)*F*X-(6.D0*A+6.D0)*X**2)         CORA-416
      B3=B3-X*P*((98.D0*A-42.D0)*Q-(2.D0*A+1.D0)*(A*(24.D0*A-116.D0+(A+1CORA-417
     1.D0)*((7.D0*A+16.D0)*U-2.D0*X**2))+(14.D0*A-6.D0)*F*X))           CORA-418
      B4=B4-X*((2.D0*A-3.D0)*(((2.D0*A+1.D0)*(24.D0*A-80)+(14.D0*A-70.D0CORA-419
     1)*Q)*F-((2.D0*A-22.D0)*A+12.D0)*Q*X)+(4.D0*A+2.D0)*((((11.D0*A+17.CORA-420
     2D0)*A+1.D0)*A+15.D0)*F*U-X*((A-1.D0)*(2.D0*A-3.D0)*F*X+A*((14.D0*ACORA-421
     3-18.D0)*A+58.D0+(A+1.D0)*((A+2.D0)*(A-4.D0)*U+X**2)))))/(A+1.D0)  CORA-422
   30 IF (LT) GO TO 43                                                  CORA-423
      C(1)=B1-12.D0*P*Q*(2.D0*A+3.D0)*(A+2.D0)*(2.D0*F-(2.D0*A+5.D0)*(A+CORA-424
     11.D0)/W)/W                                                        CORA-425
      C(2)=B3-P*(4.D0*A+6.D0)*((16.D0*A-24.D0)*Q+(2.D0*A+1.D0)*(40.D0*A-CORA-426
     1A*(2.D0*A+5.D0)*(A+1.D0)*(U-(6.D0*A+12.D0)/W**2)+(30.D0*A+60.D0)*FCORA-427
     2/W))/W                                                            CORA-428
      C(3)=B2-Q*(4.D0*A+6.D0)*((16.D0*A-24.D0)*Q+(2.D0*A+1.D0)*(40.D0*A+CORA-429
     1(30.D0*A+60.D0)*F/W)+A*(A+1.D0)*(6.D0*A+15.D0)*(U-(10.D0*A+20.D0)/CORA-430
     2W**2))/W                                                          CORA-431
      C(4)=B4-6.D0*(F*(((8.D0*A-28.D0)*A+24.D0)*Q+A*(4.D0*A+2.D0)*(((2.DCORA-432
     10*A+2.D0)*A-5.D0)*U-40.D0))-(2.D0*A+3.D0)*((((4.D0*A+6.D0)*A+62.D0CORA-433
     2)*A+20.D0)*Q+A*(2.D0*A+1.D0)*((2.D0*A+5.D0)*(A+1.D0)*U*A-40.D0*A-(CORA-434
     310.D0*A+20.D0)*(4.D0*F+A*(A+1.D0)*(2.D0*A+5.D0)/W)/W))/W)/W       CORA-435
      IF (X.EQ.0.D0) GO TO 43                                           CORA-436
      C(1)=C(1)+X*P*Q*(12.D0*A+18.D0)*(A+1.D0)*(A+2.D0)/W               CORA-437
      C(2)=C(2)+X*P*(4.D0*A+6.D0)*(((8.D0*A-8.D0)*A-6.D0)*F-A*(A+1.D0)*(CORA-438
     12.D0*A+1.D0)*(X+(3.D0*A+6.D0)/W))/W                               CORA-439
      C(3)=C(3)-X*Q*(24.D0*A+36.D0)*((2.D0*A-3.D0)*F+(A+1.D0)*(X+(5.D0*ACORA-440
     1+10.D0)/W))/W                                                     CORA-441
      C(4)=C(4)+6.D0*X*((A-2.D0)*(A-3.D0)*(2.D0*A-3.D0)*Q+(2.D0*A+1.D0)*CORA-442
     1(((8.D0*A-12.D0)*A+40.D0)*A+((2.D0*A-2.D0)*A+6.D0)*F*X+A*(A+1.D0)*CORA-443
     2((A**2-5.D0)*U+X**2)+(4.D0*A+6.D0)*(((2.D0*A+2.D0)*A+10.D0)*F+A*(ACORA-444
     3+1.D0)*(X+(5.D0*A+10.D0)/W))/W))/W                                CORA-445
      GO TO 43                                                          CORA-446
C MULTIPOLE LQ=5 L1=L2-2                                                CORA-447
   31 DN=720.D0*A**2*(4.D0*A**2-9.D0)*(2.D0*A+5.D0)*(A+2.D0)            CORA-448
      BD=DEN*DN*S*DSQRT(Q*((A+1.D0)**2+F**2))/2.D0                      CORA-449
      B1=2.D0*(2.D0*A+3.D0)*(24.D0*((2.D0*A+5.D0)*(A+2.D0)+7.D0*Q)/(A-1.CORA-450
     1D0)-(2.D0*A-3.D0)*(11.D0*A-10.D0)*U)*F                            CORA-451
      B2=-6.D0*(24.D0*(2.D0*A**2.D0-15.D0*A-10.D0)-168.D0*Q+5.D0*(A+1.D0CORA-452
     1)*(2.D0*A**2+A-6.D0)*U)                                           CORA-453
      B3=((1008.D0*Q-144.D0*(2.D0*A**2-15.D0*A-10.D0))*Q-(2.D0*A-3.D0)*UCORA-454
     1*(6.D0*(17.D0*A**2-9.D0*A+10.D0)*Q+A**2*(2.D0*A+1.D0)*(24.D0*(A+10CORA-455
     2.D0)-15.D0*(A+1.D0)*(A+2.D0)*U)))                                 CORA-456
      B4=2.D0*(2.D0*A-3.D0)*(168.D0*Q+(2.D0*A+1.D0)*(24.D0*(A+10.D0)-(11CORA-457
     1.D0*A**2-A-30.D0)*U))*F/(A+1.D0)                                  CORA-458
      IF (X.EQ.0.D0) GO TO 32                                           CORA-459
      B1=B1+X*2.D0*(2.D0*A+3.D0)*((20.D0*A**3-198.D0*A**2+316.D0*A+240.DCORA-460
     10-42.D0*(2.D0*A-5.D0)*Q)/(A-1.D0)+(2.D0*A-3.D0)*(12.D0*F*X+(A+1.D0CORA-461
     2)*((9.D0*A+10.D0)*U-2.D0*X**2)))                                  CORA-462
      B2=B2-X*12.D0*(7.D0*(2.D0*A-3.D0)*F-(A+1.D0)*(2.D0*A-3.D0)*X)     CORA-463
      B3=B3-X*(2.D0*A-3.D0)*((420.D0*F-36.D0*(5.D0*A-2.D0)*X)*Q+(2.D0*A+CORA-464
     11.D0)*(48.D0*(A+10.D0)*F-(40.D0*A**2-38.D0*A-60.D0)*F*U+4.D0*(5.D0CORA-465
     2*A-58.D0)*A*X+12.D0*(2.D0*A-1.D0)*F*X**2+A*(A+1.D0)*X*(8.D0*(3.D0*CORA-466
     3A+4.D0)*U-4.D0*X**2)))                                            CORA-467
      B4=B4-X*2.D0*(2.D0*A-3.D0)*(42.D0*(2.D0*A-1.D0)*Q-(2.D0*A+1.D0)*(6CORA-468
     1.D0*(2.D0*A-1.D0)*F*X+A*((10.D0*A-116.D0)+(A+1.D0)*((9.D0*A+16.D0)CORA-469
     2*U-2.D0*X**2))))/(A+1.D0)                                         CORA-470
   32 IF (LT) GO TO 43                                                  CORA-471
      B1=B1*Q                                                           CORA-472
      B2=B2*Q                                                           CORA-473
      C(1)=B1-6.D0*Q*(A+2.D0)*(2.D0*A+3.D0)*(8.D0*A*(2.D0*A+5.D0)+24.D0*CORA-474
     1Q-5.D0*A*(A+1.D0)*(2.D0*A-3.D0)*U+4.D0*(2.D0*A-3.D0)*(2.D0*A+5.D0)CORA-475
     2*(F+5.D0*A*(A+1.D0)/W)/W)/W                                       CORA-476
      C(2)=B3-(4.D0*A**2-9.D0)*(8.D0*(12.D0*Q+A*(A+10.D0)*(2.D0*A+1.D0)*CORA-477
     1U)*F-(6.D0*A+12.D0)*((A+1.D0)*(20.D0*Q-A**2*(10.D0*A+5.D0)*U)+(8.DCORA-478
     20*A+4.D0)*A*(2.D0*A+5.D0)*(6.D0*F+5.D0*A*(A+1.D0)/W)/W)/W)/W      CORA-479
      C(3)=B2-Q*24.D0*(4.D0*A**2-9.D0)*(4.D0*F-5.D0*(A+1.D0)*(A+2.D0)/W)CORA-480
     1/W                                                                CORA-481
      C(4)=B4-6.D0*(2.D0*A-3.D0)*(24.D0*(A-2.D0)*Q+A*(2.D0*A+1.D0)*(8.D0CORA-482
     1*(A+10.D0)-5.D0*(A+1.D0)*(A+2.D0)*U)+4.D0*(2.D0*A+3.D0)*(2.D0*A+1.CORA-483
     2D0)*((A+10.D0)*F+5.D0*A*(A+1.D0)*(A+2.D0)/W)/W)/W                 CORA-484
      IF (X.EQ.0.D0) GO TO 43                                           CORA-485
      C(1)=C(1)+X*Q*(12.D0*A+24.D0)*(4.D0*A**2-9.D0)*(3.D0*F-(A+1.D0)*(XCORA-486
     1+(4.D0*A+10.D0)/W))/W                                             CORA-487
      C(2)=C(2)+X*(8.D0*A**2-18.D0)*(36.D0*(A-1.D0)*Q-(2.D0*A+1.D0)*(6.DCORA-488
     10*(A-2.D0)*F*X-A*(8.D0*(A+10.D0)-(A+1.D0)*((9.D0*A+10.D0)*U-2.D0*XCORA-489
     2**2))-6.D0*(A+2.D0)*((A+10.D0)*F+A*(A+1.D0)*(X+(4.D0*A+10.D0)/W))/CORA-490
     3W))/W                                                             CORA-491
      C(3)=C(3)+X*Q*24.D0*(4.D0*A**2-9.D0)*(A+1.D0)/W                   CORA-492
      C(4)=C(4)+X*12.D0*(2.D0*A+1.D0)*(2.D0*A-3.D0)*(3.D0*(A-2.D0)*F-A*(CORA-493
     1A+1.D0)*(X+(4.D0*A+6.D0)/W))/W                                    CORA-494
      GO TO 43                                                          CORA-495
C MULTIPOLE LQ=5 L1=L2-3                                                CORA-496
   33 BD=-2520.D0*DEN*A**2*(A+2.D0)*(A+3.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)CORA-497
     1*S*DSQRT(Q*((A+1.D0)**2+F**2)*((A+2.D0)**2+F**2))                 CORA-498
      B1=Q*(4.D0*A+6.D0)*(((24.D0*((A+36.D0)*A+40.D0)+168.D0*Q)*Q+48.D0*CORA-499
     1A*(A+2.D0)*(A+3.D0)*(2.D0*A+5.D0))/(A-1.D0)-(A*(((80.D0*A+620.D0)*CORA-500
     2A+966.D0)*A+540.D0)+((28.D0*A-26.D0)*A+60.D0)*Q-6.D0*A*(A+1.D0)*(ACORA-501
     3+2.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*U)*U)                          CORA-502
      B2=6.D0*F*Q*(48.D0*((2.D0*A+21.D0)*A+20.D0)+168.D0*Q-(((16.D0*A+36CORA-503
     1.D0)*A-22.D0)*A-60.D0)*U)                                         CORA-504
      B3=6.D0*F*((48.D0*((2.D0*A+21.D0)*A+20.D0)+168.D0*Q-(10.D0*A-12.D0CORA-505
     1)*(4.D0*A**2+5.D0)*U)*Q+A*(A+1.D0)*(2.D0*A+1.D0)*(((16.D0*A+168.D0CORA-506
     2)*A+720.D0)-(2.D0*A+3.D0)*(A+2.D0)*(8.D0*A+45.D0)*U)*U)           CORA-507
      B4=((2.D0*A-3.D0)*(48.D0*((A+48.D0)*A+40.D0)+336.D0*Q)*Q/(A+1.D0)-CORA-508
     1(4.D0*A**2-9.D0)*(28.D0*A-40.D0)*Q*U+A*(2.D0*A+1.D0)*(96.D0*((2.D0CORA-509
     2*A+21.D0)*A+90.D0)-(4.D0*A+6.D0)*(((40.D0*A+282.D0)*A+180.D0)-(A+2CORA-510
     3.D0)*(2.D0*A+3.D0)*(6.D0*A+15.D0)*U)*U))                          CORA-511
      IF (X.EQ.0.D0) GO TO 34                                           CORA-512
      B1=B1+X*Q*(4.D0*A+6.D0)*((((28.D0*A+402.D0)*A+704.D0)*A+360.D0)*X-CORA-513
     1((88.D0*A+700.D0)*A+600.D0)*F-126.D0*F*Q+(54.D0*A+24.D0)*Q*X+(2.D0CORA-514
     2*A+3.D0)*(((5.D0*A-53.D0)*A-70.D0)*F*U-(8.D0*A+2.D0)*F*X**2-(A+1.DCORA-515
     30)*(A+2.D0)*((15.D0*A+25.D0)*U-2.D0*X**2)*X))                     CORA-516
      B2=B2-X*6.D0*Q*((((8.D0*A+372.D0)*A+696.D0)*A+360.D0)+(70.D0*A+42.CORA-517
     1D0)*Q-(2.D0*A+3.D0)*((10.D0*A+6.D0)*F*X+(A+1.D0)*(A+2.D0)*((11.D0*CORA-518
     2A+25.D0)*U-2.D0*X**2)))                                           CORA-519
      B3=B3+X*((48.D0*((13.D0*A-7.D0)*A-3.D0)*F*X-(((144.D0*A+6696.D0)*ACORA-520
     1+1104.D0)*A-3600.D0)-84.D0*(13.D0*A-9.D0)*Q)*Q+(A+1.D0)*(((((352.DCORA-521
     20*A+224.D0)*A+1518.D0)*A+1260.D0)*U-12.D0*((20.D0*A-14.D0)*A-3.D0)CORA-522
     3*X**2)*Q+(2.D0*A+1.D0)*((2.D0*A-3.D0)*((88.D0*A+720.D0)+(16.D0*A+2CORA-523
     44.D0)*X**2)*F*X+A*((((280.D0*A+2292.D0)*A+2772.D0)*A+1080.D0)*U-(1CORA-524
     592.D0*A+2016.D0)*A-8640.D0-28.D0*((2.D0*A+31.D0)*A+24.D0)*X**2)-(2CORA-525
     6.D0*A+3.D0)*(((16.D0*A-230.D0)*A-300.D0)*F*U*X+A*(A+2.D0)*(((57.D0CORA-526
     7*A+171.D0)*A+90.D0)*U**2-(36.D0*A+62.D0)*U*X**2+4.D0*X**4)))))    CORA-527
      B4=B4-X*((4.D0*A-6.D0)*(126.D0*A+42.D0)*F*Q/(A+1.D0)-36.D0*(2.D0*ACORA-528
     1-3.D0)*(3.D0*A+1.D0)*Q*X-(4.D0*A+2.D0)*(A*((28.D0*A+434.D0)*A+336.CORA-529
     2D0)*X-(2.D0*A-3.D0)*(44.D0*A+360.D0)*F+(2.D0*A+3.D0)*(((5.D0*A-79.CORA-530
     3D0)*A-150.D0)*F*U-(8.D0*A-12.D0)*F*X**2-A*(A+2.D0)*((15.D0*A+31.D0CORA-531
     4)*U-2.D0*X**2)*X)))                                               CORA-532
   34 IF (LT) GO TO 43                                                  CORA-533
      C(1)=B1-12.D0*Q*(2.D0*A+3.D0)*(A+2.D0)*((12.D0*Q+(2.D0*A+3.D0)*((8CORA-534
     1.D0*A+41.D0)*A+15.D0)*U)*F-(4.D0*A+10.D0)*((A+3.D0)*4.D0*F+((33.D0CORA-535
     2+13.D0*A)*Q-A*(A+3.D0)*(4.D0*A-6.D0)-(2.D0*A+3.D0)*(3.D0*A*(A+1.D0CORA-536
     3)*(A+2.D0)*U-10.D0*(A+3.D0)*((4.D0*A+1.D0)*F+3.D0*A*(A+1.D0)*(A+2.CORA-537
     4D0)/W)/W))/W))/W                                                  CORA-538
      C(3)=B2-12.D0*Q*(2.D0*A+3.D0)*((((32.D0*A+288.D0)*A+456.D0)*A+240.CORA-539
     1D0)+8.D0*(2.D0*A-3.D0)*Q-(A+2.D0)*(2.D0*A+3.D0)*(3.D0*(A+1.D0)*(2.CORA-540
     2D0*A+5.D0)*U-10.D0*((2.D0*A+11.D0)*F+3.D0*(2.D0*A+5.D0)*(A+1.D0)*(CORA-541
     3A+2.D0)/W)/W))/W                                                  CORA-542
      C(2)=B3-(4.D0*A+6.D0)*((((192.D0*A+1728.D0)*A+2736.D0)*A+1440.D0+4CORA-543
     18.D0*(2.D0*A-3.D0)*Q)*Q-(A+1.D0)*((((176.D0*A+964.D0)*A+2166.D0)*ACORA-544
     2+540.D0)*Q-A**2*(2.D0*A+1.D0)*(((16.D0*A+168.D0)*A+720.D0)+6.D0*(ACORA-545
     3+2.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*U))*U-6.D0*(A+2.D0)*((2.D0*A+3.CORA-546
     4D0)*((A+1.D0)*(2.D0*A+1.D0)*(20.D0*A+75.D0)*A*U-(20.D0*A+110.D0)*QCORA-547
     5)*F+(A+1.D0)*(2.D0*A+5.D0)*(6.D0*(28.D0*A**2*(2.D0*A+1.D0)*(A+3.D0CORA-548
     6)-((52.D0*A+161.D0)*A+30.D0)*Q+A**2*(A+2.D0)*(2.D0*A+1.D0)*(2.D0*ACORA-549
     7+3.D0)*U)-10.D0*A*(A+3.D0)*(2.D0*A+1.D0)*(2.D0*A+3.D0)*(14.D0*F+6.CORA-550
     8D0*A*(A+2.D0)/W)/W)/W)/W)/W                                       CORA-551
      C(4)=B4+12.D0*(((2.D0*A+1.D0)*(A+1.D0)*(((16.D0*A+168.D0)*A+720.D0CORA-552
     1)-(A+2.D0)*(2.D0*A+3.D0)*(8.D0*A+45.D0)*U)-12.D0*(2.D0*A-3.D0)*(A-CORA-553
     22.D0)*Q)*F+(2.D0*A+3.D0)*(A+1.D0)*(((52.D0*A+266.D0)*A+660.D0)*Q-ACORA-554
     3*(2.D0*A+1.D0)*((8.D0*A+84.D0)*A+360.D0)-(A+2.D0)*(2.D0*A+1.D0)*(2CORA-555
     4.D0*A+3.D0)*(3.D0*A*(2.D0*A+5.D0)*U-10.D0*((8.D0*A+30.D0)*F+3.D0*ACORA-556
     5*(2.D0*A+5.D0)*(A+2.D0)/W)/W))/W)/W                               CORA-557
      IF (X.EQ.0.D0) GO TO 43                                           CORA-558
      C(1)=C(1)+6.D0*Q*X*(2.D0*A+3.D0)*(A+2.D0)*(((40.D0*A+300.D0)*A+476CORA-559
     1.D0)*A+240.D0+(18.D0*A-6.D0)*Q-(2.D0*A+3.D0)*((2.D0*A-10.D0)*F*X+(CORA-560
     2A+1.D0)*(A+2.D0)*((11.D0*A+15.D0)*U-2.D0*X**2)-(8.D0*A+20.D0)*((3.CORA-561
     3D0*A+13.D0)*F+(A+1.D0)*(A+2.D0)*(X+(5.D0*A+15.D0)/W))/W))/W       CORA-562
      C(2)=C(2)+X*(4.D0*A+6.D0)*(12.D0*(2.D0*A-3.D0)*(4.D0*A-1.D0)*F*Q-(CORA-563
     1A+1.D0)*(((60.D0*A-42.D0)*A+180.D0)*Q*X+(2.D0*A+1.D0)*(((32.D0*A+3CORA-564
     236.D0)*A+1440.D0)*F-(2.D0*A+3.D0)*((28.D0*A+202.D0)*A+180.D0)*F*U+CORA-565
     3A*(((40.D0*A+308.D0)*A+120.D0)-(A+2.D0)*(2.D0*A+3.D0)*((15.D0*A+25CORA-566
     4.D0)*U-2.D0*X**2))*X-(2.D0*A+3.D0)*(2.D0*A-24.D0)*F*X**2)+(3.D0*A+CORA-567
     56.D0)*(((92.D0*A+406.D0)*A+780.D0)*Q-(2.D0*A+1.D0)*(A*((8.D0*A+84.CORA-568
     6D0)*A+360.D0)+(2.D0*A+3.D0)*(A*(A+2.D0)*((11.D0*A+15.D0)*U-2.D0*X*CORA-569
     7*2)-(6.D0*A+40.D0)*F*X-(8.D0*A+20.D0)*((30.D0+8.D0*A)*F+A*(A+2.D0)CORA-570
     8*(X+(5.D0*A+15.D0)/W))/W)))/W))/W                                 CORA-571
      C(3)=C(3)+24.D0*X*Q*(2.D0*A+3.D0)**2*((2.D0*A-3.D0)*F-(A+1.D0)*(A+CORA-572
     12.D0)*(X+5.D0*(A+2.D0)/W))/W                                      CORA-573
      C(4)=C(4)+X*6.D0*(A+1.D0)*(18.D0*(A-2.D0)*(2.D0*A-3.D0)*Q+(2.D0*A+CORA-574
     11.D0)*(A*((40.D0*A+308.D0)*A+120.D0)-(2.D0*A+3.D0)*((2.D0*A-24.D0)CORA-575
     2*F*X+A*(A+2.D0)*((11.D0*A+25.D0)*U-2.D0*X**2)-4.D0*(2.D0*A+3.D0)*(CORA-576
     3(20.D0+3.D0*A)*F+A*(A+2.D0)*(X+5.D0*(A+2.D0)/W))/W)))/W           CORA-577
      GO TO 43                                                          CORA-578
C MULTIPOLE LQ=5 L1=L2-4                                                CORA-579
   35 BD=10080.D0*DEN*A**2*(2.D0*A+5.D0)*(A+2.D0)*S**2*DSQRT(Q*((A+1.D0)CORA-580
     1**2+F**2)*((A+2.D0)**2+F**2)*((A-1.D0)**2+E**2))                  CORA-581
      B1=Q*(((336.D0*Q+48.D0*((8.D0*A+22.D0)*A+47.D0))*Q-96.D0*(2.D0*A-1CORA-582
     1.D0)*(A+2.D0)*(2.D0*A+5.D0)*(3.D0*A-7.D0))/((A-1.D0)*(2.D0*A-3.D0)CORA-583
     2)+(4.D0*(((162.D0*A+683.D0)*A+538.D0)*A-280.D0)-4.D0*(7.D0*A-38.D0CORA-584
     3)*Q-(2.D0*A+3.D0)*(((163.D0*A+497.D0)*A-16.D0)*A-140.D0)*U)*U)*F  CORA-585
      B2=3.D0*Q*(((96.D0*((((12.D0*A+56.D0)*A+29.D0)*A-70.D0)*A-70.D0)+(CORA-586
     148.D0*((4.D0*A+28.D0)*A+47.D0)+336.D0*Q)*Q)/(2.D0*A-3.D0)-4.D0*(((CORA-587
     2((66.D0*A+307.D0)*A+172.D0)*A-280.D0)*A-280.D0)+(A-2.D0)*(4.D0*A-1CORA-588
     39.D0)*Q)*U)/(2.D0*A+3.D0)+35.D0*(A**2-1.D0)*(A+2.D0)**2*U**2)     CORA-589
      B3=(((1008.D0*Q+144.D0*((4.D0*A+28.D0)*A+47.D0))*Q+288.D0*((((12.DCORA-590
     10*A+56.D0)*A+29.D0)*A-70.D0)*A-70.D0))*Q/(2.D0*A-3.D0)-12.D0*(((((CORA-591
     2178.D0*A+967.D0)*A+1410.D0)*A+428.D0)*A-280.D0)+(A-2.D0)*(10.D0*A-CORA-592
     319.D0)*Q)*Q*U+(3.D0*A+3.D0)*(((((458.D0*A+2185.D0)*A+2899.D0)*A-35CORA-593
     42.D0)*A-420.D0)*Q*U+(4.D0*A+2.D0)*A**2*(8.D0*((6.D0*A+37.D0)*A+70.CORA-594
     5D0)-(((62.D0*A+349.D0)*A+524.D0)*A-140.D0)*U))*U)/(2.D0*A+3.D0)-52CORA-595
     6.5D0*A**2*(A**2-1.D0)*(A+2.D0)**2*(2.D0*A+1.D0)*U**3              CORA-596
      B4=(((336.D0*Q+48.D0*((8.D0*A+34.D0)*A+47.D0)-(4.D0*A-8.D0)*((14.DCORA-597
     10*A-41.D0)*A+57.D0)*U)*Q/(A+1.D0)+(2.D0*A+1.D0)*(4.D0*(((162.D0*A+CORA-598
     2863.D0)*A+1070.D0)*A-840.D0)*U-96.D0*((6.D0*A+37.D0)*A+70.D0)))/(2CORA-599
     3.D0*A+3.D0)-(2.D0*A+1.D0)*(((163.D0*A+631.D0)*A+256.D0)*A-420.D0)*CORA-600
     4U**2)*F                                                           CORA-601
      IF (X.EQ.0.D0) GO TO 36                                           CORA-602
      B1=B1+X*Q*(8.D0*((((((180.D0*A+604.D0)*A-425.D0)*A-1813.D0)*A-394.CORA-603
     1D0)*A+840.D0)+(((34.D0*A+147.D0)*A-193.D0)*A-450.D0)*Q+42.D0*(A-2.CORA-604
     2D0)*Q**2)/((1.D0-A)*(2.D0*A-3.D0))+96.D0*F*Q*X+16.D0*((((26.D0*A+1CORA-605
     326.D0)*A+133.D0)*A-13.D0)*A-70.D0)*U+4.D0*((41.D0*A+115.D0)*A+170.CORA-606
     4D0)*Q*U+4.D0*((2.D0*A-1.D0)*A-54.D0)*F*X-8.D0*(5.D0*A+2.D0)*Q*X**2CORA-607
     5-(((152.D0*A+892.D0)*A+1380.D0)*A+664.D0)*X**2+(2.D0*A+3.D0)*(4.D0CORA-608
     6*((20.D0*A+97.D0)*A+62.D0)*F*U*X+4.D0*(A-2.D0)*F*X**3+(A+1.D0)*(A+CORA-609
     72.D0)*(((44.D0*A+36.D0)*U-4.D0*X**2)*X**2-((87.D0*A+67.D0)*A-70.D0CORA-610
     8)*U**2)))                                                         CORA-611
      B2=B2-12.D0*X*Q*((28.D0*F*Q+2.D0*((18.D0*A+83.D0)*A+56.D0)*F-(((34CORA-612
     1.D0*A+217.D0)*A+341.D0)*A+166.D0)*X-4.D0*(3.D0*A+1.D0)*Q*X)/(2.D0*CORA-613
     2A+3.D0)+(((9.D0*A+58.D0)*A+44.D0)*U+2.D0*A*X**2)*F+(A+1.D0)*(A+2.DCORA-614
     30)*(9.D0*(A+1.D0)*U-X**2)*X)                                      CORA-615
      B3=B3+X*(((96.D0*(5.D0*A-3.D0)*Q+4.D0*(((170.D0*A+1101.D0)*A+901.DCORA-616
     10)*A+162.D0)-24.D0*((10.D0*A-5.D0)*A-2.D0)*F*X)*Q*X-4.D0*((((22.D0CORA-617
     2*A+543.D0)*A+629.D0)*A+510.D0)*U+168.D0*Q)*F*Q+(A+1.D0)*(4.D0*(((2CORA-618
     36.D0*A-5.D0)*A+18.D0)*X**2-(((166.D0*A+627.D0)*A+1415.D0)*A+558.D0CORA-619
     4)*U)*Q*X+(2.D0*A+1.D0)*((96.D0*((6.D0*A+37.D0)*A+70.D0)-4.D0*((2.DCORA-620
     50*A-105.D0)*A-498.D0)*X**2-8.D0*(((138.D0*A+751.D0)*A+1012.D0)*A-4CORA-621
     620.D0)*U)*F+A*(4.D0*((38.D0*A+197.D0)*A+154.D0)*X**2-(((572.D0*A+2CORA-622
     7362.D0)*A+960.D0)*A-40.D0)*U+8.D0*((90.D0*A+491.D0)*A+674.D0))*X))CORA-623
     8)/(2.D0*A+3.D0)-24.D0*(17.D0*A+50.D0)*F*Q+(A+1.D0)*(2.D0*A+1.D0)*(CORA-624
     9(((373.D0*A+1411.D0)*A+544.D0)*A-420.D0)*F*U**2-4.D0*((23.D0*A+125CORA-625
     A.D0)*A+54.D0)*F*U*X**2-4.D0*(A-6.D0)*F*X**4+A*(A+2.D0)*(((141.D0*ACORA-626
     B+199.D0)*A-22.D0)*U**2-(50.D0*A+48.D0)*U*X**2+4.D0*X**4)*X))      CORA-627
      B4=B4+X*(((48.D0*((4.D0*A-4.D0)*A-1.D0)*F*X-8.D0*(((34.D0*A+225.D0CORA-628
     1)*A-61.D0)*A-168.D0)-336.D0*(A-1.D0)*Q)*Q/(A+1.D0)+4.D0*((((82.D0*CORA-629
     2A+315.D0)*A+902.D0)*A+396.D0)*U-A*(20.D0*A-26.D0)*X**2)*Q+4.D0*(2.CORA-630
     3D0*A+1.D0)*(((2.D0*A-105.D0)*A-498.D0)*F*X+A*((((104.D0*A+430.D0)*CORA-631
     4A+171.D0)*A-10.D0)*U-2.D0*((90.D0*A+491.D0)*A+674.D0)-((38.D0*A+19CORA-632
     57.D0)*A+154.D0)*X**2)))/(2.D0*A+3.D0)+(2.D0*A+1.D0)*(4.D0*((20.D0*CORA-633
     6A+107.D0)*A+54.D0)*F*U*X+4.D0*(A-6.D0)*F*X**3+A*(A+2.D0)*(4.D0*(11CORA-634
     7.D0*A+12.D0)*U*X**2-((87.D0*A+145.D0)*A-22.D0)*U**2-4.D0*X**4)))  CORA-635
   36 IF (LT) GO TO 43                                                  CORA-636
      C(1)=B1-3.D0*Q*(A+2.D0)*(((16.D0*((56.D0*A+62.D0)*A-177.D0)+48.D0*CORA-637
     1Q)*Q-32.D0*A*(2.D0*A-1.D0)*(2.D0*A+5.D0)*(3.D0*A-7.D0))/(2.D0*A-3.CORA-638
     2D0)+(4.D0*A*(((62.D0*A+159.D0)*A+29.D0)*A+70.D0)-4.D0*((97.D0*A+22CORA-639
     39.D0)*A-6.D0)*Q+35.D0*A*(A**2-1.D0)*(2.D0*A+3.D0)*(A+2.D0)*U)*U-4.CORA-640
     4D0*(2.D0*A+5.D0)*((4.D0*(2.D0*A-1.D0)*(3.D0*A-7.D0)-92.D0*Q+(2.D0*CORA-641
     5A+3.D0)*((67.D0*A-17.D0)*A-14.D0)*U)*F-5.D0*(4.D0*((59.D0*A+59.D0)CORA-642
     6*A-18.D0)*Q-4.D0*A*(2.D0*A-1.D0)*(3.D0*A+1.D0)*(11.D0*A+14.D0)-(2*CORA-643
     7A+3.D0)*(7.D0*A*(A**2-1.D0)*(A+2.D0)*U-6.D0*(2.D0*A-1.D0)*(((17.D0CORA-644
     8*A+17.D0)*A+14.D0)*F+7.D0*A*(A**2-1.D0)*(A+2.D0)/W)/W))/W)/W)/W   CORA-645
      C(2)=B3+(((96.D0*((12.D0*A+56.D0)*A+59.D0-Q)-8.D0*(((188.D0*A+864.CORA-646
     1D0)*A+889.D0)*A-18.D0)*U)*Q+A*(A+1.D0)*(2.D0*A+1.D0)*(16.D0*((6.D0CORA-647
     2*A+37.D0)*A+70.D0)*U+4.D0*(2.D0*A+3.D0)*((67.D0*A+136.D0)*A-140.D0CORA-648
     3)*U**2))*F+3.D0*(A+2.D0)*(40.D0*((19.D0*A+46.D0)*Q-((12.D0*A+32.D0CORA-649
     4)*A+7.D0)*A-14.D0)*Q-(A+1.D0)*(20.D0*(((132.D0*A+292.D0)*A-97.D0)*CORA-650
     5A-42.D0)*Q-A**2*(2.D0*A+1.D0)*(20.D0*((66.D0*A+127.D0)*A-98.D0)+35CORA-651
     6.D0*(A-1.D0)*(2.D0*A+3.D0)*(A+2.D0)*U))*U+4.D0*(2.D0*A+5.D0)*(36.DCORA-652
     70*((54.D0*A+37.D0)*A-10.D0)*Q*F-(A+1.D0)*(A*(2.D0*A+1.D0)*(672.D0*CORA-653
     8(2.D0*A-1.D0)+6.D0*(2.D0*A+3.D0)*(17.D0*A-14.D0)*U)*F-5.D0*(14.D0*CORA-654
     9(((86.D0*A+55.D0)*A-3.D0)*A-18.D0)*Q-A**2*(2.D0*A+1.D0)*(112.D0*(2CORA-655
     A.D0*A-1.D0)*(3.D0*A+2.D0)+(2.D0*A+3.D0)*(7.D0*(A-1.D0)*(A+2.D0)*U-CORA-656
     B6.D0*(2.D0*A-1.D0)*(24.D0*F+7.D0*(A-1.D0)*(A+2.D0)/W)/W)))/W))/W)/CORA-657
     CW)/W                                                              CORA-658
      C(3)=B2+12.D0*Q*((8.D0*((12.D0*A+56.D0)*A+59.D0)-8.D0*Q-(2.D0*A+3.CORA-659
     1D0)*((32.D0*A+98.D0)*A-4.D0)*U)*F+5.D0*(A+2.D0)*((38.D0*A+92.D0)*QCORA-660
     2-(((24.D0*A+64.D0)*A+14.D0)*A+28.D0)-(2.D0*A+3.D0)*(7.D0*(A**2-1.DCORA-661
     30)*(A+2.D0)*U-6.D0*(2.D0*A+5.D0)*((10.D0*A-4.D0)*F+7.D0*(A**2-1.D0CORA-662
     4)*(A+2.D0)/W)/W))/W)/W                                            CORA-663
      C(4)=B4-3.D0*(((16.D0*(((56.D0*A+330.D0)*A+619.D0)*A+354.D0+(3.D0*CORA-664
     1A-6.D0)*Q)*Q-(A+1.D0)*(4.D0*(((194.D0*A+935.D0)*A+1292.D0)*A-36.D0CORA-665
     2)*Q*U+A*(2.D0*A+1.D0)*(32.D0*((6.D0*A+37.D0)*A+70.D0)-4.D0*(((62.DCORA-666
     30*A+349.D0)*A+524.D0)*A-140.D0)*U-35.D0*(A-1.D0)*(2.D0*A+3.D0)*(A+CORA-667
     42.D0)**2*U**2))))/(2.D0*A+3.D0)+4.D0*(4.D0*((46.D0*A+213.D0)*A+230CORA-668
     5.D0)*Q*F-(A+1.D0)*((2.D0*A+1.D0)*((24.D0*A+148.D0)*A+280.D0+(2.D0*CORA-669
     6A+3.D0)*((67.D0*A+136.D0)*A-140.D0)*U)*F-5.D0*(A+2.D0)*(4.D0*((118CORA-670
     7.D0*A+257.D0)*A-90.D0)*Q-4.D0*A*(2.D0*A+1.D0)*((66.D0*A+127.D0)*A-CORA-671
     898.D0)-(2.D0*A+1.D0)*(2.D0*A+3.D0)*(7.D0*A*(A-1.D0)*(A+2.D0)*U-6.DCORA-672
     90*(2.D0*A+5.D0)*((17.D0*A-14.D0)*F+7.D0*A*(A+2.D0)*(A-1.D0)/W)/W))CORA-673
     A/W))/W)/W                                                         CORA-674
      IF (X.EQ.0.D0) GO TO 43                                           CORA-675
      C(1)=C(1)-Q*X*(3.D0*A+6.D0)*(8.D0*((38.D0*A+167.D0)*A+171.D0-3.D0*CORA-676
     1Q)*F+4.D0*(((26.D0*A+145.D0)*A+231.D0)*A+106.D0)*X+(40.D0*A+64.D0)CORA-677
     2*Q*X+(2.D0*A+3.D0)*((8.D0*A+32.D0)*F*X**2-4.D0*((35.D0*A+101.D0)*ACORA-678
     3+6.D0)*F*U+4.D0*(A+1.D0)*(A+2.D0)*(X**3-(9.D0*A+4.D0)*U*X))-4.D0*(CORA-679
     42.D0*A+5.D0)*((((44.D0*A+94.D0)*A-22.D0)*A+28.D0)-4.D0*(19.D0*A+44CORA-680
     5.D0)*Q-(2.D0*A+3.D0)*(4.D0*(3.D0*A+8.D0)*F*X+(A+1.D0)*(A+2.D0)*(2.CORA-681
     6D0*X**2-(13.D0*A-7.D0)*U)+10.D0*(((11.D0*A+59.D0)*A-6.D0)*F+(A+1.DCORA-682
     70)*(A+2.D0)*((A+3.D0)*X+(3.D0*A+21.D0)*(2.D0*A-1.D0)/W))/W))/W)/W CORA-683
      C(2)=C(2)+X*(8.D0*(((196.D0*A+1104.D0)*A+1901.D0)*A+1026.D0+(15.D0CORA-684
     1*A-18.D0)*Q+12.D0*(5.D0*A+4.D0)*F*X)*Q+(A+1.D0)*(32.D0*((4.D0*A+11CORA-685
     2.D0)*A+18.D0)*Q*X**2-8.D0*(((212.D0*A+966.D0)*A+1267.D0)*A+54.D0)*CORA-686
     3Q*U+(2.D0*A+1.D0)*(8.D0*((38.D0*A+213.D0)*A+318.D0)*F*X+4.D0*A*(((CORA-687
     4(106.D0*A+599.D0)*A+912.D0)*A-140.D0)*U+((26.D0*A+107.D0)*A+46.D0)CORA-688
     5*X**2-8.D0*((6.D0*A+37.D0)*A+70.D0))+(2.D0*A+3.D0)*(8.D0*(A+6.D0)*CORA-689
     6F*X**3-4.D0*((47.D0*A+170.D0)*A+48.D0)*F*U*X+A*(A+2.D0)*(((87.D0*ACORA-690
     7+67.D0)*A-70.D0)*U**2-4.D0*(11.D0*A+9.D0)*U*X**2+4.D0*X**4))))+3.DCORA-691
     80*(A+2.D0)*(32.D0*((24.D0*A+107.D0)*A+110.D0)*F*Q+(A+1.D0)*(96.D0*CORA-692
     9((4.D0*A+17.D0)*A+20.D0)*Q*X-(8.D0*A+4.D0)*(2.D0*((6.D0*A+37.D0)*ACORA-693
     A+70.D0)*F+A*((22.D0*A+125.D0)*A+194.D0)*X+(2.D0*A+3.D0)*(((61.D0*ACORA-694
     B+143.D0)*A-70.D0)*F*U+A*(A+2.D0)*((9.D0*A+4.D0)*U-X**2)*X-(6.D0*A+CORA-695
     C20.D0)*F*X**2))+(8.D0*A+20.D0)*(((532.D0*A+2246.D0)*A-180.D0)*Q-(2CORA-696
     D.D0*A+1.D0)*(4.D0*A*((66.D0*A+295.D0)*A-98.D0)-(2.D0*A+3.D0)*((22.CORA-697
     ED0*A+60.D0)*F*X+A*(A+2.D0)*(2.D0*X**2-(13.D0*A-7.D0)*U)+10.D0*(((1CORA-698
     F7.D0*A+93.D0)*A-42.D0)*F+A*(A+2.D0)*((A+3.D0)*X+3.D0*(A+7.D0)*(2.DCORA-699
     G0*A-1.D0)/W))/W)))/W))/W)/W                                       CORA-700
      C(3)=C(3)+12.D0*Q*X*(2.D0*(((28.D0*A+148.D0)*A+221.D0)*A+106.D0)+(CORA-701
     16.D0*A-4.D0)*Q+(2.D0*A+3.D0)*((2.D0*A+12.D0)*F*X+(A+2.D0)*((A+1.D0CORA-702
     2)*(2.D0*X**2-(13.D0*A+8.D0)*U)+5.D0*((10.D0*A+28.D0)*F+2.D0*(A+1.DCORA-703
     30)*(A+2.D0)*(X+(6.D0*A+15.D0)/W))/W)))/W                          CORA-704
      C(4)=C(4)+3.D0*X*((24.D0*(2.D0*A-1.D0)*(A-2.D0)*F*Q-(4.D0*A+4.D0)*CORA-705
     1(((20.D0*A+46.D0)*A+108.D0)*Q*X+(2.D0*A+1.D0)*(((76.D0*A+426.D0)*ACORA-706
     2+636.D0)*F+A*((26.D0*A+107.D0)*A+46.D0)*X)))/(2.D0*A+3.D0)+(4.D0*ACORA-707
     3+4.D0)*((2.D0*A+1.D0)*((35.D0*A+130.D0)*A+48.D0)*F*U+(2.D0*A+1.D0)CORA-708
     4*(A*(A+2.D0)*(9.D0*(A+1.D0)*U-X**2)*X-(2.D0*A+12.D0)*F*X**2)-(4.D0CORA-709
     5*((38.D0*A+169.D0)*A+210.D0)*Q-(2.D0*A+1.D0)*(A*((44.D0*A+250.D0)*CORA-710
     6A+388.D0)-(2.D0*A+3.D0)*((12.D0*A+40.D0)*F*X-(A+2.D0)*(A*((13.D0*ACORA-711
     7+8.D0)*U-2.D0*X**2)-10.D0*((11.D0*A+30.D0)*F+A*(A+2.D0)*(X+(6.D0*ACORA-712
     8+15.D0)/W))/W))))/W))/W                                           CORA-713
      GO TO 43                                                          CORA-714
C MULTIPOLE LQ=5 L1=L2-5                                                CORA-715
   37 BD=181440.D0*DEN*S**2*DSQRT(Q*((A+1.D0)**2+F**2)*((A+2.D0)**2+F**2CORA-716
     1)*((A-1.D0)**2+E**2)*((A+3.D0)**2+F**2))*A**2                     CORA-717
      B1=Q*(2304.D0*A*(2.D0*A-1.D0)-6912.D0*Q+864.D0*(9.D0*A+1.D0)*Q*U-2CORA-718
     188.D0*A*((22.D0*A+3.D0)*A+5.D0)*U+8.D0*A*(((530.D0*A+611.D0)*A+12.CORA-719
     2D0)*A+72.D0)*U**2-8.D0*((602.D0*A+683.D0)*A-60.D0)*Q*U**2+96.D0*A*CORA-720
     3(A**2-1.D0)*(2.D0*A+5.D0)*(2.D0*A+3.D0)*U**3)                     CORA-721
      B2=24.D0*Q*F*(288.D0-(204.D0*A+36.D0)*U+((89.D0*A+141.D0)*A-20.D0)CORA-722
     1*U**2)                                                            CORA-723
      B3=12.D0*F*(Q*(576.D0-24.D0*(37.D0*A+3.D0)*U+((718.D0*A+582.D0)*A-CORA-724
     140.D0)*U**2)+A*(A+1.D0)*(2.D0*A+1.D0)*U*(96.D0-(148.D0*A+12.D0)*U-CORA-725
     2((137.D0*A+148.D0)*A-180.D0)*U**2))                               CORA-726
      B4=Q*(864.D0*(9.D0*A+1.D0)*U-6912.D0-8.D0*(602.D0*A**2+613.D0*A-60CORA-727
     1.D0)*U**2)+A*(2.D0*A+1.D0)*(2304.D0-288.D0*(11.D0*A-1.D0)*U+8.D0*(CORA-728
     2(265.D0*A+174.D0)*A-54.D0)*U**2+48.D0*(2.D0*A+3.D0)*(2.D0*A+5.D0)*CORA-729
     3(A-1.D0)*U**3)                                                    CORA-730
      IF (X.EQ.0.D0) GO TO 38                                           CORA-731
      B1=B1+X*Q*((1176.D0*F*U+((2040.D0*A+2616.D0)*U-1200.D0-48.D0*X**2)CORA-732
     1*X)*Q+(((2944.D0*A+4432.D0)*A+912.D0)*X+8.D0*((794.D0*A+1535.D0)*ACORA-733
     2+222.D0)*F)*U-(16.D0*((94.D0*A+385.D0)*A+216.D0)+((368.D0*A+1016.DCORA-734
     30)*A+600.D0)*X**2)*X+(2*A+3.D0)*((((608.D0*A+632.D0)*U-600.D0-24.DCORA-735
     40*X**2)*X**2-3456.D0-((1950.D0*A+2614.D0)*A-140.D0)*U**2)*F+(A+1.DCORA-736
     50)*((120.D0*A+152.D0)*U*X**3-((414.D0*A+798.D0)*A+20.D0)*U**2*X-8.CORA-737
     6D0*X**5)))                                                        CORA-738
      B2=B2+X*Q*(1200.D0*F*X-1176.D0*Q*U-24.D0*((33.D0*A+120.D0)*A+38.D0CORA-739
     1)*U-24.D0*(53.D0*A+60.D0)*F*U*X+48.D0*F*X**3+(A+1.D0)*(3456.D0+((7CORA-740
     238.D0*A+1722.D0)*A+60.D0)*U**2+24.D0*(25.D0-(13.D0*A+19.D0)*U+X**2CORA-741
     3)*X**2))                                                          CORA-742
      B3=B3+X*((1200.D0*F*X-24.D0*((597.D0*A+720.D0)*A+74.D0)*U-1176.D0*CORA-743
     1Q*U-(2808.D0*A+2616.D0)*F*U*X+48.D0*F*X**3)*Q+(A+1.D0)*((10368.D0-CORA-744
     224.D0*(113.D0*A+79.D0)*U*X**2+(72.D0*X**2+1800.D0)*X**2+((11782.D0CORA-745
     3*A+10730.D0)*A-420.D0)*U**2)*Q+(2*A+1.D0)*((((3090.D0*A+3898.D0)*ACORA-746
     4+60.D0)*U**2+3456.D0+600.D0*X**2-304.D0*(14.D0*A+3.D0)*U-(680.D0*ACORA-747
     5+456.D0)*U*X**2+24.D0*X**4)*F*X+A*(((8.D0*X**2+184.D0)*X**2+752.D0CORA-748
     6)*X**2-2304.D0-((3.D0*(((187.D0*A+479.D0)*A-6.D0)*A-240.D0)*U+4.D0CORA-749
     7*((1175.D0*A+624.D0)*A-108.D0))*U-96.D0*(55.D0*A-3.D0))*U+(((570.DCORA-750
     80*A+1278.D0)*A+356.D0)*U-60.D0*A-440.D0-44.D0*(3.D0*A+4.D0)*X**2)*CORA-751
     9U*X**2))))                                                        CORA-752
      B4=B4+X*((1176.D0*F*U-1200.D0*X+120.D0*(17.D0*A+12.D0)*U*X-48.D0*XCORA-753
     1**3)*Q+(2.D0*A+1.D0)*((8.D0*(397.D0*A+114.D0)*U-3456.D0-10.D0*((19CORA-754
     25.D0*A+289.D0)*A+6.D0)*U**2-600.D0*X**2+8.D0*(76.D0*A+57.D0)*U*X**CORA-755
     32-24.D0*X**4)*F+A*X*(440.D0*U-752.D0-((414.D0*A+1050.D0)*A+356.D0)CORA-756
     4*U**2-184.D0*X**2+8.D0*(15.D0*A+22.D0)*U*X**2-8.D0*X**4)))        CORA-757
   38 IF (LT) GO TO 43                                                  CORA-758
      C(1)=B1+24.D0*Q*((60.D0*((9.D0*A+5.D0)*U-8.D0)*Q+96.D0*(A-1.D0)*(2CORA-759
     1.D0*A-1.D0)-4.D0*(((74.D0*A+15.D0)*A+28.D0)*A+3.D0)*U-(2.D0*A+3.D0CORA-760
     2)*(A+2.D0)*((137.D0*A-37.D0)*A-30.D0)*U**2)*F+4.D0*(30.D0*((8.D0*ACORA-761
     3-6.D0)*A+5.D0-7.D0*Q)*Q+(A+2.D0)*(5.D0*((128.D0*A+80.D0)*A-33.D0)*CORA-762
     4Q-A*(((676.D0*A+544.D0)*A-201.D0)*A-144.D0))*U-(6.D0*A-6.D0)*((2.DCORA-763
     50*A-1.D0)*(4.D0*A-6.D0)*A+(A+1.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*A*(CORA-764
     6A+2.D0)*U**2)+5.D0*((12.D0*(2.D0*A-1.D0)*(((50.D0*A+153.D0)*A+136.CORA-765
     7D0)*A+39.D0)-84.D0*((10.D0*A+19.D0)*A+3.D0)*Q)*F+(A+2.D0)*((2.D0*ACORA-766
     8+3.D0)*(2.D0*A+5.D0)*((37.D0*A-17.D0)*A-6.D0)*U*F+6.D0*(A*(2.D0*A-CORA-767
     91.D0)*(((236.D0*A+648.D0)*A+625.D0)*A+66.D0)-3.D0*(((140.D0*A+294.CORA-768
     AD0)*A+196.D0)*A-105.D0)*Q+(2.D0*A+3.D0)*(2.D0*A+5.D0)*(A*(A**2-1.DCORA-769
     B0)*(2.D0*A+6.D0)*U-(14.D0*A-7.D0)*(((7.D0*A+5.D0)*A+6.D0)*F+A*(A**CORA-770
     C2-1.D0)*(2.D0*A+6.D0)/W)/W))/W))/W)/W)/W                          CORA-771
      C(2)=B3+8.D0*((1440.D0*Q-288.D0*(4.D0*A**2+1.D0)+12.D0*(((168.D0*ACORA-772
     1+132.D0)*A+62.D0)*A+3.D0)*U-30.D0*(68.D0*A+30.D0)*Q*U)*Q+(A+1.D0)*CORA-773
     2(8.D0*A+12.D0)*(((338.D0*A-83.D0)*A-45.D0)*Q*U-(2.D0*A+1.D0)*A**2*CORA-774
     3(12.D0+(169.D0*A-99.D0)*U+(A-1.D0)*(6.D0*A+15.D0)*U**2))*U+3.D0*((CORA-775
     4(840.D0*Q-120.D0*(4.D0*A**2+5.D0))*Q-(2.D0*A+3.D0)*(40.D0*((65.D0*CORA-776
     5A+30.D0)*A-11.D0)*Q-5.D0*A*(2.D0*A+1.D0)*(A+1.D0)*(12.D0*(25.D0*A-CORA-777
     613.D0)+(A+2.D0)*(37.D0*A-30.D0)*U))*U)*F+4.D0*((630.D0*((10.D0*A+1CORA-778
     75.D0)*A+2.D0)*Q-90.D0*((((200.D0*A+420.D0)*A+162.D0)*A-63.D0)*A-26CORA-779
     8.D0))*Q+(2.D0*A+3.D0)*((A+1.D0)*(1512.D0*(4.D0*A**2-1.D0)*A**2-(A+CORA-780
     92.D0)*(30.D0*((44.D0*A-18.D0)*A-5.D0)*Q-6.D0*A**2*(2.D0*A+1.D0)*(1CORA-781
     A18.D0*A-83.D0+(A-1.D0)*(2.D0*A+5.D0)*U))*U)+5.D0*(42.D0*(((70.D0*ACORA-782
     B+129.D0)*A+53.D0)*A-30.D0)*Q*F-(A+1.D0)*(A*(2.D0*A+1.D0)*(252.D0*(CORA-783
     C2.D0*A-1.D0)*(4.D0*A+5.D0)+7.D0*(A+2.D0)*(2.D0*A+5.D0)*(7.D0*A-6.DCORA-784
     D0)*U)*F-6.D0*(A+2.D0)*(14.D0*(((56.D0*A+36.D0)*A+4.D0)*A-15.D0)*Q-CORA-785
     EA**2*(2.D0*A+1.D0)*((4.D0*A+3.D0)*54.D0*(2.D0*A-1.D0)+(2.D0*A+5.D0CORA-786
     F)*((A-1.D0)*(2.D0*A+6.D0)*U-7.D0*(2.D0*A-1.D0)*(9.D0*F+(A-1.D0)*(2CORA-787
     G.D0*A+6.D0)/W)/W)))/W))/W))/W)/W)/W                               CORA-788
      C(3)=B2+96.D0*Q*((120.D0-25.D0*(4.D0*A+3.D0)*U)*Q-24.D0*(4.D0*A**2CORA-789
     1+1.D0)+((((88.D0*A+72.D0)*A+12.D0)*A+3.D0)+3.D0*(A**2-1.D0)*(2.D0*CORA-790
     2A+3.D0)*(2.D0*A+5.D0)*U)*U+5.D0*((42.D0*Q-(24.D0*A**2+30.D0))*F-(ACORA-791
     3+2.D0)*((2.D0*A+3.D0)*(25.D0*A-11.D0)*U*F-6.D0*(21.D0*(4.D0*A+1.D0CORA-792
     4)*Q-3.D0*(((32.D0*A+20.D0)*A-4.D0)*A-13.D0)-(2.D0*A+3.D0)*(2.D0*A+CORA-793
     55.D0)*((A**2-1.D0)*U-7.D0*((5.D0*A-3.D0)*F+(A**2-1.D0)*(2.D0*A+6.DCORA-794
     60)/W)/W))/W))/W)/W                                                CORA-795
      C(4)=B4+24.D0*((60.D0*((9.D0*A+5.D0)*U-8.D0)*Q+(A+1.D0)*(2.D0*A+1.CORA-796
     1D0)*(96.D0-4.D0*(37.D0*A+3.D0)*U-((137.D0*A+148.D0)*A-180.D0)*U**2CORA-797
     2))*F+4.D0*((30.D0*((8.D0*A+6.D0)*A+5.D0)-210.D0*Q)*Q+(2.D0*A+3.D0)CORA-798
     3*((A+1.D0)*(10.D0*(32.D0*A-11.D0)*Q*U-(2.D0*A+1.D0)*(A*(12.D0+(169CORA-799
     4.D0*A-99.D0)*U)+3.D0*(A-1.D0)*(2.D0*A+5.D0)*A*U**2))-5.D0*(84.D0*(CORA-800
     55.D0*A+1.D0)*Q*F-(A+1.D0)*((2.D0*A+1.D0)*(12.D0*(25.D0*A-13.D0)+(ACORA-801
     6+2.D0)*(37.D0*A-30.D0)*U)*F-6.D0*(A+2.D0)*(105.D0*(2.D0*A-1.D0)*Q-CORA-802
     7(2.D0*A+1.D0)*((118.D0*A-83.D0)*A+(2.D0*A+5.D0)*(A*(A-1.D0)*U-7.D0CORA-803
     8*((7.D0*A-6.D0)*F+A*(A-1.D0)*(2.D0*A+6.D0)/W)/W)))/W))/W))/W)/W   CORA-804
      IF (X.EQ.0.D0) GO TO 43                                           CORA-805
      C(1)=C(1)-Q*X*(720.D0*(((6.D0*A+23.D0)*A+19.D0)+Q)*F*X+(A+2.D0)*(7CORA-806
     120.D0*Q*X**2-384.D0*((22.D0*A-5.D0)*A+3.D0)+11520.D0*Q+24.D0*(((43CORA-807
     20.D0*A+255.D0)*A+29.D0)*A+6.D0)*U-72.D0*(173.D0*A+107.D0)*Q*U+120.CORA-808
     3D0*((2.D0*A+17.D0)*A+9.D0)*X**2+(2.D0*A+3.D0)*(144.D0*F*X**3-24.D0CORA-809
     4*(95.D0*A+71.D0)*F*U*X+(A+1.D0)*(6.D0*((123.D0*A+137.D0)*A-120.D0)CORA-810
     5*U**2-24.D0*(13.D0*A+14.D0)*U*X**2+24.D0*X**4)))-24.D0*((2.D0*A+5.CORA-811
     6D0)*((20.D0*((10.D0*A-7.D0)*A+9.D0)-420.D0*Q)*F+(A+2.D0)*((10.D0*(CORA-812
     7(14.D0*A-1.D0)*A+3.D0)-180.D0*Q)*X+(2.D0*A+3.D0)*((199.D0*A-31.D0)CORA-813
     8*F*U-20.D0*F*X**2+(A+1.D0)*((21.D0*A+13.D0)*U-2.D0*X**2)*X)))+5.D0CORA-814
     9*(A+2.D0)*(4*((((220.D0*A+1340.D0)*A+973.D0)*A+123.D0)*A-234.D0)-8CORA-815
     A4.D0*((10.D0*A+55.D0)*A+21.D0)*Q+(2.D0*A+3.D0)*(2.D0*A+5.D0)*((A+1CORA-816
     B.D0)*(A+3.D0)*((15.D0*A-8.D0)*U-2.D0*X**2)-30.D0*(A+3.D0)*F*X-6.D0CORA-817
     C*(21.D0*((2.D0*A+13.D0)*A-3.D0)*F+(A+1.D0)*(A+3.D0)*((2.D0*A+7.D0)CORA-818
     D*X+(14.D0*A-7.D0)*(A+8.D0)/W))/W))/W)/W)/W                        CORA-819
      C(2)=C(2)+X*(720.D0*((12.D0*A+32.D0)*A+19.D0+Q)*Q*X+(2.D0*A+3.D0)*CORA-820
     1((7680.D0+480.D0*X**2-48.D0*(222.D0*A+107.D0)*U)*F*Q+(A+1.D0)*((28CORA-821
     28.D0*X**2-48.D0*(127.D0*A+71.D0)*U)*Q*X+(2.D0*A+1.D0)*(((48.D0*X**CORA-822
     32+720.D0)*X**2-768.D0+(32.D0*(62.D0*A+3.D0)+16.D0*((168.D0*A+139.DCORA-823
     40)*A-90.D0)*U-(920.D0*A+672.D0)*X**2)*U)*F+A*X*((8.D0*X**2+40.D0-(CORA-824
     5120.D0*A+152.D0)*U)*X**2+((414.D0*A+798.D0)*A+20.D0)*U**2-1408.D0+CORA-825
     6(2280.D0*A+736.D0)*U))))+6.D0*((A+2.D0)*((4200.D0*Q-200.D0*((20.D0CORA-826
     7*A+8.D0)*A+9.D0))*Q+(2.D0*A+3.D0)*(1200.D0*F*Q*X+(A+1.D0)*((400.D0CORA-827
     8*X**2-(4960.D0*A-620.D0)*U)*Q+(2.D0*A+1.D0)*((40.D0*X**2-200.D0-(5CORA-828
     948.D0*A+260.D0)*U)*F*X+A*((((123.D0*A+137.D0)*A-120.D0)*U+(2452.D0CORA-829
     A*A-792.D0))*U+96.D0+4.D0*X**2*(X**2-35.D0-(13.D0*A+14.D0)*U))))))+CORA-830
     B(8.D0*A+12.D0)*(420.D0*((10.D0*A+45.D0)*A+14.D0)*F*Q-(A+1.D0)*(240CORA-831
     C.D0*(2.D0*A+1.D0)*((10.D0*A+45.D0)*A-13.D0)*F-(A+2.D0)*(450.D0*(2.CORA-832
     DD0*A+5.D0)*Q*X+(2.D0*A+1.D0)*(2.D0*A+5.D0)*(30.D0*F*X**2-(274.D0*ACORA-833
     E-120.D0)*F*U+A*X*(2.D0*X**2-220.D0-(21.D0*A+13.D0)*U))+5.D0*(42.D0CORA-834
     F*((42.D0*A+231.D0)*A-45.D0)*Q-(2.D0*A+1.D0)*(8.D0*A*((118.D0*A+649CORA-835
     G.D0)*A-249.D0)+(A+3.D0)*(2.D0*A+5.D0)*(A*(15.D0*A-8.D0)*U-42.D0*F*CORA-836
     HX-2.D0*A*X**2))+(12.D0*A+6.D0)*(2.D0*A+5.D0)*(28.D0*((2.D0*A+13.D0CORA-837
     I)*A-6.D0)*F+A*(A+3.D0)*((2.D0*A+7.D0)*X+(14.D0*A-7.D0)*(A+8.D0)/W)CORA-838
     J)/W)/W)))/W)/W)/W                                                 CORA-839
      C(3)=C(3)+24.D0*X*Q*((30.D0*Q+10.D0*((4.D0*A+16.D0)*A+9.D0))*X+(2.CORA-840
     1D0*A+3.D0)*((160.D0-(124.D0*A+114.D0)*U+10.D0*X**2)*F+(A+1.D0)*(2.CORA-841
     2D0*X**2-(21.D0*A+28.D0)*U)*X)+(5.D0*A+10.D0)*(126.D0*Q-2.D0*((52.DCORA-842
     30*A+4.D0)*A+15.D0)+(2.D0*A+3.D0)*(18.D0*F*X+(A+1.D0)*(2.D0*X**2-(1CORA-843
     45.D0*A+13.D0)*U))+(12.D0*A+18.D0)*(2.D0*A+5.D0)*(14.D0*F+(A+1.D0)*CORA-844
     5(X+(7.D0*A+21.D0)/W))/W)/W)/W                                     CORA-845
      C(4)=C(4)-X*(720.D0*F*Q*X+(A+1.D0)*((11520.D0+720.D0*X**2-72.D0*(1CORA-846
     173.D0*A+114.D0)*U)*Q-(2.D0*A+1.D0)*((24.D0*(95.D0*A+84.D0)*U-2160.CORA-847
     2D0-144.D0*X**2)*F*X+A*(4224.D0-24.D0*(215.D0*A+92.D0)*U-6.D0*((123CORA-848
     3.D0*A+287.D0)*A+10.D0)*U**2-120.D0*X**2+24.D0*(13.D0*A+19.D0)*U*X*CORA-849
     4*2-24.D0*X**4)))+24.D0*(2.D0*A+3.D0)*(420.D0*F*Q+(A+1.D0)*(180.D0*CORA-850
     5Q*X-7.D0*A*(2.D0*A+1.D0)*(3.D0*A+4.D0)*U*X-(2.D0*A+1.D0)*((100.D0+CORA-851
     6(199.D0*A+130.D0)*U-20.D0*X**2)*F+A*X*(70.D0-2.D0*X**2))+5.D0*(A+2CORA-852
     7.D0)*(420.D0*Q+(2.D0*A+1.D0)*(30.D0*F*X+A*(2.D0*X**2-220.D0-(15.D0CORA-853
     8*A+13.D0)*U)+6.D0*(2.D0*A+5.D0)*(21.D0*F+A*(X+(7.D0*A+21.D0)/W))/WCORA-854
     9))/W))/W)/W                                                       CORA-855
      GO TO 43                                                          CORA-856
   39 IF ((X.NE.0.D0).OR.(MOD(LL,2).NE.1).OR.(LL.EQ.7)) GO TO 69        CORA-857
      GO TO ( 40 , 69 , 41 , 69 , 42 , 69 , 69 ) , LL                   CORA-858
C MULTIPOLE LQ=6 L1=L2                                                  CORA-859
   40 BD=120.D0*DEN*A**2*(2.D0*A+7.D0)*(2.D0*A+5.D0)*(A+2.D0)*(A+3.D0)*(CORA-860
     1A+4.D0)*DSQRT(S*Q*P*((A+1.D0)**2+F**2)*((A+1.D0)**2+E**2))*S**2   CORA-861
      B1=P*Q*((8.D0*(((154.D0*A-205.D0)*A-376.D0)*A-140.D0+((47.D0*A-282CORA-862
     1.D0)*A-143.D0-63.D0*Q)*Q)+4.D0*((((47.D0*A+26.D0)*A-553.D0)*A-752.CORA-863
     2D0)*A-280.D0-((79.D0*A+282.D0)*A+143.D0)*Q)*U)/(A-1.D0)+2.D0*(2.D0CORA-864
     3*A+7.D0)*(2.D0*A+5.D0)*(A+1.D0)**2*U**2)                          CORA-865
      B2=(240.D0*(2.D0*A+1.D0)**2*(A-14.D0)+24.D0*((20.D0*A-336.D0)*A-14CORA-866
     13.D0)*Q-1512.D0*Q**2-6.D0*((((36.D0*A+836.D0)*A+2797.D0)*A+2374.D0CORA-867
     2)*A+560.D0+(((18.D0*A+275.D0)*A+726.D0)*A+286.D0)*Q+(A+1.D0)*(((26CORA-868
     3.D0*A+146.D0)*A+210.D0)*A+35.D0)*U)*U)/(2.D0*A+3.D0)              CORA-869
      B3=P*F*(B2+A*(2.D0*A+4.D0)*U*(54.D0*Q+6.D0*(38.D0*A+29.D0)+3.D0*(ACORA-870
     1+1.D0)*(9.D0*A+29.D0)*U))                                         CORA-871
      B2=Q*F*B2                                                         CORA-872
      B4=(((((((32.D0*A-216.D0)*A-1692.D0)*A-2272.D0)*A+454.D0)*A+1402.DCORA-873
     10)*A+210.D0)*Q*U**2+(2.D0*A-3.D0)*((16.D0*A+8.D0)*((107.D0*A-444.DCORA-874
     20)*A-140.D0)+8.D0*((((47.D0*A-176.D0)*A-924.D0)*A-724.D0)*A-140.D0CORA-875
     3)*U+(8.D0*((47.D0*A-390.D0)*A-143.D0)-4.D0*((142.D0*A+390.D0)*A+14CORA-876
     43.D0)*U-504.D0*Q)*Q)*Q+A**2*(2.D0*A+1.D0)*(480.D0*(2.D0*A+1.D0)*(ACORA-877
     5-14.D0)+(4.D0*(((214.D0*A-849.D0)*A-3808.D0)*A-2100.D0)+((((204.D0CORA-878
     6*A+752.D0)*A-232.D0)*A-2550.D0)*A-1680.D0)*U)*U))/((A+1.D0)*(2.D0*CORA-879
     7A+3.D0))+A**2*(2.D0*A+5.D0)*(2.D0*A+7.D0)*(2.D0*A+1.D0)*(A+1.D0)*UCORA-880
     8**3                                                               CORA-881
      IF (LT) GO TO 43                                                  CORA-882
      C(1)=B1+12.D0*P*Q*(A+2.D0)*((58.D0+76.D0*A+18.D0*Q+(A+1.D0)*(9.D0*CORA-883
     1A+29.D0)*U)*F-(2.D0*A+5.D0)*((28.D0*A+32.D0)*A+14.D0+(4.D0*A-6.D0)CORA-884
     2*Q+(A+1.D0)*((A+1.D0)*(2.D0*A+7.D0)*U+10.D0*(A+3.D0)*(2.D0*F-(A+1.CORA-885
     3D0)*(2.D0*A+7.D0)/W)/W))/W)/W                                     CORA-886
      C(2)=B3-2.D0*P*(2.D0*A*((((48.D0*A+16.D0)*A-570.D0)*A-703.D0)*A-21CORA-887
     10.D0)*U+(2.D0*A-3.D0)*((((4.D0*A-34.D0)*A-172.D0)*A-116.D0)*U+8.D0CORA-888
     2*((5.D0*A-48.D0)*A-29.D0)-72.D0*Q)*Q-A*(2.D0*A+1.D0)*(40.D0*(2.D0*CORA-889
     3A+1.D0)*(14.D0-A)-(2.D0*A+7.D0)*(2.D0*A+5.D0)*(A+1.D0)**2*U**2)-6.CORA-890
     4D0*(A+2.D0)*(5.D0*((14.D0-A)*(2.D0*A+1.D0)**2-(A-2.D0)*(2.D0*A-3.DCORA-891
     50)*Q-(A+1.D0)*(2.D0*A+1.D0)*((A+1.D0)*A-7.D0)*U)*F+(2.D0*A+5.D0)*(CORA-892
     6(((4.D0*A+6.D0)*A+92.D0)*A+60.D0)*Q+(2.D0*A+1.D0)*((A-14.D0)*A*(4.CORA-893
     7D0*A+2.D0)+(A+1.D0)*(A*(A+1.D0)*(2.D0*A+7.D0)*U-10.D0*(A+3.D0)*(7.CORA-894
     8D0*F+(2.D0*A+7.D0)*A*(A+1.D0)/W)/W)))/W)/W)/W                     CORA-895
      C(3)=B2+2.D0*Q*(A*((((16.D0*A+600.D0)*A+2332.D0)*A+2298.D0)*A+700.CORA-896
     1D0)*U+(2.D0*A-3.D0)*((((4.D0*A+70.D0)*A+212.D0)*A+116.D0)*U-8.D0*(CORA-897
     2(5.D0*A-48.D0)*A-29.D0)+72.D0*Q)*Q+40.D0*(2.D0*A+1.D0)**2*A*(14.D0CORA-898
     3-A)+3.D0*A*(2.D0*A+5.D0)*(2.D0*A+7.D0)*(A+1.D0)**2*U**2+6.D0*(A+2.CORA-899
     4D0)*(5.D0*((14.D0-A)*(2.D0*A+1.D0)**2-(A-2.D0)*(2.D0*A-3.D0)*Q+(A+CORA-900
     51.D0)*((8.D0*A+28.D0)*A+7.D0)*U)*F+(2.D0*A+5.D0)*((((4.D0*A+6.D0)*CORA-901
     6A+92.D0)*A+60.D0)*Q+2.D0*(A-14.D0)*A*(2.D0*A+1.D0)**2-5.D0*A*(A+1.CORA-902
     7D0)**2*(2.D0*A+7.D0)*U-10.D0*(A+3.D0)*(A+1.D0)*(2.D0*A+1.D0)*(7.D0CORA-903
     8*F+(2.D0*A+7.D0)*A*(A+1.D0)/W)/W)/W)/W)/W                         CORA-904
      C(4)=B4+6.D0*(2.D0*F*((2.D0*A-3.D0)*(A-2.D0)*(((18.D0*A+58.D0)*A+2CORA-905
     19.D0)*U+58.D0*(2.D0*A+1.D0)+18.D0*Q)*Q+A*(2.D0*A+1.D0)*(40.D0*(2.DCORA-906
     20*A+1.D0)*(A-14.D0)+(((58.D0*A-123.D0)*A-906.D0)*A-560.D0)*U+(A+1.CORA-907
     3D0)*(((9.D0*A+43.D0)*A+34.D0)*A-35.D0)*U**2))/(2.D0*A+3.D0)-((((((CORA-908
     416.D0*A**2+60.D0)*A+820.D0)*A+794.D0)*A+140.D0)*U+4.D0*(2.D0*A-3.DCORA-909
     50)*(2.D0*A-5.D0)*(A-2.D0)*Q)*Q-(2.D0*A+1.D0)*(A**2*(40.D0*(14.D0-ACORA-910
     6)*(2.D0*A+1.D0)-(A+1.D0)**2*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U**2)-4.D0CORA-911
     7*(((24.D0*A-44.D0)*A+257.D0)*A+70.D0)*Q-(((48.D0*A-8.D0)*A-566.D0)CORA-912
     8*A-420.D0)*A**2*U+10.D0*(A+2.D0)*(4.D0*((14.D0-A)*(2.D0*A+1.D0)*A-CORA-913
     9((2.D0*A+2.D0)*A+15.D0)*Q-A*(A+1.D0)*((A+1.D0)*A-7.D0)*U)*F+(2.D0*CORA-914
     AA+5.D0)*(2.D0*(A-14.D0)*(2.D0*A+1.D0)*A**2+2.D0*(((2.D0*A+9.D0)*A+CORA-915
     B43.D0)*A+21.D0)*Q+A*(A+1.D0)*(A*(A+1.D0)*(2.D0*A+7.D0)*U+(4.D0*A+2CORA-916
     C.D0)*(A+3.D0)*((A+7.D0)*2.D0*F+(2.D0*A+7.D0)*A*(A+1.D0)/W)/W))/W)/CORA-917
     DW))/W)/W                                                          CORA-918
      GO TO 43                                                          CORA-919
C MULTIPOLE LQ=6 L1=L2-2                                                CORA-920
   41 BD=2520.D0*DEN*A**2*(2.D0*A+5.D0)*(2.D0*A+7.D0)*(A+2.D0)*(A+3.D0)*CORA-921
     1(A+4.D0)*S*DSQRT(S*Q*P*((A+1.D0)**2+F**2)*((A+2.D0)**2+F**2))     CORA-922
      B1=2*P*Q*(120.D0*((((2.D0*A+57.D0)*A-117.D0)*A-306.D0)*A-140.D0+((CORA-923
     111.D0*A-129.D0)*A-113.D0-21.D0*Q)*Q)/(A-1.D0)-((((74.D0*A-865.D0)*CORA-924
     2A-5208.D0)*A-7344.D0)*A-3360.D0)*U+((266.D0*A+863.D0)*A+312.D0)*Q*CORA-925
     3U-3.D0*(A+1.D0)*(A+2.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)CORA-926
     4*U**2)                                                            CORA-927
      B2=6.D0*Q*F*((120.D0*((2.D0*A-147.D0)*A-113.D0-21.D0*Q)*Q+60.D0*((CORA-928
     1((4.D0*A-56.D0)*A-261.D0)*A-259.D0)*A-56.D0)*U+(((86.D0*A-573.D0)*CORA-929
     2A-2171.D0)*A-312.D0)*Q*U-16800.D0*(A+1.D0)*(2.D0*A+1.D0))/(2.D0*A+CORA-930
     33.D0)+(A+2.D0)*(((43.D0*A+193.D0)*A+210.D0)*A+105.D0)*U**2)       CORA-931
      B3=3*P*((240.D0*((2.D0*A-147.D0)*A-113.D0-21.D0*Q)*Q+40.D0*(A+1.D0CORA-932
     1)*(2.D0*A+1.D0)*(((2.D0*A+63.D0)*A+69.D0)*A-168.D0)*U+(((892.D0*A+CORA-933
     21374.D0)*A-2182.D0)*A-624.D0)*Q*U-33600.D0*(A+1.D0)*(2.D0*A+1.D0))CORA-934
     3/(2.D0*A+3.D0)-(A+1.D0)*(A+2.D0)*(2.D0*A+1.D0)*((19.D0*A-6.D0)*A-2CORA-935
     410.D0)*U**2)*F                                                    CORA-936
      B4=(((2.D0*A-3.D0)*(240.D0*((((2.D0*A+69.D0)*A-369.D0)*A-534.D0)*ACORA-937
     1-140.D0+((11.D0*A-165.D0)*A-113.D0-21.D0*Q)*Q)*Q+((((532.D0*A-1326CORA-938
     2.D0)*A-5422.D0)*A-624.D0)*Q-((((148.D0*A-4110.D0)*A+4130.D0)*A+451CORA-939
     320.D0)*A+40512.D0)*A-6720.D0)*Q*U)/(A+1.D0)+240.D0*A**2*(2.D0*A+1.CORA-940
     4D0)*((A+2.D0)*((2.D0*A+59.D0)*A-189.D0)*U-840.D0))/(2.D0*A+3.D0)-(CORA-941
     52.D0*(((((24.D0*A-26.D0)*A+317.D0)*A+2298.D0)*A+2001.D0)*A+630.D0)CORA-942
     6*Q+A**2*(2.D0*A+1.D0)*(((74.D0*A-1068.D0)*A-4812.D0)*A-3360.D0+3*(CORA-943
     7A+2.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U))*U**2)       CORA-944
      IF (LT) GO TO 43                                                  CORA-945
      C(1)=B1+6.D0*P*Q*(A+2.D0)*((360.D0*Q+40.D0*((2.D0*A+53.D0)*A+57.D0CORA-946
     1)-(2.D0*A+3.D0)*((19.D0*A+37.D0)*A-72.D0)*U)*F-(4.D0*A+10.D0)*(20.CORA-947
     2D0*(2.D0*A-3.D0)*Q+10.D0*(((2.D0*A+45.D0)*A+75.D0)*A+42.D0)-(A+1.DCORA-948
     30)*(A+2.D0)*(6.D0*A+9.D0)*(2.D0*A+7.D0)*U+(A+3.D0)*(20.D0*A+30.D0)CORA-949
     4*((A+16.D0)*F+(A+2.D0)*(6.D0*A+21.D0)*(A+1.D0)/W)/W)/W)/W         CORA-950
      C(2)=B3+2.D0*P*((2.D0*A-3.D0)*(240.D0*(3.D0*Q-(A-21.D0)*A+19.D0)-(CORA-951
     1A+1.D0)*((116.D0*A+166.D0)*A-432.D0)*U)*Q+A*(A+1.D0)*(2.D0*A+1.D0)CORA-952
     2*(16800.D0-(20.D0*(((2.D0*A+63.D0)*A+174.D0)*A+42.D0)-(A+2.D0)*(6.CORA-953
     3D0*A+9.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U)*U)-(3.D0*A+6.D0)*((20.D0CORA-954
     4*(A-2.D0)*(2.D0*A-3.D0)*Q-(A+1.D0)*(2.D0*A+1.D0)*(840.D0-(2.D0*A+3CORA-955
     5.D0)*((A+30.D0)*A+84.D0)*U))*5.D0*F-(4.D0*A+10.D0)*(A+1.D0)*(30.D0CORA-956
     6*((2.D0*A+7.D0)*A+48.D0)*Q-(2.D0*A+1.D0)*(A*(840.D0+(3.D0*A+6.D0)*CORA-957
     7(2.D0*A+3.D0)*(2.D0*A+7.D0)*U)-(A+3.D0)*(20.D0*A+30.D0)*((7.D0*A+4CORA-958
     82.D0)*F+A*(A+2.D0)*(6.D0*A+21.D0)/W)/W))/W)/W)/W                  CORA-959
      C(3)=B2+6.D0*Q*((2.D0*A-3.D0)*(80.D0*(3.D0*Q-(A-21.D0)*A+19.D0)-((CORA-960
     1(12.D0*A-26.D0)*A-222.D0)*A-144.D0)*U)*Q-40.D0*A*((((4.D0*A-6.D0)*CORA-961
     2A-90.D0)*A-138.D0)*A-63.D0)*U+A*(A+1.D0)*(5600.D0*(2.D0*A+1.D0)-3.CORA-962
     3D0*(A+2.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U**2)+10.D0*CORA-963
     4(A+2.D0)*((420.D0*(A+1.D0)*(2.D0*A+1.D0)-10.D0*(A-2.D0)*(2.D0*A-3.CORA-964
     5D0)*Q-(2.D0*A+3.D0)*(((10.D0*A+34.D0)*A+21.D0)*A+42.D0)*U)*F+(6.D0CORA-965
     6*A+15.D0)*((A+1.D0)*(((4.D0*A+14.D0)*A+96.D0)*Q+A*((A+2.D0)*(2.D0*CORA-966
     7A+3.D0)*(2.D0*A+7.D0)*U-56.D0*(2.D0*A+1.D0)))-14.D0*(A+3.D0)*(2.D0CORA-967
     7*A+3.D0)*((3.D0*A-2.D0)*F+A*(A+2.D0)*(2.D0*A+7.D0)*(A+1.D0)/W)/W)/CORA-968
     8W)/W)/W                                                           CORA-969
      C(4)=B4+6.D0*(((A-2.D0)*(2.D0*A-3.D0)*(40.D0*(9.D0*Q+(2.D0*A+73.D0CORA-970
     1)*A+57.D0)-(((38.D0*A-49.D0)*A-433.D0)*A-216.D0)*U)*Q+A*(A+1.D0)*(CORA-971
     22.D0*A+1.D0)*(40.D0*(((2.D0*A+63.D0)*A+69.D0)*A-168.D0)*U-33600.D0CORA-972
     3-(A+2.D0)*(2.D0*A+3.D0)*((19.D0*A-6.D0)*A-210.D0)*U**2))*F/(2.D0*ACORA-973
     4+3.D0)-(20.D0*(((((4.D0*A+132.D0)*A+35.D0)*A+1509.D0)*A+1812.D0)*ACORA-974
     5+420.D0+(A-2.D0)*(4.D0*A-6.D0)*(2.D0*A-5.D0)*Q)*Q-(A+1.D0)*(4.D0*(CORA-975
     6((((12.D0*A+80.D0)*A+625.D0)*A+1710.D0)*A+1158.D0)*A+630.D0)*Q*U+ACORA-976
     7**2*(2.D0*A+1.D0)*(16800.D0-(20.D0*(((2.D0*A+63.D0)*A+174.D0)*A+42CORA-977
     8.D0)-(3.D0*A+6.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U)*U)CORA-978
     9)+(10.D0*A+20.D0)*((((((4.D0*A+132.D0)*A+371.D0)*A+1173.D0)*A+720.CORA-979
     AD0)*Q-A*(A+1.D0)*(2.D0*A+1.D0)*(840.D0-(2.D0*A+3.D0)*((A+30.D0)*A+CORA-980
     B84.D0)*U))*2.D0*F+(6.D0*A+15.D0)*(A+1.D0)*(((((8.D0*A+60.D0)*A+220CORA-981
     C.D0)*A-30.D0)*A+252.D0)*Q+A*(2.D0*A+1.D0)*(280.D0*A+(2.D0*A+3.D0)*CORA-982
     D(A*(A+2.D0)*(2.D0*A+7.D0)*U-14.D0*(A+3.D0)*((2.D0*A+12.D0)*F+A*(A+CORA-983
     E2.D0)*(2.D0*A+7.D0)/W)/W)))/W)/W)/W)/W                            CORA-984
      GO TO 43                                                          CORA-985
C MULTIPOLE LQ=6 L1=L2-4                                                CORA-986
   42 BD=181440.D0*DEN*A**2*(A+2.D0)*(A+3.D0)*(A+4.D0)*(2.D0*A+5.D0)*(2.CORA-987
     1D0*A+7.D0)*S*DSQRT(S*Q*((A+1.D0)**2+F**2)*((A+2.D0)**2+F**2)*((A+3CORA-988
     2.D0)**2+F**2))                                                    CORA-989
      B1=-Q*((4320.D0*((7.D0*Q+(A+78.D0)*A+103.D0)*Q+((10.D0*A+255.D0)*ACORA-990
     1+638.D0)*A+420.D0)*Q+2880.D0*A*(A+2.D0)*(A+3.D0)*(A+4.D0)*(2.D0*A+CORA-991
     25.D0)*(2.D0*A+7.D0))/(A-1.D0)-72.D0*((5.D0*((14.D0*A-13.D0)*A+30.DCORA-992
     30)*Q+(((38.D0*A+833.D0)*A+243.D0)*A+678.D0)*A+2520.D0)*Q+A*(((((14CORA-993
     48.D0*A+2304.D0)*A+13879.D0)*A+31194.D0)*A+31336.D0)*A+13440.D0))*UCORA-994
     5+(A+2.D0)*(4.D0*A+10.D0)*(A*((((814.D0*A+8467.D0)*A+23265.D0)*A+30CORA-995
     6834.D0)*A+16632.D0)+(((338.D0*A+1757.D0)*A+8199.D0)*A+8190.D0)*Q-2CORA-996
     74.D0*A*(A+1.D0)*(A+3.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)CORA-997
     8*U)*U**2)                                                         CORA-998
      B2=-6.D0*Q*F*(2160.D0*((4.D0*A+84.D0)*A+103.D0+7.D0*Q)*Q/(2.D0*A+3CORA-999
     1.D0)+1440.D0*(((2.D0*A+33.D0)*A+226.D0)*A+210.D0)-(A+2.D0)*(12.D0*CORA1000
     2(((62.D0*A+623.D0)*A+126.D0)*A-1260.D0)+180.D0*(4.D0*A-5.D0)*Q+(A+CORA1001
     33.D0)*(2.D0*A+5.D0)*((41.D0*A+591.D0)*A+910.D0)*U)*U)             CORA1002
      B3=-3.D0*F*(((30240.D0*Q+4320.D0*((4.D0*A+84.D0)*A+103.D0)-360.D0*CORA1003
     1(4.D0*A**2+5.D0)*(5.D0*A-6.D0)*U)*Q-24.D0*(((((284.D0*A+3480.D0)*ACORA1004
     2+25.D0)*A-690.D0)*A+396.D0)*A-7560.D0)*U)*Q/(2.D0*A+3.D0)+2880.D0*CORA1005
     3(((2.D0*A+33.D0)*A+226.D0)*A+210.D0)*Q+(2.D0*A+4.D0)*((((98.D0*A-2CORA1006
     4563.D0)*A-7346.D0)*A-19775.D0)*A-13650.D0)*Q*U**2+A*(A+1.D0)*(2.D0CORA1007
     5*A+1.D0)*(480.D0*(((2.D0*A+33.D0)*A+226.D0)*A+840.D0)+(A+2.D0)*((ACORA1008
     6+3.D0)*(2.D0*A+5.D0)*((233.D0*A+1798.D0)*A+2520.D0)*U-4.D0*(((262.CORA1009
     7D0*A+3523.D0)*A+16926.D0)*A+17640.D0))*U)*U)                      CORA1010
      B4=-(4320.D0*(2.D0*A-3.D0)*((7.D0*Q+(A+90.D0)*A+103.D0)*Q+7.D0*(((CORA1011
     12.D0*A+57.D0)*A+118.D0)*A+60.D0))*Q/((A+1.D0)*(2.D0*A+3.D0))-72.D0CORA1012
     2*(2.D0*A-3.D0)*((35.D0*A-50.D0)*Q+((19.D0*A+425.D0)*A-66.D0)*A-840CORA1013
     3.D0)*Q*U+(A+2.D0)*(4.D0*A+10.D0)*(((338.D0*A+1567.D0)*A+8439.D0)*ACORA1014
     4+8190.D0)*Q*U**2+A*(4.D0*A+2.D0)*(1440.D0*(((2.D0*A+33.D0)*A+226.DCORA1015
     50)*A+840.D0)-36.D0*((((74.D0*A+1109.D0)*A+6154.D0)*A+9304.D0)*A+33CORA1016
     660.D0)*U+(A+2.D0)*(2.D0*A+5.D0)*(((407.D0*A+3765.D0)*A+6714.D0)*A+CORA1017
     74536.D0-12.D0*(A+3.D0)*(2.D0*A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*UCORA1018
     8)*U**2))                                                          CORA1019
      IF (LT) GO TO 43                                                  CORA1020
      C(1)=B1+6.D0*Q*(A+2.D0)*((240.D0*(9.D0*Q+(8.D0*A+98.D0)*A+141.D0)*CORA1021
     1Q+4.D0*(((((524.D0*A+7460.D0)*A+40945.D0)*A+88825.D0)*A+77406.D0)*CORA1022
     2A+17640.D0)*U-60.D0*(((6.D0*A-7.D0)*A+23.D0)*A-30.D0)*Q*U-(A+3.D0)CORA1023
     3*(2.D0*A+5.D0)*(480.D0*(A+4.D0)*(2.D0*A+7.D0)+(A+2.D0)*(2.D0*A+3.DCORA1024
     40)*((233.D0*A+1373.D0)*A+420.D0)*U**2))*F+4.D0*(2.D0*A+5.D0)*((A+2CORA1025
     5.D0)*(5.D0*(((116.D0*A+1028.D0)*A+3015.D0)*A+1953.D0)*Q-A*((((292.CORA1026
     6D0*A+2908.D0)*A+9639.D0)*A+5517.D0)*A-756.D0))*U-60.D0*((((14.D0*ACORA1027
     7+153.D0)*A+467.D0)*A+483.D0)+(2.D0*A-3.D0)*Q)*Q+(A+3.D0)*(12.D0*(2CORA1028
     8.D0*A+7.D0)*A*(5.D0*(A+4.D0)*(2.D0*A-3.D0)-(A+1.D0)*(A+2.D0)*(2.D0CORA1029
     9*A+3.D0)*(2.D0*A+5.D0)*U**2)+5.D0*((12.D0*(A+4.D0)*(A-2.D0)*(2.D0*CORA1030
     AA-3.D0)*(2.D0*A+7.D0)-12.D0*((22.D0*A+175.D0)*A+318.D0)*Q)*F+(A+2.CORA1031
     BD0)*((2.D0*A+3.D0)*(2.D0*A+5.D0)*((85.D0*A+409.D0)*A+84.D0)*U*F-6.CORA1032
     CD0*(2.D0*A+7.D0)*(15.D0*((20.D0*A+92.D0)*A+51.D0)*Q-(A+4.D0)*A*((3CORA1033
     D32.D0*A+368.D0)*A+141.D0)-(2.D0*A+3.D0)*(2.D0*A+5.D0)*(4.D0*A*(A+1CORA1034
     E.D0)*(A+3.D0)*U-7.D0*(A+4.D0)*((19.D0*A+3.D0)*F+8.D0*A*(A+1.D0)*(ACORA1035
     F+3.D0)/W)/W))/W))/W))/W)/W                                        CORA1036
      XX=(3.D0*A+6.D0)*(5.D0*F*(120.D0*((((8.D0*A+116.D0)*A+682.D0)*A+14CORA1037
     105.D0)*A+966.D0-(A-2.D0)*(2.D0*A-3.D0)*Q)*Q-(2.D0*A+3.D0)*(4.D0*((CORA1038
     2((140.D0*A+1808.D0)*A+7627.D0)*A+13909.D0)*A+6510.D0)*Q-A*(A+1.D0)CORA1039
     3*(2.D0*A+1.D0)*(12.D0*(((2.D0*A+33.D0)*A+226.D0)*A+840.D0)+(A+2.D0CORA1040
     4)*(A+3.D0)*(10.D0*A+25.D0)*(17.D0*A+84.D0)*U))*U)+(4.D0*A+10.D0)*(CORA1041
     512.D0*(A+2.D0)*(30.D0*(((8.D0*A+62.D0)*A+159.D0)*Q-((((4.D0*A+40.DCORA1042
     60)*A+151.D0)*A+94.D0)*A+84.D0))*Q-(A+1.D0)*(2.D0*A+3.D0)*(5.D0*(((CORA1043
     768.D0*A+564.D0)*A+1285.D0)*A+210.D0)*Q-A**2*(2.D0*A+1.D0)*(((166.DCORA1044
     80*A+1399.D0)*A+3108.D0)+(A+3.D0)*(4.D0*A+10.D0)*(2.D0*A+7.D0)*U))*CORA1045
     9U)+10.D0*(A+3.D0)*(42.D0*(2.D0*A+3.D0)*(((70.D0*A+561.D0)*A+1241.DCORA1046
     A0)*A+510.D0)*Q*F-(2.D0*A+3.D0)*(A+1.D0)*(7.D0*A*(A+2.D0)*(2.D0*A+1CORA1047
     B.D0)*(2.D0*A+5.D0)*(19.D0*A+84.D0)*U*F+(2.D0*A+7.D0)*(1008.D0*A*(ACORA1048
     C+4.D0)*(2.D0*A+1.D0)*F-(6.D0*A+12.D0)*(4.D0*((194.D0*A+797.D0)*A+1CORA1049
     D05.D0)*Q-A*(2.D0*A+1.D0)*(432.D0*A*(A+4.D0)+(2.D0*A+5.D0)*(4.D0*A*CORA1050
     E(A+3.D0)*U-7.D0*(A+4.D0)*(27.D0*F+8.D0*A*(A+3.D0)/W)/W)))/W)))/W)/CORA1051
     FW)/W                                                              CORA1052
      C(2)=B3+2.D0*(1440.D0*(((((8.D0*A+132.D0)*A+906.D0)*A+2133.D0)*A+2CORA1053
     1116.D0)*A+840.D0+(2.D0*A-3.D0)*((A+36.D0)*A+47.D0+3.D0*Q)*Q)*Q-24.CORA1054
     2D0*((((((504.D0*A+7644.D0)*A+39370.D0)*A+119625.D0)*A+174926.D0)*ACORA1055
     3+106596.D0)*A+17640.D0+(10.D0*A-15.D0)*(((8.D0*A-6.D0)*A+13.D0)*A-CORA1056
     430.D0)*Q)*Q*U+(A+1.D0)*(8.D0*A+12.D0)*((A+2.D0)*(2.D0*A+5.D0)*(((3CORA1057
     562.D0*A+3013.D0)*A+8436.D0)*A+1890.D0)*Q*U+A**2*(2.D0*A+1.D0)*(60.CORA1058
     6D0*(((2.D0*A+33.D0)*A+226.D0)*A+840.D0)-(A+2.D0)*(2.D0*A+5.D0)*((7CORA1059
     73.D0*A+822.D0)*A+3024.D0+(A+3.D0)*(12.D0*A+30.D0)*(2.D0*A+7.D0)*U)CORA1060
     8*U))*U+XX)/W                                                      CORA1061
      C(3)=B2+24.D0*Q*(2.D0*(60.D0*(((((8.D0*A+132.D0)*A+906.D0)*A+2133.CORA1062
     1D0)*A+2116.D0)*A+840.D0+(2.D0*A-3.D0)*(3.D0*Q+(A+36.D0)*A+47.D0)*QCORA1063
     2)-(A+2.D0)*(2.D0*A+5.D0)*((((112.D0*A+1218.D0)*A+3459.D0)*A+4242.DCORA1064
     30)*A+1764.D0+5.D0*(2.D0*A-3.D0)**2*Q-3.D0*(A+1.D0)*(A+3.D0)*(2.D0*CORA1065
     4A+3.D0)*(2.D0*A+5.D0)*(2.D0*A+7.D0)*U)*U)+5.D0*(A+2.D0)*(30.D0*(((CORA1066
     5((8.D0*A+116.D0)*A+682.D0)*A+1405.D0)*A+966.D0)-(A-2.D0)*(2.D0*A-3CORA1067
     6.D0)*Q)*F-(A+2.D0)*(2.D0*A+5.D0)*((A+3.D0)*(2.D0*A+3.D0)*(37.D0*A+CORA1068
     7217.D0)*U*F+6.D0*(6.D0*((((4.D0*A+40.D0)*A+151.D0)*A+94.D0)*A+84.DCORA1069
     80)-2.D0*((24.D0*A+186.D0)*A+477.D0)*Q+(2.D0*A+3.D0)*(2.D0*A+5.D0)*CORA1070
     9(2.D0*(A+1.D0)*(A+3.D0)*(2.D0*A+7.D0)*U-7.D0*(A+3.D0)*((11.D0*A+51CORA1071
     A.D0)*F+4.D0*(2.D0*A+7.D0)*(A+1.D0)*(A+3.D0)/W)/W))/W))/W)/W       CORA1072
      C(4)=B4+6.D0*((240.D0*(A-2.D0)*(2.D0*A-3.D0)*(9.D0*Q+(8.D0*A+118.DCORA1073
     10)*A+141.D0)*Q/(2.D0*A+3.D0)-60.D0*(A**2-4.D0)*(2.D0*A-3.D0)*(3.D0CORA1074
     2*A-5.D0)*Q*U-(A+1.D0)*(2.D0*A+1.D0)*(480.D0*(((2.D0*A+33.D0)*A+226CORA1075
     3.D0)*A+840.D0)+(A+2.D0)*((A+3.D0)*(2.D0*A+5.D0)*((233.D0*A+1798.D0CORA1076
     4)*A+2520.D0)*U**2-4.D0*(((262.D0*A+3523.D0)*A+16926.D0)*A+17640.D0CORA1077
     5)*U)))*F-4.D0*(60.D0*(7.D0*(((((4.D0*A+60.D0)*A+291.D0)*A+969.D0)*CORA1078
     6A+1409.D0)*A+690.D0)+(A-2.D0)*(2.D0*A-3.D0)*(2.D0*A-5.D0)*Q)*Q-(A+CORA1079
     71.D0)*(2.D0*A+3.D0)*(60.D0*A*(2.D0*A+1.D0)*(((2.D0*A+33.D0)*A+226.CORA1080
     8D0)*A+840.D0)+(A+2.D0)*(2.D0*A+5.D0)*(5.D0*((58.D0*A+473.D0)*A+130CORA1081
     92.D0)*Q-A*(2.D0*A+1.D0)*((73.D0*A+822.D0)*A+3024.D0+6.D0*(A+3.D0)*CORA1082
     A(2.D0*A+5.D0)*(2.D0*A+7.D0)*U))*U)+5.D0*(A+2.D0)*(2.D0*A+3.D0)*(12CORA1083
     B.D0*(((22.D0*A+273.D0)*A+1001.D0)*A+1590.D0)*Q*F-(A+1.D0)*(12.D0*(CORA1084
     C2.D0*A+1.D0)*(((2.D0*A+33.D0)*A+226.D0)*A+840.D0)*F+(A+2.D0)*(2.D0CORA1085
     D*A+5.D0)*(5.D0*(A+3.D0)*(2.D0*A+1.D0)*(17.D0*A+84.D0)*U*F-6.D0*(15CORA1086
     E.D0*((20.D0*A+164.D0)*A+357.D0)*Q-(2.D0*A+1.D0)*(A*((166.D0*A+1399CORA1087
     F.D0)*A+3108.D0)+(A+3.D0)*(2.D0*A+5.D0)*(A*(4.D0*A+14.D0)*U-7.D0*((CORA1088
     G19.D0*A+84.D0)*F+4.D0*A*(2.D0*A+7.D0)*(A+3.D0)/W)/W)))/W)))/W)/W)/CORA1089
     HW                                                                 CORA1090
   43 A1=-2.D0*A**2*Y*B1*Z                                              CORA1091
      A2=Y*((2.D0*A+1.D0)*((2.D0*(A**2-A)**2*(1.D0+S**2)+Y**2*(A**2-A-.5CORA1092
     1D0))*B1-Y*(P*B2+Q*B3))+(4.D0*A-2.D0)*(A+1.D0)**2*P*Q*B4)*Z        CORA1093
      A3=-Y*((2.D0*A-1.D0)*((2.D0*(A**2+A)**2*(1.D0+S**2)+Y**2*(A**2+A-.CORA1094
     15D0))*B4-Y*(B2+B3))+(4.D0*A+2.D0)*(A-1.D0)**2*B1)*Z               CORA1095
      A4=2.D0*A**2*Y*B4*Z                                               CORA1096
      IF (X.EQ.0.D0) GO TO 46                                           CORA1097
      A1=A1+X*2.D0*P*((A*X-2.D0*F)*B2-2.D0*Q*(A+1.D0)*B4)               CORA1098
      A2=A2+X*P*((2.D0*Q*((2.D0*A+3.D0)*(A+1.D0)*F+((2.D0*A+3.D0)*A-4.D0CORA1099
     1)*E*S)-2.D0*P*(2.D0*A-3.D0)*(2.D0*A+1.D0)*F+(2.D0*A+1.D0)*((((2.D0CORA1100
     2*A-1.D0)*A-8.D0)*A+5.D0)*F-S*((A+1.D0)*((6.D0*A-9.D0)*A+1.D0)*E-S*CORA1101
     3((6.D0*A-7.D0)*(A**2-1.D0)*F-S*((((2.D0*A-5.D0)*A+2.D0)*A-1.D0)*E)CORA1102
     4))))*B2+2.D0*Q*(A+1.D0)*((2.D0*A+3.D0)*(Q+P)+(2.D0*A-1.D0)*(4.D0*ECORA1103
     5*F*S+(1.D0+S**2)*((2.D0*A-4.D0)*A-3.D0)))*B4)                     CORA1104
      A3=A3+X*((2.D0*P*((2.D0*A-3.D0)*(A-1.D0)*E*S+F*((2.D0*A-3.D0)*A-4.CORA1105
     1D0))-2.D0*Q*E*S*(2.D0*A+3.D0)*(2.D0*A-1.D0)-(2.D0*A-1.D0)*((((2.D0CORA1106
     2*A+5.D0)*A+2.D0)*A+1.D0)*F-S*((6.D0*A+7.D0)*(A**2-1.D0)*E-S*((A-1.CORA1107
     3D0)*((6.D0*A+9.D0)*A+1.D0)*F-S*((((2.D0*A+1.D0)*A-8.D0)*A-5.D0)*E)CORA1108
     4))))*B2+(-4.D0*P*Q*((2.D0*A+1.D0)*A+2.D0)-(2.D0*A-1.D0)*(2.D0*S*E*CORA1109
     5F*(2.D0*A+3.D0)*(Q+P+S**2+1.D0)-A**2*(((A+3.D0)*A+2.5D0)*(1.D0+S**CORA1110
     64)-S**2*((2.D0*A-2.D0)*A-7.D0))+A*(A-1.D0)*(2.D0*A+3.D0)*(1.D0+S**CORA1111
     72)*(P+Q)-(S**2-1.D0)*((2.D0*A+4.D0)*A+.5D0)*(Q-P)))*B4)           CORA1112
      A4=A4+X*2.D0*(((A-1.D0)*(P+Q)+Y**2)*B4+(2.D0*E*S-A*X)*B2)         CORA1113
   44 A4=A4+X*2.D0*((2.D0*F+A*X)*B3-2.D0*(A-1.D0)*B1)                   CORA1114
   45 A1=A1+X*2.D0*(((A+1.D0)*(Q+P)-Y**2)*B1-Q*(A*X+2.D0*E*S)*B3)       CORA1115
      A2=A2+X*((-4.D0*P*Q*(2.D0*A**2-A+2.D0)-(2.D0*A+1.D0)*(2.D0*S*E*F*(CORA1116
     12.D0*A-3.D0)*(Q+P+S**2+1.D0)+A**2*(((A-3.D0)*A+2.5D0)*(1.D0+S**4)-CORA1117
     2S**2*((2.D0*A+2.D0)*A-7.D0))+A*(A+1.D0)*(2.D0*A-3.D0)*(1.D0+S**2)*CORA1118
     3(P+Q)+(S**2-1.D0)*((2.D0*A-4.D0)*A+.5D0)*(Q-P)))*B1+Q*(2.D0*P*((2.CORA1119
     4D0*A+3.D0)*(A+1.D0)*E*S+F*((2.D0*A+3.D0)*A-4.D0))-2.D0*Q*E*S*(2.D0CORA1120
     5*A-3.D0)*(2.D0*A+1.D0)-(2.D0*A+1.D0)*((((2.D0*A-5.D0)*A+2.D0)*A-1.CORA1121
     6D0)*F-S*((6.D0*A-7.D0)*(A**2-1.D0)*E-S*((A+1.D0)*((6.D0*A-9.D0)*A+CORA1122
     71.D0)*F-S*((((2.D0*A-1.D0)*A-8.D0)*A+5.D0)*E)))))*B3)             CORA1123
      A3=A3+X*(2.D0*(A-1.D0)*((2.D0*A-3.D0)*(Q+P)+(2.D0*A+1.D0)*(4.D0*E*CORA1124
     1F*S+(1.D0+S**2)*((2.D0*A+4.D0)*A-3.D0)))*B1+(2.D0*Q*((2.D0*A-3.D0)CORA1125
     2*(A-1.D0)*F+((2.D0*A-3.D0)*A-4.D0)*E*S)-2.D0*P*(2.D0*A+3.D0)*(2.D0CORA1126
     3*A-1.D0)*F+(2.D0*A-1.D0)*((((2.D0*A+1.D0)*A-8.D0)*A-5.D0)*F-S*((A-CORA1127
     41.D0)*((6.D0*A+9.D0)*A+1.D0)*E-S*((6.D0*A+7.D0)*(A**2-1.D0)*F-S*((CORA1128
     5((2.D0*A+5.D0)*A+2.D0)*A+1.D0)*E)))))*B3)                         CORA1129
   46 B(1)=A1*DSQRT(((A-1.D0)**2+E**2)*((A-1.D0)**2+F**2))*(2.D0*A-3.D0)CORA1130
     1/(BD*A*(2.D0*A-1.D0))                                             CORA1131
      B(2)=A2/(A*S*BD*(2.D0*A+1.D0))                                    CORA1132
      B(3)=A3/(A*S*BD*(2.D0*A-1.D0))*DSQRT(P*Q)                         CORA1133
      B(4)=A4*DSQRT(P*Q*((A+1.D0)**2+E**2)*((A+1.D0)**2+F**2))*(2.D0*A+3CORA1134
     1.D0)/(BD*A*(2.D0*A+1.D0))                                         CORA1135
      IF (LT) RETURN                                                    CORA1136
      Z=-2.D0*BD*V*W*DSQRT(S)/DEN                                       CORA1137
      BD=A**2*BD*DSQRT(V*W)**3                                          CORA1138
      A1=A1*(A-1.D0)**2                                                 CORA1139
      A4=A4*(A+1.D0)**2                                                 CORA1140
      C(1)=C(1)/Z-(A+Y*W*(.5D0*A-1.D0)/(A-1.D0)**2)*(2.D0*A-1.D0)*A1/BD CORA1141
      C(2)=(C(2)/Z+W*(A1-P*A4)/BD)*DSQRT(Q)                             CORA1142
      C(3)=(C(3)/Z+W*(A1-Q*A4)/BD)*DSQRT(P)                             CORA1143
      C(4)=(C(4)/Z+(A+Y*W*(.5D0*A+1.D0)/(A+1.D0)**2)*(2.D0*A+1.D0)*A4/BDCORA1144
     1)*DSQRT(P*Q)                                                      CORA1145
      RETURN                                                            CORA1146
C FOR NEUTRONS ( COULOMB PARAMETER 0.)                                  CORA1147
   47 X=W**2                                                            CORA1148
      GO TO ( 48 , 49 , 52 , 55 , 59 , 63 ) , LQ                        CORA1149
   48 IF ((LL.EQ.1).OR.(U.EQ.0)) GO TO 70                               CORA1150
C MULTIPOLE LQ=1 L1=L2-1 (USELESS)                                      CORA1151
      B(2)=(U+2.D0-2.D0*A)/(DSQRT(S)*U)                                 CORA1152
      B(3)=DSQRT(S)*(2.D0*A+2.D0)/U                                     CORA1153
      IF (LT) RETURN                                                    CORA1154
      C(1)=DSQRT(S)/(U*X)                                               CORA1155
      C(4)=C(1)/S                                                       CORA1156
      RETURN                                                            CORA1157
   49 GO TO ( 50 , 70 , 51 ) , LL                                       CORA1158
C MULTIPOLE LQ=2 L1=L2                                                  CORA1159
   50 B(2)=1.D0                                                         CORA1160
      RETURN                                                            CORA1161
C MULTIPOLE LQ=2 L1=L2-2                                                CORA1162
   51 B(2)=(2.D0*A-1.D0)/(3.D0*S)                                       CORA1163
      B(3)=-(A+1.D0)/1.5D0                                              CORA1164
      IF (.NOT.LT) C(2)=-B(2)/(X*V)                                     CORA1165
      RETURN                                                            CORA1166
   52 GO TO ( 70 , 53 , 70 , 54 ) , LL                                  CORA1167
C MULTIPOLE LQ=3 L1=L2-1                                                CORA1168
   53 B(2)=1.D0/(3.D0*DSQRT(S))                                         CORA1169
      B(3)=-S*B(2)                                                      CORA1170
      IF (.NOT.LT) C(2)=-B(2)/(X*V)                                     CORA1171
      RETURN                                                            CORA1172
C MULTIPOLE LQ=3 L1=L2-3                                                CORA1173
   54 Y=15.D0*S*DSQRT(S)                                                CORA1174
      B(2)=(1.D0-2.D0*U*(A-1.D0))/Y                                     CORA1175
      B(3)=((2.D0*A+1.D0)*U-1.D0)*S/Y                                   CORA1176
      IF (LT) RETURN                                                    CORA1177
      C(1)=(6.D0*A-3.D0)/(Y*X**2*S)                                     CORA1178
      C(2)=(2.D0+U*(2.D0*A+1.D0)-(12.D0*A**2-3.D0)/X)/(Y*X*V)           CORA1179
      C(3)=-3.D0/(Y*X*W)                                                CORA1180
      C(4)=(6.D0*A+3.D0)/(Y*X**2)                                       CORA1181
      RETURN                                                            CORA1182
   55 GO TO ( 56 , 70 , 57 , 70 , 58 ) , LL                             CORA1183
C MULTIPOLE LQ=4 L1=L2                                                  CORA1184
   56 B(2)=1.D0/(3.D0*A+6.D0)                                           CORA1185
      B(3)=-(U+2.D0)*B(2)/(2.D0*S)                                      CORA1186
      IF (LT) RETURN                                                    CORA1187
      C(2)=-B(2)/(2.D0*X*V)                                             CORA1188
      C(3)=C(2)/S                                                       CORA1189
      C(4)=3.D0*C(3)/W                                                  CORA1190
      RETURN                                                            CORA1191
C MULTIPOLE LQ=4 L1=L2-2                                                CORA1192
   57 Y=15.D0*S*(A+2.D0)                                                CORA1193
      B(2)=-(U*(A-1.D0)-3.D0)/Y                                         CORA1194
      B(3)=((A+.5D0)*U-3.D0)*S/Y                                        CORA1195
      IF (LT) RETURN                                                    CORA1196
      C(1)=(3.D0*A+6.D0)/(Y*X**2*S)                                     CORA1197
      C(2)=-(3.D0-(2.D0*A+1.D0)*(U-(6.D0*A+12.D0)/X))/(2.D0*Y*X*V)      CORA1198
      C(3)=-1.5D0/(Y*X*W)                                               CORA1199
      C(4)=-(2.D0*A+1.D0)*C(3)/W                                        CORA1200
      RETURN                                                            CORA1201
C MULTIPOLE LQ=4 L1=L2-4                                                CORA1202
   58 Y=210.D0*(A+2.D0)*S                                               CORA1203
      B(2)=(6.D0-2.D0*(A-1.D0)*U*(2.D0-(2.D0*A+3.D0)*U))/(Y*S)          CORA1204
      B(3)=-(6.D0-U*(4.D0*A-1.D0-U*(2.D0*A+3.D0)*(2.D0*A+1.D0)))/Y      CORA1205
      IF (LT) RETURN                                                    CORA1206
      C1=U-(10.D0*A-5.D0)/X                                             CORA1207
      C(1)=-(6.D0*A+12.D0)*(4.D0+(2.D0*A+3.D0)*C1)/(Y*X**2*S**2)        CORA1208
      C(2)=-(3.D0+(2.D0*A+10.D0)*U-(A+2.D0)*(108.D0*A-6.D0)/X+(2.D0*A+3.CORA1209
     1D0)*(2.D0*A+1.D0)*(U**2-(6.D0*A+12.D0)*C1/X))/(Y*X*V*S)           CORA1210
      C(3)=-(3.D0-(6.D0*A+9.D0)*(U-(10.D0*A+20.D0)/X))/(Y*X*V)          CORA1211
      C(4)=-(2.D0*A+1.D0)*C(3)/W-(30.D0*A+60.D0)/(Y*X**2*S)             CORA1212
      RETURN                                                            CORA1213
   59 GO TO ( 70 , 60 , 70 , 61 , 70 , 62 ) , LL                        CORA1214
C MULTIPOLE LQ=5 L1=L2-1                                                CORA1215
   60 Y=60.D0*(A+2.D0)*(A+3.D0)*DSQRT(S)                                CORA1216
      B(2)=(16.D0-U*(2.D0*A-2.D0))/Y                                    CORA1217
      B(3)=-(16.D0-U*(2.D0*A-10.D0+U*(2.D0*A+1.D0)))/(Y*S)              CORA1218
      IF (LT) RETURN                                                    CORA1219
      C(1)=6.D0*(A+2.D0)/(S*Y*X**2)                                     CORA1220
      C(2)=-(8.D0-(2.D0*A+1.D0)*(U-6.D0*(A+2.D0)/X))/(Y*X*V)            CORA1221
      C(3)=-(8.D0+3.D0*U-30.D0*(A+2.D0)/X)/(Y*X*V*S)                    CORA1222
      C(4)=(6.D0*A-12.D0+(15.D0*U-(60.D0*A+30.D0)*(A+2.D0)/X)/S**2)/(Y*XCORA1223
     1**2)                                                              CORA1224
      RETURN                                                            CORA1225
C MULTIPOLE LQ=5 L1=L2-3                                                CORA1226
   61 Y=420.D0*(A+2.D0)*(A+3.D0)*DSQRT(S)                               CORA1227
      B(2)=(48.D0-U*(2.D0*A-2.D0)*(9.D0-U*(2.D0*A+3.D0)))/(Y*S)         CORA1228
      B(3)=-(48.D0-U*(18.D0*A+6.D0-U*(2.D0*A+1.D0)*(2.D0*A+3.D0)))/Y    CORA1229
      IF (LT) RETURN                                                    CORA1230
      C1=U-(10.D0*A+30.D0)/X                                            CORA1231
      C(1)=(6.D0*A+12.D0)*(3.D0-(2.D0*A+3.D0)*C1)/(Y*X**2*S**2)         CORA1232
      C(2)=((24.D0*A+162.D0)*(A+2.D0)/X-24.D0+(12.D0*A-3.D0)*U-(2.D0*A+1CORA1233
     1.D0)*(2.D0*A+3.D0)*(U**2-(6.D0*A+12.D0)*C1/X))/(Y*X*S*V)          CORA1234
      C(3)=-(24.D0-(6.D0*A+9.D0)*(U-(10.D0*A+20.D0)/X))/(Y*X*V)         CORA1235
      C(4)=-(2.D0*A+1.D0)*C(3)/W-(30.D0*A+60.D0)/(Y*X**2*S)             CORA1236
      RETURN                                                            CORA1237
C MULTIPOLE LQ=5 L1=L2-5                                                CORA1238
   62 Y=3780.D0*(A+2.D0)*(A+3.D0)*S*DSQRT(S)                            CORA1239
      B(2)=(48.D0-U*(2.D0*A-2.D0)*(15.D0-U*(6.D0*A+6.D0-U*(2.D0*A+3.D0)*CORA1240
     1(2.D0*A+5.D0))))/(Y*S)                                            CORA1241
      B(3)=-(48.D0-U*(30.D0*A-6.D0-U*(12.D0*A**2+12.D0*A-9.D0-U*(8.D0*A*CORA1242
     1*3+36.D0*A**2+46.D0*A+15.D0))))/Y                                 CORA1243
      IF (LT) RETURN                                                    CORA1244
      C1=U**2-(10.D0*A+30.D0)*(U-(14.D0*A-7.D0)/X)/X                    CORA1245
      C(1)=(6.D0*A+12.D0)*(3.D0+(6.D0*A+24.D0)*U-(A+3.D0)*(260.D0*A+110.CORA1246
     1D0)/X+(2.D0*A+5.D0)*(2.D0*A+3.D0)*C1)/(Y*X**2*S**2)               CORA1247
      C(2)=-(24.D0-(18.D0*A-9.D0)*U+(6.D0*A+12.D0)*(66.D0*A+183.D0)/X-(2CORA1248
     1.D0*A+3.D0)*(18.D0*U**2-(12.D0*A+24.D0)*((8.D0*A+29.D0)*U-(A+3.D0)CORA1249
     2*(200.D0*A-40.D0)/X)/X+(2.D0*A+5.D0)*(2.D0*A+1.D0)*(U**3-(6.D0*A+1CORA1250
     32.D0)*C1/X)))/(Y*X*V*S)                                           CORA1251
      C1=U**2-(10.D0*A+20.D0)*(U-(14.D0*A+42.D0)/X)/X                   CORA1252
      C(3)=-(24.D0-(12.D0*A+3.D0)*U+(6.D0*A+9.D0)*(2.D0*A+5.D0)*C1-(A+2.CORA1253
     1D0)*(360.D0*A+1170.D0)/X)/(Y*X*V)                                 CORA1254
      C(4)=(18.D0*A-36.D0+(6.D0*A+9.D0)*((6.D0*A+33.D0)*U+(2.D0*A+1.D0)*CORA1255
     1(2.D0*A+5.D0)*C1-(A+2.D0)*(260.D0*A+830.D0)/X))/(Y*X**2*S)        CORA1256
      RETURN                                                            CORA1257
   63 GO TO ( 64 , 70 , 65 , 70 , 66 , 70 , 67 ) , LL                   CORA1258
C MULTIPOLE LQ=6 L1=L2                                                  CORA1259
   64 Y=120.D0*(A+2.D0)*(A+3.D0)*(A+4.D0)*S**2                          CORA1260
      B(2)=(32.D0+U*(32.D0-U*(2.D0*A-2.D0)))/Y                          CORA1261
      B(3)=-(32.D0+U*(48.D0-U*(4.D0*A-14.D0+U*(2.D0*A+1.D0))))/(Y*S)    CORA1262
      IF (LT) RETURN                                                    CORA1263
      C(1)=(A+2.D0)*(12.D0+6.D0*U-(60.D0*A+180.D0)/X)/(Y*X**2*S)        CORA1264
      C(2)=-(16.D0-U*(2.D0*A-12.D0+U*(2.D0*A+1.D0))+(6.D0*A+12.D0)*(2.D0CORA1265
     1*A-4.D0+(2.D0*A+1.D0)*(U-(10.D0*A+30.D0)/X))/X)/(Y*X*V)           CORA1266
      C(3)=-(16.D0+U*(2.D0*A+20.D0+3.D0*U)-(6.D0*A+12.D0)*(4.D0-2.D0*A+5CORA1267
     1.D0*U+(20.D0*A+10.D0)*(A+3.D0)/X)/X)/(Y*X*S*V)                    CORA1268
      C(4)=((12.D0*A-24.D0)*S**2+(6.D0*A+3.D0)*(U**2-(10.D0*A+20.D0)*(2.CORA1269
     1D0+U+(4.D0*A+2.D0)*(A+3.D0)/X)/X))/(Y*X**2*S**2)                  CORA1270
      RETURN                                                            CORA1271
C MULTIPOLE LQ=6 L1=L2-2                                                CORA1272
   65 Y=840.D0*(A+2.D0)*(A+3.D0)*(A+4.D0)*S                             CORA1273
      B(2)=(160.D0-U*(2.D0*A-2.D0)*(16.D0-U*(2.D0*A+3.D0)))/Y           CORA1274
      B(3)=-(160.D0-U*(32.D0*A-112.D0-U*((4.D0*A-24.D0)*A-10.D0+U*(2.D0*CORA1275
     1A+3.D0)*(2.D0*A+1.D0))))/(Y*S)                                    CORA1276
      IF (LT) RETURN                                                    CORA1277
      C1=U-(10.D0*A+30.D0)/X                                            CORA1278
      C(1)=(60.D0-(12.D0*A+18.D0)*C1)*(A+2.D0)/(Y*X**2*S)               CORA1279
      C(2)=-(80.D0-(26.D0*A+4.D0)*U+(60.D0*A**2-240.D0)/X+(2.D0*A+1.D0)*CORA1280
     1(2.D0*A+3.D0)*(U**2-(6.D0*A+12.D0)*C1/X))/(Y*X*V)                 CORA1281
      C(3)=-(80.D0-U*(6.D0*A-36.D0)+60.D0*(A**2-4.D0)/X-(6.D0*A+9.D0)*(UCORA1282
     1**2-(10.D0*A+20.D0)*(U-(14.D0*A+42.D0)/X)/X))/(Y*X*V*S)           CORA1283
      C(4)=-(105.D0*(1.D0-(10.D0*A+20.D0)/X)-(60.D0*A-15.D0)*S**2+(6.D0*CORA1284
     1A+3.D0)*(2.D0*A+3.D0)*(U*S**2-(10.D0*A+20.D0)*(1.D0+U-(14.D0*A+42.CORA1285
     2D0)/X)/X))/(Y*X**2*S**2)                                          CORA1286
      RETURN                                                            CORA1287
C MULTIPOLE LQ=6 L1=L2-4                                                CORA1288
   66 Y=7560.D0*(A+2.D0)*(A+3.D0)*(A+4.D0)*S                            CORA1289
      B(2)=(480.D0-U*(2.D0*A-2.D0)*(96.D0-U*(24.D0*A+33.D0-U*(2.D0*A+3.DCORA1290
     10)*(2.D0*A+5.D0))))/(Y*S)                                         CORA1291
      B(3)=-(480.D0-U*(192.D0*A+48.D0-U*(2.D0*A+3.D0)*(24.D0*A+6.D0-U*(2CORA1292
     1.D0*A+1.D0)*(2.D0*A+5.D0))))/Y                                    CORA1293
      IF (LT) RETURN                                                    CORA1294
      C1=(U**2-(10.D0*A+30.D0)*(U-(14.D0*A+56.D0)/X)/X)                 CORA1295
      C(1)=(6.D0*A+12.D0)*(30.D0-(12.D0*A+3.D0)*U-(A+3.D0)*(80.D0*A+470.CORA1296
     1D0)/X+(2.D0*A+3.D0)*(2.D0*A+5.D0)*C1)/(Y*X**2*S**2)               CORA1297
      C(2)=-(240.D0-U*(126.D0*A-36.D0)+180.D0*(A**2-4.D0)/X+(2.D0*A+3.D0CORA1298
     1)*((18.D0*A-9.D0)*U**2-(6.D0*A+12.D0)*((2.D0*A-49.D0)*U+(10.D0*A+3CORA1299
     20.D0)*(22.D0*A+109.D0)/X)/X-(2.D0*A+1.D0)*(2.D0*A+5.D0)*(U**3-(6.DCORA1300
     30*A+12.D0)*C1/X)))/(Y*X*W*S**2)                                   CORA1301
      C1=(2.D0*A+5.D0)*(U**2-(10.D0*A+20.D0)*(U-(14.D0*A+42.D0)/X)/X)   CORA1302
      C(3)=-(240.D0-(66.D0*A+84.D0)*U+180.D0*(A**2-4.D0)/X+(6.D0*A+9.D0)CORA1303
     1*C1)/(Y*X*V)                                                      CORA1304
      C(4)=((A-2.D0)*(180.D0-(72.D0*A+108.D0)*U)+(6.D0*A+9.D0)*((2.D0*A+CORA1305
     11.D0)*C1-(A+2.D0)*(80.D0*A+740.D0)/X))/(Y*X**2*S)                 CORA1306
      RETURN                                                            CORA1307
C MULTIPOLE LQ=6 L1=L2-6                                                CORA1308
   67 Y=83160.D0*(A+2.D0)*(A+3.D0)*(A+4.D0)*S**2                        CORA1309
      B(2)=(480.D0-U*(2.D0*A-2.D0)*(144.D0-U*(54.D0*A+57.D0-U*(2.D0*A+5.CORA1310
     1D0)*(8.D0*A+6.D0-U*(2.D0*A+7.D0)*(2.D0*A+3.D0)))))/(Y*S)          CORA1311
      B(3)=-(480.D0-U*(288.D0*A-48.D0-U*(108.D0*A**2+120.D0*A-78.D0-U*(2CORA1312
     1.D0*A+3.D0)*(2.D0*A+5.D0)*(8.D0*A-5.D0-U*(2.D0*A+1.D0)*(2.D0*A+7.DCORA1313
     20)))))/Y                                                          CORA1314
      IF (LT) RETURN                                                    CORA1315
      C1=U**3-(10.D0*A+30.D0)*(U**2-(14.D0*A+56.D0)*(U-(18.D0*A-9.D0)/X)CORA1316
     1/X)/X                                                             CORA1317
      C(1)=(6.D0*A+12.D0)*(30.D0-(18.D0*A-3.D0)*U+(10.D0*A+30.D0)*(118.DCORA1318
     10*A+457.D0)/X-(2.D0*A+5.D0)*((4.D0*A+36.D0)*U**2-(10.D0*A+30.D0)*(CORA1319
     2(24.D0*A+106.D0)*U-(14.D0*A+56.D0)*(52.D0*A+6.D0)/X)/X+(2.D0*A+7.DCORA1320
     30)*(2.D0*A+3.D0)*C1))/(Y*X**2*S**2)                               CORA1321
      C(2)=-(240.D0-(174.D0*A-84.D0)*U+((72.D0*A+36.D0)*A-63.D0)*U**2+(1CORA1322
     180.D0*(A**2-4.D0)-(6.D0*A+12.D0)*(((136.D0*A+772.D0)*A+1377.D0)*U-CORA1323
     2(10.D0*A+30.D0)*((712.D0*A+3370.D0)*A+2193.D0)/X))/X-(2.D0*A+5.D0)CORA1324
     3*(2.D0*A+3.D0)*((2.D0*A-26.D0)*U**3+(6.D0*A+12.D0)*((14.D0*A+82.D0CORA1325
     4)*U**2-(10.D0*A+30.D0)*((38.D0*A+166.D0)*U-(14.D0*A+56.D0)*(70.D0*CORA1326
     5A-19.D0)/X)/X)/X-(2.D0*A+7.D0)*(2.D0*A+1.D0)*(U**4-6.D0*(A+2.D0)*CCORA1327
     61/X)))/(Y*X*V*S)                                                  CORA1328
      C1=U**3-(10.D0*A+20.D0)*(U**2-(14.D0*A+42.D0)*(U-(18.D0*A+72.D0)/XCORA1329
     1)/X)/X                                                            CORA1330
      C(3)=-(240.D0-(114.D0*A+36.D0)*U+180*(A**2-4.D0)/X+(6.D0*A+15.D0)*CORA1331
     1((6.D0*A-1.D0)*U**2+(10.D0*A+20.D0)*((10.D0*A+57.D0)*U-(14.D0*A+42CORA1332
     2.D0)*(34.D0*A+141.D0)/X)/X-(2.D0*A+7.D0)*(2.D0*A+3.D0)*C1))/(Y*X*VCORA1333
     3)                                                                 CORA1334
      C(4)=(180.D0*A-360.D0-(108.D0*A+72.D0)*(A-2.D0)*U+(60.D0*A+120.D0)CORA1335
     1*((118.D0*A+796.D0)*A+1401.D0)/X-(2.D0*A+5.D0)*(6.D0*A+9.D0)*((4.DCORA1336
     20*A+47.D0)*U**2-(10.D0*A+20.D0)*((24.D0*A+117.D0)*U-(14.D0*A+42.D0CORA1337
     3)*(52.D0*A+215.D0)/X)/X+(2.D0*A+7.D0)*(2.D0*A+1.D0)*C1))/(Y*X**2*SCORA1338
     4)                                                                 CORA1339
      RETURN                                                            CORA1340
   68 WRITE (MW,1000) LQ,LL                                             CORA1341
      RETURN                                                            CORA1342
   69 WRITE (MW,1001) LQ,LL                                             CORA1343
      RETURN                                                            CORA1344
   70 WRITE (MW,1002) LQ,LL                                             CORA1345
      RETURN                                                            CORA1346
 1000 FORMAT (' IN CORA: LQ =',I3,' TOO LARGE OR L1-L2+1=',I3,' OUT OF BCORA1347
     1OUNDS')                                                           CORA1348
 1001 FORMAT (' IN CORA: COEFFICIENTS SUPPRESSED FOR LQ =',I3,' AND L1-LCORA1349
     12+1=',I3)                                                         CORA1350
 1002 FORMAT (' IN CORA: COEFFICIENTS NOT GIVEN BY THE METHOD FOR LQ =',CORA1351
     1I3,' AND L1-L2+1=',I3)                                            CORA1352
      END                                                               CORA1353
C 01/01/04                                                      ECIS03  INTI-000
      SUBROUTINE INTI(FAM,X,FR,GR,WRE,PAD,IPE,ISM,KAB,W,ITERM,NC,V,VI,NVINTI-001
     1I,MC,NAT,AT,AG,NPX,H,ACNV,EITER,NCIN,NNI,ITERR,LO)                INTI-002
C  E. C. I. S. METHOD: SCHROEDINGER EQUATION DRIVING ROUTINE.           INTI-003
C  INTI CALLS INSH  TO SOLVE THE SINGLE HOMOGENEOUS EQUATIONS           INTI-004
C             INSI  TO SOLVE THE SINGLE INHOMOGENEOUS EQUATIONS         INTI-005
C  PADE APPROXIMANTS OF TYPE I MAY BE USED TO ACCELERATE THE CONVERGENCEINTI-006
C INPUT VARIABLES: FAM(IC,I): MATCHING VALUES FOR I=1,6                 INTI-007
C                             CONSTANTS OF EACH EQUATION FOR I=7,10     INTI-008
C                  ISM:   NUMBER OF RADIAL POINTS                       INTI-009
C                  KAB:   MAXIMUM NUMBER OF COUPLED CHANNELS            INTI-010
C                  ITERM: MAXIMUM NUMBER OF ITERATIONS AND DIM. OF PAD  INTI-011
C                  NC:    NUMBER OF COUPLED EQUATIONS                   INTI-012
C                  V,VI:  REAL, IMAGINARY POTENTIALS AND COUPLINGS      INTI-013
C                  NVI:   ADDRESSES OF COUPLINGS                        INTI-014
C                  MC:    NUCLEAR STATE NUMBER, ANGULAR MOMENTA....     INTI-015
C                  NAT,AT:TABLE OF COUPLING COEFFICIENTS                INTI-016
C                  AG:    COULOMB INTEGRALS FOR COULOMB CORRECTIONS     INTI-017
C                  NPX:   NUMBER OF CENTRAL POTENTIALS                  INTI-018
C                  H:     STEP LENGTH                                   INTI-019
C                  ACNV:  EPSILON FOR NEGLIGIBLE FUNCTION VALUES        INTI-020
C                  EITER: CONVERGENCE EPSILON FOR THE SCATTERING COEF.  INTI-021
C                  NCIN:  NUMBER OF SOLUTIONS                           INTI-022
C                  LO(I): LOGICAL CONTROLS                              INTI-023
C  LO(22) =.TRUE.  NO USE OF PADE APPROXIMANTS FOR CONVERGENCE          INTI-024
C  LO(23) =.TRUE.  COUPLED EQUATIONS WHEN CONVERGENCE IS NOT OBTAINED   INTI-025
C  LO(29) =.TRUE.  NO DIAGONAL TERMS IN SECOND MEMBERS                  INTI-026
C  LO(44) +.TRUE.  COULOMB CORRECTIONS                                  INTI-027
C  LO(53) =.TRUE.  OUTPUT OF THE NUMBER OF ITERATIONS                   INTI-028
C  LO(57) =.TRUE.  OUTPUT OF PHASE-SHIFTS AT EACH E.C.I.S. ITERATION    INTI-029
C  LO(92) =.TRUE.  PURE DWBA CALCULATION                                INTI-030
C  LO(204)=.TRUE.  IF CONVERGENCE IS OBTAINED IN THE ITERATION          INTI-031
C  LO(206)=.TRUE.  WHEN THE ITERATION IS NOT THE LAST ONE PERMITTED     INTI-032
C  LO(207)=.TRUE.  IF ALL THE COUPLINGS HAVE TO BE CALCULATED BEFOREHANDINTI-033
C  LO(210)=.TRUE.  IF DERIVATIVES ARE NEEDED                            INTI-034
C  LO(221)=.TRUE.  FOR OPTICAL MODEL WITHOUT COUPLING                   INTI-035
C OUTPUT VARIABLES:FAM(IC,I+7): SCATTERING COEFFICIENTS                 INTI-036
C WORKING FIELDS:  X:     USED IN INSH AND INSI                         INTI-037
C                  FR:    SOLUTIONS OF HOMOGENEOUS EQUATIONS            INTI-038
C                  GR:    SOLUTIONS OF COUPLED EQUATIONS                INTI-039
C                  WRE:   REAL/IMAGINARY INHOMOGENEOUS TERM             INTI-040
C                  PAD(ITERM,KAB+2): PADE APPROXIMANTS                  INTI-041
C               IPE(I,1): FIRST NON NEGLIGIBLE POINT OF UNCOUPLED FUNC. INTI-042
C               IPE(I,2): FIRST NON NEGLIGIBLE POINT OF COUPLED FUNCT.  INTI-043
C                  W:     FREE PART OF THE STORAGE FOR COUPLINGS        INTI-044
C OUTPUT VARIABLES:NNI:   NUMBER OF EQ. WITH NEGLIGIBLE INHOMOG. TERM   INTI-045
C                  ITERR: LARGEST NUMBER OF ITERATIONS DONE FOR THIS J  INTI-046
C***********************************************************************INTI-047
      IMPLICIT REAL*8 (A-H,O-Z)                                         INTI-048
      LOGICAL LO(250)                                                   INTI-049
      DIMENSION FR(ISM,4,1),GR(2,ISM,1),WRE(2,1),IPE(NC,2),V(ISM,9),VI(IINTI-050
     1SM,9),W(ISM,1),NVI(KAB,KAB,4),MC(KAB,6),NAT(4,1),AT(2,1),FAM(KAB,8INTI-051
     2),X(1),PAD(2,ITERM,1),AG(KAB,KAB,4),Z(4),Y(2)                     INTI-052
      COMMON /INOUT/ MR,MW,MS                                           INTI-053
C COMPUTE ALL COUPLING POTENTIALS AND SOLVE ALL HOMOGENEOUS EQUATIONS   INTI-054
      I2=4*ISM                                                          INTI-055
      DO 4 I=1,NC                                                       INTI-056
      I1=MC(I,4)                                                        INTI-057
      IF (I1.LT.0) GO TO 1                                              INTI-058
      CALL INSH(FR(1,1,I),I,I1,KT,ACNV,FAM,X,KAB,ISM,V,VI,NPX,NAT,AT,NVIINTI-059
     1,MC,LO)                                                           INTI-060
      IPE(I,1)=KT                                                       INTI-061
      GO TO 3                                                           INTI-062
    1 I1=-I1                                                            INTI-063
      IF (I.EQ.I1) GO TO 3                                              INTI-064
      DO 2 IS=1,I2                                                      INTI-065
    2 FR(IS,1,I)=FR(IS,1,I1)                                            INTI-066
      IPE(I,1)=IPE(I1,1)                                                INTI-067
    3 IF (LO(57)) WRITE (MW,1000) FAM(I,7),FAM(I,8),I,IPE(I,1)          INTI-068
    4 CONTINUE                                                          INTI-069
      IF ((.NOT.LO(207)).OR.LO(221)) GO TO 32                           INTI-070
      IVV=0                                                             INTI-071
C CALCULATION OF THE NON DIAGONAL COUPLING POTENTIALS                   INTI-072
      DO 31 IC=1,NC                                                     INTI-073
      DO 27 IP=1,NC                                                     INTI-074
      K1=NVI(IP,IC,1)                                                   INTI-075
      K2=NVI(IP,IC,2)                                                   INTI-076
      K3=NVI(IP,IC,3)                                                   INTI-077
      IF (K2.EQ.K3.AND.IP.LT.IC) GO TO 25                               INTI-078
      DO 5 J=1,4                                                        INTI-079
    5 NVI(IP,IC,J)=0                                                    INTI-080
C NON DERIVATIVE COUPLING POTENTIALS                                    INTI-081
      IF (K1.GT.K2) GO TO 15                                            INTI-082
      IF (LO(29).AND.(IC.EQ.IP)) GO TO 15                               INTI-083
      IVV=IVV+1                                                         INTI-084
      NVI(IP,IC,1)=IVV                                                  INTI-085
      KT=IABS(NAT(1,K1))                                                INTI-086
      NIMA=K2+1-K1                                                      INTI-087
      IF (KT.EQ.NAT(1,K1)) NIMA=NIMA-1                                  INTI-088
      DO 6 IS=1,ISM                                                     INTI-089
    6 W(IS,IVV)=AT(2,K1)*V(IS,KT)                                       INTI-090
      IF (K1.EQ.K2) GO TO 9                                             INTI-091
      K4=K1+1                                                           INTI-092
      DO 8 K=K4,K2                                                      INTI-093
      KT=IABS(NAT(1,K))                                                 INTI-094
      IF (KT.EQ.NAT(1,K)) NIMA=NIMA-1                                   INTI-095
      DO 7 IS=1,ISM                                                     INTI-096
    7 W(IS,IVV)=W(IS,IVV)+AT(2,K)*V(IS,KT)                              INTI-097
    8 CONTINUE                                                          INTI-098
    9 IF (NIMA.EQ.0) GO TO 15                                           INTI-099
      IVV=IVV+1                                                         INTI-100
      NVI(IP,IC,2)=IVV                                                  INTI-101
      DO 11 K=K1,K2                                                     INTI-102
      IF (NAT(1,K).GT.0) GO TO 11                                       INTI-103
      KT=-NAT(1,K)                                                      INTI-104
      DO 10 IS=1,ISM                                                    INTI-105
   10 W(IS,IVV)=AT(2,K)*VI(IS,KT)                                       INTI-106
      GO TO 12                                                          INTI-107
   11 CONTINUE                                                          INTI-108
   12 K1=K+1                                                            INTI-109
      IF (K1.GT.K2) GO TO 15                                            INTI-110
      DO 14 K=K1,K2                                                     INTI-111
      IF (NAT(1,K).GT.0) GO TO 14                                       INTI-112
      KT=-NAT(1,K)                                                      INTI-113
      DO 13 IS=1,ISM                                                    INTI-114
   13 W(IS,IVV)=W(IS,IVV)+AT(2,K)*VI(IS,KT)                             INTI-115
   14 CONTINUE                                                          INTI-116
C DERIVATIVE COUPLING POTENTIALS                                        INTI-117
   15 K2=K2+1                                                           INTI-118
      IF (K2.GT.K3) GO TO 27                                            INTI-119
      IVV=IVV+1                                                         INTI-120
      NVI(IP,IC,3)=IVV                                                  INTI-121
      KT=IABS(NAT(1,K2))                                                INTI-122
      NIMA=K3+1-K2                                                      INTI-123
      IF (KT.EQ.NAT(1,K2)) NIMA=NIMA-1                                  INTI-124
      DO 16 IS=1,ISM                                                    INTI-125
   16 W(IS,IVV)=AT(2,K2)*V(IS,KT)                                       INTI-126
      IF (K2.EQ.K3) GO TO 19                                            INTI-127
      K4=K2+1                                                           INTI-128
      DO 18 K=K4,K3                                                     INTI-129
      KT=IABS(NAT(1,K))                                                 INTI-130
      IF (KT.EQ.NAT(1,K)) NIMA=NIMA-1                                   INTI-131
      DO 17 IS=1,ISM                                                    INTI-132
   17 W(IS,IVV)=W(IS,IVV)+AT(2,K)*V(IS,KT)                              INTI-133
   18 CONTINUE                                                          INTI-134
   19 IF (NIMA.EQ.0) GO TO 27                                           INTI-135
      IVV=IVV+1                                                         INTI-136
      NVI(IP,IC,4)=IVV                                                  INTI-137
      DO 21 K=K2,K3                                                     INTI-138
      KT=-NAT(1,K)                                                      INTI-139
      IF (KT.EQ.NAT(1,K)) GO TO 21                                      INTI-140
      DO 20 IS=1,ISM                                                    INTI-141
   20 W(IS,IVV)=AT(2,K)*VI(IS,KT)                                       INTI-142
      GO TO 22                                                          INTI-143
   21 CONTINUE                                                          INTI-144
   22 K2=K+1                                                            INTI-145
      IF (K2.GT.K3) GO TO 27                                            INTI-146
      DO 24 K=K2,K3                                                     INTI-147
      KT=-NAT(1,K)                                                      INTI-148
      IF (KT.EQ.NAT(1,K)) GO TO 24                                      INTI-149
      DO 23 IS=1,ISM                                                    INTI-150
   23 W(IS,IVV)=W(IS,IVV)+AT(2,K)*VI(IS,KT)                             INTI-151
   24 CONTINUE                                                          INTI-152
      GO TO 27                                                          INTI-153
C SYMMETRISATION OF THE TABLE                                           INTI-154
   25 DO 26 K=1,4                                                       INTI-155
   26 NVI(IP,IC,K)=NVI(IC,IP,K)                                         INTI-156
   27 CONTINUE                                                          INTI-157
C CORRECTION TO AN INCREASE OF THE IMAGINARY POTENTIAL                  INTI-158
      IF (MC(IC,6).EQ.0) GO TO 31                                       INTI-159
      I1=MC(IC,4)                                                       INTI-160
      IF (NVI(IC,IC,2).EQ.0) GO TO 29                                   INTI-161
      K=NVI(IC,IC,2)                                                    INTI-162
      DO 28 IS=1,ISM                                                    INTI-163
   28 W(IS,K)=W(IS,K)-MC(IC,6)*VI(IS,I1)                                INTI-164
      GO TO 31                                                          INTI-165
   29 IVV=IVV+1                                                         INTI-166
      NVI(IC,IC,2)=IVV                                                  INTI-167
      DO 30 IS=1,ISM                                                    INTI-168
   30 W(IS,IVV)=-MC(IC,6)*VI(IS,I1)                                     INTI-169
   31 CONTINUE                                                          INTI-170
   32 CONV=ACNV*H*H                                                     INTI-171
      NNI=0                                                             INTI-172
C LOOP ON SOLUTIONS                                                     INTI-173
      DO 46 NCI=1,NCIN                                                  INTI-174
      NCI1=NCI+8                                                        INTI-175
      NCI2=NCI1+NCIN                                                    INTI-176
C SET THE ZERO'S ORDER SOLUTION                                         INTI-177
      DO 33 IC=1,NC                                                     INTI-178
      IPE(IC,2)=ISM+1                                                   INTI-179
      FAM(IC,NCI1)=0.D0                                                 INTI-180
   33 FAM(IC,NCI2)=0.D0                                                 INTI-181
      FAM(NCI,NCI1)=FAM(NCI,7)                                          INTI-182
      FAM(NCI,NCI2)=FAM(NCI,8)                                          INTI-183
      IF ((IPE(NCI,1).GT.ISM-3).OR.LO(221)) GO TO 46                    INTI-184
      DO 34 IS=1,ISM                                                    INTI-185
      GR(1,IS,NCI)=FR(IS,1,NCI)                                         INTI-186
   34 GR(2,IS,NCI)=FR(IS,2,NCI)                                         INTI-187
      IPE(NCI,2)=IPE(NCI,1)                                             INTI-188
C DERIVE THE ZERO'S ORDER EQUATION                                      INTI-189
      IF (LO(210)) CALL INSI(WRE,GR,GR(1,1,NC+1),FR,FAM,X,PAD,PAD,1,EITEINTI-190
     1R,ACNV,KAB,ISM,IPE,NCI,V,VI,W,CONV,NAT,AT,NVI,NC,Y,Y,MC,LO,.TRUE.,INTI-191
     2H,Z)                                                              INTI-192
      AMAX=0.D0                                                         INTI-193
C E. C. I. S. LOOP                                                      INTI-194
      DO 44 KITER=1,ITERM                                               INTI-195
      ITERR=MAX0(ITERR,KITER)                                           INTI-196
      LO(204)=.TRUE.                                                    INTI-197
      LO(206)=((KITER.NE.ITERM).AND.(AMAX.LT.1.D10)).OR.LO(23)          INTI-198
      IF (AMAX.GT.1.D10) WRITE (MW,1001) AMAX,KITER                     INTI-199
      DO 43 IC=1,NC                                                     INTI-200
      I=MOD(IC+NCI-1,NC)+1                                              INTI-201
C COMPUTE SECOND MEMBERS AND SOLVE THE INHOMOGENEOUS EQUATIONS          INTI-202
      DO 35 J=1,4                                                       INTI-203
   35 Z(J)=0.D0                                                         INTI-204
      IF (LO(144)) GO TO 40                                             INTI-205
      DO 38 J=1,NC                                                      INTI-206
      IF ((LO(29).AND.(I.EQ.J)).OR.(IPE(J,2).GE.ISM)) GO TO 38          INTI-207
C ORDER IN FG   F(EI)*F(EF),G(EI)*F(EF),F(EI)*G(EF),G(EI)*G(EF)         INTI-208
      IF (LO(22)) GO TO 36                                              INTI-209
      IJ=KITER                                                          INTI-210
      IF (1+MOD(J+NC-NCI-1,NC).GE.IC) IJ=IJ-1                           INTI-211
      IF (IJ.EQ.0) GO TO 36                                             INTI-212
      Y(1)=PAD(1,IJ,J)                                                  INTI-213
      Y(2)=PAD(2,IJ,J)                                                  INTI-214
      GO TO 37                                                          INTI-215
   36 Y(1)=FAM(J,NCI1)                                                  INTI-216
      Y(2)=FAM(J,NCI2)                                                  INTI-217
   37 Z(1)=Z(1)+Y(1)*AG(I,J,3)-Y(2)*AG(I,J,1)                           INTI-218
      Z(2)=Z(2)+Y(1)*AG(I,J,1)+Y(2)*AG(I,J,3)                           INTI-219
      Z(3)=Z(3)+Y(1)*AG(I,J,4)-Y(2)*AG(I,J,2)                           INTI-220
      Z(4)=Z(4)+Y(1)*AG(I,J,2)+Y(2)*AG(I,J,4)                           INTI-221
   38 CONTINUE                                                          INTI-222
      IF (I.EQ.NCI) GO TO 39                                            INTI-223
      Z(1)=Z(1)+AG(I,NCI,1)                                             INTI-224
      Z(3)=Z(3)+AG(I,NCI,2)                                             INTI-225
   39 Z(3)=Z(3)-Z(2)                                                    INTI-226
      Z(4)=Z(4)+Z(1)                                                    INTI-227
      Z(1)=Z(1)+FAM(I,7)*Z(3)-FAM(I,8)*Z(4)                             INTI-228
      Z(2)=Z(2)+Z(3)*FAM(I,8)+Z(4)*FAM(I,7)                             INTI-229
   40 IF (I.NE.NCI) GO TO 41                                            INTI-230
      Z(1)=Z(1)-FAM(I,7)                                                INTI-231
      Z(2)=Z(2)-FAM(I,8)                                                INTI-232
      Z(3)=Z(3)-1.D0                                                    INTI-233
   41 IF (LO(23).AND.(.NOT.LO(206))) LO(204)=.TRUE.                     INTI-234
      CALL INSI(WRE,GR,GR(1,1,NC+1),FR,FAM(I,5),X,PAD(1,1,I),PAD(1,1,NC+INTI-235
     11),KITER,EITER,ACNV,KAB,ISM,IPE(1,2),I,V,VI,W,CONV,NAT,AT,NVI,NC,FINTI-236
     2AM(I,NCI1),FAM(I,NCI2),MC,LO,.FALSE.,H,Z)                         INTI-237
      IF (IPE(I,2).GE.ISM) GO TO 42                                     INTI-238
      AMAX=DMAX1(AMAX,DABS(FAM(I,NCI1))+DABS(FAM(I,NCI2)))              INTI-239
      IF (I.NE.NCI.AND.LO(92)) IPE(I,2)=ISM+1                           INTI-240
      GO TO 43                                                          INTI-241
   42 FAM(I,NCI1)=-Z(1)                                                 INTI-242
      FAM(I,NCI2)=-Z(2)                                                 INTI-243
      IF (LO(57)) WRITE (MW,1002)                                       INTI-244
      IF (KITER.EQ.1.AND.LO(144)) NNI=NNI+1                             INTI-245
      IF (I.EQ.NCI) IPE(NCI,2)=IPE(NCI,1)                               INTI-246
   43 CONTINUE                                                          INTI-247
      IF (LO(204).OR.(AMAX.GT.1.D10.AND.LO(23))) GO TO 45               INTI-248
   44 CONTINUE                                                          INTI-249
      KITER=MIN0(KITER,ITERM)                                           INTI-250
   45 IF (LO(53)) WRITE (MW,1003) KITER                                 INTI-251
   46 CONTINUE                                                          INTI-252
      NNI=NNI/NCIN                                                      INTI-253
      RETURN                                                            INTI-254
 1000 FORMAT (2D30.15,5X,2I5)                                           INTI-255
 1001 FORMAT (' MAXIMUM',D15.6,' OBTAINED IN PREVIOUS ITERATION. LAST ONINTI-256
     1E IS',I3)                                                         INTI-257
 1002 FORMAT (5X,'THE INHOMOGENEOUS TERM IS NEGLECTED')                 INTI-258
 1003 FORMAT (5X,I5,' ITERATIONS')                                      INTI-259
      END                                                               INTI-260
C 01/01/04                                                      ECIS03  INSH-000
      SUBROUTINE INSH(P,IC,I1,KT,ACONV,FAM,X,KAB,ISM,V,VI,NPX,NAT,AT,NVIINSH-001
     1,MC,LO)                                                           INSH-002
C  E. C. I. S. METHOD: INTEGRATION OF A SINGLE HOMOGENEOUS EQUATION BY  INSH-003
C  THE NUMEROV METHOD       - SCHROEDINGER EQUATION -                   INSH-004
C INPUT VARIABLES: IC:    CHANNEL NUMBER OF THE EQUATION                INSH-005
C                  ACONV: LIMIT FOR NEGLIGIBLE FUNCTION VALUES          INSH-006
C                  FAM(IC,I): MATCHING VALUES FOR I=1,4                 INSH-007
C                             WAVE NUMBER FOR I=6                       INSH-008
C                             CONSTANTS OF THIS EQUATION FOR I=7,10     INSH-009
C                  KAB:   MAXIMUM NUMBER OF COUPLED CHANNELS            INSH-010
C                  V,VI:  REAL, IMAGINARY POTENTIALS AND COUPLINGS      INSH-011
C                  NPX:   NUMBER OF CENTRAL POTENTIALS                  INSH-012
C                  ISM:   NUMBER OF RADIAL POINTS                       INSH-013
C                  NAT,AT:COUPLING COEFFICIENTS                         INSH-014
C                  NVI:   TABLE OF ADDRESSES IN NAT,AT                  INSH-015
C                  MC(,6):COEFFICIENT OF INCREASE OF IMAGINARY POTENTIALINSH-016
C                  LO(I): LOGICAL CONTROLS                              INSH-017
C OUTPUT VARIABLES:P(ISM,I): REAL/IMAGINARY REGULAR SOLUTION FOR I=1,2  INSH-018
C                            REAL/IMAGINARY IRREGULAR SOLUTION FOR I=3,4INSH-019
C                  FAM(IC,7/8): REAL/IMAGINARY PART OF ZERO'S ORDER     INSH-020
C                            SCATTERING COEFFICIENTS                    INSH-021
C                  KT:    THE SOLUTION IS NEGLIGIBLE FOR IS < KT        INSH-022
C WORKING SPACE:   X:     FOR THE INTEGRATION                           INSH-023
C***********************************************************************INSH-024
      IMPLICIT REAL*8 (A-H,O-Z)                                         INSH-025
      LOGICAL LO(250)                                                   INSH-026
      DIMENSION P(ISM,4),V(ISM,1),VI(ISM,1),NVI(KAB,KAB,2),NAT(4,1),AT(2INSH-027
     1,1),MC(KAB,6),FAM(KAB,10),X(2,2)                                  INSH-028
      BCONV=ACONV                                                       INSH-029
C FOR CLOSED CHANNELS WHEN GREEN'S FUNCTION IS USED                     INSH-030
      IF (FAM(IC,9).LT.0.) BCONV=1.D-15                                 INSH-031
C COMPUTATION OF THE REGULAR SOLUTION                                   INSH-032
      I2=I1+NPX                                                         INSH-033
      DO 1 IS=1,ISM                                                     INSH-034
      A=IS*IS                                                           INSH-035
      X(1,IS+2)=FAM(IC,9)-FAM(IC,10)/A+FAM(IC,7)*V(IS,I1)               INSH-036
      X(2,IS+2)=FAM(IC,7)*VI(IS,I1)                                     INSH-037
      IF (LO(229)) X(1,IS+2)=X(1,IS+2)+FAM(IC,8)*V(IS,I2)               INSH-038
      IF (LO(230)) X(2,IS+2)=X(2,IS+2)+FAM(IC,8)*VI(IS,I2)              INSH-039
    1 CONTINUE                                                          INSH-040
      IF (LO(129)) GO TO 5                                              INSH-041
      K1=NVI(IC,IC,1)                                                   INSH-042
      K2=NVI(IC,IC,2)                                                   INSH-043
      IF (K1.GT.K2) GO TO 5                                             INSH-044
      DO 4 K=K1,K2                                                      INSH-045
      KT=IABS(NAT(1,K))                                                 INSH-046
      DO 2 IS=1,ISM                                                     INSH-047
    2 X(1,IS+2)=X(1,IS+2)+AT(2,K)*V(IS,KT)                              INSH-048
      IF (NAT(1,K).GT.0) GO TO 4                                        INSH-049
      DO 3 IS=1,ISM                                                     INSH-050
    3 X(2,IS+2)=X(2,IS+2)+AT(2,K)*VI(IS,KT)                             INSH-051
    4 CONTINUE                                                          INSH-052
    5 IF (MC(IC,6).EQ.0) GO TO 7                                        INSH-053
      DO 6 IS=1,ISM                                                     INSH-054
    6 X(2,IS+2)=X(2,IS+2)+VI(IS,I1)*MC(IC,6)                            INSH-055
    7 IF (LO(27)) GO TO 9                                               INSH-056
C MODIFIED NUMEROV METHOD                                               INSH-057
      DO 8 IS=1,ISM                                                     INSH-058
      A=X(1,IS+2)**2-X(2,IS+2)**2                                       INSH-059
      IF (LO(26)) A=A*(1.D0-X(1,IS+2)*.033333333333333D0)               INSH-060
      X(2,IS+2)=X(2,IS+2)*(1.D0-X(1,IS+2)*.166666666666667D0)           INSH-061
    8 X(1,IS+2)=X(1,IS+2)-A*.083333333333333D0                          INSH-062
      GO TO 11                                                          INSH-063
C NUMEROV METHOD                                                        INSH-064
    9 DO 10 IS=1,ISM                                                    INSH-065
      B=(12.D0+X(1,IS+2))**2+X(2,IS+2)**2                               INSH-066
      A=12.D0*(X(1,IS+2)*(12.D0+X(1,IS+2))+X(2,IS+2)**2)/B              INSH-067
      IF (LO(26)) A=A*(1.D0+X(1,IS+2)**2*.416666666666667D-2)           INSH-068
      X(1,IS+2)=A                                                       INSH-069
   10 X(2,IS+2)=144.D0*X(2,IS+2)/B                                      INSH-070
   11 X(1,1)=0.D0                                                       INSH-071
      X(2,1)=0.D0                                                       INSH-072
      X(1,2)=1.D-15                                                     INSH-073
      X(2,2)=0.D0                                                       INSH-074
      DO 13 IS=1,ISM                                                    INSH-075
      P(IS,3)=X(1,IS+2)                                                 INSH-076
      P(IS,4)=X(2,IS+2)                                                 INSH-077
      HX=X(1,IS+1)*X(1,IS+2)-X(2,IS+1)*X(2,IS+2)                        INSH-078
      HY=X(2,IS+1)*X(1,IS+2)+X(1,IS+1)*X(2,IS+2)                        INSH-079
      X(1,IS+2)=X(1,IS+1)+X(1,IS+1)-X(1,IS)-HX                          INSH-080
      X(2,IS+2)=X(2,IS+1)+X(2,IS+1)-X(2,IS)-HY                          INSH-081
      IF (DABS(X(1,IS+2)).LT.1.D15) GO TO 13                            INSH-082
C  RENORMALISATION OF LARGE FUNCTION VALUES                             INSH-083
      J=2*IS+4                                                          INSH-084
      DO 12 I=3,J                                                       INSH-085
   12 X(I,1)=X(I,1)*1.D-30                                              INSH-086
   13 CONTINUE                                                          INSH-087
C END OF INTEGRATION                                                    INSH-088
C MATCHING                                                              INSH-089
      BRE=X(1,ISM)*FAM(IC,4)-FAM(IC,3)*X(1,ISM+2)                       INSH-090
      BIM=X(2,ISM)*FAM(IC,4)-FAM(IC,3)*X(2,ISM+2)                       INSH-091
      HX=X(1,ISM)*FAM(IC,2)-FAM(IC,1)*X(1,ISM+2)                        INSH-092
      HY=X(2,ISM)*FAM(IC,2)-FAM(IC,1)*X(2,ISM+2)                        INSH-093
      IF (FAM(IC,9).LT.0.) GO TO 14                                     INSH-094
      BIM=BIM+HX                                                        INSH-095
      BRE=BRE-HY                                                        INSH-096
   14 A=BRE*BRE+BIM*BIM                                                 INSH-097
      BRE=-BRE/A                                                        INSH-098
      BIM=BIM/A                                                         INSH-099
      FAM(IC,7)=BRE*HX-BIM*HY                                           INSH-100
      FAM(IC,8)=HX*BIM+HY*BRE                                           INSH-101
      IF (LO(221)) RETURN                                               INSH-102
      BRE=BRE/12.D0                                                     INSH-103
      BIM=BIM/12.D0                                                     INSH-104
C NORMALISATION OF THE REGULAR SOLUTION                                 INSH-105
      DO 15 IS=1,ISM                                                    INSH-106
      HX=X(1,IS)+10.D0*X(1,IS+1)+X(1,IS+2)                              INSH-107
      HY=X(2,IS)+10.D0*X(2,IS+1)+X(2,IS+2)                              INSH-108
      P(IS,1)=HX*BRE-HY*BIM                                             INSH-109
   15 P(IS,2)=HX*BIM+HY*BRE                                             INSH-110
C SEARCH OF THE FIRST NON NEGLIGIBLE VALUE                              INSH-111
      DO 16 KT=1,ISM                                                    INSH-112
      IF ((ABS(P(KT,1))+ABS(P(KT,2))).GT.BCONV) GO TO 17                INSH-113
   16 CONTINUE                                                          INSH-114
   17 IF (LO(92)) RETURN                                                INSH-115
      HX=0.D0                                                           INSH-116
      HY=0.D0                                                           INSH-117
      IF (FAM(IC,9).LT.0.) GO TO 18                                     INSH-118
      HX=FAM(IC,1)                                                      INSH-119
      HY=FAM(IC,2)                                                      INSH-120
C COMPUTATION OF THE IRREGULAR SOLUTION - STARTING VALUES               INSH-121
C  THE TWO LAST POINTS OF IMAGINARY POTENTIAL ARE ZERO                  INSH-122
   18 X(2,ISM)=HX/FAM(IC,6)                                             INSH-123
      X(2,ISM+2)=HY/FAM(IC,6)                                           INSH-124
      X(1,ISM)=FAM(IC,3)/FAM(IC,6)                                      INSH-125
      X(1,ISM+2)=FAM(IC,4)/FAM(IC,6)                                    INSH-126
      BRE=2.D0-P(ISM,3)                                                 INSH-127
      X(1,ISM+1)=(X(1,ISM)+X(1,ISM+2))/BRE                              INSH-128
      X(2,ISM+1)=(X(2,ISM)+X(2,ISM+2))/BRE                              INSH-129
      J1=ISM-KT                                                         INSH-130
      IF (J1.LE.0) GO TO 20                                             INSH-131
C INTEGRATION                                                           INSH-132
      DO 19 JS=1,J1                                                     INSH-133
      IS=ISM-JS                                                         INSH-134
      HX=X(1,IS+1)*P(IS,3)-X(2,IS+1)*P(IS,4)                            INSH-135
      HY=X(2,IS+1)*P(IS,3)+X(1,IS+1)*P(IS,4)                            INSH-136
      X(1,IS)=X(1,IS+1)+X(1,IS+1)-X(1,IS+2)-HX                          INSH-137
   19 X(2,IS)=X(2,IS+1)+X(2,IS+1)-X(2,IS+2)-HY                          INSH-138
C COMPUTATION OF IRREGULAR SOLUTION                                     INSH-139
   20 DO 21 IS=KT,ISM                                                   INSH-140
      P(IS,3)=(X(1,IS)+10.D0*X(1,IS+1)+X(1,IS+2))/12.D0                 INSH-141
   21 P(IS,4)=(X(2,IS)+10.D0*X(2,IS+1)+X(2,IS+2))/12.D0                 INSH-142
      RETURN                                                            INSH-143
      END                                                               INSH-144
C 01/01/04                                                      ECIS03  INSI-000
      SUBROUTINE INSI(W,P,PD,PH,FAM,X,PAD1,PAD2,KITER,EITER,ACONV,KAB,ISINSI-001
     1M,IPD,I,V,VI,WWW,CONV,NAT,AT,NVI,NC,FAR,FAI,MC,LO,LT,H,Z)         INSI-002
C  E. C. I. S. METHOD: INTEGRATION OF A SINGLE INHOMOGENEOUS EQUATION   INSI-003
C  BY THE NUMEROV METHOD       - SCHROEDINGER EQUATION -                INSI-004
C INPUT VARIABLES: P:     COUPLED SOLUTION                              INSI-005
C                  PH:    HOMOGENEOUS SOLUTIONS                         INSI-006
C                  PD:    DERIVATIVE OF THE COUPLED SOLUTION            INSI-007
C                  FAM:   WAVE NUMBER                                   INSI-008
C                  KITER: CURRENT ITERATION NUMBER                      INSI-009
C                  EITER: CONVERGENCE EPSILON FOR THE SCATTERING COEFF. INSI-010
C                  ACONV: EPSILON FOR NEGLIGIBLE FUNCTION VALUES        INSI-011
C                  KAB:   MAXIMUM NUMBER OF EQUATIONS                   INSI-012
C                  ISM:   NUMBER OF RADIAL POINTS                       INSI-013
C                  IPD(IC): THE FUNCTION IC IS NEGLIGIBLE FOR R < IPD*H INSI-014
C                  I:     CHANNEL NUMBER OF THE EQUATION                INSI-015
C                  V,VI:  REAL, IMAGINARY POTENTIALS AND COUPLINGS      INSI-016
C                  WWW:   COUPLING BETWEEN EQUATIONS COMPUTED IN INTI   INSI-017
C                  CONV:  EPSILON FOR NEGLIGIBLE SECOND MEMBER          INSI-018
C                  NAT,AT:TABLE OF COUPLING COEFFICIENTS                INSI-019
C                  NVI:   ADDRESSES OF COUPLING COEFFICIENTS            INSI-020
C                  NC:    NUMBER OF COUPLED CHANNELS                    INSI-021
C                  FAR,FAI: PHASE-SHIFTS TO UPDATE                      INSI-022
C                  LO(I): LOGICAL CONTROLS                              INSI-023
C                  LT:    .TRUE. TO COMPUTE ONLY THE DERIVATIVE         INSI-024
C                  H:     INTEGRATION STEP                              INSI-025
C                  Z:     COULOMB INTEGRAL FOR CORRECTIONS              INSI-026
C OUTPUT VARIABLES:P:     SOLUTION FOR EQUATION I                       INSI-027
C                  PD:    DERIVATIVE OF THE SOLUTION FOR EQUATION I     INSI-028
C                  FAR,FAI:  SCATTERING COEFFICIENT                     INSI-029
C WORKING FIELD:   W(2,ISM): REAL/IMAGINARY SECOND MEMBER               INSI-030
C                  PAD1: ITERATION RESULTS FOR THE CHANNEL I            INSI-031
C                  PAD2: WORKING FIELD OF PADE,TWICE LONGER THAN PAD1   INSI-032
C                  X:    INTEGRAL OF REGULAR SOLUTION WITH SECOND MEMBERINSI-033
C***********************************************************************INSI-034
      IMPLICIT REAL*8 (A-H,O-Z)                                         INSI-035
      LOGICAL LO(250),LT                                                INSI-036
      DIMENSION PH(ISM,4,1),P(2,ISM,1),PD(2,ISM,1),W(2,1),IPD(1),V(ISM,1INSI-037
     1),VI(ISM,1),WWW(ISM,1),NAT(4,1),AT(2,1),NVI(KAB,KAB,4),MC(KAB,6),FINSI-038
     2AM(1),X(2,1),PAD1(2,1),PAD2(2,1),Z(4),FAR(1),FAI(1)               INSI-039
      COMMON /INOUT/ MR,MW,MS                                           INSI-040
      IF (LT) GO TO 35                                                  INSI-041
      ISM1=ISM+1                                                        INSI-042
C PUT ZERO IN THE INHOMOGENEOUS TERMS                                   INSI-043
      DO 1 IS=1,ISM                                                     INSI-044
      W(1,IS)=0.D0                                                      INSI-045
    1 W(2,IS)=0.D0                                                      INSI-046
      IDP=ISM1                                                          INSI-047
C NON DERIVATIVE TERM OF COUPLING POTENTIALS                            INSI-048
      DO 23 IC=1,NC                                                     INSI-049
      IF (IPD(IC).GT.ISM) GO TO 23                                      INSI-050
      IF (LO(207)) GO TO 7                                              INSI-051
C NO PREVIOUS CALCULATION OF COUPLING POTENTIALS                        INSI-052
      IF (IC.NE.I) GO TO 3                                              INSI-053
      IF (MC(IC,6).EQ.0) GO TO 3                                        INSI-054
      KT=MC(IC,4)                                                       INSI-055
      DO 2 IS=1,ISM                                                     INSI-056
      W(1,IS)=W(1,IS)+DFLOAT(MC(IC,6))*VI(IS,KT)*P(2,IS,IC)             INSI-057
    2 W(2,IS)=W(2,IS)-DFLOAT(MC(IC,6))*VI(IS,KT)*P(1,IS,IC)             INSI-058
    3 IF (LO(29).AND.(IC.EQ.I)) GO TO 23                                INSI-059
      K1=NVI(IC,I,1)                                                    INSI-060
      K2=NVI(IC,I,2)                                                    INSI-061
      IF (K1.GT.K2) GO TO 13                                            INSI-062
      K3=IPD(IC)                                                        INSI-063
      IDP=MIN0(IDP,K3)                                                  INSI-064
      DO 6 K=K1,K2                                                      INSI-065
      KT=IABS(NAT(1,K))                                                 INSI-066
      DO 4 IS=K3,ISM                                                    INSI-067
      W(1,IS)=W(1,IS)+AT(2,K)*V(IS,KT)*P(1,IS,IC)                       INSI-068
    4 W(2,IS)=W(2,IS)+AT(2,K)*V(IS,KT)*P(2,IS,IC)                       INSI-069
      IF (KT.EQ.NAT(1,K)) GO TO 6                                       INSI-070
      DO 5 IS=K3,ISM                                                    INSI-071
      W(1,IS)=W(1,IS)-AT(2,K)*VI(IS,KT)*P(2,IS,IC)                      INSI-072
    5 W(2,IS)=W(2,IS)+AT(2,K)*VI(IS,KT)*P(1,IS,IC)                      INSI-073
    6 CONTINUE                                                          INSI-074
      GO TO 13                                                          INSI-075
C COUPLING POTENTIALS ALREADY CALCULATED                                INSI-076
    7 L1=NVI(IC,I,1)                                                    INSI-077
      L2=NVI(IC,I,2)                                                    INSI-078
      K3=IPD(IC)                                                        INSI-079
      IDP=MIN0(IDP,K3)                                                  INSI-080
      IF (L1.EQ.0) GO TO 11                                             INSI-081
      IF (L2.GT.0) GO TO 9                                              INSI-082
      DO 8 IS=K3,ISM                                                    INSI-083
      W(1,IS)=W(1,IS)+WWW(IS,L1)*P(1,IS,IC)                             INSI-084
    8 W(2,IS)=W(2,IS)+WWW(IS,L1)*P(2,IS,IC)                             INSI-085
      GO TO 13                                                          INSI-086
    9 DO 10 IS=K3,ISM                                                   INSI-087
      W(1,IS)=W(1,IS)+WWW(IS,L1)*P(1,IS,IC)-WWW(IS,L2)*P(2,IS,IC)       INSI-088
   10 W(2,IS)=W(2,IS)+WWW(IS,L1)*P(2,IS,IC)+WWW(IS,L2)*P(1,IS,IC)       INSI-089
      GO TO 13                                                          INSI-090
   11 IF (L2.EQ.0) GO TO 13                                             INSI-091
      DO 12 IS=K3,ISM                                                   INSI-092
      W(1,IS)=W(1,IS)-WWW(IS,L2)*P(2,IS,IC)                             INSI-093
   12 W(2,IS)=W(2,IS)+WWW(IS,L2)*P(1,IS,IC)                             INSI-094
   13 IF (.NOT.LO(210)) GO TO 23                                        INSI-095
C DERIVATIVE TERM OF COUPLING POTENTIALS                                INSI-096
      IF (LO(207)) GO TO 17                                             INSI-097
C NO PREVIOUS CALCULATION OF COUPLING POTENTIALS                        INSI-098
      K1=K2+1                                                           INSI-099
      K2=NVI(IC,I,3)                                                    INSI-100
      IF (K1.GT.K2) GO TO 23                                            INSI-101
      DO 16 K=K1,K2                                                     INSI-102
      KT=IABS(NAT(1,K))                                                 INSI-103
      DO 14 IS=K3,ISM                                                   INSI-104
      W(1,IS)=W(1,IS)+AT(2,K)*V(IS,KT)*PD(1,IS,IC)                      INSI-105
   14 W(2,IS)=W(2,IS)+AT(2,K)*V(IS,KT)*PD(2,IS,IC)                      INSI-106
      IF (KT.EQ.NAT(1,K)) GO TO 16                                      INSI-107
      DO 15 IS=K3,ISM                                                   INSI-108
      W(1,IS)=W(1,IS)-AT(2,K)*VI(IS,KT)*PD(2,IS,IC)                     INSI-109
   15 W(2,IS)=W(2,IS)+AT(2,K)*VI(IS,KT)*PD(1,IS,IC)                     INSI-110
   16 CONTINUE                                                          INSI-111
      GO TO 23                                                          INSI-112
C COUPLING POTENTIALS ALREADY CALCULATED                                INSI-113
   17 L1=NVI(IC,I,3)                                                    INSI-114
      L2=NVI(IC,I,4)                                                    INSI-115
      IF (L1.LE.0) GO TO 21                                             INSI-116
      IF (L2.GT.0) GO TO 19                                             INSI-117
      DO 18 IS=K3,ISM                                                   INSI-118
      W(1,IS)=W(1,IS)+WWW(IS,L1)*PD(1,IS,IC)                            INSI-119
   18 W(2,IS)=W(2,IS)+WWW(IS,L1)*PD(2,IS,IC)                            INSI-120
      GO TO 23                                                          INSI-121
   19 DO 20 IS=K3,ISM                                                   INSI-122
      W(1,IS)=W(1,IS)+WWW(IS,L1)*PD(1,IS,IC)-WWW(IS,L2)*PD(2,IS,IC)     INSI-123
   20 W(2,IS)=W(2,IS)+WWW(IS,L1)*PD(2,IS,IC)+WWW(IS,L2)*PD(1,IS,IC)     INSI-124
      GO TO 23                                                          INSI-125
   21 IF (L2.EQ.0) GO TO 23                                             INSI-126
      DO 22 IS=K3,ISM                                                   INSI-127
      W(1,IS)=W(1,IS)-WWW(IS,L2)*PD(2,IS,IC)                            INSI-128
   22 W(2,IS)=W(2,IS)+WWW(IS,L2)*PD(1,IS,IC)                            INSI-129
   23 CONTINUE                                                          INSI-130
      IPD(I)=IDP                                                        INSI-131
C SEARCH FOR THE FIRST NON NEGLIGIBLE VALUE                             INSI-132
      IF (IDP.GT.ISM) RETURN                                            INSI-133
      DO 24 IS=IDP,ISM                                                  INSI-134
      IF ((DABS(W(1,IS))+DABS(W(2,IS))).GT.CONV) GO TO 25               INSI-135
   24 CONTINUE                                                          INSI-136
   25 IPD(I)=IS                                                         INSI-137
      KT=MAX0(IPD(I),1)                                                 INSI-138
      IF (IPD(I).GE.ISM) RETURN                                         INSI-139
      IF (LO(144)) GO TO 26                                             INSI-140
      W(1,ISM)=0.D0                                                     INSI-141
      W(2,ISM)=0.D0                                                     INSI-142
C INTEGRAL OF THE REGULAR FUNCTION WITH THE SECOND MEMBER               INSI-143
   26 X(1,KT)=-PH(KT,2,I)*W(2,KT)+PH(KT,1,I)*W(1,KT)                    INSI-144
      X(2,KT)=PH(KT,1,I)*W(2,KT)+PH(KT,2,I)*W(1,KT)                     INSI-145
      KKT=KT+1                                                          INSI-146
      IF (KKT.GT.ISM) GO TO 28                                          INSI-147
      DO 27 IS=KKT,ISM                                                  INSI-148
      X(1,IS)=X(1,IS-1)+PH(IS,1,I)*W(1,IS)-PH(IS,2,I)*W(2,IS)           INSI-149
   27 X(2,IS)=X(2,IS-1)+PH(IS,1,I)*W(2,IS)+PH(IS,2,I)*W(1,IS)           INSI-150
C SCATTERING COEFFICIENTS                                               INSI-151
   28 BRE=X(1,ISM)/(H*FAM(1))-Z(1)                                      INSI-152
      BIM=X(2,ISM)/(H*FAM(1))-Z(2)                                      INSI-153
      IF (LO(92)) GO TO 34                                              INSI-154
      HX=Z(3)*H                                                         INSI-155
      HY=Z(4)*H                                                         INSI-156
      IST=ISM+KT                                                        INSI-157
C INTEGRAL OF THE IRREGULAR FUNCTION WITH THE SECOND MEMBER IN HX/HY    INSI-158
C AND COMPUTATION OF THE SOLUTION WITH THE CORRECTION TERM W/12         INSI-159
      DO 29 IS=KT,ISM                                                   INSI-160
      JS=IST-IS                                                         INSI-161
      P(1,JS,I)=(X(1,JS)*PH(JS,3,I)-X(2,JS)*PH(JS,4,I)-HX*PH(JS,1,I)+HY*INSI-162
     1PH(JS,2,I))/H-W(1,JS)/12.D0                                       INSI-163
      P(2,JS,I)=(X(1,JS)*PH(JS,4,I)+X(2,JS)*PH(JS,3,I)-HY*PH(JS,1,I)-HX*INSI-164
     1PH(JS,2,I))/H-W(2,JS)/12.D0                                       INSI-165
      HX=HX-PH(JS,3,I)*W(1,JS)+PH(JS,4,I)*W(2,JS)                       INSI-166
   29 HY=HY-PH(JS,3,I)*W(2,JS)-PH(JS,4,I)*W(1,JS)                       INSI-167
      IF (KT.EQ.1) GO TO 31                                             INSI-168
      K=KT-1                                                            INSI-169
      DO 30 IS=1,K                                                      INSI-170
      P(1,IS,I)=-(HX*PH(IS,1,I)-HY*PH(IS,2,I))/H                        INSI-171
   30 P(2,IS,I)=-(HY*PH(IS,1,I)+HX*PH(IS,2,I))/H                        INSI-172
   31 DO 32 KT=1,ISM                                                    INSI-173
      IF ((DABS(P(1,KT,I))+DABS(P(2,KT,I))).GT.ACONV) GO TO 33          INSI-174
   32 CONTINUE                                                          INSI-175
   33 IPD(I)=KT                                                         INSI-176
      IF (LO(22)) GO TO 34                                              INSI-177
      PAD1(1,KITER)=BRE                                                 INSI-178
      PAD1(2,KITER)=BIM                                                 INSI-179
C  TEST OF CONVERGENCE                                                  INSI-180
   34 LO(205)=(DABS(BIM-FAI(1)).LE.EITER.AND.(DABS(BRE-FAR(1)).LE.EITER)INSI-181
     1)                                                                 INSI-182
      IF (LO(122).AND.LO(204).AND.KITER.GT.3.AND.(.NOT.LO(205))) CALL PAINSI-183
     1DE(PAD1,PAD2,KITER,BRE,BIM,EITER,1.D0,0.D0,LO)                    INSI-184
      LO(204)=LO(204).AND.LO(205)                                       INSI-185
      FAR(1)=BRE                                                        INSI-186
      FAI(1)=BIM                                                        INSI-187
      IF (LO(57)) WRITE (MW,1000) I,FAR(1),FAI(1),KITER,KT              INSI-188
      IF (.NOT.LO(210).OR.LO(92)) RETURN                                INSI-189
C COMPUTATION OF R*(D/DR) OF THE SOLUTIONS                              INSI-190
   35 IST=ISM-3                                                         INSI-191
      DO 37 J=1,2                                                       INSI-192
      PD(J,1,I)=2.5D0*P(J,2,I)-.25D0*P(J,5,I)+(5.D0*P(J,4,I)-7.7D0*P(J,1INSI-193
     1,I)-10.D0*P(J,3,I)+.2D0*P(J,6,I))/6.D0                            INSI-194
      PD(J,2,I)=-.8D0*P(J,1,I)-P(J,4,I)+(8.D0*P(J,3,I)-3.5D0*P(J,2,I)+.8INSI-195
     1D0*P(J,5,I)-.1D0*P(J,6,I))/3.D0                                   INSI-196
      PD(J,3,I)=2.25D0*(P(J,4,I)-P(J,2,I))-.45D0*(P(J,5,I)-P(J,1,I))+.05INSI-197
     1D0*P(J,6,I)                                                       INSI-198
      FP=3.D0                                                           INSI-199
      DO 36 IS=4,IST                                                    INSI-200
      FP=FP+1.D0                                                        INSI-201
   36 PD(J,IS,I)=FP*(.75D0*(P(J,IS+1,I)-P(J,IS-1,I))-.15D0*(P(J,IS+2,I)-INSI-202
     1P(J,IS-2,I))+(P(J,IS+3,I)-P(J,IS-3,I))/60.D0)                     INSI-203
      FP=FP+1.D0                                                        INSI-204
      PD(J,ISM-2,I)=FP*(P(J,ISM-6,I)-8.D0*P(J,ISM-5,I)+30.D0*P(J,ISM-4,IINSI-205
     1)-80.D0*P(J,IST,I)+35.D0*P(J,ISM-2,I)+24.D0*P(J,ISM-1,I)-2.D0*P(J,INSI-206
     2ISM,I))/60.D0                                                     INSI-207
      FP=FP+1.D0                                                        INSI-208
      PD(J,ISM-1,I)=FP*(15.D0*P(J,ISM-5,I)-2.D0*P(J,ISM-6,I)-50.D0*P(J,IINSI-209
     1SM-4,I)+100.D0*P(J,IST,I)-150.D0*P(J,ISM-2,I)+77.D0*P(J,ISM-1,I)+1INSI-210
     20.D0*P(J,ISM,I))/60.D0                                            INSI-211
      FP=FP+1.D0                                                        INSI-212
      PD(J,ISM,I)=FP*(10.D0*P(J,ISM-6,I)-72.D0*P(J,ISM-5,I)+225.D0*P(J,IINSI-213
     1SM-4,I)-400.D0*P(J,IST,I)+450.D0*P(J,ISM-2,I)-360.D0*P(J,ISM-1,I)+INSI-214
     2147.D0*P(J,ISM,I))/60.D0                                          INSI-215
   37 CONTINUE                                                          INSI-216
      RETURN                                                            INSI-217
 1000 FORMAT (5X,I5,2D30.15,I10,10X,I5)                                 INSI-218
      END                                                               INSI-219
C 01/01/04                                                      ECIS03  INTR-000
      SUBROUTINE INTR(FAM,X,FR,GR,WRE,PAD,IPE,ISM,KAB,W,ITERM,NC,V,VR,NVINTR-001
     1I,MC,NAT,AT,AG,H,ACONV,EITER,NCIN,NNI,ITERR,LO)                   INTR-002
C  E. C. I. S. METHOD: DIRAC EQUATION DRIVING ROUTINE.                  INTR-003
C             INRH  TO SOLVE THE SINGLE HOMOGENEOUS EQUATIONS           INTR-004
C             INRI  TO SOLVE THE SINGLE INHOMOGENEOUS EQUATIONS         INTR-005
C  PADE APPROXIMANTS OF TYPE I MAY BE USED TO ACCELERATE THE CONVERGENCEINTR-006
C INPUT VARIABLES: FAM(IC,I): MATCHING VALUES FOR I=1,6                 INTR-007
C                             CONSTANTS OF EACH EQUATION FOR I=7,10     INTR-008
C                  ISM:   NUMBER OF RADIAL POINTS                       INTR-009
C                  KAB:   MAXIMUM NUMBER OF COUPLED CHANNELS            INTR-010
C                  ITERM: MAXIMUM NUMBER OF ITERATIONS AND DIM. OF PAD  INTR-011
C                  NC:    NUMBER OF COUPLED EQUATIONS                   INTR-012
C                  V,VR:  POTENTIALS                                    INTR-013
C                  NVI:   ADDRESSES OF COUPLINGS                        INTR-014
C                  MC:    NUCLEAR STATE NUMBER, ANGULAR MOMENTA....     INTR-015
C                  NAT,AT:TABLE OF COUPLING COEFFICIENTS                INTR-016
C                  AG:    COULOMB INTEGRALS FOR COULOMB CORRECTIONS     INTR-017
C                  H:     STEP LENGTH                                   INTR-018
C                  ACONV: EPSILON FOR NEGLIGIBLE FUNCTION VALUES        INTR-019
C                  EITER: CONVERGENCE EPSILON FOR THE SCATTERING COEF.  INTR-020
C                  NCIN:  NUMBER OF SOLUTIONS                           INTR-021
C                  LO(I): LOGICAL CONTROLS                              INTR-022
C OUTPUT VARIABLES:FAM(IC,I+7): SCATTERING COEFFICIENTS                 INTR-023
C WORKING FIELDS:  X:     USED IN INRH AND INRI                         INTR-024
C                  FR:    SOLUTIONS OF HOMOGENEOUS EQUATIONS            INTR-025
C                  GR:    SOLUTIONS OF COUPLED EQUATIONS                INTR-026
C                  WRE:   REAL/IMAGINARY INHOMOGENEOUS TERM             INTR-027
C                  PAD(ITERM,KAB+2): PADE APPROXIMANTS                  INTR-028
C               IPE(I,1): FIRST NON NEGLIGIBLE POINT OF UNCOUPLED FUNC. INTR-029
C               IPE(I,2): FIRST NON NEGLIGIBLE POINT OF COUPLED FUNCT.  INTR-030
C                  W:     FREE PART OF THE STORAGE FOR COUPLINGS        INTR-031
C OUTPUT VARIABLES:NNI:   NUMBER OF EQ. WITH NEGLIGIBLE INHOMOG. TERM   INTR-032
C                  ITERR: LARGEST NUMBER OF ITERATIONS DONE FOR THIS J  INTR-033
C***********************************************************************INTR-034
      IMPLICIT REAL*8 (A-H,O-Z)                                         INTR-035
      LOGICAL LO(250)                                                   INTR-036
      DIMENSION IPE(NC,2),NVI(KAB,KAB,4),FAM(KAB,8),X(1),NAT(6,1),PAD(2,INTR-037
     1ITERM,1),AG(KAB,KAB,4),Y(2),MC(KAB,6),Z(4),FR(ISM,8,1),GR(ISM,4,1)INTR-038
     2,WRE(ISM,1),W(ISM,4,1),AT(3,1),V(ISM,14,1),VR(ISM,4,1)            INTR-039
      COMMON /INOUT/ MR,MW,MS                                           INTR-040
      CONV=ACONV*H*H                                                    INTR-041
      NNI=0                                                             INTR-042
      I2=8*ISM                                                          INTR-043
C COMPUTE ALL COUPLING POTENTIALS AND SOLVE ALL HOMOGENEOUS EQUATIONS   INTR-044
      DO 4 I=1,NC                                                       INTR-045
      I1=MC(I,4)                                                        INTR-046
      IF (I1.LT.0) GO TO 1                                              INTR-047
      CALL INRH(FR(1,1,I),I,K,ACONV,FAM,X,KAB,ISM,LO,DFLOAT(MC(I,6)+1),HINTR-048
     1,V(1,1,I1),LO(221))                                               INTR-049
      IPE(I,1)=K                                                        INTR-050
      GO TO 3                                                           INTR-051
    1 I1=-I1                                                            INTR-052
      IF (I1.EQ.I) GO TO 3                                              INTR-053
      DO 2 IS=1,I2                                                      INTR-054
    2 FR(IS,1,I)=FR(IS,1,I1)                                            INTR-055
      IPE(I,1)=IPE(I1,1)                                                INTR-056
    3 IF (LO(57)) WRITE (MW,1000) FAM(I,7),FAM(I,8),I,IPE(I,1)          INTR-057
    4 CONTINUE                                                          INTR-058
      I2=2*ISM                                                          INTR-059
      IF (.NOT.LO(207).OR.LO(221)) GO TO 15                             INTR-060
      IW=0                                                              INTR-061
C CALCULATION OF THE NON DIAGONAL COUPLING POTENTIALS                   INTR-062
      DO 14 IC=1,NC                                                     INTR-063
      DO 13 IP=1,IC                                                     INTR-064
      K1=NVI(IP,IC,1)                                                   INTR-065
      K2=NVI(IP,IC,2)                                                   INTR-066
      K3=NVI(IP,IC,3)                                                   INTR-067
      NVI(IP,IC,3)=0                                                    INTR-068
      NVI(IP,IC,4)=0                                                    INTR-069
      IF (K1.GT.K2) GO TO 8                                             INTR-070
      IW=IW+1                                                           INTR-071
      NVI(IP,IC,3)=IW                                                   INTR-072
      K=NAT(1,K1)                                                       INTR-073
      DO 5 IS=1,I2                                                      INTR-074
      W(IS,1,IW)=AT(2,K1)*VR(IS,1,K)                                    INTR-075
    5 W(IS,3,IW)=AT(3,K1)*VR(IS,3,K)                                    INTR-076
      K4=K1+1                                                           INTR-077
      IF (K4.GT.K2) GO TO 8                                             INTR-078
      DO 7 K1=K4,K2                                                     INTR-079
      K=NAT(1,K1)                                                       INTR-080
      DO 6 IS=1,I2                                                      INTR-081
      W(IS,1,IW)=W(IS,1,IW)+AT(2,K1)*VR(IS,1,K)                         INTR-082
    6 W(IS,3,IW)=W(IS,3,IW)+AT(3,K1)*VR(IS,3,K)                         INTR-083
    7 CONTINUE                                                          INTR-084
    8 IF (K2.GE.K3) GO TO 12                                            INTR-085
      IW=IW+1                                                           INTR-086
      NVI(IP,IC,4)=IW                                                   INTR-087
      K1=K2+1                                                           INTR-088
      K=NAT(1,K1)                                                       INTR-089
      DO 9 IS=1,I2                                                      INTR-090
      W(IS,1,IW)=AT(2,K1)*VR(IS,1,K)+AT(3,K1)*VR(IS,3,K)                INTR-091
    9 W(IS,3,IW)=AT(2,K1)*VR(IS,1,K)-AT(3,K1)*VR(IS,3,K)                INTR-092
      K4=K1+1                                                           INTR-093
      IF (K4.GT.K3) GO TO 12                                            INTR-094
      DO 11 K1=K4,K3                                                    INTR-095
      K=NAT(1,K1)                                                       INTR-096
      DO 10 IS=1,I2                                                     INTR-097
      W(IS,1,IW)=W(IS,1,IW)+AT(2,K1)*VR(IS,1,K)+AT(3,K1)*VR(IS,3,K)     INTR-098
   10 W(IS,3,IW)=W(IS,3,IW)+AT(2,K1)*VR(IS,1,K)-AT(3,K1)*VR(IS,3,K)     INTR-099
   11 CONTINUE                                                          INTR-100
   12 NVI(IC,IP,3)=NVI(IP,IC,3)                                         INTR-101
      NVI(IC,IP,4)=NVI(IP,IC,4)                                         INTR-102
      IF (IW.GT.IW) IW=IW                                               INTR-103
   13 CONTINUE                                                          INTR-104
   14 CONTINUE                                                          INTR-105
   15 IF (LO(74)) CALL HORA                                             INTR-106
C LOOP ON SOLUTIONS                                                     INTR-107
      DO 29 NCI=1,NCIN                                                  INTR-108
      NCI1=NCI+8                                                        INTR-109
      NCI2=NCI1+NCIN                                                    INTR-110
C SET THE ZERO'S ORDER SOLUTION                                         INTR-111
      DO 16 IC=1,NC                                                     INTR-112
      IPE(IC,2)=ISM+1                                                   INTR-113
      FAM(IC,NCI1)=0.D0                                                 INTR-114
   16 FAM(IC,NCI2)=0.D0                                                 INTR-115
      FAM(NCI,NCI1)=FAM(NCI,7)                                          INTR-116
      FAM(NCI,NCI2)=FAM(NCI,8)                                          INTR-117
      IF ((IPE(NCI,1).GT.ISM-3).OR.LO(221)) GO TO 29                    INTR-118
      DO 17 IS=1,I2                                                     INTR-119
      GR(IS,1,NCI)=FR(IS,1,NCI)                                         INTR-120
   17 GR(IS,3,NCI)=FR(IS,5,NCI)                                         INTR-121
      IPE(NCI,2)=IPE(NCI,1)                                             INTR-122
      AMAX=0.D0                                                         INTR-123
C E. C. I. S. LOOP                                                      INTR-124
      DO 27 KITER=1,ITERM                                               INTR-125
      ITERR=MAX0(ITERR,KITER)                                           INTR-126
      LO(204)=.TRUE.                                                    INTR-127
      LO(206)=((KITER.NE.ITERM).AND.(AMAX.LT.1.D10)).OR.LO(23)          INTR-128
      IF (AMAX.GT.1.D10) WRITE (MW,1001) AMAX,KITER                     INTR-129
      DO 26 IC=1,NC                                                     INTR-130
      I=MOD(IC+NCI-1,NC)+1                                              INTR-131
      I1=MC(I,1)                                                        INTR-132
      DO 18 J=1,4                                                       INTR-133
   18 Z(J)=0.D0                                                         INTR-134
      IF (LO(144)) GO TO 23                                             INTR-135
      DO 21 J=1,NC                                                      INTR-136
      IF (IPE(J,2).GE.ISM) GO TO 21                                     INTR-137
C ORDER IN FG   F(EI)*F(EF),G(EI)*F(EF),F(EI)*G(EF),G(EI)*G(EF)         INTR-138
      IF (LO(22)) GO TO 19                                              INTR-139
      IJ=KITER                                                          INTR-140
      IF (1+MOD(J+NC-NCI-1,NC).GE.IC) IJ=IJ-1                           INTR-141
      IF (IJ.EQ.0) GO TO 19                                             INTR-142
      Y(1)=PAD(1,IJ,J)                                                  INTR-143
      Y(2)=PAD(2,IJ,J)                                                  INTR-144
      GO TO 20                                                          INTR-145
   19 Y(1)=FAM(J,NCI1)                                                  INTR-146
      Y(2)=FAM(J,NCI2)                                                  INTR-147
   20 Z(1)=Z(1)+Y(1)*AG(I,J,3)-Y(2)*AG(I,J,1)                           INTR-148
      Z(2)=Z(2)+Y(1)*AG(I,J,1)+Y(2)*AG(I,J,3)                           INTR-149
      Z(3)=Z(3)+Y(1)*AG(I,J,4)-Y(2)*AG(I,J,2)                           INTR-150
      Z(4)=Z(4)+Y(1)*AG(I,J,2)+Y(2)*AG(I,J,4)                           INTR-151
   21 CONTINUE                                                          INTR-152
      IF (I.EQ.NCI) GO TO 22                                            INTR-153
      Z(1)=Z(1)+AG(I,NCI,1)                                             INTR-154
      Z(3)=Z(3)+AG(I,NCI,2)                                             INTR-155
   22 Z(3)=Z(3)-Z(2)                                                    INTR-156
      Z(4)=Z(4)+Z(1)                                                    INTR-157
      Z(1)=Z(1)+FAM(I,7)*Z(3)-FAM(I,8)*Z(4)                             INTR-158
      Z(2)=Z(2)+Z(3)*FAM(I,8)+Z(4)*FAM(I,7)                             INTR-159
   23 IF (I.NE.NCI) GO TO 24                                            INTR-160
      Z(1)=Z(1)-FAM(I,7)                                                INTR-161
      Z(2)=Z(2)-FAM(I,8)                                                INTR-162
      Z(3)=Z(3)-1.D0                                                    INTR-163
   24 IF (LO(23).AND.(.NOT.LO(206))) LO(204)=.TRUE.                     INTR-164
C COMPUTE SECOND MEMBERS AND SOLVE THE INHOMOGENEOUS EQUATIONS          INTR-165
      CALL INRI(WRE,FR(1,1,I),GR,W,NVI,FAM(I,5),X,PAD(1,1,I),PAD(1,1,NC+INTR-166
     11),KITER,EITER,CONV,ACONV,KAB,NC,ISM,IPE(1,2),I,NAT,AT,VR,FAM(I,NCINTR-167
     2I1),FAM(I,NCI2),DFLOAT(MC(I,6)+1),V(1,1,I1),LO,H,Z)               INTR-168
      IF (IPE(I,2).GE.ISM) GO TO 25                                     INTR-169
      IF (I.NE.NCI.AND.LO(92)) IPE(I,2)=ISM+1                           INTR-170
      AMAX=DMAX1(AMAX,DABS(FAM(I,NCI1))+DABS(FAM(I,NCI2)))              INTR-171
      GO TO 26                                                          INTR-172
   25 FAM(I,NCI1)=-Z(1)                                                 INTR-173
      FAM(I,NCI2)=-Z(2)                                                 INTR-174
      IF (LO(57)) WRITE (MW,1002)                                       INTR-175
      IF (KITER.EQ.1.AND.LO(144)) NNI=NNI+1                             INTR-176
      IF (I.EQ.NCI) IPE(NCI,2)=IPE(NCI,1)                               INTR-177
   26 CONTINUE                                                          INTR-178
      IF (LO(74)) CALL HORA                                             INTR-179
      IF (LO(204).OR.(AMAX.GT.1.D10.AND.LO(23))) GO TO 28               INTR-180
   27 CONTINUE                                                          INTR-181
      KITER=MIN0(KITER,ITERM)                                           INTR-182
   28 IF (LO(53)) WRITE (MW,1003) KITER                                 INTR-183
   29 CONTINUE                                                          INTR-184
      NNI=NNI/NCIN                                                      INTR-185
      RETURN                                                            INTR-186
 1000 FORMAT (2D30.15,5X,2I5)                                           INTR-187
 1001 FORMAT (' MAXIMUM',D15.6,' OBTAINED IN PREVIOUS ITERATION. LAST ONINTR-188
     1E IS',I3)                                                         INTR-189
 1002 FORMAT (5X,'THE INHOMOGENEOUS TERM IS NEGLECTED')                 INTR-190
 1003 FORMAT (5X,I5,' ITERATIONS')                                      INTR-191
      END                                                               INTR-192
C 01/01/04                                                      ECIS03  INRH-000
      SUBROUTINE INRH(P,IC,KT,ACONV,FAM,X,NC,ISM,LO,CC,H,VV,LT)         INRH-001
C  E. C. I. S. METHOD: INTEGRATION OF A SINGLE HOMOGENEOUS EQUATION BY  INRH-002
C  THE NUMEROV METHOD   - DIRAC EQUATION -                              INRH-003
C INPUT VARIABLES: IC:    CHANNEL NUMBER OF THE EQUATION                INRH-004
C                  ACONV: LIMIT FOR NEGLIGIBLE FUNCTION VALUES          INRH-005
C                  FAM(IC,I): MATCHING VALUES FOR I=1,4                 INRH-006
C                             CONSTANTS OF THE EQUATION FOR I=6,10      INRH-007
C                  NC:    NUMBER OF COUPLED CHANNELS                    INRH-008
C                  ISM:   NUMBER OF RADIAL POINTS                       INRH-009
C                  LO(I): LOGICAL CONTROLS                              INRH-010
C                  CC:    EIGENVALUE OF L.S+1                           INRH-011
C                  H:     STEP SIZE                                     INRH-012
C                  VV:    POTENTIALS, D(R), ....                        INRH-013
C                  LT:    LOGICAL TO RETURN ONLY WITH PHASE SHIFT       INRH-014
C OUTPUT VARIABLES:P(ISM,I): REGULAR SOLUTION FOR I=1,2 AND 5,6         INRH-015
C                            IRREGULAR SOLUTION FOR I=3,4 AND 7,8       INRH-016
C                            LARGE COMPONENTS FOR I=1,4                 INRH-017
C                            SMALL COMPONENT FOR I=5,8                  INRH-018
C                  FAM(IC,7/8): REAL/IMAGINARY PART OF ZERO'S ORDER     INRH-019
C                         SCATTERING COEFFICIENTS                       INRH-020
C                  KT: THE SOLUTION IS NEGLIGIBLE FOR IS < KT           INRH-021
C WORKING SPACE:   X:    FOR THE INTEGRATION                            INRH-022
C***********************************************************************INRH-023
      IMPLICIT REAL*8 (A-H,O-Z)                                         INRH-024
      LOGICAL LO(250),LT                                                INRH-025
      DIMENSION FAM(NC,10),X(2,2),P(ISM,8),VV(ISM,14)                   INRH-026
C COMPUTATION OF THE REGULAR SOLUTION                                   INRH-027
      DO 1 IS=1,ISM                                                     INRH-028
      A=IS*IS                                                           INRH-029
      X(1,IS+2)=FAM(IC,10)/A-FAM(IC,9)-FAM(IC,7)*VV(IS,1)-FAM(IC,8)*VV(IINRH-030
     1S,3)                                                              INRH-031
    1 X(2,IS+2)=-FAM(IC,7)*VV(IS,2)-FAM(IC,8)*VV(IS,4)                  INRH-032
      IF (LO(27)) GO TO 3                                               INRH-033
C MODIFIED NUMEROV METHOD                                               INRH-034
      DO 2 IS=1,ISM                                                     INRH-035
      A=X(1,IS+2)**2-X(2,IS+2)**2                                       INRH-036
      IF (LO(26)) A=A*(1.D0+X(1,IS+2)*.033333333333333D0)               INRH-037
      X(2,IS+2)=X(2,IS+2)*(1.D0+X(1,IS+2)*.166666666666667D0)           INRH-038
    2 X(1,IS+2)=X(1,IS+2)+A*.083333333333333D0                          INRH-039
      GO TO 5                                                           INRH-040
C NUMEROV METHOD                                                        INRH-041
    3 DO 4 IS=1,ISM                                                     INRH-042
      B=(12.D0-X(1,IS+2))**2+X(2,IS+2)**2                               INRH-043
      A=12.D0*(X(1,IS+2)*(12.D0-X(1,IS+2))-X(2,IS+2)**2)/B              INRH-044
      IF (LO(26)) A=A*(1.D0-X(1,IS+2)**2*.416666666666667D-2)           INRH-045
      X(1,IS+2)=A                                                       INRH-046
    4 X(2,IS+2)=144.D0*X(2,IS+2)/B                                      INRH-047
    5 X(1,1)=0.D0                                                       INRH-048
      X(2,1)=0.D0                                                       INRH-049
      X(1,2)=1.D-15                                                     INRH-050
      X(2,2)=0.D0                                                       INRH-051
      DO 7 IS=1,ISM                                                     INRH-052
      P(IS,3)=X(1,IS+2)                                                 INRH-053
      P(IS,4)=X(2,IS+2)                                                 INRH-054
      HX=X(1,IS+1)*X(1,IS+2)-X(2,IS+1)*X(2,IS+2)                        INRH-055
      HY=X(2,IS+1)*X(1,IS+2)+X(1,IS+1)*X(2,IS+2)                        INRH-056
      X(1,IS+2)=X(1,IS+1)+X(1,IS+1)-X(1,IS)+HX                          INRH-057
      X(2,IS+2)=X(2,IS+1)+X(2,IS+1)-X(2,IS)+HY                          INRH-058
      IF (DABS(X(1,IS+2)).LT.1.D15) GO TO 7                             INRH-059
C RENORMALISATION OF LARGE FUNCTION VALUES                              INRH-060
      J=2*IS+4                                                          INRH-061
      DO 6 I=3,J                                                        INRH-062
    6 X(I,1)=X(I,1)*1.D-30                                              INRH-063
    7 CONTINUE                                                          INRH-064
C END OF INTEGRATION                                                    INRH-065
C MATCHING WITH TWO VALUES                                              INRH-066
      BRE=X(1,ISM)*FAM(IC,4)-FAM(IC,3)*X(1,ISM+2)                       INRH-067
      BIM=X(2,ISM)*FAM(IC,4)-FAM(IC,3)*X(2,ISM+2)                       INRH-068
      HX=X(1,ISM)*FAM(IC,2)-FAM(IC,1)*X(1,ISM+2)                        INRH-069
      HY=X(2,ISM)*FAM(IC,2)-FAM(IC,1)*X(2,ISM+2)                        INRH-070
      BIM=BIM+HX                                                        INRH-071
      BRE=BRE-HY                                                        INRH-072
      BRR=BRE*BRE+BIM*BIM                                               INRH-073
      BRE=-BRE/BRR                                                      INRH-074
      BIM=BIM/BRR                                                       INRH-075
      FAM(IC,7)=BRE*HX-BIM*HY                                           INRH-076
      FAM(IC,8)=HX*BIM+HY*BRE                                           INRH-077
      IF (LT) RETURN                                                    INRH-078
      BRE=BRE/12.D0                                                     INRH-079
      BIM=BIM/12.D0                                                     INRH-080
C NORMALISATION OF THE REGULAR SOLUTION                                 INRH-081
C AND SEARCH OF THE FIRST NON NEGLIGIBLE VALUE                          INRH-082
      DO 8 IS=1,ISM                                                     INRH-083
      BRR=X(1,IS)+10.D0*X(1,IS+1)+X(1,IS+2)                             INRH-084
      HY=X(2,IS)+10.D0*X(2,IS+1)+X(2,IS+2)                              INRH-085
      HX=BRR*BRE-HY*BIM                                                 INRH-086
      HY=HY*BRE+BRR*BIM                                                 INRH-087
      P(IS,1)=HX*VV(IS,9)-HY*VV(IS,10)                                  INRH-088
    8 P(IS,2)=HX*VV(IS,10)+HY*VV(IS,9)                                  INRH-089
      DO 9 KT=1,ISM                                                     INRH-090
      IF ((ABS(P(KT,1))+ABS(P(KT,2))).GT.ACONV) GO TO 10                INRH-091
    9 CONTINUE                                                          INRH-092
   10 HX=FAM(IC,1)                                                      INRH-093
      HY=FAM(IC,2)                                                      INRH-094
C COMPUTATION OF THE IRREGULAR SOLUTION - STARTING VALUES               INRH-095
C THE LAST POINT OF IMAGINARY POTENTIAL IS NEGLECTED                    INRH-096
      X(2,ISM)=HX/FAM(IC,6)                                             INRH-097
      X(2,ISM+2)=HY/FAM(IC,6)                                           INRH-098
      X(1,ISM)=FAM(IC,3)/FAM(IC,6)                                      INRH-099
      X(1,ISM+2)=FAM(IC,4)/FAM(IC,6)                                    INRH-100
      BRE=2.D0+P(ISM,3)                                                 INRH-101
      X(1,ISM+1)=(X(1,ISM)+X(1,ISM+2))/BRE                              INRH-102
      X(2,ISM+1)=(X(2,ISM)+X(2,ISM+2))/BRE                              INRH-103
      KR=MIN0(KT,ISM-6)                                                 INRH-104
      I1=ISM-KR                                                         INRH-105
C INTEGRATION                                                           INRH-106
      DO 11 JS=1,I1                                                     INRH-107
      IS=ISM-JS                                                         INRH-108
      HX=X(1,IS+1)*P(IS,3)-X(2,IS+1)*P(IS,4)                            INRH-109
      HY=X(2,IS+1)*P(IS,3)+X(1,IS+1)*P(IS,4)                            INRH-110
      X(1,IS)=X(1,IS+1)+X(1,IS+1)-X(1,IS+2)+HX                          INRH-111
   11 X(2,IS)=X(2,IS+1)+X(2,IS+1)-X(2,IS+2)+HY                          INRH-112
C COMPUTATION OF IRREGULAR SOLUTION                                     INRH-113
      DO 12 IS=KR,ISM                                                   INRH-114
      BRE=(X(1,IS)+10.D0*X(1,IS+1)+X(1,IS+2))/12.D0                     INRH-115
      BIM=(X(2,IS)+10.D0*X(2,IS+1)+X(2,IS+2))/12.D0                     INRH-116
      P(IS,3)=BRE*VV(IS,9)-BIM*VV(IS,10)                                INRH-117
   12 P(IS,4)=BRE*VV(IS,10)+BIM*VV(IS,9)                                INRH-118
      ISM3=ISM-3                                                        INRH-119
      HH=H*60.D0                                                        INRH-120
      DO 22 L=1,4                                                       INRH-121
      DO 21 IS=KT,ISM                                                   INRH-122
      IF (IS-KR.GT.2) GO TO 16                                          INRH-123
      IF (IS-KR-1)  13 , 14 , 15                                        INRH-124
   13 P(IS,L+4)=(-147.D0*P(IS,L)+360.D0*P(IS+1,L)-450.D0*P(IS+2,L)+400.DINRH-125
     10*P(IS+3,L)-225.D0*P(IS+4,L)+72.D0*P(IS+5,L)-10.D0*P(IS+6,L))/HH  INRH-126
      GO TO 21                                                          INRH-127
   14 P(IS,L+4)=(-10.D0*P(KR,L)-77.D0*P(IS,L)+150.D0*P(IS+1,L)-100.D0*P(INRH-128
     1IS+2,L)+50.D0*P(IS+3,L)-15.D0*P(IS+4,L)+2.D0*P(IS+5,L))/HH        INRH-129
      GO TO 21                                                          INRH-130
   15 P(IS,L+4)=(2.D0*P(KR,L)-24.D0*P(IS-1,L)-35.D0*P(IS,L)+80.D0*P(IS+1INRH-131
     1,L)-30.D0*P(IS+2,L)+8.D0*P(IS+3,L)-P(IS+4,L))/HH                  INRH-132
      GO TO 21                                                          INRH-133
   16 IF (IS.GT.ISM3) GO TO 17                                          INRH-134
      P(IS,L+4)=(45.D0*(P(IS+1,L)-P(IS-1,L))-9.D0*(P(IS+2,L)-P(IS-2,L))+INRH-135
     1P(IS+3,L)-P(IS-3,L))/HH                                           INRH-136
      GO TO 21                                                          INRH-137
   17 IF (IS-ISM+1) 18 , 19 , 20                                        INRH-138
   18 P(ISM-2,L+4)=(P(ISM-6,L)-8.D0*P(ISM-5,L)+30.D0*P(ISM-4,L)-80.D0*P(INRH-139
     1ISM3,L)+35.D0*P(ISM-2,L)+24.D0*P(ISM-1,L)-2.D0*P(ISM,L))/HH       INRH-140
      GO TO 21                                                          INRH-141
   19 P(ISM-1,L+4)=(-2.D0*P(ISM-6,L)+15.D0*P(ISM-5,L)-50.D0*P(ISM-4,L)+1INRH-142
     100.D0*P(ISM3,L)-150.D0*P(ISM-2,L)+77.D0*P(ISM-1,L)+10.D0*P(ISM,L))INRH-143
     2/HH                                                               INRH-144
      GO TO 21                                                          INRH-145
   20 P(ISM,L+4)=(10.D0*P(ISM-6,L)-72.D0*P(ISM-5,L)+225.D0*P(ISM-4,L)-40INRH-146
     10.D0*P(ISM3,L)+450.D0*P(ISM-2,L)-360.D0*P(ISM-1,L)+147.D0*P(ISM,L)INRH-147
     2)/HH                                                              INRH-148
   21 CONTINUE                                                          INRH-149
   22 CONTINUE                                                          INRH-150
      R=H*DFLOAT(KT-1)                                                  INRH-151
      DO 23 IS=KT,ISM                                                   INRH-152
      R=R+H                                                             INRH-153
      BR=P(IS,1)*(CC/R+VV(IS,13))-P(IS,5)-P(IS,2)*VV(IS,14)             INRH-154
      BI=P(IS,2)*(CC/R+VV(IS,13))-P(IS,6)+P(IS,1)*VV(IS,14)             INRH-155
      CR=P(IS,3)*(CC/R+VV(IS,13))-P(IS,7)-P(IS,4)*VV(IS,14)             INRH-156
      CI=P(IS,4)*(CC/R+VV(IS,13))-P(IS,8)+P(IS,3)*VV(IS,14)             INRH-157
      P(IS,5)=BR*VV(IS,11)-BI*VV(IS,12)                                 INRH-158
      P(IS,6)=BI*VV(IS,11)+BR*VV(IS,12)                                 INRH-159
      P(IS,7)=CR*VV(IS,11)-CI*VV(IS,12)                                 INRH-160
   23 P(IS,8)=CI*VV(IS,11)+CR*VV(IS,12)                                 INRH-161
      IF (KT.EQ.1) RETURN                                               INRH-162
      KR=KT-1                                                           INRH-163
      DO 25 IS=1,KR                                                     INRH-164
      DO 24 L=1,8                                                       INRH-165
   24 P(IS,L)=0.D0                                                      INRH-166
   25 CONTINUE                                                          INRH-167
      RETURN                                                            INRH-168
      END                                                               INRH-169
C 01/01/04                                                      ECIS03  INRI-000
      SUBROUTINE INRI(W,P,Q,WW,NVI,FAM,X,PAD1,PAD2,KITER,EITER,CONV,ACONINRI-001
     1V,KAB,NC,ISM,IPI,J,NAT,AT,VR,FAR,FAI,CC,V,LO,H,Z)                 INRI-002
C  E. C. I. S. METHOD: INTEGRATION OF A SINGLE INHOMOGENEOUS EQUATION   INRI-003
C  BY THE NUMEROV METHOD      - DIRAC EQUATION -                        INRI-004
C INPUT VARIABLES: P:     UNCOUPLED SOLUTIONS                           INRI-005
C                  Q:     COUPLED SOLUTION                              INRI-006
C                  WW:    COUPLING BETWEEN EQUATIONS                    INRI-007
C                  NVI:   TABLE OF ADDRESSES OF COUPLINGS               INRI-008
C                  FAM:   WAVE NUMBER                                   INRI-009
C                  KITER: CURRENT ITERATION NUMBER                      INRI-010
C                  EITER: CONVERGENCE EPSILON FOR THE SCATTERING COEFF. INRI-011
C                  CONV:  EPSILON FOR NEGLIGIBLE SECOND MEMBERS         INRI-012
C                  ACONV: EPSILON FOR NEGLIGIBLE FUNCTION VALUES        INRI-013
C                  KAB:   DIMENSION OF TABLE NVI                        INRI-014
C                  NC:    NUMBER OF COUPLED CHANNELS                    INRI-015
C                  ISM:   NUMBER OF RADIAL POINTS                       INRI-016
C                  IPI:   THE FUNCTION IS NEGLIGIBLE FOR R < IPI*H      INRI-017
C                  J:     CHANNEL NUMBER OF THE EQUATION                INRI-018
C                  NAT,AT:COEFFICIENTS AND ADDRESSES OF COUPLINGS       INRI-019
C                  VR:    COUPLING POTENTIALS                           INRI-020
C                  CC:    EIGENVALUE OF L.S + 1                         INRI-021
C                  V:     D(R) AND TENSOR POTENTIALS FOR H**4 CORRECTIONINRI-022
C                  LO(I): LOGICAL CONTROLS                              INRI-023
C                  H:     INTEGRATION STEP                              INRI-024
C                  Z:     COULOMB INTEGRAL FOR CORRECTIONS              INRI-025
C OUTPUT VARIABLES:FAR,FAI: REAL AND IMAGINARY PART OF SCAT. COEFF.     INRI-026
C WORKING FIELD:   W(ISM,4):SECOND MEMBERS                              INRI-027
C                  X:    INTEGRAL OF REGULAR FUNCTION WITH SECOND MEMBERINRI-028
C                  PAD1(2,J): ITERATION RESULTS FOR THE CHANNEL J       INRI-029
C                  PAD2: WORKING FIELD OF PADE,TWICE LONGER THAN PAD1   INRI-030
C***********************************************************************INRI-031
      IMPLICIT REAL*8 (A-H,O-Z)                                         INRI-032
      LOGICAL LO(250)                                                   INRI-033
      DIMENSION P(ISM,8),W(ISM,4),IPI(1),V(ISM,14),Q(ISM,4,1),WW(ISM,4,1INRI-034
     1),NVI(KAB,KAB,4),WX(4),NAT(6,1),AT(3,1),VR(ISM,4,1),FAM(1),X(2,1),INRI-035
     2PAD1(2,1),PAD2(1),Z(4),FAR(1),FAI(1)                              INRI-036
      COMMON /INOUT/ MR,MW,MS                                           INRI-037
      ISM1=ISM+1                                                        INRI-038
C PUT ZERO IN THE INHOMOGENEOUS TERMS                                   INRI-039
      I2=4*ISM                                                          INRI-040
      DO 1 IS=1,I2                                                      INRI-041
    1 W(IS,1)=0.D0                                                      INRI-042
      IDP=ISM1                                                          INRI-043
      DO 14 IC=1,NC                                                     INRI-044
      IF (IPI(IC).GT.ISM) GO TO 14                                      INRI-045
      K3=IPI(IC)                                                        INRI-046
      IDP=MIN0(IDP,K3)                                                  INRI-047
      IF (LO(207)) GO TO 10                                             INRI-048
C NO PREVIOUS CALCULATION OF COUPLING POTENTIALS                        INRI-049
      L1=NVI(J,IC,1)                                                    INRI-050
      L2=NVI(J,IC,2)                                                    INRI-051
      L3=NVI(J,IC,3)                                                    INRI-052
      IF (L1.GT.L2) GO TO 5                                             INRI-053
C SCALAR AND VECTOR TERMS OF COUPLING POTENTIALS                        INRI-054
      DO 4 IS=K3,ISM                                                    INRI-055
      DO 2 I=1,4                                                        INRI-056
    2 WX(I)=0.D0                                                        INRI-057
      DO 3 K1=L1,L2                                                     INRI-058
      K=NAT(1,K1)                                                       INRI-059
      WX(1)=WX(1)+AT(2,K1)*VR(IS,1,K)                                   INRI-060
      WX(2)=WX(2)+AT(2,K1)*VR(IS,2,K)                                   INRI-061
      WX(3)=WX(3)+AT(3,K1)*VR(IS,3,K)                                   INRI-062
    3 WX(4)=WX(4)+AT(3,K1)*VR(IS,4,K)                                   INRI-063
      W(IS,1)=W(IS,1)+WX(1)*Q(IS,1,IC)-WX(2)*Q(IS,2,IC)                 INRI-064
      W(IS,2)=W(IS,2)+WX(1)*Q(IS,2,IC)+WX(2)*Q(IS,1,IC)                 INRI-065
      W(IS,3)=W(IS,3)+WX(3)*Q(IS,3,IC)-WX(4)*Q(IS,4,IC)                 INRI-066
    4 W(IS,4)=W(IS,4)+WX(3)*Q(IS,4,IC)+WX(4)*Q(IS,3,IC)                 INRI-067
    5 IF (L2.GE.L3) GO TO 12                                            INRI-068
C TENSOR TERMS OF COUPLING POTENTIALS                                   INRI-069
      L2=L2+1                                                           INRI-070
      DO 9 IS=K3,ISM                                                    INRI-071
      DO 6 I=1,4                                                        INRI-072
    6 WX(I)=0.D0                                                        INRI-073
      DO 7 K1=L2,L3                                                     INRI-074
      K=NAT(1,K1)                                                       INRI-075
      WX(1)=WX(1)+AT(2,K1)*VR(IS,1,K)                                   INRI-076
      WX(2)=WX(2)+AT(2,K1)*VR(IS,2,K)                                   INRI-077
      WX(3)=WX(3)+AT(3,K1)*VR(IS,3,K)                                   INRI-078
    7 WX(4)=WX(4)+AT(3,K1)*VR(IS,4,K)                                   INRI-079
      IF (J.GT.IC) GO TO 8                                              INRI-080
      WX(3)=-WX(3)                                                      INRI-081
      WX(4)=-WX(4)                                                      INRI-082
    8 W(IS,1)=W(IS,1)+(WX(1)+WX(3))*Q(IS,3,IC)-(WX(2)+WX(4))*Q(IS,4,IC) INRI-083
      W(IS,2)=W(IS,2)+(WX(1)+WX(3))*Q(IS,4,IC)+(WX(2)+WX(4))*Q(IS,3,IC) INRI-084
      W(IS,3)=W(IS,3)+(WX(1)-WX(3))*Q(IS,1,IC)-(WX(2)-WX(4))*Q(IS,2,IC) INRI-085
    9 W(IS,4)=W(IS,4)+(WX(1)-WX(3))*Q(IS,2,IC)+(WX(2)-WX(4))*Q(IS,1,IC) INRI-086
      GO TO 14                                                          INRI-087
C COUPLING POTENTIALS COMPUTED IN INTR                                  INRI-088
   10 K1=NVI(IC,J,3)                                                    INRI-089
      IF (K1.EQ.0) GO TO 12                                             INRI-090
C SCALAR AND VECTOR TERMS OF COUPLING POTENTIALS                        INRI-091
      DO 11 IS=K3,ISM                                                   INRI-092
      W(IS,1)=W(IS,1)+WW(IS,1,K1)*Q(IS,1,IC)-WW(IS,2,K1)*Q(IS,2,IC)     INRI-093
      W(IS,2)=W(IS,2)+WW(IS,1,K1)*Q(IS,2,IC)+WW(IS,2,K1)*Q(IS,1,IC)     INRI-094
      W(IS,3)=W(IS,3)+WW(IS,3,K1)*Q(IS,3,IC)-WW(IS,4,K1)*Q(IS,4,IC)     INRI-095
   11 W(IS,4)=W(IS,4)+WW(IS,3,K1)*Q(IS,4,IC)+WW(IS,4,K1)*Q(IS,3,IC)     INRI-096
   12 K1=NVI(IC,J,4)                                                    INRI-097
C TENSOR TERMS OF COUPLING POTENTIALS                                   INRI-098
      IF (K1.EQ.0) GO TO 14                                             INRI-099
      L1=1                                                              INRI-100
      IF (J.LT.IC) L1=3                                                 INRI-101
      L2=4-L1                                                           INRI-102
      DO 13 IS=K3,ISM                                                   INRI-103
      W(IS,1)=W(IS,1)+WW(IS,L1,K1)*Q(IS,3,IC)-WW(IS,L1+1,K1)*Q(IS,4,IC) INRI-104
      W(IS,2)=W(IS,2)+WW(IS,L1,K1)*Q(IS,4,IC)+WW(IS,L1+1,K1)*Q(IS,3,IC) INRI-105
      W(IS,3)=W(IS,3)+WW(IS,L2,K1)*Q(IS,1,IC)-WW(IS,L2+1,K1)*Q(IS,2,IC) INRI-106
   13 W(IS,4)=W(IS,4)+WW(IS,L2,K1)*Q(IS,2,IC)+WW(IS,L2+1,K1)*Q(IS,1,IC) INRI-107
   14 CONTINUE                                                          INRI-108
      IPI(J)=IDP                                                        INRI-109
C SEARCH FOR THE FIRST NON NEGLIGIBLE VALUE                             INRI-110
      IF (IDP.GT.ISM) RETURN                                            INRI-111
      DO 15 IS=IDP,ISM                                                  INRI-112
      IF ((DABS(W(IS,1))+DABS(W(IS,2))+DABS(W(IS,3))+DABS(W(IS,4))).GT.CINRI-113
     1ONV) GO TO 16                                                     INRI-114
   15 CONTINUE                                                          INRI-115
   16 IPI(J)=IS                                                         INRI-116
      IF (IPI(J).GE.ISM) RETURN                                         INRI-117
      KT=MAX0(IPI(J),1)                                                 INRI-118
C INTEGRAL OF THE REGULAR FUNCTION WITH THE SECOND MEMBER               INRI-119
      X(1,KT)=P(KT,2)*W(KT,2)-P(KT,1)*W(KT,1)+P(KT,6)*W(KT,4)-P(KT,5)*W(INRI-120
     1KT,3)                                                             INRI-121
      X(2,KT)=-P(KT,1)*W(KT,2)-P(KT,2)*W(KT,1)-P(KT,5)*W(KT,4)-P(KT,6)*WINRI-122
     1(KT,3)                                                            INRI-123
      KKT=KT+1                                                          INRI-124
      IF (KKT.GT.ISM) GO TO 18                                          INRI-125
      DO 17 IS=KKT,ISM                                                  INRI-126
      X(1,IS)=X(1,IS-1)-P(IS,1)*W(IS,1)+P(IS,2)*W(IS,2)-P(IS,5)*W(IS,3)+INRI-127
     1P(IS,6)*W(IS,4)                                                   INRI-128
   17 X(2,IS)=X(2,IS-1)-P(IS,1)*W(IS,2)-P(IS,2)*W(IS,1)-P(IS,5)*W(IS,4)-INRI-129
     1P(IS,6)*W(IS,3)                                                   INRI-130
C SCATTERING COEFFICIENTS                                               INRI-131
   18 HX=Z(3)*H                                                         INRI-132
      HY=Z(4)*H                                                         INRI-133
      A=X(1,ISM)/FAM(1)-Z(1)                                            INRI-134
      B=X(2,ISM)/FAM(1)-Z(2)                                            INRI-135
      IF (LO(92)) GO TO 26                                              INRI-136
      IST=ISM+KT                                                        INRI-137
      R=H*DFLOAT(ISM)                                                   INRI-138
      DO 19 IS=KT,ISM                                                   INRI-139
      JS=IST-IS                                                         INRI-140
      Q(JS,1,J)=(X(1,JS)*P(JS,3)-X(2,JS)*P(JS,4)-HX*P(JS,1)+HY*P(JS,2)-.INRI-141
     15D0*W(JS,3))/H+(V(JS,5)*W(JS,1)-V(JS,6)*W(JS,2)+W(JS,3)*(CC/R+V(JSINRI-142
     2,13))-W(JS,4)*V(JS,14))/12.D0                                     INRI-143
      Q(JS,2,J)=(X(1,JS)*P(JS,4)+X(2,JS)*P(JS,3)-HY*P(JS,1)-HX*P(JS,2)-.INRI-144
     15D0*W(JS,4))/H+(V(JS,5)*W(JS,2)+V(JS,6)*W(JS,1)+W(JS,4)*(CC/R+V(JSINRI-145
     2,13))+W(JS,3)*V(JS,14))/12.D0                                     INRI-146
      Q(JS,3,J)=(X(1,JS)*P(JS,7)-X(2,JS)*P(JS,8)-HX*P(JS,5)+HY*P(JS,6)+.INRI-147
     15D0*W(JS,1))/H+(V(JS,7)*W(JS,3)-V(JS,8)*W(JS,4)+W(JS,1)*(CC/R+V(JSINRI-148
     2,13))-W(JS,2)*V(JS,14))/12.D0                                     INRI-149
      Q(JS,4,J)=(X(1,JS)*P(JS,8)+X(2,JS)*P(JS,7)-HY*P(JS,5)-HX*P(JS,6)+.INRI-150
     15D0*W(JS,2))/H+(V(JS,7)*W(JS,4)+V(JS,8)*W(JS,3)+W(JS,2)*(CC/R+V(JSINRI-151
     2,13))+W(JS,1)*V(JS,14))/12.D0                                     INRI-152
      HX=HX+P(JS,3)*W(JS,1)-P(JS,4)*W(JS,2)+P(JS,7)*W(JS,3)-P(JS,8)*W(JSINRI-153
     1,4)                                                               INRI-154
      HY=HY+P(JS,3)*W(JS,2)+P(JS,4)*W(JS,1)+P(JS,7)*W(JS,4)+P(JS,8)*W(JSINRI-155
     1,3)                                                               INRI-156
   19 R=R-H                                                             INRI-157
C CORRECTIONS OF ORDER H**4                                             INRI-158
      KT1=KT+3                                                          INRI-159
      ISM3=ISM-3                                                        INRI-160
      IF (KT1.GT.ISM3) GO TO 21                                         INRI-161
      HZ=H*720.D0                                                       INRI-162
      DO 20 IS=KT1,ISM3                                                 INRI-163
      Q(IS,1,J)=Q(IS,1,J)-(45.D0*(W(IS+1,3)-W(IS-1,3))-9.D0*(W(IS+2,3)-WINRI-164
     1(IS-2,3))+W(IS+3,3)-W(IS-3,3))/HZ                                 INRI-165
      Q(IS,2,J)=Q(IS,2,J)-(45.D0*(W(IS+1,4)-W(IS-1,4))-9.D0*(W(IS+2,4)-WINRI-166
     1(IS-2,4))+W(IS+3,4)-W(IS-3,4))/HZ                                 INRI-167
      Q(IS,3,J)=Q(IS,3,J)+(45.D0*(W(IS+1,1)-W(IS-1,1))-9.D0*(W(IS+2,1)-WINRI-168
     1(IS-2,1))+W(IS+3,1)-W(IS-3,1))/HZ                                 INRI-169
   20 Q(IS,4,J)=Q(IS,4,J)+(45.D0*(W(IS+1,2)-W(IS-1,2))-9.D0*(W(IS+2,2)-WINRI-170
     1(IS-2,2))+W(IS+3,2)-W(IS-3,2))/HZ                                 INRI-171
   21 IF (KT.EQ.1) GO TO 23                                             INRI-172
      K=KT-1                                                            INRI-173
      DO 22 IS=1,K                                                      INRI-174
      Q(IS,1,J)=-(HX*P(IS,1)-HY*P(IS,2))/H                              INRI-175
      Q(IS,2,J)=-(HY*P(IS,1)+HX*P(IS,2))/H                              INRI-176
      Q(IS,3,J)=-(HX*P(IS,5)-HY*P(IS,6))/H                              INRI-177
   22 Q(IS,4,J)=-(HY*P(IS,5)+HX*P(IS,6))/H                              INRI-178
   23 DO 24 KT=1,ISM                                                    INRI-179
      IF ((DABS(Q(KT,1,J))+DABS(Q(KT,2,J))+DABS(Q(KT,3,J))+DABS(Q(KT,4,JINRI-180
     1))).GT.ACONV) GO TO 25                                            INRI-181
   24 CONTINUE                                                          INRI-182
   25 IPI(J)=KT                                                         INRI-183
      IF (LO(22)) GO TO 26                                              INRI-184
      PAD1(1,KITER)=A                                                   INRI-185
      PAD1(2,KITER)=B                                                   INRI-186
C  TEST OF CONVERGENCE                                                  INRI-187
   26 LO(205)=(DABS(B-FAI(1)).LE.EITER.AND.(DABS(A-FAR(1)).LE.EITER))   INRI-188
      IF (LO(122).AND.LO(204).AND.KITER.GT.3.AND.(.NOT.LO(205))) CALL PAINRI-189
     1DE(PAD1,PAD2,KITER,A,B,EITER,1.D0,0.D0,LO)                        INRI-190
      LO(204)=LO(204).AND.LO(205)                                       INRI-191
      FAR(1)=A                                                          INRI-192
      FAI(1)=B                                                          INRI-193
      IF (LO(57)) WRITE (MW,1000) J,FAR(1),FAI(1),KITER,KT              INRI-194
      RETURN                                                            INRI-195
 1000 FORMAT (5X,I5,2D30.15,I10,10X,I5)                                 INRI-196
      END                                                               INRI-197
C 01/01/04                                                      ECIS03  PADE-000
      SUBROUTINE PADE(R,P,MM,BRE,BIM,EITER,VALR,VALI,LO)                PADE-001
C  PADE APPROXIMANT OF TYPE I, CONTINUED FRACTION                       PADE-002
C INPUT VARIABLES: R: PARTIAL TAYLOR SUMS                               PADE-003
C                  MM: NUMBER OF COMPONENTS OF P                        PADE-004
C                  EITER: CONVERGENCE CRITERION                         PADE-005
C                  VAL: VARIABLE   HERE TAKEN AS (1.D0,0.D0)            PADE-006
C                  LO: LOGICAL CONTROLS                                 PADE-007
C OUTPUT VARIABLES: BRE,BIM IF CONVERGENCE IS OBTAINED                  PADE-008
C WORKING FIELD: P: AT LEAST TWICE AS LONG AS R                         PADE-009
C***********************************************************************PADE-010
      IMPLICIT REAL*8 (A-H,O-Z)                                         PADE-011
      DIMENSION R(2,MM),P(2,2,MM)                                       PADE-012
      LOGICAL LO(250)                                                   PADE-013
      COMMON /INOUT/ MR,MW,MS                                           PADE-014
      LO(205)=.TRUE.                                                    PADE-015
      IF (MM.GT.3) GO TO 1                                              PADE-016
      LO(205)=.FALSE.                                                   PADE-017
      RETURN                                                            PADE-018
C  TAYLOR COEFFICIENTS                                                  PADE-019
    1 MT=MM+1                                                           PADE-020
      P(1,1,1)=R(1,1)                                                   PADE-021
      P(1,2,1)=0.D0                                                     PADE-022
      P(2,1,1)=R(2,1)                                                   PADE-023
      P(2,2,1)=0.D0                                                     PADE-024
      DO 2 I=2,MM                                                       PADE-025
      P(1,1,I)=R(1,I)-R(1,I-1)                                          PADE-026
      P(1,2,I)=0.D0                                                     PADE-027
      P(2,1,I)=R(2,I)-R(2,I-1)                                          PADE-028
    2 P(2,2,I)=0.D0                                                     PADE-029
C  DECOMPOSITION LOOP                                                   PADE-030
      NM=MM-1                                                           PADE-031
      DO 6 NA=1,NM                                                      PADE-032
      ML=MM-NA                                                          PADE-033
      ZR=P(1,1,NA)                                                      PADE-034
      ZI=P(2,1,NA)                                                      PADE-035
      IF (DABS(ZR)+DABS(ZI).GE.1.D-8) GO TO 4                           PADE-036
      P(1,2,MT-NA)=0.D0                                                 PADE-037
      P(2,2,MT-NA)=0.D0                                                 PADE-038
      DO 3 J=1,ML                                                       PADE-039
      P(1,1,NA+J)=P(1,1,NA+J)-P(1,1,NA)*P(1,2,J)+P(2,1,NA)*P(2,2,J)     PADE-040
    3 P(2,1,NA+J)=P(2,1,NA+J)-P(2,1,NA)*P(1,2,J)-P(1,1,NA)*P(2,2,J)     PADE-041
      GO TO 6                                                           PADE-042
    4 P(1,2,MT-NA)=1.D0                                                 PADE-043
      DO 5 J=1,ML                                                       PADE-044
      ZX=P(1,1,NA)**2+P(2,1,NA)**2                                      PADE-045
      ZR=(P(1,1,NA+J)*P(1,1,NA)+P(2,1,NA+J)*P(2,1,NA))/ZX               PADE-046
      ZI=(P(2,1,NA+J)*P(1,1,NA)-P(1,1,NA+J)*P(2,1,NA))/ZX               PADE-047
      P(1,1,NA+J)=P(1,2,J)-ZR                                           PADE-048
      P(2,1,NA+J)=P(2,2,J)-ZI                                           PADE-049
      P(1,2,J)=ZR                                                       PADE-050
    5 P(2,2,J)=ZI                                                       PADE-051
    6 CONTINUE                                                          PADE-052
      AR1=1.D30                                                         PADE-053
C  TRUNCATED CONTINUED FRACTIONS                                        PADE-054
      DO 9  N=1,NM                                                      PADE-055
      IP=MM+1-N                                                         PADE-056
      P(1,2,N)=P(1,1,IP)                                                PADE-057
      P(2,2,N)=P(2,1,IP)                                                PADE-058
      DO 8  I=2,IP                                                      PADE-059
      ID=IP+1-I                                                         PADE-060
      IF (P(1,2,MT-ID).GT.0.D0) GO TO 7                                 PADE-061
      AR=VALR*P(1,2,N)-VALI*P(2,2,N)+P(1,1,ID)                          PADE-062
      AI=VALR*P(2,2,N)+VALI*P(1,2,N)+P(2,1,ID)                          PADE-063
      P(1,2,N)=AR                                                       PADE-064
      P(2,2,N)=AI                                                       PADE-065
      GO TO 8                                                           PADE-066
    7 AR=1.D0+VALR*P(1,2,N)-VALI*P(2,2,N)                               PADE-067
      AI=VALR*P(2,2,N)+VALI*P(1,2,N)                                    PADE-068
      ZX=AR*AR+AI*AI                                                    PADE-069
      P(1,2,N)=(P(1,1,ID)*AR+P(2,1,ID)*AI)/ZX                           PADE-070
      P(2,2,N)=(P(2,1,ID)*AR-P(1,1,ID)*AI)/ZX                           PADE-071
    8 CONTINUE                                                          PADE-072
      IF (N.EQ.1) GO TO 9                                               PADE-073
C SEARCH FOR SMALLEST DIFFERENCE                                        PADE-074
      ZR=P(1,2,N)-P(1,2,N-1)                                            PADE-075
      ZI=P(2,2,N)-P(2,2,N-1)                                            PADE-076
      AI1=DMAX1(DABS(ZR),DABS(ZI))                                      PADE-077
      IF (AI1.GE.AR1) GO TO 9                                           PADE-078
      NN=N                                                              PADE-079
      AR1=AI1                                                           PADE-080
    9 CONTINUE                                                          PADE-081
      LO(205)=AR1.LE.EITER                                              PADE-082
      IF (LO(57)) WRITE (MW,1000) LO(205),MM,NN,P(1,2,NN),P(2,2,NN),P(1,PADE-083
     12,NN-1),P(2,2,NN-1)                                               PADE-084
      IF ((.NOT.LO(205)).AND.(LO(206).OR.LO(23))) RETURN                PADE-085
      LO(205)=.TRUE.                                                    PADE-086
      BRE=P(1,2,NN-1)                                                   PADE-087
      BIM=P(2,2,NN-1)                                                   PADE-088
      IF (NN.EQ.2) RETURN                                               PADE-089
      BRE=0.5D0*(BRE+P(1,2,NN))                                         PADE-090
      BIM=0.5D0*(BIM+P(2,2,NN))                                         PADE-091
      RETURN                                                            PADE-092
 1000 FORMAT (' PADE',5X,L3,5X,'ITER =',I3,5X,'N =',I3,5X,4D15.8)       PADE-093
      END                                                               PADE-094
C 01/01/04                                                      ECIS03  INCH-000
      SUBROUTINE INCH(V,VI,MC,NAT,AT,NVI,FAM,Y,X,WR,WI,ISM,KAB,NC,NCIN,NINCH-001
     1ML,JSX,NPP,KR,LO)                                                 INCH-002
C  STANDARD INTEGRATION OF THE COUPLED  EQUATIONS BY THE NUMEROV METHOD INCH-003
C INPUT VARIABLES: V,VI:    REAL AND IMAGINARY POTENTIALS AND COUPLINGS INCH-004
C                  MC(*,6): ADDRESS OF CENTRAL POTENTIALS               INCH-005
C                  NAT,AT:  GEOMETRICAL COEFFICIENTS                    INCH-006
C                  NVI:     ADDRESSES IN THE TABLE NAT,AT               INCH-007
C                  FAM:     MATCHING VALUES AND CONSTANTS OF EQUATIONS  INCH-008
C                  Y:       COULOMB CORRECTIONS                         INCH-009
C                  ISM:     NUMBER OF RADIAL POINTS                     INCH-010
C                  KAB:     MAXIMUM NUMBER OF COUPLED CHANNELS          INCH-011
C                  NC:      NUMBER OF COUPLED CHANNELS                  INCH-012
C                  NCIN:    NUMBER OF SOLUTIONS                         INCH-013
C                  NML:     MAXIMUM NUMBER OF POINTS WHERE THE COUPLING INCH-014
C                           POTENTIALS CAN BE CALCULATED AT A TIME      INCH-015
C                  JSX:     PERIODICITY OF THE SCHMIDT'S ORTHOGONALISA- INCH-016
C                           TION IF LO(42) IS .TRUE.                    INCH-017
C                  NPP:     NUMBER OF OPTICAL POTENTIALS                INCH-018
C                  LO(I):   LOGICAL CONTROLS                            INCH-019
C OUTPUT VARIABLES: SCATTERING COEFFICIENTS MULTIPLIED KF/KI            INCH-020
C                  REAL PART IN X(IC,IC',5), IMAGINARY PART IN          INCH-021
C                  X(IC,IC',2) FOR INCOMING CHANNEL IC'                 INCH-022
C WORKING FIELDS:  WR/I(IC,IC',IS): REAL/IMAGINARY COUPLING POTENTIALS  INCH-023
C                  X(IC,IC',I): NUMEROV RECURRENCE                      INCH-024
C                  KR:      WORKING FIELD FOR LINS                      INCH-025
C***********************************************************************INCH-026
      IMPLICIT REAL*8 (A-H,O-Z)                                         INCH-027
      DIMENSION WR(NC,NC,1),WI(NC,NC,1),V(ISM,1),VI(ISM,1),MC(KAB,6),NVIINCH-028
     1(KAB,KAB,2),KR(1),NAT(4,1),AT(2,1),X(KAB,KAB,6),FAM(KAB,10),Y(KAB,INCH-029
     2KAB,4)                                                            INCH-030
      COMMON /INOUT/ MR,MW,MS                                           INCH-031
      LOGICAL LO(250),LT                                                INCH-032
      IF (LO(74)) CALL HORA                                             INCH-033
      JR=0                                                              INCH-034
      N2=NC*NC                                                          INCH-035
      DO 3 I=1,NC                                                       INCH-036
      DO 2 J=1,NC                                                       INCH-037
      DO 1 K=1,6                                                        INCH-038
    1 X(J,I,K)=0.D0                                                     INCH-039
    2 CONTINUE                                                          INCH-040
    3 X(I,I,3)=1.D-15                                                   INCH-041
C  RADIAL INTEGRATION LOOP                                              INCH-042
      DO 31 JS=1,ISM                                                    INCH-043
      IS=MOD(JS-1,NML)+1                                                INCH-044
      IF (JS.LE.JR) GO TO 17                                            INCH-045
      JI=JR+1                                                           INCH-046
      JR=MIN0(ISM,JR+NML)                                               INCH-047
C THE POTENTIALS ARE FIRST CALCULATED IN WR(IC,IC',I) AND               INCH-048
C WI(IC,IC',I) STARTING WITH I=2   FOR IC LARGER OR EQUAL TO IC'        INCH-049
      DO 10 L=1,NC                                                      INCH-050
      DO 9 J=L,NC                                                       INCH-051
      M=J+(L-1)*NC                                                      INCH-052
      N=M                                                               INCH-053
      DO 4 I=JI,JR                                                      INCH-054
      N=N+N2                                                            INCH-055
      WR(N,1,1)=0.D0                                                    INCH-056
    4 WI(N,1,1)=0.D0                                                    INCH-057
      IF (L.NE.J) GO TO 6                                               INCH-058
C OPTICAL MODEL CONTRIBUTION                                            INCH-059
      N=M                                                               INCH-060
      I1=MC(L,4)                                                        INCH-061
      I2=I1+NPP                                                         INCH-062
      DO 5 I=JI,JR                                                      INCH-063
      N=N+N2                                                            INCH-064
      BRE=DFLOAT(I)**2                                                  INCH-065
      WR(N,1,1)=FAM(L,9)-FAM(L,10)/BRE+FAM(L,7)*V(I,I1)                 INCH-066
      WI(N,1,1)=FAM(L,7)*VI(I,I1)                                       INCH-067
      IF (LO(229)) WR(N,1,1)=WR(N,1,1)+FAM(L,8)*V(I,I2)                 INCH-068
      IF (LO(230)) WI(N,1,1)=WI(N,1,1)+FAM(L,8)*VI(I,I2)                INCH-069
    5 CONTINUE                                                          INCH-070
C COUPLED CHANNEL CONTRIBUTION                                          INCH-071
    6 K1=NVI(J,L,1)                                                     INCH-072
      K2=NVI(J,L,2)                                                     INCH-073
      IF (K1.GT.K2) GO TO 9                                             INCH-074
      DO 8 K=K1,K2                                                      INCH-075
      KT=IABS(NAT(1,K))                                                 INCH-076
      LT=KT.NE.NAT(1,K)                                                 INCH-077
      N=M                                                               INCH-078
      DO 7 I=JI,JR                                                      INCH-079
      N=N+N2                                                            INCH-080
      WR(N,1,1)=WR(N,1,1)+AT(2,K)*V(I,KT)                               INCH-081
      IF (LT) WI(N,1,1)=WI(N,1,1)+AT(2,K)*VI(I,KT)                      INCH-082
    7 CONTINUE                                                          INCH-083
    8 CONTINUE                                                          INCH-084
    9 CONTINUE                                                          INCH-085
   10 CONTINUE                                                          INCH-086
      JJ=JR-JI+1                                                        INCH-087
      DO 16 I=1,JJ                                                      INCH-088
      J=I+1                                                             INCH-089
C SYMMETRISATION OF OLD VALUES                                          INCH-090
      DO 12 K=1,NC                                                      INCH-091
      DO 11 L=K,NC                                                      INCH-092
      WR(K,L,J)=WR(L,K,J)                                               INCH-093
   11 WI(K,L,J)=WI(L,K,J)                                               INCH-094
   12 CONTINUE                                                          INCH-095
C COMPUTATION OF V +V*V/12. FOR L LARGER OR EQUAL TO K                  INCH-096
      DO 15 K=1,NC                                                      INCH-097
      DO 14 L=K,NC                                                      INCH-098
      BRE=0.D0                                                          INCH-099
      BIM=0.D0                                                          INCH-100
      DO 13 N=1,NC                                                      INCH-101
      BRE=BRE-WR(N,K,J)*WR(N,L,J)+WI(N,K,J)*WI(N,L,J)                   INCH-102
   13 BIM=BIM-WI(N,K,J)*WR(N,L,J)-WR(N,K,J)*WI(N,L,J)                   INCH-103
C SYMMETRISATION                                                        INCH-104
      WR(L,K,I)=WR(L,K,J)+BRE/12.D0                                     INCH-105
      WI(L,K,I)=WI(L,K,J)+BIM/12.D0                                     INCH-106
      WR(K,L,I)=WR(L,K,I)                                               INCH-107
   14 WI(K,L,I)=WI(L,K,I)                                               INCH-108
      IF (LO(30)) WR(K,K,I)=WR(K,K,I)+WR(K,K,J)**3/360.D0               INCH-109
   15 CONTINUE                                                          INCH-110
   16 CONTINUE                                                          INCH-111
   17 DO 24 I=1,NC                                                      INCH-112
      DO 18 J=1,NC                                                      INCH-113
      X(I,J,1)=X(I,J,2)                                                 INCH-114
      X(I,J,2)=X(I,J,3)                                                 INCH-115
      X(I,J,4)=X(I,J,5)                                                 INCH-116
   18 X(I,J,5)=X(I,J,6)                                                 INCH-117
   19 DO 21 J=1,NC                                                      INCH-118
      HX=0.D0                                                           INCH-119
      HY=0.D0                                                           INCH-120
      DO 20 K=1,NC                                                      INCH-121
      HX=HX+WR(K,J,IS)*X(I,K,2)-WI(K,J,IS)*X(I,K,5)                     INCH-122
   20 HY=HY+WI(K,J,IS)*X(I,K,2)+WR(K,J,IS)*X(I,K,5)                     INCH-123
      X(I,J,3)=X(I,J,2)+X(I,J,2)-X(I,J,1)-HX                            INCH-124
   21 X(I,J,6)=X(I,J,5)+X(I,J,5)-X(I,J,4)-HY                            INCH-125
      IF (DABS(X(I,I,3)).LT.1.D15) GO TO 24                             INCH-126
      DO 23 JI=1,6                                                      INCH-127
      DO 22 IJ=1,NC                                                     INCH-128
   22 X(I,IJ,JI)=X(I,IJ,JI)*1.D-30                                      INCH-129
   23 CONTINUE                                                          INCH-130
      GO TO 19                                                          INCH-131
   24 CONTINUE                                                          INCH-132
      IF (LO(142).OR.MOD(JS,JSX).NE.0.OR.JS.EQ.ISM) GO TO 31            INCH-133
C  SCHMIDT ORTHOGONALISATION PROCEDURE EVERY JSX STEPS                  INCH-134
      DO 30 I=1,NC                                                      INCH-135
      IF (I.EQ.1) GO TO 28                                              INCH-136
      IN=I-1                                                            INCH-137
      DO 27 K=1,IN                                                      INCH-138
      X(I,K,1)=0.D0                                                     INCH-139
      X(I,K,4)=0.D0                                                     INCH-140
      DO 25 J=1,NC                                                      INCH-141
      X(I,K,1)=X(I,K,1)+X(K,J,2)*X(I,J,2)-X(K,J,5)*X(I,J,5)             INCH-142
   25 X(I,K,4)=X(I,K,4)+X(K,J,5)*X(I,J,2)+X(K,J,2)*X(I,J,5)             INCH-143
      BRE=X(I,K,1)*X(K,K,1)-X(I,K,4)*X(K,K,4)                           INCH-144
      BIM=X(I,K,1)*X(K,K,4)+X(I,K,4)*X(K,K,1)                           INCH-145
      DO 26 J=1,NC                                                      INCH-146
      X(I,J,2)=X(I,J,2)-BRE*X(K,J,2)+BIM*X(K,J,5)                       INCH-147
      X(I,J,5)=X(I,J,5)-BRE*X(K,J,5)-BIM*X(K,J,2)                       INCH-148
      X(I,J,3)=X(I,J,3)-BRE*X(K,J,3)+BIM*X(K,J,6)                       INCH-149
   26 X(I,J,6)=X(I,J,6)-BRE*X(K,J,6)-BIM*X(K,J,3)                       INCH-150
   27 CONTINUE                                                          INCH-151
   28 BRE=0.D0                                                          INCH-152
      BIM=0.D0                                                          INCH-153
      DO 29 J=1,NC                                                      INCH-154
      BRE=BRE+X(I,J,2)**2-X(I,J,5)**2                                   INCH-155
   29 BIM=BIM+2.D0*X(I,J,2)*X(I,J,5)                                    INCH-156
      BIM=BIM/BRE                                                       INCH-157
      X(I,I,1)=1.D0/(BRE*(1.D0+BIM**2))                                 INCH-158
   30 X(I,I,4)=-X(I,I,1)*BIM                                            INCH-159
   31 CONTINUE                                                          INCH-160
      IF (LO(74)) CALL HORA                                             INCH-161
C  MATRICES OF PSEUDO-WRONSKIANS FOR THE MATCHING CONDITION             INCH-162
      DO 33 I=1,NC                                                      INCH-163
      DO 32 J=1,NC                                                      INCH-164
      J1=NC+J                                                           INCH-165
      X(I,J1,1)=(X(I,J,1)*FAM(J,2)-FAM(J,1)*X(I,J,3))                   INCH-166
      X(I,J1,4)=(X(I,J,6)*FAM(J,1)-FAM(J,2)*X(I,J,4))                   INCH-167
      X(I,J,1)=(X(I,J,3)*FAM(J,3)-FAM(J,4)*X(I,J,1))                    INCH-168
      X(I,J,4)=(X(I,J,4)*FAM(J,4)-FAM(J,3)*X(I,J,6))                    INCH-169
      IF (FAM(J,9).LT.0.D0) GO TO 32                                    INCH-170
      X(I,J,1)=X(I,J,1)-X(I,J1,4)                                       INCH-171
      X(I,J,4)=X(I,J,4)+X(I,J1,1)                                       INCH-172
   32 CONTINUE                                                          INCH-173
   33 CONTINUE                                                          INCH-174
C  COMPLEX LINEAR SYSTEM OF EQUATIONS                                   INCH-175
      NCX=NCIN                                                          INCH-176
      IF (LO(44)) NCX=NC                                                INCH-177
      CALL LINS(X(1,1,4),KAB,X,KAB,NC,NCX,KR,IER)                       INCH-178
      IF (IER.NE.0) GO TO 39                                            INCH-179
      IF (LO(144)) RETURN                                               INCH-180
C BUILDING THE LINEAR SYSTEM FOR S-MATRIX WITH COULOMB CORRECTIONS      INCH-181
      DO 36 I=1,NC                                                      INCH-182
      DO 35 J=1,NC                                                      INCH-183
      J1=NC+J                                                           INCH-184
      X(I,J,1)=Y(J,I,1)                                                 INCH-185
      X(I,J,3)=X(I,J1,1)                                                INCH-186
      X(I,J,4)=Y(J,I,2)                                                 INCH-187
      X(I,J,6)=-Y(J,I,1)+X(I,J1,4)                                      INCH-188
      DO 34 K=1,NC                                                      INCH-189
      K1=K+NC                                                           INCH-190
      X(I,J,1)=X(I,J,1)-(Y(J,K,1)-Y(J,K,4))*X(I,K1,1)+(Y(J,K,3)+Y(J,K,2)INCH-191
     1)*X(I,K1,4)                                                       INCH-192
      X(I,J,3)=X(I,J,3)-Y(J,K,3)*X(I,K1,1)-Y(J,K,1)*X(I,K1,4)           INCH-193
      X(I,J,4)=X(I,J,4)-(Y(J,K,1)-Y(J,K,4))*X(I,K1,4)-(Y(J,K,2)+Y(J,K,3)INCH-194
     1)*X(I,K1,1)                                                       INCH-195
   34 X(I,J,6)=X(I,J,6)-Y(J,K,3)*X(I,K1,4)+Y(J,K,1)*X(I,K1,1)           INCH-196
   35 CONTINUE                                                          INCH-197
   36 X(I,I,4)=X(I,I,4)+1.D0                                            INCH-198
C TRANSFER OF THE SECOND MEMBERS IN X(1,1,5) AND X(1,1,2)               INCH-199
      DO 38 I=1,NC                                                      INCH-200
      DO 37 J=1,NC                                                      INCH-201
      J1=NC+J                                                           INCH-202
      Y(I,J,2)=X(I,J1,1)                                                INCH-203
      X(I,J1,1)=X(I,J,3)                                                INCH-204
      Y(I,J,1)=X(I,J1,4)                                                INCH-205
   37 X(I,J1,4)=X(I,J,6)                                                INCH-206
   38 CONTINUE                                                          INCH-207
      CALL LINS(X(1,1,4),KAB,X,KAB,NC,NCIN,KR,IER)                      INCH-208
      IF (IER.NE.0) GO TO 39                                            INCH-209
      IF (LO(57)) WRITE (MW,1000) ((I,J,Y(I,J,1),Y(I,J,2),X(I,NC+J,4),X(INCH-210
     1I,NC+J,1),J=1,NCIN),I=1,NC)                                       INCH-211
      RETURN                                                            INCH-212
   39 WRITE (MW,1001) IER                                               INCH-213
      STOP                                                              INCH-214
 1000 FORMAT (/25X,'UNCORRECTED VALUES',30X,'CORRECTED VALUES'/(2X,2I3,4INCH-215
     1D25.15))                                                          INCH-216
 1001 FORMAT (' RETURN FROM LINS WITH IER =',I2,' IN INCH   ... STOP ...INCH-217
     1')                                                                INCH-218
      END                                                               INCH-219
C 01/01/04                                                      ECIS03  SCAM-000
      SUBROUTINE SCAM(F,FCN,TX,GCN,JMAX,KMAX,MC,MD,FAR,FAI,WV,NCOLL,NCOLSCAM-001
     1S,KAB,KBA,IPI,IPIM,GAM,FISS,TL,NCJ,XD,P,Q,V,NCT,IQ,AA,KBC,IDT,XZ,LSCAM-002
     2O)                                                                SCAM-003
C STORAGE OF SCATTERING COEFFICIENTS                                    SCAM-004
C  INPUT VARIABLES:JMAX: MAXIMUM NUMBER OF CHANNEL SPINS, DIM. FOR F    SCAM-005
C                  KMAX: MAX. NUM. OF L OF COMP. NUC., DIM. FOR FCN, GCNSCAM-006
C                  MC:   NUCLEAR STATE NUMBERS, ANGULAR MOMENTA, ETC... SCAM-007
C                         SEE QUAN                                      SCAM-008
C                  MD:   EXTENDED MC FOR IDENT. PART. WITH SPIN         SCAM-009
C                  FAR/FAI: REAL/IMAGINARY PART OF SCATTERING COEFF.    SCAM-010
C                  WV:   WAVE NUMBER AND COULOMB PARAMETER.  SEE COLF   SCAM-011
C                  NCOLL:NUMBER OF COUPLED LEVELS                       SCAM-012
C                  NCOLS:NUMBER OF LEVELS WITH ANGULAR DISTRIBUTION     SCAM-013
C                  KAB:  DIMENSION FOR MC                               SCAM-014
C                  KBA:  NUMBER OF INDEPENDENT AMPLITUDES               SCAM-015
C                  IPI,IPIM: PARITY, MULTIPL., ADDRESSES IN F (SEE CALX)SCAM-016
C                  GAM:  GAMMA TRANSMISSION COEFFICIENTS READ           SCAM-017
C                  FISS: FISSION COEFFICIENTS FOR COMPOUND NUCLEUS      SCAM-018
C                  TL:   TRANSMISSION COEFFICIENTS OF UNCOUPLED LEVELS  SCAM-019
C                  NCJ:  STARTING AND FINAL ADDRESSES FOR CONTINUA      SCAM-020
C                  XD:   ENERGY AND SPIN DEPENDENCE OF LEVEL DENSITIES  SCAM-021
C                  NCT:  NUMBER OF EQUA. AND SOLUTIONS FOR EACH PARITY  SCAM-022
C                  IQ:   DIMENSION FOR V                                SCAM-023
C                  AA:   COEFFICIENTS OF SYMMETRISATION                 SCAM-024
C                  KBC:  DIMENSION FOR AA                               SCAM-025
C                  IDT:  SIZE AVAILABLE FOR THE Q IN DOUBLE PRECISION   SCAM-026
C                  XZ:   CONVERSION FACTOR TO MILLIBARNS                SCAM-027
C                  LO:   LOGICAL CONTROLS                               SCAM-028
C              LO(18) =.TRUE.  IDENTICAL PARTICLE AND TARGET            SCAM-029
C              LO(55) =.TRUE.  OUTPUT OF C-MATRIX AND COMPOUND NUCLEUS  SCAM-030
C              LO(63) =.TRUE.  PENETRABILITIES WRITTEN ON FILE 63       SCAM-031
C              LO(82) =.TRUE.  OLD SIMPLIFIED COMPOUND NUCLEUS          SCAM-032
C              LO(83) =.TRUE.  NO ENGELBRETCH-WEIDENMULLER TRANSFORM    SCAM-033
C              LO(85) =.TRUE.  FISSION TRANSMISSION COEFFICIENTS        SCAM-034
C              LO(86) =.TRUE.  GAMMA EMISSION IN COMPOUND NUCLEUS       SCAM-035
C              LO(87) =.TRUE.  NO WIDTH FLUCTUATIONS                    SCAM-036
C              LO(224)=.TRUE.  COMPUTE TRANSMISSION COEFFICIENTS        SCAM-037
C              LO(225)=.TRUE.  USUAL COUPLED EQUATIONS                  SCAM-038
C              LO(231)=.TRUE.  IDENTICAL NON-0 SPIN PARTICLE AND TARGET SCAM-039
C              LO(232)=.TRUE.  DO NOT COMPUTE COMPOUND CONTRIBUTIONS    SCAM-040
C              LO(233)=.TRUE.  STORE FISSION AND GAMMA TRANSM. COEFF.   SCAM-041
C BY COMMON /NCOMP/NCONT:NUMBER OF CONTINUA FOR COMPOUND NUCLEUS        SCAM-042
C                  BZ1,BZ2,BZ3,BZ4,BZ5: PARAMETER FOR COMPOUND NUCLEUS  SCAM-043
C                   (SEE DESCRIPTION OF INPUT). FOR THE OTHERS SEE CONU SCAM-044
C BY COMMON /NOEQU/NIC:  NUMBER OF COUPLED CHANNELS                     SCAM-045
C                  NCI:  NUMBER OF SOLUTIONS                            SCAM-046
C                  NC:   NUMBER OF EQUATIONS WITHOUT ANTISYMMETRISATION SCAM-047
C                  NCIN: NUMBER OF SOLUTIONS WITHOUT ANTISYMMETRISATION SCAM-048
C                  JPI:  CHANNEL PARITY (0/1)                           SCAM-049
C                  IPJ:  NUMBER OF THE CHANNEL SPIN                     SCAM-050
C                  NAJ:  TWICE CHANNEL SPIN                             SCAM-051
C OUTPUT VARIABLES:F:    SCATTERING COEFFICIENTS                        SCAM-052
C                  FCN:  COMPOUND NUCLEUS CONTRIBUTIONS                 SCAM-053
C                  TX:   TOTAL REACTION CROSS SECTION IN MB FOLLOWED BY SCAM-054
C                        THE TOTAL DIRECT CROSS SECTIONS OF COUPLED     SCAM-055
C                        LEVELS, THE TOTAL COMPOUND CROSS SECTIONS OF   SCAM-056
C                        LEVELS, THE FISSION AND GAMMA CROSS SECTIONS   SCAM-057
C                  GCN:  COMPOUND NUCLEUS COEFFICIENTS OF LEGENDRE POLY.SCAM-058
C IN COMMON /NOEQU/R1:   MAXIMUM OF SCATTERING AND COMPOUND COEFFICIENT SCAM-059
C WORKING SPACE:   P:    FOR DIAGONALISATION OF THE S MATRIX            SCAM-060
C                  Q:    FOR ANGULAR DISTRIBUTION OF COMPOUND NUCLEUS   SCAM-061
C                  V(1,*):   LEVEL AND QUANTUM NUMBERS                  SCAM-062
C                  V(2,*):   WEIGH FOR CONTINUA                         SCAM-063
C                  V(3,*):   TRANSMISSION COEFFICIENTS                  SCAM-064
C                  V(4,*):   WIDTH FLUCTUATION PARAMETER                SCAM-065
C                  V(5,*):   CONTRIBUTION TO COMPOUND NUCLEUS           SCAM-066
C***********************************************************************SCAM-067
      IMPLICIT REAL*8 (A-H,O-Z)                                         SCAM-068
      LOGICAL LO(250),LG(2)                                             SCAM-069
      DIMENSION F(2,JMAX,1),FCN(KMAX,1),MC(KAB,12),FAR(KAB,1),FAI(KAB,1)SCAM-070
     1,WV(18,1),IPI(11,1),IPIM(11,1),GAM(1),FISS(2,1),TL(1),NCJ(2,1),XD(SCAM-071
     23,1),P(NC,NC,4),Q(1),V(IQ,1),NCT(6),AA(KBC,1),GCN(KMAX,1),TX(1),X(SCAM-072
     320),W(20),TP(20),SGF(2),TG(2),FNU(2),MD(KAB,12),MCX(4,2),VCX(4,2) SCAM-073
      CHARACTER*1 IP(2)                                                 SCAM-074
      CHARACTER*8 AL(2)                                                 SCAM-075
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQSCAM-076
     1,ACN(8),BZ1,BZ2,BZ3,BZ4,BZ5,TG0,BN,FNUG,EGD,GGD,TG1,SGSQ          SCAM-077
      COMMON /NOEQU/ NCXN,NIC,NCI,NC,NCIN,NIN,JPI,IPJ,R1(2),NAJ         SCAM-078
      COMMON /INOUT/ MR,MW,MS                                           SCAM-079
      DATA IP,AL,PI,NSY /'+','-',' FISSION','   GAMMA',3.1415926535D0,0/SCAM-080
      DATA X /7.0539889691988753D-02,3.7212681800161144D-01,9.1658210248SCAM-081
     1327356D-01,1.7073065310283439D+00,2.7491992553094321D+00,4.0489253SCAM-082
     2138508869D+00,5.6151749708616165D+00,7.4590174536710633D+00,9.5943SCAM-083
     3928695810968D+00,1.2038802546964316D+01,1.4814293442630740D+01,1.7SCAM-084
     4948895520519376D+01,2.1478788240285011D+01,2.5451702793186906D+01,SCAM-085
     52.9932554631700612D+01,3.5013434240479000D+01,4.0833057056728571D+SCAM-086
     601,4.7619994047346502D+01,5.5810795750063899D+01,6.652441652561575SCAM-087
     74D+01/                                                            SCAM-088
      DATA W /1.8108006241898926D-01,4.2255676787856397D-01,6.6690954670SCAM-089
     1184815D-01,9.1535237278307367D-01,1.1695397071955460D+00,1.4313549SCAM-090
     2859282060D+00,1.7029811379850227D+00,1.9870158907927472D+00,2.2866SCAM-091
     3357812534308D+00,2.6058347275538333D+00,2.9497837342139509D+00,3.3SCAM-092
     4253957820093196D+00,3.7422554705898109D+00,4.2142367102518804D+00,SCAM-093
     54.7625184614902093D+00,5.4217260442455743D+00,6.2540123569324213D+SCAM-094
     600,7.3873143890544346D+00,9.1513287309874796D+00,1.289338864593999SCAM-095
     77D+01/                                                            SCAM-096
      IK(I,L,J)=((J-NAJ+IPI(3,I)-1)/2*IPI(2,I)+(L-J+IPI(2,I)-1)/2)/2    SCAM-097
      NZ=MOD(IPJ+JPI+1,2)                                               SCAM-098
      NS=0                                                              SCAM-099
      IF (NZ.NE.0) NS=NCT(1)*NCT(3)                                     SCAM-100
      R1(1)=0.D0                                                        SCAM-101
      R1(2)=0.D0                                                        SCAM-102
      JC=0                                                              SCAM-103
      AJ=0.5D0*DFLOAT(NAJ)                                              SCAM-104
      BZ=1.D0                                                           SCAM-105
      IF (LO(18)) BZ=2.D0                                               SCAM-106
      RZ=PI*BZ*XZ*DFLOAT(NAJ+1)                                         SCAM-107
      IF (LO(55)) WRITE (MW,1000) AJ,IP(JPI+1),NC,NCIN                  SCAM-108
C COMPUTATION OF TRANSMISSION COEFFICIENTS                              SCAM-109
      NXX=NCIN                                                          SCAM-110
      IF (LO(224)) NXX=NC                                               SCAM-111
      DO 5 IC=1,NXX                                                     SCAM-112
      IV=MC(IC,1)                                                       SCAM-113
      IF (WV(3,IV).LT.0.D0) GO TO 5                                     SCAM-114
      IF (IC.LE.NCIN) TX(1)=TX(1)+4.D0*FAI(IC,IC)*RZ*BZ                 SCAM-115
      IF (.NOT.LO(224)) GO TO 2                                         SCAM-116
      JC=JC+1                                                           SCAM-117
      V(1,JC)=DFLOAT(1024*(1024*IV+MC(IC,2))+MC(IC,3))                  SCAM-118
      V(2,JC)=1.D0                                                      SCAM-119
      V(3,JC)=4.D0*FAI(IC,IC)                                           SCAM-120
      DO 1 N=4,IQ                                                       SCAM-121
    1 V(N,JC)=0.D0                                                      SCAM-122
    2 DO 4 ICP=1,NC                                                     SCAM-123
      IVQ=MC(ICP,1)                                                     SCAM-124
      A1=WV(6,IVQ)/WV(6,IV)                                             SCAM-125
      IF (LO(225)) A1=1.D0/A1                                           SCAM-126
      FAR(ICP,IC)=FAR(ICP,IC)*A1                                        SCAM-127
      FAI(ICP,IC)=FAI(ICP,IC)*A1                                        SCAM-128
      IF (WV(3,IVQ).LT.0.D0) GO TO 3                                    SCAM-129
      IF (LO(224)) V(3,JC)=V(3,JC)-4.D0*(FAR(ICP,IC)**2+FAI(ICP,IC)**2) SCAM-130
      IF (IC.GT.NCIN) GO TO 4                                           SCAM-131
C TEST OF CONVERGENCE                                                   SCAM-132
      R1(1)=DMAX1(R1(1),DABS(FAR(ICP,IC))+DABS(FAI(ICP,IC)))            SCAM-133
      A1=FAR(ICP,IC)*FAR(ICP,IC)+FAI(ICP,IC)*FAI(ICP,IC)                SCAM-134
      IF (A1.GT.1.D0) WRITE (MW,1001) AJ,IP(JPI+1),NC,NCIN,IC,ICP,FAR(ICSCAM-135
     1P,IC),FAI(ICP,IC)                                                 SCAM-136
      TX(IVQ+1)=TX(IVQ+1)+4.D0*A1*RZ*BZ                                 SCAM-137
      FJ=0.5D0*DFLOAT(MC(ICP,3))                                        SCAM-138
      IF (LO(155)) GO TO 4                                              SCAM-139
C PRINT OUT OF THE AMPLITUDES                                           SCAM-140
      A1=DSQRT(A1)                                                      SCAM-141
      B1=0.D0                                                           SCAM-142
      IF (A1.NE.0.D0) B1=DATAN2(FAI(ICP,IC),FAR(ICP,IC))                SCAM-143
      WRITE (MW,1002) ICP,IC,IVQ,MC(ICP,2),FJ,FAR(ICP,IC),FAI(ICP,IC),A1SCAM-144
     1,B1                                                               SCAM-145
      GO TO 4                                                           SCAM-146
    3 IF ((IC.LE.NCIN).AND.LO(55)) WRITE (MW,1003) ICP,IC,IVQ,MC(ICP,2),SCAM-147
     1FJ,FAR(ICP,IC),FAI(ICP,IC)                                        SCAM-148
    4 CONTINUE                                                          SCAM-149
      IF (.NOT.LO(224)) GO TO 5                                         SCAM-150
      IF (V(3,JC).LT.0.D0) V(3,JC)=0.D0                                 SCAM-151
      IF (IC.LE.NCIN) R1(2)=DMAX1(R1(2),V(3,JC))                        SCAM-152
    5 CONTINUE                                                          SCAM-153
      IF (LO(163).AND.LO(155)) GO TO 8                                  SCAM-154
C OUTPUT OF TRANSMISSION COEFFICIENTS FOR COUPLED CHANNELS              SCAM-155
      IF (LO(55)) WRITE (MW,1004) AJ,IP(JPI+1)                          SCAM-156
      IC=1+(JC-1)/4                                                     SCAM-157
      IF (LO(63)) WRITE (99,1005) AJ,IP(JPI+1),JC                       SCAM-158
      DO 7 I=1,IC                                                       SCAM-159
      J1=4*(I-1)                                                        SCAM-160
      J2=MIN0(JC-J1,4)                                                  SCAM-161
      DO 6 J=1,J2                                                       SCAM-162
      N=IDINT(V(1,J+J1)+.01D0)                                          SCAM-163
      VCX(J,1)=0.5D0*DFLOAT(MOD(N,1024))                                SCAM-164
      VCX(J,2)=V(3,J+J1)                                                SCAM-165
      MCX(J,2)=MOD(N/1024,1024)                                         SCAM-166
    6 MCX(J,1)=(N/1024)/1024                                            SCAM-167
      IF (LO(63)) WRITE (99,1006) (MCX(J,1),MCX(J,2),VCX(J,1),VCX(J,2),JSCAM-168
     1=1,J2)                                                            SCAM-169
      IF (LO(55)) WRITE (MW,1007) (MCX(J,1),MCX(J,2),VCX(J,1),VCX(J,2),JSCAM-170
     1=1,J2)                                                            SCAM-171
    7 CONTINUE                                                          SCAM-172
    8 IF (LO(232)) GO TO 62                                             SCAM-173
      NSS=NS                                                            SCAM-174
      IF (NZ.NE.0) NSS=NCT(5)*NCT(3)                                    SCAM-175
C FISSION COEFFICIENT                                                   SCAM-176
      TG(1)=0.D0                                                        SCAM-177
      FNU(1)=.5D0                                                       SCAM-178
      IF (LO(186)) GO TO 9                                              SCAM-179
      KN=2*IPJ+JPI-1                                                    SCAM-180
      IF (KN.GE.NFISS) GO TO 9                                          SCAM-181
      TG(1)=FISS(1,KN)                                                  SCAM-182
      FNU(1)=.5D0*FISS(2,KN)                                            SCAM-183
    9 LG(1)=LO(185).OR.TG(1).EQ.0.                                      SCAM-184
C GAMMA COEFFICIENT                                                     SCAM-185
      TG(2)=0.D0                                                        SCAM-186
      FNU(2)=.5D0*FNUG                                                  SCAM-187
      IF (LO(186)) GO TO 12                                             SCAM-188
      IF (NRD.NE.0) GO TO 11                                            SCAM-189
      A1=0.D0                                                           SCAM-190
      N1=NAJ-2                                                          SCAM-191
      N1=IABS(N1)                                                       SCAM-192
      N2=NAJ+2                                                          SCAM-193
      DO 10 J=N1,N2,2                                                   SCAM-194
      A2=-DFLOAT((J+1)*(J+1))/(4.D0*SGSQ)                               SCAM-195
   10 A1=A1+DEXP(A2)*DFLOAT(J+1)/SGSQ                                   SCAM-196
      TG(2)=6.283185307D0*TG1*A1                                        SCAM-197
      GO TO 12                                                          SCAM-198
   11 IF (IPJ.LE.NRD) TG(2)=GAM(IPJ)                                    SCAM-199
   12 LG(2)=LO(186).OR.TG(2).EQ.0.                                      SCAM-200
      NC1=JC                                                            SCAM-201
      NJC=JC                                                            SCAM-202
      IF (NCOLL.EQ.NCOLX) GO TO 24                                      SCAM-203
C TRANSMISSION COEFFICIENTS FOR UNCOUPLED STATES                        SCAM-204
      NSP1=NCOLX-NCOLL-NCONT                                            SCAM-205
      IF (NSP1.LT.1) GO TO 17                                           SCAM-206
      DO 16 I=1,NSP1                                                    SCAM-207
      II=I+NCOLL                                                        SCAM-208
      IF (WV(3,II).LT.0.D0) GO TO 16                                    SCAM-209
      NM=IPI(3,II)                                                      SCAM-210
      MN=IPI(2,II)                                                      SCAM-211
      DO 15 J=1,NM                                                      SCAM-212
      NN=NAJ-NM-1+2*J                                                   SCAM-213
      IF (NN.LT.IABS(NM-1-NAJ)) GO TO 15                                SCAM-214
      DO 14 K=1,MN                                                      SCAM-215
      MM=NN+MN+1-2*K                                                    SCAM-216
      IF (MM.LT.IABS(MN-1-NN).OR.MM.GE.2*IPI(10,II)+2) GO TO 14         SCAM-217
      L=MM/2                                                            SCAM-218
      IF (MOD(L+JPI+IPI(1,II),2).NE.0) GO TO 14                         SCAM-219
      M=MN*L+K+IPI(8,II)                                                SCAM-220
      JC=JC+1                                                           SCAM-221
      V(1,JC)=DFLOAT(1024*(1024*II+L)+NN)                               SCAM-222
      V(2,JC)=1.D0                                                      SCAM-223
      V(3,JC)=TL(M)                                                     SCAM-224
      DO 13 N=4,IQ                                                      SCAM-225
   13 V(N,JC)=0.D0                                                      SCAM-226
   14 CONTINUE                                                          SCAM-227
   15 CONTINUE                                                          SCAM-228
      IF (II.LE.NCOLS) NC1=JC                                           SCAM-229
   16 CONTINUE                                                          SCAM-230
   17 IF (NCONT.EQ.0) GO TO 24                                          SCAM-231
C TRANSMISSION COEFFICIENTS FOR CONTINUA                                SCAM-232
      DO 23 I=1,NCONT                                                   SCAM-233
      IJ=NCJ(1,I)                                                       SCAM-234
      JI=NCJ(2,I)                                                       SCAM-235
      IF (IJ.GT.JI) GO TO 23                                            SCAM-236
      MN=IPIM(2,IJ)                                                     SCAM-237
      IT=MOD(IPIM(3,IJ)+1,2)                                            SCAM-238
      DO 22 II=IJ,JI                                                    SCAM-239
      L=IPIM(10,II)+1                                                   SCAM-240
      IF (L.EQ.0) GO TO 22                                              SCAM-241
      M=IPIM(8,II)                                                      SCAM-242
      II1=II+NCOLL+NSP1                                                 SCAM-243
      DO 21 LJ=1,L                                                      SCAM-244
      DO 20 JL=1,MN                                                     SCAM-245
      M=M+1                                                             SCAM-246
      IF (TL(M).EQ.0.D0) GO TO 20                                       SCAM-247
      JJ=2*(LJ+JL)-MN-3                                                 SCAM-248
      IF (JJ.LT.0) GO TO 20                                             SCAM-249
      IKM=IABS(JJ-NAJ)/2+1                                              SCAM-250
      IKP=MIN0((JJ+NAJ)/2+1,NCOJ)                                       SCAM-251
      IF (IKM.GT.IKP) GO TO 20                                          SCAM-252
      AI=0.D0                                                           SCAM-253
      DO 18 KK=IKM,IKP                                                  SCAM-254
      AR=.5D0*DFLOAT(IT+2*KK-1)                                         SCAM-255
   18 AI=AI+AR*DEXP(-AR*AR/XD(3,II))/XD(3,II)                           SCAM-256
      JC=JC+1                                                           SCAM-257
      V(1,JC)=DFLOAT(1024*(1024*II1+(LJ-1))+JJ)                         SCAM-258
      V(2,JC)=AI*XD(1,II)                                               SCAM-259
      V(3,JC)=TL(M)                                                     SCAM-260
      DO 19 N=4,IQ                                                      SCAM-261
   19 V(N,JC)=0.D0                                                      SCAM-262
   20 CONTINUE                                                          SCAM-263
   21 CONTINUE                                                          SCAM-264
   22 CONTINUE                                                          SCAM-265
   23 CONTINUE                                                          SCAM-266
C COMPOUND NUCLEUS                                                      SCAM-267
   24 SGF(1)=0.D0                                                       SCAM-268
      SGF(2)=0.D0                                                       SCAM-269
      IF (LO(82)) GO TO 58                                              SCAM-270
      IF (LO(83)) GO TO 28                                              SCAM-271
C COMPUTATION OF SATCHLER P-MATRIX ("PR","PI")                          SCAM-272
      I=0                                                               SCAM-273
      DO 27 II=1,NC                                                     SCAM-274
      IF (WV(3,MC(II,1)).LT.0.D0) GO TO 27                              SCAM-275
      I=I+1                                                             SCAM-276
      J=0                                                               SCAM-277
      DO 26 JJ=1,NC                                                     SCAM-278
      IF (WV(3,MC(JJ,1)).LT.0.D0) GO TO 26                              SCAM-279
      J=J+1                                                             SCAM-280
      P(I,J,1)=2.D0*(FAI(I,J)+FAI(J,I))                                 SCAM-281
      P(I,J,2)=0.D0                                                     SCAM-282
      P(I,J,3)=0.D0                                                     SCAM-283
      P(I,J,4)=0.D0                                                     SCAM-284
      K=0                                                               SCAM-285
      DO 25 KK=1,NC                                                     SCAM-286
      IF (WV(3,MC(KK,1)).LT.0.D0) GO TO 25                              SCAM-287
      K=K+1                                                             SCAM-288
      P(I,J,1)=P(I,J,1)-4.D0*(FAR(I,K)*FAR(J,K)+FAI(I,K)*FAI(J,K))      SCAM-289
   25 P(I,J,2)=P(I,J,2)+4.D0*(FAR(I,K)*FAI(J,K)-FAI(I,K)*FAR(J,K))      SCAM-290
   26 CONTINUE                                                          SCAM-291
   27 P(I,I,3)=1.D0                                                     SCAM-292
      CALL DIAG(NC,NJC,P,P(1,1,2),P(1,1,3),P(1,1,4),1.D-12,A1,IERR)     SCAM-293
      IF (IERR.EQ.0) GO TO 28                                           SCAM-294
      WRITE (MW,1008)                                                   SCAM-295
      LO(83)=.TRUE.                                                     SCAM-296
      LO(183)=.FALSE.                                                   SCAM-297
   28 BIR=1.D-12+TG(1)+TG(2)                                            SCAM-298
      DO 29 IC=1,JC                                                     SCAM-299
      IF (LO(183).AND.IC.LE.NJC) V(3,IC)=DMAX1(0.D0,P(IC,IC,1))         SCAM-300
   29 BIR=BIR+V(3,IC)*V(2,IC)                                           SCAM-301
C FLUCTUATION PARAMETER NU=2*FNU, (P.A.M.,N.P.A344(1980)185)            SCAM-302
C COMMON FACTOR "TP" OF WIDTH FLUCT. INTEGRAL (P.A.M.,PRC 11(1975)426)  SCAM-303
      IF (LO(87).OR.(BIR.LT.0.0001D0)) GO TO 39                         SCAM-304
      DO 30 M=1,20                                                      SCAM-305
   30 TP(M)=1.D0                                                        SCAM-306
      EFB=DEXP(-BZ5*BIR)                                                SCAM-307
      DO 36 IC=1,JC                                                     SCAM-308
      IF (BZ2.NE.0.D0) GO TO 31                                         SCAM-309
      V(4,IC)=(1.D0+BZ4+(V(3,IC)**BZ3-BZ4)*EFB)/2.D0                    SCAM-310
      GO TO 32                                                          SCAM-311
   31 V(4,IC)=0.5D0*BZ2                                                 SCAM-312
   32 A1=V(3,IC)/V(4,IC)/BIR                                            SCAM-313
      IF (A1.EQ.0.D0) GO TO 36                                          SCAM-314
      IF (A1.GT.1.D-9) GO TO 34                                         SCAM-315
      DO 33 M=1,20                                                      SCAM-316
   33 TP(M)=TP(M)*DEXP(X(M)*V(3,IC)*V(2,IC)/BIR*(1.D0-.5D0*X(M)*A1))    SCAM-317
      GO TO 36                                                          SCAM-318
   34 DO 35 M=1,20                                                      SCAM-319
   35 TP(M)=TP(M)*((BIR+X(M)*V(3,IC)/V(4,IC))/BIR)**(V(4,IC)*V(2,IC))   SCAM-320
   36 CONTINUE                                                          SCAM-321
      DO 38 I=1,2                                                       SCAM-322
      IF (LG(I)) GO TO 38                                               SCAM-323
      DO 37 M=1,20                                                      SCAM-324
   37 TP(M)=TP(M)*(1.D0+X(M)*TG(I)/(BIR*FNU(I)))**FNU(I)                SCAM-325
   38 CONTINUE                                                          SCAM-326
C STORAGE OF COMPOUND TERMS                                             SCAM-327
   39 TQ=0.D0                                                           SCAM-328
      IF (LO(155)) GO TO 40                                             SCAM-329
      WRITE (MW,1009) AJ,IP(JPI+1)                                      SCAM-330
      IF (LO(183)) WRITE (MW,1010)                                      SCAM-331
   40 NCX=NJC                                                           SCAM-332
      IF (LO(83)) NCX=NCIN                                              SCAM-333
      DO 56 IC=1,NCX                                                    SCAM-334
      G=1.D0                                                            SCAM-335
      BRI=BIR                                                           SCAM-336
      IF (LO(87).AND.(IC.LE.NCIN)) BRI=BRI+V(3,IC)*BZ3                  SCAM-337
      AR=1.D0                                                           SCAM-338
      IF (LO(83)) GO TO 42                                              SCAM-339
      AR=0.D0                                                           SCAM-340
      DO 41 IA=1,NCIN                                                   SCAM-341
   41 AR=AR+(P(IA,IC,3)**2+P(IA,IC,4)**2)                               SCAM-342
   42 DO 52 ICP=1,JC                                                    SCAM-343
      IV=IDINT(V(1,ICP)/1048576.D0)                                     SCAM-344
      IF (LO(87).OR.(BIR.LT.0.0001D0)) GO TO 44                         SCAM-345
      G=0.D0                                                            SCAM-346
      DO 43 M=1,20                                                      SCAM-347
   43 G=G+W(M)/(TP(M)*(1.D0+X(M)*V(3,IC)/(V(4,IC)*BRI))*(1.D0+X(M)*V(3,ISCAM-348
     1CP)/(V(4,ICP)*BRI)))                                              SCAM-349
      IF (ICP.EQ.IC) G=G+G/V(4,IC)                                      SCAM-350
   44 TQ=V(3,IC)*V(3,ICP)*G/BRI                                         SCAM-351
      IF (LO(87).AND.(ICP.EQ.IC)) TQ=TQ+TQ*BZ3                          SCAM-352
      IF ((ICP.GT.NC1).OR.LO(83)) GO TO 50                              SCAM-353
C INVERSE E-W TRANSFORMATION (P.A.M.,PRC 12(1975)744)                   SCAM-354
      IF (ICP.GT.NJC) GO TO 48                                          SCAM-355
      DO 47 IA=1,NCIN                                                   SCAM-356
      DO 46 IB=1,NJC                                                    SCAM-357
      A1=P(IA,IC,3)*P(IB,ICP,3)-P(IA,IC,4)*P(IB,ICP,4)                  SCAM-358
      B1=P(IA,IC,3)*P(IB,ICP,4)+P(IA,IC,4)*P(IB,ICP,3)                  SCAM-359
      A2=A1                                                             SCAM-360
      B2=B1                                                             SCAM-361
      IF (ICP.EQ.IC) GO TO 45                                           SCAM-362
      A2=A1+P(IA,ICP,3)*P(IB,IC,3)-P(IA,ICP,4)*P(IB,IC,4)               SCAM-363
      B2=B1+P(IA,ICP,3)*P(IB,IC,4)+P(IA,ICP,4)*P(IB,IC,3)               SCAM-364
   45 V(IA+4,IB)=V(IA+4,IB)+(A1*A2+B1*B2)*TQ                            SCAM-365
   46 CONTINUE                                                          SCAM-366
   47 CONTINUE                                                          SCAM-367
      GO TO 51                                                          SCAM-368
   48 DO 49 IA=1,NCIN                                                   SCAM-369
   49 V(IA+4,ICP)=V(IA+4,ICP)+(P(IA,IC,3)**2+P(IA,IC,4)**2)*TQ          SCAM-370
      GO TO 51                                                          SCAM-371
   50 V(5,ICP)=V(5,ICP)+AR*TQ                                           SCAM-372
   51 IF ((IC.GT.NCIN).OR.LO(155)) GO TO 52                             SCAM-373
      GNU=2.D0*V(4,ICP)                                                 SCAM-374
      LL=IDINT(V(1,ICP))-1048576*IV                                     SCAM-375
      L=LL/1000                                                         SCAM-376
      FJ=0.5D0*DFLOAT(LL-1024*L)                                        SCAM-377
      WRITE (MW,1011) IC,ICP,IV,L,FJ,V(3,ICP),TQ,GNU,G                  SCAM-378
   52 CONTINUE                                                          SCAM-379
      IF (LO(83).AND.IC.GT.NCIN) GO TO 56                               SCAM-380
      DO 55 I=1,2                                                       SCAM-381
      IF (LG(I)) GO TO 55                                               SCAM-382
      IF (LO(87)) GO TO 54                                              SCAM-383
      G=0.D0                                                            SCAM-384
      DO 53 M=1,20                                                      SCAM-385
   53 G=G+W(M)/(TP(M)*(1.D0+X(M)*V(3,IC)/(V(4,IC)*BRI))*(1.D0+X(M)*TG(I)SCAM-386
     1/(BRI*FNU(I))))                                                   SCAM-387
   54 A1=V(3,IC)*TG(I)*G/BRI                                            SCAM-388
      SGF(I)=SGF(I)+A1*AR                                               SCAM-389
      FN=2.D0*FNU(I)                                                    SCAM-390
      IF (LO(55).AND.(IC.LE.NCIN)) WRITE (MW,1012) AL(I),TG(I),SGF(I),FNSCAM-391
     1,G                                                                SCAM-392
   55 CONTINUE                                                          SCAM-393
   56 CONTINUE                                                          SCAM-394
      IF (LO(55)) WRITE (MW,1013) BIR                                   SCAM-395
      DO 57 I=1,2                                                       SCAM-396
      IF (LG(I)) GO TO 57                                               SCAM-397
      IF (LO(233)) FCN(IPJ,NDQ+I)=FCN(IPJ,NDQ+I)+.25D0*SGF(I)           SCAM-398
      TX(NDP+I)=TX(NDP+I)+RZ*SGF(I)                                     SCAM-399
   57 CONTINUE                                                          SCAM-400
      GO TO 62                                                          SCAM-401
C STORAGE FOR SIMPLIFIED COMPOUND NUCLEUS                               SCAM-402
   58 BIR=BZ3*BZ3*(2.D0*AJ+1.D0)*DEXP(-AJ*(AJ+1.D0)/(2.D0*BZ2*BZ2))     SCAM-403
      DO 59 IC=1,NJC                                                    SCAM-404
   59 BIR=BIR+4.D0*V(3,IC)                                              SCAM-405
      IF (LO(55)) WRITE (MW,1014) BIR                                   SCAM-406
      DO 61 IC=1,NCIN                                                   SCAM-407
      NT=NS+IK(1,2*MC(IC,2),MC(IC,3))*NCT(NZ+1)                         SCAM-408
      DO 60 ICP=1,NJC                                                   SCAM-409
      TQ=V(3,IC)*V(3,ICP)/BIR                                           SCAM-410
      IF (IV.EQ.1) TQ=TQ*BZ1*BZ1                                        SCAM-411
   60 V(IC+4,ICP)=V(IC+4,ICP)+4.D0*TQ                                   SCAM-412
   61 CONTINUE                                                          SCAM-413
   62 IF (LO(55).AND.LO(231)) WRITE (MW,1000) AJ,IP(JPI+1),NC,NCIN      SCAM-414
C STORAGE OF THE AMPLITUDES                                             SCAM-415
      NI=NCI-NCIN                                                       SCAM-416
      DO 70 I1=1,NCI                                                    SCAM-417
      NT=NS+IK(1,2*MD(I1,2),MD(I1,3))*NCT(NZ+1)                         SCAM-418
      IF (LO(231)) GO TO 63                                             SCAM-419
      J1=I1                                                             SCAM-420
      K1=J1                                                             SCAM-421
      GO TO 64                                                          SCAM-422
   63 J1=1                                                              SCAM-423
      K1=NCIN                                                           SCAM-424
   64 IVS=0                                                             SCAM-425
      DO 69 I2=1,NIC                                                    SCAM-426
      IV=MD(I2,1)                                                       SCAM-427
      IF ((IV.NE.IVS).AND.(IV.NE.1)) NT=NT+(IPI(2,IVS)*IPI(3,IVS)+NSY)/2SCAM-428
      NSY=MOD(IPI(1,IV)+JPI+IPJ+(IPI(2,IV)+IPI(3,IV))/2+1,2)            SCAM-429
      IVS=IV                                                            SCAM-430
      ID=NT+IK(IV,2*MD(I2,2),MD(I2,3))+1                                SCAM-431
      IF (LO(231).AND.(I2.LE.NCI)) GO TO 65                             SCAM-432
      J2=I2-NI                                                          SCAM-433
      K2=J2                                                             SCAM-434
      GO TO 66                                                          SCAM-435
   65 J2=1                                                              SCAM-436
      K2=NCIN                                                           SCAM-437
   66 AR=0.D0                                                           SCAM-438
      AI=0.D0                                                           SCAM-439
      DO 68 L1=J1,K1                                                    SCAM-440
      A1=BZ                                                             SCAM-441
      IF (LO(231)) A1=A1*AA(I1,L1)                                      SCAM-442
      IF (A1.EQ.0.D0) GO TO 68                                          SCAM-443
      DO 67 L2=J2,K2                                                    SCAM-444
      A2=1.D0                                                           SCAM-445
      IF (LO(231).AND.(L2.LE.NCIN)) A2=AA(I2,L2)                        SCAM-446
      IF (A2.EQ.0.D0) GO TO 67                                          SCAM-447
      AR=AR+FAR(L2,L1)*A1*A2                                            SCAM-448
      AI=AI+FAI(L2,L1)*A1*A2                                            SCAM-449
   67 CONTINUE                                                          SCAM-450
   68 CONTINUE                                                          SCAM-451
      F(1,IPJ,ID)=AR                                                    SCAM-452
      F(2,IPJ,ID)=AI                                                    SCAM-453
      IF (LO(155).OR..NOT.LO(231)) GO TO 69                             SCAM-454
      A1=DSQRT(AR*AR+AI*AI)                                             SCAM-455
      A2=0.D0                                                           SCAM-456
      IF (A1.NE.0.D0) A2=DATAN2(AI,AR)                                  SCAM-457
      FJ=0.5D0*DFLOAT(MD(I2,3))                                         SCAM-458
      WRITE (MW,1002) I2,I1,IV,MD(I2,2),FJ,AR,AI,A1,A2                  SCAM-459
   69 CONTINUE                                                          SCAM-460
   70 CONTINUE                                                          SCAM-461
      IF (LO(232)) RETURN                                               SCAM-462
C COMPOUND NUCLEUS                                                      SCAM-463
      JCX=JC+NI                                                         SCAM-464
      IIV=IPI(2,1)-1                                                    SCAM-465
      III=IPI(3,1)-1                                                    SCAM-466
      DO 81 IC=1,NCI                                                    SCAM-467
      LA=2*MD(IC,2)                                                     SCAM-468
      JA=MD(IC,3)                                                       SCAM-469
      NT=NSS+IK(IV,LA,JA)*NCT(NZ+5)                                     SCAM-470
      IVS=0                                                             SCAM-471
      CALL COCN(LA,LA,JA,JA,III,IIV,NAJ,IPJ,Q,Q(IPJ+1),IDT-2*IPJ)       SCAM-472
      IF (LO(231)) GO TO 71                                             SCAM-473
      J1=IC                                                             SCAM-474
      K1=J1                                                             SCAM-475
      GO TO 72                                                          SCAM-476
   71 J1=1                                                              SCAM-477
      K1=NCIN                                                           SCAM-478
   72 DO 80 ICP=1,JCX                                                   SCAM-479
      IF (LO(231).AND.(ICP.LE.NCI)) GO TO 73                            SCAM-480
      J2=ICP-NI                                                         SCAM-481
      K2=J2                                                             SCAM-482
      GO TO 74                                                          SCAM-483
   73 J2=1                                                              SCAM-484
      K2=NCIN                                                           SCAM-485
   74 AR=0.D0                                                           SCAM-486
      DO 76 L1=J1,K1                                                    SCAM-487
      A1=BZ                                                             SCAM-488
      IF (LO(231)) A1=A1*AA(I1,L1)                                      SCAM-489
      IF (A1.EQ.0.D0) GO TO 79                                          SCAM-490
      DO 75 L2=J2,K2                                                    SCAM-491
      A2=1.D0                                                           SCAM-492
      IF (LO(231).AND.(L2.GT.NCIN)) A2=AA(I2,L2)                        SCAM-493
      IF (A2.EQ.0.D0) GO TO 75                                          SCAM-494
      AR=AR+V(L1+4,L2)*A1*A2                                            SCAM-495
   75 CONTINUE                                                          SCAM-496
   76 CONTINUE                                                          SCAM-497
      IF (AR.EQ.0.D0) GO TO 81                                          SCAM-498
      IV=IDINT(V(1,ICP)/1048576.D0)                                     SCAM-499
      IF ((IV.NE.IVS).AND.(IV.NE.1)) NT=NT+(IPI(2,IVS)*IPI(3,IVS)+NSY)/2SCAM-500
      NSY=MOD(IPI(1,IV)+JPI+IPJ+(IPI(2,IV)+IPI(3,IV))/2+1,2)            SCAM-501
      IVS=IV                                                            SCAM-502
      TX(NCOLL+IV+1)=TX(NCOLL+IV+1)+AR*V(2,ICP)*RZ                      SCAM-503
      IF (ICP.GT.NC1) GO TO 79                                          SCAM-504
      LB=IDINT(V(1,ICP)/512.D0)-2048*IV                                 SCAM-505
      JB=IDINT(V(1,ICP))-1048576*IV-512*LB                              SCAM-506
      IF (.NOT.LO(233)) GO TO 77                                        SCAM-507
      ID=NT+IK(IV,LB,JB)+1                                              SCAM-508
      FCN(IPJ,ID)=FCN(IPJ,ID)+.25D0*AR                                  SCAM-509
   77 CALL COCN(LB,LB,JB,JB,IPI(3,IV)-1,IPI(2,IV)-1,NAJ,IPJ,Q(IPJ+1),Q(2SCAM-510
     1*IPJ+1),IDT-3*IPJ)                                                SCAM-511
      IF ((IV.EQ.1).AND.(III.NE.0).AND.(ICP.NE.IC)) CALL COCN(LA,LB,JA,JSCAM-512
     1B,IPI(3,IV)-1,IPI(2,IV)-1,NAJ,IPJ,Q(2*IPJ+1),Q(3*IPJ+1),IDT-4*IPJ)SCAM-513
      DO 78 LL=1,IPJ                                                    SCAM-514
      AI=Q(LL)*Q(LL+IPJ)                                                SCAM-515
      IF ((IV.EQ.1).AND.(III.NE.0).AND.(ICP.NE.IC)) AI=AI+Q(LL+2*IPJ)**2SCAM-516
   78 GCN(LL,IV)=GCN(LL,IV)+.25D0*AI*AR*XZ                              SCAM-517
      GO TO 80                                                          SCAM-518
   79 IF (.NOT.LO(233)) GO TO 80                                        SCAM-519
      J=IV+KBA-NCOLS                                                    SCAM-520
      FCN(IPJ,J)=FCN(IPJ,J)+0.25D0*AR*V(2,ICP)                          SCAM-521
   80 CONTINUE                                                          SCAM-522
   81 JCX=NC1+NI                                                        SCAM-523
      RETURN                                                            SCAM-524
 1000 FORMAT (//' CHANNEL SPIN AND PARITY =',F7.1,A1,I11,' COUPLED CHANNSCAM-525
     1ELS AND',I3,' SOLUTIONS'//'  IC  ICP N    L    J',19X,'C MATRIX',2SCAM-526
     20X,'|C|',6X,'PHASE')                                              SCAM-527
 1001 FORMAT (' C MATRIX LARGER THAN 1 FOR AJ IPI NC NCIN IC ICP =',F5.1SCAM-528
     1,A1,4I3,2X,2D12.4)                                                SCAM-529
 1002 FORMAT (1X,I3,I4,I3,I5,F7.1,4X,1P,2D15.7,' I',4X,0P,2F11.8)       SCAM-530
 1003 FORMAT (1X,I3,I4,I3,I5,F7.1,4X,1P,2D15.7,' I',4X,'CLOSED')        SCAM-531
 1004 FORMAT (/' TRANSMISSION COEFFICIENTS FOR CHANNEL SPIN AND PARITY =SCAM-532
     1',F7.1,A1/4(' LEVEL   L     J',16X))                              SCAM-533
 1005 FORMAT (1X,F4.1,1X,A1,1X,I4)                                      SCAM-534
 1006 FORMAT (I3,I4,F6.1,2X,1P,D14.7,0P)                                SCAM-535
 1007 FORMAT (4(1X,I2,I4,F6.1,2X,1P,D14.7,0P,3X))                       SCAM-536
 1008 FORMAT (' ERROR IN EIGENSYSTEM.  E-W CORRECTION DISCONTINUED')    SCAM-537
 1009 FORMAT (//' CHANNEL SPIN AND PARITY =',F7.1, A1//'  IC  ICP N    LSCAM-538
     1    J',9X,'TL',9X,'HF',11X,'NU',9X,'G')                           SCAM-539
 1010 FORMAT (' TL  IN TRANSFORMED CHANNEL SPACE')                      SCAM-540
 1011 FORMAT (1X,I3,I4,I3,I5,F7.1,F12.6,D14.6,2F10.6)                   SCAM-541
 1012 FORMAT (15X,A8,F12.6,D14.6,F10.4,F10.6)                           SCAM-542
 1013 FORMAT (20X,'SUM',F12.6)                                          SCAM-543
 1014 FORMAT (15X,'H.-F.',D20.6)                                        SCAM-544
      END                                                               SCAM-545
C 01/01/04                                                      ECIS03  DIAG-000
      SUBROUTINE DIAG(N,NC,ZR,ZI,XR,XI,EPS,AX,IER)                      DIAG-001
C DIAGONALISATION OF A HERMITIAN COMPLEX MATRIX BY AN EXTENSION OF THE  DIAG-002
C JACOBI'S METHOD                                                       DIAG-003
C INPUT: ZR,ZI:  REAL AND IMAGINARY PARTS OF THE MATRIX                 DIAG-004
C        XR,XI:  REAL AND IMAGINARY PARTS OF THE UNIT MATRIX            DIAG-005
C        N:      FIRST DIMENSION OF ZR,ZI,XR AND XI                     DIAG-006
C        NC:     DIMENSION OF THE MATRIX                                DIAG-007
C        EPS:    VALUE BELOW WHICH MATRIX ELEMENTS ARE SET TO 0.        DIAG-008
C OUTPUT:ZR,ZI:  THE EIGENVALUES ARE ON THE DIAGONAL OF ZR              DIAG-009
C                ALL THE OTHER ELEMENTS ARE 0. IF PROCESS SUCCEEDED     DIAG-010
C        XR,XI:  EIGENVECTORS                                           DIAG-011
C        AX:     SQUARE OF THE NORM OF THE LARGEST NON DIAGONAL ELEMENT DIAG-012
C        IER:    RETURNS 0 OR -1 AFTER 4*NC**2 ROTATIONS                DIAG-013
C***********************************************************************DIAG-014
      IMPLICIT REAL*8 (A-H,O-Z)                                         DIAG-015
      DIMENSION ZR(N,1),ZI(N,1),XR(N,1),XI(N,1)                         DIAG-016
      IER=0                                                             DIAG-017
      NT=0                                                              DIAG-018
    1 NT=NT+1                                                           DIAG-019
      IF (NT.GT.4*NC*NC) GO TO 6                                        DIAG-020
      AX=0.D0                                                           DIAG-021
      L=1                                                               DIAG-022
      M=2                                                               DIAG-023
C SYMMETRISATION AND SEARCH FOR THE LARGEST NON DIAGONAL ELEMENT        DIAG-024
      DO 3 I=1,NC                                                       DIAG-025
      DO 2 J=I,NC                                                       DIAG-026
      IF (ZR(J,I).EQ.0.D0) ZR(I,J)=0.D0                                 DIAG-027
      IF (ZI(J,I).EQ.0.D0) ZI(I,J)=0.D0                                 DIAG-028
      IF (ZR(I,J).EQ.0.D0) ZR(J,I)=0.D0                                 DIAG-029
      IF (ZI(I,J).EQ.0.D0) ZI(J,I)=0.D0                                 DIAG-030
      AR=(ZR(I,J)+ZR(J,I))/2.D0                                         DIAG-031
      AI=(ZI(I,J)-ZI(J,I))/2.D0                                         DIAG-032
      ZR(J,I)=AR                                                        DIAG-033
      ZR(I,J)=AR                                                        DIAG-034
      ZI(I,J)=AI                                                        DIAG-035
      ZI(J,I)=-AI                                                       DIAG-036
      IF (I.EQ.J) GO TO 2                                               DIAG-037
      AY=ZR(I,J)**2+ZI(I,J)**2                                          DIAG-038
      IF (AX.GT.AY) GO TO 2                                             DIAG-039
      AX=AY                                                             DIAG-040
      L=I                                                               DIAG-041
      M=J                                                               DIAG-042
    2 CONTINUE                                                          DIAG-043
    3 CONTINUE                                                          DIAG-044
      IF (AX.EQ.0.D0) RETURN                                            DIAG-045
C ELEMENTARY TRANSFORMATION                                             DIAG-046
      U=DATAN2(-ZI(L,M),ZR(L,M))/2.D0                                   DIAG-047
      V=DATAN2(2.D0*DSQRT(ZR(L,M)**2+ZI(L,M)**2),ZR(M,M)-ZR(L,L))/2.D0  DIAG-048
      UC=DCOS(U)                                                        DIAG-049
      US=DSIN(U)                                                        DIAG-050
      TC=DCOS(V)                                                        DIAG-051
      TS=-DSIN(V)                                                       DIAG-052
      UCC=UC*TC                                                         DIAG-053
      UCS=UC*TS                                                         DIAG-054
      USC=US*TC                                                         DIAG-055
      USS=US*TS                                                         DIAG-056
C TRANSFORMATION OF ROWS                                                DIAG-057
      DO 4 I=1,NC                                                       DIAG-058
      AR=XR(I,L)*UCC+XI(I,L)*USC+XR(I,M)*UCS-XI(I,M)*USS                DIAG-059
      BR=-XR(I,L)*UCS-XI(I,L)*USS+XR(I,M)*UCC-XI(I,M)*USC               DIAG-060
      AI=XI(I,L)*UCC-XR(I,L)*USC+XI(I,M)*UCS+XR(I,M)*USS                DIAG-061
      BI=-XI(I,L)*UCS+XR(I,L)*USS+XI(I,M)*UCC+XR(I,M)*USC               DIAG-062
      XR(I,L)=AR                                                        DIAG-063
      XR(I,M)=BR                                                        DIAG-064
      XI(I,L)=AI                                                        DIAG-065
      XI(I,M)=BI                                                        DIAG-066
      AR=ZR(I,L)*UCC+ZI(I,L)*USC+ZR(I,M)*UCS-ZI(I,M)*USS                DIAG-067
      BR=-ZR(I,L)*UCS-ZI(I,L)*USS+ZR(I,M)*UCC-ZI(I,M)*USC               DIAG-068
      AI=ZI(I,L)*UCC-ZR(I,L)*USC+ZI(I,M)*UCS+ZR(I,M)*USS                DIAG-069
      BI=-ZI(I,L)*UCS+ZR(I,L)*USS+ZI(I,M)*UCC+ZR(I,M)*USC               DIAG-070
      ZR(I,L)=AR                                                        DIAG-071
      ZR(I,M)=BR                                                        DIAG-072
      ZI(I,L)=AI                                                        DIAG-073
    4 ZI(I,M)=BI                                                        DIAG-074
C TRANSFORMATION OF COLUMNS                                             DIAG-075
      DO 5 I=1,NC                                                       DIAG-076
      AR=ZR(L,I)*UCC-ZI(L,I)*USC+ZR(M,I)*UCS+ZI(M,I)*USS                DIAG-077
      BR=-ZR(L,I)*UCS+ZI(L,I)*USS+ZR(M,I)*UCC+ZI(M,I)*USC               DIAG-078
      AI=ZI(L,I)*UCC+ZR(L,I)*USC+ZI(M,I)*UCS-ZR(M,I)*USS                DIAG-079
      BI=-ZI(L,I)*UCS-ZR(L,I)*USS+ZI(M,I)*UCC-ZR(M,I)*USC               DIAG-080
      IF (DABS(AR).LT.EPS) AR=0.D0                                      DIAG-081
      IF (DABS(BR).LT.EPS) BR=0.D0                                      DIAG-082
      IF (DABS(AI).LT.EPS) AI=0.D0                                      DIAG-083
      IF (DABS(BI).LT.EPS) BI=0.D0                                      DIAG-084
      ZR(L,I)=AR                                                        DIAG-085
      ZR(M,I)=BR                                                        DIAG-086
      ZI(L,I)=AI                                                        DIAG-087
    5 ZI(M,I)=BI                                                        DIAG-088
      GO TO 1                                                           DIAG-089
    6 IER=-1                                                            DIAG-090
      RETURN                                                            DIAG-091
      END                                                               DIAG-092
C 01/01/04                                                      ECIS03  SCHE-000
      SUBROUTINE SCHE(F,JMAX,KMAX,IPI,MT1,MT2,MF,TX,BM,MC,FA,XG,LMAX1,WVSCHE-001
     1,KAB,KBA,KCB,JMIN,IPJ,IPK,FN,NCOLL,NCOLS,NCT,FGN,AM,JIT,JTI,NLT,IDSCHE-002
     21,XZ,LO)                                                          SCHE-003
C SCATTERING COEFFICIENTS IN THE HELICITY REPRESENTATION                SCHE-004
C INPUT VARIABLES: F:     S-MATRIX                                      SCHE-005
C                  JMAX:  MAXIMUM NUMBER OF CHANNEL SPINS, DIM. FOR F   SCHE-006
C                  KMAX:  MAXIMUM NUMBER OF COMP. NUCL, DIM. FOR FN     SCHE-007
C                  IPI(1,IV):   PARITY OF CHANNEL                       SCHE-008
C                  IPI(2/3,IV): MULTIPLICITIES OF PARTICLE AND TARGET   SCHE-009
C                  IPI(4,IV):   PRODUCT OF CHARGES                      SCHE-010
C                  IPI(6/7,IV): FIRST/LAST CHANNEL NUMBER. SEE DEPH     SCHE-011
C                  IPI(11,IV):  MAXIMUM ANGULAR MOMENTUM                SCHE-012
C                  MT1,MT2: MAXIMUM 2*SPIN+1 FOR PART. AND TARGET       SCHE-013
C                  MF:    HELICITY NUMBERS. SEE DEPH                    SCHE-014
C                  TX:    TOTAL REACTION CROSS SECTION IN MB            SCHE-015
C                         FOLLOWED BY THE TOTAL CROSS SECTION FOR EACH  SCHE-016
C                         LEVEL, THE COMPOUND NUCLEUS CROSS SECTIONS,   SCHE-017
C                         THE FISSION AND THE GAMMA CROSS SECTIONS      SCHE-018
C                  XG:    COULOMB PHASE-SHIFTS                          SCHE-019
C                  LMAX1: DIMENSION FOR XG                              SCHE-020
C                  WV:    WAVE NUMBER AND COULOMB PARAMETER.  SEE COLF  SCHE-021
C                  KAB:   DIMENSION FOR FA                              SCHE-022
C                  KBA:   NUMBER OF INDEPENDENT AMPLITUDES              SCHE-023
C                  KCB:   DIMENSION FOR MC                              SCHE-024
C                  JMIN:  TWICE MINIMUM CHANNEL SPIN                    SCHE-025
C                  IPJ:   NUMBER OF THE CHANNEL SPIN                    SCHE-026
C                  IPK:   NUMBER OF L VALUES FOR COMPOUND NUCLEUS       SCHE-027
C                  FN:    COMPOUND NUCLEUS CONTRIBUTION                 SCHE-028
C                  NCOLL: NUMBER OF COUPLED LEVELS                      SCHE-029
C                  NCOLS: NUMBER OF LEVELS WITH ANGULAR DISTRIBUTION    SCHE-030
C                  NCT:   NUMBER OF EQU. AND SOLUTIONS FOR EACH PARITY  SCHE-031
C                  FGN:   COEFF. OF LEGENDRE POLYNOMIALS FOR COMP. NUC. SCHE-032
C                  JIT:   NUMBER OF DIFFERENT RATES OF INTERPOLATION    SCHE-033
C                  JTI:   LIMITS AND STEPS OF INTERPOLATION             SCHE-034
C                  NLT:   MEMORIES NEEDED FOR LEGENDRE POLYNOMIALS      SCHE-035
C                  ID1:   LENGTH AVAILABLE FOR BM AS DOUBLE PRECISION   SCHE-036
C                  XZ:    CONVERSION FACTOR TO MILLIBARNS               SCHE-037
C                  LO:    LOGICAL CONTROLS. IF LO(220)=.TRUE., COMPUTE  SCHE-038
C                            ONLY THE SQUARE ROOTS AND LEGENDRE COEFFI. SCHE-039
C IN COMMON /NCJL/ NCJ:   NUMBER OF FACTORS 1/(-X*COS(THETA))           SCHE-040
C IN COMMON /NCOMP/NSP:   NUMBER OF UNCOUPLED STATES                    SCHE-041
C OUTPUT VARIABLES:F:     HELICITY SCATTERING COEFFICIENTS              SCHE-042
C                  TX,FGN:WITH ADDITION OF INTERPOLATED VALUES          SCHE-043
C WORKING FIELD:   AM(MT1,MT2,KAB) FOR PRODUCTS OF C.G. COEFFICIENTS    SCHE-044
C                  FA:    FOR STORAGE OF S-MATRIX FOR A GIVEN TOTAL SPINSCHE-045
C                  MC:    NUCLEAR STATE NUMBERS AND ANGULAR MOMENTA     SCHE-046
C                  BM:    FOR FACTORS 1/(-X*COS(THETA)), 3J COEFF., ETC SCHE-047
C***********************************************************************SCHE-048
      IMPLICIT REAL*8 (A-H,O-Z)                                         SCHE-049
      LOGICAL LO(250)                                                   SCHE-050
      DIMENSION F(2,JMAX,IPJ),IPI(11,NCOLS),MF(10,1),TX(1),BM(9),MC(KCB,SCHE-051
     12,4),FA(2,KAB,2),XG(LMAX1,1),WV(18,1),FN(KMAX,IPK),NCT(6),AM(MT1,MSCHE-052
     2T2,2),JTI(2,JIT),FGN(KMAX,1)                                      SCHE-053
      CHARACTER*1 IP(2),IPP                                             SCHE-054
      COMMON /NCJL/ NCJ,NL(3)                                           SCHE-055
      COMMON /NCOMP/ NSP(3),NRD(9),ACN(20)                              SCHE-056
      COMMON /INOUT/ MR,MW,MS                                           SCHE-057
      DATA IP,PI,K2,K3,K4 /'+','-',3.1415926535D0,3*0/                  SCHE-058
      IF (LO(220)) GO TO 60                                             SCHE-059
      IF (LO(219)) RETURN                                               SCHE-060
C TABLES OF QUANTUM NUMBERS                                             SCHE-061
      IPD=1                                                             SCHE-062
      IF (LO(223)) IPD=2                                                SCHE-063
      IPZ=2*IPD                                                         SCHE-064
      IJA=JMIN-IPZ                                                      SCHE-065
      IAJ=IJA                                                           SCHE-066
      DO 4 JPI=1,2                                                      SCHE-067
      NC=0                                                              SCHE-068
      DO 3 I=1,NCOLS                                                    SCHE-069
      NJ1=IJA-IPI(3,I)+1                                                SCHE-070
      NJ=IPI(3,I)                                                       SCHE-071
      DO 2 J=1,NJ                                                       SCHE-072
      L1=NJ1-IPI(2,I)+1                                                 SCHE-073
      NM=IPI(2,I)                                                       SCHE-074
      DO 1 K=1,NM                                                       SCHE-075
      IF (MOD(L1+2*IPI(1,I)+2*(JPI+IPD),4).EQ.0) GO TO 1                SCHE-076
      NC=NC+1                                                           SCHE-077
      MC(NC,JPI,1)=I                                                    SCHE-078
      MC(NC,JPI,2)=L1                                                   SCHE-079
      MC(NC,JPI,3)=NJ1                                                  SCHE-080
    1 L1=L1+2                                                           SCHE-081
    2 NJ1=NJ1+2                                                         SCHE-082
    3 CONTINUE                                                          SCHE-083
    4 CONTINUE                                                          SCHE-084
      NXY=0                                                             SCHE-085
      IF (LO(81).AND.LO(182)) NXY=NSP(3)+2                              SCHE-086
      IF (LO(143)) GO TO 38                                             SCHE-087
C INTERPOLATION FOR THE S-MATRIX                                        SCHE-088
      RZ=4.D0*PI*XZ*IPD                                                 SCHE-089
      I1=0                                                              SCHE-090
      I4=0                                                              SCHE-091
C LOOP ON PARITIES                                                      SCHE-092
      DO 17 J=1,2                                                       SCHE-093
      I2=I1+NCT(J)                                                      SCHE-094
      I3=NCT(J+2)                                                       SCHE-095
      I1=I1+1                                                           SCHE-096
      IF (I1.GT.I2) GO TO 17                                            SCHE-097
C LOOP ON SOLUTIONS                                                     SCHE-098
      DO 16 K=1,I3                                                      SCHE-099
      JI4=(3+MAX0(IPI(3,1)-1-IAJ-MC(K,J,3),IPI(2,1)-1-MC(K,J,2)-MC(K,J,3SCHE-100
     1),-2*MC(K,J,2),-2*MC(K,J,3)))/4-IPD+1                             SCHE-101
      I6=0                                                              SCHE-102
C LOOP ON S MATRIX ELEMENTS                                             SCHE-103
      DO 15 I=I1,I2                                                     SCHE-104
      I4=I4+1                                                           SCHE-105
      I6=I6+1                                                           SCHE-106
      IV=MC(I6,J,1)                                                     SCHE-107
      JI3=(3+MAX0(IPI(3,IV)-1-IAJ-MC(I6,J,3),IPI(2,IV)-1-MC(I6,J,2)-MC(ISCHE-108
     16,J,3),-2*MC(I6,J,2),-2*MC(I6,J,3)))/4-IPD+1                      SCHE-109
      JI1=MAX0(JI3,JI4)                                                 SCHE-110
      JT1=MIN0(IPJ,IPI(10,1)-MC(K,J,2)/2,IPI(10,IV)-MC(I,J,2)/2)        SCHE-111
      N1=0                                                              SCHE-112
      N3=1                                                              SCHE-113
    5 IF (N3.LT.JI1) GO TO 6                                            SCHE-114
      N1=N1+1                                                           SCHE-115
      K1=K2                                                             SCHE-116
      K2=K3                                                             SCHE-117
      K3=K4                                                             SCHE-118
      K4=N3                                                             SCHE-119
      IF (N1.GT.3) GO TO 9                                              SCHE-120
    6 DO 7 L=1,JIT                                                      SCHE-121
      IF (N3.LE.JTI(1,L)) GO TO 8                                       SCHE-122
    7 N3=N3+JTI(2,L)*IPD                                                SCHE-123
      L=JIT                                                             SCHE-124
    8 N3=N3+IPD                                                         SCHE-125
      IF (N3.LE.JT1) GO TO 5                                            SCHE-126
      IF (N3.GT.JTI(1,L)+JTI(2,L)*IPD+IPD) GO TO 14                     SCHE-127
      GO TO 69                                                          SCHE-128
    9 JI2=K3-IPD                                                        SCHE-129
      IF (N3.EQ.JT1) JI2=K4-IPD                                         SCHE-130
      IF (JI1.GT.JI2) GO TO 14                                          SCHE-131
      M1=(K1-K2)*(K1-K3)*(K1-K4)                                        SCHE-132
      M2=(K2-K1)*(K2-K3)*(K2-K4)                                        SCHE-133
      M3=(K3-K1)*(K3-K2)*(K3-K4)                                        SCHE-134
      M4=(K4-K1)*(K4-K2)*(K4-K3)                                        SCHE-135
      N2=1                                                              SCHE-136
      DO 13 N4=JI1,JI2,IPD                                              SCHE-137
      IF (N4.EQ.K1.OR.N4.EQ.K2.OR.N4.EQ.K3.OR.N4.EQ.K4) GO TO 13        SCHE-138
      SZ=RZ*(2*N4+JMIN-1)                                               SCHE-139
      IF (N2.NE.1) GO TO 10                                             SCHE-140
      N2=3                                                              SCHE-141
      A2=F(1,K1,I4)**2+F(2,K1,I4)**2                                    SCHE-142
      B2=F(1,K2,I4)**2+F(2,K2,I4)**2                                    SCHE-143
      C2=F(1,K3,I4)**2+F(2,K3,I4)**2                                    SCHE-144
      D2=F(1,K4,I4)**2+F(2,K4,I4)**2                                    SCHE-145
      IF (A2*B2*C2*D2.EQ.0.D0) GO TO 10                                 SCHE-146
      A1=DATAN2(F(2,K1,I4),F(1,K1,I4))                                  SCHE-147
      B1=DATAN2(F(2,K2,I4),F(1,K2,I4))                                  SCHE-148
      C1=DATAN2(F(2,K3,I4),F(1,K3,I4))                                  SCHE-149
      D1=DATAN2(F(2,K4,I4),F(1,K4,I4))                                  SCHE-150
      IF ((A1-B1)*(B1-C1).LT.0.D0.OR.(B1-C1)*(C1-D1).LT.0.D0) GO TO 10  SCHE-151
      N2=2                                                              SCHE-152
      A2=DLOG(A2)                                                       SCHE-153
      B2=DLOG(B2)                                                       SCHE-154
      C2=DLOG(C2)                                                       SCHE-155
      D2=DLOG(D2)                                                       SCHE-156
   10 A3=DFLOAT((N4-K2)*(N4-K3)*(N4-K4))/DFLOAT(M1)                     SCHE-157
      B3=DFLOAT((N4-K1)*(N4-K3)*(N4-K4))/DFLOAT(M2)                     SCHE-158
      C3=DFLOAT((N4-K1)*(N4-K2)*(N4-K4))/DFLOAT(M3)                     SCHE-159
      D3=DFLOAT((N4-K1)*(N4-K2)*(N4-K3))/DFLOAT(M4)                     SCHE-160
      IF (N2.EQ.3) GO TO 11                                             SCHE-161
      A4=A1*A3+B1*B3+C1*C3+D1*D3                                        SCHE-162
      B4=DEXP(0.5D0*(A2*A3+B2*B3+C2*C3+D2*D3))                          SCHE-163
      F(1,N4,I4)=B4*DCOS(A4)                                            SCHE-164
      F(2,N4,I4)=B4*DSIN(A4)                                            SCHE-165
      GO TO 12                                                          SCHE-166
   11 F(1,N4,I4)=F(1,K1,I4)*A3+F(1,K2,I4)*B3+F(1,K3,I4)*C3+F(1,K4,I4)*D3SCHE-167
      F(2,N4,I4)=F(2,K1,I4)*A3+F(2,K2,I4)*B3+F(2,K3,I4)*C3+F(2,K4,I4)*D3SCHE-168
   12 TX(IV+1)=TX(IV+1)+(F(1,N4,I4)**2+F(2,N4,I4)**2)*SZ                SCHE-169
      IF (I6.EQ.K) TX(1)=TX(1)+F(2,N4,I4)*SZ                            SCHE-170
   13 CONTINUE                                                          SCHE-171
   14 JI1=JI2+IPZ                                                       SCHE-172
      IF (JI1.LT.JT1) GO TO 6                                           SCHE-173
   15 CONTINUE                                                          SCHE-174
   16 CONTINUE                                                          SCHE-175
   17 I1=I2                                                             SCHE-176
      IF (LO(181).OR.(.NOT.LO(233))) GO TO 38                           SCHE-177
C INTERPOLATION FOR THE COMPOUND NUCLEUS                                SCHE-178
      I1=0                                                              SCHE-179
      I4=0                                                              SCHE-180
      DO 37 J=1,3                                                       SCHE-181
      IF (J.LE.2) GO TO 18                                              SCHE-182
      IF (NXY.EQ.0) GO TO 37                                            SCHE-183
      I2=I1                                                             SCHE-184
      I3=NXY                                                            SCHE-185
      GO TO 19                                                          SCHE-186
   18 I2=I1+NCT(J+4)                                                    SCHE-187
      I3=NCT(J+2)                                                       SCHE-188
      I1=I1+1                                                           SCHE-189
   19 IF (I1.GT.I2) GO TO 37                                            SCHE-190
      I6=0                                                              SCHE-191
C LOOP ON SOLUTIONS                                                     SCHE-192
      DO 36 K=1,I3                                                      SCHE-193
      IF (J.EQ.3) GO TO 20                                              SCHE-194
      JI4=(3+MAX0(IPI(3,1)-1-IAJ-MC(K,J,3),IPI(2,1)-1-MC(K,J,2)-MC(K,J,3SCHE-195
     1),-2*MC(K,J,2),-2*MC(K,J,3)))/4-IPD+1                             SCHE-196
   20 I6=0                                                              SCHE-197
C LOOP ON S MATRIX ELEMENTS                                             SCHE-198
      DO 35 I=I1,I2                                                     SCHE-199
      I4=I4+1                                                           SCHE-200
      I6=I6+1                                                           SCHE-201
      JI1=1                                                             SCHE-202
      IF (J.EQ.3) GO TO 21                                              SCHE-203
      IV=MC(I6,J,1)                                                     SCHE-204
      IVL=IV+NCOLL+1                                                    SCHE-205
      JI3=(3+MAX0(IPI(3,IV)-1-IAJ-MC(I6,J,3),IPI(2,IV)-1-MC(I6,J,2)-MC(ISCHE-206
     16,J,3),-2*MC(I6,J,2),-2*MC(I6,J,3)))/4-IPD+1                      SCHE-207
      JI1=MAX0(JI3,JI4)                                                 SCHE-208
      GO TO 22                                                          SCHE-209
   21 IVL=K+NCOLL+NCOLS+1                                               SCHE-210
   22 NT=0                                                              SCHE-211
      JPJ=0                                                             SCHE-212
      DO 23 L=JI1,IPK                                                   SCHE-213
      IF (DABS(FN(L,I4)).LT.1.D-15) GO TO 23                            SCHE-214
      NT=NT+1                                                           SCHE-215
      JPJ=L                                                             SCHE-216
   23 CONTINUE                                                          SCHE-217
      NT=MIN0(NT,4)-1                                                   SCHE-218
      IF (NT.LT.1) GO TO 35                                             SCHE-219
      N1=0                                                              SCHE-220
      N3=1                                                              SCHE-221
   24 IF (N3.LT.JI1) GO TO 25                                           SCHE-222
      N1=N1+1                                                           SCHE-223
      K1=K2                                                             SCHE-224
      K2=K3                                                             SCHE-225
      K3=K4                                                             SCHE-226
      K4=N3                                                             SCHE-227
      IF (N1.GT.NT) GO TO 28                                            SCHE-228
   25 DO 26 L=1,JIT                                                     SCHE-229
      IF (N3.LE.JTI(1,L)) GO TO 27                                      SCHE-230
   26 N3=N3+JTI(2,L)*IPD                                                SCHE-231
      L=JIT                                                             SCHE-232
   27 N3=N3+IPD                                                         SCHE-233
      IF (N3.LE.JPJ) GO TO 24                                           SCHE-234
      IF (N3.GT.JTI(1,L)+JTI(2,L)*IPD+IPD) GO TO 34                     SCHE-235
   28 JI2=K3-IPD                                                        SCHE-236
      IF (N3.EQ.JPJ) JI2=K4-IPD                                         SCHE-237
      IF (JI1.GT.JI2) GO TO 34                                          SCHE-238
      DO 33 N4=JI1,JI2,IPD                                              SCHE-239
      IF (N4.EQ.K1.OR.N4.EQ.K2.OR.N4.EQ.K3.OR.N4.EQ.K4) GO TO 33        SCHE-240
      SZ=RZ*(2*N4+JMIN-1)                                               SCHE-241
      IF (NT.LT.3) GO TO 29                                             SCHE-242
      A3=DFLOAT((N4-K2)*(N4-K3)*(N4-K4))/DFLOAT((K1-K2)*(K1-K3)*(K1-K4))SCHE-243
      B3=DFLOAT((N4-K1)*(N4-K3)*(N4-K4))/DFLOAT((K2-K1)*(K2-K3)*(K2-K4))SCHE-244
      C3=DFLOAT((N4-K1)*(N4-K2)*(N4-K4))/DFLOAT((K3-K1)*(K3-K2)*(K3-K4))SCHE-245
      D3=DFLOAT((N4-K1)*(N4-K2)*(N4-K3))/DFLOAT((K4-K1)*(K4-K2)*(K4-K3))SCHE-246
      FN(N4,I4)=DABS(FN(K1,I4)*A3+FN(K2,I4)*B3+FN(K3,I4)*C3+FN(K4,I4)*D3SCHE-247
     1)                                                                 SCHE-248
      GO TO 31                                                          SCHE-249
   29 IF (NT.EQ.1) GO TO 30                                             SCHE-250
      B3=DFLOAT((N4-K3)*(N4-K4))/DFLOAT((K2-K3)*(K2-K4))                SCHE-251
      C3=DFLOAT((N4-K2)*(N4-K4))/DFLOAT((K3-K2)*(K3-K4))                SCHE-252
      D3=DFLOAT((N4-K2)*(N4-K3))/DFLOAT((K4-K2)*(K4-K3))                SCHE-253
      FN(N4,I4)=DABS(FN(K2,I4)*B3+FN(K3,I4)*C3+FN(K4,I4)*D3)            SCHE-254
      GO TO 31                                                          SCHE-255
   30 C3=DFLOAT(N4-K4)/DFLOAT(K3-K4)                                    SCHE-256
      D3=DFLOAT(N4-K3)/DFLOAT(K4-K3)                                    SCHE-257
      FN(N4,I4)=ABS(FN(K3,I4)*C3+FN(K4,I4)*D3)                          SCHE-258
   31 TX(IVL)=TX(IVL)+FN(N4,I4)*SZ                                      SCHE-259
      IF ((J.EQ.3).OR.(FN(N4,I4).EQ.0.D0)) GO TO 33                     SCHE-260
      CALL COCN(MC(K,J,2)+IPZ*N4,MC(K,J,2)+IPZ*N4,MC(K,J,3)+IPZ*N4,MC(K,SCHE-261
     1J,3)+IPZ*N4,IPI(3,1)-1,IPI(2,1)-1,IJA+IPZ*N4,N4,BM,BM(N4+1),ID1-N4SCHE-262
     2)                                                                 SCHE-263
      CALL COCN(MC(I6,J,2)+IPZ*N4,MC(I6,J,2)+IPZ*N4,MC(I6,J,3)+IPZ*N4,MCSCHE-264
     1(I6,J,3)+IPZ*N4,IPI(3,IV)-1,IPI(2,IV)-1,IJA+IPZ*N4,N4,BM(N4+1),BM(SCHE-265
     22*N4+1),ID1-2*N4)                                                 SCHE-266
      IF ((IV.EQ.1).AND.(IPI(3,1).GT.1).AND.(K.NE.I6)) CALL COCN(MC(K,J,SCHE-267
     12)+IPZ*N4,MC(I6,J,2)+IPZ*N4,MC(K,J,3)+IPZ*N4,MC(I6,J,3)+IPZ*N4,IPISCHE-268
     2(3,IV)-1,IPI(2,IV)-1,IJA+IPZ*N4,N4,BM(2*N4+1),BM(3*N4+1),ID1-3*N4)SCHE-269
      DO 32 LL=1,N4                                                     SCHE-270
      Z=BM(LL)*BM(LL+N4)                                                SCHE-271
      IF ((IV.EQ.1).AND.(IPI(3,1).GT.1).AND.(K.NE.I6)) Z=BM(LL+2*N4)**2+SCHE-272
     1Z                                                                 SCHE-273
   32 FGN(LL,IV)=FGN(LL,IV)+Z*FN(N4,I4)*XZ                              SCHE-274
   33 CONTINUE                                                          SCHE-275
   34 JI1=JI2+IPZ                                                       SCHE-276
      IF (JI1.LT.JPJ) GO TO 25                                          SCHE-277
   35 CONTINUE                                                          SCHE-278
   36 CONTINUE                                                          SCHE-279
   37 I1=I2                                                             SCHE-280
   38 IK=1                                                              SCHE-281
      NPT=0                                                             SCHE-282
      DO 57 IJ=1,IPJ,IPD                                                SCHE-283
C TRANSFER OF S MATRIX FOR A GIVEN ANGULAR MOMENTUM                     SCHE-284
      I1=0                                                              SCHE-285
      I4=0                                                              SCHE-286
      DO 41 J=1,2                                                       SCHE-287
      I2=I1+NCT(J+2)                                                    SCHE-288
      I1=I1+1                                                           SCHE-289
      IF (I1.GT.I2) GO TO 41                                            SCHE-290
      I3=NCT(J)                                                         SCHE-291
      DO 40 I=I1,I2                                                     SCHE-292
      DO 39 K=1,I3                                                      SCHE-293
      I4=I4+1                                                           SCHE-294
      FA(1,K,I)=F(1,IJ,I4)                                              SCHE-295
   39 FA(2,K,I)=F(2,IJ,I4)                                              SCHE-296
   40 CONTINUE                                                          SCHE-297
   41 I1=I2                                                             SCHE-298
      DO 42 I=1,KBA                                                     SCHE-299
      F(1,IJ,I)=0.D0                                                    SCHE-300
   42 F(2,IJ,I)=0.D0                                                    SCHE-301
      J1=0                                                              SCHE-302
      IAJ=IAJ+IPZ                                                       SCHE-303
      AAJ=IAJ+1                                                         SCHE-304
      DO 54 JI=1,2                                                      SCHE-305
      J2=J1+NCT(JI+2)                                                   SCHE-306
      J1=J1+1                                                           SCHE-307
      IF (J1.GT.J2) GO TO 54                                            SCHE-308
      NC1=0                                                             SCHE-309
      NC2=0                                                             SCHE-310
      NC=NCT(JI)                                                        SCHE-311
C  GEOMETRIC COEFFICIENT FOR THE TRANSFORMATION TO HELICITY COEFFICIENTSSCHE-312
      DO 48 IC=1,NC                                                     SCHE-313
      MC(IC,JI,2)=MC(IC,JI,2)+IPZ                                       SCHE-314
      MC(IC,JI,3)=MC(IC,JI,3)+IPZ                                       SCHE-315
      IV=MC(IC,JI,1)                                                    SCHE-316
      NI=IPI(2,IV)                                                      SCHE-317
      MI=IPI(3,IV)                                                      SCHE-318
      MC(IC,1,4)=MIN0(MC(IC,JI,3)-IABS(IAJ+1-MI),MC(IC,JI,2)-IABS(MC(IC,SCHE-319
     1JI,3)+1-NI))                                                      SCHE-320
      IF (MC(IC,JI,2).GT.2*IPI(10,IV)) MC(IC,1,4)=-1                    SCHE-321
      IF (MC(IC,1,4).LT.0) GO TO 48                                     SCHE-322
      IF (IV.EQ.1) NC1=NC1+1                                            SCHE-323
      NC2=NC2+1                                                         SCHE-324
      A1=0.D0                                                           SCHE-325
      YM=MC(IC,JI,3)-NI+1                                               SCHE-326
      XB1=0.5D0*DFLOAT(NI**2+(MC(IC,JI,3)-MC(IC,JI,2))*(MC(IC,JI,2)+MC(ISCHE-327
     1C,JI,3)+2)-1)                                                     SCHE-328
      C3=0.D0                                                           SCHE-329
C COUPLING FOR PARTICLE HELICITY                                        SCHE-330
      DO 43 I1=1,NI                                                     SCHE-331
      BM(I1)=0.D0                                                       SCHE-332
      IF (IABS(2*I1-NI-1).GT.MC(IC,JI,3)) GO TO 43                      SCHE-333
      N3=(MC(IC,JI,3)+2*I1-NI-1)*(MC(IC,JI,3)-2*I1+NI+3)*(I1-1)         SCHE-334
      IF (N3.EQ.0) BM(I1)=2*MOD(I1,2)-1                                 SCHE-335
      IF (N3.LE.0) GO TO 43                                             SCHE-336
      C2=C3                                                             SCHE-337
      C3=DSQRT(DFLOAT((NI-I1+1)*(I1-1))*(YM+DFLOAT(2*I1-2))*(YM+DFLOAT(2SCHE-338
     1*NI-2*I1+2)))                                                     SCHE-339
      BM(I1)=(XB1-DFLOAT(2*I1-NI-3)**2)*BM(I1-1)/C3                     SCHE-340
      IF (I1.GE.3) BM(I1)=BM(I1)-C2*BM(I1-2)/C3                         SCHE-341
   43 A1=A1+BM(I1)**2                                                   SCHE-342
      DO 47 I1=1,NI                                                     SCHE-343
      A2=0.D0                                                           SCHE-344
      IF (DABS(BM(I1)).LT.1.D-10) GO TO 45                              SCHE-345
      IA=2*I1-NI-1                                                      SCHE-346
      XB1=0.5D0*DFLOAT(MI**2+(IAJ-MC(IC,JI,3))*(IAJ+MC(IC,JI,3)+2)-1)   SCHE-347
      C3=0.D0                                                           SCHE-348
C COUPLING FOR TARGET HELICITY                                          SCHE-349
      DO 44 I2=1,MI                                                     SCHE-350
      BM(NI+I2)=0.D0                                                    SCHE-351
      IF (IABS(2*I2-MI-1-IA).GT.IAJ) GO TO 44                           SCHE-352
      N3=(IAJ+IA-2*I2+MI+3)*(IAJ-IA+2*I2-MI-1)*(I2-1)                   SCHE-353
      IF (N3.EQ.0) BM(NI+I2)=DFLOAT(2*MOD(I2,2)-1)                      SCHE-354
      IF (N3.LE.0) GO TO 44                                             SCHE-355
      C2=C3                                                             SCHE-356
      IB=2*I2-MI-3                                                      SCHE-357
      C3=DSQRT(DFLOAT((MI-I2+1)*(I2-1))*(AAJ**2-DFLOAT(2*I1-2*I2+MI-NI+1SCHE-358
     1)**2))                                                            SCHE-359
      BM(NI+I2)=((XB1-DFLOAT(IB*(IB-IA)))*BM(NI+I2-1)-C2*BM(NI+I2-2))/C3SCHE-360
   44 A2=A2+BM(NI+I2)**2                                                SCHE-361
      IF (A2*A1.NE.0.D0) A2=DFLOAT(MOD(1+MC(IC,JI,3)-IAJ+MI,4)-1)*DSQRT(SCHE-362
     1AAJ/(A1*A2))                                                      SCHE-363
   45 DO 46 I2=1,MI                                                     SCHE-364
   46 AM(I1,I2,IC)=BM(I1)*BM(NI+I2)*A2                                  SCHE-365
   47 CONTINUE                                                          SCHE-366
   48 CONTINUE                                                          SCHE-367
      IF (NC1.EQ.0) GO TO 54                                            SCHE-368
      NCIN=NCT(JI+2)                                                    SCHE-369
C TRANSFORMATION                                                        SCHE-370
      IF (IK.NE.IJ) GO TO 49                                            SCHE-371
      IF (LO(156).AND.LO(160)) GO TO 49                                 SCHE-372
      BJ=.5D0*DFLOAT(IAJ)                                               SCHE-373
      JIJ=1+MOD(IJ+JI,2)                                                SCHE-374
      NC1=NC1*NC2                                                       SCHE-375
      IF (LO(56)) WRITE (MW,1000) BJ,IP(JIJ)                            SCHE-376
      NPT=NPT+1                                                         SCHE-377
      IF (LO(60)) WRITE (99,1001) BJ,IP(JIJ),NC2,NC1                    SCHE-378
   49 NC1=0                                                             SCHE-379
      DO 53 IC=1,NCIN                                                   SCHE-380
      IF (MC(IC,1,4).LT.0) GO TO 53                                     SCHE-381
      ICX=IC                                                            SCHE-382
      NC1=NC1+1                                                         SCHE-383
      IF (JI.EQ.2) ICX=ICX+NCT(3)                                       SCHE-384
      LCI=MC(IC,JI,2)/2+1                                               SCHE-385
      NC2=0                                                             SCHE-386
      DO 52 ICP=1,NC                                                    SCHE-387
      IF (MC(ICP,1,4).LT.0) GO TO 52                                    SCHE-388
      LCP=MC(ICP,JI,2)/2+1                                              SCHE-389
      IV=MC(ICP,JI,1)                                                   SCHE-390
      NC2=NC2+1                                                         SCHE-391
      C1=XG(LCI,1)+XG(LCP,IV)                                           SCHE-392
      IF (IK.NE.IJ) GO TO 50                                            SCHE-393
      IF (LO(156).AND.LO(160)) GO TO 50                                 SCHE-394
      B1=-2.D0*FA(2,ICP,ICX)                                            SCHE-395
      IF (IC.EQ.ICP) B1=B1+1.D0                                         SCHE-396
      B2=2.D0*FA(1,ICP,ICX)                                             SCHE-397
      B3=DSQRT(B1**2+B2**2)                                             SCHE-398
      D1=0.D0                                                           SCHE-399
      IF (B3.NE.0.D0) D1=DATAN2(B2,B1)                                  SCHE-400
      D2=DMOD(D1+C1+PI,2.D0*PI)-PI                                      SCHE-401
      LC=LCP-1                                                          SCHE-402
      BJ=0.5D0*DFLOAT(MC(ICP,JI,3))                                     SCHE-403
      IF (LO(56)) WRITE (MW,1002) NC1,NC2,IV,LC,BJ,B1,B2,B3,D1,D2       SCHE-404
      IF (LO(60)) WRITE (99,1003) NC1,NC2,IV,LC,BJ,B1,B2,B3             SCHE-405
C MULTIPLICATION BY THE COULOMB PHASE                                   SCHE-406
   50 A1=DCOS(C1)                                                       SCHE-407
      A2=DSIN(C1)                                                       SCHE-408
      C2=FA(1,ICP,ICX)*A1-FA(2,ICP,ICX)*A2                              SCHE-409
      C3=FA(1,ICP,ICX)*A2+FA(2,ICP,ICX)*A1                              SCHE-410
      I1=IPI(6,IV)                                                      SCHE-411
      I2=IPI(7,IV)                                                      SCHE-412
C  HELICITY SCATTERING COEFFICIENTS                                     SCHE-413
      DO 51 ID=I1,I2                                                    SCHE-414
      MF1=MF(1,ID)                                                      SCHE-415
      MF2=MF(2,ID)                                                      SCHE-416
      MF3=MF(3,ID)                                                      SCHE-417
      MF4=MF(4,ID)                                                      SCHE-418
      C1=AM(MF1,MF2,ICP)*AM(MF3,MF4,IC)                                 SCHE-419
      F(1,IJ,ID)=F(1,IJ,ID)+C2*C1                                       SCHE-420
   51 F(2,IJ,ID)=F(2,IJ,ID)+C3*C1                                       SCHE-421
   52 CONTINUE                                                          SCHE-422
   53 CONTINUE                                                          SCHE-423
   54 CONTINUE                                                          SCHE-424
      IF (LO(143).OR.IK.NE.IJ) GO TO 56                                 SCHE-425
      DO 55 L=1,JIT                                                     SCHE-426
      IF (IK.LE.JTI(1,L)) GO TO 56                                      SCHE-427
   55 IK=IK+JTI(2,L)*IPD                                                SCHE-428
   56 IK=IK+IPD                                                         SCHE-429
   57 CONTINUE                                                          SCHE-430
      IF (LO(160)) GO TO 60                                             SCHE-431
      WRITE (60,1004) WV(1,1),WV(12,1),WV(2,1),IPI(4,1),NPT             SCHE-432
      REWIND 99                                                         SCHE-433
      DO 59 I=1,NPT                                                     SCHE-434
      READ (99,1001) U1,IPP,K1,K2                                       SCHE-435
      WRITE (60,1001) U1,IPP,K1,K2                                      SCHE-436
      DO 58 K=1,K2                                                      SCHE-437
      READ (99,1003) K1,K2,K3,K4,BJ,B1,B2,B3                            SCHE-438
   58 WRITE (60,1005) K1,K2,K3,K4,BJ,B1,B2,B3                           SCHE-439
   59 CONTINUE                                                          SCHE-440
      CLOSE (99,STATUS='DELETE')                                        SCHE-441
   60 IF (LO(165)) GO TO 61                                             SCHE-442
      NSA=7*(NLT+2*IPJ+1)+1                                             SCHE-443
      IF (NSA.GT.ID1) CALL MEMO('SCHE',ID1,NSA,2)                       SCHE-444
      CALL LCSP(F,FGN,JMAX,KMAX,IPI,NCOLL,NCOLS,MF,WV,JMIN,IPJ,IPJ,XZ,BMSCHE-445
     1,BM(NSA),ID1-NSA,LO)                                              SCHE-446
   61 IF (LO(220).OR.LO(141)) RETURN                                    SCHE-447
C ELIMINATION OF FACTORS 1/(1-X*COS(THETA))                             SCHE-448
      NCJ=MIN0(NCJ,IPJ-1)                                               SCHE-449
      IF (NCJ.EQ.0) RETURN                                              SCHE-450
      DO 68 NJ=1,NCJ                                                    SCHE-451
      IPJ=IPJ-1                                                         SCHE-452
C LOOP ON THE INDEPENDENT AMPLITUDES                                    SCHE-453
      DO 67 K=1,KBA                                                     SCHE-454
      IF (MF(6,K).EQ.99999) GO TO 62                                    SCHE-455
      M1=MF(5,K)                                                        SCHE-456
      M2=MF(6,K)                                                        SCHE-457
      M3=((IABS(M1+M2)+IABS(M1-M2))/2-JMIN)/2+1                         SCHE-458
   62 B3=0.25D0*DFLOAT(M1*M2)                                           SCHE-459
      IF (M3.GT.IPJ) GO TO 70                                           SCHE-460
      D1=0.D0                                                           SCHE-461
      D2=0.D0                                                           SCHE-462
      MJ=2*M3+JMIN-2                                                    SCHE-463
      C3=0.5D0*DFLOAT(MJ)                                               SCHE-464
      F1=DFLOAT((MJ+M2)/2+1-M3)                                         SCHE-465
      F2=DFLOAT((MJ-M2)/2+1-M3)                                         SCHE-466
      F3=DFLOAT((MJ+M1)/2+1-M3)                                         SCHE-467
      F4=DFLOAT((MJ-M1)/2+1-M3)                                         SCHE-468
      C1=0.D0                                                           SCHE-469
      B1=0.D0                                                           SCHE-470
      A1=0.D0                                                           SCHE-471
      B4=0.D0                                                           SCHE-472
C CALC. OF X WHICH MINIMISES THE DIFFERENCES WITH A WEIGHT (J+1)**2     SCHE-473
C FOR THE 5 LAST ONE                                                    SCHE-474
      NPJ=IPJ-5                                                         SCHE-475
      DO 63 I=M3,IPJ                                                    SCHE-476
      FI=I                                                              SCHE-477
      A2=A1                                                             SCHE-478
      B2=B1                                                             SCHE-479
      A1=F(1,I,K)                                                       SCHE-480
      B1=F(2,I,K)                                                       SCHE-481
      C3=C3+1.D0                                                        SCHE-482
      C2=C1                                                             SCHE-483
      C1=DSQRT((F1+FI)*(F2+FI)*(F3+FI)*(F4+FI))/(C3*(2.D0*C3+1.D0))     SCHE-484
      IF (B3.NE.0.D0) B4=B3/(C3*C3-C3)                                  SCHE-485
      BM(2*I-1)=A1*B4+A2*C2+F(1,I+1,K)*C1                               SCHE-486
      BM(2*I)=B1*B4+B2*C2+F(2,I+1,K)*C1                                 SCHE-487
      IF (I.LE.NPJ) GO TO 63                                            SCHE-488
      D1=D1+C3*C3*(F(1,I,K)*BM(2*I-1)+F(2,I,K)*BM(2*I))                 SCHE-489
      D2=D2+C3*C3*(BM(2*I-1)**2+BM(2*I)**2)                             SCHE-490
   63 C1=C1*(C3+C3+1.D0)/(C3+C3-1.D0)                                   SCHE-491
      A3=.9999999D0                                                     SCHE-492
      IF (LO(18)) GO TO 64                                              SCHE-493
      IF (D2.NE.0.D0) A3=D1/D2                                          SCHE-494
      A4=A3                                                             SCHE-495
C X IS FIXED BETWEEN +1 AND -1                                          SCHE-496
      IF (A4.GT..9999999D0) A4=.9999999D0                               SCHE-497
      IF (A4.LT.-.9999999D0) A4=-.9999999D0                             SCHE-498
C CALCULATION OF THE NEW SCATTERING COEFFICIENTS                        SCHE-499
      GO TO 65                                                          SCHE-500
   64 A4=A3*DFLOAT(2*MOD(NJ,2)-1)                                       SCHE-501
   65 DO 66 I=M3,IPJ                                                    SCHE-502
      F(1,I,K)=F(1,I,K)-A4*BM(2*I-1)                                    SCHE-503
   66 F(2,I,K)=F(2,I,K)-A4*BM(2*I)                                      SCHE-504
      IF (.NOT.LO(216)) WRITE (MW,1006) K,A4,A3,F(1,IPJ,K),F(2,IPJ,K),F(SCHE-505
     11,IPJ+1,K),F(2,IPJ+1,K)                                           SCHE-506
      F(1,IPJ+1,K)=A4                                                   SCHE-507
   67 CONTINUE                                                          SCHE-508
   68 CONTINUE                                                          SCHE-509
      RETURN                                                            SCHE-510
   69 WRITE (MW,1007) N1                                                SCHE-511
      GO TO 71                                                          SCHE-512
   70 WRITE (MW,1008) NJ                                                SCHE-513
   71 WRITE (MW,1009)                                                   SCHE-514
      STOP                                                              SCHE-515
 1000 FORMAT (//' CHANNEL SPIN AND PARITY =',F7.1,A1//'  IC ICP N    L  SCHE-516
     1  J',18X,'S MATRIX',20X,'|S|',7X,'PHASE /WITH COUL.')             SCHE-517
 1001 FORMAT (1X,F4.1,1X,A1,1X,I4,1X,I4)                                SCHE-518
 1002 FORMAT (1X,3I3,I5,F7.1,4X,1P,2D15.7,' I',4X,0P,3F11.8)            SCHE-519
 1003 FORMAT (1X,3(I2,1X),I3,1X,F5.1,1X,2(D15.7,1X),5X,F11.8)           SCHE-520
 1004 FORMAT ('<S-MATRIX>',F10.2,F10.5,F10.2,2I5)                       SCHE-521
 1005 FORMAT (1X,3(I2,1X),I3,1X,F5.1,1X,2(D15.7,1X),'I',4X,F11.8)       SCHE-522
 1006 FORMAT (' AMPLITUDE =',I3,D15.7,' (',D15.7,')  NEW',2D15.7,3X,'OLDSCHE-523
     1',2D15.7)                                                         SCHE-524
 1007 FORMAT (5X,I2,' AMPLITUDES INSUFFICIENT TO INTERPOLATE')          SCHE-525
 1008 FORMAT (' AMPLITUDES INSUFFICIENT TO FACTORISE (1-COS)',I2,' TIMESSCHE-526
     1')                                                                SCHE-527
 1009 FORMAT (' IN SCHE  .... STOP ....')                               SCHE-528
      END                                                               SCHE-529
C 01/01/04                                                      ECIS03  COCN-000
      SUBROUTINE COCN(LA,LB,JA,JB,IW,IV,IJ,IP,RB,RC,NT)                 COCN-001
C COMPUTATION OF COEFFICIENT FOR ANGULAR DISTRIBUTION OF COMPOUND      COCN-002
C NUCLEUS CROSS-SECTIONS.                                               COCN-003
C INPUT VARIABLES:  LA,LB,JA,JB,IW,IV,IJ: INTEGER DOUBLE VALUES         COCN-004
C                   IP:   NUMBER OF COEFFICIENTS REQUESTED              COCN-005
C                   NT:   SIZE OF THE WORKING SPACE RC                  COCN-006
C OUTPUT VARIABLE:  RB:   IN RB(I), VALUE OF                            COCN-007
C                ( LL  LA  LB )  ( JA  JB  LL )  ( LA  LB  LL )         COCN-008
C                (            )  )            (  )            (         COCN-009
C                (  0   0   0 )  ( IJ  IJ  IW )  ( JB  JA  IV )         COCN-010
C        * (2 IJ + 1) * SQRT ((2 LA + 1)(2 LB + 1)(2 JA + 1)(2 JB + 1)) COCN-011
C                         FOR EVEN VALUES OF LL, FROM LL=0 WITH POSITIVECOCN-012
C                         OR NULL VALUE FOR LL=0                        COCN-013
C WORKING SPACE:    RC:   FOR ALL THE NON-ZERO 6-J COEFFICIENTS WITH    COCN-014
C                         EVEN AND ODD VALUES OF LL, STARTING WITH THE  COCN-015
C                         LARGEST VALUE OF LL IN RC(2)                  COCN-016
C***********************************************************************COCN-017
      IMPLICIT REAL*8 (A-H,O-Z)                                         COCN-018
      COMMON /INOUT/ MR,MW,MS                                           COCN-019
      DIMENSION RB(1),RC(1),J(5)                                        COCN-020
      LD=IABS(LA-LB)                                                    COCN-021
      LP=(LA+LB)/4+1                                                    COCN-022
      LM=LD/4+1                                                         COCN-023
      AD=DFLOAT(LD**2)                                                  COCN-024
      AP=DFLOAT(LA+LB+2)**2                                             COCN-025
      JT=MAX0(IP,LP)                                                    COCN-026
      IF (JT.GT.NT) GO TO 7                                             COCN-027
      TI=0.D0                                                           COCN-028
C RECURRENCE COMPUTATION OF 3-J COEFFICIENTS FOR EVEN VALUES OF LL      COCN-029
      DO 2 I=1,JT                                                       COCN-030
      AL=DFLOAT(4*I-4)                                                  COCN-031
      RC(I)=0.D0                                                        COCN-032
      IF (I.LT.LM.OR.I.GT.LP) GO TO 2                                   COCN-033
      IF (I.GT.LM) GO TO 1                                              COCN-034
      RC(I)=1.D0                                                        COCN-035
      GO TO 2                                                           COCN-036
    1 RC(I)=-RC(I-1)*DSQRT(((AL-2.D0)**2-AD)*(AP-(AL-2.D0)**2)/((AL**2-ACOCN-037
     1D)*(AP-AL**2)))                                                   COCN-038
    2 TI=TI+RC(I)**2*(AL+1.D0)                                          COCN-039
      TI=DSQRT(TI)                                                      COCN-040
      DO 3 I=1,IP                                                       COCN-041
    3 RB(I)=RC(I)                                                       COCN-042
C QUANTUM NUMBERS OF THE FIRST 6-J COEFFICIENT                          COCN-043
      J(1)=LA                                                           COCN-044
      J(2)=JA                                                           COCN-045
      J(3)=IV                                                           COCN-046
      J(4)=JB                                                           COCN-047
      J(5)=LB                                                           COCN-048
      DO 5 K=1,2                                                        COCN-049
      JI=MAX0(IABS(J(1)-J(5)),IABS(J(2)-J(4)))                          COCN-050
      JF=MIN0(J(1)+J(5),J(2)+J(4))                                      COCN-051
      JT=(JF-JI)/2+2                                                    COCN-052
      IF (JT.GT.NT) GO TO 7                                             COCN-053
      AT=DFLOAT(JF+1)                                                   COCN-054
      CALL DX6J(RC,AT,J,JT)                                             COCN-055
      TI=TI*DSQRT(AT*DFLOAT(J(3)+1))                                    COCN-056
      DO 4 I=1,IP                                                       COCN-057
      LL=4*I-4                                                          COCN-058
      LK=1                                                              COCN-059
      IF (LL.GE.JI.AND.LL.LE.JF) LK=2+(JF-LL)/2                         COCN-060
      RB(I)=RC(LK)*RB(I)                                                COCN-061
    4 CONTINUE                                                          COCN-062
C QUANTUM NUMBERS OF THE SECOND 6-J COEFFICIENT                         COCN-063
      J(1)=IJ                                                           COCN-064
      J(3)=IW                                                           COCN-065
    5 J(5)=IJ                                                           COCN-066
C NORMALISATION                                                         COCN-067
      TI=DSQRT(DFLOAT(LA+1)*DFLOAT(LB+1)*DFLOAT(JA+1)*DFLOAT(JB+1))*DFLOCOCN-068
     1AT(IJ+1)/TI                                                       COCN-069
      IF (RB(1).LT.0.D0) TI=-TI                                         COCN-070
      DO 6 I=1,IP                                                       COCN-071
    6 RB(I)=RB(I)*TI                                                    COCN-072
      RETURN                                                            COCN-073
    7 WRITE (MW,1000) NT,JT                                             COCN-074
      STOP                                                              COCN-075
 1000 FORMAT (' WORKING SPACE TOO SMALL IN COCN:',I5,' AVAILABLE',I6,' RCOCN-076
     1EQUESTED'/' ... STOP ...')                                        COCN-077
      END                                                               COCN-078
C 01/01/04                                                      ECIS03  LCSP-000
      SUBROUTINE LCSP(F,FCN,JMAX,KMAX,IPI,NCOLL,NCOLS,MF,WV,JMIN,IPJ,IPKLCSP-001
     1,XZ,A,AX,ID,LO)                                                   LCSP-002
C COEFFICIENTS OF LEGENDRE POLYNOMIALS FOR CROSS-SECTIONS               LCSP-003
C SCATTERING COEFFICIENTS IN THE HELICITY REPRESENTATION                LCSP-004
C INPUT VARIABLES: F:     S-MATRIX                                      LCSP-005
C                  FCN:   TRANSMISSION COEFFICIENTS                     LCSP-006
C                  JMAX:  MAXIMUM NUMBER OF CHANNEL SPINS, DIM. FOR F   LCSP-007
C                  KMAX:  MAXIMUM NUMBER L FOR COMP. NUC., DIM. FOR FCN LCSP-008
C                  IPI(2/3,IV): MULTIPLICITIES OF TARGET AND PARTICLE   LCSP-009
C                  IPI(6/7,IV): FIRST/LAST CHANNEL NUMBER. SEE DEPH     LCSP-010
C                  NCOLL: NUMBER OF COUPLED LEVELS                      LCSP-011
C                  NCOLS: NUMBER OF LEVELS WITH ANGULAR DISTRIBUTION    LCSP-012
C                  MF:    HELICITY NUMBERS. SEE DEPH                    LCSP-013
C                  WV:    WAVE NUMBER AND COULOMB PARAMETER.  SEE COLF  LCSP-014
C                  JMIN:  TWICE MINIMUM CHANNEL SPIN                    LCSP-015
C                  IPJ:   NUMBER OF CHANNEL SPIN                        LCSP-016
C                  IPK:   NUMBER OF CHANNEL SPIN FOR COMPOUND NUCLEUS   LCSP-017
C                  XZ:    10/((2*SPIN(1)+1)*(2*AI(1)+1))/K**2           LCSP-018
C                  ID:    DIMENSION OF WORKING FIELD AX SINGLE PRECISIONLCSP-019
C                  LO(18) =.TRUE.  IDENTICAL PARTICLE AND TARGET        LCSP-020
C                  LO(81) =.TRUE.  COMPOUND NUCLEUS                     LCSP-021
C IN COMMON /NCJL/ NL:    INDICATIONS FOR EXPANSION OF CROSS-SECTIONS   LCSP-022
C                         IN LEGENDRE POLYNOMIALS                       LCSP-023
C WORKING FIELD:   A(7,*) AMPLITUDE MULTIPLIED BY A LEGENDRE POLYNOMIAL LCSP-024
C                         ALTERNATIVELY IN A(1-2,*) AND A(3-4,*)        LCSP-025
C                         COEFFICIENTS OF RECURRENCE IN A(5-7,*)        LCSP-026
C                  AX:    1 TO JML  LEGENDRE COEFFICIENTS OF CROSS-SECT.LCSP-027
C                         JML+1 TO JMT    FOR COMPOUND NUCLEUS          LCSP-028
C                         JMT+1 TO JMX    PRODUCT SPIN ROTATION MATRICESLCSP-029
C***********************************************************************LCSP-030
      IMPLICIT REAL*8 (A-H,O-Z)                                         LCSP-031
      LOGICAL LO(250),LS                                                LCSP-032
      DIMENSION F(2,JMAX,1),FCN(KMAX,1),IPI(11,1),MF(10,1),WV(18,1),AT(2LCSP-033
     1),NDL(2),A(7,1),AX(1)                                             LCSP-034
      COMMON /NCJL/ NCJ,NL(3)                                           LCSP-035
      COMMON /INOUT/ MR,MW,MS                                           LCSP-036
C DETERMINATION OF THE NUMBER OF LEGENDRE POLYNOMIALS                   LCSP-037
      NDL(1)=NL(2)                                                      LCSP-038
      NDL(2)=NL(3)                                                      LCSP-039
      IF (NDL(1).EQ.0) NDL(1)=(6*IPJ-3+3*JMIN)/2                        LCSP-040
      IF (NDL(2).EQ.0) NDL(2)=2*IPJ-1+JMIN                              LCSP-041
      WRITE (65,1000) WV(1,1),WV(12,1),WV(2,1),IPI(4,1),NCOLS           LCSP-042
      WRITE (MW,1001)                                                   LCSP-043
C LOOP ON LEVELS                                                        LCSP-044
      DO 35 JK=1,NCOLS                                                  LCSP-045
      IF (WV(3,JK).LT.0.D0) GO TO 35                                    LCSP-046
      IF (JK.GT.NCOLL) GO TO 32                                         LCSP-047
      JK1=IPI(6,JK)                                                     LCSP-048
      JK2=IPI(7,JK)                                                     LCSP-049
      JML=NDL(2)                                                        LCSP-050
      LS=JK.EQ.1.AND.WV(5,1).NE.0.D0                                    LCSP-051
      IF (LS) JML=NDL(1)                                                LCSP-052
      JMT=JML                                                           LCSP-053
      IF (JMT.GT.ID) CALL MEMO('LCSP',ID,JMT,2)                         LCSP-054
      DO 1 J=1,JMT                                                      LCSP-055
    1 AX(J)=0.D0                                                        LCSP-056
C LOOP ON AMPLITUDES                                                    LCSP-057
      DO 29 I=JK1,JK2                                                   LCSP-058
      IF (MF(6,I).EQ.99999) GO TO 3                                     LCSP-059
      M1=MF(5,I)                                                        LCSP-060
      M2=MF(6,I)                                                        LCSP-061
      M3=((IABS(M1+M2)+IABS(M1-M2))/2-JMIN)/2+1                         LCSP-062
      IF (JK.GT.NCOLL) GO TO 3                                          LCSP-063
      A1=0.25D0*DFLOAT(M1*M2)                                           LCSP-064
      MJ=2*M3+JMIN-2                                                    LCSP-065
      A2=0.5D0*DFLOAT(MJ)                                               LCSP-066
      X1=DFLOAT((MJ+M2)/2+1-M3)                                         LCSP-067
      X2=DFLOAT((MJ-M2)/2+1-M3)                                         LCSP-068
      X3=DFLOAT((MJ+M1)/2+1-M3)                                         LCSP-069
      X4=DFLOAT((MJ-M1)/2+1-M3)                                         LCSP-070
      A(7,M3)=0.D0                                                      LCSP-071
C COEFFICIENTS OF THE RECURRENCE                                        LCSP-072
      JM1=JML+IPJ                                                       LCSP-073
      JM=JM1+1                                                          LCSP-074
      IF (M3.GT.JM1) GO TO 3                                            LCSP-075
      DO 2 J=M3,JM1                                                     LCSP-076
      XJ=DFLOAT(J)                                                      LCSP-077
      A2=A2+1.D0                                                        LCSP-078
      A(6,J)=0.D0                                                       LCSP-079
      IF (A1.NE.0.D0) A(6,J)=A1/(A2*A2-A2)                              LCSP-080
      A(5,J)=DSQRT((X1+XJ)*(X2+XJ)*(X3+XJ)*(X4+XJ))/(A2*(2.D0*A2+1.D0)) LCSP-081
    2 A(7,J+1)=A(5,J)*(A2+A2+1.D0)/(A2+A2-1.D0)                         LCSP-082
    3 IF (M3.GT.JM) GO TO 29                                            LCSP-083
      DO 4 J=M3,JM                                                      LCSP-084
      A(1,J)=0.D0                                                       LCSP-085
      A(2,J)=0.D0                                                       LCSP-086
      A(3,J)=0.D0                                                       LCSP-087
      IF (J.GT.IPJ) GO TO 4                                             LCSP-088
      A(1,J)=F(1,J,I)                                                   LCSP-089
      A(2,J)=F(2,J,I)                                                   LCSP-090
    4 A(4,J)=0.D0                                                       LCSP-091
      IF (.NOT.LS) GO TO 24                                             LCSP-092
C COULOMB AMPLITUDE                                                     LCSP-093
      NS1=IPI(2,1)-1                                                    LCSP-094
      NS2=IPI(3,1)-1                                                    LCSP-095
      NSM=IABS(NS1-NS2)-JMIN                                            LCSP-096
      NSP=NS1+NS2-JMIN                                                  LCSP-097
      XS3=DFLOAT(NS1+NS2+2)                                             LCSP-098
      XS4=DFLOAT(NS1-NS2)                                               LCSP-099
      NST=NSP/2+1                                                       LCSP-100
      JMX=JMT+NST                                                       LCSP-101
      JMY=JMX+2                                                         LCSP-102
      IF (LO(18)) JMY=JMY+2*NL(1)                                       LCSP-103
      IF (JMY.GT.ID) CALL MEMO('LCSP',ID,JMY,2)                         LCSP-104
      DO 5 J=1,NST                                                      LCSP-105
    5 AX(JMT+J)=1.D0                                                    LCSP-106
C REDUCED ROTATION MATRIX ELEMENT                                       LCSP-107
      DO 9 I1=1,2                                                       LCSP-108
      MS1=2*MF(2*I1-1,I)-NS1-2                                          LCSP-109
      MS2=NS2-2*MF(2*I1,I)+2                                            LCSP-110
      MSP=IABS(MS1+MS2)-JMIN                                            LCSP-111
      NSQ=MAX0(NSM,MSP)/2+1                                             LCSP-112
      XS=MS1+MS2                                                        LCSP-113
      AT(I1)=1.D0                                                       LCSP-114
      IF (NSQ.EQ.1) GO TO 7                                             LCSP-115
      DO 6 J=2,NSQ                                                      LCSP-116
    6 AX(JMT+J-1)=0.D0                                                  LCSP-117
    7 IF (NSQ.EQ.NST) GO TO 9                                           LCSP-118
      NS=NSQ+1                                                          LCSP-119
      A2=0.D0                                                           LCSP-120
      A1=1.D0                                                           LCSP-121
      B2=0.D0                                                           LCSP-122
      DO 8 K=NS,NST                                                     LCSP-123
      A3=A2                                                             LCSP-124
      A2=A1                                                             LCSP-125
      B1=B2                                                             LCSP-126
      XJ=DFLOAT(2*K+JMIN-2)                                             LCSP-127
      B2=DSQRT((XJ**2-XS**2)*(XS3**2-XJ**2)*(XJ**2-XS4**2)/(XJ**2-1.D0))LCSP-128
     1/(2.D0*XJ)                                                        LCSP-129
      B3=DFLOAT(MS1-MS2)                                                LCSP-130
      IF (XJ.NE.2.D0) B3=B3-XS*XS3*XS4/(XJ*(XJ-2.D0))                   LCSP-131
      A1=(A2*B3-A3*B1)/B2                                               LCSP-132
      AX(JMT+K)=AX(JMT+K)*A1                                            LCSP-133
    8 AT(I1)=AT(I1)+A1**2                                               LCSP-134
    9 CONTINUE                                                          LCSP-135
      IJX=NL(1)                                                         LCSP-136
      A3=1.D0                                                           LCSP-137
      JP=IPJ                                                            LCSP-138
C MULTIPLICATION BY (1-COS), (1-COS**2) OR THEIR SQUARES                LCSP-139
   10 DO 12 IJ=1,IJX                                                    LCSP-140
      A1=0.D0                                                           LCSP-141
      B1=0.D0                                                           LCSP-142
      DO 11 J=M3,JP                                                     LCSP-143
      A2=A1                                                             LCSP-144
      B2=B1                                                             LCSP-145
      A1=A(1,J)                                                         LCSP-146
      B1=A(2,J)                                                         LCSP-147
      A(1,J)=A1-A3*(A(7,J)*A2+A(6,J)*A1+A(5,J)*A(1,J+1))                LCSP-148
   11 A(2,J)=B1-A3*(A(7,J)*B2+A(6,J)*B1+A(5,J)*A(2,J+1))                LCSP-149
      JP=JP+1                                                           LCSP-150
      A(1,JP)=-A3*A1*A(6,JP)                                            LCSP-151
   12 A(2,JP)=-A3*B1*A(6,JP)                                            LCSP-152
      A3=-A3                                                            LCSP-153
      IF (LO(18).AND.A3.LT.0.D0) GO TO 10                               LCSP-154
C INITIALISATION OF COULOMB PHASE SHIFTS                                LCSP-155
      C1=DSQRT(AT(1)*AT(2))                                             LCSP-156
      IF (AX(JMX).LT.0.D0) C1=-C1                                       LCSP-157
      C2=DFLOAT(IJX)                                                    LCSP-158
      C3=2.D0**(IJX-1)                                                  LCSP-159
      DO 23 IK=1,2                                                      LCSP-160
      NX=0                                                              LCSP-161
      NST1=NST                                                          LCSP-162
      DO 13 J=1,NST                                                     LCSP-163
      A1=2.D0*AX(JMT+J)/C1*DFLOAT(1-MOD(J+IK,2))                        LCSP-164
      IF (A1.NE.0.D0) NX=NX+1                                           LCSP-165
   13 A(3,J)=A1                                                         LCSP-166
      IF (NX.EQ.0) GO TO 23                                             LCSP-167
      AX(JMX+1)=-C2*C3*WV(5,1)/(C2*C2+WV(5,1)**2)                       LCSP-168
      AX(JMX+2)=-C3*WV(5,1)**2/(C2*C2+WV(5,1)**2)                       LCSP-169
      IF (LO(118)) GO TO 15                                             LCSP-170
      AX(JMX+1)=4.D0*C3*AX(JMX+1)                                       LCSP-171
      AX(JMX+2)=4.D0*C3*AX(JMX+2)                                       LCSP-172
      DO 14 J=1,IJX                                                     LCSP-173
      A2=DFLOAT(J)*(DFLOAT(J+IJX)**2+WV(5,1)**2)                        LCSP-174
      A1=-DFLOAT(IJX-J+1)*(DFLOAT(IJX+J)*DFLOAT(IJX+J-1)+WV(5,1)**2)/A2 LCSP-175
      B1=DFLOAT(IJX-J+1)*WV(5,1)/A2                                     LCSP-176
      AX(JMX+2*J+1)=AX(JMX+2*J-1)*A1-AX(JMX+2*J)*B1                     LCSP-177
   14 AX(JMX+2*J+2)=AX(JMX+2*J-1)*B1+AX(JMX+2*J)*A1                     LCSP-178
   15 I1=3                                                              LCSP-179
      DO 21 L=1,JM                                                      LCSP-180
      B1=2*L-1                                                          LCSP-181
C COULOMB PHASE SHIFT                                                   LCSP-182
      A1=AX(JMX+1)                                                      LCSP-183
      A2=AX(JMX+2)                                                      LCSP-184
      IF (LO(118)) GO TO 17                                             LCSP-185
      DO 16 J=1,IJX                                                     LCSP-186
      A1=A1+AX(JMX+2*J+1)                                               LCSP-187
   16 A2=A2+AX(JMX+2*J+2)                                               LCSP-188
   17 DO 18 J=1,NST1                                                    LCSP-189
      IF (LO(18).AND.MOD(L+IK,2).EQ.1) GO TO 18                         LCSP-190
      A(1,J)=A(1,J)+A1*A(I1,J)*B1                                       LCSP-191
      A(2,J)=A(2,J)+A2*A(I1,J)*B1                                       LCSP-192
   18 CONTINUE                                                          LCSP-193
      I2=7-I1                                                           LCSP-194
      IF (L.EQ.JM) GO TO 21                                             LCSP-195
C PRODUCT OF ROTATION MATRIX ELEMENTS BY NEXT PL                        LCSP-196
      B2=-(B1-1.D0)/(B1+1.D0)                                           LCSP-197
      B3=2.D0*B1/(B1+1.D0)                                              LCSP-198
      A1=0.D0                                                           LCSP-199
      DO 19 J=M3,NST1                                                   LCSP-200
      A2=A1                                                             LCSP-201
      A1=A(I1,J)                                                        LCSP-202
      A(I2,J)=B2*A(I2,J)+(A(7,J)*A2+A(6,J)*A1+A(5,J)*A(I1,J+1))*B3      LCSP-203
      IF (DABS(A(I2,J)).LT.1.D-10) A(I2,J)=0.D0                         LCSP-204
   19 CONTINUE                                                          LCSP-205
      IF (NST1.NE.JM) A(I2,NST1+1)=A(7,NST1+1)*A1*B3                    LCSP-206
      NST1=MIN0(NST1+1,JM)                                              LCSP-207
      A1=(B1+1.D0)*WV(5,1)                                              LCSP-208
      B2=2.D0*C2                                                        LCSP-209
      A3=.25D0*(B1+1.D0+B2)**2+WV(5,1)**2                               LCSP-210
      A2=.25D0*(B1+1.D0-B2)*(B1+1.D0+B2)-WV(5,1)**2                     LCSP-211
      B3=(AX(JMX+1)*A2-AX(JMX+2)*A1)/A3                                 LCSP-212
      AX(JMX+2)=(AX(JMX+1)*A1+AX(JMX+2)*A2)/A3                          LCSP-213
      AX(JMX+1)=B3                                                      LCSP-214
      IF (LO(118)) GO TO 21                                             LCSP-215
      DO 20 J=1,IJX                                                     LCSP-216
      B2=B2+2.D0                                                        LCSP-217
      A3=.25D0*(B1+1.D0+B2)**2+WV(5,1)**2                               LCSP-218
      A2=.25D0*(B1+1.D0-B2)*(B1+1.D0+B2)-WV(5,1)**2                     LCSP-219
      B3=(AX(JMX+2*J+1)*A2-AX(JMX+2*J+2)*A1)/A3                         LCSP-220
      AX(JMX+2*J+2)=(AX(JMX+2*J+1)*A1+AX(JMX+2*J+2)*A2)/A3              LCSP-221
   20 AX(JMX+2*J+1)=B3                                                  LCSP-222
   21 I1=I2                                                             LCSP-223
      DO 22 J=M3,JM                                                     LCSP-224
      A(3,J)=0.D0                                                       LCSP-225
   22 A(4,J)=0.D0                                                       LCSP-226
   23 CONTINUE                                                          LCSP-227
   24 B3=JMIN+2*M3-1                                                    LCSP-228
      I1=1                                                              LCSP-229
      I2=3                                                              LCSP-230
C COEFFICIENT OF OTHER PL                                               LCSP-231
      DO 28 L=1,JML                                                     LCSP-232
      A3=0.D0                                                           LCSP-233
      C1=B3                                                             LCSP-234
      IF (LO(18).AND.MOD(L,2).NE.1) GO TO 26                            LCSP-235
      DO 25 J=M3,IPJ                                                    LCSP-236
      A3=A3+(F(1,J,I)*A(I1,J)+F(2,J,I)*A(I1+1,J))/C1                    LCSP-237
   25 C1=C1+2.D0                                                        LCSP-238
      IF (MF(8,I).NE.0.) A3=A3+A3                                       LCSP-239
      AX(L)=AX(L)+A3*XZ                                                 LCSP-240
   26 IF (L.EQ.JML) GO TO 28                                            LCSP-241
      C1=DFLOAT(L)                                                      LCSP-242
      C2=-(C1-1.D0)/C1                                                  LCSP-243
      C3=(2.D0*C1-1.D0)/C1                                              LCSP-244
      I1=I2                                                             LCSP-245
      I2=4-I1                                                           LCSP-246
      A1=0.D0                                                           LCSP-247
      B1=0.D0                                                           LCSP-248
      DO 27 J=M3,JM1                                                    LCSP-249
      A2=A1                                                             LCSP-250
      B2=B1                                                             LCSP-251
      A1=A(I2,J)                                                        LCSP-252
      B1=A(I2+1,J)                                                      LCSP-253
      A(I1,J)=C2*A(I1,J)+(A(7,J)*A2+A(6,J)*A1+A(5,J)*A(I2,J+1))*C3      LCSP-254
   27 A(I1+1,J)=C2*A(I1+1,J)+(A(7,J)*B2+A(6,J)*B1+A(5,J)*A(I2+1,J+1))*C3LCSP-255
      A(I1,JM)=A(7,JM)*A1*C3                                            LCSP-256
      A(I1+1,JM)=A(7,JM)*B1*C3                                          LCSP-257
   28 CONTINUE                                                          LCSP-258
   29 CONTINUE                                                          LCSP-259
      WRITE (65,1002) JK,JML                                            LCSP-260
      IF (LS) WRITE (MW,1003) JK,IJX,JML                                LCSP-261
      IF (.NOT.LS) WRITE (MW,1004) JK,JML                               LCSP-262
      DO 30 LL=1,JML,5                                                  LCSP-263
      L=LL-1                                                            LCSP-264
      LM=MIN0(JML,LL+4)                                                 LCSP-265
   30 WRITE (MW,1005) L,(AX(M),M=LL,LM)                                 LCSP-266
      DO 31 LL=1,JML                                                    LCSP-267
      L=LL-1                                                            LCSP-268
      IF (LS) WRITE (65,1006) JK,L,AX(LL),IJX                           LCSP-269
      IF (.NOT.LS) WRITE (65,1007) JK,L,AX(LL)                          LCSP-270
   31 CONTINUE                                                          LCSP-271
   32 IF (LO(181)) GO TO 35                                             LCSP-272
      WRITE (65,1008) JK,IPK                                            LCSP-273
      WRITE (MW,1009) JK,IPK                                            LCSP-274
      DO 33 LL=1,IPK,5                                                  LCSP-275
      L=2*LL-2                                                          LCSP-276
      LM=MIN0(IPK,LL+4)                                                 LCSP-277
   33 WRITE (MW,1005) L,(FCN(M,JK),M=LL,LM)                             LCSP-278
      DO 34 LL=1,IPK                                                    LCSP-279
      L=2*LL-2                                                          LCSP-280
   34 WRITE (65,1010) JK,L,FCN(LL,JK)                                   LCSP-281
   35 CONTINUE                                                          LCSP-282
      RETURN                                                            LCSP-283
 1000 FORMAT ('<LEGENDRE>',F10.2,F10.5,F10.2,2I5)                       LCSP-284
 1001 FORMAT ('1 COEFFICIENTS OF LEGENDRE POLYNOMIALS DESCRIBING THE CROLCSP-285
     1SS-SECTIONS')                                                     LCSP-286
 1002 FORMAT (2I5,' COUPLED LEVEL, NUMBER OF VALUES')                   LCSP-287
 1003 FORMAT (/' DIRECT INTERACTION FOR LEVEL',I2,' MULTIPLIED BY (1-COSLCSP-288
     1(THETA))**(',I2,' )',I4,' COEFFICIENTS'/4X,'L',8X,'C(L)',14X,'C(L+LCSP-289
     21)',13X,'C(L+2)',13X,'C(L+3)',13X,'C(L+4)')                       LCSP-290
 1004 FORMAT (/' DIRECT INTERACTION FOR LEVEL',I2,',',I4,' COEFFICIENTS'LCSP-291
     1/4X,'L',8X,'C(L)',14X,'C(L+1)',13X,'C(L+2)',13X,'C(L+3)',13X,'C(L+LCSP-292
     24)')                                                              LCSP-293
 1005 FORMAT (I5,1P,5D19.10)                                            LCSP-294
 1006 FORMAT (2I5,1P,D20.10,5X,'*(1-COS(THETA)**(',I2,' )')             LCSP-295
 1007 FORMAT (2I5,1P,D20.10)                                            LCSP-296
 1008 FORMAT (2I5,' UNCOUPLED LEVEL, NUMBER OF VALUES')                 LCSP-297
 1009 FORMAT (/' COMPOUND NUCLEUS FOR LEVEL',I2,',',I4,' COEFFICIENTS (OLCSP-298
     1NLY EVEN ONES ARE GIVEN)'/4X,'L',8X,'C(L)',14X,'C(L+2)',13X,'C(L+4LCSP-299
     2)',13X,'C(L+6)',13X,'C(L+8)')                                     LCSP-300
 1010 FORMAT (2I5,1P,D20.10,5X,'COMPOUND NUCLEUS')                      LCSP-301
      END                                                               LCSP-302
C 01/01/04                                                      ECIS03  RESU-000
      SUBROUTINE RESU(IPI,SR,TX,JMAX,KMAX,NCOLL,NCOLS,MF,CM,MFM,FM,IPJ,IRESU-001
     1PK,DONN,NCOLR,NCO,COE,WV,WVM,FCN,NOI,XD,JMIN,NRZ,NJC,RES,AM,      RESU-002
     2EX,THE,DXX,SPG,CMB,XZ,NZZ,LO)                                     RESU-003
C COMPUTES CROSS-SECTIONS AND POLARISATIONS - COMPARE TO EXPERIMENTAL   RESU-004
C RESULTS -   OBTAINS EXPERIMENTAL NORMALISATIONS AND PARTIAL CHI2      RESU-005
C INPUT VARIABLES: IPI(J,I):PARITY OF THE NUCLEAR STATES (+/-) FOR J=1, RESU-006
C                           MULTIPLICITY OF PARTICLE AND TARGET J=2,3,  RESU-007
C                           FIRST/LAST AMPL. AND OBSERVABLE FOR EACH    RESU-008
C                           LEVEL FOR J=6 TO 9. (SEE CALX)              RESU-009
C                  SR:      HELICITY SCATTERING COEFFICIENTS            RESU-010
C                  TX:      INELASTIC CROSS-SECTIONS IN MILLIBARNS      RESU-011
C                           FOLLOWED BY HAUSER-FESHBACH COEFFICIENTS    RESU-012
C                  JMAX:    MAXIMUM NUMBER OF CHANNEL SPINS             RESU-013
C                  KMAX:    MAXIMUM NUMBER OF L FOR COMPOUND NUCLEUS    RESU-014
C                  NCOLL:   NUMBER OF COUPLED CHANNELS                  RESU-015
C                  NCOLS:   NUMBER OF CHANNELS WITH ANGULAR DISTRIBUTIONRESU-016
C                  MF,CM:   TABLES OF HELICITY, DESCRIPTION OF OBSERVA- RESU-017
C                           BLES ... ETC     SEE DEPH AND OBSE          RESU-018
C                  MFM,FM:  DESCRIPTION OF EXPERIMENTAL DATA   SEE LECD RESU-019
C                  IPJ:     NUMBER OF CHANNEL SPINS USED                RESU-020
C                  IPK:     NUMBER OF L FOR COMPOUND NUCLEUS            RESU-021
C                  DONN:    EXPERIMENTAL DATA:ANGLE, VALUE, EXPER. ERRORRESU-022
C                           ,ANG. WIDTH, ANG. ERROR AND CALCULATED ERRORRESU-023
C                  NCOLR:   NUMBER OF EXPERIMENTAL ANGULAR DISTRIBUTIONSRESU-024
C                  NCO,COE: INDICATIONS FOR OBSERVABLES     SEE OBSE    RESU-025
C                  WV(I,J): WAVE NUMBER AND COULOMB PARAMETER           RESU-026
C                  WVM:     SAME AS WV FOR THE CONTINUUM                RESU-027
C                  FCN:     COMPOUND NUCLEUS COEFFICIENTS               RESU-028
C                  NCONT:   NUMBER OF CONTINUA FOR COMPOUND NUCLEUS     RESU-029
C                  NOI:     STARTING AND FINAL ADDRESSES FOR CONTINUA   RESU-030
C                  XD:      ENERGY STEP FOR THE CONTINUA                RESU-031
C                  JMIN:    TWICE MINIMUM CHANNEL SPIN                  RESU-032
C                  NRZ:     LENGTH OF SR+TX TO BE SAVED FOR MINIMUM CHI2RESU-033
C                  NJC:     FIRST DIMENSION OF WORKING ARRAY EX         RESU-034
C                  CMB:     NUCLEAR MASS DIVIDED BY H BAR               RESU-035
C                  XZ:      CONVERSION FACTOR TO MILLIBARNS             RESU-036
C                  NZZ:     TOTAL LENGTH OF WORKING FIELD,RETURNS SPACE RESU-037
C                           USED. (SINGLE PRECISION)                    RESU-038
C                  LO(8)    IS TRUE FOR RELATIVISTIC KINEMATICS         RESU-039
C                  LO(31)   IS TRUE FOR EXPERIMENTAL DATA               RESU-040
C                  LO(32)   IS TRUE FOR AUTOMATIC SEARCH                RESU-041
C                  LO(33)   IS TRUE FOR SYMMETRISED CHI2                RESU-042
C                  LO(59)   IS TRUE TO PRINT RESULTS ON FILES 58 AND 59 RESU-043
C                  LO(64)   IS TRUE TO PRINT RESULTS ON FILES 64 AND 66 RESU-044
C                  LO(66)   IS TRUE FOR RESULTS AT EQUIDISTANT ANGLES   RESU-045
C                  LO(67)   IS TRUE FOR NO PLOT OF EXPERIMENTAL DATA    RESU-046
C                  LO(68)   IS TRUE FOR NO PLOT OF EQUIDISTANT C.-S.    RESU-047
C                  LO(69)   IS TRUE FOR NO PLOT OF EQUIDISTANT POLAR.   RESU-048
C                  LO(74)   IS TRUE TO PRINT INTERMEDIATE ELAPSED TIME  RESU-049
C                  LO(81)   IS TRUE FOR COMPOUND NUCLEUS                RESU-050
C                  LO(84)   IS TRUE FOR UNCOUPLED LEVELS                RESU-051
C                  LO(85)   IS TRUE FOR FISSION                         RESU-052
C                  LO(86)   IS TRUE FOR GAMMA EMISSION                  RESU-053
C                  LO(91)   IS TRUE FOR ANGLES IN THE LABORATORY SYSTEM RESU-054
C                  LO(216)  IS TRUE FOR NO OUTPUT                       RESU-055
C                  LO(218)  IS TRUE FOR LAST RESULTS                    RESU-056
C                  LO(226)  IS TRUE FOR SOME OBSERVABLES IN THE LAB. SY.RESU-057
C OUTPUT VARIABLES:RES:     DIFFERENCE BETWEEN EXPERIMENTAL AND CALCULA-RESU-058
C                           TED VALUE DIVIDED BY ERROR (FUNCTION OF FITERESU-059
C IN COMMON /DCHI/ CHI2:    (CALCULATED IN RESU)                        RESU-060
C                  CHI2M:   SMALLER PREVIOUS CHI2                       RESU-061
C IN COMMON /NCOMP/NSP:     NUMBER OF UNCOUPLED STATES FOR COMP. NUCLEUSRESU-062
C                  NDP:     ADDRESS OF FISSION AND GAMMA RESULTS        RESU-063
C WORKING SPACE:   AM:      FOR GENERAL PURPOSES                        RESU-064
C                  EX:      FOR OBSERVABLES                             RESU-065
C                  THE,DXX,SPG  FOR PLOTS                               RESU-066
C INFORMATIONS ARE ALSO IN LABELLED COMMON /TITR/ TITLE: HEAD OF OUTPUT RESU-067
C   IN COMMON /ANGL/                                                    RESU-068
C        THETA1,THETA2,DTHETA,DTHE FOR CALCULATION AT EQUIDISTANT ANGLESRESU-069
C   IN COMMON /SJMM/ JMM:   SAVE IPJ,IPK FOR MINIMUM CHI2               RESU-070
C   IN COMMON /NCJL/ NCJ:   FOR ELIMINATION OF FACTORS 1/(1-X*COS(THETA)RESU-071
C THE COMMON /RESC/ IS USED TO TRANSFER INFORMATIONS TO SCAT            RESU-072
C    SEE DESCRIPTION IN SCAT                                            RESU-073
C INTERNAL LOGICAL LT(3):                                               RESU-074
C          LT(1) IS .TRUE. FOR CROSS-SECTION IN MILLIBARNS              RESU-075
C          LT(2) IS .TRUE. FOR SYMMETRISED CHI2, CROSS-SECTION AND      RESU-076
C                NORMALISATION ERROR                                    RESU-077
C          LT(3) IS .TRUE. FOR GRAPH OF POLARISATION                    RESU-078
C          LKT IS .FALSE. FOR ANGLE IN THE LABORATORY SYSTEM            RESU-079
C***********************************************************************RESU-080
      IMPLICIT REAL*8 (A-H,O-Z)                                         RESU-081
      LOGICAL LO(250),LT(3),LKT                                         RESU-082
      DIMENSION IPI(11,1),SR(2,JMAX,1),TX(2),MFM(14,NCOLR),FM(7,NCOLR),MRESU-083
     1F(10,1),DONN(6,1),NCO(1),COE(1),WV(18,1),WVM(18,1),FCN(KMAX,1),NOIRESU-084
     2(2,1),XD(3,1),RES(1),AM(1),EX(NJC,4),THE(1),DXX(1),SPG(1),ZX(3),ZYRESU-085
     3(3),SP(6)                                                         RESU-086
      CHARACTER*1 SIGM(2)                                               RESU-087
      CHARACTER*4 LG(10),TITLE,CM(10,1)                                 RESU-088
      COMMON /TITR/ TITLE(18)                                           RESU-089
      COMMON /ANGL/ THETA1,THETA2,DTHETA,DTHE                           RESU-090
      COMMON /NCJL/ NCJ,NL(3)                                           RESU-091
      COMMON /SJMM/ JMM(2)                                              RESU-092
      COMMON /RESC/ EXCN,XA,XB,JN1,JN2,NTT,MTT,MT2,MT3,MT4,NOUT,NIX,NFX,RESU-093
     1KLT,LKT                                                           RESU-094
      COMMON /DCHI/ CHI2,CHI2M,YY(3)                                    RESU-095
      COMMON /NCOMP/ NSP(3),NRD(2),NCONT,NCOJ,NCONS,NIE,NCOLX,NDP,NDQ,ACRESU-096
     1N(20)                                                             RESU-097
      COMMON /INOUT/ MR,MW,MS                                           RESU-098
      DATA SIGM,LG,I3,I4,I5,I7,LT /'+','-',' COM','POUN','D NU','CLEU','RESU-099
     1S ',2*'    ','   D','IREC','T ',4*0,3*.FALSE./                    RESU-100
      NESP=0                                                            RESU-101
      MT3=IPI(2,1)                                                      RESU-102
      MT4=IPI(3,1)                                                      RESU-103
      IF (.NOT.LO(218)) GO TO 2                                         RESU-104
C COPY THE SCATTERING COEFFICIENTS OBTAINED FOR MINIMUM CHI2            RESU-105
      IPJ=JMM(1)                                                        RESU-106
      IPK=JMM(2)                                                        RESU-107
      DO 1 I=1,NRZ                                                      RESU-108
    1 SR(I,1,1)=SR(I+NRZ,1,1)                                           RESU-109
    2 IF (LO(131)) GO TO 29                                             RESU-110
C CALCULATION AT EXPERIMENTAL ANGLES                                    RESU-111
      KLT=1                                                             RESU-112
      CHI2=0.D0                                                         RESU-113
      NOUT=0                                                            RESU-114
      IF (LO(64)) WRITE (64,1000) WV(1,1),WV(12,1),WV(2,1),IPI(4,1),NCOLRESU-115
     1R                                                                 RESU-116
      KI=IPI(9,NCOLL)                                                   RESU-117
      JI=1                                                              RESU-118
      KA=0                                                              RESU-119
C PSEUDO LOOP ON THE ANGULAR DISTRIBUTIONS                              RESU-120
    3 AA=0.D0                                                           RESU-121
      BB=0.D0                                                           RESU-122
      CC=0.D0                                                           RESU-123
      NIX=KI+JI                                                         RESU-124
      NFX=NIX                                                           RESU-125
      LT(1)=MF(2,NIX).EQ.0                                              RESU-126
      LT(2)=LO(33).AND.((IABS(MF(2,NIX)).LE.1.OR.MF(2,NIX).EQ.19).AND.FMRESU-127
     1(5,JI).EQ.0.D0)                                                   RESU-128
      JIM=JI                                                            RESU-129
      JIN=JI                                                            RESU-130
    4 J1=MFM(2,JI)                                                      RESU-131
      J2=MFM(3,JI)                                                      RESU-132
      LKT=MFM(4,JI).NE.1                                                RESU-133
      IF (J2.GE.J1) GO TO 5                                             RESU-134
      JI=JI+1                                                           RESU-135
      GO TO 4                                                           RESU-136
    5 JIF=JI                                                            RESU-137
      J=J1                                                              RESU-138
C PSEUDO LOOP ON THE EXPERIMENTAL DATA                                  RESU-139
    6 DONN(6,J)=DONN(3,J)                                               RESU-140
      KC=1                                                              RESU-141
      THETA=DONN(1,J)                                                   RESU-142
    7 JI=JIM                                                            RESU-143
      ZX(KC)=0.D0                                                       RESU-144
      ZY(KC)=0.D0                                                       RESU-145
      IF (MF(2,KI+JI).NE.19) GO TO 63                                   RESU-146
C DATA ARE TOTAL CROSS SECTIONS                                         RESU-147
      I=IDINT(DONN(1,J)*1.000001D0)                                     RESU-148
      IF (I.GT.NCOLX-NCONT) GO TO 8                                     RESU-149
      IF (I.EQ.-1) ZX(1)=TX(1)                                          RESU-150
      IF (I.EQ.0) ZX(1)=TX(1)-TX(2)                                     RESU-151
      IF (I.EQ.0.AND.NCOLL.NE.NCOLX) ZX(1)=ZX(1)-TX(NCOLL+2)            RESU-152
      IF (I.LE.0) GO TO 18                                              RESU-153
      K=MAX0(I,1)+1+NCOLL                                               RESU-154
      ZX(1)=0.D0                                                        RESU-155
      IF (NCOLL.NE.NCOLX) ZX(1)=TX(NCOLL+I+1)                           RESU-156
      IF (I.LE.NCOLL) ZX(1)=ZX(1)+TX(I+1)                               RESU-157
      GO TO 18                                                          RESU-158
    8 IF (I.GT.NCOLX) GO TO 10                                          RESU-159
      IK=NCOLL+NCOLX-NCONT+1                                            RESU-160
      II=I+NCONT-NCOLX                                                  RESU-161
      IJ=NOI(1,II)                                                      RESU-162
      JI=NOI(2,II)                                                      RESU-163
      ZX(1)=0.D0                                                        RESU-164
      IF (IJ.GT.JI) GO TO 18                                            RESU-165
      DO 9 II=IJ,JI                                                     RESU-166
    9 ZX(1)=ZX(1)+TX(IK+II)                                             RESU-167
      GO TO 18                                                          RESU-168
   10 ZX(1)=TX(NDP+I-NCOLX)                                             RESU-169
      GO TO 18                                                          RESU-170
   11 IF (LT(1)) EX(2,KC)=1.D0                                          RESU-171
      ZX(KC)=(ZX(KC)*ZY(KC)+EX(2,KC)*EX(1,KC))/(ZY(KC)+EX(1,KC))        RESU-172
      ZY(KC)=ZY(KC)+EX(1,KC)                                            RESU-173
      IF (JI.EQ.JIF) GO TO 12                                           RESU-174
      JI=JI+1                                                           RESU-175
      GO TO 63                                                          RESU-176
   12 IF (LT(1)) ZX(KC)=ZX(KC)*ZY(KC)                                   RESU-177
      GO TO ( 13 , 14 , 15 ),KC                                         RESU-178
   13 IF (DONN(4,J).EQ.0) GO TO 18                                      RESU-179
      KC=2                                                              RESU-180
      THETA=DONN(1,J)-DONN(4,J)                                         RESU-181
      GO TO 7                                                           RESU-182
   14 KC=3                                                              RESU-183
      THETA=DONN(1,J)+DONN(4,J)                                         RESU-184
      GO TO 7                                                           RESU-185
   15 IF (LT(1)) GO TO 16                                               RESU-186
      ZX(1)=(ZX(1)*ZY(1)+ZX(2)*ZY(2)+ZX(3)*ZY(3))/(ZY(1)+ZY(2)+ZY(3))   RESU-187
      GO TO 17                                                          RESU-188
   16 ZX(1)=(ZX(1)+ZX(2)+ZX(3))/3.D0                                    RESU-189
   17 IF (DONN(5,J).NE.0.) DONN(6,J)=DSQRT(DONN(3,J)*DONN(3,J)+((ZX(2)-ZRESU-190
     1X(3))*DONN(2,J)*DONN(5,J)/(2.D0*DONN(4,J)*ZX(1)))**2)             RESU-191
   18 RES(J)=ZX(1)                                                      RESU-192
      IF (LT(2)) DONN(6,J)=DONN(6,J)*DSQRT(FM(4,JI)*RES(J)/DONN(2,J))   RESU-193
      XC=DONN(6,J)**2/FM(3,JI)                                          RESU-194
      AA=AA+RES(J)**2/XC                                                RESU-195
      BB=BB+RES(J)*DONN(2,J)/XC                                         RESU-196
      CC=CC+DONN(2,J)**2/XC                                             RESU-197
      J=J+1                                                             RESU-198
C END OF THE PSEUDO LOOP ON EXPERIMENTAL DATA                           RESU-199
      IF (J.LE.J2) GO TO 6                                              RESU-200
C COMPUTATION OF NORMALISATION AND CHI2                                 RESU-201
      IF (FM(5,JI).EQ.0.D0) GO TO 21                                    RESU-202
      XA=FM(3,JI)/FM(5,JI)**2                                           RESU-203
      AA=AA+XA                                                          RESU-204
      XB=FM(4,JI)                                                       RESU-205
      BB=BB+XA*XB                                                       RESU-206
      CC=CC+XA*XB*XB                                                    RESU-207
      IF (JI.EQ.NCOLR) GO TO 19                                         RESU-208
      IF (FM(4,JI).NE.FM(4,JI+1).OR.FM(5,JI).NE.FM(5,JI+1)) GO TO 19    RESU-209
      IF ((2*IABS(MF(2,NIX))-3)*(2*IABS(MF(2,NIX+1))-3).LT.0) GO TO 19  RESU-210
      JI=JI+1                                                           RESU-211
      JIM=JI                                                            RESU-212
      GO TO 4                                                           RESU-213
   19 IF (LT(2)) GO TO 20                                               RESU-214
      FM(6,JI)=BB/AA                                                    RESU-215
      GO TO 22                                                          RESU-216
   20 FM(6,JI)=DSQRT(CC/AA)                                             RESU-217
      GO TO 22                                                          RESU-218
   21 FM(6,JI)=FM(4,JI)                                                 RESU-219
   22 DO 27 JJ=JIN,JI                                                   RESU-220
      NIX=KI+JJ                                                         RESU-221
      J1=MFM(2,JJ)                                                      RESU-222
      J2=MFM(3,JJ)                                                      RESU-223
      J3=J2-J1+1                                                        RESU-224
      IF (LO(64)) WRITE (64,1001) (MF(J,NIX),J=1,2),J3,(CM(J,NIX),J=6,10RESU-225
     1)                                                                 RESU-226
      IF (J3.LE.0) GO TO 27                                             RESU-227
      IF (JJ.NE.JI) FM(6,JJ)=FM(6,JI)                                   RESU-228
      IF (LO(216)) GO TO 23                                             RESU-229
C OUTPUT OF THE CALCULATED AND THE EXPERIMENTAL VALUES                  RESU-230
      M=0                                                               RESU-231
      WRITE (MW,1002) TITLE                                             RESU-232
      IF (MF(2,NIX).NE.19) WRITE (MW,1003) MFM(1,JJ)                    RESU-233
      WRITE (MW,1004) (CM(J,NIX),J=6,10)                                RESU-234
   23 A1=FM(6,JJ)                                                       RESU-235
      A6=DSQRT(FM(3,JJ))                                                RESU-236
      AA=0.D0                                                           RESU-237
      IF (FM(5,JJ).EQ.0.D0) GO TO 24                                    RESU-238
      A2=(A1-FM(4,JJ))/FM(5,JJ)                                         RESU-239
      AA=A2**2                                                          RESU-240
      RES(J2+1)=A2*A6                                                   RESU-241
      CHI2=CHI2+RES(J2+1)**2                                            RESU-242
   24 DO 26 J=J1,J2                                                     RESU-243
      A2=DONN(2,J)/A1                                                   RESU-244
      A3=DONN(6,J)/A1                                                   RESU-245
      A4=((RES(J)-A2)/A3)**2                                            RESU-246
      IF (LO(216)) GO TO 25                                             RESU-247
      M=M+1                                                             RESU-248
      A5=DONN(3,J)/A1                                                   RESU-249
      THE(M)=DONN(1,J)                                                  RESU-250
      DXX(M)=A2                                                         RESU-251
      SPG(M)=RES(J)                                                     RESU-252
      WRITE (MW,1005) DONN(1,J),RES(J),A2,A5,A3,A4                      RESU-253
      IF (LO(64)) WRITE (64,1005) DONN(1,J),RES(J),A2,A5,A3,A4          RESU-254
   25 AA=AA+A4                                                          RESU-255
      RES(J)=(RES(J)-A2)*A6/A3                                          RESU-256
   26 CHI2=CHI2+RES(J)**2                                               RESU-257
      FM(7,JJ)=AA                                                       RESU-258
      IF (LO(216)) GO TO 27                                             RESU-259
      WRITE (MW,1006) (FM(J,JJ),J=3,7)                                  RESU-260
      IF (MF(1,NIX).EQ.19) GO TO 27                                     RESU-261
      IF (LO(74)) CALL HORA                                             RESU-262
      IF (LO(67)) GO TO 27                                              RESU-263
      LT(3)=.NOT.(LT(1).OR.MF(2,NIX).EQ.1.OR.MF(2,NIX).EQ.19)           RESU-264
      CALL GRAL(THE,SPG,DXX,M,MF(1,NIX),CM(1,NIX),1,LT(3),.FALSE.)      RESU-265
   27 CONTINUE                                                          RESU-266
      JI=JI+1                                                           RESU-267
C END OF THE PSEUDO LOOP ON ANGULAR DISTRIBUTIONS                       RESU-268
      IF (JI.LE.NCOLR) GO TO 3                                          RESU-269
      IF (.NOT.LO(216)) WRITE (MW,1007) CHI2                            RESU-270
      IF (CHI2.GT.CHI2M.OR.LO(132)) GO TO 29                            RESU-271
      JMM(1)=IPJ                                                        RESU-272
      JMM(2)=IPK                                                        RESU-273
      CHI2M=CHI2                                                        RESU-274
C IF THE CHI2 DECREASED, SAVE THE SCATTERING COEFFICIENTS               RESU-275
      DO 28 I=1,NRZ                                                     RESU-276
   28 SR(I+NRZ,1,1)=SR(I,1,1)                                           RESU-277
   29 IF (LO(216)) GO TO 62                                             RESU-278
      LKT=LO(191)                                                       RESU-279
      IF (LO(66).AND.LO(181).AND.LO(159)) GO TO 62                      RESU-280
C COMPUTATION AT EQUIDISTANT ANGLES                                     RESU-281
      WRITE (MW,1002) TITLE                                             RESU-282
      JG=IDINT((THETA2-THETA1)/DTHETA+1.5D0)                            RESU-283
      IF (LO(64)) WRITE (66,1008) WV(1,1),WV(12,1),WV(2,1),IPI(4,1),NCOLRESU-284
     1S                                                                 RESU-285
      IF (LO(64)) WRITE (85,1008) WV(1,1),WV(12,1),WV(2,1),IPI(4,1),NCOLRCN
     1S                                                                 RCN
      IF (LO(64)) WRITE (86,1008) WV(1,1),WV(12,1),WV(2,1),IPI(4,1),NCOLRCN
     1S                                                                 RCN
      IF (LO(159)) GO TO 30                                             RESU-286
      ND=1                                                              RESU-287
      IF (WV(5,1).EQ.0.D0) ND=3                                         RESU-288
      WRITE (58,1009) WV(1,1),WV(12,1),WV(2,1),IPI(4,1),ND              RESU-289
      WRITE (55,'(1x,F10.3,$)') WV(12,1)                                RCN
      IF (NCOLS.NE.1) WRITE (59,1010) WV(1,1),WV(12,1),WV(2,1),IPI(4,1),RESU-290
     1NCOLS-1                                                           RESU-291
   30 IF (WV(5,1).NE.0.D0) GO TO 31                                     RESU-292
      WRITE (MW,1011) TX(1)                                             RESU-293
      IF (LO(59)) WRITE (58,1012) TX(1)                                 RESU-294
      IF (LO(59)) WRITE (55,'(3x,F10.2,$)') TX(1)                       RCN
   31 RX=TX(1)-TX(2)                                                    RESU-295
      IF (LO(59)) WRITE (58,1012) RX                                    RESU-296
      IF (LO(59)) THEN                                                  RCN
        IF (WV(5,1).NE.0.D0) THEN                                       RCN
            WRITE (55,'(1x,F10.2)') RX                                  RCN
        ELSE                                                            RCN
            WRITE (55,'(1x,F10.2,$)') RX                                RCN
        ENDIF                                                           RCN
      ENDIF                                                             RCN
      IF (LO(81)) GO TO 32                                              RESU-297
      WRITE (MW,1013) RX                                                RESU-298
      GO TO 42                                                          RESU-299
C COMPOUND NUCLEUS RESULTS                                              RESU-300
   32 WRITE (MW,1014) RX                                                RESU-301
      IF (LO(59)) WRITE (58,1012) RX                                    RESU-302
      IF (LO(59)) WRITE (55,'(1x,F10.2,$)') RX                          RCN
      NDP=2*NCOLL+NSP(1)+1                                              RESU-303
      RX=RX-TX(NCOLL+2)                                                 RESU-304
      WRITE (MW,1015) RX                                                RESU-305
      IF (LO(85)) WRITE (MW,1016) TX(NDP+1)                             RESU-306
      IF (LO(86)) WRITE (MW,1017) TX(NDP+2)                             RESU-307
      RX=TX(NDP+1)+TX(NDP+2)                                            RESU-308
      WRITE (MW,1018)                                                   RESU-309
      RY=0.D0                                                           RESU-310
      DO 33 I=1,NCOLL                                                   RESU-311
      II=IPI(1,I)+1                                                     RESU-312
      SP2=0.5D0*DFLOAT(IPI(3,I)-1)                                      RESU-313
      RY=RY+TX(NCOLL+I+1)                                               RESU-314
   33 WRITE (MW,1019) I,SP2,SIGM(II),WV(3,I),TX(NCOLL+I+1)              RESU-315
      WRITE (MW,1020) RY                                                RESU-316
      RX=RX+RY                                                          RESU-317
      IF (LO(184)) GO TO 41                                             RESU-318
      IF (NCOLL.EQ.NCOLS) GO TO 35                                      RESU-319
      WRITE (MW,1021)                                                   RESU-320
      RY=0.D0                                                           RESU-321
      N1=NCOLL+1                                                        RESU-322
      DO 34 I=N1,NCOLS                                                  RESU-323
      II=IPI(1,I)+1                                                     RESU-324
      SP2=0.5D0*DFLOAT(IPI(3,I)-1)                                      RESU-325
      RY=RY+TX(NCOLL+I+1)                                               RESU-326
   34 WRITE (MW,1019) I,SP2,SIGM(II),WV(3,I),TX(NCOLL+I+1)              RESU-327
      WRITE (MW,1020) RY                                                RESU-328
      RX=RX+RY                                                          RESU-329
   35 NSP1=NSP(3)                                                       RESU-330
      IF (NCONT.NE.0) NSP1=NSP1-NIE                                     RESU-331
      IF (NSP1.LT.1) GO TO 37                                           RESU-332
      WRITE (MW,1022)                                                   RESU-333
      RY=0.D0                                                           RESU-334
      DO 36 I=1,NSP1                                                    RESU-335
      J=I+NCOLS                                                         RESU-336
      II=IPI(1,J)+1                                                     RESU-337
      SP2=0.5D0*DFLOAT(IPI(3,J)-1)                                      RESU-338
      RY=RY+TX(NCOLL+J+1)                                               RESU-339
   36 WRITE (MW,1019) J,SP2,SIGM(II),WV(3,J),TX(NCOLL+J+1)              RESU-340
      WRITE (MW,1020) RY                                                RESU-341
      RX=RX+RY                                                          RESU-342
   37 IF (NCONT.EQ.0) GO TO 41                                          RESU-343
      IK=NCOLL+NCOLX-NCONT+1                                            RESU-344
      DO 40 I=1,NCONT                                                   RESU-345
      IJ=NOI(1,I)                                                       RESU-346
      JI=NOI(2,I)                                                       RESU-347
      RY=0.D0                                                           RESU-348
      IF (IJ.GT.JI) GO TO 40                                            RESU-349
      DO 38 II=IJ,JI                                                    RESU-350
   38 RY=RY+TX(IK+II)                                                   RESU-351
      WRITE (MW,1023) I,RY                                              RESU-352
      RX=RX+RY                                                          RESU-353
      DO 39 II=IJ,JI                                                    RESU-354
      RY=TX(IK+II)/XD(2,II)                                             RESU-355
   39 WRITE (MW,1024) II,WVM(3,II),XD(2,II),TX(IK+II),RY                RESU-356
   40 CONTINUE                                                          RESU-357
   41 WRITE (MW,1025) RX                                                RESU-358
      WRITE (MW,1002) TITLE                                             RESU-359
   42 INIV=1                                                            RESU-360
      SP2=0.5D0*DFLOAT(IPI(3,INIV)-1)                                   RESU-361
      WRITE (MW,1026) SP2,SIGM(IPI(1,INIV)+1)                           RESU-362
      NOUT=0                                                            RESU-363
      KLT=2                                                             RESU-364
C PSEUDO DO LOOP ON LEVELS                                              RESU-365
   43 IF (WV(3,INIV).GT.0.D0) GO TO 44                                  RESU-366
      WRITE (MW,1027) INIV                                              RESU-367
      IF (LO(64)) WRITE (66,1028) INIV,SP2,SIGM(IPI(1,INIV)+1)          RESU-368
      GO TO 57                                                          RESU-369
   44 RX=TX(INIV+1)                                                     RESU-370
      IF (LO(81)) RX=RX+TX(NCOLL+INIV+1)                                RESU-371
      IF (INIV.EQ.1) GO TO 45                                           RESU-372
      WRITE (MW,1002) TITLE                                             RESU-373
      WRITE (MW,1029) INIV,SP2,SIGM(IPI(1,INIV)+1)                      RESU-374
      WRITE (MW,1030) RX                                                RESU-375
      GO TO 46                                                          RESU-376
   45 IF (WV(5,1).NE.0.D0) GO TO 47                                     RESU-377
      WRITE (MW,1031) RX                                                RESU-378
   46 IF (LO(81)) WRITE (MW,1032) TX(INIV+1)                            RESU-379
      IF (LO(159)) GO TO 47                                             RESU-380
      IF (INIV.EQ.1) WRITE (58,1012) RX                                 RESU-381
      IF (INIV.EQ.1) WRITE (55,'(1x,F10.2)') RX                         RCN
      IF (INIV.NE.1) WRITE (59,1033) RX,INIV-1                          RESU-382
   47 IF (LO(81)) WRITE (MW,1034) TX(NCOLL+INIV+1)                      RESU-383
      IF (LO(66)) GO TO 62                                              RESU-384
      IF (JG.LE.0) GO TO 57                                             RESU-385
      THETB=THETA1                                                      RESU-386
      IJ=0                                                              RESU-387
      II=1                                                              RESU-388
C PSEUDO DO LOOP ON ANGLES                                              RESU-389
   48 THE(II)=THETB                                                     RESU-390
      THETA=THETB                                                       RESU-391
      KC=1                                                              RESU-392
      GO TO 64                                                          RESU-393
   49 DXX(II)=EX(I5,1)                                                  RESU-394
      IF (LO(81)) GO TO 50                                              RESU-395
      I1=MIN0(I3,7)                                                     RESU-396
      WRITE (MW,1035) THETB,(EX(K,1),K=2,I1)                            RESU-397
      GO TO 51                                                          RESU-398
   50 I1=MIN0(I3,5)                                                     RESU-399
      IF (I1.LT.3) GO TO 52                                             RESU-400
      WRITE (MW,1035) THETB,EX(2,1),EX(I3+1,1),EX(I4,1),(EX(K,1),K=3,I1)RESU-401
   51 IF (I1.GE.I3) GO TO 53                                            RESU-402
      I2=I1+1                                                           RESU-403
      I1=MIN0(I1+5,I3)                                                  RESU-404
      WRITE (MW,1036) (EX(K,1),K=I2,I1)                                 RESU-405
      GO TO 51                                                          RESU-406
   52 WRITE (MW,1035) THETB,EX(2,1),EX(I3+1,1),EX(I4,1)                 RESU-407
   53 IF (LO(164)) GO TO 54                                             RESU-408
      WRITE (66,1037) (MF(2,NIX+K-2),THETA,EX(K,1),(CM(L,NIX+K-2),L=6,10RESU-409
     1),K=2,I3)                                                         RESU-410
      DO K=2,I3                                                         RCN
        WRITE (83+K,'(1x,F5.1,1x,e12.6)') THETA,EX(K,1)                 RCN
      ENDDO                                                             RCN
      IF (LO(81)) WRITE (66,1038) THETA,EX(I3+1,1),(LG(K),K=1,5),THETA,ERESU-411
     1X(I4,1),(LG(K),K=6,10)                                            RESU-412
   54 IF (I7.LE.0) GO TO 56                                             RESU-413
      DO 55 K=1,I7                                                      RESU-414
      IJ=IJ+1                                                           RESU-415
   55 SPG(IJ)=EX(K+I5,1)                                                RESU-416
   56 THETB=THETB+DTHETA                                                RESU-417
      II=II+1                                                           RESU-418
C END OF THE PSEUDO DO LOOP ON ANGLES                                   RESU-419
      IF (II.LE.JG) GO TO 48                                            RESU-420
      IF (LO(168)) CALL GRAL(THE,DXX,DXX,JG,MF(1,NFX-I7),CM(1,NFX-I7),1,RESU-421
     1.FALSE.,.TRUE.)                                                   RESU-422
      IF (LO(169).AND.I7.GT.0) CALL GRAL(THE,SPG,DXX,JG,MF(1,NIX+I5-1),CRESU-423
     1M(1,NIX+I5-1),I7,.TRUE.,.TRUE.)                                   RESU-424
      IF (LO(74)) CALL HORA                                             RESU-425
   57 INIV=INIV+1                                                       RESU-426
      SP2=0.5D0*DFLOAT(IPI(3,INIV)-1)                                   RESU-427
C END OF THE PSEUDO DO LOOP ON LEVELS                                   RESU-428
      IF (INIV.LE.NCOLL) GO TO 43                                       RESU-429
      IF (LO(181)) GO TO 62                                             RESU-430
      JN2=NCOLL                                                         RESU-431
      KLT=3                                                             RESU-432
   58 JN1=JN2+1                                                         RESU-433
      JN2=MIN0(JN1+5,NCOLS)                                             RESU-434
      IS=JN1-1                                                          RESU-435
      IF (JN1.GT.JN2) GO TO 62                                          RESU-436
      DO 59 I=JN1,JN2                                                   RESU-437
   59 SP(I-IS)=0.5D0*DFLOAT(IPI(3,I)-1)                                 RESU-438
      WRITE (MW,1002) TITLE                                             RESU-439
      WRITE (MW,1039) JN1,JN2,(I,SP(I-IS),SIGM(IPI(1,I)+1),I=JN1,JN2)   RESU-440
      THETB=THETA1                                                      RESU-441
      GO TO 61                                                          RESU-442
   60 WRITE (MW,1040) THETB,(EX(I-IS,1),I=JN1,JN2)                      RESU-443
      THETB=THETB+DTHETA                                                RESU-444
   61 THETA=THETB                                                       RESU-445
      KC=1                                                              RESU-446
      IF (THETB.LE.THETA2) GO TO 71                                     RESU-447
      GO TO 58                                                          RESU-448
   62 NZZ=2*NESP                                                        RESU-449
      RETURN                                                            RESU-450
C FOR EXPERIMENTAL DATA                                                 RESU-451
   63 IF (JI.EQ.KA) GO TO 71                                            RESU-452
      INIV=MFM(1,JI)                                                    RESU-453
      KA=JI                                                             RESU-454
      GO TO 65                                                          RESU-455
C FOR EQUIDISTANT ANGLES                                                RESU-456
   64 IF (INIV.EQ.NOUT) GO TO 71                                        RESU-457
   65 NOUT=INIV                                                         RESU-458
C CHANGE OF LEVEL                                                       RESU-459
      JN1=IPI(6,NOUT)                                                   RESU-460
      JN2=IPI(7,NOUT)                                                   RESU-461
      MT1=IPI(2,NOUT)                                                   RESU-462
      MT2=IPI(3,NOUT)                                                   RESU-463
      NTT=JN2+1-JN1                                                     RESU-464
      MTT=MT1*MT2*MT3*MT4                                               RESU-465
      M2=1+2*MTT                                                        RESU-466
      M3=M2+2*NTT                                                       RESU-467
      M4=M3+IPJ+NCJ                                                     RESU-468
      IF (LO(226)) M4=MAX0(M4,6*MTT)                                    RESU-469
      NESP=MAX0(NESP,M4)                                                RESU-470
      IF (2*M4.GT.NZZ) CALL MEMO('RESU',NZZ,2*M4,2)                     RESU-471
      IF (LKT) GO TO 67                                                 RESU-472
      IF (LO(8)) GO TO 66                                               RESU-473
      XA=1.D0                                                           RESU-474
      XB=WV(4,1)*WV(1,NOUT)/(WV(4,NOUT)*WV(2,1))                        RESU-475
      GO TO 67                                                          RESU-476
   66 XA=DSQRT(1.D0+(WV(4,1)/(CMB*WV(2,1)))**2)                         RESU-477
      XB=DSQRT(WV(1,NOUT)**2+(WV(4,NOUT)/CMB)**2)*WV(4,1)/(WV(4,NOUT)*WVRESU-478
     1(2,1))                                                            RESU-479
   67 IF (KLT.NE.2) GO TO 71                                            RESU-480
C FOR EQUIDISTANT ANGLES                                                RESU-481
      NIX=IPI(8,INIV)                                                   RESU-482
      NFX=IPI(9,INIV)                                                   RESU-483
      I4=2+NFX-NIX                                                      RESU-484
      I3=I4                                                             RESU-485
      I5=2                                                              RESU-486
      I8=I4-1                                                           RESU-487
      IF (I4.GT.2.AND.MF(2,NIX+1).EQ.1) I5=3                            RESU-488
      I7=I4-I5                                                          RESU-489
      IF (LO(81)) GO TO 68                                              RESU-490
      NGX=MIN0(NFX,NIX+5)                                               RESU-491
      WRITE (MW,1041) ((CM(L,K),L=6,10),K=NIX,NGX)                      RESU-492
      GO TO 70                                                          RESU-493
   68 I4=I4+2                                                           RESU-494
      I8=I8+2                                                           RESU-495
      NGX=MIN0(NFX,NIX+3)                                               RESU-496
      NJX=NIX+1                                                         RESU-497
      IF (NGX.GE.NJX) GO TO 69                                          RESU-498
      WRITE (MW,1041) (CM(L,NIX),L=6,10),LG                             RESU-499
      GO TO 70                                                          RESU-500
   69 WRITE (MW,1041) (CM(L,NIX),L=6,10),LG,((CM(L,K),L=6,10),K=NJX,NGX)RESU-501
   70 IF (LO(64)) WRITE (66,1042) INIV,SP2,SIGM(IPI(1,INIV)+1),I8,JG    RESU-502
      IF (LO(64)) WRITE (85,1042) INIV,SP2,SIGM(IPI(1,INIV)+1),I8,JG    RCN
      IF (LO(64)) WRITE (86,1042) INIV,SP2,SIGM(IPI(1,INIV)+1),I8,JG    RCN
      IF (NGX.EQ.NFX) GO TO 71                                          RESU-503
      NJX=NGX+1                                                         RESU-504
      NGX=MIN0(NFX,NJX+4)                                               RESU-505
      WRITE (MW,1043) ((CM(L,K),L=6,10),K=NJX,NGX)                      RESU-506
      IF (NGX.LT.NFX) GO TO 70                                          RESU-507
   71 CALL SCAT(SR,MF,JMAX,KMAX,THETA,FCN,IPJ,IPK,CMB,NCO,COE,IPI,MT1,AMRESU-508
     1,AM(M2),AM(M3),EX(1,KC),WV,NCJ,JMIN,XZ,LO)                        RESU-509
      GO TO ( 11 , 72 , 73 ) , KLT                                      RESU-510
   72 IF (LO(181)) GO TO 73                                             RESU-511
      EX(I4-1,KC)=EXCN                                                  RESU-512
      EX(I4,KC)=EX(2,KC)-EXCN                                           RESU-513
   73 IF (DTHE.EQ.0.) GO TO ( 49 , 49 , 60 ) , KLT                      RESU-514
      GO TO ( 74 , 75 , 76 ),KC                                         RESU-515
   74 KC=2                                                              RESU-516
      THETA=THETB-DTHE                                                  RESU-517
      GO TO 71                                                          RESU-518
   75 KC=3                                                              RESU-519
      THETA=THETB+DTHE                                                  RESU-520
      GO TO 71                                                          RESU-521
   76 IF (KLT.EQ.3) GO TO 79                                            RESU-522
      AA=EX(1,1)+EX(1,2)+EX(1,3)                                        RESU-523
      DO 78 K=2,I4                                                      RESU-524
      IF ((K.GT.I5).AND.(K.LE.I3)) GO TO 77                             RESU-525
      EX(K,1)=(EX(K,1)+EX(K,2)+EX(K,3))/3.D0                            RESU-526
      GO TO 78                                                          RESU-527
   77 EX(K,1)=(EX(K,1)*EX(1,1)+EX(K,2)*EX(1,2)+EX(K,3)*EX(1,3))/AA      RESU-528
   78 CONTINUE                                                          RESU-529
      GO TO 49                                                          RESU-530
   79 DO 80 K=JN1,JN2                                                   RESU-531
   80 EX(K-IS,1)=(EX(K-IS,1)+EX(K-IS,2)+EX(K-IS,3))/3.D0                RESU-532
      GO TO 60                                                          RESU-533
 1000 FORMAT ('<EXP.DAT.>',F10.2,F10.5,F10.2,2I5)                       RESU-534
 1001 FORMAT (3I5,5A4)                                                  RESU-535
 1002 FORMAT ('1',5X,18A4//)                                            RESU-536
 1003 FORMAT (//30X,'**********   STATE',I5,'    **********'//)         RESU-537
 1004 FORMAT (//42X,5A4//10X,'ANGLE',10X,'CALC. VAL.',11X,'EXP. VAL.',10RESU-538
     1X,'EXP. ERROR',10X,'COR. ERROR',13X,'CHI2'/)                      RESU-539
 1005 FORMAT (6X,F10.3,5D20.5)                                          RESU-540
 1006 FORMAT (//' WEIGHT IN THE CHI2',8X,D15.5/' EXPERIMENTAL NORMALISATRESU-541
     1ION',D15.5/' NORMALISATION ERROR',7X,D15.5/' CALCULATED NORMALISATRESU-542
     2ION',2X,D15.5//' ***** CHI2 =',D15.6,'   *****'/)                 RESU-543
 1007 FORMAT (/' ************ CHI2 **********',D20.10//)                RESU-544
 1008 FORMAT ('<ANG.DIS.>',F10.2,F10.5,F10.2,2I5)                       RESU-545
 1009 FORMAT ('<CROSS-S.>',F10.2,F10.5,F10.2,2I5)                       RESU-546
 1010 FORMAT ('<INE.C.S.>',F10.2,F10.5,F10.2,2I5)                       RESU-547
 1011 FORMAT (6X,'==> TOTAL CROSS SECTION =',F14.6,' MILLIBARNS')       RESU-548
C1012 FORMAT (D12.5)                                                    RESU-549
 1012 FORMAT (D15.8)                                                    RCN
 1013 FORMAT (' TOTAL REACTION CROSS SECTION =',F14.6,' MILLIBARNS')    RESU-550
 1014 FORMAT (' TOTAL REACTION CROSS SECTION =',F14.6,' MILLIBARNS',11X,RESU-551
     1'( INCLUDING COMPOUND ELASTIC )')                                 RESU-552
 1015 FORMAT (' TOTAL DIRECT REACTION CROSS SECTION =',F14.6,' MILLIBARNRESU-553
     1S',4X,'( WITHOUT COMPOUND ELASTIC )')                             RESU-554
 1016 FORMAT (8X,'FISSION CROSS SECTION =',F14.6,' MILLIBARNS')         RESU-555
 1017 FORMAT (6X,'GAMMA RAY CROSS SECTION =',F14.6,' MILLIBARNS')       RESU-556
 1018 FORMAT (/'  COMPOUND CROSS SECTION FOR SCATTERING TO COUPLED LEVELRESU-557
     1S'/'  ======================================================='//' RESU-558
     2  LEVEL     SPIN       ENERGY       CROSS SECTION'/)              RESU-559
 1019 FORMAT (I5,F9.1,A1,'   AT',F10.5,' MEV',F14.5)                    RESU-560
 1020 FORMAT (/' SUM OF COMPOUND CONTRIBUTIONS',F14.6,' MILLIBARNS')    RESU-561
 1021 FORMAT (/'  COMPOUND CROSS SECTION FOR SCATTERING TO UNCOUPLED LEVRESU-562
     1ELS WITH ANGULAR DISTRIBUTION'/'  ================================RESU-563
     2==================================================='//'   LEVEL   RESU-564
     3  SPIN       ENERGY       CROSS SECTION'/)                        RESU-565
 1022 FORMAT (/'  COMPOUND CROSS SECTION FOR SCATTERING TO LEVELS WITHOURESU-566
     1T ANGULAR DISTRIBUTION'/'  =======================================RESU-567
     2====================================='//'   LEVEL     SPIN       ERESU-568
     3NERGY       CROSS SECTION'/)                                      RESU-569
 1023 FORMAT (/' CONTINUUM',I4/' TOTAL COMPOUND REACTION CROSS SECTION =RESU-570
     1',F14.6,' MILLIBARNS'//8X,' ENERGY     STEP     CONTRIBUTION  VALURESU-571
     2E (MILLIBARNS/MEV)'/)                                             RESU-572
 1024 FORMAT (2X,I3,2F10.5,2F15.5)                                      RESU-573
 1025 FORMAT (/' TOTAL SUM OF COMPOUND CONTRIBUTIONS',F14.6,' MILLIBARNSRESU-574
     1')                                                                RESU-575
 1026 FORMAT (/' ELASTIC SCATTERING ON THE TARGET STATE OF SPIN =',F5.1,RESU-576
     1A1)                                                               RESU-577
 1027 FORMAT (//' CLOSED CHANNEL FOR THE TARGET STATE',I3)              RESU-578
 1028 FORMAT (I5,F5.1,A1,3X,'0',5X,'CLOSED CHANNEL')                    RESU-579
 1029 FORMAT (/' INELASTIC SCATTERING TO THE TARGET STATE',I3,'  SPIN ='RESU-580
     1,F5.1,A1)                                                         RESU-581
 1030 FORMAT (/6X,'INELASTIC CROSS SECTION =',F14.6,' MILLIBARNS')      RESU-582
 1031 FORMAT (/'  TOTAL ELASTIC CROSS SECTION =',F14.6,' MILLIBARNS')   RESU-583
 1032 FORMAT (9X,'DIRECT CROSS SECTION =',F14.6,' MILLIBARNS')          RESU-584
C1033 FORMAT (D12.5,I3)                                                 RESU-585
 1033 FORMAT (D15.8,1x,I3)                                              RCN
 1034 FORMAT (7X,'COMPOUND CROSS SECTION =',F14.6,' MILLIBARNS')        RESU-586
 1035 FORMAT (1X,F10.3,D16.5,2X,5F18.7)                                 RESU-587
 1036 FORMAT (29X,5F18.7)                                               RESU-588
 1037 FORMAT (I3,2D12.5,5X,4A4,A2)                                      RESU-589
 1038 FORMAT (' -4',2D12.5,5X,4A4,A2/' -5',2D12.5,5X,4A4,A2)            RESU-590
 1039 FORMAT (/' ANGULAR DISTRIBUTION OF COMPOUND SCATTERING ON LEVELS',RESU-591
     1I3,' TO',I3//6X,'ANGLE',6(I6,'-LEVEL',F5.1,A1))                   RESU-592
 1040 FORMAT (1X,F10.3,6F18.7)                                          RESU-593
 1041 FORMAT (/6X,'ANGLE ',6(4A4,A2))                                   RESU-594
 1042 FORMAT (I5,F5.1,A1,I4,I5)                                         RESU-595
 1043 FORMAT (30X,5(4A4,A2))                                            RESU-596
      END                                                               RESU-597
C 01/01/04                                                      ECIS03  SCAT-000
      SUBROUTINE SCAT(FR,MF,JMAX,KMAX,THETA,FCN,IPJ,IPK,CMB,NCO,COE,IPI,SCAT-001
     1MT1,AB,A,B,EX,WV,NCJ,JMIN,XZ,LO)                                  SCAT-002
C COMPUTATION OF OBSERVABLES                                            SCAT-003
C INPUT VARIABLES: FR:    SCATTERING COEFF. IN THE HELICITY FORMALISM   SCAT-004
C                  MF:    TABLES OF HELICITY,DESCRIPTION OF OBSERVABLES,SCAT-005
C                         .... ETC   SEE DEPH AND OBSE                  SCAT-006
C                  JMAX:  DIMENSION FOR FR                              SCAT-007
C                  KMAX:  DIMENSION FOR FCN                             SCAT-008
C                  THETA: SCATTERING ANGLE                              SCAT-009
C                  FCN:   COMPOUND NUCLEUS COEFFICIENTS                 SCAT-010
C                  IPJ:   NUMBER OF J VALUES USED FOR SCATTERING        SCAT-011
C                  IPK:   NUMBER OF L VALUES USED FOR COMPOUND NUCLEUS  SCAT-012
C                  CMB:   ATOMIC MASS UNIT DIVIDED BY HBAR              SCAT-013
C                  NCO,COE:   LOOPS AND COEFF. FOR OBSERVABLES  SEE OBSESCAT-014
C                  IPI:   MULTIPLICITIES FOR PARTICLE AND TARGET NUCLEUSSCAT-015
C                  MT1:   MULTIPLICITY OF THE OUTGOING PARTICLE         SCAT-016
C                         SECOND DIMENSION OF THE WORKING SPACE AB      SCAT-017
C                  WV:    MASSES, ENERGIES, ETC..    SEE CALX           SCAT-018
C                  NCJ:   NUMBER OF FACTORISATIONS OF 1/(1-X*COS(THETA))SCAT-019
C                  JMIN:  TWICE MINIMUM OF THE TOTAL SPIN               SCAT-020
C                  XZ:    CONVERSION FACTOR TO MILLIBARNS               SCAT-021
C                  LO:    LOGICAL CONTROLS                              SCAT-022
C OUTPUT VARIABLES:EX:    DIFFER. CROSS-SECTION FOLLOWED BY OBSERVABLES SCAT-023
C WORKING SPACE:   AB:    AMPLITUDES IN THE C. M. OR THE LAB. SYSTEM    SCAT-024
C                  A:     FOR INDEPENDENT AMPLITUDES                    SCAT-025
C                  B:     TO STORE THE ROTATION MATRIX ELEMENTS         SCAT-026
C OTHER INPUT BY COMMON /RESC/                                          SCAT-027
C                  EXCN:   COMPOUND-NUCLEUS CROSS-SECTION               SCAT-028
C                  XA,XB:  CONSTANTS FOR CHANGE TO LABORATORY SYSTEM    SCAT-029
C                  JN1,JN2:FIRST AND LAST AMPLITUDE IN:THE TABLE        SCAT-030
C                  NTT:    NUMBER OF INDEPENDENT AMPLITUDES             SCAT-031
C                  MTT:    TOTAL NUMBER OF AMPLITUDES                   SCAT-032
C                  MT2:    MULTIPLICITY OF THE RESIDUAL TARGET          SCAT-033
C                  MT3:    MULTIPLICITY OF THE INCIDENT PARTICLE        SCAT-034
C                  MT4:    MULTIPLICITY OF THE INITIAL TARGET           SCAT-035
C                  NOUT:   NUCLEAR STATE CONSIDERED                     SCAT-036
C                  NIX,NFX:FIRST AND LAST OBSERVABLE IN THE TABLE       SCAT-037
C                  KLT:    1 FOR EXPERIMENTAL DATA                      SCAT-038
C                          2 FOR EQUIDISTANT ANGLES                     SCAT-039
C                          3 FOR PURE COMPOUND NUCLEUS                  SCAT-040
C                  LKT:    .TRUE. FOR CENTER OF MASS SYSTEM             SCAT-041
C***********************************************************************SCAT-042
      IMPLICIT REAL*8 (A-H,O-Z)                                         SCAT-043
      LOGICAL LO(250),LTT(6),LXY,LKT                                    SCAT-044
      DIMENSION FR(2,JMAX,1),MF(10,8),NCO(20,1),COE(1),IPI(11,1),AB(2,MTSCAT-045
     11,1),A(2,1),B(2),EX(2),WV(18,1),MO(18),FCN(KMAX,1)                SCAT-046
      EQUIVALENCE (MO(1),MI1),(MO(2),MP1),(MO(3),N1),(MO(4),L1),(MO(5),MSCAT-047
     1I2),(MO(6),MP2),(MO(7),N2),(MO(8),L2),(MO(9),MI3),(MO(10),MP3),(MOSCAT-048
     2(11),N3),(MO(12),L3),(MO(13),MI4),(MO(14),MP4),(MO(15),N4),(MO(16)SCAT-049
     3,L4),(MO(17),JQ),(MO(18),JP)                                      SCAT-050
      COMMON /RESC/ EXCN,XA,XB,JN1,JN2,NTT,MTT,MT2,MT3,MT4,NOUT,NIX,NFX,SCAT-051
     1KLT,LKT                                                           SCAT-052
      THET=1.74532925D-02*THETA                                         SCAT-053
      IF (KLT.EQ.3) GO TO 56                                            SCAT-054
C FOR EXPERIMENTAL DATA OR EQUIDISTANT ANGLES                           SCAT-055
      W6=DCOS(THET)                                                     SCAT-056
      W7=DSIN(THET)                                                     SCAT-057
      IF (LKT) GO TO 1                                                  SCAT-058
      XC=(XA**2-XB**2)*W7**2+W6**2                                      SCAT-059
      IF (XC.GT.0.D0) XC=DSQRT(XC)                                      SCAT-060
      A3=XC*W6-XA*XB*W7**2                                              SCAT-061
      W7=W7*(XB*W6+XC*XA)                                               SCAT-062
      W6=A3                                                             SCAT-063
    1 IF (LO(181)) GO TO 3                                              SCAT-064
C COMPOUND NUCLEUS CONTRIBUTION                                         SCAT-065
      EXCN=FCN(1,NOUT)                                                  SCAT-066
      IF (IPK.EQ.1) GO TO 3                                             SCAT-067
      U1=0.D0                                                           SCAT-068
      U2=1.D0                                                           SCAT-069
      DO 2 J=2,IPK                                                      SCAT-070
      U1=(DFLOAT(4*J-7)*U2*W6-DFLOAT(2*J-4)*U1)/DFLOAT(2*J-3)           SCAT-071
      U2=(DFLOAT(4*J-5)*U1*W6-DFLOAT(2*J-3)*U2)/DFLOAT(2*J-2)           SCAT-072
    2 EXCN=EXCN+U2*FCN(J,NOUT)*DFLOAT(4*J-3)                            SCAT-073
C DIRECT INTERACTION CONTRIBUTION                                       SCAT-074
    3 W3=1.D0                                                           SCAT-075
      X2=DSQRT(.5D0*(1.D0+W6))                                          SCAT-076
      X3=DSQRT(.5D0*(1.D0-W6))                                          SCAT-077
      DO 4 I=1,NTT                                                      SCAT-078
      A(1,I)=0.D0                                                       SCAT-079
    4 A(2,I)=0.D0                                                       SCAT-080
      IF (NOUT.NE.1) GO TO 7                                            SCAT-081
C COMPUTATION OF COULOMB AMPLITUDES FOR THE ELASTIC CHANNEL             SCAT-082
      IF (WV(5,1).EQ.0..OR.X3.LT.1.E-20) GO TO 7                        SCAT-083
      W2=2.D0*WV(5,1)*DLOG(X3)                                          SCAT-084
      W3=-0.5D0*WV(5,1)/(X3*X3)                                         SCAT-085
      W4=W3*DCOS(W2)                                                    SCAT-086
      W5=-W3*DSIN(W2)                                                   SCAT-087
      W3=W3**2                                                          SCAT-088
      IF (LO(118)) GO TO 5                                              SCAT-089
C SYMMETRISATION BETWEEN PROJECTILE AND TARGET                          SCAT-090
      FS=DFLOAT(2*MOD(IPI(2,1),2)-1)                                    SCAT-091
      Y2=2.D0*WV(5,1)*DLOG(X2)                                          SCAT-092
      Y1=-0.5D0*WV(5,1)/(X2*X2)                                         SCAT-093
      Y4=Y1*DCOS(Y2)                                                    SCAT-094
      Y5=-Y1*DSIN(Y2)                                                   SCAT-095
      W3=W4**2+W5**2+Y4**2+Y5**2+2.D0*FS*(W4*Y4+W5*Y5)/DFLOAT(IPI(2,1)) SCAT-096
C TRANSFORMATION OF THE COULOMB AMPLITUDES TO THE HELICITY FORMALISM    SCAT-097
    5 DO 6 I=1,NTT                                                      SCAT-098
      M5=IPI(2,1)-1                                                     SCAT-099
      M6=IPI(3,1)-1                                                     SCAT-100
      M1=2*MF(1,I)-1-IPI(2,1)                                           SCAT-101
      M2=IPI(3,1)-2*MF(2,I)+1                                           SCAT-102
      M3=2*MF(3,I)-1-IPI(2,1)                                           SCAT-103
      M4=IPI(3,1)-2*MF(4,I)+1                                           SCAT-104
      CALL EMRO(M5,M3,M1,W6,X2,X3,B,1)                                  SCAT-105
      CALL EMRO(M6,M4,M2,W6,X2,X3,B(2),1)                               SCAT-106
      W1=B(1)*B(2)                                                      SCAT-107
      A(1,I)=W4*W1                                                      SCAT-108
      A(2,I)=W5*W1                                                      SCAT-109
      IF (LO(118)) GO TO 6                                              SCAT-110
      CALL EMRO(M5,M3,M2,W6,X2,X3,B,1)                                  SCAT-111
      CALL EMRO(M6,M4,M1,W6,X2,X3,B(2),1)                               SCAT-112
      Y1=B(1)*B(2)*FS                                                   SCAT-113
      A(1,I)=A(1,I)+Y4*Y1                                               SCAT-114
      A(2,I)=A(2,I)+Y5*Y1                                               SCAT-115
    6 CONTINUE                                                          SCAT-116
      W3=W3/WV(4,1)**2                                                  SCAT-117
C COMPUTATION OF THE NUCLEAR AMPLITUDES                                 SCAT-118
    7 DO 13 I=JN1,JN2                                                   SCAT-119
      IJ=I-JN1+1                                                        SCAT-120
      W5=1.D0                                                           SCAT-121
      JN=IPJ                                                            SCAT-122
      IF (LO(141)) GO TO 9                                              SCAT-123
C FACTORISATION OF 1/(1-X*COS(THETA)) WITH X AFTER THE SCAT. COEFF.     SCAT-124
      DO 8 J=1,NCJ                                                      SCAT-125
      JN=JN+1                                                           SCAT-126
    8 W5=W5/(1.D0-FR(1,JN,I)*W6)                                        SCAT-127
    9 IF (MF(6,I).EQ.99999) GO TO 10                                    SCAT-128
      CALL EMRO(JMIN,MF(5,I),MF(6,I),W6,X2,X3,B,JN)                     SCAT-129
      W1=W5                                                             SCAT-130
      GO TO 11                                                          SCAT-131
C ROTATION MATRIX ELEMENTS ARE THE SAME AS FOR THE LAST AMPLITUDE       SCAT-132
   10 W1=W5*DFLOAT(MF(10,I))                                            SCAT-133
   11 DO 12 J=1,IPJ                                                     SCAT-134
      A(1,IJ)=A(1,IJ)+FR(1,J,I)*W1*B(J)                                 SCAT-135
   12 A(2,IJ)=A(2,IJ)+FR(2,J,I)*W1*B(J)                                 SCAT-136
C CONSTRUCTION OF THE TOTAL AMPLITUDE MATRIX                            SCAT-137
      K1=MF(7,I)                                                        SCAT-138
      AB(1,K1,1)=A(1,IJ)                                                SCAT-139
      AB(2,K1,1)=A(2,IJ)                                                SCAT-140
      IF (MF(8,I).EQ.0) GO TO 13                                        SCAT-141
      K1=MF(8,I)                                                        SCAT-142
      W1=DFLOAT(MF(9,I))                                                SCAT-143
      AB(1,K1,1)=W1*A(1,IJ)                                             SCAT-144
      AB(2,K1,1)=W1*A(2,IJ)                                             SCAT-145
   13 CONTINUE                                                          SCAT-146
C CROSS-SECTION                                                         SCAT-147
      DZ=0.D0                                                           SCAT-148
      IF (LO(81)) DZ=EXCN/XZ                                            SCAT-149
      DO 14 I1=1,MTT                                                    SCAT-150
   14 DZ=DZ+AB(1,I1,1)*AB(1,I1,1)+AB(2,I1,1)*AB(2,I1,1)                 SCAT-151
      EX(1)=DZ*XZ                                                       SCAT-152
      LX1=0                                                             SCAT-153
      LX2=0                                                             SCAT-154
      JEX=1                                                             SCAT-155
C LOOP ON THE OBSERVABLES                                               SCAT-156
      DO 54 IEX=NIX,NFX                                                 SCAT-157
      JEX=JEX+1                                                         SCAT-158
      IF (MF(2,IEX).GT.1) GO TO 21                                      SCAT-159
      IF (MF(2,IEX)) 17 , 15 , 16                                       SCAT-160
C CROSS SECTION                                                         SCAT-161
   15 EX(JEX)=EX(1)                                                     SCAT-162
      GO TO 54                                                          SCAT-163
C CROSS SECTION DIVIDED BY RUTHERFORD'S CROSS-SECTION                   SCAT-164
   16 EX(JEX)=EX(1)/(10.D0*W3)                                          SCAT-165
      GO TO 54                                                          SCAT-166
   17 EX(JEX)=0.D0                                                      SCAT-167
      IF (MF(2,IEX).EQ.-3) GO TO 19                                     SCAT-168
      MTP=MT1*MT2*MT4                                                   SCAT-169
C VECTOR ANALYSING POWER FOR SPIN 1/2 OR 1                              SCAT-170
      DO 18 I1=1,MTP                                                    SCAT-171
      I2=I1+MTP                                                         SCAT-172
   18 EX(JEX)=EX(JEX)+AB(2,I2,1)*AB(1,I1,1)-AB(1,I2,1)*AB(2,I1,1)       SCAT-173
      EX(JEX)=2.D0*EX(JEX)*XZ/EX(1)                                     SCAT-174
      IF (MT3.EQ.3) EX(JEX)=1.22474487D0*EX(JEX)                        SCAT-175
      GO TO 54                                                          SCAT-176
C VECTOR POLARISATION FOR SPIN 1/2 OR 1                                 SCAT-177
   19 DO 20 I1=1,MTT,MT1                                                SCAT-178
   20 EX(JEX)=EX(JEX)+AB(1,I1+1,1)*AB(2,I1,1)-AB(2,I1+1,1)*AB(1,I1,1)   SCAT-179
      EX(JEX)=2.D0*EX(JEX)*XZ/EX(1)                                     SCAT-180
      IF (MT1.EQ.3) EX(JEX)=1.22474487D0*EX(JEX)                        SCAT-181
      GO TO 54                                                          SCAT-182
C ALL THE OTHER OBSERVABLES                                             SCAT-183
   21 EX(JEX)=0.D0                                                      SCAT-184
      K1=MF(3,IEX)                                                      SCAT-185
      K2=MF(4,IEX)                                                      SCAT-186
C LOOP ON THE COMPONENTS OF THE DESCRIPTION OF THE OBSERVABLE           SCAT-187
      DO 53 II=K1,K2                                                    SCAT-188
      IX=1                                                              SCAT-189
      IXY=1                                                             SCAT-190
      IXX=IXY+MT2*MT3*MT4                                               SCAT-191
      DO 22 I=1,18                                                      SCAT-192
   22 MO(I)=NCO(I,II)                                                   SCAT-193
      DO 23 IJ=1,6                                                      SCAT-194
      LTT(IJ)=MOD(JQ,2).EQ.1                                            SCAT-195
   23 JQ=JQ/2                                                           SCAT-196
C COMPUTATION OF THE ANGLE FOR A CHANGE OF FRAME                        SCAT-197
      IF (MOD(JP,1000).EQ.0) GO TO 46                                   SCAT-198
      LXY=.TRUE.                                                        SCAT-199
      IF (LX1.EQ.MOD(JP,1000)) GO TO 45                                 SCAT-200
      LX1=MOD(JP,1000)                                                  SCAT-201
      LX2=0                                                             SCAT-202
      N=MT1                                                             SCAT-203
      IF (LX1.EQ.1) GO TO 26                                            SCAT-204
      GO TO 25                                                          SCAT-205
   24 IF (JP/1000.EQ.0) GO TO 46                                        SCAT-206
      LXY=.FALSE.                                                       SCAT-207
      IF (JP/1000.EQ.LX2) GO TO 45                                      SCAT-208
      LX2=JP/1000                                                       SCAT-209
      N=MT2                                                             SCAT-210
      IF (LX2.EQ.1) GO TO 27                                            SCAT-211
   25 IF (DABS(W7).LT.1.D-5.OR.N.EQ.1) GO TO 43                         SCAT-212
      W1=W6                                                             SCAT-213
      W2=-W7                                                            SCAT-214
      GO TO 31                                                          SCAT-215
C TRANSFORMATION TO THE LABORATORY SYSTEM FOR THE PARTICLE              SCAT-216
   26 W1=WV(1,NOUT)                                                     SCAT-217
      GO TO 28                                                          SCAT-218
C TRANSFORMATION TO THE LABORATORY SYSTEM FOR THE TARGET                SCAT-219
   27 W1=-WV(2,NOUT)                                                    SCAT-220
   28 IF (N.EQ.1) GO TO 43                                              SCAT-221
      IF (LO(108)) GO TO 29                                             SCAT-222
      W1=WV(4,NOUT)/(CMB*W1)                                            SCAT-223
      W2=CMB*WV(2,1)/WV(4,1)                                            SCAT-224
      W3=DATAN(-W7/(W6*DSQRT(W1*W1+1.D0)+W1*DSQRT(W2*W2+1.D0)))         SCAT-225
      GO TO 30                                                          SCAT-226
   29 W3=DATAN(-W7/(WV(4,NOUT)*WV(2,1)/(WV(4,1)*W1)+W6))                SCAT-227
   30 IF (DABS(W3).LT.1.D-5.OR.N.EQ.1) GO TO 43                         SCAT-228
      W1=DCOS(W3)                                                       SCAT-229
      W2=DSIN(W3)                                                       SCAT-230
   31 DO 32 I=1,MTT                                                     SCAT-231
      AB(1,I,IXX)=0.D0                                                  SCAT-232
   32 AB(2,I,IXX)=0.D0                                                  SCAT-233
      W3=DSQRT(.5D0*(1.D0-W1))                                          SCAT-234
      W5=1.D0                                                           SCAT-235
      DO 33 I=2,N                                                       SCAT-236
   33 W5=-W5*W3                                                         SCAT-237
      IF (DABS(W5).LT.1.D-30) GO TO 43                                  SCAT-238
      W4=0.D0                                                           SCAT-239
      W8=.5D0*DFLOAT(N-1)                                               SCAT-240
      MTY=MT3*MT4                                                       SCAT-241
      X3=-W8                                                            SCAT-242
C TRANSFORMATION OF THE AMPLITUDE MATRIX                                SCAT-243
      DO 42 I=1,N                                                       SCAT-244
      IF (I.EQ.1) GO TO 34                                              SCAT-245
      W3=W4                                                             SCAT-246
      IF (I.NE.2) W3=W3*DSQRT(DFLOAT((I-2)*(N+2-I)))                    SCAT-247
      W4=W5                                                             SCAT-248
      W5=(2.D0*(X3*W1-W8)*W4/W2-W3)/DSQRT(DFLOAT((I-1)*(N+1-I)))        SCAT-249
      X3=X3+1.D0                                                        SCAT-250
   34 X2=0.D0                                                           SCAT-251
      X5=W5                                                             SCAT-252
      X4=W8                                                             SCAT-253
      DO 41 J=I,N                                                       SCAT-254
      IF (J.EQ.I) GO TO 35                                              SCAT-255
      X1=X2                                                             SCAT-256
      IF (J.NE.I+1) X1=X1*DSQRT(DFLOAT((J-I-1)*(N+1-J+I)))              SCAT-257
      X2=X5                                                             SCAT-258
      X5=(2.D0*(X3-X4*W1)*X2/W2-X1)/DSQRT(DFLOAT((J-I)*(N+I-J)))        SCAT-259
      X4=X4-1.D0                                                        SCAT-260
   35 X=X5                                                              SCAT-261
      L=1+J-I                                                           SCAT-262
      M=N+1-I                                                           SCAT-263
      DO 40 K=1,2                                                       SCAT-264
      DO 39 I1=1,MTY                                                    SCAT-265
      IF (LXY) GO TO 37                                                 SCAT-266
      IXI=IXX+(I1-1)*MT2+L-1                                            SCAT-267
      IXJ=IXY+(I1-1)*MT2+M-1                                            SCAT-268
      DO 36 I4=1,MT1                                                    SCAT-269
      AB(1,I4,IXI)=AB(1,I4,IXI)+X*AB(1,I4,IXJ)                          SCAT-270
   36 AB(2,I4,IXI)=AB(2,I4,IXI)+X*AB(2,I4,IXJ)                          SCAT-271
      GO TO 39                                                          SCAT-272
   37 IXI=MT1*(IXX+(I1-1)*MT2-1)+L                                      SCAT-273
      IXJ=MT1*(IXY+(I1-1)*MT2-1)+M                                      SCAT-274
      DO 38 I4=1,MT2                                                    SCAT-275
      AB(1,IXI,I4)=AB(1,IXI,I4)+X*AB(1,IXJ,I4)                          SCAT-276
   38 AB(2,IXI,I4)=AB(2,IXI,I4)+X*AB(2,IXJ,I4)                          SCAT-277
   39 CONTINUE                                                          SCAT-278
      IF (J.EQ.N) GO TO 41                                              SCAT-279
      ML=L                                                              SCAT-280
      L=M                                                               SCAT-281
      M=ML                                                              SCAT-282
      IF (MOD(J+N,2).NE.0) X=-X                                         SCAT-283
   40 CONTINUE                                                          SCAT-284
   41 CONTINUE                                                          SCAT-285
   42 CONTINUE                                                          SCAT-286
      GO TO 45                                                          SCAT-287
   43 DO 44 I=1,MTT                                                     SCAT-288
      AB(1,I,IXX)=AB(1,I,IXY)                                           SCAT-289
   44 AB(2,I,IXX)=AB(2,I,IXY)                                           SCAT-290
   45 IX=IX+1                                                           SCAT-291
      IXY=IXX                                                           SCAT-292
      IXX=IXY+MT2*MT3*MT4                                               SCAT-293
      IF (LXY) GO TO 24                                                 SCAT-294
   46 IF (LTT(5)) GO TO 52                                              SCAT-295
      X=0.D0                                                            SCAT-296
C THE FOUR DO LOOPS                                                     SCAT-297
      DO 51 I1=MI1,MP1                                                  SCAT-298
      J1=I1-N1                                                          SCAT-299
      X1=COE(10*II)                                                     SCAT-300
      IF (LTT(1)) X1=COE(10*II)*COE(I1+L1)                              SCAT-301
      DO 50 I2=MI2,MP2                                                  SCAT-302
      J2=I2-N2                                                          SCAT-303
      X2=X1                                                             SCAT-304
      IF (LTT(2)) X2=X1*COE(L2-I2)                                      SCAT-305
      DO 49 I3=MI3,MP3                                                  SCAT-306
      J3=I3-N3                                                          SCAT-307
      X3=X2                                                             SCAT-308
      IF (LTT(3)) X3=X2*COE(I3+L3)                                      SCAT-309
      DO 48 I4=MI4,MP4                                                  SCAT-310
      J4=I4-N4                                                          SCAT-311
      X4=X3                                                             SCAT-312
      IIJ=I4+MT2*(J2-1+MT4*(J1-1+MT3*(IX-1)))                           SCAT-313
      III=J4+MT2*(I2-1+MT4*(I1-1+MT3*(IX-1)))                           SCAT-314
      IF (LTT(4)) X4=X3*COE(L4-I4)                                      SCAT-315
      IF (LTT(6)) GO TO 47                                              SCAT-316
      X=X+(AB(1,I3,IIJ)*AB(1,J3,III)+AB(2,I3,IIJ)*AB(2,J3,III))*X4      SCAT-317
      GO TO 48                                                          SCAT-318
   47 X=X+(AB(2,I3,IIJ)*AB(1,J3,III)-AB(1,I3,IIJ)*AB(2,J3,III))*X4      SCAT-319
   48 CONTINUE                                                          SCAT-320
   49 CONTINUE                                                          SCAT-321
   50 CONTINUE                                                          SCAT-322
   51 CONTINUE                                                          SCAT-323
      GO TO 53                                                          SCAT-324
   52 X=COE(10*II)*DZ                                                   SCAT-325
   53 EX(JEX)=EX(JEX)+X                                                 SCAT-326
      EX(JEX)=EX(JEX)/DZ                                                SCAT-327
   54 CONTINUE                                                          SCAT-328
      IF (LKT) GO TO 55                                                 SCAT-329
      XC=DSQRT((XA*W6+XB)**2+W7**2)**3/DABS(XA+XB*W6)                   SCAT-330
      EX(1)=EX(1)*XC                                                    SCAT-331
   55 IF (KLT.EQ.1.OR.LKT) RETURN                                       SCAT-332
      EX(2)=EX(2)*XC                                                    SCAT-333
      IF (LO(81)) EXCN=EXCN*XC                                          SCAT-334
      RETURN                                                            SCAT-335
C PURE COMPOUND NUCLEUS FOR LEVELS JN1 TO JN2                           SCAT-336
   56 IS=JN1-1                                                          SCAT-337
      DO 63 IV=JN1,JN2                                                  SCAT-338
      EX(IV-IS)=FCN(1,IV)                                               SCAT-339
      IF (IPK.EQ.1) GO TO 62                                            SCAT-340
      IF (LKT) GO TO 59                                                 SCAT-341
      IF (LO(8)) GO TO 57                                               SCAT-342
      XA=1.D0                                                           SCAT-343
      XB=WV(4,1)*WV(1,IV)/(WV(4,IV)*WV(2,1))                            SCAT-344
      GO TO 58                                                          SCAT-345
   57 XA=DSQRT(1.D0+(WV(4,1)/(CMB*WV(2,1)))**2)                         SCAT-346
      XB=DSQRT(WV(1,IV)**2+(WV(4,IV)/CMB)**2)*WV(4,1)/(WV(4,IV)*WV(2,1))SCAT-347
   58 W6=DCOS(THET)                                                     SCAT-348
      W7=DSIN(THET)                                                     SCAT-349
      XC=(XA**2-XB**2)*W7**2+W6**2                                      SCAT-350
      IF (XC.GT.0.D0) XC=DSQRT(XC)                                      SCAT-351
      W6=XC*W6-XA*XB*W7**2                                              SCAT-352
      GO TO 60                                                          SCAT-353
   59 W6=DCOS(THET)                                                     SCAT-354
   60 U1=0.D0                                                           SCAT-355
      U2=1.D0                                                           SCAT-356
      DO 61 J=2,IPK                                                     SCAT-357
      U1=(DFLOAT(4*J-7)*U2*W6-DFLOAT(2*J-4)*U1)/DFLOAT(2*J-3)           SCAT-358
      U2=(DFLOAT(4*J-5)*U1*W6-DFLOAT(2*J-3)*U2)/DFLOAT(2*J-2)           SCAT-359
   61 EX(IV-IS)=EX(IV-IS)+U2*FCN(J,IV)*DFLOAT(4*J-3)                    SCAT-360
   62 IF (.NOT.LKT) EX(IV-IS)=EX(IV-IS)*DSQRT((XA*W6+XB)**2+1.D0-W6**2)*SCAT-361
     1*3/DABS(XA+XB*W6)                                                 SCAT-362
   63 CONTINUE                                                          SCAT-363
      RETURN                                                            SCAT-364
      END                                                               SCAT-365
C 01/01/04                                                      ECIS03  GRAL-000
      SUBROUTINE GRAL(TGR,GRR,FRR,MTHETA,MF,CM,ID1,LT1,LT2)             GRAL-001
C PLOTS OF CROSS-SECTION AND POLARISATIONS WITH OR WITHOUT EXPER. DATA  GRAL-002
C INPUT VARIABLES: TGR(I):    ANGLES FOR I=1,MTHETA                     GRAL-003
C                  GRR(J,I):  CALC. VALUES FOR J=1,ID1 AND I=1,MTHETA   GRAL-004
C                  FRR(I):    EXPER. VALUES FOR I=1,MTHETA              GRAL-005
C                  MTHETA:    NUMBER OF ANGLES                          GRAL-006
C                  MF:        DESCRIPTION OF DATA    SEE OBSE           GRAL-007
C                  ID1:       NUMBER OF DIFFERENT POLARISATIONS         GRAL-008
C                  LT1:       .TRUE. FOR POLARISATION,                  GRAL-009
C                             .FALSE. FOR CROSS SECTION                 GRAL-010
C                  LT2:       .TRUE. IF THERE ARE NO EXPERIMENTAL DATA  GRAL-011
C MF(I,J) IS A TITLE FOR I=6,10                                         GRAL-012
C MF(5,J) IS THE NUMBER OF POWER OF 10 IN A LINE FOR CROSS SECTIONS     GRAL-013
C  AND MUST BE 1 TO PLOT A POLARISATION (ALWAYS BETWEEN -1 AND 1)       GRAL-014
C***********************************************************************GRAL-015
      IMPLICIT REAL*8 (A-H,O-Z)                                         GRAL-016
      LOGICAL LT1,LT2                                                   GRAL-017
      DIMENSION TGR(MTHETA),GRR(ID1,MTHETA),MF(10,1),FRR(MTHETA)        GRAL-018
      CHARACTER*1 VGR(112),GRA(17)                                      GRAL-019
      CHARACTER*4 CM(10,1)                                              GRAL-020
      COMMON /INOUT/ MR,MW,MS                                           GRAL-021
      DATA GRA /'+','*',',',':','-','1','2','3','4','5','6','7','8','9',GRAL-022
     1'0',' ','.'/                                                      GRAL-023
      IF (LT1) GO TO 14                                                 GRAL-024
C CROSS SECTIONS                                                        GRAL-025
      IF ((MF(5,1).LE.0).OR.(MF(5,1).GT.50)) RETURN                     GRAL-026
      NA2=100/MF(5,1)                                                   GRAL-027
      AA2=DFLOAT(NA2)                                                   GRAL-028
      WRITE (MW,1000)                                                   GRAL-029
      WRITE (MW,1001) GRA(1),(CM(J,1),J=6,10)                           GRAL-030
      IF (.NOT.LT2) WRITE (MW,1002)                                     GRAL-031
      AA3=AA2*DFLOAT((MF(5,1)+1)/2)                                     GRAL-032
      AA1=AA2/DLOG(10.D0)                                               GRAL-033
      NA1=101-MF(5,1)*NA2                                               GRAL-034
      A5=101.5D0                                                        GRAL-035
      DO 1 I=1,112                                                      GRAL-036
    1 VGR(I)=GRA(16)                                                    GRAL-037
      DO 2 I=NA1,112,NA2                                                GRAL-038
    2 VGR(I)=GRA(6)                                                     GRAL-039
      WRITE (MW,1003) VGR                                               GRAL-040
      DO 3 I=1,112                                                      GRAL-041
    3 VGR(I)=GRA(17)                                                    GRAL-042
      DO 4 I=NA1,112,NA2                                                GRAL-043
    4 VGR(I)=GRA(2)                                                     GRAL-044
      WRITE (MW,1003) VGR                                               GRAL-045
      DO 11 I=1,MTHETA                                                  GRAL-046
      DO 5 J=2,111                                                      GRAL-047
    5 VGR(J)=GRA(16)                                                    GRAL-048
      DO 6 J=NA1,111,NA2                                                GRAL-049
    6 VGR(J)=GRA(17)                                                    GRAL-050
      IF (GRR(1,I).LT.0.D0) GO TO 27                                    GRAL-051
      A4=AA1*DLOG(GRR(1,I))+A5                                          GRAL-052
      NG=0                                                              GRAL-053
    7 IF (NG.GT.20) GO TO 28                                            GRAL-054
      NG=NG+1                                                           GRAL-055
      IF (A4.GT.2.D0) GO TO 8                                           GRAL-056
      A4=A4+AA3                                                         GRAL-057
      A5=A5+AA3                                                         GRAL-058
      WRITE (MW,1004)                                                   GRAL-059
      GO TO 7                                                           GRAL-060
    8 IF (A4.LT.112.D0) GO TO 9                                         GRAL-061
      A4=A4-AA3                                                         GRAL-062
      A5=A5-AA3                                                         GRAL-063
      WRITE (MW,1005)                                                   GRAL-064
      GO TO 8                                                           GRAL-065
    9 L=IDINT(A4)                                                       GRAL-066
      VGR(L)=GRA(1)                                                     GRAL-067
      IF (LT2) GO TO 10                                                 GRAL-068
C EXPERIMENTAL DATA                                                     GRAL-069
      IF (FRR(I).LT.0.D0) GO TO 29                                      GRAL-070
      L=IDINT(AA1*DLOG(FRR(I))+A5)                                      GRAL-071
      IF (L.GT.1.AND.L.LT.112) VGR(L)=GRA(2)                            GRAL-072
   10 WRITE (MW,1006) TGR(I),VGR                                        GRAL-073
   11 CONTINUE                                                          GRAL-074
      DO 12 I=1,112                                                     GRAL-075
   12 VGR(I)=GRA(17)                                                    GRAL-076
      DO 13 I=NA1,112,NA2                                               GRAL-077
   13 VGR(I)=GRA(2)                                                     GRAL-078
      WRITE (MW,1003) VGR                                               GRAL-079
      RETURN                                                            GRAL-080
C POLARISATION                                                          GRAL-081
   14 IF (LT2) GO TO 15                                                 GRAL-082
      WRITE (MW,1000)                                                   GRAL-083
      WRITE (MW,1001) GRA(1),(CM(J,1),J=6,10)                           GRAL-084
      WRITE (MW,1002)                                                   GRAL-085
      GO TO 17                                                          GRAL-086
   15 NK=0                                                              GRAL-087
      DO 16 K=1,ID1                                                     GRAL-088
      IF (MF(5,K).NE.1) GO TO 16                                        GRAL-089
      KN=MOD(NK,15)+1                                                   GRAL-090
      NK=NK+1                                                           GRAL-091
      IF (NK.EQ.1) WRITE (MW,1000)                                      GRAL-092
      WRITE (MW,1001) GRA(KN),(CM(J,K),J=6,10)                          GRAL-093
   16 CONTINUE                                                          GRAL-094
      IF (NK.EQ.0) RETURN                                               GRAL-095
   17 WRITE (MW,1007)                                                   GRAL-096
      DO 18 I=1,112                                                     GRAL-097
   18 VGR(I)=GRA(16)                                                    GRAL-098
      DO 19 I=1,103                                                     GRAL-099
   19 VGR(I)=GRA(17)                                                    GRAL-100
      DO 20 I=2,102,10                                                  GRAL-101
   20 VGR(I)=GRA(2)                                                     GRAL-102
      WRITE (MW,1003) VGR                                               GRAL-103
      DO 24 I=1,MTHETA                                                  GRAL-104
      DO 21 M=2,102                                                     GRAL-105
   21 VGR(M)=GRA(16)                                                    GRAL-106
      VGR(52)=GRA(17)                                                   GRAL-107
      NK=0                                                              GRAL-108
      DO 22 K=1,ID1                                                     GRAL-109
      IF (MF(5,K).NE.1) GO TO 22                                        GRAL-110
      NK=MOD(NK,15)+1                                                   GRAL-111
      M=IDINT(50.D0*GRR(K,I)+52.5D0)                                    GRAL-112
      IF (M.GT.1.AND.M.LE.102) VGR(M)=GRA(NK)                           GRAL-113
   22 CONTINUE                                                          GRAL-114
      IF (LT2) GO TO 23                                                 GRAL-115
      M=IDINT(50.D0*FRR(I)+52.5D0)                                      GRAL-116
      IF (M.GT.1.AND.M.LE.102) VGR(M)=GRA(2)                            GRAL-117
   23 WRITE (MW,1006) TGR(I),VGR                                        GRAL-118
   24 CONTINUE                                                          GRAL-119
      DO 25 I=1,103                                                     GRAL-120
   25 VGR(I)=GRA(17)                                                    GRAL-121
      DO 26 I=2,102,10                                                  GRAL-122
   26 VGR(I)=GRA(2)                                                     GRAL-123
      WRITE (MW,1003) VGR                                               GRAL-124
      RETURN                                                            GRAL-125
   27 WRITE (MW,1008) I,GRR(1,I)                                        GRAL-126
      GO TO 30                                                          GRAL-127
   28 WRITE (MW,1009) I,GRR(1,I)                                        GRAL-128
      GO TO 30                                                          GRAL-129
   29 WRITE (MW,1010) I,FRR(I)                                          GRAL-130
   30 WRITE (MW,1011)                                                   GRAL-131
      RETURN                                                            GRAL-132
 1000 FORMAT ('1')                                                      GRAL-133
 1001 FORMAT (45X,A1,4X,5A4/)                                           GRAL-134
 1002 FORMAT (45X,'+    CALCULATED VALUE'/45X,'*    EXPERIMENTAL VALUE'/GRAL-135
     1)                                                                 GRAL-136
 1003 FORMAT (7X,112A1)                                                 GRAL-137
 1004 FORMAT (40(' -*'))                                                GRAL-138
 1005 FORMAT (40(' *-'))                                                GRAL-139
 1006 FORMAT (F7.2,112A1)                                               GRAL-140
 1007 FORMAT (//6X,' -1',7X,' -.8',6X,' -.6',6X,' -.4',6X,' -.2',7X,' 0'GRAL-141
     1,8X,' .2',7X,' .4',7X,' .6',7X,' .8',7X,' 1')                     GRAL-142
 1008 FORMAT (' FOR THE',I4,'TH LINE, CALCULATED VALUE =',D15.8)        GRAL-143
 1009 FORMAT (' FOR THE',I4,'TH LINE, MORE THAN 20 TRANSLATIONS. CALCULAGRAL-144
     1TED VALUE =',D15.8)                                               GRAL-145
 1010 FORMAT (' FOR THE',I4,'TH LINE, EXPERIMENTAL VALUE =',D15.8)      GRAL-146
 1011 FORMAT (//' **** GRAPH CANCELED ****')                            GRAL-147
      END                                                               GRAL-148
C 01/01/04                                                      ECIS03  EMRO-000
      SUBROUTINE EMRO(IA,I1,I2,X1,X2,X3,RES,NX)                         EMRO-001
C  WITH IA=2*A, I1=2*F1 AND I2=2*F2, CALCULATES THE NX                  EMRO-002
C            A          A+1                     A+N-1                   EMRO-003
C           R (THETA), R (THETA) ............. R (THETA)                EMRO-004
C            F1,F2      F1,F2                   F1,F2                   EMRO-005
C IN THE ARRAY RES                                                      EMRO-006
C IT USES THE RECURRENCE RELATION OBTAINED FROM                         EMRO-007
C                      J                   J'                           EMRO-008
C        COS(THETA) * R (THETA)  = SUM  R (THETA)                       EMRO-009
C                      F1,F2       ON J'   F1,F2                        EMRO-010
C THETA IS GIVEN BY X1=COS(THETA),X2=COS(0.5*THETA),X3=SIN(0.5*THETA)   EMRO-011
C***********************************************************************EMRO-012
      IMPLICIT REAL*8 (O-Z)                                             EMRO-013
      DIMENSION RES(NX)                                                 EMRO-014
      NR=1                                                              EMRO-015
      JA=IA                                                             EMRO-016
      M1=IABS(I1+I2)/2                                                  EMRO-017
      M2=IABS(I1-I2)/2                                                  EMRO-018
      MJ=M1+M2                                                          EMRO-019
      NJ=MJ                                                             EMRO-020
    1 IF (MJ.LE.JA) GO TO 2                                             EMRO-021
      RES(NR)=0.D0                                                      EMRO-022
      NR=NR+1                                                           EMRO-023
      IF (NR.GT.NX) RETURN                                              EMRO-024
      JA=JA+2                                                           EMRO-025
      GO TO 1                                                           EMRO-026
    2 S1=0.D0                                                           EMRO-027
      S2=0.D0                                                           EMRO-028
      S3=1.D0                                                           EMRO-029
      IF (MJ.EQ.0) GO TO 11                                             EMRO-030
C THE MAGNETIC QUANTUM NUMBERS ARE NOT BOTH ZEROS                       EMRO-031
      IF (M1.EQ.M2) GO TO 8                                             EMRO-032
C NO MAGNETIC QUANTUM NUMBER IS ZERO                                    EMRO-033
      IF (M2.EQ.0) GO TO 4                                              EMRO-034
      DO 3 I=1,M2                                                       EMRO-035
    3 S3=S3*X3*DSQRT(DFLOAT(M1+I)/DFLOAT(I))                            EMRO-036
    4 IF (M1.EQ.0) GO TO 6                                              EMRO-037
      DO 5 M=1,M1                                                       EMRO-038
    5 S3=S3*X2                                                          EMRO-039
    6 IF ((I1.GT.I2).AND.(2*(M2/2).NE.M2)) S3=-S3                       EMRO-040
      KX=1                                                              EMRO-041
      X4=0.D0                                                           EMRO-042
      Z1=DFLOAT(M1)                                                     EMRO-043
      Z2=DFLOAT(M2)                                                     EMRO-044
      SL=(Z1-Z2)/DFLOAT(NJ+2)                                           EMRO-045
    7 IF (JA.LE.NJ) GO TO 13                                            EMRO-046
C RECURRENCE                                                            EMRO-047
      NJ=NJ+2                                                           EMRO-048
      S2=S3                                                             EMRO-049
      Z1=Z1+1.D0                                                        EMRO-050
      Z2=Z2+1.D0                                                        EMRO-051
      MJ=MJ+1                                                           EMRO-052
      X4=X4+1.D0                                                        EMRO-053
      Y2=DSQRT(Z1*Z2*X4*DFLOAT(MJ))                                     EMRO-054
      SJ=DFLOAT(NJ)                                                     EMRO-055
      S3=(SJ-1.D0)*SJ*((X1-SL)*S2-S1)/(2.D0*Y2)                         EMRO-056
      S1=2.D0*Y2*S2/((SJ+1.D0)*SJ)                                      EMRO-057
      SL=SL*(SJ-2.D0)/(SJ+2.D0)                                         EMRO-058
      GO TO 7                                                           EMRO-059
C A MAGNETIC QUANTUM NUMBER IS ZERO                                     EMRO-060
    8 DO 9 I=1,M1                                                       EMRO-061
    9 S3=S3*X3*X2*DSQRT(DFLOAT(M1+I)/DFLOAT(I))                         EMRO-062
      KX=2                                                              EMRO-063
      IF (I1.GT.I2.AND.(2*(M2/2).NE.M2)) S3=-S3                         EMRO-064
      X4=0.D0                                                           EMRO-065
   10 IF (JA.LE.NJ) GO TO 13                                            EMRO-066
C RECURRENCE                                                            EMRO-067
      NJ=NJ+2                                                           EMRO-068
      S2=S3                                                             EMRO-069
      MJ=MJ+1                                                           EMRO-070
      X4=X4+1.D0                                                        EMRO-071
      Y2=DSQRT(X4*DFLOAT(MJ))                                           EMRO-072
      S3=(DFLOAT(NJ-1)*X1*S2-S1)/Y2                                     EMRO-073
      S1=Y2*S2                                                          EMRO-074
      GO TO 10                                                          EMRO-075
C THE MAGNETIC QUANTUM NUMBERS ARE BOTH ZEROS                           EMRO-076
   11 KX=3                                                              EMRO-077
   12 IF (JA.LE.NJ) GO TO 13                                            EMRO-078
C RECURRENCE                                                            EMRO-079
      NJ=NJ+2                                                           EMRO-080
      SJ=DFLOAT(NJ/2)                                                   EMRO-081
      S2=S3                                                             EMRO-082
      S3=((2.D0*SJ-1.D0)*X1*S2-S1)/SJ                                   EMRO-083
      S1=S2*SJ                                                          EMRO-084
      GO TO 12                                                          EMRO-085
C STORAGE                                                               EMRO-086
   13 RES(NR)=S3                                                        EMRO-087
      NR=NR+1                                                           EMRO-088
      IF (NR.GT.NX) RETURN                                              EMRO-089
      JA=JA+2                                                           EMRO-090
      GO TO ( 7 , 10 , 12 ),KX                                          EMRO-091
      END                                                               EMRO-092
C 01/01/04                                                      ECIS03  VARI-000
      SUBROUTINE VARI(KF,NW,DW,LO)                                      VARI-001
C IT ASSIGNS THE VALUES OF THE VARIABLE PARAMETERS AND                  VARI-002
C  PRINTS THE OUTPUT DURING THE SEARCH.                                 VARI-003
C  KF=1 BEFORE THE CALL TO THE SEARCH SUBROUTINES                       VARI-004
C    AT THE FIRST CALL(KE=0) DEFINES THE VARIABLES IN SEARCH            VARI-005
C    AT ANY CALL, PRINT CHI2 AND VARIABLES                              VARI-006
C  KF=0 AFTER THE CALL TO THE SEARCH SUBROUTINES                        VARI-007
C    AT ANY CALL SETS PARAMETERS TO THEIR VALUE FOR NEXT EVALUATION     VARI-008
C    AT THE LAST CALL(KE/=0) PRINT ERRORS AND PARAMETERS                VARI-009
C INPUT VALUES: KE:         RETURN CODE OF SEARCH                       VARI-010
C               NISE,NREC:  INDICATIONS ON PARAMETERS IN SEARCH, NUMBER VARI-011
C               NPOT,NPP:   OPTICAL MODEL PARAMETERS AND THEIR NUMBER   VARI-012
C               NBETA,NBET: DEFORMATIONS AND THEIR NUMBER               VARI-013
C               NPAA,NVA:   NUCLEAR PARAMETERS AND THEIR NUMBER         VARI-014
C               NT:         NUCLEAR MATRIX ELEMENTS AND THEIR NUMBER    VARI-015
C               NSCN:       LEVEL DENSITY DESCRIPTION FOR COMP. NUCLEUS VARI-016
C               NRES,NTOT:  DIFFERENCE BETWEEN EXP. AND CALC. VALUES ANDVARI-017
C                               THEIR NUMBER                            VARI-018
C               NTGX,NCOLR: DESCR. OF EXP. DISTR. AND THEIR NUMBER      VARI-019
C               NIW,NRC:    INTEGER, FLOATING POINTS RESULTS OF SEARCH  VARI-020
C                                  (SEE FITE)                           VARI-021
C               NXX:        VARIABLES IN SEARCH                         VARI-022
C               NWV,NIPP:   MASSES, SPINS, ....   SEE CALX              VARI-023
C               NIVY:       TABLE OF FORM FACTORS  (SEE REDM)           VARI-024
C               LO:        LOGICAL CONTROLS                             VARI-025
C BY COMMON /NCOMP/ NCONT: NUMBER OF CONTINUUM FOR COMPOUND NUCLEUS     VARI-026
C                   NCONS: NUMBER OF LEVEL DENSITIES NEEDED             VARI-027
C                   AZ(I): SPIN-ORBIT PARAMETRISATION FOR I-1 TO 6      VARI-028
C                          HAUSER FESHBACH PARAMETERS FOR J=7 TO 11     VARI-029
C                          GIANT DIPOLE RESONANCE FOR I=12 TO 16        VARI-030
C BY COMMON /DCHI/  : CURRENT AND MINIMUM CHI-SQUARE                    VARI-031
C                                                                       VARI-032
C PARAMETERS IN SEARCH ARE GIVEN BY NW(2-MOD(I,2),NISE+I/2)=INDEX(I)    VARI-033
C STARTING AT NW(1,NISE) FOR I=1 TO NREC:                               VARI-034
C   POSITIVE VALUE: PARAMETER DEFINED BY INDEX(I)                       VARI-035
C   NEGATIVE VALUE -L: PARAMETERS DEFINED BY INDEX(J) FOR J=L+1 TO      VARI-036
C     J=L+INDEX(L) ARE DEFINED AS THE SAME VARIABLE                     VARI-037
C      1-1000      OPTICAL MODEL,FOLDING PARAMETERS                     VARI-038
C   1001-2000      DEFORMATIONS FOR A GIVEN POTENTIAL   - LX(1)=.TRUE.  VARI-039
C   2001-3000      DEFORMATIONS FOR A GIVEN MULTIPOLE   - LX(1)=.TRUE.  VARI-040
C   3001-4000      INDIVIDUAL DEFORMATION               - LX(1)=.TRUE.  VARI-041
C   4001-5000      NUCLEAR MODEL PARAMETER              - LO(211)=.TRUE.VARI-042
C   5001-6000      NUCLEAR MATRIX ELEMENT               - LX(2)=.TRUE.  VARI-043
C   6001-7000      SPIN-ORBIT AND C. N. PARAMETRISATION                 VARI-044
C                  SPIN-ORBIT PARAMETRISATION           - LX(3)=.TRUE.  VARI-045
C                  BZ1, BZ2, BZ3, BZ4, BZ5      - LO(212)=LX(4)=.TRUE.  VARI-046
C                  TGO, BN, FNUG, EGD, GGD      - LO(212)=LX(5)=.TRUE.  VARI-047
C   FOR GAMMA      SA, UX, TAU, SG, E0, EX      - LO(212)=LX(6)=.TRUE.  VARI-048
C   FOR CONTINUUM  SA, UX, TAU, SG, E0, EX      - LO(214)=LX(7)=.TRUE.  VARI-049
C                  GAMMA TRANSMISSION FACTORS           - LX(8)=.TRUE.  VARI-050
C                  FISSION TR. COEF., DEGREE OF FREEDOM - LX(9)=.TRUE.  VARI-051
C   7001-8000      DISPERSION RELATIONS PARAMETRISATION - LO(213)=.TRUE.VARI-052
C  10001-99999     EXTERNAL OPTICAL MODEL (PARAMETERS ABOVE 1000)       VARI-053
C IT STOPS THE CALCULATION FOR AN INDEX OF PARAMETER OUT OF RANGE       VARI-054
C***********************************************************************VARI-055
      IMPLICIT REAL*8 (A-H,O-Z)                                         VARI-056
      LOGICAL LO(250),LX(9)                                             VARI-057
      DIMENSION R0(8),NW(2,1),DW(1)                                     VARI-058
      COMMON /DECOU/ NJIT,NIPP,NPAA,NWV,NIPH,NSCN,NPAR,NNIV,NFIS,NGAM,NPVARI-059
     1OT,NBETA,NFM,NTGX,NDONN,NRC,NIW,NDE,NISE,NNVI,NNWI,NCC,MCC,NXA,NAMVARI-060
     21,NFAC,NFAM,NPAD,NFG,NXG,NSM,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,VARI-061
     3NXD,MWV,NIXT,NTY,NTX,NRY,NRCO,NRDO,NVC1,NVC2,NNC,NCX,IDMT,NCOLL,NJVARI-062
     4MAX,ITERM,NPP,JDM,JIT,NSEC,LMD,MCM(2),NCOLS,NCOLT,KMAX,KMIN,NVA,NBVARI-063
     5ET,NBT1,LMX,LMAX1,NLT,ISM,IQM,IQMAX,MS1,MS2,NCT(6),KBA,KAB,KBC,KCCVARI-064
     6,NJC,JTX,JTH,NCOLR,NREC,NTOT,NFA,LMAX2,KE,ITEMM,NPLACE,KXT,NRZ,NTZVARI-065
     7,LMAX3,IPM,IPK,BJM,EITER,ACONV,CONJ,H,NSPIN                       VARI-066
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCJ,NCONS,NCO(4),ACN(2),AZ(1VARI-067
     18)                                                                VARI-068
      COMMON /DCHI/ CHI2,CHI2M,YY(3)                                    VARI-069
      COMMON /INOUT/ MR,MW,MS                                           VARI-070
C TRANSFER BETWEEN VARIABLES AND PARAMETERS                             VARI-071
      IF (KF.EQ.1.AND.KE.NE.0) GO TO 34                                 VARI-072
      DO 1 I=211,214                                                    VARI-073
    1 LO(I)=.FALSE.                                                     VARI-074
      DO 2 I=1,9                                                        VARI-075
    2 LX(I)=.FALSE.                                                     VARI-076
      DO 33 I=1,NREC                                                    VARI-077
      J=NW(2-MOD(I,2),NISE+(I-1)/2)                                     VARI-078
      JJ=IABS(J)                                                        VARI-079
      IF (J.NE.JJ) GO TO 3                                              VARI-080
      J1=I                                                              VARI-081
      J2=I                                                              VARI-082
      GO TO 4                                                           VARI-083
    3 J1=JJ+1                                                           VARI-084
      J2=J1+NW(2-MOD(JJ,2),NISE+(JJ-1)/2)-1                             VARI-085
    4 DO 32 K=J1,J2                                                     VARI-086
      J=NW(2-MOD(K,2),NISE+(K-1)/2)                                     VARI-087
      IF ((J.GT.1000).AND.(J.LE.10000)) GO TO 9                         VARI-088
C OPTICAL MODEL AND FOLDING PARAMETERS                                  VARI-089
      IF (J.GT.10000) J=J-9000                                          VARI-090
      IF (LO(7)) GO TO 5                                                VARI-091
      IF (J.GT.34*NPP.OR.MOD(J,34).EQ.19) GO TO 65                      VARI-092
      GO TO 7                                                           VARI-093
C EXTERNAL OPTICAL PARAMETERS                                           VARI-094
    5 I1=NW(1,NPOT)-1                                                   VARI-095
      DO 6 L=1,I1                                                       VARI-096
      IF (J.GE.NW(1,NPOT+L).AND.J.LE.NW(2,NPOT+L)) GO TO 7              VARI-097
    6 CONTINUE                                                          VARI-098
      GO TO 65                                                          VARI-099
    7 IF (KF.NE.0) GO TO 8                                              VARI-100
      IF (K.EQ.J1) RAP=DW(NXX+I-1)/DW(NPOT+J-1)                         VARI-101
      DW(NPOT+J-1)=RAP*DW(NPOT+J-1)                                     VARI-102
      GO TO 32                                                          VARI-103
    8 DW(NXX+I-1)=DW(NPOT+J-1)                                          VARI-104
      GO TO 33                                                          VARI-105
    9 J=J-1000                                                          VARI-106
      IF (J.GT.1000) GO TO 14                                           VARI-107
      IF (J.GT.6) GO TO 65                                              VARI-108
C  DEFORMATIONS FOR A GIVEN POTENTIAL                                   VARI-109
      LX(1)=.TRUE.                                                      VARI-110
      DO 10 K1=1,NBET                                                   VARI-111
      IF (LO(1).AND.LO(3).AND.NW(2,NBETA+9*K1-1).NE.0) GO TO 10         VARI-112
      IF (DW(NBETA+9*K1+J-10).NE.0.D0) GO TO 11                         VARI-113
   10 CONTINUE                                                          VARI-114
      WRITE (MW,1000) I,NW(2-MOD(K,2),NISE+(K-1)/2),J                   VARI-115
      GO TO 66                                                          VARI-116
   11 IF (KF.EQ.0) GO TO 12                                             VARI-117
      DW(NXX+I-1)=DW(NBETA+9*K1+J-10)                                   VARI-118
      GO TO 33                                                          VARI-119
   12 IF (K.EQ.J1) RAP=DW(NXX+I-1)/DW(NBETA+9*K1+J-10)                  VARI-120
      DO 13 L=K1,NBET                                                   VARI-121
      IF (LO(1).AND.LO(3).AND.NW(2,NBETA+9*K1-1).NE.0) GO TO 13         VARI-122
      DW(NBETA+9*L+J-10)=DW(NBETA+9*L+J-10)*RAP                         VARI-123
   13 CONTINUE                                                          VARI-124
      GO TO 32                                                          VARI-125
   14 J=J-1000                                                          VARI-126
      IF (J.GT.1000) GO TO 19                                           VARI-127
C DEFORMATIONS FOR A GIVEN MULTIPOLE                                    VARI-128
      IF (J.GT.NBET) GO TO 65                                           VARI-129
      LX(1)=.TRUE.                                                      VARI-130
      DO 15 K1=1,8                                                      VARI-131
      IF (DW(NBETA+9*J+K1-10).NE.0.D0) GO TO 16                         VARI-132
   15 CONTINUE                                                          VARI-133
      WRITE (MW,1001) I,NW(2-MOD(K,2),NISE+(K-1)/2),J                   VARI-134
      GO TO 66                                                          VARI-135
   16 IF (KF.EQ.0) GO TO 17                                             VARI-136
      DW(NXX+I-1)=DW(NBETA+9*J+K1-10)                                   VARI-137
      GO TO 33                                                          VARI-138
   17 IF (K.EQ.J1) RAP=DW(NXX+I-1)/DW(NBETA+9*J+K1-10)                  VARI-139
      DO 18 L=K1,8                                                      VARI-140
   18 DW(NBETA+9*J+L-10)=DW(NBETA+9*J+L-10)*RAP                         VARI-141
      GO TO 32                                                          VARI-142
   19 J=J-1000                                                          VARI-143
      IF (J.GT.1000) GO TO 20                                           VARI-144
C INDIVIDUAL DEFORMATIONS                                               VARI-145
      IF ((J.GT.10*NBET).OR.(MOD(J,10).GT.8)) GO TO 65                  VARI-146
      LX(1)=.TRUE.                                                      VARI-147
      JK=NBETA+J-1-(J-10)/10                                            VARI-148
      GO TO 30                                                          VARI-149
   20 J=J-1000                                                          VARI-150
      IF (J.GT.1000) GO TO 21                                           VARI-151
C  NUCLEAR PARAMETERS                                                   VARI-152
      IF (J.GT.NVA) GO TO 65                                            VARI-153
      LO(211)=.TRUE.                                                    VARI-154
      JK=NPAA+J-1                                                       VARI-155
      GO TO 30                                                          VARI-156
   21 J=J-1000                                                          VARI-157
      IF (J.GT.1000) GO TO 22                                           VARI-158
C  NUCLEAR MATRIX ELEMENTS                                              VARI-159
      IF (3*J.GT.NIVQ-NT) GO TO 65                                      VARI-160
      LX(2)=.TRUE.                                                      VARI-161
      JK=NT+3*J-1                                                       VARI-162
      GO TO 30                                                          VARI-163
   22 J=J-1000                                                          VARI-164
      IF (J.GT.1000) GO TO 28                                           VARI-165
C  SPIN-ORBIT AND H. F. PARAMETRISATION                                 VARI-166
      IF (J.GT.16+6*NCONS+NRD+NFISS) GO TO 65                           VARI-167
      IF (LO(181).AND.J.GT.6) GO TO 65                                  VARI-168
      IF (J.GT.16) GO TO 25                                             VARI-169
      IF (LO(104).AND.J.LE.6) GO TO 65                                  VARI-170
      LX(3)=LX(3).OR.(J.LE.6)                                           VARI-171
      IF (LX(3).AND.LO(104)) GO TO 65                                   VARI-172
      IF (J.LE.6) GO TO 23                                              VARI-173
      LX(4)=LX(4).OR.(J.LE.11)                                          VARI-174
      LX(5)=LX(5).OR.(J.GT.11)                                          VARI-175
      IF (LO(181)) GO TO 65                                             VARI-176
      IF (LO(82).AND.J.GT.9) GO TO 65                                   VARI-177
      IF (LO(186).AND.J.GT.11) GO TO 65                                 VARI-178
      IF (LO(82)) GO TO 23                                              VARI-179
      IF (J.NE.9.AND.J.LE.11.AND.LO(87)) GO TO 65                       VARI-180
      IF (LO(87)) GO TO 23                                              VARI-181
      IF (J.EQ.7) GO TO 65                                              VARI-182
      IF (AZ(8).NE.0.D0.AND.J.GT.8.AND.J.LE.11) GO TO 65                VARI-183
      IF (AZ(8).EQ.0.D0.AND.J.EQ.8) GO TO 65                            VARI-184
   23 IF (KF.NE.0) GO TO 24                                             VARI-185
      IF (K.EQ.J1) RAP=DW(NXX+I-1)/AZ(J)                                VARI-186
      AZ(J)=RAP*AZ(J)                                                   VARI-187
      GO TO 32                                                          VARI-188
   24 DW(NXX+I-1)=AZ(J)                                                 VARI-189
      GO TO 33                                                          VARI-190
   25 J=J-16+(J-17)/6                                                   VARI-191
      IF (J.GT.7*NCONS) GO TO 26                                        VARI-192
      IF (J.LE.7*(NCONS-NCONT)) LX(6)=.TRUE.                            VARI-193
      IF (J.GT.7*(NCONS-NCONT)) LX(7)=.TRUE.                            VARI-194
      JK=NSCN+J-1                                                       VARI-195
      GO TO 30                                                          VARI-196
   26 J=J-7*NCONS                                                       VARI-197
      IF (J.GT.NRD) GO TO 27                                            VARI-198
      LX(8)=.TRUE.                                                      VARI-199
      JK=NGAM+J-1                                                       VARI-200
      GO TO 30                                                          VARI-201
   27 J=J-NRD                                                           VARI-202
      LX(9)=.TRUE.                                                      VARI-203
      JK=NFIS+J-1                                                       VARI-204
      GO TO 30                                                          VARI-205
   28 J=J-1000                                                          VARI-206
      IF (J.GT.12*NPP) GO TO 65                                         VARI-207
      JN=J/12                                                           VARI-208
      JJ=J-12*JN                                                        VARI-209
      IF ((JJ.LT.6).OR.(JJ.EQ.12)) GO TO 29                             VARI-210
      IF ((NW(1,NIPP+15*JN+1).EQ.0).AND.(J.LE.8)) GO TO 65              VARI-211
      IF ((NW(2,NIPP+15*JN+1).EQ.0).AND.(J.GT.8)) GO TO 65              VARI-212
   29 JK=NIPP+2+JJ+3*JN                                                 VARI-213
      LO(213)=.TRUE.                                                    VARI-214
   30 IF (KF.EQ.0) GO TO 31                                             VARI-215
      DW(NXX+I-1)=DW(JK)                                                VARI-216
      GO TO 33                                                          VARI-217
   31 IF (K.EQ.J1) RAP=DW(NXX+I-1)/DW(JK)                               VARI-218
      DW(JK)=RAP*DW(JK)                                                 VARI-219
   32 CONTINUE                                                          VARI-220
   33 CONTINUE                                                          VARI-221
      LO(212)=LX(4).OR.LX(5).OR.LX(6)                                   VARI-222
      LO(214)=LX(7)                                                     VARI-223
   34 IF (KF.EQ.0) GO TO 36                                             VARI-224
      WRITE (MW,1002) NW(1,NIW+1),NW(2,NIW),CHI2,(YY(I),I=1,3)          VARI-225
      WRITE (MW,1003)                                                   VARI-226
      DO 35 I=1,NCOLR                                                   VARI-227
      IF (DW(NTGX+7*I-1).NE.0.D0) WRITE (MW,1004) I,(DW(NTGX+7*I+J-8),J=VARI-228
     13,7)                                                              VARI-229
   35 CONTINUE                                                          VARI-230
      WRITE (MW,1005) (I,DW(NXX+I-1),I=1,NREC)                          VARI-231
      IF (LO(178)) WRITE (MW,1006) (I,DW(NRES+I-1),I=1,NTOT)            VARI-232
      RETURN                                                            VARI-233
   36 IF (KE.EQ.1) RETURN                                               VARI-234
      WRITE (MW,1007) NW(1,NIW+1),NW(2,NIW),CHI2,KE,YY(1)               VARI-235
      IF (KE*(KE-3).NE.0.OR.DW(NRC).LE.0.D0) GO TO 38                   VARI-236
      WRITE (MW,1008) NW(2,NIW+1),YY(3),(DW(NRC+I-1),I=1,NREC)          VARI-237
      WRITE (MW,1009) (DW(NRC+NREC+I-1),I=1,NREC)                       VARI-238
      WRITE (MW,1010)                                                   VARI-239
      L=2*NREC+NRC-1                                                    VARI-240
      DO 37 I=1,NREC                                                    VARI-241
      K=L+1                                                             VARI-242
      L=L+I                                                             VARI-243
   37 WRITE (MW,1011) (DW(J),J=K,L)                                     VARI-244
      GO TO 39                                                          VARI-245
   38 WRITE (MW,1012)                                                   VARI-246
   39 IF (KE.EQ.0) WRITE (MW,1013)                                      VARI-247
      IF (KE.EQ.2) WRITE (MW,1014)                                      VARI-248
      IF (KE.EQ.3) WRITE (MW,1015)                                      VARI-249
      IF (KE.EQ.4) WRITE (MW,1016)                                      VARI-250
      IF (KE.EQ.5) WRITE (MW,1017) NW(2,NIW+1)                          VARI-251
      IF (KE.EQ.6) WRITE (MW,1018) NW(1,NIW+1),NW(2,NIW+1)              VARI-252
      IF (KE.EQ.7) WRITE (MW,1019) NTOT,NREC                            VARI-253
C END OF THE SEARCH                                                     VARI-254
      LO(216)=.FALSE.                                                   VARI-255
      LO(218)=.TRUE.                                                    VARI-256
      IF (LO(76)) GO TO 41                                              VARI-257
      DO 40 I=51,65                                                     VARI-258
      LO(I)=LO(I+185)                                                   VARI-259
   40 LO(I+100)=.NOT.LO(I)                                              VARI-260
   41 LO(220)=LO(153).AND.LO(155).AND.LO(156).AND.LO(157).AND.LO(158).ANVARI-261
     1D.LO(160).AND.LO(162).AND.LO(164)                                 VARI-262
      IF (LO(41)) LO(220)=LO(220).AND.LO(165)                           VARI-263
      LO(219)=LO(220).AND.LO(151).AND.LO(164).AND.LO(165)               VARI-264
      LO(220)=CHI2.EQ.CHI2M.AND.LO(220)                                 VARI-265
C OUTPUT OF FINAL PARAMETERS                                            VARI-266
      WRITE (MW,1020) (LO(J),J=1,100)                                   VARI-267
      IF (LO(7)) GO TO 44                                               VARI-268
      NPO=NPOT-1                                                        VARI-269
      DO 43 J=1,NPP                                                     VARI-270
      IJ=IABS(NW(1,NIPP+15*J-15))                                       VARI-271
      AM3=DW(NWV+18*IJ-17)**.33333333333333D0                           VARI-272
      IF (LO(16)) AM3=AM3+DW(NWV+18*IJ-18)**.33333333333333D0           VARI-273
      WRITE (MW,1021) J,AM3                                             VARI-274
      DO 42 I=1,8                                                       VARI-275
   42 R0(I)=DW(NPO+3*I-1)/AM3                                           VARI-276
      WRITE (MW,1022) (DW(NPO+3*I-2),DW(NPO+3*I-1),R0(I),DW(NPO+3*I),I=1VARI-277
     1,8),DW(NPO+25)                                                    VARI-278
      IF (LO(17)) WRITE (MW,1023) (DW(NPO+I),I=26,34)                   VARI-279
   43 NPO=NPO+1                                                         VARI-280
      GO TO 56                                                          VARI-281
   44 NVMA=NW(1,NPOT)                                                   VARI-282
      WRITE (MW,1024)                                                   VARI-283
   45 IF (NVMA.GE.NW(2,NPOT)) GO TO 55                                  VARI-284
      I1=NW(1,NVMA+NPOT-1)                                              VARI-285
      IV=NW(2,NVMA+NPOT-1)                                              VARI-286
      IF (IV.EQ.16) GO TO 54                                            VARI-287
      IT1=MOD(I1-1,8)+1                                                 VARI-288
      J1=(I1-1)/8                                                       VARI-289
      I2=NW(1,NPOT+I1-5)                                                VARI-290
      I3=NW(2,NPOT+I1-5)                                                VARI-291
      IF (IV.GE.0) GO TO 46                                             VARI-292
      WRITE (MW,1025) IT1,J1,I2,I3,(DW(NPOT+I-1),I=I2,I3)               VARI-293
      GO TO 54                                                          VARI-294
   46 IF (IV.LT.9) GO TO 47                                             VARI-295
      WRITE (MW,1026) IT1,J1,IV,I2,I3,(DW(NPOT+I-1),I=I2,I3)            VARI-296
      GO TO 54                                                          VARI-297
   47 IF (IV.GT.6) GO TO 53                                             VARI-298
      WRITE (MW,1027) IT1,J1,IV,I2,I3,(DW(NPOT+3*I-1),I=I2,I3)          VARI-299
      NST=NW(1,NPOT+NVMA+1)                                             VARI-300
      IF (NST.GT.0) GO TO 50                                            VARI-301
      K=IABS(NST)                                                       VARI-302
      EX=DW(NWV+18*K-17)**.33333333333333D0                             VARI-303
      EY=EX                                                             VARI-304
      IF (LO(16)) EX=EX+DW(NWV+18*K-18)**.33333333333333D0              VARI-305
      EY=EY/EX                                                          VARI-306
      EX=DW(NPOT+I2)/EX                                                 VARI-307
      EZ=DW(NPOT+I-1)                                                   VARI-308
      IF (LO(116).OR.J1.LE.NPP) GO TO 49                                VARI-309
      ITYZ=IV                                                           VARI-310
      IF (ITYZ.GE.5) ITYZ=ITYZ-4                                        VARI-311
      ITYW=1                                                            VARI-312
      IF (IT1.LE.6) GO TO 48                                            VARI-313
      ITI=7*(J1-NPP)                                                    VARI-314
      ITYW=ITYW*NW(2-MOD(ITI,2),NIVY+(ITI-1)/2)                         VARI-315
   48 IF (LO(6)) ITYW=ITYW-1                                            VARI-316
      IF (ITYZ.GT.1) EZ=EZ/EY**((ITYZ-1)*ITYW)                          VARI-317
   49 WRITE (MW,1028) EZ,EX                                             VARI-318
   50 IF ((IV.NE.5).AND.(IV.NE.6)) GO TO 54                             VARI-319
      WRITE (MW,1029) I2,I3,(DW(NPOT+I-1),I=I2,I3)                      VARI-320
      IF (NST.GT.0) GO TO 54                                            VARI-321
      WRITE (MW,1030)                                                   VARI-322
      NMB=0                                                             VARI-323
   51 NMA=I2                                                            VARI-324
      I4=I2+7                                                           VARI-325
      DO 52 I=I2,I4                                                     VARI-326
      NMB=NMB+1                                                         VARI-327
      J=I-NMA                                                           VARI-328
      IF (IT1.LT.7) J=0                                                 VARI-329
      IF (LO(106)) J=J+1                                                VARI-330
   52 R0(NMB)=DW(NPOT+I-1)/EY**J                                        VARI-331
      WRITE (MW,1011) (R0(I),I=1,NMB)                                   VARI-332
      I2=I2+8                                                           VARI-333
      IF (I2.LE.I3) GO TO 51                                            VARI-334
      GO TO 54                                                          VARI-335
   53 WRITE (MW,1027) IT1,J1,IV,I2,I3,(DW(NPOT+I-1),I=I2,I3)            VARI-336
   54 NVMA=I3+1                                                         VARI-337
      GO TO 45                                                          VARI-338
   55 NVMB=NW(2,NPOT+1)                                                 VARI-339
      IF (NVMA.LT.NVMB) WRITE (MW,1031) (DW(NPOT+I-1),I=NVMA,NVMB)      VARI-340
   56 IF (.NOT.LX(1)) GO TO 64                                          VARI-341
      WRITE (MW,1032) (I,NW(1,NBETA+9*I-1),NW(2,NBETA+9*I-1),(DW(NBETA+9VARI-342
     1*I+J-10),J=1,8),I=1,NBET)                                         VARI-343
      IF (LO(116)) GO TO 64                                             VARI-344
      DM=DW(NWV+1)**.33333333333333D0/(DW(NWV)**.33333333333333D0+DW(NWVVARI-345
     1+1)**.33333333333333D0)                                           VARI-346
      WRITE (MW,1033)                                                   VARI-347
      DO 63 I=1,NBET                                                    VARI-348
      K1=0                                                              VARI-349
      K2=0                                                              VARI-350
      IF (LO(3)) GO TO 58                                               VARI-351
   57 K1=1                                                              VARI-352
      K2=NW(1,NBETA+9*I-1)                                              VARI-353
      GO TO 60                                                          VARI-354
   58 IF (LO(1)) GO TO 59                                               VARI-355
      K1=I-1                                                            VARI-356
      K2=K1*NW(1,NBETA+9*I-1)                                           VARI-357
      GO TO 60                                                          VARI-358
   59 IF (NW(2,NBETA+9*I-1).EQ.0) GO TO 57                              VARI-359
   60 IF (LO(106)) GO TO 61                                             VARI-360
      K2=K2-K1                                                          VARI-361
      K1=0                                                              VARI-362
   61 DO 62 J=1,6                                                       VARI-363
   62 R0(J)=DW(NBETA+9*I+J-10)/DM**K1                                   VARI-364
      R0(7)=DW(NBETA+9*I-3)/DM**K2                                      VARI-365
      R0(8)=DW(NBETA+9*I-2)/DM**K2                                      VARI-366
   63 WRITE (MW,1034) I,NW(1,NBETA+9*I-1),NW(2,NBETA+9*I-1),R0          VARI-367
   64 IF (LO(211)) WRITE (MW,1035) (DW(NPAA+J-1),I=1,NVA)               VARI-368
      IF (LX(2)) WRITE (MW,1036) (DW(I+2),I=NT,NIVQ,3)                  VARI-369
      IF (LX(3)) WRITE (MW,1037) (AZ(I),I=1,6)                          VARI-370
      IF (LX(4)) WRITE (MW,1038) (AZ(I),I=7,11)                         VARI-371
      IF (LX(5)) WRITE (MW,1039) (AZ(I),I=12,16)                        VARI-372
      IF (LX(6)) WRITE (MW,1040) (I,(DW(NSCN+7*I+J-8),J=1,7),I=1,1)     VARI-373
      IF (LX(7)) WRITE (MW,1040) (I,(DW(NSCN+7*I+J-8),J=1,7),I=1+NCONS-NVARI-374
     1CONT,NCONS)                                                       VARI-375
      IF (LX(8)) WRITE (MW,1041) (I,DW(NGAM+I-1),I=1,NRD)               VARI-376
      IF (LX(9)) WRITE (MW,1042) (I,(DW(NFIS+2*I+J-3),J=1,2),I=1,NFISS) VARI-377
      IF (LO(213)) WRITE (MW,1043) (I,(DW(NIPP+15*I+J-16),J=4,16),I=1,NPVARI-378
     1P)                                                                VARI-379
      RETURN                                                            VARI-380
   65 WRITE (MW,1044) I,NW(2-MOD(K,2),NISE+(K-1)/2),J                   VARI-381
   66 WRITE (MW,1045)                                                   VARI-382
      STOP                                                              VARI-383
 1000 FORMAT (' THE VARIABLE',I3,' CANNOT BE USED BECAUSE ',I5,'  IS A VVARI-384
     1ARIATION OF THE DEFORMATIONS OF POTENTIAL',I3,' WHICH ARE ZERO')  VARI-385
 1001 FORMAT (' THE VARIABLE',I3,' CANNOT BE USED BECAUSE ',I5,'  IS A VVARI-386
     1ARIATION FOR A GIVEN MULTIPOLE',I3,' AND THEY ARE ZERO')          VARI-387
 1002 FORMAT (/' RUN',I4,'   MAX =',I4,'   ***** CHI2 =',D18.10,' *****'VARI-388
     1,5X,'W(1) =',F10.2,5X,'W(2) =',F5.2,5X,'W(3) =',F10.5)            VARI-389
 1003 FORMAT (/21X,'WEIGHT',12X,'EXP. NORM.',10X,'ERR. NORM.',10X,'CALC.VARI-390
     1 NORM.',12X,'CHI2')                                               VARI-391
 1004 FORMAT (5X,I5,1P,5D20.6)                                          VARI-392
 1005 FORMAT (/' *** VARIABLES'//(6(1X,I3,1P,D16.6)))                   VARI-393
 1006 FORMAT (/' *** FUNCTIONS'//(6(1X,I3,1P,D16.6)))                   VARI-394
 1007 FORMAT (/' RUN',I4,'   MAX =',I4,'   ***** CHI2 =',D18.10,' *****'VARI-395
     1,5X,'KE =',I2,5X,'W(1) =',F12.4)                                  VARI-396
 1008 FORMAT (//' STANDARD ERRORS (VARIANCE AT BEST FIT EQUAL TO DEGREE VARI-397
     1OF FREEDOM:',I6,'.RENORMALISATION FACTOR',D15.6,' )'/(1P,8D15.6)) VARI-398
 1009 FORMAT (/' ERROR ENHANCEMENTS (MULTI/SINGLE VARIABLE ERROR)'/(1P,8VARI-399
     1D15.6))                                                           VARI-400
 1010 FORMAT (/' ERROR CORRELATION MATRIX')                             VARI-401
 1011 FORMAT (1P,8D15.6)                                                VARI-402
 1012 FORMAT (//' NO INFORMATION ON ERRORS')                            VARI-403
 1013 FORMAT (//' SEARCH ENDED WITHOUT ERRORS')                         VARI-404
 1014 FORMAT (//' SEARCH INTERRUPTED BY USER')                          VARI-405
 1015 FORMAT (//' SEARCH ENDED BY NUMBER OF EVALUATIONS')               VARI-406
 1016 FORMAT (//' SEARCH ENDED FOR ROUNDING ERRORS')                    VARI-407
 1017 FORMAT (//' SEARCH ENDED BECAUSE THE FUNCTIONS DO NOT DEPEND ON THVARI-408
     1E VARIABLE',I6)                                                   VARI-409
 1018 FORMAT (//' SEARCH ENDED BECAUSE VARIABLES',2I6,' ARE USELESS IN PVARI-410
     1REPARATORY CALLS')                                                VARI-411
 1019 FORMAT (//' SEARCH ENDED BECAUSE THE NUMBER OF PARAMETERS',I4,' ISVARI-412
     1 LARGER THAN THE NUMBER OF DATA',I4)                              VARI-413
 1020 FORMAT ('1'/' ******* FINAL RESULTS *******'//' **** FIRST CONTROLVARI-414
     1 CARD ****',2X,'1 ',9(' 1'),' 2 ',9(' 2'),' 3 ',9(' 3'),' 4 ',9(' VARI-415
     24'),' 5'/11X,5('  1 2 3 4 5 6 7 8 9 0')/11X,5(1X,10L2)//' *** SECOVARI-416
     3ND CONTROL CARD ****',2X,'1 ',9(' 1'),' 2 ',9(' 2'),' 3 ',9(' 3'),VARI-417
     4' 4 ',9(' 4'),' 5'/11X,5('  1 2 3 4 5 6 7 8 9 0')/11X,5(1X,10L2)/)VARI-418
 1021 FORMAT (/' OPTICAL POTENTIALS  **',I3,' **     REDUCED RADIUS MULTVARI-419
     1IPLIED BY  ',D15.6/)                                              VARI-420
 1022 FORMAT (' VOLUME REAL POTENTIAL',11X,'DEPTH',F12.6,' MEV  RADIUS',VARI-421
     1F10.6,' FERMI (REDUCED',F9.6,')  DIFFUSENESS',F9.6,' FERMI'/' VOLUVARI-422
     2ME IMAGINARY POTENTIAL',6X,'DEPTH',F12.6,' MEV  RADIUS',F10.6,' FEVARI-423
     3RMI (REDUCED',F9.6,')  DIFFUSENESS',F9.6,' FERMI'/' SURFACE REAL PVARI-424
     4OTENTIAL',10X,'DEPTH',F12.6,' MEV  RADIUS',F10.6,' FERMI (REDUCED'VARI-425
     5,F9.6,')  DIFFUSENESS',F9.6,' FERMI'/' SURFACE IMAGINARY POTENTIALVARI-426
     6',5X,'DEPTH',F12.6,' MEV  RADIUS',F10.6,' FERMI (REDUCED',F9.6,') VARI-427
     7 DIFFUSENESS',F9.6,' FERMI'/' REAL SPIN-ORBIT POTENTIAL',7X,'DEPTHVARI-428
     8',F12.6,' MEV  RADIUS',F10.6,' FERMI (REDUCED',F9.6,')  DIFFUSENESVARI-429
     9S',F9.6,' FERMI'/' IMAGINARY SPIN-ORBIT POTENTIAL  DEPTH',F12.6,' VARI-430
     AMEV  RADIUS',F10.6,' FERMI (REDUCED',F9.6,')  DIFFUSENESS',F9.6,' VARI-431
     BFERMI'/' COULOMB POTENTIAL  PRODUCT OF CHARGES',F12.6,6X,'RADIUS',VARI-432
     FF10.6,' FERMI (REDUCED',F9.6,')  DIFFUSENESS',F9.6,' FERMI'/' SPINVARI-433
     D-ORBIT COULOMB POTENTIAL    DEPTH',F12.6,6X,'RADIUS',F10.6,' FERMIVARI-434
     E (REDUCED',F9.6,')  DIFFUSENESS',F9.6,' FERMI'/14X,'THIRD CHARGE PVARI-435
     FARAMETER',F9.6)                                                   VARI-436
 1023 FORMAT (/' *** FOLDING MODEL ***'/' REAL PART',10X,'V =',F10.4,6X,VARI-437
     1'R =',F10.4,6X,'A =',F10.4/' IMAGINARY PART',6X,'V =', F10.4,6X,'RVARI-438
     2 =',F10.4,6X,'A =',F10.4/' COULOMB PART',7X,'V =',F10.4,6X,'R =',FVARI-439
     310.4,6X,'A =',F10.4)                                              VARI-440
 1024 FORMAT (/' **** EXTERNAL POTENTIAL PARAMETERS ****'/)             VARI-441
 1025 FORMAT (' (',I1,',',I2,') GIVEN BY POINTS WITH THE PARAMETERS FROMVARI-442
     1',I4,' TO',I4/1P,2D15.6/(1P,8D15.6))                              VARI-443
 1026 FORMAT (' (',I1,',',I2,') TYPE',I3,' FROM',I4,' TO',I4/1P,2D15.6/(VARI-444
     11P,8D15.6))                                                       VARI-445
 1027 FORMAT (' (',I1,',',I2,') TYPE',I3,' FROM',I4,' TO',I4,4X,6D14.6/(VARI-446
     17X,8D14.6))                                                       VARI-447
 1028 FORMAT (' VALUES READ:',F12.6,3X,F9.6)                            VARI-448
 1029 FORMAT (' DEFORMATIONS: PARAMETERS FROM',I4,' TO ',I4,10X,4D18.6/(VARI-449
     152X,4D18.6))                                                      VARI-450
 1030 FORMAT (' DEFORMATIONS READ:')                                    VARI-451
 1031 FORMAT (' FOLDING PARAMETERS:',3F10.5/(20X,3F10.5))               VARI-452
 1032 FORMAT (/' BETA(I,J) FOR  L   K',9X,'V',9X,'W',8X,'VS',8X,'WS',7X,VARI-453
     1'VSO',7X,'WSO',6X,'COUL S.O. COUL'/(5X,I5,5X,I2,2X,I2,2X,8F10.5)) VARI-454
 1033 FORMAT (/10X,'WITHOUT HEAVY ION CORRECTION'/)                     VARI-455
 1034 FORMAT (5X,I5,5X,I2,2X,I2,2X,8F10.5)                              VARI-456
 1035 FORMAT (/' *** NUCLEAR VARIABLES ***'//(1X,6F20.6))               VARI-457
 1036 FORMAT (/' *** NUCLEAR MATRIX ELEMENTS ***'//(1X,6F20.6))         VARI-458
 1037 FORMAT (/' *** SPIN-ORBIT PARAMETRISATION ***'//1X,6F20.6/)       VARI-459
 1038 FORMAT (/' *** HAUSER-FESHBACH CORRECTIONS ***'//1X,5F20.6/)      VARI-460
 1039 FORMAT (/' *** GIANT DIPOLE RESONANCE PARAM. ***'//1X,5F20.6/)    VARI-461
 1040 FORMAT (/' *** DENSITY OF STATES ***'//(1X,I3,'  SA:',D13.6,6X,'UXVARI-462
     1:',D13.6,5X,'TAU:',D13.6,6X,'SG:',D13.6/28X,'E0:',D13.6,6X,'EX:',DVARI-463
     213.6,7X,'Z:',F5.0))                                               VARI-464
 1041 FORMAT (/' *** GAMMA TRANSMISSION COEFFICIENTS ***'//(1X,4(I5,F20.VARI-465
     16)))                                                              VARI-466
 1042 FORMAT (/' *** FISSION DATA ***'//(1X,2(I5,2F20.6)))              VARI-467
 1043 FORMAT (/' *** DISPERSION RELATION PARAMETERS ***'//(' POTENTIAL',VARI-468
     1I5/1X,6F20.6/1X,6F20.6/1X,F20.6))                                 VARI-469
 1044 FORMAT (' VARIABLE',I3,' DEFINED BY',I5,I4,' CANNOT BE USED')     VARI-470
 1045 FORMAT (/' IN VARI  ...  STOP')                                   VARI-471
      END                                                               VARI-472
C 01/01/04                                                      ECIS03  EVAL-000
      SUBROUTINE EVAL(NW,DW,CM,LO)                                      EVAL-001
C THIS SUBROUTINE CHANGES SOME PARAMETERS TO DO A NEW CALCULATION.      EVAL-002
C THE VALUES READ HERE ARE ABSOLUTE CHANGES ( NEX=0 ),                  EVAL-003
C RELATIVE CHANGES ( NEX>0 ) OR PERCENTAGES ( NEX<0 ).                  EVAL-004
C IF THE LABORATORY ENERGY IS CHANGED, COULOMB FUNCTIONS AND REDUCED    EVAL-005
C NUCLEAR MATRIX ELEMENTS ARE RECALCULATED EVEN IF THEY ARE NOT MODIFIEDEVAL-006
C IF NUCLEAR PARAMETERS ARE CHANGED, REDUCED NUCLEAR MATRIX ELEMENTS AREEVAL-007
C CALCULATED AGAIN. IN ALL THE OTHERS CASES, THE COMPUTATION RESTARTS   EVAL-008
C WITH THE COMPUTATION OF POTENTIALS.                                   EVAL-009
C INDEXES FOR PARAMETERS ARE THE ONES USED IN SEARCH (SEE VARI)         EVAL-010
C HOWEVER 0 MEANS ENERGY IN THE LABORATORY SYSTEM.                      EVAL-011
C INPUT VARIABLES:NWV,NIPP:   DESCRIPTION OF LEVELS (SEE CALX)          EVAL-012
C                 NPOT,NPP:   OPTICAL MODEL AND FOLDING AND THEIR NUMBEREVAL-013
C                 NBETA,NBET: DEFORMATIONS AND THEIR NUMBER             EVAL-014
C                 NVAA,NVA:   NUCLEAR PARAMETERS:THEIR NUMBER IS NVA    EVAL-015
C                 NT,(NIVQ-NT)/3: REDUCED NUCLEAR MATRIX ELEMENTS,NUMBEREVAL-016
C                 NSCN:       DESCRIPTION OF LEVEL DENSITIES            EVAL-017
C                 NIW:        MAXIMUM NUMBER OF RUNS FOR A SEARCH       EVAL-018
C                 NIVY:       TABLE OF FORM FACTORS  (SEE REDM)         EVAL-019
C                 LO: LOGICAL CONTROLS,RETURNS LO(215)=.TRUE. IF ENERGY EVAL-020
C IN COMMON /DCHI/YY:       FIRST STEP SIZE OF SEARCH IN YY(1)          EVAL-021
C WORKING SPACE:  FROM NCX: FOR INPUT                                   EVAL-022
C COMMON /NCOMP/NFISS: NUMBER OF FISSION TRANSMISSION COEFFICIENTS      EVAL-023
C               NRD:   NUMBER OF GAMMA TRANSMISSION COEFFICIENTS        EVAL-024
C               NCONS: NUMBER OF LEVEL DENSITIES NEEDED                 EVAL-025
C               NCOLX: TOTAL NUMBER OF LEVELS WITHOUT DISCRETISATION    EVAL-026
C               AZ(I): SPIN-ORBIT PARAMETRISATION FOR I-1 TO 6          EVAL-027
C                      HAUSER FESHBACH PARAMETERS FOR J=7 TO 11         EVAL-028
C                      GIANT DIPOLE RESONANCE DESCRIPTION FOR I=12 TO 16EVAL-029
C MEANING OF INDEX AND LOGICAL RETURNED:                                EVAL-030
C      1-1000      OPTICAL MODEL,FOLDING PARAMETERS                     EVAL-031
C   1001-2000      DEFORMATIONS FOR A GIVEN POTENTIAL                   EVAL-032
C   2001-3000      DEFORMATIONS FOR A GIVEN MULTIPOLE                   EVAL-033
C   3001-4000      INDIVIDUAL DEFORMATION                               EVAL-034
C   4001-5000      NUCLEAR MODEL PARAMETER              - LO(211)=.TRUE.EVAL-035
C   5001-6000      NUCLEAR MATRIX ELEMENT                               EVAL-036
C   9001-7000      SPIN-ORBIT AND C. N. PARAMETRISATION                 EVAL-037
C                  SPIN-ORBIT PARAMETRISATION                           EVAL-038
C                  BZ1, BZ2, BZ3, BZ4, BZ5              - LO(212)=.TRUE.EVAL-039
C                  TGO, BN, FNUG, EGD, GGD              - LO(212)=.TRUE.EVAL-040
C                  SA, UX, TAU, SG, E0, EX FOR GAMMA    - LO(212)=.TRUE.EVAL-041
C                  SA, UX, TAU, SG, E0, EX FOR CONTINUUM- LO(214)=.TRUE.EVAL-042
C                  GAMMA TRANSMISSION FACTORS                           EVAL-043
C                  FISSION TR. COEF., DEGREE OF FREEDOM                 EVAL-044
C   7001-8000      DISPERSION RELATIONS PARAMETRISATION - LO(213)=.TRUE.EVAL-045
C  10001-99999     EXTERNAL OPTICAL MODEL (PARAMETERS ABOVE 1000)       EVAL-046
C IT STOPS THE CALCULATION FOR AN INDEX OF PARAMETER OUT OF RANGE       EVAL-047
C WORKING SPACE: IND,X EQUIVALENT BY CALL                               EVAL-048
C***********************************************************************EVAL-049
      IMPLICIT REAL*8 (A-H,O-Z)                                         EVAL-050
      LOGICAL LO(250),LX                                                EVAL-051
      DIMENSION DW(1000),NW(2,1000)                                     EVAL-052
      CHARACTER*4 AA(2),TITLE                                           EVAL-053
      CHARACTER*8 BB(2,2)                                               EVAL-054
      COMMON /DECOU/ NJIT,NIPP,NPAA,NWV,NIPH,NSCN,NPAR,NNIV,NFIS,NGAM,NPEVAL-055
     1OT,NBETA,NFM,NTGX,NDONN,NRC,NIW,NDE,NISE,NNVI,NNWI,NCC,MCC,NXA,NAMEVAL-056
     21,NFAC,NFAM,NPAD,NFG,NXG,NSM,NRES,NXX,NT,NIVQ,NIVY,NIVZ,NCOI,MIPI,EVAL-057
     3NXD,MWV,NIXT,NTY,NTX,NRY,NRCO,NRDO,NVC1,NVC2,NNC,NCX,IDMT,NCOLL,NJEVAL-058
     4MAX,ITERM,NPP,JDM,JIT,NSEC,LMD,MCM(2),NCOLS,NCOLT,KMAX,KMIN,NVA,NBEVAL-059
     5ET,NBT1,LMX,LMAX1,NLT,ISM,IQM,IQMAX,MS1,MS2,NCT(6),KBA,KAB,KBC,KCCEVAL-060
     6,NJC,JTX,JTH,NCOLR,NREC,NTOT,NFA,LMAX2,KE,ITEMM,NPLACE,KXT,NRZ,NTZEVAL-061
     7,LMAX3,IPM,IPK,BJM,EITER,ACONV,CONJ,H,NSPIN                       EVAL-062
      COMMON /TITR/ TITLE(18)                                           EVAL-063
      COMMON /NCOMP/ NSP(3),NFISS,NRD,NCONT,NCJ,NCONS,NCO,NCOLX,NR(2),ACEVAL-064
     1(2),AZ(18)                                                        EVAL-065
      COMMON /DCHI/ CHI2,CHI2M,YY(3)                                    EVAL-066
      COMMON /INOUT/ MR,MW,MS                                           EVAL-067
      DATA AA /' NEW','LAST'/                                           EVAL-068
      DATA BB /'INCREASE','S )     ','NEW VALU','ES )    '/             EVAL-069
      NVAT=34*NPP                                                       EVAL-070
      LO(37)=.FALSE.                                                    EVAL-071
      LX=.FALSE.                                                        EVAL-072
      READ (MR,1000) LO(37),LX,NIN,NEX,YY(1)                            EVAL-073
      LO(137)=.NOT.LO(37)                                               EVAL-074
      IF (LX) READ (MR,1001) TITLE                                      EVAL-075
      NX=MIN0(1,MAX0(NEX,-1))+2                                         EVAL-076
      I1=1                                                              EVAL-077
      I2=1                                                              EVAL-078
      IF (LO(137)) I1=2                                                 EVAL-079
      IF (NX.EQ.2) I2=2                                                 EVAL-080
      WRITE (MW,1002) AA(I1),NIN,BB(1,I2),BB(2,I2)                      EVAL-081
      IF (NX.EQ.1) WRITE (MW,1003)                                      EVAL-082
      DO 1 I=211,220                                                    EVAL-083
    1 LO(I)=.FALSE.                                                     EVAL-084
      IF (NCX+2*NIN.GT.IDMT) CALL MEMO('EVAL',IDMT,NCX+2*NIN,1)         EVAL-085
      READ (MR,1004) (NW(1,2*I+NCX-2),I=1,NIN)                          EVAL-086
      READ (MR,1005) (DW(2*I+NCX-1),I=1,NIN)                            EVAL-087
      DO 49 I=1,NIN                                                     EVAL-088
      NW(1,2*I+NCX-2)=MAX0(0,NW(1,2*I+NCX-2))                           EVAL-089
      J=MOD(NW(1,2*I+NCX-2),1000)                                       EVAL-090
      IK=(NW(1,2*I+NCX-2)+1999)/1000                                    EVAL-091
      EY=DW(2*I+NCX-1)                                                  EVAL-092
      IF (IK.NE.1) GO TO 8                                              EVAL-093
C ENERGY IN THE LABORATORY SYSTEM                                       EVAL-094
      LO(215)=.TRUE.                                                    EVAL-095
      DW(NWV+11)=EY                                                     EVAL-096
      EX=DW(NWV+2)                                                      EVAL-097
      IF (NX.NE.2) GO TO 7                                              EVAL-098
    2 IF (LO(8)) GO TO 3                                                EVAL-099
      DW(NWV+2)=EY*DW(NWV+1)/(DW(NWV)+DW(NWV+1))                        EVAL-100
      GO TO 4                                                           EVAL-101
C RELATIVISTIC C.-M. ENERGY ECM=SQRT((M1+M2)**2+2*M2*ELAB))-M1-M2       EVAL-102
    3 DW(NWV+2)=CM*(DSQRT((DW(NWV)+DW(NWV+1))**2+2.D0*DW(NWV+1)*EY/CM)-DEVAL-103
     1W(NWV)-DW(NWV+1))                                                 EVAL-104
    4 WRITE (MW,1006) I,J,EY,DW(2*I+NCX-1),DW(NWV+2),EX                 EVAL-105
      IF (NCOLX.EQ.1) GO TO 49                                          EVAL-106
      DO 6 J=2,NCOLX                                                    EVAL-107
      DW(NWV+18*J-16)=DW(NWV+18*J-16)+DW(NWV+2)-EX                      EVAL-108
      IF (LO(8)) GO TO 5                                                EVAL-109
      DW(NWV+18*J-7)=DW(NWV+18*J-16)*(DW(NWV+18*J-18)+DW(NWV+18*J-17))/DEVAL-110
     1W(NWV+18*J-17)                                                    EVAL-111
      GO TO 6                                                           EVAL-112
    5 DW(NWV+18*J-7)=DW(NWV+18*J-16)*(DW(NWV+18*J-16)/(2.D0*CM)+DW(NWV+1EVAL-113
     18*J-18)+DW(NWV+18*J-17))/DW(NWV+18*J-17)                          EVAL-114
    6 CONTINUE                                                          EVAL-115
      GO TO 49                                                          EVAL-116
    7 IF (NEX.LT.0) EY=.01D0*EY*EX                                      EVAL-117
      EY=EX+EY                                                          EVAL-118
      GO TO ( 2 , 18 , 23 , 29 , 34 , 36 , 38 , 41 , 48 ),IK            EVAL-119
    8 IF (IK.GT.11) GO TO 9                                             EVAL-120
      IF (IK.GT.9) GO TO 51                                             EVAL-121
      GO TO ( 10 , 10 , 19 , 25 , 31 , 35 , 37 , 39 , 47 ),IK           EVAL-122
    9 IK=2                                                              EVAL-123
      J=NW(1,2*I+NCX-2)-9000                                            EVAL-124
   10 IF (LO(7)) GO TO 12                                               EVAL-125
C OPTICAL MODEL AND FOLDING PARAMETERS                                  EVAL-126
      N=1+MOD(J-1,34)                                                   EVAL-127
      M=1+(J-1)/34                                                      EVAL-128
      K=IABS(NW(1,NIPP+15*M-15))                                        EVAL-129
      IF (MOD(N,3).NE.2.OR.N.GT.24) GO TO 11                            EVAL-130
      EX=DW(NWV+18*K-17)**.33333333333333D0                             EVAL-131
      IF (LO(16)) EX=EX+DW(NWV+18*K-18)**.33333333333333D0              EVAL-132
      EY=EY*EX                                                          EVAL-133
   11 IF (J.GT.NVAT.OR.N.EQ.19) GO TO 51                                EVAL-134
      EX=DW(NPOT+J-1)                                                   EVAL-135
      IF (NX.NE.2) GO TO 7                                              EVAL-136
      GO TO 18                                                          EVAL-137
C EXTERNAL OPTICAL PARAMETERS                                           EVAL-138
   12 I1=NW(1,NPOT)-2                                                   EVAL-139
      DO 13 L=1,I1                                                      EVAL-140
      IF (J.GE.NW(1,NPOT+L).AND.J.LE.NW(2,NPOT+L)) GO TO 14             EVAL-141
   13 CONTINUE                                                          EVAL-142
      GO TO 52                                                          EVAL-143
   14 EX=DW(NPOT+J-1)                                                   EVAL-144
      IF (L.EQ.1) GO TO 17                                              EVAL-145
      M=NW(1,NPOT+L)                                                    EVAL-146
      N=NW(2,NPOT+M-2)                                                  EVAL-147
      IV=NW(2,NPOT+N-1)                                                 EVAL-148
      IF (IV.LT.1.OR.IV.GT.6) GO TO 17                                  EVAL-149
      NST=NW(1,NPOT+N+1)                                                EVAL-150
      IF (NST.GT.0) GO TO 17                                            EVAL-151
      IT1=MOD(NW(1,NPOT+N-1)-1,8)+1                                     EVAL-152
      J1=(NW(1,NPOT+N-1)-1)/8                                           EVAL-153
      J2=4                                                              EVAL-154
      IF (IT1.GT.6) J2=5                                                EVAL-155
      IF (J-M.GT.1.AND.J-M.LT.J2) GO TO 17                              EVAL-156
      K=IABS(NST)                                                       EVAL-157
      FX=DW(NWV+18*K-17)**.33333333333333D0                             EVAL-158
      FY=FX                                                             EVAL-159
      IF (LO(16)) FX=FX+DW(NWV+18*K-18)**.33333333333333D0              EVAL-160
C TRANSFORMATION OF DEPTH AND RADIUS                                    EVAL-161
      IF (J-M.EQ.1) EY=EY*FX                                            EVAL-162
      FY=FY/FX                                                          EVAL-163
      IF (J.GT.M+2) GO TO 16                                            EVAL-164
      IF (LO(116).OR.J1.LE.NPP.OR.J.NE.M) GO TO 17                      EVAL-165
      ITYZ=IV                                                           EVAL-166
      IF (ITYZ.GE.5) ITYZ=ITYZ-4                                        EVAL-167
      ITYW=1                                                            EVAL-168
      IF (IT1.LE.6) GO TO 15                                            EVAL-169
      ITI=7*(J1-NPP)                                                    EVAL-170
      ITYW=ITYW*NW(2-MOD(ITI,2),NIVY+(ITI-1)/2)                         EVAL-171
   15 IF (LO(6)) ITYW=ITYW-1                                            EVAL-172
      IF (ITYZ.GT.1) EY=EY*FY**((ITYZ-1)*ITYW)                          EVAL-173
      GO TO 17                                                          EVAL-174
C TRANSFORMATION OF DEFORMATIONS                                        EVAL-175
   16 J3=J-M-J2                                                         EVAL-176
      IF (IT1.LT.7) J3=0                                                EVAL-177
      IF (LO(106)) J3=J3+1                                              EVAL-178
      EY=EY*FY**J3                                                      EVAL-179
   17 IF (NX.NE.2) GO TO 7                                              EVAL-180
   18 IF (LO(107)) WRITE (MW,1007) I,J,N,M,EY,DW(2*I+NCX-1),DW(NPOT+J-1)EVAL-181
      IF (LO(7)) WRITE (MW,1008) I,J,EY,DW(2*I+NCX-1),DW(NPOT+J-1)      EVAL-182
      DW(NPOT+J-1)=EY                                                   EVAL-183
      GO TO 49                                                          EVAL-184
   19 IF (J.GT.8) GO TO 51                                              EVAL-185
C DEFORMATIONS FOR A GIVEN POTENTIAL                                    EVAL-186
      K2=J                                                              EVAL-187
      DO 20 K1=1,NBET                                                   EVAL-188
      IF (LO(1).AND.LO(3).AND.NW(2,NBETA+9*K1-1).NE.0) GO TO 20         EVAL-189
      IF (DW(NBETA+K2+9*K1-10).NE.0.D0) GO TO 21                        EVAL-190
   20 CONTINUE                                                          EVAL-191
      WRITE (MW,1009) I,NW(1,2*I+NCX-2),K2                              EVAL-192
      GO TO 53                                                          EVAL-193
   21 EY=EY/DW(NBETA+K2+9*K1-10)                                        EVAL-194
      K3=1                                                              EVAL-195
      IF ((NX.NE.1).AND.LO(16)) GO TO 32                                EVAL-196
   22 EX=1                                                              EVAL-197
      IF (NX.NE.2) GO TO 7                                              EVAL-198
   23 WRITE (MW,1010) I,NW(1,2*I+NCX-2),K2,K1,EY,DW(2*I+NCX-1)          EVAL-199
      DO 24 L=K1,NBET                                                   EVAL-200
      IF (LO(1).AND.LO(3).AND.NW(2,NBETA+9*K1-1).NE.0) GO TO 24         EVAL-201
      EX=DW(NBETA+K2+9*L-10)*EY                                         EVAL-202
      WRITE (MW,1011) K2,L,EX,DW(NBETA+K2+9*L-10)                       EVAL-203
      DW(NBETA+K2+9*L-10)=EX                                            EVAL-204
   24 CONTINUE                                                          EVAL-205
      GO TO 49                                                          EVAL-206
C DEFORMATIONS FOR A GIVEN MULTIPOLE                                    EVAL-207
   25 K1=J                                                              EVAL-208
      IF (J.GT.NBET) GO TO 51                                           EVAL-209
      DO 26 K2=1,8                                                      EVAL-210
      IF (DW(NBETA+K2+9*K1-10).NE.0.D0) GO TO 27                        EVAL-211
   26 CONTINUE                                                          EVAL-212
      WRITE (MW,1012) I,NW(1,2*I+NCX-2),K1                              EVAL-213
      GO TO 53                                                          EVAL-214
   27 EY=EY/DW(NBETA+K2+9*K1-10)                                        EVAL-215
      K3=2                                                              EVAL-216
      IF ((NX.NE.1).AND.LO(16)) GO TO 22                                EVAL-217
   28 EX=1                                                              EVAL-218
      IF (NX.NE.2) GO TO 7                                              EVAL-219
   29 WRITE (MW,1010) I,NW(1,2*I+NCX-2),K2,K1,EY,DW(2*I+NCX-1)          EVAL-220
      DO 30 L=K2,8                                                      EVAL-221
      EX=DW(NBETA+L+9*K1-10)*EY                                         EVAL-222
      WRITE (MW,1011) L,K1,EX,DW(NBETA+L+9*K1-10)                       EVAL-223
   30 DW(NBETA+L+9*K1-10)=EX                                            EVAL-224
      GO TO 49                                                          EVAL-225
C INDIVIDUAL DEFORMATIONS                                               EVAL-226
   31 IF (J.GT.10*NBET) GO TO 51                                        EVAL-227
      K1=1+(J-1)/10                                                     EVAL-228
      K2=1+MOD(J-1,10)                                                  EVAL-229
      IF (K2.GT.8) GO TO 51                                             EVAL-230
      K3=3                                                              EVAL-231
      IF (LO(116)) GO TO 33                                             EVAL-232
C SEARCH OF THE CORRECTIONS FOR HEAVY IONS                              EVAL-233
   32 EX=DW(NWV+1)**.33333333333333D0/(DW(NWV+1)**.33333333333333D0+DW(NEVAL-234
     1WV)**.33333333333333D0)                                           EVAL-235
      JK=1                                                              EVAL-236
      IF (LO(101).AND.LO(3)) JK=K1-1                                    EVAL-237
      K=JK                                                              EVAL-238
      IF (K2.GT.6) K=K*NW(1,NBETA+9*K1-1)                               EVAL-239
      IF (LO(6)) K=K-JK                                                 EVAL-240
      EY=EY*EX**K                                                       EVAL-241
      IF (K3-2) 22 , 28 , 33                                            EVAL-242
   33 EX=DW(NBETA+K2+9*K1-10)                                           EVAL-243
      IF (NX.NE.2) GO TO 7                                              EVAL-244
   34 WRITE (MW,1013) I,NW(1,2*I+NCX-2),K2,K1,EY,DW(2*I+NCX-1),DW(NBETA+EVAL-245
     1K2+9*K1-10)                                                       EVAL-246
      DW(NBETA+K2+9*K1-10)=EY                                           EVAL-247
      GO TO 49                                                          EVAL-248
   35 IF (J.GT.NVA) GO TO 51                                            EVAL-249
      EX=DW(NPAA+J-1)                                                   EVAL-250
      IF (NX.NE.2) GO TO 7                                              EVAL-251
   36 WRITE (MW,1014) I,NW(1,2*I+NCX-2),J,EY,DW(2*I+NCX-1),DW(NPAA+J-1) EVAL-252
      DW(NPAA+J-1)=EY                                                   EVAL-253
      GO TO 49                                                          EVAL-254
C  NUCLEAR MATRIX ELEMENTS                                              EVAL-255
   37 IF (3*J.GT.NIVQ-NT) GO TO 51                                      EVAL-256
      EX=DW(NT+3*J-3)                                                   EVAL-257
      LO(211)=.TRUE.                                                    EVAL-258
      IF (NX.NE.2) GO TO 7                                              EVAL-259
   38 WRITE (MW,1015) I,NW(1,2*I+NCX-2),J,EY,DW(2*I+NCX-1),DW(NT+3*J-3) EVAL-260
      DW(NT+3*J-3)=EY                                                   EVAL-261
      GO TO 49                                                          EVAL-262
C  SPIN-ORBIT AND H. F. PARAMETRISATION                                 EVAL-263
   39 IF (J.GT.6*NCONS+16+2*NFISS+NRD) GO TO 51                         EVAL-264
      IF (LO(181).AND.J.GT.6) GO TO 51                                  EVAL-265
      IF (J.GT.16) GO TO 45                                             EVAL-266
      IF (LO(104).AND.J.LE.6) GO TO 51                                  EVAL-267
      IF (J.LE.6) GO TO 40                                              EVAL-268
      IF (LO(181)) GO TO 51                                             EVAL-269
      IF (LO(82).AND.J.GT.9) GO TO 51                                   EVAL-270
      IF (LO(186).AND.J.GT.11) GO TO 51                                 EVAL-271
      IF (LO(82)) GO TO 40                                              EVAL-272
      IF (J.NE.9.AND.J.LE.11.AND.LO(87)) GO TO 51                       EVAL-273
      IF (LO(87)) GO TO 40                                              EVAL-274
      IF (J.EQ.7) GO TO 51                                              EVAL-275
      IF (AZ(8).NE.0.D0.AND.J.GT.8.AND.J.LE.11) GO TO 51                EVAL-276
      IF (AZ(8).EQ.0.D0.AND.J.EQ.8) GO TO 51                            EVAL-277
   40 EX=AZ(J)                                                          EVAL-278
      IF (NX.NE.2) GO TO 7                                              EVAL-279
   41 IF (J.GT.6) GO TO 42                                              EVAL-280
      WRITE (MW,1016) I,NW(1,2*I+NCX-2),J,EY,DW(2*I+NCX-1),AZ(J)        EVAL-281
      GO TO 44                                                          EVAL-282
   42 IF (J.GT.16) GO TO 46                                             EVAL-283
      LO(212)=.TRUE.                                                    EVAL-284
      K=J-6                                                             EVAL-285
      IF (K.GT.6) GO TO 43                                              EVAL-286
      WRITE (MW,1017) I,NW(1,2*I+NCX-2),K,EY,DW(2*I+NCX-1),AZ(J)        EVAL-287
      GO TO 44                                                          EVAL-288
   43 K=J-5                                                             EVAL-289
      WRITE (MW,1018) I,NW(1,2*I+NCX-2),K,EY,DW(2*I+NCX-1),AZ(J)        EVAL-290
   44 AZ(J)=EY                                                          EVAL-291
      GO TO 49                                                          EVAL-292
   45 JJ=J-16+(J-16)/6                                                  EVAL-293
      EX=DW(NSCN+JJ-1)                                                  EVAL-294
      IF (NX.NE.2) GO TO 7                                              EVAL-295
   46 K=1+(J-17)/NCONS                                                  EVAL-296
      L=1+MOD(J-17,NCONS)                                               EVAL-297
      IF (K.EQ.NCONS-NCONT) LO(212)=.TRUE.                              EVAL-298
      IF (K.GT.NCONS-NCONT) LO(214)=.TRUE.                              EVAL-299
      WRITE (MW,1019) I,NW(1,2*I+NCX-2),L,K,EY,DW(2*I+NCX-1),DW(NSCN+JJ-EVAL-300
     11)                                                                EVAL-301
      DW(NSCN+JJ-1)=EY                                                  EVAL-302
      GO TO 49                                                          EVAL-303
   47 IF (J.GT.12*NPP) GO TO 51                                         EVAL-304
      K=(J-1)/12+1                                                      EVAL-305
      L=J-12*K+15                                                       EVAL-306
      IF ((NW(1,NIPP+15*K-14).EQ.0).AND.(L.LE.11)) GO TO 51             EVAL-307
      IF ((NW(2,NIPP+15*K-14).EQ.0).AND.(L.GT.11)) GO TO 51             EVAL-308
      LO(213)=.TRUE.                                                    EVAL-309
      EX=DW(NIPP+15*K+L-16)                                             EVAL-310
      IF (NX.NE.2) GO TO 7                                              EVAL-311
   48 CONTINUE                                                          EVAL-312
      WRITE (MW,1020) I,NW(1,2*I+NCX-2),L,K,EY,DW(2*I+NCX-1),DW(NIPP+15*EVAL-313
     1K+L-16)                                                           EVAL-314
      DW(NIPP+15*K+L-16)=EY                                             EVAL-315
   49 CONTINUE                                                          EVAL-316
      IF (LO(132)) RETURN                                               EVAL-317
      CHI2M=1.D35                                                       EVAL-318
      IF (YY(1).EQ.0.D0) YY(1)=20.D0                                    EVAL-319
      YY(3)=0.D0                                                        EVAL-320
      NW(2,NIW)=NW(2,NIW)-NW(1,NIW+1)                                   EVAL-321
      NW(1,NIW+1)=1                                                     EVAL-322
      WRITE (MW,1021) NW(2,NIW),YY(1)                                   EVAL-323
      IF (NW(2,NIW).LE.0) GO TO 53                                      EVAL-324
      II=51                                                             EVAL-325
      IF (LO(76).OR.LO(175)) II=59                                      EVAL-326
      DO 50 I=II,65                                                     EVAL-327
      LO(I+185)=LO(I)                                                   EVAL-328
      LO(I)=.FALSE.                                                     EVAL-329
   50 LO(I+100)=.TRUE.                                                  EVAL-330
      LO(216)=.TRUE.                                                    EVAL-331
      RETURN                                                            EVAL-332
   51 WRITE (MW,1022) I,NW(1,2*I+NCX-2),IK,J,DW(2*I+NCX-1)              EVAL-333
      GO TO 53                                                          EVAL-334
   52 IF (J.GT.NW(2,NPOT+1)) GO TO 51                                   EVAL-335
      WRITE (MW,1023) I,EY,J,(NW(1,NPOT+L),NW(2,NPOT+L),L=1,I1)         EVAL-336
   53 WRITE (MW,1024)                                                   EVAL-337
      STOP                                                              EVAL-338
 1000 FORMAT (2L1,I3,I5,F10.5)                                          EVAL-339
 1001 FORMAT (18A4)                                                     EVAL-340
 1002 FORMAT ('1',A4,' COMPUTATION WITH',I4,'  NEW PARAMETERS',10X,'( INEVAL-341
     1PUT OF ',2A8)                                                     EVAL-342
 1003 FORMAT (20X,'*** VALUES GIVEN AS PERCENTAGES ***')                EVAL-343
 1004 FORMAT (14I5)                                                     EVAL-344
 1005 FORMAT (7F10.5)                                                   EVAL-345
 1006 FORMAT (2X,I2,' PARAM.',I5,3X,'NEW LAB. ENERGY',D15.8,' (',D15.8,'EVAL-346
     1)',3X,'CENTER OF MASS ENERGY',D15.6,5X,'OLD VALUE',D15.6)         EVAL-347
 1007 FORMAT (2X,I2,' PARAM.',I5,3X,'VALUE OF V-OPTICAL(',I2,',',I2,') =EVAL-348
     1',D15.6,' (',D15.6,')',3X,'OLD VALUE',D15.6)                      EVAL-349
 1008 FORMAT (2X,I2,' PARAM.',I5,'TH VALUE OF EXTERNAL POTENTIAL =',D15.EVAL-350
     16,' (',D15.6,')',3X,'OLD VALUE',D15.6)                            EVAL-351
 1009 FORMAT (' THE VARIABLE',I3,' CANNOT BE USED BECAUSE ',I5,'  IS A VEVAL-352
     1ARIATION OF THE DEFORMATIONS OF POTENTIAL',I3,' WHICH ARE ZERO')  EVAL-353
 1010 FORMAT (2X,I2,' PARAM.',I5,3X,'PROPORTIONAL TO BETA(',I2,',',I2,')EVAL-354
     1  WITH RATIO',D15.6,' (',D15.6,')')                               EVAL-355
 1011 FORMAT (15X,'BETA(',I2,',',I2,') =',D15.6,5X,'OLD VALUE',D15.6)   EVAL-356
 1012 FORMAT (' THE VARIABLE',I3,' CANNOT BE USED BECAUSE ',I5,'  IS A VEVAL-357
     1ARIATION FOR A GIVEN MULTIPOLE',I3,' AND THEY ARE ZERO')          EVAL-358
 1013 FORMAT (2X,I2,' PARAM.',I5,3X,'BETA(',I2,',',I2,') =',D15.6,' (',EEVAL-359
     115.6,')',3X,'OLD VALUE',D15.6)                                    EVAL-360
 1014 FORMAT (2X,I2,' PARAM.',I5,3X,'VAR(',I2,') =',D15.6,' (',D15.6,')'EVAL-361
     1,3X,'OLD VALUE',D15.6)                                            EVAL-362
 1015 FORMAT (2X,I2,' PARAM.',I5,3X,'T(4,',I3,') =',D15.6,' (',D15.6,')'EVAL-363
     1,3X,'OLD VALUE',D15.6)                                            EVAL-364
 1016 FORMAT (2X,I2,' PARAM.',I5,3X,'AZ(',I1,') =',D15.6,' (',D15.6,')',EVAL-365
     13X,'OLD VALUE',D15.6)                                             EVAL-366
 1017 FORMAT (2X,I2,' PARAM.',I5,3X,'BZ(',I1,') =',D15.6,' (',D15.6,')',EVAL-367
     13X,'OLD VALUE',D15.6)                                             EVAL-368
 1018 FORMAT (2X,I2,' PARAM.',I5,3X,'GIANT RESONANCE(',I1,') =',D15.6,' EVAL-369
     1(',D15.6,')',3X,'OLD VALUE',D15.6)                                EVAL-370
 1019 FORMAT (2X,I2,' PARAM.',I5,3X,'SCN(',I3,',',I3,') =',D15.6,' (',D1EVAL-371
     15.6,')',3X,'OLD VALUE',D15.6)                                     EVAL-372
 1020 FORMAT (2X,I2,' PARAM.',I5,3X,'PIP(',I3,',',I3,') =',D15.6,' (',D1EVAL-373
     15.6,')',3X,'OLD VALUE',D15.6)                                     EVAL-374
 1021 FORMAT (' NEW MAXIMUM NUMBER OF RUNS:',I6,10X,'STARTING SCALE',F10EVAL-375
     1.2)                                                               EVAL-376
 1022 FORMAT (' VARIABLE',I3,' DEFINED BY',I5,' (',I2,I5,')',' WITH VALUEVAL-377
     1E ',D15.6,' CANNOT BE USED')                                      EVAL-378
 1023 FORMAT (' VARIABLE',I3,D15.6,' DEFINED BY',I5,' CANNOT BE USED FOREVAL-379
     1 THE PARAMETER WHICH ARE THE INTEGER VALUES'/(4(5X,I6,' TO',I6))) EVAL-380
 1024 FORMAT (/' IN EVAL  ...  STOP')                                   EVAL-381
      END                                                               EVAL-382
C 01/01/04                                                      ECIS03  REST-000
      SUBROUTINE REST(KF,NW,DW,LO,IDMX)                                 REST-001
C IF KF=0                                                               REST-002
C IT SAVES ON TAPE MS ALL THE DATA NEEDED TO RE-START A                 REST-003
C SEARCH STOPPED BY THE NUMBER OF EVALUATIONS (BY TIME IF LO(34)=.TRUE.)REST-004
C IT IS CALLED ONLY IF LO(35)=.TRUE.                                    REST-005
C IF KF.NE.0                                                            REST-006
C IT READS ON TAPE MS TO RE-START THE SEARCH                            REST-007
C IT IS CALLED ONLY IF LO(36)=.TRUE.                                    REST-008
C ******** UNLESS THE MAIN SUBROUTINE IS CHANGED, MS = 8 ***************REST-009
C***********************************************************************REST-010
      IMPLICIT REAL*8 (A-H,O-Z)                                         REST-011
      LOGICAL LO(250)                                                   REST-012
      DIMENSION DW(IDMX),NW(2,IDMX),T(18)                               REST-013
      CHARACTER*4 T,TITLE                                               REST-014
      COMMON /TITR/ TITLE(18)                                           REST-015
      COMMON /ANGL/ N1(8)                                               REST-016
      COMMON /DCONS/ N2(10)                                             REST-017
      COMMON /DCONT/ N0(8)                                              REST-018
      COMMON /DECOU/ N3(115)                                            REST-019
      COMMON /NCOMP/ N4(52)                                             REST-020
      COMMON /POTE1/ N5(22)                                             REST-021
      COMMON /POTE2/ N6(12)                                             REST-022
      COMMON /NCJL/ N7(4)                                               REST-023
      COMMON /SJMM/ N8(2)                                               REST-024
      COMMON /DCHI/ N9(10)                                              REST-025
      COMMON /INOUT/ MR,MW,MS                                           REST-026
      IDMY=IDMX                                                         REST-027
      REWIND MS                                                         REST-028
      IF (KF.NE.0) GO TO 1                                              REST-029
C WRITES COMMONS FIRST AND W AFTER                                      REST-030
      WRITE (MS) IDMX,LO,N1,N2,N3,N4,N5,N6,N7,N8,N9,N0,TITLE            REST-031
C N3(46) IS NRCO,N3(98) IS NPLACE,N3(52) IS IDMT                        REST-032
      I1=N3(46)                                                         REST-033
      WRITE (MW,1000) MS,I1                                             REST-034
      WRITE (MS) (DW(I),I=1,I1)                                         REST-035
      REWIND MS                                                         REST-036
      RETURN                                                            REST-037
C READ COMMONS,COMPUTES LIMITS OF W AND READ W                          REST-038
    1 READ (MS) I,LO,N1,N2,N3,N4,N5,N6,N7,N8,N9,N0,T                    REST-039
      I1=N3(46)                                                         REST-040
      N3(52)=IDMY                                                       REST-041
      WRITE (MW,1001) TITLE,T,N3(52)                                    REST-042
      IF (N3(98).GT.N3(52)) CALL MEMO('REST',N3(52),N3(98),1)           REST-043
      READ (MS) (DW(I),I=1,I1)                                          REST-044
      REWIND MS                                                         REST-045
C READS ON 5 IF SAVE HAS TO BE DONE AGAIN AND THE NEW NUMBER OF EVAL.   REST-046
C ANY MODIFICATION OF THE SEARCH CAN BE READ AT THIS PLACE IF THEY      REST-047
C DO NOT SPOIL THE SEARCH                                               REST-048
      LO(35)=.FALSE.                                                    REST-049
      READ (MR,1002) LO(35),N,NSEC,ECH,RAP                              REST-050
C N3(17) IS NIW, N3(92) IS NREC                                         REST-051
      IF (N.EQ.0) N=N3(92)+2                                            REST-052
      LO(135)=.NOT.LO(35)                                               REST-053
      M=N3(17)                                                          REST-054
      NW(2,M)=NW(2,M)+N                                                 REST-055
      WRITE (MW,1003) MS,I1                                             REST-056
      WRITE (MW,1004) N,NW(2,M)                                         REST-057
      IF (LO(35)) WRITE (MW,1005) MS                                    REST-058
      IF (LO(135)) WRITE (MW,1006) MS                                   REST-059
      IF (NSEC.EQ.0) GO TO 2                                            REST-060
      N3(43)=NSEC                                                       REST-061
      WRITE (MW,1007) NSEC                                              REST-062
    2 N=N3(14)                                                          REST-063
      IF (ECH.LT.1.D0) GO TO 3                                          REST-064
      WRITE (MW,1008) DW(N),ECH                                         REST-065
      DW(N)=ECH                                                         REST-066
    3 IF (RAP.LT.1.D0) GO TO 4                                          REST-067
      WRITE (MW,1009) DW(N+1),RAP                                       REST-068
      DW(N+1)=RAP                                                       REST-069
    4 RETURN                                                            REST-070
 1000 FORMAT (///15H OUTPUT ON TAPE,I3,24H OF DW FROM DW(1) TO DW(,I6,1HREST-071
     1)///)                                                             REST-072
 1001 FORMAT ('1'//1X,18A4//' RESTART OF COMPUTATION'//' LAST TITLE : ''REST-073
     1''',18A4,''''''//' AVAILABLE WORKING SPACE',I8/)                  REST-074
 1002 FORMAT (L1,I4,I5,2F10.5)                                          REST-075
 1003 FORMAT (' INPUT FROM TAPE',I3,' OF DW FROM DW(1) TO DW(',I6,')'//)REST-076
 1004 FORMAT (/' MAXIMUM NUMBER OF EVALUATIONS INCREASED BY',I4,5X,'NEW REST-077
     1VALUE',I6)                                                        REST-078
 1005 FORMAT (' SAVE ON TAPE',I3,' IF NECESSARY')                       REST-079
 1006 FORMAT (' NO SAVE ON TAPE',I3)                                    REST-080
 1007 FORMAT (5X,I5,' HUND OF SECOND SPARED AT THE END OF THE JOB')     REST-081
 1008 FORMAT (' CHANGE OF ECH FROM',F10.5,' TO',F10.5)                  REST-082
 1009 FORMAT (' CHANGE OF RAP FROM',F10.5,' TO',F10.5)                  REST-083
      END                                                               REST-084
C 01/01/04                                                      ECIS03  FITE-000
      SUBROUTINE FITE(KE,M,N,F,X,E,W,NW,IZ,WA)                          FITE-001
C CHI-SQUARE MINIMISING SUBROUTINE WRITTEN BY G. SCHWEIMER IN KARLSRUHE.FITE-002
C SIMPLIFIED FOR THE USE OF ECIS (NO GRADIENT)                          FITE-003
C SOLVES THE NONLINEAR LEAST SQUARES PROBLEM                            FITE-004
C USING A LEAST SQUARES INTERPOLATION BETWEEN VARIABLES AND FUNCTIONS   FITE-005
C CALLED SUBROUTINES: FIT2 /.TRUE./ (LINEAR LEAST SQUARES PROBLEM)      FITE-006
C                     FIT2 /.FALSE./(INVERSION OF A(TRANSPOSED)*A)      FITE-007
C                     FIT1(ONE DIMENSIONAL MINIMUM SEARCH)              FITE-008
C CALLING SEQUENCE                                                      FITE-009
C     KE=0                                                              FITE-010
C     M=NUMBER OF FUNCTIONS, M GE N                                     FITE-011
C     N=NUMBER OF VARIABLES, N GE 1                                     FITE-012
C     DO 1 I=1,N                                                        FITE-013
C     X(I)=STARTING VALUES OF THE VARIABLES                             FITE-014
C   1 E(I)=ABSOLUTE SEARCH ACCURACIES FOR THE VARIABLES                 FITE-015
C     YY(1)=FIRST STEP SIZE IN UNITS OF E(I)                            FITE-016
C     YY(2)=HALF OF THE SUCCESS MULTIPLICATION FACTOR FOR STEP SIZE     FITE-017
C         THE STEP SIZE IS DIVIDED BY 4 TIMES ITS SQUARE AFTER UNSUCCESSFITE-018
C     IZ(1)=NUMBER OF POINTS TO BE REMEMBERED, IF LE N IZ(1) = N+1      FITE-019
C     IZ(2)=MAXIMUM NUMBER OF FUNCTION EVALUATIONS, IF 0 IZ(2)=2*IZ(1)  FITE-020
C   2 CHI2=0.                                                           FITE-021
C     DO 3 I=1,M                                                        FITE-022
C     F(I)=FUNCTION VALUES AT THE POINT X                               FITE-023
C   3 CHI2=CHI2+F(I)*F(I)                                               FITE-024
C     CALL FITE(KE,M,N,F,X,E,W,W,IZ,WA,CHI2)                            FITE-025
C     IF(KE.EQ.1) GO TO 2                                               FITE-026
C     YY(1)=STEP SIZE  MAXIMUM CHANGE OF A VARIABLE IS 2*YY(1)          FITE-027
C     YY(3)=ERROR RENORMALISATION FACTOR WHEN KE=0,2 OR 3. (SQUARE ROOT FITE-028
C                OF VARIANCE AT BEST FIT DIVIDED BY DEGREE OF FREEDOM)  FITE-029
C         =CHANGED X VALUE IN PREPARATORY CALLS                         FITE-030
C         =RATIO STEP/DISTANCE OF MINIMUM AFTER PREPARATORY CALLS       FITE-031
C              OR 0. FOR RANDOM PREDICTION                              FITE-032
C     X=MINIMUM POINT                                                   FITE-033
C     F=FUNCTIONS AT THE MINIMUM POINT                                  FITE-034
C     KE=ERROR CODE    KE=0: WITHOUT ERRORS                             FITE-035
C                      KE=2: USER INTERRUPT                             FITE-036
C                      KE=3: MAXIMUM NUMBER OF FUNCTION EVALUATIONS     FITE-037
C                      KE=4: ROUNDING ERRORS                            FITE-038
C                      KE=5: THE FUNCTIONS DO NOT DEPEND ON X(IZ(4))    FITE-039
C                      KE=6: USELESS VARIABLES IN THE PREPARATORY CALLS,FITE-040
C                            THE LABELS OF THE VARIABLES ARE IZ(3),IZ(4)FITE-041
C                      KE=7: M LT N                                     FITE-042
C     W(I)=STANDARD ERRORS OF THE VARIABLES. (FOR A VARIANCE AT BEST    FITE-043
C                      FIT EQUAL TO DEGREE OF FREEDOM)                  FITE-044
C     W(N+I)=ERROR ENHANCEMENTS. (MANY/SINGLE VARIABLE RESULT)          FITE-045
C     W(N+N+I+(J*(J-1))/2)=ERROR CORRELATION BETWEEN X(I) AND X(J) I<J  FITE-046
C     IZ(3): NUMBER OF FUNCTION EVALUATIONS                             FITE-047
C     IZ(4): NUMBER OF DEGREES OF FREEDOM IF KE=0,2,3 OR 4              FITE-048
C            PLACE OF USELESS VARIABLE IF KE=5 OR 6                     FITE-049
C            EVENTUALLY INDICATIONS FOR ONE DIMENSIONAL SEARCH IF KE=1  FITE-050
C WORKING FIELD:  IZ: LENGTH 4+K WITH K = IZ(1)                         FITE-051
C     W: LENGTH MAX(14+N+K*(M+N+1),(N*(N+5))/2)                         FITE-052
C     NW: EQUIVALENT BY CALL WITH W                                     FITE-053
C     WA: LENGTH (M+1)*(N+1)+(N*(N+1))/2                                FITE-054
C                  ADDRESSES IN IZ                                      FITE-055
C                      4+L: LABELS OF THE QUADRATIC SUMS                FITE-056
C                  ADDRESSES IN W DURING SEARCH                         FITE-057
C                      1 TO 14 ,EVENTUALLY, INDICATIONS FOR ONE DIMEN-  FITE-058
C                            SIONNAL SEARCH.                            FITE-059
C                      FROM MAX(15,N+1),K SETS(FUNCTIONS+VARIABLES+CHI2)FITE-060
C                  ADDRESSES IN W AFTER THE SEARCH  SEE ABOVE           FITE-061
C                  ADDRESSES IN WA                                      FITE-062
C                      FROM 1 GRADIENT OR MATRIX A FOLLOWED BY CENTRAL  FITE-063
C                              FUNCTIONS                                FITE-064
C                      FROM 1+M*(N+1)  CENTRAL VARIABLES                FITE-065
C                      FROM (N+1)*(M+1) MATRIX D                        FITE-066
C THE WORKING FIELDS IZ AND W CONTAIN ALL INFORMATION TO CONTINUE       FITE-067
C THE SEARCH. THIS ALLOWS A SEARCH WITHIN ANOTHER SEARCH JUST CHANGING  FITE-068
C THE WORKING FIELDS                                                    FITE-069
C***********************************************************************FITE-070
      IMPLICIT REAL*8 (A-H,O-Z)                                         FITE-071
      DIMENSION F(M),X(N),E(N),W(20),IZ(5),WA(1),NW(20)                 FITE-072
      COMMON /DCHI/ CHI2,CHI2M,YY(3)                                    FITE-073
      DATA EPS /1.D-5/                                                  FITE-074
      JD=(M+1)*(N+1)-1                                                  FITE-075
      JS=14+N                                                           FITE-076
      LM=M+N+1                                                          FITE-077
      K=IZ(1)                                                           FITE-078
      IF (KE.NE.0) GO TO 2                                              FITE-079
      IF (M.LT.N) GO TO 39                                              FITE-080
      IZ(3)=1                                                           FITE-081
      IZ(4)=0                                                           FITE-082
      DO 1 L=1,K                                                        FITE-083
      IZ(L+4)=1+K-L                                                     FITE-084
    1 W(JS+LM*L)=7.D35                                                  FITE-085
      IF (YY(2).LT.1.D0) YY(2)=1.D0                                     FITE-086
      KE=1                                                              FITE-087
    2 JM=JS+LM*IZ(5)-LM                                                 FITE-088
      J3=M*N                                                            FITE-089
      KV=K                                                              FITE-090
      IF (CHI2.LE.0.D0) GO TO 38                                        FITE-091
C ROW OF MATRIX S TO BE REPLACED BY NEW VALUES                          FITE-092
      L=IZ(K+4)                                                         FITE-093
      IF (W(JS+LM*L).EQ.7.D35) KV=L-1                                   FITE-094
      DO 3 I=1,K                                                        FITE-095
      J1=JS+LM*IZ(I+4)                                                  FITE-096
      IF (CHI2.LT.W(J1)) GO TO 4                                        FITE-097
    3 CONTINUE                                                          FITE-098
C ONE DIMENSIONAL SEARCH IS NECESSARY                                   FITE-099
      GO TO 30                                                          FITE-100
    4 IF (I.GT.MAX0(N+1,KV)) GO TO 30                                   FITE-101
C VECTOR OF LABELS OF THE QUADRATIC SUMS                                FITE-102
      IF (KV.LT.K) KV=KV+1                                              FITE-103
      I1=K+4                                                            FITE-104
      I2=K-I                                                            FITE-105
      IF ((IZ(3).GT.N+1).AND.(I.NE.1)) YY(1)=YY(1)/(4.D0*YY(2)**3)      FITE-106
      IF (I2.EQ.0) GO TO 6                                              FITE-107
      DO 5 J=1,I2                                                       FITE-108
      I1=I1-1                                                           FITE-109
    5 IZ(I1+1)=IZ(I1)                                                   FITE-110
      IZ(I1)=L                                                          FITE-111
      JM=JS+LM*IZ(5)-LM                                                 FITE-112
C NEW ROW                                                               FITE-113
    6 J1=JS+LM*(L-1)                                                    FITE-114
      DO 7 I=1,M                                                        FITE-115
      J1=J1+1                                                           FITE-116
    7 W(J1)=F(I)                                                        FITE-117
      DO 8 I=1,N                                                        FITE-118
      J1=J1+1                                                           FITE-119
    8 W(J1)=X(I)                                                        FITE-120
      W(J1+1)=CHI2                                                      FITE-121
      IF (IZ(3).GE.IZ(2)) GO TO 43                                      FITE-122
      IF (N.EQ.1) GO TO 35                                              FITE-123
      IF (IZ(3).GT.N+1) GO TO 13                                        FITE-124
C PREPARATORY FUNCTION EVALUATIONS                                      FITE-125
      MF=IZ(3)                                                          FITE-126
      IF (MF.EQ.1) GO TO 12                                             FITE-127
C SIGNIFICANCE OF THE NEW VARIABLE                                      FITE-128
      X(MF-1)=YY(3)                                                     FITE-129
      S=0.D0                                                            FITE-130
      DO 9 I=1,M                                                        FITE-131
      T=F(I)-W(JS+I)                                                    FITE-132
    9 S=S+T*T                                                           FITE-133
      J=2                                                               FITE-134
      IF (S.LT.EPS*EPS*W(JS+LM)) GO TO 41                               FITE-135
      YY(3)=S                                                           FITE-136
      W(MF-1)=DSQRT(YY(3))                                              FITE-137
      IF (MF.LE.2) GO TO 12                                             FITE-138
C INDEPENDENCE OF THE NEW VARIABLE                                      FITE-139
      DO 11 J=3,MF                                                      FITE-140
      I2=JS+LM*(J-2)                                                    FITE-141
      S=0.D0                                                            FITE-142
      DO 10 I=1,M                                                       FITE-143
   10 S=S+(W(I2+I)-W(JS+I))*(F(I)-W(JS+I))                              FITE-144
      IF (DABS(W(MF-1)*W(J-2)-DABS(S)).LT.EPS*DABS(S)) GO TO 40         FITE-145
   11 CONTINUE                                                          FITE-146
   12 IF (MF.EQ.N+1) GO TO 13                                           FITE-147
      YY(3)=X(MF)                                                       FITE-148
      X(MF)=X(MF)+YY(1)*E(MF)                                           FITE-149
      GO TO 64                                                          FITE-150
C END OF PREPARATORY FUNCTION EVALUATIONS                               FITE-151
C SUM OF INVERSES OF THE QUADRATIC SUMS                                 FITE-152
   13 S=0.D0                                                            FITE-153
      DO 14 L=1,KV                                                      FITE-154
      T=W(JS+LM*L)                                                      FITE-155
   14 S=S+1.D0/(T*T)                                                    FITE-156
      WJA=1.D0/S                                                        FITE-157
C CENTRE OF THE VARIABLES AND FUNCTIONS                                 FITE-158
      I1=M+N                                                            FITE-159
      DO 16 I=1,I1                                                      FITE-160
      J1=JS                                                             FITE-161
      S=0.D0                                                            FITE-162
      DO 15 L=1,KV                                                      FITE-163
      T=W(J1+LM)                                                        FITE-164
      S=S+W(J1+I)/(T*T)                                                 FITE-165
   15 J1=J1+LM                                                          FITE-166
   16 WA(J3+I)=S*WJA                                                    FITE-167
      IF (KE.NE.1) GO TO 47                                             FITE-168
C THE LINEAR APPROXIMATION MEANS THAT THE DIFFERENCE WITH CENTRAL VALUE FITE-169
C F(I,K)-F(I) = SUM F(I,J)*(X(J,K)-X(J)) WHERE F(I),X(J) ARE MEAN VALUESFITE-170
C AND F(I,J) IS THE FIRST DERIVATIVE WITH RESPECT TO X(J).              FITE-171
C USING THE MATRIX D(I,J) = WEIGHTED SUM ON (X(I,K)-X(I))*(X(J,K)-X(J)) FITE-172
C AND WRITING THE CHANGE DX = D*Y, THE BEST FIT IS OBTAINED FOR         FITE-173
C ||F-A*Y||=MIN(Y) WITH A(I,J)=WEIGHTED SUM(F(I,K)-F(I)*(X(J,K)-X(J))   FITE-174
C MATRIX A                                                              FITE-175
   17 J1=0                                                              FITE-176
      DO 19 I=1,N                                                       FITE-177
      U=WA(J3+M+I)                                                      FITE-178
      DO 19 J=1,M                                                       FITE-179
      J1=J1+1                                                           FITE-180
      J2=JS                                                             FITE-181
      S=0.D0                                                            FITE-182
      T=WA(J3+J)                                                        FITE-183
      DO 18 L=1,KV                                                      FITE-184
      V=W(J2+LM)                                                        FITE-185
      S=S+(W(J2+J)-T)*(W(J2+M+I)-U)/(V*V)                               FITE-186
   18 J2=J2+LM                                                          FITE-187
   19 WA(J1)=S*WJA                                                      FITE-188
      IF (KE.NE.1) GO TO 50                                             FITE-189
C LINEAR LEAST SQUARES PROBLEM                                          FITE-190
      CALL FIT2(M,N,WA,X,NW,IR,.TRUE.)                                  FITE-191
      IF (IR) 42 , 20 , 28                                              FITE-192
C MATRIX D                                                              FITE-193
   20 J1=JD                                                             FITE-194
      JA=J3+M                                                           FITE-195
      DO 23 I=1,N                                                       FITE-196
      T=WA(JA+I)                                                        FITE-197
      DO 22 J=1,I                                                       FITE-198
      J1=J1+1                                                           FITE-199
      J2=JS+M                                                           FITE-200
      S=0.D0                                                            FITE-201
      U=WA(JA+J)                                                        FITE-202
      DO 21 L=1,KV                                                      FITE-203
      V=W(J2+N+1)                                                       FITE-204
      S=S+(W(J2+I)-T)*(W(J2+J)-U)/(V*V)                                 FITE-205
   21 J2=J2+LM                                                          FITE-206
   22 WA(J1)=S*WJA                                                      FITE-207
   23 CONTINUE                                                          FITE-208
C NEW VARIABLES                                                         FITE-209
      DO 25 I=1,N                                                       FITE-210
      I2=1                                                              FITE-211
      J1=JD+(I*I-I)/2                                                   FITE-212
      S=0.D0                                                            FITE-213
      DO 24 J=1,N                                                       FITE-214
      J1=J1+I2                                                          FITE-215
      IF (J.GE.I) I2=J                                                  FITE-216
   24 S=S+WA(J1)*X(J)                                                   FITE-217
   25 WA(I)=WA(JA+I)-S                                                  FITE-218
C TEST OF CONVERGENCE                                                   FITE-219
      A=0.D0                                                            FITE-220
      DO 26 I=1,N                                                       FITE-221
      W(I)=WA(I)-W(JM+M+I)                                              FITE-222
   26 A=DMAX1(A,DABS(W(I)/E(I)))                                        FITE-223
      YY(1)=YY(1)*YY(2)                                                 FITE-224
      IF (A.LT.1.D0.OR.YY(1).LT.1.D0) GO TO 38                          FITE-225
      YY(3)=1.D0                                                        FITE-226
C STEP SIZE LIMITATION                                                  FITE-227
      IF (A.GT.2.D0*YY(1)) YY(3)=2.D0*YY(1)/A                           FITE-228
      DO 27 I=1,N                                                       FITE-229
   27 X(I)=W(JM+M+I)+YY(3)*W(I)                                         FITE-230
      IZ(4)=0                                                           FITE-231
      YY(1)=A*YY(3)                                                     FITE-232
      GO TO 64                                                          FITE-233
C RANDOM PREDICTION                                                     FITE-234
   28 DO 29 I=1,N                                                       FITE-235
   29 X(I)=W(JM+M+I)+YY(1)*E(I)*DFLOAT(MOD(IABS(NW(JM+I)),200)-100)/100.FITE-236
     1D0                                                                FITE-237
      YY(3)=0.D0                                                        FITE-238
      GO TO 64                                                          FITE-239
C ONE DIMENSIONAL SEARCH                                                FITE-240
   30 IF (N.EQ.1) GO TO 36                                              FITE-241
      IF (IZ(3).GE.IZ(2)) GO TO 43                                      FITE-242
      IF (IZ(4).EQ.2) GO TO 32                                          FITE-243
      IZ(4)=2                                                           FITE-244
      DO 31 I=1,N                                                       FITE-245
   31 W(I+14)=X(I)-W(JM+M+I)                                            FITE-246
      NW(1)=3                                                           FITE-247
      NW(2)=20                                                          FITE-248
      W(4)=0.5D0                                                        FITE-249
      W(7)=0.D0                                                         FITE-250
      W(8)=0.D0                                                         FITE-251
      W(9)=0.D0                                                         FITE-252
      W(10)=1.D0                                                        FITE-253
      W(12)=W(JM+LM)                                                    FITE-254
      W(13)=CHI2                                                        FITE-255
      GO TO 33                                                          FITE-256
   32 W(5)=CHI2                                                         FITE-257
      CALL FIT1(KE,NW,W(4))                                             FITE-258
   33 DO 34 I=1,N                                                       FITE-259
   34 X(I)=W(JM+M+I)+W(4)*W(I+14)                                       FITE-260
      IF (KE.EQ.3) KE=2                                                 FITE-261
      IF (KE.EQ.2) GO TO 43                                             FITE-262
      KE=1                                                              FITE-263
      YY(3)=W(4)                                                        FITE-264
      GO TO 64                                                          FITE-265
C ONLY ONE VARIABLE X                                                   FITE-266
   35 IF (IZ(3).GT.1) GO TO 36                                          FITE-267
      KE=0                                                              FITE-268
      W(6)=YY(1)*E(1)                                                   FITE-269
      W(7)=E(1)                                                         FITE-270
      W(8)=0.D0                                                         FITE-271
   36 NW(2)=IZ(2)                                                       FITE-272
      W(4)=X(1)                                                         FITE-273
      W(5)=CHI2                                                         FITE-274
      CALL FIT1(KE,NW,W(4))                                             FITE-275
      IZ(4)=2                                                           FITE-276
      X(1)=W(4)                                                         FITE-277
      IF (KE.EQ.1) GO TO 64                                             FITE-278
      IF (KE.GT.0) KE=KE+1                                              FITE-279
      YY(3)=0.D0                                                        FITE-280
      W(1)=0.D0                                                         FITE-281
      DO 37 J=1,M                                                       FITE-282
   37 F(J)=W(JM+I)                                                      FITE-283
      CHI2=W(JM+LM)                                                     FITE-284
      X(1)=W(JM+LM-1)                                                   FITE-285
      IF (NW(2).NE.0) GO TO 63                                          FITE-286
      W(1)=DSQRT(DABS((W(9)-W(11))/((W(12)-W(13))/(W(9)-W(10))-(W(13)-W(FITE-287
     114))/(W(10)-W(11)))))                                             FITE-288
      W(2)=1.D0                                                         FITE-289
      W(3)=1.D0                                                         FITE-290
      GO TO 60                                                          FITE-291
C END OF SEARCH                                                         FITE-292
   38 KE=0                                                              FITE-293
      IF (CHI2.EQ.0.D0.OR.IZ(2).LT.0) GO TO 64                          FITE-294
      GO TO 44                                                          FITE-295
C ERROR CODE DEFINITION                                                 FITE-296
   39 KE=KE+1                                                           FITE-297
   40 KE=KE+1                                                           FITE-298
   41 KE=KE+1                                                           FITE-299
   42 KE=KE+1                                                           FITE-300
   43 KE=KE+1                                                           FITE-301
      KE=KE+1                                                           FITE-302
C RESTORE OPTIMUM VALUES TO X AND F                                     FITE-303
   44 DO 45 I=1,M                                                       FITE-304
   45 F(I)=W(JM+I)                                                      FITE-305
      DO 46 I=1,N                                                       FITE-306
      X(I)=W(JM+M+I)                                                    FITE-307
   46 W(I)=0.D0                                                         FITE-308
      YY(3)=0.D0                                                        FITE-309
      CHI2=W(JM+LM)                                                     FITE-310
      IF (KE*(KE-3).NE.0.OR.(KE.EQ.3.AND.((YY(3).EQ.0.D0.AND.IZ(3).LE.N)FITE-311
     1))) GO TO 63                                                      FITE-312
C COMPUTATION OF THE ERRORS OF THE VARIABLES - RESTORE MATRIX G         FITE-313
      KV=MIN0(K,IZ(3))                                                  FITE-314
      GO TO 13                                                          FITE-315
C INVERSE OF MATRIX D                                                   FITE-316
   47 T=DSQRT(WJA)                                                      FITE-317
      J1=0                                                              FITE-318
      DO 49 I=1,N                                                       FITE-319
      S=WA(J3+M+I)                                                      FITE-320
      J2=JS+I-LM+M                                                      FITE-321
      DO 48 L=1,KV                                                      FITE-322
      J1=J1+1                                                           FITE-323
   48 WA(J1)=T*(W(J2+L*LM)-S)/W(JS+L*LM)                                FITE-324
   49 CONTINUE                                                          FITE-325
      CALL FIT2(KV,N,WA,WA(JD+1),NW,IR,.FALSE.)                         FITE-326
      IF (IR) 63 , 17 , 63                                              FITE-327
C MATRIX G = A*INVERSE OF D                                             FITE-328
   50 DO 54 L=1,M                                                       FITE-329
      J1=L-M                                                            FITE-330
      DO 52 I=1,N                                                       FITE-331
      I1=JD+(I*I-I)/2                                                   FITE-332
      I2=1                                                              FITE-333
      S=0.D0                                                            FITE-334
      DO 51 J=1,N                                                       FITE-335
      I1=I1+I2                                                          FITE-336
      IF (J.GE.I) I2=J                                                  FITE-337
   51 S=S+WA(I1)*WA(J1+J*M)                                             FITE-338
   52 W(I)=S                                                            FITE-339
      DO 53 J=1,N                                                       FITE-340
   53 WA(J1+J*M)=W(J)                                                   FITE-341
   54 CONTINUE                                                          FITE-342
C DIAGONAL ELEMENTS OF G(T)*G                                           FITE-343
      J1=0                                                              FITE-344
      DO 56 I=1,N                                                       FITE-345
      S=0.D0                                                            FITE-346
      DO 55 L=1,M                                                       FITE-347
      J1=J1+1                                                           FITE-348
   55 S=S+WA(J1)*WA(J1)                                                 FITE-349
   56 W(N+I)=DSQRT(S)                                                   FITE-350
C STANDARD ERRORS AND ERROR CORRELATIONS                                FITE-351
      CALL FIT2(M,N,WA,W(2*N+1),NW,IR,.FALSE.)                          FITE-352
      IF (IR.NE.0) GO TO 63                                             FITE-353
      DO 57 I=1,N                                                       FITE-354
      JDI=2*N+(I*I+I)/2                                                 FITE-355
      W(I)=DSQRT(W(JDI))                                                FITE-356
   57 W(N+I)=W(I)*W(N+I)                                                FITE-357
      J1=2*N                                                            FITE-358
      DO 59 I=1,N                                                       FITE-359
      DO 58 J=1,I                                                       FITE-360
      J1=J1+1                                                           FITE-361
   58 W(J1)=W(J1)/(W(I)*W(J))                                           FITE-362
   59 CONTINUE                                                          FITE-363
C ERROR RENORMALISATION FACTOR                                          FITE-364
   60 S=0.D0                                                            FITE-365
      DO 61 I=1,M                                                       FITE-366
   61 S=S+F(I)                                                          FITE-367
      YY(3)=DSQRT(DABS(CHI2-S*S/M)/MAX0(M-N-1,1))                       FITE-368
      DO 62 I=1,N                                                       FITE-369
   62 W(I)=W(I)*YY(3)                                                   FITE-370
   63 IZ(4)=M-N-1                                                       FITE-371
      IF ((KE-5)*(KE-6).NE.0) GO TO 64                                  FITE-372
      IZ(3)=J-2                                                         FITE-373
      IZ(4)=MF-1                                                        FITE-374
   64 IF (KE.EQ.1) IZ(3)=IZ(3)+1                                        FITE-375
      RETURN                                                            FITE-376
      END                                                               FITE-377
C 01/01/04                                                      ECIS03  FIT1-000
      SUBROUTINE FIT1(KE,I,W)                                           FIT1-001
C MINIMISATION OF A FUNCTION F(X) OF ONE VARIABLE X                     FIT1-002
C CALLING SEQUENCE                                                      FIT1-003
C    KE=0                                                               FIT1-004
C    I(2)=MAXIMUM NUMBER OF FUNCTION EVALUATIONS                        FIT1-005
C    W(1)=START VALUE OF X                                              FIT1-006
C    W(3)=FIRST STEP SIZE                                               FIT1-007
C    W(4)=ABSOLUTE SEARCH ACCURACY                                      FIT1-008
C    W(5)=RELATIVE SEARCH ACCURACY                                      FIT1-009
C  1 W(2)=FUNCTION VALUE F(X) AT X=W(1)                                 FIT1-010
C    CALL FIT1(KE,I,W)                                                  FIT1-011
C    IF(KE.EQ.1) GO TO 1                                                FIT1-012
C    XMIN=W(1)                                                          FIT1-013
C    FMIN=W(2)                                                          FIT1-014
C KE = ERROR CODE: KE=0 NO ERRORS, KE=                                  FIT1-015
C  2 MAXIMUM NUMBER OF FUNCTION EVALUATIONS                             FIT1-016
C  3 ROUNDING ERRORS, PROBABLY BECAUSE BOTH W(4) AND W(5) ARE TOO SMALL FIT1-017
C THE WORKING FIELDS I AND W HAVE THE LENGTH 3 AND 11 RESPECTIVELY      FIT1-018
C THEY CONTAIN ALL INFORMATION FOR THE CONTINUATION OF THE SEARCH       FIT1-019
C THEREFORE A SEARCH WITHIN ANOTHER SEARCH CAN BE DONE JUST CHANGING    FIT1-020
C THE WORKING FIELDS                                                    FIT1-021
C IF 2 FUNCTION VALUES F1 AND F2 ARE KNOWN FOR X = X1 AND X2 RESPECTIVE FIT1-022
C LY WITH X1 NE X2 ENTER THE CALLING SEQUENCE AFTER DEFINING :          FIT1-023
C KE = 1; I(1) = 3; W(6) = X1; W(7) = X2; W(9) = F1; W(10) = F2 AND     FIT1-024
C W(1) = USERS CHOICE                                                   FIT1-025
C WORKING FIELD VARIABLES:                                              FIT1-026
C I(1): CURRENT NUMBER OF FUNCTION EVALUATIONS                          FIT1-027
C I(2): MAXIMUM NUMBER OF FUNCTION EVALUATIONS                          FIT1-028
C I(3): MINIMUM POINTER, THE MINIMUM FUNCTION VALUE IS AT W(7+I(3))     FIT1-029
C W(1): CURRENT VALUE OF X                                              FIT1-030
C W(2): USER SUPPLIED FUNCTION VALUE                                    FIT1-031
C W(3): FIRST STEP SIZE                                                 FIT1-032
C W(4 AND 5): SEARCH ACCURACIES                                         FIT1-033
C W(6, 7 AND 8): X1, X2 AND X3 WITH X1 < X2 < X3                        FIT1-034
C W(9, 10 AND 11): FUNCTION VALUES AT X1, X2 AND X3 RESPECTIVELY        FIT1-035
C***********************************************************************FIT1-036
      IMPLICIT REAL*8 (A-H,O-Z)                                         FIT1-037
      DIMENSION I(3),W(11)                                              FIT1-038
      IF (KE.EQ.1) GO TO 2                                              FIT1-039
      KE=1                                                              FIT1-040
      I(1)=1                                                            FIT1-041
      I(3)=-1                                                           FIT1-042
      W(6)=W(1)                                                         FIT1-043
      W(9)=W(2)                                                         FIT1-044
    1 W(1)=W(1)+W(3)                                                    FIT1-045
      GO TO 11                                                          FIT1-046
    2 IF (I(1).GT.2) GO TO 3                                            FIT1-047
      I(3)=0                                                            FIT1-048
      W(7)=W(1)                                                         FIT1-049
      W(10)=W(2)                                                        FIT1-050
      IF (W(2).LE.W(9)) GO TO 1                                         FIT1-051
      I(3)=-1                                                           FIT1-052
      W(1)=W(6)-W(3)                                                    FIT1-053
      GO TO 11                                                          FIT1-054
    3 IF (I(1).GT.3) GO TO 5                                            FIT1-055
      W(8)=W(1)                                                         FIT1-056
      W(11)=W(2)                                                        FIT1-057
C ORDERING OF THE 3 FIRST VALUES OF X: W(6) < W(7) < W(8)               FIT1-058
      DO 4 J=1,3                                                        FIT1-059
      K=7-MOD(J,2)                                                      FIT1-060
      IF (W(K).LE.W(K+1)) GO TO 4                                       FIT1-061
      W(1)=W(K)                                                         FIT1-062
      W(K)=W(K+1)                                                       FIT1-063
      W(K+1)=W(1)                                                       FIT1-064
      K=K+3                                                             FIT1-065
      W(1)=W(K)                                                         FIT1-066
      W(K)=W(K+1)                                                       FIT1-067
      W(K+1)=W(1)                                                       FIT1-068
    4 CONTINUE                                                          FIT1-069
      I(3)=0                                                            FIT1-070
      IF (W(9).LT.W(10).AND.W(9).LT.W(11)) I(3)=-1                      FIT1-071
      IF (W(11).LT.W(10).AND.W(11).LT.W(9)) I(3)=1                      FIT1-072
      GO TO 9                                                           FIT1-073
C SORT IN THE NEW VALUES OF X AND F                                     FIT1-074
    5 IF (I(3).EQ.0) GO TO 6                                            FIT1-075
      J=I(3)                                                            FIT1-076
      W(7-J)=W(7)                                                       FIT1-077
      W(10-J)=W(10)                                                     FIT1-078
      IF ((W(7+J)-W(1))*(W(1)-W(7)).GT.0.D0) GO TO 7                    FIT1-079
      W(7)=W(7+J)                                                       FIT1-080
      W(10)=W(10+J)                                                     FIT1-081
      W(7+J)=W(1)                                                       FIT1-082
      W(10+J)=W(2)                                                      FIT1-083
      IF (W(2).GE.W(10)) I(3)=0                                         FIT1-084
      GO TO 9                                                           FIT1-085
    6 J=-1                                                              FIT1-086
      IF (W(1).LT.W(7)) J=1                                             FIT1-087
      IF (W(2).GT.W(10)) GO TO 8                                        FIT1-088
      W(7+J)=W(7)                                                       FIT1-089
      W(10+J)=W(10)                                                     FIT1-090
    7 W(7)=W(1)                                                         FIT1-091
      W(10)=W(2)                                                        FIT1-092
      I31=I(3)+10                                                       FIT1-093
      IF (W(2).LE.W(I31)) I(3)=0                                        FIT1-094
      GO TO 9                                                           FIT1-095
    8 W(7-J)=W(1)                                                       FIT1-096
      W(10-J)=W(2)                                                      FIT1-097
    9 J=7+I(3)                                                          FIT1-098
C ERROR TESTS                                                           FIT1-099
      IF (W(6).EQ.W(7).OR.W(7).EQ.W(8).OR.(W(9).EQ.W(10).AND.W(10).EQ.W(FIT1-100
     111))) GO TO 14                                                    FIT1-101
      IF (I(1).GE.I(2)) GO TO 15                                        FIT1-102
      IF (I(3).EQ.0) GO TO 10                                           FIT1-103
C STEP SIZE LIMITATION                                                  FIT1-104
      W(1)=W(J)+(2*I(3))*DABS(W(6)-W(8))                                FIT1-105
      GO TO 11                                                          FIT1-106
C PREDICTION OF THE POSITION OF THE MINIMUM (PARABOLIC APPROXIMATION)   FIT1-107
   10 W(1)=((W(9)-W(10))/(W(6)-W(7))-(W(10)-W(11))/(W(7)-W(8)))/(W(6)-W(FIT1-108
     18))                                                               FIT1-109
      W(1)=.5D0*(W(6)+W(8)+(W(11)-W(9))/(W(1)*(W(6)-W(8))))             FIT1-110
C TEST OF CONVERGENCE                                                   FIT1-111
      W(2)=DABS(W(1)-W(J))                                              FIT1-112
      IF (W(2).LT.DABS(W(4)).OR.W(2).LT.DABS(W(5)*W(J))) GO TO 12       FIT1-113
   11 I(1)=I(1)+1                                                       FIT1-114
      RETURN                                                            FIT1-115
   12 KE=0                                                              FIT1-116
   13 I37=I(3)+7                                                        FIT1-117
      W(1)=W(I37)                                                       FIT1-118
      I31=I(3)+10                                                       FIT1-119
      W(2)=W(I31)                                                       FIT1-120
      RETURN                                                            FIT1-121
   14 KE=KE+1                                                           FIT1-122
   15 KE=KE+1                                                           FIT1-123
      GO TO 13                                                          FIT1-124
      END                                                               FIT1-125
C 01/01/04                                                      ECIS03  FIT2-000
      SUBROUTINE FIT2(M,N,A,D,IP,IR,LLO)                                FIT2-001
C IF LLO=.TRUE. EX SUBROUTINE LILESQ WRITTEN BY SCHWEIMER.              FIT2-002
C  LINEAR LEAST SQUARES PROBLEM ||B-A*D||=MIN(D)                        FIT2-003
C  SOLVED BY HOUSEHOLDER TRANSFORMATIONS                                FIT2-004
C INPUT VARIABLES: M: NUMBER OF ROWS OF A AND B                         FIT2-005
C                  N: NUMBER OF COLUMNS OF A AND ROWS OF D              FIT2-006
C                  A: M*N MATRIX FOLLOWED BY THE VECTOR B OF M COMPO-   FIT2-007
C                                  NENTS (DESTROYED)                    FIT2-008
C OUTPUT VARIABLES:D: VECTOR OF VARIABLES, THE REDUNDANT VARIABLES ARE  FIT2-009
C                    SET TO ZERO. THE ||D||=MIN IS NOT USED BECAUSE THE FIT2-010
C                    COMPONENTS OF D ARE ASSUMED TO BE NOT COMMENSURABLEFIT2-011
C                  IP: PERMUTATION VECTOR OF N COMPONENTS, IT CONTAINS  FIT2-012
C                    THE COLUMN LABELS OF MATRIX A ORDERED ACCORDING    FIT2-013
C                    THEIR IMPORTANCE IN REDUCING THE EUCLIDEAN NORM    FIT2-014
C                  A: THE UPPER PART CONTAINS THE TRANSFORMED INPUT A   FIT2-015
C                    A(2,1) CONTAINS THE SQUARE OF THE EUCLIDEAN NORM   FIT2-016
C                  IR: ERROR CODE                                       FIT2-017
C                    IR=0 NO ERROR                                      FIT2-018
C                    IR=-1 ALL COMPONENTS OF D ARE ZERO AND MAY BE      FIT2-019
C                    REDUNDANT                                          FIT2-020
C                    IR>0 THE FIRST IR COMPONENTS OF IP CONTAIN THE     FIT2-021
C                    LABELS OF THE NONZERO COMPONENTS OF D, THE REMAI-  FIT2-022
C                    NING COMPONENTS OF D ARE ZERO AND MAY BE REDUNDANT FIT2-023
C  NOTE: ALL ARITHMETIC OPERATIONS ARE PERFORMED IN DOUBLE PRECISION,   FIT2-024
C  AN ITERATIVE IMPROVEMENT IS IMPOSSIBLE WITHOUT SAVING A AND B.       FIT2-025
C  THE ROUND OFF ERROR OF ||B-A*D||**2 IS APPROXIMATELY GIVEN BY        FIT2-026
C  ||B(INITIAL)||**2 - ||B(TRANSFORMED)||**2                            FIT2-027
C                                                                       FIT2-028
C IF LLO=.FALSE. EX SUBROUTINE INVATA WRITTEN BY SCHWEIMER.             FIT2-029
C  INVERSION OF THE PRODUCT MATRIX A(TRANSPOSED)*A                      FIT2-030
C  THE MATRIX A IS REDUCED TO AN UPPER TRIANGULAR MATRIX R BY           FIT2-031
C  HOUSEHOLDER TRANSFORMATIONS. THE REMAINING COMPUTATION IS STRAIGHT   FIT2-032
C  FORWARD.                                                             FIT2-033
C INPUT VARIABLES: N: NUMBER OF COLUMNS OF MATRIX A                     FIT2-034
C                  M: NUMBER OF ROWS OF MATRIX A, M >= N > 0            FIT2-035
C                  A: INPUT MATRIX (DESTROYED)                          FIT2-036
C OUTPUT VARIABLES:  IR: ERROR CODE                                     FIT2-037
C                    IR=-1 RANK OF MATRIX A IS ZERO                     FIT2-038
C                    IR=0 NO ERROR, RANK OF MATRIX A IS N               FIT2-039
C                    IR>0 RANK OF MATRIX A IS IR, THE INVERSE OF A(T)*A FIT2-040
C                    IS COMPUTED CONSIDERING THE IR COLUMNS OF A INDICA-FIT2-041
C                    TED BY THE FIRST IR COMPONENTS OF IP               FIT2-042
C                  A: TRIANGULAR MATRIX R, R=A(I,J) I<=J=1,N            FIT2-043
C                  D: VECTOR OF LENGTH (N*(N+1))/2, IT CONTAINS THE     FIT2-044
C                    UPPER TRIANGULAR PART OF THE INVERSE OF A(T)*A     FIT2-045
C                  IP: PERMUTATION VECTOR OF LENGTH N, ITS FIRST IR     FIT2-046
C                    COMPONENTS CONTAIN THE LABELS OF THE USEFUL        FIT2-047
C                    COLUMNS OF A, THE LAST COMPONENTS CONTAIN THE      FIT2-048
C                    LABELS OF THE COLUMNS WHICH ARE LINEAR COMBINATIONSFIT2-049
C                    OF THE FIRST.                                      FIT2-050
C***********************************************************************FIT2-051
      IMPLICIT REAL*8 (A-H,O-Z)                                         FIT2-052
      LOGICAL LLO                                                       FIT2-053
      DIMENSION A(M,N),D(N),IP(N)                                       FIT2-054
      IR=0                                                              FIT2-055
      N1=N                                                              FIT2-056
      IF (LLO) N1=N+1                                                   FIT2-057
      DO 1 J=1,N                                                        FIT2-058
    1 IP(J)=J                                                           FIT2-059
C ROTATION LOOP                                                         FIT2-060
      DO 13 K=1,N                                                       FIT2-061
C PIVOT ELEMENT    COLUMN J WHICH GENERATES THE LARGEST NEW A(*,M) AND  FIT2-062
C AND LINE I OF THE LARGEST ELEMENT OF COLUMN J IF LLO=.TRUE.           FIT2-063
C COLUMN AND LINE OF LARGEST ELEMENT IF LLO=.FALSE.                     FIT2-064
      U=0.D0                                                            FIT2-065
      DO 7 J=K,N                                                        FIT2-066
      C=0.D0                                                            FIT2-067
      DO 2 I=K,M                                                        FIT2-068
      IF (DABS(A(I,J)).LE.DABS(C)) GO TO 2                              FIT2-069
      L2=I                                                              FIT2-070
      C=A(I,J)                                                          FIT2-071
    2 CONTINUE                                                          FIT2-072
      IF (C.EQ.0.D0) GO TO 7                                            FIT2-073
      S=0.D0                                                            FIT2-074
      IF (LLO) GO TO 4                                                  FIT2-075
      IF (DABS(C).LT.U) GO TO 7                                         FIT2-076
      U=DABS(C)                                                         FIT2-077
      DO 3 I=K,M                                                        FIT2-078
      V=A(I,J)/C                                                        FIT2-079
    3 S=S+V*V                                                           FIT2-080
      GO TO 6                                                           FIT2-081
    4 T=0.D0                                                            FIT2-082
      DO 5 I=K,M                                                        FIT2-083
      V=A(I,J)/C                                                        FIT2-084
      S=S+V*V                                                           FIT2-085
    5 T=T+V*A(I,N1)                                                     FIT2-086
      IF (U.GE.T*(T/S)) GO TO 7                                         FIT2-087
      U=T*(T/S)                                                         FIT2-088
    6 SIG=C*DSQRT(S)                                                    FIT2-089
      L=J                                                               FIT2-090
      L1=L2                                                             FIT2-091
    7 CONTINUE                                                          FIT2-092
      IF (U.EQ.0.D0) GO TO 14                                           FIT2-093
C PERMUTE COLUMNS OF A(K)                                               FIT2-094
      I=IP(L)                                                           FIT2-095
      IP(L)=IP(K)                                                       FIT2-096
      IP(K)=I                                                           FIT2-097
      DO 8 I=1,M                                                        FIT2-098
      C=A(I,L)                                                          FIT2-099
      A(I,L)=A(I,K)                                                     FIT2-100
    8 A(I,K)=C                                                          FIT2-101
C PERMUTE LINES OF A(K)                                                 FIT2-102
      DO 9 J=K,N1                                                       FIT2-103
      C=A(K,J)                                                          FIT2-104
      A(K,J)=A(L1,J)                                                    FIT2-105
    9 A(L1,J)=C                                                         FIT2-106
C ROTATION OF THE LOWER COLUMN FRAGMENT OF A(K) AND B(K)                FIT2-107
      U=SIG+A(K,K)                                                      FIT2-108
      V=A(K,K)/SIG                                                      FIT2-109
      A(K,K)=-SIG                                                       FIT2-110
      L=K+1                                                             FIT2-111
      IF (L.GT.M) A(K,L)=-A(K,L)                                        FIT2-112
      IF (L.GT.N1.OR.L.GT.M) GO TO 13                                   FIT2-113
      DO 12 J=L,N1                                                      FIT2-114
      S=V*A(K,J)                                                        FIT2-115
      DO 10 I=L,M                                                       FIT2-116
      T=A(I,K)/SIG                                                      FIT2-117
   10 S=S+T*A(I,J)                                                      FIT2-118
      T=(A(K,J)+S)/U                                                    FIT2-119
      A(K,J)=-S                                                         FIT2-120
      DO 11 I=L,M                                                       FIT2-121
   11 A(I,J)=A(I,J)-T*A(I,K)                                            FIT2-122
   12 CONTINUE                                                          FIT2-123
   13 CONTINUE                                                          FIT2-124
C END OF ROTATION LOOP                                                  FIT2-125
      K=N                                                               FIT2-126
      GO TO 15                                                          FIT2-127
   14 K=K-1                                                             FIT2-128
      IR=K                                                              FIT2-129
   15 IF (LLO) GO TO 22                                                 FIT2-130
      IF (K.EQ.0) GO TO 29                                              FIT2-131
C INVERSE OF THE TRIANGULAR MATRIX R STORED IN D                        FIT2-132
      DO 18 J=1,K                                                       FIT2-133
      D(J)=A(J,J)                                                       FIT2-134
      A(J,J)=1.D0/D(J)                                                  FIT2-135
      IF (J.EQ.1) GO TO 18                                              FIT2-136
      I=J                                                               FIT2-137
      DO 17 L=2,J                                                       FIT2-138
      I1=I                                                              FIT2-139
      I=I-1                                                             FIT2-140
      S=0.D0                                                            FIT2-141
      DO 16 L1=I1,J                                                     FIT2-142
   16 S=S+A(I,L1)*A(J,L1)                                               FIT2-143
   17 A(J,I)=-S/D(I)                                                    FIT2-144
   18 CONTINUE                                                          FIT2-145
C INVERSE OF THE PRODUCT MATRIX                                         FIT2-146
      DO 21 J=1,K                                                       FIT2-147
      DO 20 I=1,J                                                       FIT2-148
      L=MAX0(IP(J),IP(I))                                               FIT2-149
      IJ=IP(I)+IP(J)+(L*(L-3))/2                                        FIT2-150
      S=0.D0                                                            FIT2-151
      DO 19 L1=J,K                                                      FIT2-152
   19 S=S+A(L1,I)*A(L1,J)                                               FIT2-153
   20 D(IJ)=S                                                           FIT2-154
   21 CONTINUE                                                          FIT2-155
      GO TO 30                                                          FIT2-156
C SQUARE OF THE EUCLIDEAN NORM                                          FIT2-157
   22 S=0.D0                                                            FIT2-158
      L=K+1                                                             FIT2-159
      IF (K.EQ.M) GO TO 24                                              FIT2-160
      DO 23 I=L,M                                                       FIT2-161
   23 S=S+A(I,N1)*A(I,N1)                                               FIT2-162
   24 A(2,1)=S                                                          FIT2-163
      IF (K.EQ.N) GO TO 26                                              FIT2-164
C COMPONENTS OF D WHICH DO NOT REDUCE THE EUCLIDEAN NORM                FIT2-165
      DO 25 J=L,N                                                       FIT2-166
      IJ=IP(J)                                                          FIT2-167
   25 D(IJ)=0.D0                                                        FIT2-168
      IF (K.EQ.0) GO TO 29                                              FIT2-169
C COMPUTATION OF D                                                      FIT2-170
   26 IJ=IP(K)                                                          FIT2-171
      D(IJ)=A(K,N1)/A(K,K)                                              FIT2-172
      IF (K.EQ.1) GO TO 30                                              FIT2-173
      DO 28 J=2,K                                                       FIT2-174
      L=K+2-J                                                           FIT2-175
      S=A(L-1,N1)                                                       FIT2-176
      DO 27 I=L,K                                                       FIT2-177
      IJ=IP(I)                                                          FIT2-178
   27 S=S-A(L-1,I)*D(IJ)                                                FIT2-179
      IJ=IP(L-1)                                                        FIT2-180
   28 D(IJ)=S/A(L-1,L-1)                                                FIT2-181
      GO TO 30                                                          FIT2-182
C ERROR CODE                                                            FIT2-183
   29 IR=-1                                                             FIT2-184
   30 RETURN                                                            FIT2-185
      END                                                               FIT2-186